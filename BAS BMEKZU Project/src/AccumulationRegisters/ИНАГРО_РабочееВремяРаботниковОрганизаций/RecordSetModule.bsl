#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьПерерасчеты();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьПерерасчеты();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗарегистрироватьПерерасчеты()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Основные.Сотрудник,
	|	Основные.Регистратор КАК Регистратор
	|
	|ИЗ	РегистрНакопления.ИНАГРО_РабочееВремяРаботниковОрганизаций КАК РабочееВремя
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ИНАГРО_Начисления КАК Основные
	|ПО	РабочееВремя.Период >= Основные.ПериодДействияНачало
	|И	РабочееВремя.Период <= Основные.ПериодДействияКонец
	|И	РабочееВремя.Сотрудник = Основные.Сотрудник
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ИНАГРО_Начисления.ИНАГРО_ПерерасчетНачислений КАК Перерасчеты
	|ПО	Перерасчеты.ОбъектПерерасчета = Основные.Регистратор
	|И	Перерасчеты.Сотрудник = Основные.Сотрудник
	|И	Перерасчеты.ВидРасчета = &ПустойВидРасчета
	|
	|ГДЕ
	|	РабочееВремя.Регистратор = &Регистратор
	|	И Перерасчеты.Сотрудник ЕСТЬ NULL 
	|	И Основные.Регистратор ЕСТЬ НЕ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор");
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ПустойВидРасчета", ПланыВидовРасчета.ИНАГРО_Начисления.ПустаяСсылка());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли