#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.Параметры.Свойство("СтрокаПоиска") Тогда
		СтрокаПоиска = ЭтаФорма.Параметры.СтрокаПоиска;
	КонецЕсли;
	
	Макет = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПолучитьМакет("Классификатор");
	ТабДокумент.Вывести(Макет);
	ТабДокумент.ФиксацияСверху = 1;
	
	ОбластьНаименованиеЛево                                  = Макет.Области.Наименование.Лево;
	ОбластьНаименованиеПраво                                 = Макет.Области.Наименование.Право;
	ОбластьПолноеНаименованиеЛево                            = Макет.Области.ПолноеНаименование.Лево;
	ОбластьПолноеНаименованиеПраво                           = Макет.Области.ПолноеНаименование.Право;
	ОбластьТипХарактеристикиЛево                             = Макет.Области.ТипХарактеристики.Лево;
	ОбластьТипХарактеристикиПраво                            = Макет.Области.ТипХарактеристики.Право;
	ОбластьПоказыватьВСКЛево                                 = Макет.Области.ПоказыватьВСК.Лево;
	ОбластьПоказыватьВСКПраво                                = Макет.Области.ПоказыватьВСК.Право;
	ОбластьПоказыватьВЖурналеЛабораторныхАнализовЛево        = Макет.Области.ПоказыватьВЖурналеЛабораторныхАнализов.Лево;
	ОбластьПоказыватьВЖурналеЛабораторныхАнализовПраво       = Макет.Области.ПоказыватьВЖурналеЛабораторныхАнализов.Право;
	ОбластьПорядокЛево                                       = Макет.Области.Порядок.Лево;
	ОбластьПорядокПраво                                      = Макет.Области.Порядок.Право;
	ОбластьDRU_ТипХарактеристикиЛево                         = Макет.Области.DRU_ТипХарактеристики.Лево;
	ОбластьDRU_ТипХарактеристикиПраво                        = Макет.Области.DRU_ТипХарактеристики.Право;
	ОбластьDRU_КодХарактеристикиСкладскогоСвидетельстваЛево  = Макет.Области.DRU_КодХарактеристикиСкладскогоСвидетельства.Лево;
	ОбластьDRU_КодХарактеристикиСкладскогоСвидетельстваПраво = Макет.Области.DRU_КодХарактеристикиСкладскогоСвидетельства.Право;
	ОбластьDRU_КодХарактеристикиСкладскойКвитанцииЛево       = Макет.Области.DRU_КодХарактеристикиСкладскойКвитанции.Лево;
	ОбластьDRU_КодХарактеристикиСкладскойКвитанцииПраво      = Макет.Области.DRU_КодХарактеристикиСкладскойКвитанции.Право;
	
	Если НЕ ПустаяСтрока(СтрокаПоиска) Тогда
		НайденнаяОбласть = ТабДокумент.НайтиТекст(СтрокаПоиска, , ТабДокумент.Области.Наименование, , , , Истина);
		Элементы.ТабДокумент.ТекущаяОбласть = НайденнаяОбласть;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	ИскатьСтрокуВТаблице(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормы

&НаКлиенте
Процедура ТабДокументВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Область = Элементы.ТабДокумент.ТекущаяОбласть;
	ВыполнитьВыбор(Область);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Область = Элементы.ТабДокумент.ТекущаяОбласть;
	ВыполнитьВыбор(Область);
	
КонецПроцедуры

&НаКлиенте
Процедура ИскатьСтрокуВТаблице(Команда)
	
	Если ПустаяСтрока(СтрокаПоиска) Тогда
		ПоказатьПредупреждение( , НСтр("ru='Не задана строка поиска';uk='Не заданий рядок пошуку'"));
		ТекущийЭлемент = Элементы.СтрокаПоиска;
		Возврат;
	КонецЕсли;
	
	НайденнаяОбласть = ТабДокумент.НайтиТекст(СтрокаПоиска, Элементы.ТабДокумент.ТекущаяОбласть, , , , , Истина);
	Если НайденнаяОбласть = Неопределено Тогда
		НайденнаяОбласть = ТабДокумент.НайтиТекст(СтрокаПоиска, , , , , , Истина);
		Если НайденнаяОбласть = Неопределено Тогда
			ОбщегоНазначенияБПКлиентСервер.СообщитьОбОшибке(
				НСтр("ru='Строка не найдена';uk='Рядок не знайдено'"));
			ТекущийЭлемент = Элементы.СтрокаПоиска;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ТабДокумент.ТекущаяОбласть = НайденнаяОбласть;
	ТекущийЭлемент = Элементы.СтрокаПоиска;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыполнитьВыбор(ТекущаяОбласть)
	
	Наименование                                 = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьНаименованиеЛево,
																	   ТекущаяОбласть.Низ,  ОбластьНаименованиеПраво).Текст;
	ПолноеНаименование                           = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьПолноеНаименованиеЛево,
																	   ТекущаяОбласть.Низ,  ОбластьПолноеНаименованиеПраво).Текст;
	ТипХарактеристики                            = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьТипХарактеристикиЛево,
																	   ТекущаяОбласть.Низ,  ОбластьТипХарактеристикиПраво).Текст;
	ПоказыватьВСК                                = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьПоказыватьВСКЛево,
																	   ТекущаяОбласть.Низ,  ОбластьПоказыватьВСКПраво).Текст;
	ПоказыватьВЖурналеЛабораторныхАнализов       = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьПоказыватьВЖурналеЛабораторныхАнализовЛево,
																	   ТекущаяОбласть.Низ,  ОбластьПоказыватьВЖурналеЛабораторныхАнализовПраво).Текст;
	Порядок                                      = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьПорядокЛево,
																	   ТекущаяОбласть.Низ,  ОбластьПорядокПраво).Текст;
	DRU_ТипХарактеристики                        = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьDRU_ТипХарактеристикиЛево,
																	   ТекущаяОбласть.Низ,  ОбластьDRU_ТипХарактеристикиПраво).Текст;
	DRU_КодХарактеристикиСкладскогоСвидетельства = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьDRU_КодХарактеристикиСкладскогоСвидетельстваЛево,
																	   ТекущаяОбласть.Низ,  ОбластьDRU_КодХарактеристикиСкладскогоСвидетельстваПраво).Текст;
	DRU_КодХарактеристикиСкладскойКвитанции      = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьDRU_КодХарактеристикиСкладскойКвитанцииЛево,
																	   ТекущаяОбласть.Низ,  ОбластьDRU_КодХарактеристикиСкладскойКвитанцииПраво).Текст;
		
	ЗначенияЗаполнения = Новый Структура(
		"Наименование, ПолноеНаименование, ТипХарактеристики,
		|ПоказыватьВСК, ПоказыватьВЖурналеЛабораторныхАнализов, Порядок,
		|DRU_ТипХарактеристики, DRU_КодХарактеристикиСкладскогоСвидетельства, DRU_КодХарактеристикиСкладскойКвитанции",
		СтрПолучитьСтроку(Наименование, 1), СтрПолучитьСтроку(ПолноеНаименование, 1), СтрПолучитьСтроку(ТипХарактеристики, 1),
	    СтрПолучитьСтроку(ПоказыватьВСК, 1), СтрПолучитьСтроку(ПоказыватьВЖурналеЛабораторныхАнализов, 1), СтрПолучитьСтроку(Порядок, 1),
		СтрПолучитьСтроку(DRU_ТипХарактеристики, 1), СтрПолучитьСтроку(DRU_КодХарактеристикиСкладскогоСвидетельства, 1), СтрПолучитьСтроку(DRU_КодХарактеристикиСкладскойКвитанции, 1));
		
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	Характеристика = ПоискСуществующейХарактеристики(ПараметрыФормы);
	
	Если Характеристика <> Неопределено Тогда
		
		ПараметрыФормы = Новый Структура("Ключ", Характеристика);

		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='В плане видов характеристик ""Характеристики видов культур"" уже существует элемент с наименованием ""%1""! Открыт существующий';uk='У плані видів характеристик ""Характеристики видів культур "" вже існує елемент з найменуванням ""%1""! Відкритий існуючий'"), Наименование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		ОткрытьФорму("ПланВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
		
	Иначе	
		
		ОткрытьФорму("ПланВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
		
	КонецЕсли; 	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоискСуществующейХарактеристики(Знач ПараметрыФормы)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ИНАГРО_ХарактеристикиВидовКультур.Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур КАК ИНАГРО_ХарактеристикиВидовКультур
		|ГДЕ
		|	ИНАГРО_ХарактеристикиВидовКультур.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", ПараметрыФормы.ЗначенияЗаполнения.Наименование);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти