#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");	
	Объект.ОбособленноеПодразделение = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновноеОбособленноеПодразделениеОрганизации");	
	ПроверитьОбособленноеПодразделение(Объект.Организация, Объект.ОбособленноеПодразделение);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(Объект.ДатаНачала) И Не ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		УстановитьПериод();	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПроверитьОбособленноеПодразделение(Объект.Организация, Объект.ОбособленноеПодразделение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	Если Объект.ДатаНачала >= '2015-01-01' И Объект.ФормаРасчетов = "Оплата з поточного рахунку" Тогда
		
		Объект.ФормаРасчетов = "Оплата з поточного рахунка"
		
	ИначеЕсли Объект.ДатаНачала < '2015-01-01' И Объект.ФормаРасчетов = "Оплата з поточного рахунка" Тогда	
		
		Объект.ФормаРасчетов = "Оплата з поточного рахунку"
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаРасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормыОплаты = Новый СписокЗначений();
	ФормыОплаты.Добавить("Готівка");
	Если Объект.ДатаНачала >= '2015-01-01' Тогда	
	    ФормыОплаты.Добавить("Оплата з поточного рахунка");
	Иначе	
		ФормыОплаты.Добавить("Оплата з поточного рахунку");
	КонецЕсли;
		
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ФормаРасчетовВыборИзСпискаЗавершение", ЭтотОбъект), ФормыОплаты, Элемент, ФормыОплаты[0]);
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаРасчетовВыборИзСпискаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    РезультатВыбора = ВыбранныйЭлемент;
    Если Не РезультатВыбора = Неопределено Тогда
        Объект.ФормаРасчетов = РезультатВыбора.Значение;     
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода", Объект.ДатаНачала, Объект.ДатаОкончания);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ДатаНачала 	 = РезультатВыбора.НачалоПериода;
	Объект.ДатаОкончания = РезультатВыбора.КонецПериода;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыполнить(Команда)
	
	Если Не ЗаполненыНеобходимыеРеквизиты() Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = Новый Структура("Организация, ОбособленноеПодразделение, ФормаРасчетов, ДатаНачала, ДатаОкончания");
	ЗаполнитьЗначенияСвойств(Настройки, Объект);
	
	РезультатПроверки = ВыполнитьПроверкуНаСервере(Настройки);
	
	Если РезультатПроверки.ЕстьННВключенныеВЕРНН Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='В выбранном периоде есть итоговые налоговые документы по рознице, которые включены в Единый реестр налоговых накладных. Формирование прервано!';uk='В обраному періоді є підсумкові податкові документи по роздробі, які включені до Єдиного реєстру податкових накладних. Формування перервано!'");
		Сообщение.Сообщить();
		
		Возврат;	
	КонецЕсли;
	
	Если РезультатПроверки.НеЗаполненаНоменклатураДляЗаполненияНН Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Перед началом формирования налоговых документов необходимо указать номенклатуру для автоматического заполнения налоговых накладных в настройках пользователя';uk='Перед початком формування податкових документів необхідно зазначити номенклатуру для автоматичного заповнення податкових накладних в настройках користувача'");	
		Сообщение.Сообщить();
		
		Возврат;	
	КонецЕсли;
	
	Если РезультатПроверки.ЕстьННДляПереформирования Тогда
		
		ТекстВопроса = НСтр("ru='В выбранном периоде есть итоговые налоговые документы по рознице, они будут переформированы! Продолжить?';uk='В обраному періоді є підсумкові податкові документи по роздробі, вони будуть переформовані! Продовжити?'");
		Оповещение = Новый ОписаниеОповещения("ВыполнитьЗавершение", ЭтотОбъект, Настройки);
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;	
	КонецЕсли;
	
	МассивСозданныхДокументов = СоздатьДокументыНаСервере(Настройки);
	ВывестиИнформациюПользователюОСозданныхДокументах(МассивСозданныхДокументов);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗавершение(Результат, Настройки) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		МассивСозданныхДокументов = СоздатьДокументыНаСервере(Настройки);
		ВывестиИнформациюПользователюОСозданныхДокументах(МассивСозданныхДокументов);
	КонецЕсли; 
	
КонецПроцедуры
  
&НаКлиенте
Процедура ПерейтиКФормированиюБезНоменклатурногоСостава(Команда)
	
	ЗначенияРеквизитов = Новый Структура("Организация, Дата, ОбособленноеПодразделение, ФормаРасчетов");
	ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Объект);
	ЗначенияРеквизитов.Дата = Объект.ДатаОкончания;
	
	ПараметрыОткрытия = Новый Структура("ЗначенияРеквизитов", ЗначенияРеквизитов);
	ОткрытьФорму("Обработка.ФормированиеНалоговыхНакладныхПоРозницеБезНоменклатурногоСостава.Форма", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОжидаемыйИПодтвержденныйНДСПродажПоДням(Команда)
	
	Если Не ЗаполненыНеобходимыеРеквизиты() Тогда
		Возврат;	
	КонецЕсли;
	
	Настройки = ПолучитьНастройкиОтчетаНаСервере(Объект.ДатаНачала, Объект.ДатаОкончания, Объект.Организация);	
	
	ПараметрыОткрытия = Новый Структура("СформироватьПриОткрытии, Вариант", Истина, Настройки);
	ОткрытьФорму("Отчет.ОжидаемыйИПодтвержденныйНДСПродажПоДнямРозница.Форма", ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
 
&НаСервереБезКонтекста
Процедура ПроверитьОбособленноеПодразделение(Организация, ОбособленноеПодразделение)

	Если НЕ ОбособленноеПодразделение.Владелец = Организация Тогда
		ОбособленноеПодразделение = Неопределено;				
	КонецЕсли; 

КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьПроверкуНаСервере(Настройки)

	Результат = Новый Структура("ЕстьННВключенныеВЕРНН, ЕстьННДляПереформирования, НеЗаполненаНоменклатураДляЗаполненияНН");
	
	//Объект "Запрос", который будет хранить параметры запроса и менеджер временных таблиц
	Запрос = Новый Запрос;
	
	МассивРезультатовЗапроса = Обработки.ФормированиеНалоговыхНакладныхПоРознице.ПолучитьВременныеТаблицыИДанныеДляПроверки(Настройки.ДатаНачала, Настройки.ДатаОкончания, Настройки.Организация, Запрос, Истина);
	
	РезультатЗапроса = МассивРезультатовЗапроса[1];
	Результат.Вставить("ЕстьННВключенныеВЕРНН", Не РезультатЗапроса.Пустой());
		
	РезультатЗапроса = МассивРезультатовЗапроса[2];
	Результат.Вставить("ЕстьННДляПереформирования", Не РезультатЗапроса.Пустой()); 	
	
	НоменклатураЗаполнения = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("НоменклатураДляЗаполненияНалоговыхНакладных");
	Результат.Вставить("НеЗаполненаНоменклатураДляЗаполненияНН", НоменклатураЗаполнения.Пустая());
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьДокументыНаСервере(Настройки)
	
	Возврат Обработки.ФормированиеНалоговыхНакладныхПоРознице.РаспределитьНоменклатурныйСоставДеньВДень(Настройки);
	
КонецФункции

&НаКлиенте
Процедура ВывестиИнформациюПользователюОСозданныхДокументах(МассивСозданныхДокументов)
	
	Если МассивСозданныхДокументов.Количество() Тогда
		
		// открываем форму с созданными документами
		Если Объект.ПечататьРеестр Тогда
			
			Для каждого Документ Из МассивСозданныхДокументов Цикл
				
				Если ТипЗнч(Документ) = Тип("ДокументСсылка.НалоговаяНакладная") Тогда
					ИмяДок = "НалоговаяНакладная";
				Иначе
					ИмяДок = "Приложение2КНалоговойНакладной";
				КонецЕсли;
				
				ОткрытьФорму("Документ." + ИмяДок + ".ФормаОбъекта", Новый Структура("Ключ", Документ));		
			КонецЦикла;
			
		Иначе// или сообщим о создании документов
			
			Для каждого Документ Из МассивСозданныхДокументов Цикл
				
				Сообщение = Новый СообщениеПользователю;
				
				Сообщение.КлючДанных = Документ;
				Сообщение.Текст = НСтр("ru='Создан документ: ';uk='Створений документ: '") + Документ;
				Сообщение.Сообщить();
				
			КонецЦикла;
			
		КонецЕсли;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Формирование документов закончено. Сформировано документов: ';uk='Формування документів закінчено. Сформовано документів: '") + МассивСозданныхДокументов.Количество();
		Сообщение.Сообщить();
		
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Нет данных для формирования налоговых документов за выбранный период!';uk='Немає даних для формування податкових документів за вибраний період!'");
		Сообщение.Сообщить();
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНастройкиОтчетаНаСервере(ДатаНачала, ДатаОкончания, Организация)
	
	Настройки = Отчеты.ОжидаемыйИПодтвержденныйНДСПродажПоДнямРозница.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных").НастройкиПоУмолчанию;
	
	ПараметрПериода = Новый ПараметрКомпоновкиДанных("Период");
	ПолеОрганизация = Новый ПолеКомпоновкиДанных("Организация");
	
	ПараметрыКомпоновщика = Настройки.ПараметрыДанных.Элементы;
	Для каждого ПараметрКомпоновщика Из ПараметрыКомпоновщика Цикл
		Если ПараметрКомпоновщика.Параметр = ПараметрПериода Тогда
			ПараметрКомпоновщика.Значение = Новый СтандартныйПериод(ДатаНачала, ДатаОкончания);
			ПараметрКомпоновщика.Использование = Истина;
						
			Прервать;
		КонецЕсли; 	
	КонецЦикла; 
	   	
	ОтборКомпоновщика = Настройки.Отбор.Элементы;
	Для каждого ЭлементОтбора Из ОтборКомпоновщика Цикл
		Если ЭлементОтбора.ЛевоеЗначение = ПолеОрганизация Тогда
			ЭлементОтбора.ПравоеЗначение = Организация;
			ЭлементОтбора.Использование = Истина;
						
			Прервать;
		КонецЕсли; 	
	КонецЦикла;
	
	Возврат Настройки;
	
КонецФункции

&НаКлиенте
Функция ЗаполненыНеобходимыеРеквизиты()
	
	ЗаполненыРеквизиты = Истина;
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не указана Организация!';uk='Не вказана Організація!'");
		Сообщение.Поле = "Объект.Организация";
		Сообщение.УстановитьДанные(Объект);
		Сообщение.Сообщить();
		
		ЗаполненыРеквизиты = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не указана дата начала!';uk='Не вказана дата початку!'");
		Сообщение.Поле = "Объект.ДатаНачала";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		
		ЗаполненыРеквизиты = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не указана дата окончания!';uk='Не вказана дата закінчення!'");
		Сообщение.Поле = "Объект.ДатаОкончания";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		
		ЗаполненыРеквизиты = Ложь;
	КонецЕсли;
	
	Возврат ЗаполненыРеквизиты;
		
КонецФункции

&НаКлиенте
Процедура УстановитьПериод()
	
	ТекРабочаяДата = ПолучитьРабочуюДатуНаСервере();
	ДатаНачалаМесяца = НачалоМесяца(ТекРабочаяДата);
	_15еЧислоТекущегоМесяца  = ДатаНачалаМесяца + 86400 * 14;
	_16еЧислоПрошлогоМесяца  = ДобавитьМесяц(ДатаНачалаМесяца, -1) + 86400 * 15;
	
	Если ТекРабочаяДата <= _15еЧислоТекущегоМесяца Тогда
		Объект.ДатаНачала 	  = _16еЧислоПрошлогоМесяца;
		Объект.ДатаОкончания = ДатаНачалаМесяца - 86400;
	Иначе
		Объект.ДатаНачала    = ДатаНачалаМесяца;
		Объект.ДатаОкончания = _15еЧислоТекущегоМесяца;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРабочуюДатуНаСервере()
	Возврат ОбщегоНазначенияБП.ПолучитьРабочуюДату();	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСообщенияПользователюНаСервере()
	Возврат ПолучитьСообщенияПользователю();	
КонецФункции

#КонецОбласти