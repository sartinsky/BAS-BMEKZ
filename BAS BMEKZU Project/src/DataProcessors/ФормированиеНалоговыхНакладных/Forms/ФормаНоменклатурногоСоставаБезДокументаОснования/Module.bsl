&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мОтборСтрокНоменклатуры = Новый Структура;
	Для каждого ЭлементСтруктуры Из Параметры.ОтборСтрокНоменклатуры Цикл
		мОтборСтрокНоменклатуры.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);	
	КонецЦикла;
	
	Контрагент 			= Параметры.Контрагент;
	ДоговорКонтрагента 	= Параметры.ДоговорКонтрагента;
	Сделка 				= Параметры.Сделка;
	ВалютаДокумента 	= Параметры.ВалютаДокумента;
	Дата	 			= Параметры.Дата;
	
	СуммаВключаетНДС 	= Параметры.СуммаВключаетНДС;
	
	ТипЦен = Параметры.ДоговорКонтрагента.ТипЦен;
	
	мВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Элементы.ДекорацияИнфНадписьРеквизитыДокумента.Заголовок = 
			НСтр("ru='Контрагент: ';uk='Контрагент: '") + СокрЛП(Контрагент)
			+НСтр("ru=', 
|Договор: ';uk=', 
|Договір: '") 	+ СокрЛП(ДоговорКонтрагента) 	
			+НСтр("ru=', 
|Документ расчетов: ';uk=', 
|Документ розрахунків: '") 	+ СокрЛП(Сделка)
			+".";
			
	ВременнаяСтрока = "";
	Если (ЗначениеЗаполнено(ВалютаДокумента))
	   И (ВалютаДокумента <> ВалютаРегламентированногоУчета) Тогда

	    Данные = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаДокумента, Дата);
		ВременнаяСтрока = ВременнаяСтрока + Данные.Кратность
						+ " " +  ВалютаДокумента
		                + " = " + Данные.Курс
		                + мВалютаРегламентированногоУчета + ", ";

	КонецЕсли;

	Элементы.ДекорацияИнфНадписьТоварыИтоги.Заголовок = ВременнаяСтрока;

	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
		Элементы.ИтогиВсего.Заголовок = НСтр("ru='Всего (<>):';uk='Всього (<>):'");
	Иначе
		Элементы.ИтогиВсего.Заголовок = НСтр("ru='Всего (';uk='Всього ('") + СокрЛП(ВалютаДокумента) +"):";
	КонецЕсли;

	Если СуммаВключаетНДС Тогда
		Элементы.ИтогиНДС.Заголовок = НСтр("ru='НДС (в т.ч.):';uk='ПДВ (у т.ч.):'");
	Иначе
		Элементы.ИтогиНДС.Заголовок = НСтр("ru='НДС (сверху):';uk='ПДВ (зверху):'");
	КонецЕсли;
	
	///////////////////////////////////////////////////////
	//управление колонками скидок
	
	ПоказыватьСкидки = ПолучитьФункциональнуюОпцию("ИспользоватьСкидки");
	
	Элементы.ТоварыСуммаСкидки.Видимость    = ПоказыватьСкидки;
	Элементы.ТоварыСуммаБезСкидки.Видимость = ПоказыватьСкидки;
	
	Элементы.УслугиСуммаСкидки.Видимость    = ПоказыватьСкидки;
	Элементы.УслугиСуммаБезСкидки.Видимость = ПоказыватьСкидки;

	УстановитьОтборФормыНоменклатурногоСостава("Товары");
	УстановитьОтборФормыНоменклатурногоСостава("ВозвратнаяТара");
	УстановитьОтборФормыНоменклатурногоСостава("Услуги");
	УстановитьОтборФормыНоменклатурногоСостава("ОС");
	УстановитьОтборФормыНоменклатурногоСостава("НМА");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	КопироватьДанныеФормы(ВладелецФормы.Объект, Объект);
	
	Объект.СуммаВключаетНДС = СуммаВключаетНДС;
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
	// установим видимость колонок счетов учета НДС...
	Элементы.ТоварыСчетУчетаНДС.Видимость 				= ЕстьЗаполненныйСчетУчетаНДСВТабличнойЧасти(Объект.Товары);
	Элементы.УслугиСчетУчетаНДС.Видимость 				= ЕстьЗаполненныйСчетУчетаНДСВТабличнойЧасти(Объект.Услуги);
	Элементы.ОССчетУчетаНДС.Видимость 					= ЕстьЗаполненныйСчетУчетаНДСВТабличнойЧасти(Объект.ОС);
	Элементы.НМАСчетУчетаНДС.Видимость	 				= ЕстьЗаполненныйСчетУчетаНДСВТабличнойЧасти(Объект.НМА);
	
	ОбновитьИтоги(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)

	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	// перенесем все количества и суммы в реквизиты "...ВДокумент"
	ПеренестиЗначенияВДокумент(Объект.Товары);
	ПеренестиЗначенияВДокумент(Объект.ВозвратнаяТара);
	ПеренестиЗначенияВДокумент(Объект.Услуги);
	ПеренестиЗначенияВДокумент(Объект.ОС);
	ПеренестиЗначенияВДокумент(Объект.НМА);
	
	КопироватьДанныеФормы(Объект, ВладелецФормы.Объект);
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
		
		//Заполним реквизиты
		ТекущаяСтрока.Дата			 	  = мОтборСтрокНоменклатуры.Дата;
		ТекущаяСтрока.ДоговорКонтрагента  = мОтборСтрокНоменклатуры.ДоговорКонтрагента;
		ТекущаяСтрока.Сделка 			  = мОтборСтрокНоменклатуры.Сделка;
		ТекущаяСтрока.РасчетыВозврат 	  = мОтборСтрокНоменклатуры.РасчетыВозврат;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанные.Всего = ТекущиеДанные.Сумма + ?(СуммаВключаетНДС, 0, ТекущиеДанные.СуммаНДС);
	
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НоваяСтрока И ОтменаРедактирования Тогда
		ОбновитьИтоги(ЭтаФорма);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ДанныеСтрокиТаблицы = Новый Структура(
		"Номенклатура, ЕдиницаИзмерения, Коэффициент, Количество,
		|Цена, Сумма, СтавкаНДС, СуммаНДС,
		|КодУКТВЭД, НомерГТД,
		|СуммаБезСкидки, СуммаСкидки");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
	
	// заполняем ставку НДС
	ЗаполнитьСтавкуНДС(ДанныеСтрокиТаблицы);
	
	ДанныеОбъекта = Новый Структура(
		"Дата, Организация,
		|ТипЦен, ВалютаДокумента, Дата,
		|СуммаВключаетНДС, ДоговорКонтрагента,
		|ЭтоКомиссия, Реализация");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтаФорма);
	
	ДанныеОбъекта.Организация 		= Объект.Организация;
	ДанныеОбъекта.СуммаВключаетНДС	= СуммаВключаетНДС;
	
	ДанныеОбъекта.ЭтоКомиссия = Ложь;
	ДанныеОбъекта.Реализация  = Истина;
	
	ПараметрыОбработки = Новый Структура();
	ПараметрыОбработки.Вставить("ДанныеСтрокиТаблицы", 	ДанныеСтрокиТаблицы);
	ПараметрыОбработки.Вставить("ДанныеОбъекта", 		ДанныеОбъекта);
	
	// Дополнительные поля, требующиеся для заполнения добавленных колонок табличного поля текущей формы.
	ПараметрыОбработки.ДанныеСтрокиТаблицы.Вставить("Всего", ТекущиеДанные.Всего);
	
	ТоварыНоменклатураПриИзмененииНаСервере(
		ПараметрыОбработки.ДанныеСтрокиТаблицы, ПараметрыОбработки.ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ПараметрыОбработки.ДанныеСтрокиТаблицы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТоварыНоменклатураПриИзмененииНаСервере(СтрокаТабличнойЧасти, ДанныеОбъекта)

	СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
							СтрокаТабличнойЧасти.Номенклатура, ДанныеОбъекта);
	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТабличнойЧасти.ЕдиницаИзмерения		= СведенияОНоменклатуре.БазоваяЕдиницаИзмерения;
	СтрокаТабличнойЧасти.Коэффициент			= СведенияОНоменклатуре.Коэффициент;
	СтрокаТабличнойЧасти.Цена					= СведенияОНоменклатуре.Цена;
	
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДанныеОбъекта.СуммаВключаетНДС);
	
	Документы.НалоговаяНакладная.УстановитьКодУКТВЭДВстрокеТоваров(СтрокаТабличнойЧасти);	
	
	ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(СтрокаТабличнойЧасти, ДанныеОбъекта);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыКодУКТВЭДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораНоменклатурыГТД(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНомерГТДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НачалоВыбораНоменклатурыГТД(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНомерГТДОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.НоменклатураГТД") Тогда
	
		ТекущаяСтрокаТоваров = Элементы.Товары.ТекущиеДанные;
		Если НЕ ТекущаяСтрокаТоваров = Неопределено Тогда
			ТекущаяСтрокаТоваров.КодУКТВЭД = ПолучитьРеквизитНоменклатурыГТДНаСервере(ВыбранноеЗначение, "КодУКТВЭД");
		КонецЕсли;

		ВыбранноеЗначение = ПолучитьРеквизитНоменклатурыГТДНаСервере(ВыбранноеЗначение, "НомерГТД");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКодУКТВЭДОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.НоменклатураГТД") Тогда
	
		ТекущаяСтрокаТоваров = Элементы.Товары.ТекущиеДанные;
		Если НЕ ТекущаяСтрокаТоваров = Неопределено Тогда
			ТекущаяСтрокаТоваров.НомерГТД = ПолучитьРеквизитНоменклатурыГТДНаСервере(ВыбранноеЗначение, "НомерГТД");
		КонецЕсли;

		ВыбранноеЗначение = ПолучитьРеквизитНоменклатурыГТДНаСервере(ВыбранноеЗначение, "КодУКТВЭД");	
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитНоменклатурыГТДНаСервере(Ссылка, ИмяРекзвизита)

	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРекзвизита);	

КонецФункции 

&НаКлиенте
Процедура НачалоВыбораНоменклатурыГТД(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрокаТоваров = Элементы.Товары.ТекущиеДанные;
	Если ТекущаяСтрокаТоваров = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВариантыВыбора = Новый СписокЗначений();
	ВариантыВыбора.Добавить(Ложь,   НСтр("ru='Выбрать по данным номенклатуры';uk='Вибрати по даним номенклатури'"));
	ВариантыВыбора.Добавить(Истина, НСтр("ru='Произвольный выбор';uk='Довільний вибір'"));
	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("НачалоВыбораНоменклатурыГТДЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент)), ВариантыВыбора, Элемент, 0);

КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораНоменклатурыГТДЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Элемент = ДополнительныеПараметры.Элемент;
	
	РезультатВыбора = ВыбранныйЭлемент;
    
    Если РезультатВыбора = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
	ТекущаяСтрокаТоваров = Элементы.Товары.ТекущиеДанные;
	
	Если РезультатВыбора.Значение = Истина Тогда
		ПараметрыВыбора = Новый Структура("ТекущаяСтрока");
		Если ТекущаяСтрокаТоваров <> Неопределено И ЗначениеЗаполнено(ТекущаяСтрокаТоваров.КодУКТВЭД) Тогда
			ПараметрыВыбора.Вставить("ТекущаяСтрока", ТекущаяСтрокаТоваров.КодУКТВЭД);	
		КонецЕсли;  
		ОткрытьФорму("Справочник.КлассификаторУКТВЭД.Форма.ФормаВыбора", ПараметрыВыбора, Элемент);
	Иначе
	    ДанныеСтроки = Новый Структура("КодУКТВЭД, НомерГТД, Номенклатура");
	    ЗаполнитьЗначенияСвойств(ДанныеСтроки, ТекущаяСтрокаТоваров); 
	    ПараметрыВыбора = ЗаполнитьПараметрыВыбораНоменклатурыГТД(ДанныеСтроки);
		
		ОткрытьФорму("Справочник.НоменклатураГТД.Форма.ФормаВыбора", ПараметрыВыбора, Элемент);
	КонецЕсли;
    
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьПараметрыВыбораНоменклатурыГТД(ТекущаяСтрокаТоваров)
	
	Параметры = Новый Структура("Отбор, ТекущаяСтрока");
	
	Параметры.Отбор = Новый Структура("Владелец", ТекущаяСтрокаТоваров.Номенклатура); 
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("КодУКТВЭД", ТекущаяСтрокаТоваров.КодУКТВЭД);
	Запрос.УстановитьПараметр("НомерГТД",  ТекущаяСтрокаТоваров.НомерГТД);
	Запрос.УстановитьПараметр("Владелец",  ТекущаяСтрокаТоваров.Номенклатура);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	               |	НоменклатураГТД.Ссылка
	               |ИЗ
	               |	Справочник.НоменклатураГТД КАК НоменклатураГТД
	               |ГДЕ
	               |	НоменклатураГТД.КодУКТВЭД  = &КодУКТВЭД
	               |	И НоменклатураГТД.НомерГТД = &НомерГТД
	               |	И НоменклатураГТД.Владелец = &Владелец";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Параметры.ТекущаяСтрока = Выборка.Ссылка;	
	КонецЕсли;
	
	Возврат Параметры; 
	
КонецФункции	

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)

	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, "Товары");
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЕдиницаИзмеренияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ДанныеСтрокиТаблицы = Новый Структура(
		"Номенклатура, ЕдиницаИзмерения, Коэффициент, Количество,
		|Цена, Сумма, СтавкаНДС, СуммаНДС,
		|СуммаБезСкидки, СуммаСкидки");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
	
	ДанныеОбъекта = Новый Структура(
		"Дата, Организация,
		|ТипЦен, ВалютаДокумента, 
		|СуммаВключаетНДС, ДоговорКонтрагента,
		|ЭтоКомиссия, Реализация");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтаФорма);
	
	ДанныеОбъекта.Организация 		= Объект.Организация;
	ДанныеОбъекта.СуммаВключаетНДС	= СуммаВключаетНДС;
	
	ДанныеОбъекта.ЭтоКомиссия = Ложь;
	ДанныеОбъекта.Реализация  = Истина;
	
	ПараметрыОбработки = Новый Структура();
	ПараметрыОбработки.Вставить("ДанныеСтрокиТаблицы", 	ДанныеСтрокиТаблицы);
	ПараметрыОбработки.Вставить("ДанныеОбъекта", 		ДанныеОбъекта);
	
	// Дополнительные поля, требующиеся для заполнения добавленных колонок табличного поля текущей формы.
	ПараметрыОбработки.ДанныеСтрокиТаблицы.Вставить("Всего", ТекущиеДанные.Всего);
	
	ТоварыЕдиницаИзмеренияПриИзмененииНаСервере(
		ПараметрыОбработки.ДанныеСтрокиТаблицы, ПараметрыОбработки.ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ПараметрыОбработки.ДанныеСтрокиТаблицы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТоварыЕдиницаИзмеренияПриИзмененииНаСервере(СтрокаТабличнойЧасти, Знач ДанныеОбъекта)

	
	ОбработкаТабличныхЧастей.ЗаполнитьКоэффициентТабЧасти(СтрокаТабличнойЧасти, ДанныеОбъекта, "Товары", Метаданные.Обработки.ФормированиеНалоговыхНакладных);
	
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДанныеОбъекта.СуммаВключаетНДС);
	
	ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(СтрокаТабличнойЧасти, ДанныеОбъекта);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, "Товары");

КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаБезСкидкиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммаБезСкидки(ЭтаФорма, "Товары");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаСкидкиПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммаСкидки(ЭтаФорма, "Товары");
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаСкидкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработкаТабличныхЧастейКлиентСервер.СуммаСкидкиНачалоВыбора(ЭтаФорма, "Товары", Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)

	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСумма(ЭтаФорма, "Товары");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)

	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСтавкаНДС(ЭтаФорма, "Товары");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаНДСПриИзменении(Элемент)

	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммаНДС(ЭтаФорма, "Товары");

КонецПроцедуры


&НаКлиенте
Процедура ВозвратнаяТараПриИзменении(Элемент)
	ОбновитьИтоги(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВозвратнаяТараПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ТекущаяСтрока = Элементы.ВозвратнаяТара.ТекущиеДанные;
		
		//Заполним реквизиты
		ТекущаяСтрока.Дата			 	  = мОтборСтрокНоменклатуры.Дата;
		ТекущаяСтрока.ДоговорКонтрагента  = мОтборСтрокНоменклатуры.ДоговорКонтрагента;
		ТекущаяСтрока.Сделка 			  = мОтборСтрокНоменклатуры.Сделка;
		ТекущаяСтрока.РасчетыВозврат 	  = мОтборСтрокНоменклатуры.РасчетыВозврат;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВозвратнаяТараНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ВозвратнаяТара.ТекущиеДанные;
	
	ДанныеСтрокиТаблицы = Новый Структура("Номенклатура, Количество, Цена, Сумма");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
	
	ДанныеОбъекта = Новый Структура("Дата, Организация,
		|ТипЦен, ВалютаДокумента, 
		|СуммаВключаетНДС, ДоговорКонтрагента, ЭтоКомиссия, Реализация");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтаФорма);
	
	ДанныеОбъекта.Организация 		= Объект.Организация;
	
	ДанныеОбъекта.СуммаВключаетНДС = Истина;
	ДанныеОбъекта.ЭтоКомиссия      = Ложь;
	ДанныеОбъекта.Реализация       = Истина;
	
	ВозвратнаяТараНоменклатураПриИзмененииНаСервере(ДанныеСтрокиТаблицы, ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура ВозвратнаяТараКоличествоПриИзменении(Элемент)

	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, "ВозвратнаяТара");

КонецПроцедуры

&НаКлиенте
Процедура ВозвратнаяТараЦенаПриИзменении(Элемент)

	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, "ВозвратнаяТара");

КонецПроцедуры

&НаКлиенте
Процедура ВозвратнаяТараСуммаПриИзменении(Элемент)

	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСумма(ЭтаФорма, "ВозвратнаяТара");

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВозвратнаяТараНоменклатураПриИзмененииНаСервере(СтрокаТабличнойЧасти, Знач ДанныеОбъекта)

	СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
									СтрокаТабличнойЧасти.Номенклатура, ДанныеОбъекта);
	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТабличнойЧасти.Цена = УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(
									СведенияОНоменклатуре.Цена, СведенияОНоменклатуре.ЦенаВключаетНДС, ДанныеОбъекта.СуммаВключаетНДС,
									УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СведенияОНоменклатуре.СтавкаНДС));
	
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);

КонецПроцедуры

&НаКлиенте
Процедура ВозвратнаяТараПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НоваяСтрока И ОтменаРедактирования Тогда
		ОбновитьИтоги(ЭтаФорма);
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	ТекущиеДанные.Всего = ТекущиеДанные.Сумма + ?(СуммаВключаетНДС, 0, ТекущиеДанные.СуммаНДС);
	
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НоваяСтрока И ОтменаРедактирования Тогда
		ОбновитьИтоги(ЭтаФорма);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ТекущаяСтрока = Элементы.Услуги.ТекущиеДанные;
		
		//Заполним реквизиты
		ТекущаяСтрока.Дата			 	  = мОтборСтрокНоменклатуры.Дата;
		ТекущаяСтрока.ДоговорКонтрагента  = мОтборСтрокНоменклатуры.ДоговорКонтрагента;
		ТекущаяСтрока.Сделка 			  = мОтборСтрокНоменклатуры.Сделка;
		ТекущаяСтрока.РасчетыВозврат 	  = мОтборСтрокНоменклатуры.РасчетыВозврат;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УслугиНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;

	// Получим общие параметры обработки для реквизитов документа
	ДанныеСтрокиТаблицы = Новый Структура("Номенклатура, Содержание, Количество,
		|Цена, Сумма, СтавкаНДС, СуммаНДС,
		|КодУКТВЭД,
		|СуммаБезСкидки, СуммаСкидки");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
	
	// заполняем ставку НДС
	ЗаполнитьСтавкуНДС(ДанныеСтрокиТаблицы);
	
	ДанныеОбъекта = Новый Структура("Дата, Организация,
		|ТипЦен, ВалютаДокумента,
		|СуммаВключаетНДС, ДоговорКонтрагента,
		|ЭтоКомиссия, Реализация");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтаФорма);
	
	ДанныеОбъекта.Организация 		= Объект.Организация;
	ДанныеОбъекта.СуммаВключаетНДС	= СуммаВключаетНДС;
	
	ДанныеОбъекта.ЭтоКомиссия = Ложь;
	ДанныеОбъекта.Реализация  = Истина;
	
	ПараметрыОбработки = Новый Структура();
	ПараметрыОбработки.Вставить("ДанныеСтрокиТаблицы", 	ДанныеСтрокиТаблицы);
	ПараметрыОбработки.Вставить("ДанныеОбъекта", 		ДанныеОбъекта);
	
	// Дополнительные поля, требующиеся для заполнения добавленных колонок табличного поля текущей формы.
	ПараметрыОбработки.ДанныеСтрокиТаблицы.Вставить("Всего", ТекущиеДанные.Всего);
	
	УслугиНоменклатураПриИзмененииНаСервере(
		ПараметрыОбработки.ДанныеСтрокиТаблицы, ПараметрыОбработки.ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ПараметрыОбработки.ДанныеСтрокиТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, "Услуги", 1);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, "Услуги", 1);

КонецПроцедуры

&НаКлиенте
Процедура УслугиСуммаБезСкидкиПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммаБезСкидки(ЭтаФорма, "Услуги", 1);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСуммаСкидкиПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммаСкидки(ЭтаФорма, "Услуги");
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСуммаСкидкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработкаТабличныхЧастейКлиентСервер.СуммаСкидкиНачалоВыбора(ЭтаФорма, "Услуги", Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСуммаПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСумма(ЭтаФорма, "Услуги", 1);

КонецПроцедуры

&НаКлиенте
Процедура УслугиСтавкаНДСПриИзменении(Элемент)

	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСтавкаНДС(ЭтаФорма, "Услуги");

КонецПроцедуры

&НаКлиенте
Процедура УслугиСуммаНДСПриИзменении(Элемент)

	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммаНДС(ЭтаФорма, "Услуги");

КонецПроцедуры

&НаСервереБезКонтекста
Процедура УслугиНоменклатураПриИзмененииНаСервере(СтрокаТабличнойЧасти, ДанныеОбъекта)

	СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
		СтрокаТабличнойЧасти.Номенклатура, ДанныеОбъекта);
	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТабличнойЧасти.Содержание	= СведенияОНоменклатуре.НаименованиеПолное;
	СтрокаТабличнойЧасти.Цена		= СведенияОНоменклатуре.Цена;
	
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДанныеОбъекта.СуммаВключаетНДС);
	
	Документы.НалоговаяНакладная.УстановитьКодУКТВЭДВстрокеТоваров(СтрокаТабличнойЧасти);
	
	ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(СтрокаТабличнойЧасти, ДанныеОбъекта);

КонецПроцедуры

&НаКлиенте
Процедура УслугиКодУКТВЭДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораНоменклатурыГТДУслуги(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиКодУКТВЭДОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.НоменклатураГТД") Тогда
				
		ВыбранноеЗначение = ПолучитьРеквизитНоменклатурыГТДНаСервере(ВыбранноеЗначение, "КодУКТВЭД");	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораНоменклатурыГТДУслуги(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрокаУслуг = Элементы.Услуги.ТекущиеДанные;
	Если ТекущаяСтрокаУслуг = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВариантыВыбора = Новый СписокЗначений();
	ВариантыВыбора.Добавить(Ложь,   НСтр("ru='Выбрать по данным номенклатуры';uk='Вибрати по даним номенклатури'"));
	ВариантыВыбора.Добавить(Истина, НСтр("ru='Произвольный выбор';uk='Довільний вибір'"));
	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("НачалоВыбораНоменклатурыГТДУслугиЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент)), ВариантыВыбора, Элемент, 0);

КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораНоменклатурыГТДУслугиЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    Элемент = ДополнительныеПараметры.Элемент;
	
	РезультатВыбора = ВыбранныйЭлемент;
    
    Если РезультатВыбора = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    ТекущаяСтрокаУслуг = Элементы.Услуги.ТекущиеДанные;
	
    Если РезультатВыбора.Значение = Истина Тогда
		ПараметрыВыбора = Новый Структура("ТекущаяСтрока");
		Если ТекущаяСтрокаУслуг <> Неопределено И ЗначениеЗаполнено(ТекущаяСтрокаУслуг.КодУКТВЭД) Тогда
			ПараметрыВыбора.Вставить("ТекущаяСтрока", ТекущаяСтрокаУслуг.КодУКТВЭД);	
		КонецЕсли;
		ОткрытьФорму("Справочник.КлассификаторУКТВЭД.Форма.ФормаВыбора", ПараметрыВыбора, Элемент);
	Иначе
	    ДанныеСтроки = Новый Структура("КодУКТВЭД, Номенклатура");
	    ЗаполнитьЗначенияСвойств(ДанныеСтроки, ТекущаяСтрокаУслуг); 
	    ПараметрыВыбора = ЗаполнитьПараметрыВыбораНоменклатурыГТДУслуги(ДанныеСтроки);
		
		ОткрытьФорму("Справочник.НоменклатураГТД.Форма.ФормаВыбора", ПараметрыВыбора, Элемент);
	КонецЕсли;
    
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьПараметрыВыбораНоменклатурыГТДУслуги(ТекущаяСтрокаТоваров)
	
	Параметры = Новый Структура("Отбор, ТекущаяСтрока");
	
	Параметры.Отбор = Новый Структура("Владелец", ТекущаяСтрокаТоваров.Номенклатура); 
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("КодУКТВЭД", ТекущаяСтрокаТоваров.КодУКТВЭД);
	Запрос.УстановитьПараметр("Владелец",  ТекущаяСтрокаТоваров.Номенклатура);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	               |	НоменклатураГТД.Ссылка
	               |ИЗ
	               |	Справочник.НоменклатураГТД КАК НоменклатураГТД
	               |ГДЕ
	               |	НоменклатураГТД.КодУКТВЭД  = &КодУКТВЭД
	               |	И НоменклатураГТД.Владелец = &Владелец";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Параметры.ТекущаяСтрока = Выборка.Ссылка;	
	КонецЕсли;
	
	Возврат Параметры; 
	
КонецФункции

&НаКлиенте
Процедура ОСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ТекущаяСтрока = Элементы.ОС.ТекущиеДанные;
		
		//Заполним реквизиты
		ТекущаяСтрока.Дата			 	  = мОтборСтрокНоменклатуры.Дата;
		ТекущаяСтрока.ДоговорКонтрагента  = мОтборСтрокНоменклатуры.ДоговорКонтрагента;
		ТекущаяСтрока.Сделка 			  = мОтборСтрокНоменклатуры.Сделка;
		ТекущаяСтрока.РасчетыВозврат 	  = мОтборСтрокНоменклатуры.РасчетыВозврат;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОСОсновноеСредствоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	
	// заполняем ставку НДС
	ДанныеСтроки = Новый Структура("СтавкаНДС");
	ЗаполнитьСтавкуНДС(ДанныеСтроки);
	ТекущиеДанные.СтавкаНДС = ДанныеСтроки.СтавкаНДС;
	
	// Рассчитываем суммы
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСтавкаНДС(ЭтаФорма, "ОС");
	
КонецПроцедуры	

&НаКлиенте
Процедура ОССтавкаНДСПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	
	// Рассчитываем суммы
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСтавкаНДС(ЭтаФорма, "ОС");
	
КонецПроцедуры

&НаКлиенте
Процедура ОССуммаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	
	// Рассчитываем суммы
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСтавкаНДС(ЭтаФорма, "ОС");
	
КонецПроцедуры

&НаКлиенте
Процедура ОСПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	ТекущиеДанные.Всего = ТекущиеДанные.Сумма + ?(СуммаВключаетНДС, 0, ТекущиеДанные.СуммаНДС);
	
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОСПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НоваяСтрока И ОтменаРедактирования Тогда
		ОбновитьИтоги(ЭтаФорма);
	КонецЕсли;	
КонецПроцедуры
&НаКлиенте
Процедура ОСКоличествоПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, "ОС");
	
КонецПроцедуры

&НаКлиенте
Процедура ОСЦенаПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, "ОС");
	
КонецПроцедуры


&НаКлиенте
Процедура НМАПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ТекущаяСтрока = Элементы.НМА.ТекущиеДанные;
		
		//Заполним реквизиты
		ТекущаяСтрока.Дата			 	  = мОтборСтрокНоменклатуры.Дата;
		ТекущаяСтрока.ДоговорКонтрагента  = мОтборСтрокНоменклатуры.ДоговорКонтрагента;
		ТекущаяСтрока.Сделка 			  = мОтборСтрокНоменклатуры.Сделка;
		ТекущаяСтрока.РасчетыВозврат 	  = мОтборСтрокНоменклатуры.РасчетыВозврат;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НМАНематериальныйАктивПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НМА.ТекущиеДанные;
	
	// заполняем ставку НДС
	ДанныеСтроки = Новый Структура("СтавкаНДС");
	ЗаполнитьСтавкуНДС(ДанныеСтроки);
	ТекущиеДанные.СтавкаНДС = ДанныеСтроки.СтавкаНДС;
	
	// Рассчитываем суммы
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСтавкаНДС(ЭтаФорма, "НМА");
	
КонецПроцедуры	

&НаКлиенте
Процедура НМАСтавкаНДСПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НМА.ТекущиеДанные;
	
	// Рассчитываем суммы
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСтавкаНДС(ЭтаФорма, "НМА");

КонецПроцедуры

&НаКлиенте
Процедура НМАСуммаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НМА.ТекущиеДанные;
	
	// Рассчитываем суммы
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСтавкаНДС(ЭтаФорма, "НМА");
	
КонецПроцедуры

&НаКлиенте
Процедура НМАКоличествоПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, "НМА");
	
КонецПроцедуры

&НаКлиенте
Процедура НМАЦенаПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтаФорма, "НМА");
	
КонецПроцедуры

&НаКлиенте
Процедура НМАПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НМА.ТекущиеДанные;
	ТекущиеДанные.Всего = ТекущиеДанные.Сумма + ?(СуммаВключаетНДС, 0, ТекущиеДанные.СуммаНДС);
	
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НМАПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И ОтменаРедактирования Тогда
		ОбновитьИтоги(ЭтаФорма);
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыПодбор(Команда)
	
	ПодборНоменклатуры(ЭтаФорма, "Товары", Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПодбор(Команда)
	
	ПодборНоменклатуры(ЭтаФорма, "Услуги", Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ТараПодбор(Команда)
	
	ПодборНоменклатуры(ЭтаФорма, "ВозвратнаяТара", Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборНоменклатуры(Форма, ИмяТаблицы, Команда) Экспорт

	ПараметрыПодбора = ПолучитьПараметрыПодбора(ИмяТаблицы);
	Если ПараметрыПодбора <> Неопределено Тогда
		ОткрытьФорму("Обработка.ПодборНоменклатуры.Форма.Форма", ПараметрыПодбора,
			ЭтаФорма, УникальныйИдентификатор);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборНоменклатуры.Форма.Форма" Тогда
		
		ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение, ИсточникВыбора.ИмяТаблицы);
		
		ОбновитьИтоги(ЭтаФорма);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение, ИмяТаблицы) Экспорт
	
	ДобавленныеИзмененныеСтроки = Новый Структура;
	ДобавленныеИзмененныеСтроки.Вставить("Товары", 		Новый Массив());
	ДобавленныеИзмененныеСтроки.Вставить("Услуги", 		Новый Массив());
	ДобавленныеИзмененныеСтроки.Вставить("ВозвратнаяТара",Новый Массив());

	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресПодобраннойНоменклатурыВХранилище);
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Реализация, ДоговорКонтрагента, ВалютаВзаиморасчетов");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтаФорма);
	ДанныеОбъекта.Реализация  = Истина;
	ДанныеОбъекта.ВалютаВзаиморасчетов = Объект.Организация;
	
	СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
		ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаТоваров, "Номенклатура", Истина), ДанныеОбъекта);
	
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		СтруктураОтбора = Новый Структура("Номенклатура, Цена", СтрокаТовара.Номенклатура, СтрокаТовара.Цена);
		Если ИмяТаблицы = "Товары" Тогда
			СтруктураОтбора.Вставить("ЕдиницаИзмерения", СтрокаТовара.ЕдиницаИзмерения);	
		КонецЕсли;
		Для каждого КлючевойОтбор Из мОтборСтрокНоменклатуры Цикл
			СтруктураОтбора.Вставить(КлючевойОтбор.Ключ, КлючевойОтбор.Значение);	
		КонецЦикла;
		СтрокаТабличнойЧасти = НайтиСтрокуТабличнойЧасти(ЭтаФорма, ИмяТаблицы, СтруктураОтбора);
		
		Если СтрокаТабличнойЧасти <> Неопределено Тогда
			// Нашли - увеличиваем количество.
			СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.Количество + СтрокаТовара.Количество;
			
			Если ИмяТаблицы = "Товары" Тогда
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, СуммаВключаетНДС);
				
			ИначеЕсли ИмяТаблицы = "Услуги" Тогда
				// Рассчитываем реквизиты табличной части
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, СуммаВключаетНДС);
				
			ИначеЕсли ИмяТаблицы = "ВозвратнаяТара" Тогда
				// Рассчитываем реквизиты табличной части
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
			КонецЕсли;
			
		Иначе
			
			СтрокаТабличнойЧасти = Объект[ИмяТаблицы].Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, мОтборСтрокНоменклатуры);
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТовара);
			
			СведенияОНоменклатуре = СоответствиеСведенийОНоменклатуре.Получить(СтрокаТовара.Номенклатура);
			Если СведенияОНоменклатуре = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если ИмяТаблицы = "Товары" Тогда
				
				
				ЗаполнитьСтавкуНДС(СтрокаТабличнойЧасти);
				
				СтрокаТабличнойЧасти.Цена = УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(
													СтрокаТабличнойЧасти.Цена, СведенияОНоменклатуре.ЦенаВключаетНДС, СуммаВключаетНДС,
													УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС));
				
				// Рассчитываем реквизиты табличной части
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, СуммаВключаетНДС);
				
				Документы.НалоговаяНакладная.УстановитьКодУКТВЭДВстрокеТоваров(СтрокаТабличнойЧасти);
				
			ИначеЕсли ИмяТаблицы = "Услуги" Тогда
				
				// Заполняем реквизиты табличной части
				СтрокаТабличнойЧасти.Содержание	= СведенияОНоменклатуре.НаименованиеПолное;
				
				ЗаполнитьСтавкуНДС(СтрокаТабличнойЧасти);
				
				СтрокаТабличнойЧасти.Цена = УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(
													СтрокаТабличнойЧасти.Цена, СведенияОНоменклатуре.ЦенаВключаетНДС, СуммаВключаетНДС,
													УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС));
				
				// Рассчитываем реквизиты табличной части
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, СуммаВключаетНДС);
				
			ИначеЕсли ИмяТаблицы = "ВозвратнаяТара" Тогда
				
				СтрокаТабличнойЧасти.Цена = УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(
				СтрокаТабличнойЧасти.Цена, СведенияОНоменклатуре.ЦенаВключаетНДС, Истина,
				УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СведенияОНоменклатуре.СтавкаНДС));
				
				// Рассчитываем реквизиты табличной части
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавленныеИзмененныеСтроки[ИмяТаблицы].Добавить(СтрокаТабличнойЧасти);
		
	КонецЦикла;
	
	ЗаполнитьДобавленныеКолонкиТаблиц();	
	
КонецПроцедуры


&НаКлиенте
Функция ПолучитьПараметрыПодбора(ИмяТаблицы)

	ПараметрыФормы = Новый Структура;

	ДатаРасчетов 	 = Дата;
	ЗаголовокПодбора = НСтр("ru='Подбор номенклатуры в %1 (%2)';uk='Підбір номенклатури %1 (%2)'");

	Валюта = ВалютаДокумента;

	Если ЗначениеЗаполнено(ТипЦен) Тогда
		Параметрыформы.Вставить("ПоказыватьЦены", Истина);
	КонецЕсли;

	Если ИмяТаблицы = "Товары" Тогда
		ПредставлениеТаблицы = НСтр("ru='Товары';uk='Товари'");

		ПараметрыФормы.Вставить("ПоказыватьОстатки"  , Ложь);
		ПараметрыФормы.Вставить("ПоказыватьСчетУчета", Ложь);
	ИначеЕсли ИмяТаблицы = "ВозвратнаяТара" Тогда
		ПредставлениеТаблицы = НСтр("ru='Возвратная тара';uk='Зворотна тара'");
		ПараметрыФормы.Вставить("ПоказыватьОстатки"  , Ложь);
		ПараметрыФормы.Вставить("ПоказыватьСчетУчета", Ложь);
	ИначеЕсли ИмяТаблицы = "Услуги" Тогда
		ПредставлениеТаблицы = НСтр("ru='Услуги';uk='Послуги'");
	КонецЕсли;
	ЗаголовокПодбора = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ЗаголовокПодбора, НСтр("ru='Номенклатурный состав';uk='Номенклатурний склад'"), ПредставлениеТаблицы);

	ПараметрыФормы.Вставить("ЕстьЦена"			, Истина);
	ПараметрыФормы.Вставить("ЕстьКоличество"	, Истина);
	ПараметрыФормы.Вставить("ДатаРасчетов"		, ДатаРасчетов);
	ПараметрыФормы.Вставить("ТипЦен"            , ТипЦен);
	ПараметрыФормы.Вставить("Валюта"            , ВалютаДокумента);
	ПараметрыФормы.Вставить("ДоговорКонтрагента", ДоговорКонтрагента);
	ПараметрыФормы.Вставить("Контрагент"        , Контрагент);
	ПараметрыФормы.Вставить("Организация"       , Объект.Организация);
	ПараметрыФормы.Вставить("Склад"             , Неопределено);
	ПараметрыФормы.Вставить("Заголовок"         , ЗаголовокПодбора);
	ПараметрыФормы.Вставить("ВидПодбора"        , "");
	ПараметрыФормы.Вставить("ИмяТаблицы"        , ИмяТаблицы);
	ПараметрыФормы.Вставить("Услуги"            , ИмяТаблицы = "Услуги");

	Возврат ПараметрыФормы;

КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьСтавкуНДС(СтрокаТабличнойЧасти)

	// СтавкаНДС прироритетно определеятся видом операции документа
	Если СтрокаТабличнойЧасти.Свойство("Номенклатура") Тогда
		СтрокаТабличнойЧасти.СтавкаНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.Номенклатура, "СтавкаНДС");
	Иначе
		СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.НДС20;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ЕстьЗаполненныйСчетУчетаНДСВТабличнойЧасти(ТабличнаяЧасть)

	КоличествоСтрок 		= ТабличнаяЧасть.Количество();
	КоличествоНепустыхСтрок = ТабличнаяЧасть.НайтиСтроки(Новый Структура("СчетУчетаНДС", ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПустаяСсылка"))).Количество();
		
	Возврат КоличествоСтрок > 0 И НЕ (КоличествоНепустыхСтрок = КоличествоСтрок);

КонецФункции 

&НаСервереБезКонтекста
Функция НайтиСтрокуТабличнойЧасти(Форма, ИмяТабличнойЧасти, СтруктураОтбора)

	Объект = Форма.Объект;

	СтрокаТабличнойЧасти = Неопределено;

	МассивНайденныхСтрок = Объект[ИмяТабличнойЧасти].НайтиСтроки(СтруктураОтбора);
	Если МассивНайденныхСтрок.Количество() > 0 Тогда
		// Нашли. Вернем первую найденную строку.
		СтрокаТабличнойЧасти = МассивНайденныхСтрок[0];
	КонецЕсли;

	Возврат СтрокаТабличнойЧасти;

КонецФункции

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц(ИмяТаблицы = "") Экспорт
	
	ПараметрыОбъекта = Новый Структура("СуммаВключаетНДС", СуммаВключаетНДС);

	Если ПустаяСтрока(ИмяТаблицы) ИЛИ ИмяТаблицы = "Товары" Тогда
		Для каждого СтрокаТаблицы Из Объект.Товары Цикл
			ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(СтрокаТаблицы, ПараметрыОбъекта);
		КонецЦикла;
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяТаблицы) ИЛИ ИмяТаблицы = "Услуги" Тогда
		Для каждого СтрокаТаблицы Из Объект.Услуги Цикл
			ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(СтрокаТаблицы, ПараметрыОбъекта);
		КонецЦикла;
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяТаблицы) ИЛИ ИмяТаблицы = "ОС" Тогда
		Для каждого СтрокаТаблицы Из Объект.ОС Цикл
			ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(СтрокаТаблицы, ПараметрыОбъекта);
		КонецЦикла;
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяТаблицы) ИЛИ ИмяТаблицы = "НМА" Тогда
		Для каждого СтрокаТаблицы Из Объект.НМА Цикл
			ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(СтрокаТаблицы, ПараметрыОбъекта);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(СтрокаТаблицы, Знач ПараметрыОбъекта)

	СтрокаТаблицы.Всего = СтрокаТаблицы.Сумма + ?(ПараметрыОбъекта.СуммаВключаетНДС, 0, СтрокаТаблицы.СуммаНДС);

КонецПроцедуры

&НаКлиенте
Процедура ПеренестиЗначенияВДокумент(ТабличнаяЧасть)
	
	ЕстьСуммаНДС = Истина;
	Если ТабличнаяЧасть = Объект.ВозвратнаяТара Тогда
		ЕстьСуммаНДС = Ложь;
	КонецЕсли;
	
	ЕстьКоличество = Истина;
	
	ЕстьСкидка = Ложь;
	Если  ТабличнаяЧасть = Объект.Услуги
	  ИЛИ ТабличнаяЧасть = Объект.Товары	Тогда
		ЕстьСкидка = Истина;
	КонецЕсли;
	
	НайденныеСтроки = ТабличнаяЧасть.НайтиСтроки(мОтборСтрокНоменклатуры);
	Для каждого Строка Из НайденныеСтроки Цикл
		
		Если ЕстьКоличество Тогда
		
			Строка.КоличествоВДокумент = Строка.Количество;
		
		КонецЕсли; 
		
		Строка.СуммаВДокумент = Строка.Сумма;
		
		Если ЕстьСуммаНДС Тогда
			
			Строка.СуммаНДСВДокумент = Строка.СуммаНДС;
			
		КонецЕсли;
		
		Если ЕстьСкидка Тогда
			
			Строка.СуммаБезСкидкиВДокумент 	= Строка.СуммаБезСкидки;
			Строка.СуммаСкидкиВДокумент 	= Строка.СуммаСкидки;
			
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборФормыНоменклатурногоСостава(ИмяТабличнойЧасти)

	Элементы[ИмяТабличнойЧасти].ОтборСтрок = Новый ФиксированнаяСтруктура(мОтборСтрокНоменклатуры);		
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоги(Форма)
	
	Объект = Форма.Объект;
	
	СуммаНДС = 0;
	Сумма = 0;
	СуммаТара = 0;
	НайденныеСтроки = Объект.Товары.НайтиСтроки(Форма.мОтборСтрокНоменклатуры);
	Для каждого Строка  Из НайденныеСтроки Цикл
		СуммаНДС = 	СуммаНДС+ Строка.СуммаНДС;
		Сумма = 	Сумма 	+ Строка.Сумма;
	КонецЦикла; 
	КоличествоСтрокТовары =  НайденныеСтроки.Количество();
	
	НайденныеСтроки = Объект.ВозвратнаяТара.НайтиСтроки(Форма.мОтборСтрокНоменклатуры);
	Для каждого Строка  Из НайденныеСтроки Цикл
		СуммаТара = СуммаТара + Строка.Сумма;
	КонецЦикла; 
	КоличествоСтрокВозвратнаяТара = НайденныеСтроки.Количество();
	
	НайденныеСтроки = Объект.Услуги.НайтиСтроки(Форма.мОтборСтрокНоменклатуры);
	Для каждого Строка  Из НайденныеСтроки Цикл
		СуммаНДС = 	СуммаНДС+ Строка.СуммаНДС;
		Сумма = 	Сумма 	+ Строка.Сумма;
	КонецЦикла; 
	КоличествоСтрокУслуги = НайденныеСтроки.Количество();
	
	НайденныеСтроки = Объект.ОС.НайтиСтроки(Форма.мОтборСтрокНоменклатуры);
	Для каждого Строка  Из НайденныеСтроки Цикл
		СуммаНДС = 	СуммаНДС+ Строка.СуммаНДС;
		Сумма = 	Сумма 	+ Строка.Сумма;
	КонецЦикла; 
	КоличествоСтрокОС = НайденныеСтроки.Количество();
	
	НайденныеСтроки = Объект.НМА.НайтиСтроки(Форма.мОтборСтрокНоменклатуры);
	Для каждого Строка  Из НайденныеСтроки Цикл
		СуммаНДС = 	СуммаНДС+ Строка.СуммаНДС;
		Сумма = 	Сумма 	+ Строка.Сумма;
	КонецЦикла; 
	КоличествоСтрокНМА = НайденныеСтроки.Количество();

	Форма.ИтогиВсего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма + ?(Форма.СуммаВключаетНДС, 0, СуммаНДС));
	Форма.ИтогиНДС   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаНДС);
    Форма.ИтогиТара  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаТара);	
	
КонецПроцедуры
