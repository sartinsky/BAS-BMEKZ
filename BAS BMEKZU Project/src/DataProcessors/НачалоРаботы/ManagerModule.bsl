#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ВидОрганизации(КодПоЕДРПОУ) Экспорт
	
	Возврат ?(СтрДлина(СокрЛП(КодПоЕДРПОУ)) = 10, "ИндивидуальныйПредприниматель", "ЮридическоеЛицо");
	
КонецФункции

Функция ПолучитьДанныеОрганизации() Экспорт

	Результат = Новый Структура("Организация, КодПоЕДРПОУ, НаименованиеСокращенное");
	Результат.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	Если Не Результат.Организация.Пустая() Тогда
		
		ДанныеОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Результат.Организация, "КодПоЕДРПОУ, Наименование");
		Результат.КодПоЕДРПОУ				 = ДанныеОрганизации.КодПоЕДРПОУ;
		Результат.НаименованиеСокращенное	 = ДанныеОрганизации.Наименование;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция РегистрацияОрганизации(ДанныеОрганизации, Регистрации) Экспорт
	
	Для Каждого Регистрация Из Регистрации Цикл
		Данные = Регистрация.СведенияОРегистрации.ДанныеРегистрации;
		Если ДанныеОрганизации.КодПоЕДРПОУ = Данные.КодПоЕДРПОУ Тогда
			Возврат Регистрация;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

#Область СозданиеОрганизации

Функция СоздатьОрганизациюПоКодуПоЕДРПОУ(ПараметрыСозданияОрганизации) Экспорт
	
	Реквизиты = Новый Структура("КодПоЕДРПОУ, Наименование, НаименованиеПолное, ЮридическийАдрес, Руководитель");
	
	ЗаполнитьРеквизитыПоДаннымРегистрации(Реквизиты, ПараметрыСозданияОрганизации);
	
	НачатьТранзакцию();
	
	НоваяОрганизация = Справочники.Организации.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(НоваяОрганизация, Реквизиты);
	НоваяОрганизация.Записать();
	
	Организация = НоваяОрганизация.Ссылка;
	
	Если Реквизиты.Свойство("ЮридическийАдрес")	И ЗначениеЗаполнено(Реквизиты.ЮридическийАдрес) Тогда
		
		ЗначениеАдресаJSON = Реквизиты.ЮридическийАдрес.КонтактнаяИнформация;
		
		УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(
		Организация, ЗначениеАдресаJSON, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
		
		УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(
		Организация, ЗначениеАдресаJSON, Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
		
		УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(
		Организация, ЗначениеАдресаJSON, Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации);
		
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
	Возврат Организация;
	
КонецФункции

Функция ЗаполнитьРеквизитыПоДаннымРегистрации(Реквизиты, ПараметрыСозданияОрганизации)
	
	Реквизиты.КодПоЕДРПОУ = ПараметрыСозданияОрганизации.КодПоЕДРПОУ;
	
	ВидОрганизации = ВидОрганизации(ПараметрыСозданияОрганизации.КодПоЕДРПОУ);
	
	НаименованиеОрганизации = Неопределено;
	ПараметрыСозданияОрганизации.Свойство("Наименование", НаименованиеОрганизации);
	
	Реквизиты.Вставить("ЮридическоеФизическоеЛицо", 
		?(ВидОрганизации = "ИндивидуальныйПредприниматель", 
			Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо, 
			Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо));
	
	ЗаполненЮридическийАдрес = Реквизиты.Свойство("ЮридическийАдрес") И ЗначениеЗаполнено(Реквизиты.ЮридическийАдрес);
	
	Если Не ЗаполненЮридическийАдрес
		И (ЗначениеЗаполнено(ПараметрыСозданияОрганизации.ЗначениеАдресаJSON)
			Или ЗначениеЗаполнено(ПараметрыСозданияОрганизации.Адрес)) Тогда
		
		Если ЗначениеЗаполнено(ПараметрыСозданияОрганизации.ЗначениеАдресаJSON) Тогда
			ЗначениеАдресаJSON = ПараметрыСозданияОрганизации.ЗначениеАдресаJSON;
			ПредставлениеАдреса = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(ЗначениеАдресаJSON);
		Иначе
			ЗначениеАдресаJSON = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(
				ПараметрыСозданияОрганизации.Адрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			ПредставлениеАдреса = ПараметрыСозданияОрганизации.Адрес;
		КонецЕсли;
		
		АдресВведенВСвободнойФорме= УправлениеКонтактнойИнформациейСлужебный.АдресВведенВСвободнойФорме(ЗначениеАдресаJSON);
		Если Не АдресВведенВСвободнойФорме Тогда
			ЮридическийАдрес = Новый Структура;
			ЮридическийАдрес.Вставить("КонтактнаяИнформация", ЗначениеАдресаJSON);
			ЮридическийАдрес.Вставить("Представление", ПредставлениеАдреса);
			ЮридическийАдрес.Вставить("Комментарий");
			
			Реквизиты.Вставить("ЮридическийАдрес", ЮридическийАдрес);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВидОрганизации = "ИндивидуальныйПредприниматель" Тогда
		
		Если НЕ Реквизиты.Свойство("Фамилия") ИЛИ НЕ ЗначениеЗаполнено(Реквизиты.Фамилия) Тогда
			
			ФИО = Неопределено;
			
			// Определим ФИО предпринимателя по руководителю
			Если ПараметрыСозданияОрганизации.Свойство("ФамилияДиректора")
				И ЗначениеЗаполнено(ПараметрыСозданияОрганизации.ФамилияДиректора) Тогда
				
				Фамилия  = ПараметрыСозданияОрганизации.ФамилияДиректора;
				Имя      = "";
				Отчество = "";
				
				ПараметрыСозданияОрганизации.Свойство("ИмяДиректора", Имя);
				ПараметрыСозданияОрганизации.Свойство("ОтчествоДиректора", Отчество);
				
				ФИО = Новый Структура();
				ФИО.Вставить("Фамилия",  ?(ЗначениеЗаполнено(Фамилия), Фамилия, ""));
				ФИО.Вставить("Имя",      ?(ЗначениеЗаполнено(Имя), Имя, ""));
				ФИО.Вставить("Отчество", ?(ЗначениеЗаполнено(Отчество), Отчество, ""));
			КонецЕсли;
			
			Если ФИО <> Неопределено Тогда
				Реквизиты.Вставить("Фамилия",  ФИО.Фамилия);
				Реквизиты.Вставить("Имя",      ФИО.Имя);
				Реквизиты.Вставить("Отчество", ФИО.Отчество);
			КонецЕсли;
			
		КонецЕсли;
		
		УстановитьЗначениеРеквизита(Реквизиты, ПараметрыСозданияОрганизации, "НаименованиеПолное", "Наименование");
		УстановитьЗначениеРеквизита(Реквизиты, ПараметрыСозданияОрганизации, "Наименование", "Наименование");
		
	Иначе
		
		Если ЗначениеЗаполнено(НаименованиеОрганизации) Тогда
			Если Реквизиты.Свойство("НаименованиеПолное")
				И НЕ ЗначениеЗаполнено(Реквизиты.НаименованиеПолное) Тогда
				Реквизиты.Вставить("НаименованиеПолное", НаименованиеОрганизации);
			КонецЕсли;
			
			Если Реквизиты.Свойство("Наименование")
				И НЕ ЗначениеЗаполнено(Реквизиты.Наименование) Тогда
				Реквизиты.Вставить("Наименование", НаименованиеОрганизации);
			КонецЕсли;
		КонецЕсли;
		
		// Заполняем руководителя
		Если Реквизиты.Руководитель = Неопределено Тогда
			
			Фамилия  = "";
			Имя      = "";
			Отчество = "";
			ПараметрыСозданияОрганизации.Свойство("ФамилияДиректора", Фамилия);
			ПараметрыСозданияОрганизации.Свойство("ИмяДиректора", Имя);
			ПараметрыСозданияОрганизации.Свойство("ОтчествоДиректора", Отчество);
			
			Если ЗначениеЗаполнено(Фамилия)
				И ЗначениеЗаполнено(Имя) Тогда
				Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 %2 %3';uk='%1 %2 %3'"),
								Фамилия, Имя, Отчество);
				
				Реквизиты.Руководитель = Новый Структура;
				Реквизиты.Руководитель.Вставить("Должность", "");
				Реквизиты.Руководитель.Вставить("Фамилия", Фамилия);
				Реквизиты.Руководитель.Вставить("Имя", Имя);
				Реквизиты.Руководитель.Вставить("Отчество", Отчество);
				Реквизиты.Руководитель.Вставить("Представление", Представление);
				Реквизиты.Руководитель.Вставить("КодПоДРФО", "");
				Реквизиты.Руководитель.Вставить("ДатаЗаписи", Дата('00010101'));
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

Процедура УстановитьЗначениеРеквизита(Реквизиты, ДанныеРегистрации, ИмяРеквизита, ИмяРеквизитаРегистрации)
	
	ЗначениеРеквизита = Неопределено;
	ЗначениеРегистрации = Неопределено;
	Если Реквизиты.Свойство(ИмяРеквизита, ЗначениеРеквизита)
		И НЕ ЗначениеЗаполнено(ЗначениеРеквизита)
		И ДанныеРегистрации.Свойство(ИмяРеквизитаРегистрации, ЗначениеРегистрации)
		И ЗначениеЗаполнено(ЗначениеРегистрации) Тогда
		
		Реквизиты.Вставить(ИмяРеквизита, ЗначениеРегистрации);
	КонецЕсли;
	
КонецПроцедуры

Функция НовыйПараметрыСозданияОрганизации() Экспорт
	
	ПараметрыСозданияОрганизации = Новый Структура;
	ПараметрыСозданияОрганизации.Вставить("КодПоЕДРПОУ", ""); // Обязательный
	ПараметрыСозданияОрганизации.Вставить("Наименование", ""); // Необязательный
	ПараметрыСозданияОрганизации.Вставить("Адрес", ""); // Необязательный
	ПараметрыСозданияОрганизации.Вставить("ЗначениеАдресаJSON", ""); // Необязательный
	
	ПараметрыСозданияОрганизации.Вставить("ФамилияДиректора", ""); // Необязательный
	ПараметрыСозданияОрганизации.Вставить("ИмяДиректора", ""); // Необязательный
	ПараметрыСозданияОрганизации.Вставить("ОтчествоДиректора", ""); // Необязательный
	Возврат ПараметрыСозданияОрганизации;
	
КонецФункции

#КонецОбласти

#КонецЕсли