&НаКлиенте
Перем ТекущийПриоритет;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ОшибкаСЛК") Тогда 
		ТекстОписания = Параметры.ОшибкаСЛК;
		Модифицированность = Истина;
		ПараметрыНастроены = Ложь;
	Иначе 
		ТекстОписания = "";
		ПараметрыНастроены = Истина;
	КонецЕсли;
	
	ДанныеПодсистем = ПараметрыСеанса.ИНАГРО_ДанныеПодсистем.Получить();
	ТаблицаПодсистем = ДанныеПодсистем.ТаблицаПодсистем;
	МетаданныеПеречисления = Метаданные.Перечисления.ИНАГРО_Подсистемы.ЗначенияПеречисления;
	Для Каждого СтрокаТаблицы Из ТаблицаПодсистем Цикл
		ЭлементПеречисления = МетаданныеПеречисления[Перечисления.ИНАГРО_Подсистемы.Индекс(СтрокаТаблицы.Подсистема)];
		НовыйРеквизит = Новый РеквизитФормы(ЭлементПеречисления.Имя, Новый ОписаниеТипов("Булево"), "ТаблицаНастроек", ЭлементПеречисления.Синоним, Ложь);
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		НовыйЭлемент = Элементы.Добавить(ЭлементПеречисления.Имя, Тип("ПолеФормы"), Элементы.ТаблицаНастроек);
		НовыйЭлемент.ПутьКДанным 			= "ТаблицаНастроек." + ЭлементПеречисления.Имя;
		НовыйЭлемент.Заголовок   			= ЭлементПеречисления.Синоним;
		НовыйЭлемент.Вид         			= ВидПоляФормы.ПолеФлажка;
		Если СтрокаТаблицы.Ведущий Тогда 
			НовыйЭлемент.ШрифтЗаголовка 	= Новый Шрифт(НовыйЭлемент.ШрифтЗаголовка,,,Истина);
		КонецЕсли;	
	КонецЦикла;
	Если ТаблицаПодсистем.Количество()=1 И ТаблицаПодсистем[0].Ведущий Тогда 
		ИмяКолонки = ЭлементПеречисления.Имя;
		Элементы[ЭлементПеречисления.Имя].Доступность = Ложь;
	КонецЕсли;
	
	ТаблицаНастроекЗначение = ДанныеФормыВЗначение(ТаблицаНастроек, Тип("ТаблицаЗначений"));
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ИНАГРО_НастройкиЗащиты.Пользователь КАК Пользователь,
	|	ИНАГРО_НастройкиЗащиты.Подсистема,
	|	ИНАГРО_НастройкиЗащиты.ПриоритетСервераСЛК
	|ИЗ
	|	РегистрСведений.ИНАГРО_НастройкиЗащиты КАК ИНАГРО_НастройкиЗащиты
	|ГДЕ
	|	(ИНАГРО_НастройкиЗащиты.Разрешено
	|			ИЛИ ИНАГРО_НастройкиЗащиты.Подсистема = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_Подсистемы.ПустаяСсылка))
	|ИТОГИ ПО
	|	Пользователь";
	ВыборкаПоПользователям = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоПользователям.Следующий() Цикл 
		СтрокаТаблицыНастроек = ТаблицаНастроекЗначение.Добавить();
		СтрокаТаблицыНастроек.Пользователь = ВыборкаПоПользователям.Пользователь;
		Если Не ИмяКолонки = "" Тогда 
			СтрокаТаблицыНастроек[ИмяКолонки] = Истина;
		КонецЕсли;
		ВыборкаПодсистем = ВыборкаПоПользователям.Выбрать();
		Пока ВыборкаПодсистем.Следующий() Цикл
			Если ВыборкаПодсистем.Подсистема = Перечисления.ИНАГРО_Подсистемы.ПустаяСсылка() Тогда 
				СтрокаТаблицыНастроек.ПриоритетСервераСЛК = ВыборкаПодсистем.ПриоритетСервераСЛК;
			Иначе
				Индекс = Перечисления.ИНАГРО_Подсистемы.Индекс(ВыборкаПодсистем.Подсистема);
				Подсистема = Метаданные.Перечисления.ИНАГРО_Подсистемы.ЗначенияПеречисления[Индекс];
				Если Не ТаблицаНастроекЗначение.Колонки.Найти(Подсистема.Имя) = Неопределено Тогда 
					СтрокаТаблицыНастроек[Подсистема.Имя] = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ЗначениеВДанныеФормы(ТаблицаНастроекЗначение, ТаблицаНастроек);
	
	МассивСерверовСЛК = ДанныеПодсистем.МассивСерверовСЛК;
	Для Каждого ЭлементМассива Из МассивСерверовСЛК Цикл 
		Если СокрЛП(ЭлементМассива) <> "" Тогда 
			ПозицияРазделителя = Найти(ЭлементМассива, ";");
			Если Не ПозицияРазделителя = 0 Тогда 
				АдресСервераСЛК = Сред(ЭлементМассива, 6, ПозицияРазделителя - 6);
			Иначе
				АдресСервераСЛК = Сред(ЭлементМассива, 6);
			КонецЕсли;
			ПортСервераСЛК = "";
			Если ПозицияРазделителя <> 0 Тогда 
				ПортСервераСЛК = Сред(ЭлементМассива, ПозицияРазделителя + 6, СтрДлина(ЭлементМассива) - ПозицияРазделителя - 4);
			КонецЕсли;
			СтрокаСервераСЛК = СервераСЛК.Добавить();
			СтрокаСервераСЛК.АдресСервераСЛК = АдресСервераСЛК;
			СтрокаСервераСЛК.ПортСервераСЛК = ПортСервераСЛК;
		КонецЕсли;
	КонецЦикла;
	Элементы.СервераСЛКДемоРежим.Пометка = Константы.ИНАГРО_ДемоРежим.Получить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если ЭтаФорма.Модифицированность Тогда
		Отказ = Истина;
		ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаВопросаИзменения", ЭтаФорма);
		ПоказатьВопрос(ОбработчикВопроса, НСтр("ru='Данные были изменены. Сохранить изменения?';uk='Дані були змінені. Зберегти зміни?'"), РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ИНАГРО_СЛК.ЕстьПраваНастройки() Тогда 
		ТекстВопроса = НСтр("ru='Параметры СЛК не настроенны для пользователя. Обратитесь к администратору!';uk='Параметри СЛК не налаштовані для користувача. Зверніться до адміністратора!'");
		Обработчик = Новый ОписаниеОповещения("АвтозакрытиеПослеУведомления", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОК);
		Возврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	СохранитьДанные();
	ЗапросПерезапуска();
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПоУмолчанию(Команда)
	Для Каждого СтрокаСервера Из СервераСЛК Цикл 
		Если СтрокаСервера.АдресСервераСЛК = "localhost" И 
			СтрокаСервера.ПортСервераСЛК = "9099" Тогда 
			Возврат;
		КонецЕсли;
	КонецЦикла;
	СтрокаСервера = СервераСЛК.Вставить(0);
	СтрокаСервера.АдресСервераСЛК = "localhost";
	СтрокаСервера.ПортСервераСЛК = "9099";
	
	Для Каждого СтрокаСервера Из ТаблицаНастроек Цикл 
		Если СтрокаСервера.Пользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка") Тогда 
			Возврат;
		КонецЕсли;
	КонецЦикла;
	СтрокаСервера = ТаблицаНастроек.Вставить(0);
	Если Не ИмяКолонки = "" Тогда
		СтрокаСервера[ИмяКолонки] = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлаги(Команда)
	ИмяПодсистемы = Элементы.ТаблицаНастроек.ТекущийЭлемент.Имя;	
	Если ИмяПодсистемы <> "ТаблицаНастроекПользователь" И ИмяПодсистемы <> "ТаблицаНастроекПриоритетСервераСЛК" Тогда 
		Для Каждого СтрокаТаблицы Из ТаблицаНастроек Цикл 
			СтрокаТаблицы[ИмяПодсистемы] = Истина;
		КонецЦикла;
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлаги(Команда)
	ИмяПодсистемы = Элементы.ТаблицаНастроек.ТекущийЭлемент.Имя;	
	Если ИмяПодсистемы <> "ТаблицаНастроекПользователь" И ИмяПодсистемы <> "ТаблицаНастроекПриоритетСервераСЛК" Тогда 
		Для Каждого СтрокаТаблицы Из ТаблицаНастроек Цикл 
			СтрокаТаблицы[ИмяПодсистемы] = Ложь;
		КонецЦикла;
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДемоРежим(Команда)
	Отказ = Ложь;
	ИзменитьДемоРежим(Не Элементы.СервераСЛКДемоРежим.Пометка, Отказ);
	Если Не Отказ Тогда 
		Элементы.СервераСЛКДемоРежим.Пометка = Не Элементы.СервераСЛКДемоРежим.Пометка;
		ПоказатьПредупреждение(,НСтр("ru='Демо режим ';uk='Демо режим '")+?(Элементы.СервераСЛКДемоРежим.Пометка, НСтр("ru='включен!';uk='включений!'"), НСтр("ru='выключен!';uk='виключений!'")));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаВопросаИзменения(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда 
		СохранитьДанные();
		ЗапросПерезапуска();
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда

	Иначе 
		ПоказатьОповещениеПользователя(НСтр("ru='Параметры СЛК не настроенны!';uk='Параметри СЛК не налаштовані!'"),,НСтр("ru='Параметры СЛК не настроенны, часть функционала будет недоступна! ';uk='Параметри СЛК не налаштовані, частина функціоналу буде недосяжна!'"));
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные()
	ТаблицаДанных = Новый ТаблицаЗначений;
	ТаблицаДанных.Колонки.Добавить("Пользователь");
	ТаблицаДанных.Колонки.Добавить("Подсистема");
	ТаблицаДанных.Колонки.Добавить("Разрешено");
	ТаблицаДанных.Колонки.Добавить("ПриоритетСервераСЛК");
	ТаблицаНастроекЗначение = ДанныеФормыВЗначение(ТаблицаНастроек, Тип("ТаблицаЗначений"));
	Для Каждого СтрокаТаблицыНастроек Из ТаблицаНастроекЗначение Цикл
		СтрокаДанных = ТаблицаДанных.Добавить();
		СтрокаДанных.Пользователь = СтрокаТаблицыНастроек.Пользователь;
		СтрокаДанных.Подсистема = Перечисления.ИНАГРО_Подсистемы.ПустаяСсылка();
		СтрокаДанных.ПриоритетСервераСЛК = СтрокаТаблицыНастроек.ПриоритетСервераСЛК;
		Для НомерКолонки = 2 По ТаблицаНастроекЗначение.Колонки.Количество()-1 Цикл 
			ЗначениеТаблицы = СтрокаТаблицыНастроек.Получить(НомерКолонки);
			Если ЗначениеТаблицы Тогда 
				СтрокаДанных = ТаблицаДанных.Добавить();
				СтрокаДанных.Пользователь = СтрокаТаблицыНастроек.Пользователь;
				СтрокаДанных.Подсистема = Перечисления.ИНАГРО_Подсистемы[ТаблицаНастроекЗначение.Колонки.Получить(НомерКолонки).Имя];
				СтрокаДанных.Разрешено = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	НаборЗаписей = РегистрыСведений.ИНАГРО_НастройкиЗащиты.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(ТаблицаДанных);
	НаборЗаписей.Записать();
	
	ПараметрыСвязиСЛК = "";
	Для Каждого СтрокаСерверов Из СервераСЛК Цикл
		ПараметрыСвязи = "";
		Если Не СокрЛП(СтрокаСерверов.АдресСервераСЛК) = "" Тогда
			ПараметрыСвязи = "host=" + СокрЛП(СтрокаСерверов.АдресСервераСЛК); 
			Если Не СокрЛП(СтрокаСерверов.ПортСервераСЛК) = "" Тогда 
				ПараметрыСвязи = ПараметрыСвязи + ";port=" + СокрЛП(СтрокаСерверов.ПортСервераСЛК);
			КонецЕсли;
		КонецЕсли;
		ПараметрыСвязиСЛК = ПараметрыСвязиСЛК + ПараметрыСвязи + "/";
	КонецЦикла;
	ИНАГРО_СЛК.СохранитьПараметрыСвязи(ПараметрыСвязиСЛК);
	
	Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ЗапросПерезапуска()
	ОбработчикВопроса = Новый ОписаниеОповещения("ОбработкаВопросаПерезапуска", ЭтаФорма);
	ПоказатьВопрос(ОбработчикВопроса, НСтр("ru='Требуется перезапуск системы. Выполнить перезапуск?';uk='Потрібен перезапуск системи. Виконати перезапуск?'"), РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВопросаПерезапуска(Ответ, ДопПараметры) Экспорт 
	Если Ответ = КодВозвратаДиалога.Да Тогда 
		ПрекратитьРаботуСистемы(Истина);
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		ПрекратитьРаботуСистемы(Ложь);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИзменитьДемоРежим(Значение, Отказ)
	Попытка
		Константы.ИНАГРО_ДемоРежим.Установить(Значение);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Отказ = Истина;
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНастроекПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.ТаблицаНастроек.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда 
		ТекущийПриоритет = ТекущиеДанные.ПриоритетСервераСЛК;
	Иначе 
		ТекущийПриоритет = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНастроекПриоритетСервераСЛКПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ТаблицаНастроек.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда 
		Если ТекущиеДанные.ПриоритетСервераСЛК>СервераСЛК.Количество()-1 Тогда 
			ТекущиеДанные.ПриоритетСервераСЛК = ТекущийПриоритет;
		КонецЕсли;
		ТекущийПриоритет = ТекущиеДанные.ПриоритетСервераСЛК;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНастроекПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И Не ИмяКолонки = "" Тогда 
		Элементы.ТаблицаНастроек.ТекущиеДанные[ИмяКолонки] = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СервераСЛКПослеУдаления(Элемент)
	МаксимальныйНомерСервера = СервераСЛК.Количество()-1;
	Для Каждого СтрокаНастроек Из ТаблицаНастроек Цикл 
		Если СтрокаНастроек.ПриоритетСервераСЛК>МаксимальныйНомерСервера Тогда 
			СтрокаНастроек.ПриоритетСервераСЛК = 0;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура АвтозакрытиеПослеУведомления(Ответ, ПараметрыВыполнения) Экспорт
	
	ЗавершитьРаботуСистемы(Ложь);
	
КонецПроцедуры


#КонецОбласти