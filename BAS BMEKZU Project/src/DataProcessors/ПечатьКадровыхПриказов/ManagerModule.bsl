#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_П1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_MXL_П1", НСтр("ru='Приказ о приеме';uk='Наказ про прийом'"),
						ПолучитьТабличныйДокументПриказаП1(УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьКадровыхПриказов.ПФ_MXL_UK_П1"), МассивОбъектов, ОбъектыПечати), ,
						"Обработка.ПечатьКадровыхПриказов.ПФ_MXL_UK_П1");
	КонецЕсли;
					
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_П4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_MXL_П4", НСтр("ru='Приказ об увольнении';uk='Наказ про звільнення'"),
						ПолучитьТабличныйДокументПриказаП4(УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьКадровыхПриказов.ПФ_MXL_UK_П4"), МассивОбъектов, ОбъектыПечати), ,
						"Обработка.ПечатьКадровыхПриказов.ПФ_MXL_UK_П4");
	КонецЕсли;	
	
  
КонецПроцедуры								

////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ФУНКЦИИ ПЕЧАТИ КАДРОВЫХ ДАННЫХ

// Процедура печати документа.
// Возвращает табличный документ - сформированную печатную форму приказа о приеме или увольнении 
//
// Параметры:
//	МассивОбъектов - массив сотрудников
//  ОбъектыПечати  - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//	ВидПриказа     - "ПриказОПриеме" или "ПриказОбУвольнении"
//
// Возвращаемое значение:
//	Табличный документ
//
Функция ПолучитьТабличныйДокументПриказаП1(Макет, МассивОбъектов, ОбъектыПечати)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
	
	ДокументРезультат.КлючПараметровПечати = "ПараметрыПечати_ПриказОПриеме";
	МассивДанныхЗаполнения = ПолучитьДанныеДляПечатиКадровогоПриказаП1(МассивОбъектов);	
	
	ВывестиДанныеКадровогоПриказаВТабличныйДокумент(Макет, ДокументРезультат, МассивДанныхЗаполнения, ОбъектыПечати);
	
	Возврат ДокументРезультат;
КонецФункции 
	
	
// Процедура печати документа.
// Возвращает табличный документ - сформированную печатную форму приказа о приеме или увольнении 
//
// Параметры:
//	МассивОбъектов - массив сотрудников
//  ОбъектыПечати  - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//	ВидПриказа     - "ПриказОПриеме" или "ПриказОбУвольнении"
//
// Возвращаемое значение:
//	Табличный документ
//

Функция ПолучитьТабличныйДокументПриказаП4(Макет, МассивОбъектов, ОбъектыПечати)	
	ДокументРезультат = Новый ТабличныйДокумент;
	НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;

	ДокументРезультат.КлючПараметровПечати = "ПараметрыПечати_ПриказОбУвольнении";
	МассивДанныхЗаполнения = ПолучитьДанныеДляПечатиКадровогоПриказаП4(МассивОбъектов);
	
	ВывестиДанныеКадровогоПриказаВТабличныйДокумент(Макет, ДокументРезультат, МассивДанныхЗаполнения, ОбъектыПечати);
	
	Возврат ДокументРезультат;
КонецФункции 

Процедура ВывестиДанныеКадровогоПриказаВТабличныйДокумент(Макет, ТабличныйДокумент, МассивДанныхЗаполнения, ОбъектыПечати)
	Если Макет <> Неопределено Тогда
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ПервыйПриказ = Истина;
		Для каждого ПараметрыМакета из МассивДанныхЗаполнения Цикл
			Если Не ПервыйПриказ Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйПриказ = Ложь;
			КонецЕсли;
			Макет.Параметры.Заполнить(ПараметрыМакета);
			Если ТабличныйДокумент.ИмяПараметровПечати <> "ПараметрыПечати_ПриказОбУвольнении" Тогда 
				Если ПараметрыМакета.ВидЗанятости = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы Тогда
					Макет.Параметры.ФлагОсновная = ИСТИНА
				Иначе
					Макет.Параметры.ФлагОсновная = ЛОЖЬ
				КонецЕсли;
				
				Для Сч = 1 По 6 Цикл
					Макет.Параметры["Гривны" + Сч] = Сред(Строка(ПараметрыМакета.ТарифнаяСтавкаГривны), Сч, 1);
				КонецЦикла;
				Для Сч = 1 По 2 Цикл
					Макет.Параметры["Копейки" + Сч] = Сред(Строка(ПараметрыМакета.ТарифнаяСтавкаКопейки), Сч, 1);
				КонецЦикла;
				
				Для Сч = 1 По 5 Цикл
					Макет.Параметры["ДоплатаГривны" + Сч] = Сред(Строка(ПараметрыМакета.ДоплатаГривны), Сч, 1);
				КонецЦикла;
				Для Сч = 1 По 2 Цикл
					Макет.Параметры["ДоплатаКопейки" + Сч] = Сред(Строка(ПараметрыМакета.ДоплатаКопейки), Сч, 1);
				КонецЦикла;
				
				СчНадбавок = 1;
				ТекстПроцентНадбавки =  "ПроцентНадбавки" + СчНадбавок;
				Если ПараметрыМакета[ТекстПроцентНадбавки] <> "" Тогда
					Пока СчНадбавок <= 4 И ПараметрыМакета[ТекстПроцентНадбавки] <> "" Цикл
						Процент	= ПараметрыМакета[ТекстПроцентНадбавки];	
						ТекстНадбавка =  "Надбавка" + СчНадбавок;
						Для Сч = 1 По 3 Цикл
							Макет.Параметры["Надбавка"+СчНадбавок+Сч] = Сред(Строка(Процент), Сч, 1);
						КонецЦикла;
						
						Вид = ПараметрыМакета[ТекстНадбавка];
						Позиция = Найти(Вид," за"); 
						Если Позиция > 0 Тогда
							Вид = Сред(Вид,Позиция+4);
						КонецЕсли;	
						Макет.Параметры[ТекстНадбавка] = Вид;
						
						СчНадбавок = СчНадбавок + 1;
						ТекстПроцентНадбавки =  "ПроцентНадбавки" + СчНадбавок;
						
					КонецЦикла;
					ТабличныйДокумент.Вывести(Макет);
				КонецЕсли;
			Иначе
				 ТабличныйДокумент.Вывести(Макет);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если МассивДанныхЗаполнения.Количество()=1 Тогда
		СсылкаНаОбъект = МассивДанныхЗаполнения[0].Ссылка;
	Иначе
		СсылкаНаОбъект = Неопределено;
	КонецЕсли;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, СсылкаНаОбъект);	
КонецПроцедуры	

Функция ПолучитьДанныеДляПечатиКадровогоПриказаП1(МассивОбъектов)
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйУчет") Тогда
		Выборка = КадровыйУчет.СформироватьЗапросДляП1(МассивОбъектов).Выбрать();
		
		МассивПараметров = Новый Массив;
		
		Пока  Выборка.Следующий() Цикл
			
			Параметры = ПолучитьСтруктуруПараметровПриказаП1();		
			
			КадровыйУчет.ЗаполнитьПараметрыКадровогоПриказа(Параметры, Выборка);
			МассивПараметров.Добавить(Параметры);
			
		КонецЦикла;
	Иначе	
		РезультатСтруктура = КадровыйУчет.СформироватьЗапросДляП1(МассивОбъектов);
		ТаблицаНачислений  = РезультатСтруктура.ТаблицаНачислений;
		Выборка = РезультатСтруктура.РезультатЗапроса.Выбрать();
	
		МассивПараметров = Новый Массив;
		
		Пока  Выборка.Следующий() Цикл
			
			Параметры = ПолучитьСтруктуруПараметровПриказаП1();		
			
			КадровыйУчет.ЗаполнитьПараметрыКадровогоПриказа(Параметры, Выборка);
			МассивПараметров.Добавить(Параметры);
			
			СчНадбавок = 1;
			ОтборПоДокументу = Новый Структура();
			ОтборПоДокументу.Вставить("Ссылка",Параметры.Ссылка);
			
			СтрокиНачислений = ТаблицаНачислений.НайтиСтроки(ОтборПоДокументу);
			Если СтрокиНачислений = Неопределено Тогда
				Продолжить;
			КонецЕсли;	
			Для Каждого СтрокаНачислений Из СтрокиНачислений Цикл
				
				Если СтрокаНачислений.ТарифнаяСтавка > 0 Тогда
					ЦелаяЧасть = Цел(СтрокаНачислений.ТарифнаяСтавка);
					Параметры.ТарифнаяСтавкаЦелаяЧасть = ЦелаяЧасть;
					Параметры.ТарифнаяСтавкаГривны = КадровыйУчет.РазложитьЧислоВСтроку(ЦелаяЧасть,6,Ложь);
					ДробнаяЧасть = СтрокаНачислений.ТарифнаяСтавка - ЦелаяЧасть;
					Параметры.ТарифнаяСтавкаДробнаяЧасть = ?(ДробнаяЧасть = 0, "00", ДробнаяЧасть*100);
					Параметры.ТарифнаяСтавкаКопейки = КадровыйУчет.РазложитьЧислоВСтроку(Параметры.ТарифнаяСтавкаДробнаяЧасть,2,Истина);   
					Параметры.Ссылка = СтрокаНачислений.Ссылка;
				ИначеЕсли СтрокаНачислений.Доплата <> NULL И СтрокаНачислений.Доплата > 0 Тогда
					ЦелаяЧасть = Цел(СтрокаНачислений.Доплата);
					Параметры.ДоплатаЦелаяЧасть = ЦелаяЧасть;
					Параметры.ДоплатаГривны = КадровыйУчет.РазложитьЧислоВСтроку(ЦелаяЧасть,5,Ложь);   
					ДробнаяЧасть = СтрокаНачислений.Доплата - ЦелаяЧасть;
					Параметры.ДоплатаДробнаяЧасть = ?(ДробнаяЧасть = 0, "00", ДробнаяЧасть*100);
					Параметры.ДоплатаКопейки = КадровыйУчет.РазложитьЧислоВСтроку(Параметры.ДоплатаДробнаяЧасть,2,Истина);
					Параметры.Ссылка = СтрокаНачислений.Ссылка;
				Иначе
					Процент = Цел(СтрокаНачислений.ПроцентНадбавки);
					Если Процент > 0 Тогда
						ТекстПараметрПроцент = "ПроцентНадбавки"+СчНадбавок;
						ТекстПараметрНадбавка = "Надбавка"+СчНадбавок;
						Параметры[ТекстПараметрПроцент] = КадровыйУчет.РазложитьЧислоВСтроку(Процент,3,Ложь);
						Параметры[ТекстПараметрНадбавка] = СтрокаНачислений.Надбавка;
						СчНадбавок = СчНадбавок + 1;
						Параметры.Ссылка = СтрокаНачислений.Ссылка;
					КонецЕсли;
				КонецЕсли	
				
			КонецЦикла;	
		КонецЦикла;
		
	КонецЕсли;
	Возврат МассивПараметров;

КонецФункции	

Функция ПолучитьДанныеДляПечатиКадровогоПриказаП4(МассивОбъектов)	
	
	РезультатСтруктура = КадровыйУчет.СформироватьЗапросДляП4(МассивОбъектов);
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйУчет") ИЛИ ТипЗнч(МассивОбъектов[0]) = Тип("СправочникСсылка.Сотрудники") Тогда
		Выборка = РезультатСтруктура.Выбрать();	
    Иначе
		Выборка = РезультатСтруктура.РезультатЗапроса.Выбрать();	
    КонецЕсли;
	МассивПараметров = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		
		Параметры = ПолучитьСтруктуруПараметровПриказаП4();		
		
		КадровыйУчет.ЗаполнитьПараметрыКадровогоПриказа(Параметры, Выборка);

		Параметры.ДатаУвольнения = Формат(Выборка.ДатаУвольнения, "Л=uk; ДЛФ=DD");
		Если ТипЗнч(МассивОбъектов[0]) = Тип("СправочникСсылка.Сотрудники") ИЛИ НЕ ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйУчет") Тогда
			Параметры.ПричинаУвольнения = "";
		Иначе
			Если Выборка.ПричинаУвольнения = "" ИЛИ Выборка.ПричинаУвольнения = NULL Тогда 
				Параметры.ПричинаУвольнения = Выборка.СтатьяКЗоТ;
			Иначе
				Параметры.ПричинаУвольнения = Выборка.ПричинаУвольнения + " (" + Выборка.СтатьяКЗоТ + ")";
			КонецЕсли;	
		КонецЕсли;
		МассивПараметров.Добавить(Параметры);
		
	КонецЦикла;
	
	Возврат МассивПараметров;

КонецФункции	
  
Функция ПолучитьСтруктуруПараметровПриказаП1()
	
	Параметры = КадровыйУчет.ПолучитьСтруктуруПараметровКадровогоПриказа();
	
	Параметры.Вставить("ДатаПриема");
	Параметры.Вставить("ДатаЗавершенияТрудовогоДоговора");
	Параметры.Вставить("УсловияПриема");
	Параметры.Вставить("Ссылка");	
	Параметры.Вставить("ТарифнаяСтавкаЦелаяЧасть");
	Параметры.Вставить("ТарифнаяСтавкаДробнаяЧасть");
	Параметры.Вставить("ТарифнаяСтавкаГривны");
	Параметры.Вставить("ТарифнаяСтавкаКопейки");
	Параметры.Вставить("ВалютаТарифнойСтавки", "грн.");
	Параметры.Вставить("КопейкиТарифнойСтавки", "коп.");
	
	Параметры.Вставить("Доплата");
	Параметры.Вставить("ДоплатаЦелаяЧасть");
	Параметры.Вставить("ДоплатаДробнаяЧасть");
	Параметры.Вставить("ДоплатаГривны");
	Параметры.Вставить("ДоплатаКопейки");
	
	Параметры.Вставить("Надбавка1");
	Параметры.Вставить("ПроцентНадбавки1");
	
	Параметры.Вставить("Надбавка2");
	Параметры.Вставить("ПроцентНадбавки2");
	
	Параметры.Вставить("Надбавка3");
	Параметры.Вставить("ПроцентНадбавки3");

	Параметры.Вставить("Надбавка4");
	Параметры.Вставить("ПроцентНадбавки4");
	
	Параметры.Вставить("ДлительностьИспытательногоСрока", "");
	
	Параметры.Вставить("ВидЗанятости");
	Возврат Параметры;
	
КонецФункции	

Функция ПолучитьСтруктуруПараметровПриказаП4()	
	Параметры = КадровыйУчет.ПолучитьСтруктуруПараметровКадровогоПриказа();
	
	Параметры.Вставить("ДатаУвольнения");
	Параметры.Вставить("СтатьяКЗоТ", "");
	Параметры.Вставить("СтатьяЗакона", "");
	Параметры.Вставить("ПричинаУвольнения", "");
	Параметры.Вставить("ОснованиеУвольнения", "");
	
	Возврат Параметры;
	
КонецФункции

#КонецЕсли