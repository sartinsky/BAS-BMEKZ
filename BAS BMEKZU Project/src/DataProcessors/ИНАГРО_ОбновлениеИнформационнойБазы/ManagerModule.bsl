#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНастройкиФормированияРеестров() Экспорт
	
	ТаблицаНастроек = Новый ТаблицаЗначений;
	ТаблицаНастроек.Колонки.Добавить("Период"		, Новый ОписаниеТипов("Дата"));
	ТаблицаНастроек.Колонки.Добавить("Организация"	, Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаНастроек.Колонки.Добавить("ВидРеестра" 	, Новый ОписаниеТипов("ПеречислениеСсылка.ИНАГРО_ВидыРеестровТТН"));
	ТаблицаНастроек.Колонки.Добавить("ИмяРеквизита"	, Новый ОписаниеТипов("Строка"));
	ТаблицаНастроек.Колонки.Добавить("Использовать"	, Новый ОписаниеТипов("Булево"));
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Организации.Ссылка КАК Организация,
		|	ИНАГРО_ПараметрыУчетаЭлеватора.Период КАК Период
		|ИЗ
		|	Справочник.Организации КАК Организации,
		|	РегистрСведений.ИНАГРО_ПараметрыУчетаЭлеватора КАК ИНАГРО_ПараметрыУчетаЭлеватора
		|
		|СГРУППИРОВАТЬ ПО
		|	Организации.Ссылка,
		|	ИНАГРО_ПараметрыУчетаЭлеватора.Период";
	
	РезЗапроса = Запрос.Выполнить();
	
	Выборка = РезЗапроса.Выбрать();	
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьНатройкиПоРеестру(ТаблицаНастроек, Перечисления.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВвоз,    Выборка.Организация, Выборка.Период);
		ЗаполнитьНатройкиПоРеестру(ТаблицаНастроек, Перечисления.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВнутр,   Выборка.Организация, Выборка.Период);
		ЗаполнитьНатройкиПоРеестру(ТаблицаНастроек, Перечисления.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВывоз,   Выборка.Организация, Выборка.Период);
		ЗаполнитьНатройкиПоРеестру(ТаблицаНастроек, Перечисления.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВвозЖД,  Выборка.Организация, Выборка.Период);
		ЗаполнитьНатройкиПоРеестру(ТаблицаНастроек, Перечисления.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВывозЖД, Выборка.Организация, Выборка.Период);		
		
	КонецЦикла;	
	
	НовыеНастройки = РегистрыСведений.ИНАГРО_НастройкиФормированияРеестровТТН.СоздатьНаборЗаписей();
	НовыеНастройки.Загрузить(ТаблицаНастроек);
	НовыеНастройки.Записать();	
	
КонецПроцедуры

Процедура ЗаполнитьНатройкиПоРеестру(ТаблицаНастроек, ВидРеестра, Организация, Период)
	
	ПараметрыУчетаЭлеватора = РегистрыСведений.ИНАГРО_ПараметрыУчетаЭлеватора.ПолучитьПоследнее(Период);
	
	Если ПараметрыУчетаЭлеватора = Неопределено Тогда
		
		ПараметрыУчетаЭлеватора = Новый Структура;
		ПараметрыУчетаЭлеватора.Вставить("ВестиУчетПоФорме37Сводная", Ложь);
		ПараметрыУчетаЭлеватора.Вставить("ВестиУчетПолейТоковПоУслугам", Ложь);
		ПараметрыУчетаЭлеватора.Вставить("УчитыватьСилосПриФормированииРеестраТТННаВвоз", Ложь);
		
	КонецЕсли;
	
	Если ВидРеестра = Перечисления.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВвоз Тогда
		
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "Поставщик", Истина);
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "ЛабораторныйАнализ", Истина);
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "СтепеньВлажности", Истина);
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "СтепеньЗагрязнения", Истина);
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "СтепеньЗараженности", Истина);
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "НомерПробы", Истина);
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "Силос", ПараметрыУчетаЭлеватора.УчитыватьСилосПриФормированииРеестраТТННаВвоз);
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "МестоХранения", ПараметрыУчетаЭлеватора.ВестиУчетПоФорме37Сводная);
		//ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "ПолеТок", ПараметрыУчетаЭлеватора.ВестиУчетПолейТоковПоУслугам);
		
	ИначеЕсли ВидРеестра = Перечисления.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВнутр Тогда 
		
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "МестоХранения", ПараметрыУчетаЭлеватора.ВестиУчетПоФорме37Сводная);
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "НовоеМестоХранения", ПараметрыУчетаЭлеватора.ВестиУчетПоФорме37Сводная);
		
	ИначеЕсли ВидРеестра = Перечисления.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВывоз Тогда
		
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "МестоХранения", ПараметрыУчетаЭлеватора.ВестиУчетПоФорме37Сводная);
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "ЛабораторныйАнализ", Истина);
		
	ИначеЕсли ВидРеестра = Перечисления.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВвозЖД Тогда
		
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "МестоХранения", ПараметрыУчетаЭлеватора.ВестиУчетПоФорме37Сводная);
		
	ИначеЕсли ВидРеестра = Перечисления.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВывозЖД Тогда			
		
		ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, "МестоХранения", ПараметрыУчетаЭлеватора.ВестиУчетПоФорме37Сводная);
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ДобавитьНастройкуПоРеестру(ТаблицаНастроек, Организация, Период, ВидРеестра, ИмяРеквизита, Использовать)
	
	Стр = ТаблицаНастроек.Добавить();
	
	Стр.Период 			= ?(ЗначениеЗаполнено(Период),Период,НачалоГода(ТекущаяДата()));
	Стр.Организация		= Организация;
	Стр.ВидРеестра 		= ВидРеестра;
	Стр.ИмяРеквизита 	= ИмяРеквизита;
	Стр.Использовать 	= Использовать;	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли