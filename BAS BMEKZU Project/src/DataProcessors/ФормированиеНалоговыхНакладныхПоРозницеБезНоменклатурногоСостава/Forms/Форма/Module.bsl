
&НаКлиенте
Процедура ФормаРасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормыОплаты = Новый СписокЗначений();
	ФормыОплаты.Добавить("Готівка");
	Если Объект.Дата >= '2015-01-01' Тогда
	    ФормыОплаты.Добавить("Оплата з поточного рахунка");
	Иначе	
		ФормыОплаты.Добавить("Оплата з поточного рахунку");
	КонецЕсли;
		
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ФормаРасчетовВыборИзСпискаЗавершение", ЭтотОбъект), ФормыОплаты, Элемент, ФормыОплаты[0]);
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаРасчетовВыборИзСпискаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
    
    РезультатВыбора = ВыбранныйЭлемент;
    Если Не РезультатВыбора = Неопределено Тогда
        
        Объект.ФормаРасчетов = РезультатВыбора.Значение;
        
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаВыполнить(Команда)
	
	ЕстьОшибка = Ложь;
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не указана Организация!';uk='Не вказана Організація!'");
		Сообщение.Поле = "Объект.Организация";
		Сообщение.УстановитьДанные(Объект);
		Сообщение.Сообщить(); 
	
		ЕстьОшибка = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Дата) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не указана Дата!';uk='Не вказана Дата!'");
		Сообщение.Поле = "Объект.Дата";
		Сообщение.УстановитьДанные(Объект);
		Сообщение.Сообщить(); 
		
		ЕстьОшибка = Истина;
	КонецЕсли;
	
	Если ЕстьОшибка Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = Новый Структура("Дата, Организация, ОбособленноеПодразделение, ФормаРасчетов, ПроводитьДокументы");
	ЗаполнитьЗначенияСвойств(Настройки, Объект);
	
	МассивСозданныхДокументов = ВыполнитьНаСервере(Настройки);
	
	
	// открываем документы
	Если Объект.ОткрыватьДокументы Тогда
		
		Для каждого Документ Из МассивСозданныхДокументов Цикл
			
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.НалоговаяНакладная") Тогда
				ИмяДок = "НалоговаяНакладная";
			Иначе
				ИмяДок = "Приложение2КНалоговойНакладной";
			КонецЕсли;
			
			ОткрытьФорму("Документ." + ИмяДок + ".ФормаОбъекта", Новый Структура("Ключ", Документ));	
			
		КонецЦикла;
		
	Иначе// или сообщим о создании документов
		
		Для каждого Документ Из МассивСозданныхДокументов Цикл
			
			Сообщение = Новый СообщениеПользователю;
			
			Сообщение.КлючДанных = Документ;
			Сообщение.Текст = НСтр("ru='Создан документ: ';uk='Створений документ: '") + Документ;
			Сообщение.Сообщить();
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Объект.ПечататьДокументы Тогда
		
		МассивНН = Новый Массив;
		МассивП2 = Новый Массив;
		Для каждого Документ Из МассивСозданныхДокументов Цикл
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.НалоговаяНакладная") Тогда
				МассивНН.Добавить(Документ);
			Иначе
				МассивП2.Добавить(Документ);				
			КонецЕсли;
		КонецЦикла;
		
		Если Объект.ПечататьНаПринтер Тогда
			Если МассивНН.Количество() > 0 Тогда
				УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер("Документ.НалоговаяНакладная", "НалоговаяНакладная", МассивСозданныхДокументов);
			КонецЕсли;
			Если МассивП2.Количество() > 0 Тогда
				УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер("Документ.Приложени2КНалоговойНакладной", "Приложение2КНалоговойНакладной", МассивСозданныхДокументов);
			КонецЕсли;
		Иначе
			Если МассивНН.Количество() > 0 Тогда
				УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.НалоговаяНакладная", "НалоговаяНакладная", МассивСозданныхДокументов, ЭтаФорма);
			КонецЕсли;
			Если МассивП2.Количество() > 0 Тогда
				УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.Приложени2КНалоговойНакладной", "Приложение2КНалоговойНакладной", МассивСозданныхДокументов, ЭтаФорма);
			КонецЕсли;
		КонецЕсли;
	
	КонецЕсли;
	
	ПоказатьПредупреждение(,НСтр("ru='Формирование документов закончено. Сформировано документов: ';uk='Формування документів закінчено. Сформовано документів: '") + МассивСозданныхДокументов.Количество());
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьНаСервере(Настройки)

	Возврат Обработки.ФормированиеНалоговыхНакладныхПоРозницеБезНоменклатурногоСостава.СформироватьНалоговыеДокументыПоРознице(Настройки);	

КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Свойство("ЗначенияРеквизитов") Тогда
		ЗаполнитьЗначенияСвойств(Объект, Параметры.ЗначенияРеквизитов);	
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ОбособленноеПодразделение) Тогда
		Объект.ОбособленноеПодразделение = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновноеОбособленноеПодразделениеОрганизации");	
	КонецЕсли; 
	
	ПроверитьОбособленноеПодразделение(Объект.Организация, Объект.ОбособленноеПодразделение);

	Если НЕ ЗначениеЗаполнено(Объект.Дата) Тогда
		Объект.Дата = ОбщегоНазначенияБП.ПолучитьРабочуюДату();
	КонецЕсли;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()

	Элементы.ПечататьНаПринтер.Доступность = Объект.ПечататьДокументы;	

КонецПроцедуры

&НаКлиенте
Процедура ПечататьДокументыПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПроверитьОбособленноеПодразделение(Объект.Организация, Объект.ОбособленноеПодразделение);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьОбособленноеПодразделение(Организация, ОбособленноеПодразделение)

	Если НЕ ОбособленноеПодразделение.Владелец = Организация Тогда
		ОбособленноеПодразделение = Неопределено;				
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если Объект.Дата >= '2015-01-01' И Объект.ФормаРасчетов = "Оплата з поточного рахунку" Тогда
		
		Объект.ФормаРасчетов = "Оплата з поточного рахунка"
		
	ИначеЕсли Объект.Дата < '2015-01-01' И Объект.ФормаРасчетов = "Оплата з поточного рахунка" Тогда	
		
		Объект.ФормаРасчетов = "Оплата з поточного рахунку"
	
	КонецЕсли;
	
КонецПроцедуры
