&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

&НаСервере
Перем ОбъектОтбора;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектОтбора", ОбъектОтбора);
	
	УчетЗарплатыИКадровВоВнешнейПрограмме = ПолучитьФункциональнуюОпцию("УчетЗарплатыИКадровВоВнешнейПрограмме");
	
	Объект.СтатьяДвиженияДенежныхСредств = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ИНАГРО_ФормированиеРКО", "СтатьяДвиженияДенежныхСредств", 
		Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка());
	
	Если ОбъектОтбора = Неопределено Тогда
		Объект.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
		Объект.ДатаРКО = ОбщегоНазначения.ТекущаяДатаПользователя();
	Иначе	
		Объект.Организация = ОбъектОтбора.Организация;
		Объект.ДатаРКО = ОбщегоНазначения.ТекущаяДатаПользователя();
		НС = Объект.ДокументыНачисления.Добавить();
		НС.Ведомость = ОбъектОтбора;
		Объект.ОтборПоВедомости = Истина;
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.ОтборПоВедомости Тогда
		Этаформа.Элементы.ГруппаВедомостиНалоги.Видимость = Ложь;
		Этаформа.Элементы.ПДЗаполнить.Видимость = Ложь;
		ЗаполнитьПоВедомостям();
		ЗаполнитьДокументы();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("ИНАГРО_ФормированиеРКО", "СтатьяДвиженияДенежныхСредств", Объект.СтатьяДвиженияДенежныхСредств);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицФормы

&НаКлиенте
Процедура ДокументыНачисленияПриИзменении(Элемент)
	
	ЗаполнитьПоВедомостям();
	
КонецПроцедуры

&НаКлиенте
Процедура ПДВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.РКО) Тогда
		РКОСсылка = ПолучитьНавигационнуюСсылку(Элемент.ТекущиеДанные.РКО);
		ПерейтиПоНавигационнойСсылке(РКОСсылка);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьФлаги(Команда)
	
	УстановкаФлажков(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлаги(Команда)
	
	УстановкаФлажков(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьФлаги(Команда)
	
	УстановкаФлажков();
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьДокументы();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьДокументы();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	
	Если Объект.Платежки.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ТекстСообщения = НСтр("ru='Не указана организация!';uk='Не зазначена організація!'");
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст       = ТекстСообщения;
		Сообщение.Поле        = "Организация";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		Сообщение.Сообщить();
		
		Возврат
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаРКО) Тогда
		
		ТекстСообщения = НСтр("ru='Не указана дата, на которую формируются документы!';uk='Не вказана дата, на яку формуються документи!'");
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст       = ТекстСообщения;
		Сообщение.Поле        = "ДатаРКО";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		Сообщение.Сообщить();
		
		Возврат
	КонецЕсли;
	
	Если ЭтаФорма.ИспользоватьСтатьиДвиженияДенежныхСредств Тогда		
		Если НЕ ЗначениеЗаполнено(Объект.СтатьяДвиженияДенежныхСредств) Тогда		
			ТекстСообщения = НСтр("ru='Не указана статья движения денежных средств!';uk='Не вказана стаття руху коштів!'");

			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст       = ТекстСообщения;
			Сообщение.Поле        = "СтатьяДвиженияДенежныхСредств";
			Сообщение.ПутьКДанным = "Объект";
			Сообщение.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;		
	КонецЕсли;
	
	СоздатьПлатежныеДокументы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокументы(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ТекстСообщения = НСтр("ru='Не указана организация!';uk='Не зазначена організація!'");
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст       = ТекстСообщения;
		Сообщение.Поле        = "Организация";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		Сообщение.Сообщить();
		
		Возврат
	КонецЕсли;
	
	ПровестиПлатежныеДокументы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПоВедомостям()
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ТекстСообщения = НСтр("ru='Не указана организация!';uk='Не зазначена організація!'");
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст       = ТекстСообщения;
		Сообщение.Поле        = "Организация";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		Сообщение.Сообщить();
		
		Возврат
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	СтруктураОбъекта = Новый Структура();
	СтруктураОбъекта.Вставить("Организация",                   ОбработкаОбъект.Организация);
	СтруктураОбъекта.Вставить("ДокументыНачисления",           ОбработкаОбъект.ДокументыНачисления.Выгрузить());
	СтруктураОбъекта.Вставить("Налоги", 			           ОбработкаОбъект.Налоги.Выгрузить());
	СтруктураОбъекта.Вставить("Платежки", 			           ОбработкаОбъект.Платежки.Выгрузить());
	СтруктураОбъекта.Вставить("СтатьяДвиженияДенежныхСредств", ОбработкаОбъект.СтатьяДвиженияДенежныхСредств);
	СтруктураОбъекта.Вставить("ДатаРКО",                  	   ОбработкаОбъект.ДатаРКО);
	
	ПараметрыЗаполнения = Новый Структура("Объект", СтруктураОбъекта);
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		
		Обработки.ИНАГРО_ФормированиеРКО.АвтозаполнениеПоВедомостям(ПараметрыЗаполнения, АдресХранилища);
				
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
	Иначе
		НаименованиеЗадания = НСтр("ru='Создание расходных кассовых ордеров';uk='Створення видаткових касових ордерів'");
		
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			Новый УникальныйИдентификатор,
			"Обработки.ИНАГРО_ФормированиеРКО.АвтозаполнениеПоВедомостям", 
			ПараметрыЗаполнения, 
			НаименованиеЗадания);
			
		АдресХранилища = Результат.АдресХранилища;	
	КонецЕсли;
		
	Если Результат.ЗаданиеВыполнено Тогда	
		ЗагрузитьРезультат();
	КонецЕсли;	
				
КонецПроцедуры

&НаСервере
Процедура УстановкаФлажков(Значение = Неопределено)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Если Значение = Неопределено Тогда 
		Для Каждого СтрокаТаблицы Из ОбработкаОбъект.Платежки Цикл
			СтрокаТаблицы.Отметка = НЕ СтрокаТаблицы.Отметка;
		КонецЦикла;
	Иначе
		Для Каждого СтрокаТаблицы Из ОбработкаОбъект.Платежки Цикл
			СтрокаТаблицы.Отметка = Значение;
		КонецЦикла;
	КонецЕсли;
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
				
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументы()
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ТекстСообщения = НСтр("ru='Не указана организация!';uk='Не зазначена організація!'");
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст       = ТекстСообщения;
		Сообщение.Поле        = "Организация";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		Сообщение.Сообщить();
		
		Возврат
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	СтруктураОбъекта = Новый Структура();
	СтруктураОбъекта.Вставить("Организация",                   ОбработкаОбъект.Организация);
	СтруктураОбъекта.Вставить("ДокументыНачисления",           ОбработкаОбъект.ДокументыНачисления.Выгрузить());
	СтруктураОбъекта.Вставить("Налоги", 			           ОбработкаОбъект.Налоги.Выгрузить());
	СтруктураОбъекта.Вставить("Платежки", 			           ОбработкаОбъект.Платежки.Выгрузить());
	СтруктураОбъекта.Вставить("СтатьяДвиженияДенежныхСредств", ОбработкаОбъект.СтатьяДвиженияДенежныхСредств);
	СтруктураОбъекта.Вставить("ДатаРКО",                       ОбработкаОбъект.ДатаРКО);
	
	ПараметрыЗаполнения = Новый Структура("Объект", СтруктураОбъекта);
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		
		Обработки.ИНАГРО_ФормированиеРКО.АвтозаполнениеДокументов(ПараметрыЗаполнения, АдресХранилища);
			
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
	Иначе
		НаименованиеЗадания = НСтр("ru='Создание расходных кассовых ордеров';uk='Створення видаткових касових ордерів'");
		
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			Новый УникальныйИдентификатор,
			"Обработки.ИНАГРО_ФормированиеРКО.АвтозаполнениеДокументов", 
			ПараметрыЗаполнения, 
			НаименованиеЗадания);
			
		АдресХранилища = Результат.АдресХранилища;	
	КонецЕсли;
		
	Если Результат.ЗаданиеВыполнено Тогда	
		ЗагрузитьРезультат();
	КонецЕсли;	
				
КонецПроцедуры

&НаСервере
Процедура СоздатьПлатежныеДокументы()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	СтруктураОбъекта = Новый Структура();
	СтруктураОбъекта.Вставить("Организация",                   ОбработкаОбъект.Организация);
	СтруктураОбъекта.Вставить("ДокументыНачисления",           ОбработкаОбъект.ДокументыНачисления.Выгрузить());
	СтруктураОбъекта.Вставить("Налоги", 			           ОбработкаОбъект.Налоги.Выгрузить());
	СтруктураОбъекта.Вставить("Платежки", 			           ОбработкаОбъект.Платежки.Выгрузить());
	СтруктураОбъекта.Вставить("СтатьяДвиженияДенежныхСредств", ОбработкаОбъект.СтатьяДвиженияДенежныхСредств);
	СтруктураОбъекта.Вставить("ДатаРКО",                       ОбработкаОбъект.ДатаРКО);

	ПараметрыСоздания = Новый Структура("Объект", СтруктураОбъекта);
		
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		
		Обработки.ИНАГРО_ФормированиеРКО.СоздатьДокументы(ПараметрыСоздания, АдресХранилища);	
		
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
	Иначе
		НаименованиеЗадания = НСтр("ru='Создание расходных кассовых ордеров';uk='Створення видаткових касових ордерів'");
		
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			Новый УникальныйИдентификатор,
			"Обработки.ИНАГРО_ФормированиеРКО.СоздатьДокументы", 
			ПараметрыСоздания, 
			НаименованиеЗадания);
			
		АдресХранилища = Результат.АдресХранилища;	
	КонецЕсли;
		
	Если Результат.ЗаданиеВыполнено Тогда	
		ЗагрузитьРезультат();
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ПровестиПлатежныеДокументы()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ОбработкаОбъект.Платежки.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	СтруктураОбъекта = Новый Структура();
	СтруктураОбъекта.Вставить("Организация",                   ОбработкаОбъект.Организация);
	СтруктураОбъекта.Вставить("ДокументыНачисления",           ОбработкаОбъект.ДокументыНачисления.Выгрузить());
	СтруктураОбъекта.Вставить("Налоги", 			           ОбработкаОбъект.Налоги.Выгрузить());
	СтруктураОбъекта.Вставить("Платежки", 			           ОбработкаОбъект.Платежки.Выгрузить());
	СтруктураОбъекта.Вставить("СтатьяДвиженияДенежныхСредств", ОбработкаОбъект.СтатьяДвиженияДенежныхСредств);
	СтруктураОбъекта.Вставить("ДатаРКО",                  	   ОбработкаОбъект.ДатаРКО);
	
	ПараметрыПроведения = Новый Структура("Объект", СтруктураОбъекта);
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		
		Обработки.ИНАГРО_ФормированиеРКО.ПровестиДокументы(ПараметрыПроведения, АдресХранилища);
	
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
	Иначе
		НаименованиеЗадания = НСтр("ru='Создание расходных кассовых ордеров';uk='Створення видаткових касових ордерів'");
		
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
		Новый УникальныйИдентификатор,
		"Обработки.ИНАГРО_ФормированиеРКО.ПровестиДокументы", 
		ПараметрыПроведения, 
		НаименованиеЗадания);
		
		АдресХранилища = Результат.АдресХранилища;	
	КонецЕсли;
	
	Если Результат.ЗаданиеВыполнено Тогда	
		ЗагрузитьРезультат();
	КонецЕсли;	
    	
КонецПроцедуры
&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьРезультат()
	
	Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Свойство("Объект",) Тогда
			Объект.Налоги.Загрузить(Результат.Объект.Налоги);
			Объект.Платежки.Загрузить(Результат.Объект.Платежки);
		КонецЕсли;                                           

		Если Результат.Свойство("Отказ",) Тогда
			Если Результат.Отказ Тогда
				ТекстСообщения = НСтр("ru='Не все документы удалось провести!';uk='Не всі документи вдалося провести!'");		
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрочийФункционал

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
				ЗагрузитьРезультат();
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания(
					"Подключаемый_ПроверитьВыполнениеЗадания", 
					ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
					Истина);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти