#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ВыполнитьСохранениеНумерацииВФоне(СтруктураПараметров, АдресХранилища) Экспорт
	
	РезультатВыполнения = Новый Структура();
	Попытка
		
		ВыполнитьСохранениеНумерации();
		
		ПараметрыПомощника = ОбновлениеСПредыдущейРедакции.ПараметрыПереходаСРедакции12();
		ПараметрыПомощника.ЗапуститьПомощникПереходаСРедакции12 = Ложь;
		ОбновлениеСПредыдущейРедакции.УстановитьПараметрыПереходаСРедакции12(ПараметрыПомощника);
		
		РезультатВыполнения.Вставить("ВыполненоУспешно", Истина);
		
	Исключение
		
		ЗаписьЖурналаРегистрации(НСтр("ru='Помощник перехода с 1.2.Восстановление нумерации';uk='Помічник переходу з 1.2.Відновлення нумерації'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		РезультатВыполнения.Вставить("ВыполненоУспешно", Ложь);
		РезультатВыполнения.Вставить("ИнформацияОбОшибке", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
	
КонецПроцедуры

Процедура ВыполнитьСохранениеНумерацииПриОбновлении() Экспорт
	
	ПараметрыПомощника = ОбновлениеСПредыдущейРедакции.ПараметрыПереходаСРедакции12();
	
	Если НЕ ЗначениеЗаполнено(Константы.УдалитьНомерВерсииКонфигурации.Получить()) Тогда
		ПараметрыПомощника.ЗапуститьПомощникПереходаСРедакции12 = Ложь;
	Иначе
		ПрефиксыИзменены = ПрефиксыПослеПереходаС12Изменены();
		Если НЕ ПрефиксыИзменены Тогда
			ВыполнитьСохранениеНумерации();
			ПараметрыПомощника.ЗапуститьПомощникПереходаСРедакции12 = Ложь;
		Иначе
			ПараметрыПомощника.ЗапуститьПомощникПереходаСРедакции12 = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ОбновлениеСПредыдущейРедакции.УстановитьПараметрыПереходаСРедакции12(ПараметрыПомощника);
	
КонецПроцедуры

Функция ПолучитьТаблицуОрганизацийСПрефиксами() Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	ВЫБОР
	|		КОГДА Организации.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Организации.Ссылка
	|		ИНАЧЕ Организации.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Организации.ПрефиксБ12 КАК ПрефиксРедакции12,
	|	Организации.Префикс КАК ПрефиксРедакции20,
	|	ИСТИНА КАК ПрефиксУникален
	|ИЗ
	|	Справочник.Организации КАК Организации
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	Организация
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	ОрганизацииСПрефиксами = Запрос.Выполнить().Выгрузить();
	
	Возврат ОрганизацииСПрефиксами;
	
КонецФункции

Процедура ПараметрыРаботыКлиентаПриЗапуске(Параметры) Экспорт
	
	ПараметрыПомощника = ОбновлениеСПредыдущейРедакции.ПараметрыПереходаСРедакции12();
	Параметры.Вставить("ПоказатьПомощникПереходаСРедакции12", ПараметрыПомощника.ЗапуститьПомощникПереходаСРедакции12);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПрефиксыПослеПереходаС12Изменены()
	
	Если СокрЛП(Константы.ПрефиксУзлаРаспределеннойИнформационнойБазы.Получить())
		<> СокрЛП(Константы.ПрефиксУзлаРаспределеннойИнформационнойБазыБ12.Получить()) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ТаблицаОрганизацийСПрефиксами = ПолучитьТаблицуОрганизацийСПрефиксами();
	ТаблицаОрганизацийСПрефиксами.Свернуть("ПрефиксРедакции12, ПрефиксРедакции20", "");
	Для Каждого ПараПрефиксов Из ТаблицаОрганизацийСПрефиксами Цикл
		
		Если ПараПрефиксов.ПрефиксРедакции12 <> ПараПрефиксов.ПрефиксРедакции20 Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Процедура ВыполнитьСохранениеНумерации()
	
	ПрефиксИБ12 = Константы.ПрефиксУзлаРаспределеннойИнформационнойБазыБ12.Получить();
	
	ДокументыИсключения = ПолучитьДокументыИсключения();
	
	ТаблицаОрганизацийСПрефиксами = ПолучитьТаблицуОрганизацийСПрефиксами();
	Для Каждого МетаданныеДокумента ИЗ Метаданные.Документы Цикл
				
		Если ДокументыИсключения.Найти(МетаданныеДокумента.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаПрефикса ИЗ ТаблицаОрганизацийСПрефиксами Цикл 
			
			МассивПользовательскихПрефиксов = ПолучитьМассивПользовательскихПрефиксовДокумента(МетаданныеДокумента.Имя,СтрокаПрефикса.Организация);
			
			Для Каждого Префиксы ИЗ МассивПользовательскихПрефиксов Цикл
				ВыполнитьСохранениеНумерацииДляДокумента(МетаданныеДокумента, СтрокаПрефикса.Организация, 
															ПрефиксИБ12, Префиксы.Префикс12, Префиксы.Префикс20);															
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;

	
КонецПроцедуры

Процедура ВыполнитьСохранениеНумерацииДляДокумента(МетаданныеДокумента, Организация, ПрефиксИБ12, ПользовательскийПрефикс12, ПользовательскийПрефикс20)
	
	ПрефиксРедакции12 = ПолучитьПолныйПрефиксРедакции12(ПрефиксИБ12, Организация, ПользовательскийПрефикс12);
	ПрефиксРедакции20 = ПолучитьПолныйПрефиксРедакции20(Организация, ПользовательскийПрефикс20);
	
	СоздатьДокументыСохраненияНумерацииДляВидаДокумента(МетаданныеДокумента, Организация, ПрефиксРедакции12, ПрефиксРедакции20);

КонецПроцедуры


Процедура СоздатьДокументыСохраненияНумерацииДляВидаДокумента(МетаданныеДокумента, Организация, ПрефиксРедакции12, ПрефиксРедакции20)
	
	Если МетаданныеДокумента.Автонумерация
		И МетаданныеДокумента.ДлинаНомера > 0 Тогда
		
		Если МетаданныеДокумента.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Год Тогда
			
			ДатаПериода = ТекущаяДатаСеанса();
			СоздатьСлужебныеДокументыЗаПериод(МетаданныеДокумента, Организация, ПрефиксРедакции12, ПрефиксРедакции20, НачалоГода(ДатаПериода), КонецГода(ДатаПериода));
			
			ДатаПериода = НачалоГода(ТекущаяДатаСеанса())-1;
			СоздатьСлужебныеДокументыЗаПериод(МетаданныеДокумента, Организация, ПрефиксРедакции12, ПрефиксРедакции20, НачалоГода(ДатаПериода), КонецГода(ДатаПериода));
			
		ИначеЕсли МетаданныеДокумента.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Непериодический Тогда
			
			СоздатьСлужебныеДокументыЗаПериод(МетаданныеДокумента, Организация, ПрефиксРедакции12, ПрефиксРедакции20);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
 
Процедура СоздатьСлужебныеДокументыЗаПериод(МетаданныеДокумента, Организация, ПрефиксРедакции12, ПрефиксРедакции20, НачалоПериода = Неопределено, ОкончаниеПериода = Неопределено)
	
	НомерДокументаСПрефиксом12 = ПолучитьМаксимальныйНомерДокументаСПрефиксом(МетаданныеДокумента, Организация, ПрефиксРедакции12, НачалоПериода, ОкончаниеПериода);
	
	Если НомерДокументаСПрефиксом12 <> Неопределено Тогда
		
		НомерДокументаСПрефиксом20 = ПолучитьМаксимальныйНомерДокументаСПрефиксом(МетаданныеДокумента, Организация, ПрефиксРедакции20, НачалоПериода, ОкончаниеПериода);
		Если НомерДокументаСПрефиксом20 <> Неопределено
			И НомерДокументаСПрефиксом20 >= НомерДокументаСПрефиксом12 Тогда
			Возврат;
		КонецЕсли;
		
		НомерРедакции20 = ПолучитьНомер20(МетаданныеДокумента, НомерДокументаСПрефиксом12, ПрефиксРедакции12, ПрефиксРедакции20);
		
		Если НомерРедакции20 <> Неопределено Тогда
			СлужебныйДокумент = Документы[МетаданныеДокумента.Имя].СоздатьДокумент();
			
			СвойстваЗаполнения = Новый Структура;
			Если МетаданныеДокумента.Реквизиты.Найти("Организация") <> Неопределено Тогда
				СвойстваЗаполнения.Вставить("Организация", Организация);
			КонецЕсли;
	
			СлужебныйДокумент.Дата = ?(НачалоПериода = Неопределено, НачалоГода(ТекущаяДатаСеанса()), НачалоПериода);
			Если МетаданныеДокумента.Реквизиты.Найти("Комментарий") <> Неопределено Тогда
				СлужебныйДокумент.Комментарий = "#Служебный документ для сохранения нумерации после обновления с редакции 1.2";
			КонецЕсли;
			СлужебныйДокумент.Номер = НомерРедакции20;
			СлужебныйДокумент.Заполнить(СвойстваЗаполнения);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(СлужебныйДокумент);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьМаксимальныйНомерДокументаСПрефиксом(МетаданныеДокумента, Организация, Префикс, НачалоПериода, ОкончаниеПериода)
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("ШаблонНомера", Префикс + "%");
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(Документ.Номер) КАК Номер
	|ИЗ
	|	Документ."+МетаданныеДокумента.Имя+" КАК Документ
	|ГДЕ
	|	Документ.Номер Подобно &ШаблонНомера";
	
	Если НачалоПериода <> Неопределено
		И ОкончаниеПериода <> Неопределено Тогда
		
		Запрос.Параметры.Вставить("ДатаНачалаПериода", НачалоПериода);
		Запрос.Параметры.Вставить("ДатаОкончаниеПериода", ОкончаниеПериода);
		
		Запрос.Текст = Запрос.Текст + "
		|	И Документ.Дата >= &ДатаНачалаПериода
		|	И Документ.Дата <= &ДатаОкончаниеПериода";
		
	КонецЕсли;
	
	Если МетаданныеДокумента.Реквизиты.Найти("Организация") <> Неопределено Тогда
		
		Запрос.Параметры.Вставить("Организация", Организация);
		
		Запрос.Текст = Запрос.Текст + "
		|	И Документ.Организация = &Организация";
	КонецЕсли;
		
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И
		Выборка.Номер <> NULL Тогда
		Возврат Выборка.Номер;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьНомер20(Документ, НомерДокументаСПрефиксом12, ПрефиксРедакции12, ПрефиксРедакции20)
	
	Если Лев(НомерДокументаСПрефиксом12, СтрДлина(ПрефиксРедакции12)) <> ПрефиксРедакции12 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НомерБезПрефикса = Сред(НомерДокументаСПрефиксом12, СтрДлина(ПрефиксРедакции12)+1);
	МаксимальнаяДлинаНомера = Документ.ДлинаНомера;
	
	ПользовательскийПрефикс = "";
	Для К = 1 По СтрДлина(НомерБезПрефикса) Цикл
		Если Найти("0123456789", Сред(НомерБезПрефикса, К, 1))=0 Тогда
			ПользовательскийПрефикс = ПользовательскийПрефикс + Сред(НомерБезПрефикса, К, 1);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	НомерБезПрефикса = Сред(НомерБезПрефикса, СтрДлина(ПользовательскийПрефикс)+1);
	
	Если СтрДлина(ПрефиксРедакции20 + ПользовательскийПрефикс + НомерБезПрефикса) > МаксимальнаяДлинаНомера Тогда
		
		//удаляем лидирующие нули номера пока длина номера не будет равна максимальному номеру из конфигуратора
		Пока Лев(НомерБезПрефикса, 1) = "0"
			И СтрДлина(ПрефиксРедакции20 + ПользовательскийПрефикс + НомерБезПрефикса) > МаксимальнаяДлинаНомера Цикл
			НомерБезПрефикса = Сред(НомерБезПрефикса, 2);
		КонецЦикла;
		
	ИначеЕсли СтрДлина(ПрефиксРедакции20 + ПользовательскийПрефикс + НомерБезПрефикса) < МаксимальнаяДлинаНомера Тогда
		
		//добавляем лидирующие нули номера пока длина номера не будет равна максимальному номеру из конфигуратора
		Пока СтрДлина(ПрефиксРедакции20 + ПользовательскийПрефикс + НомерБезПрефикса) < МаксимальнаяДлинаНомера Цикл
			НомерБезПрефикса = "0" + НомерБезПрефикса;
		КонецЦикла;
		
	КонецЕсли;
	
	Если СтрДлина(ПрефиксРедакции20 + ПользовательскийПрефикс + НомерБезПрефикса) > МаксимальнаяДлинаНомера Тогда
		Возврат Неопределено;
	Иначе
		Возврат ПрефиксРедакции20 + ПользовательскийПрефикс + НомерБезПрефикса;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПолныйПрефиксРедакции12(ПрефиксИБ12, Организация,  ПользовательскийПрефикс)
	
	ПрефиксОрганизацииРедакции12 = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ПрефиксБ12");
	Если ЗначениеЗаполнено(ПрефиксОрганизацииРедакции12) Тогда
		Префикс = СокрП(ПрефиксОрганизацииРедакции12);
	Иначе
		Префикс = "0";
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ПрефиксИБ12) Тогда
		
		Префикс = ПрефиксИБ12 + Префикс;
		
	КонецЕсли;
	
	Префикс = Префикс + ПользовательскийПрефикс;
	
	Возврат Префикс;
	
КонецФункции

Функция ПолучитьПолныйПрефиксРедакции20(Организация, ПользовательскийПрефикс)
	
	ПрефиксОрганизацииРедакции20 = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "Префикс");
	Если ЗначениеЗаполнено(ПрефиксОрганизацииРедакции20) Тогда
		Префикс = ПрефиксОрганизацииРедакции20;
	Иначе
		Префикс = "0";
	КонецЕсли;
	
	ПрефиксИБ = "";
	ПрефиксИБ = ОбменДаннымиСервер.ПрефиксИнформационнойБазы();
	ПрефиксИБ = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(ПрефиксИБ, 2, "0", "Слева");
	
	Возврат Префикс + ПрефиксИБ + "-" + ПользовательскийПрефикс;
		
	//Префикс = ПользовательскийПрефикс + Префикс;
	
	//Если НЕ ПустаяСтрока(ПрефиксИБ12) Тогда
	//	
	//	Префикс = ПрефиксИБ12 + Префикс;
	//	
	//КонецЕсли;
	
	//Возврат Префикс;
	//Возврат ПрефиксацияОбъектовБПСобытия.ПрефиксИнформационнойБазыОрганизацииПодразделения(Организация, Подразделение, ПользовательскийПрефикс); (Проверка: Сервер)

	
КонецФункции

Функция ПолучитьДокументыИсключения()
	
	ДокументыИсключения = Новый Массив;
	ТипыПодписки = Новый Массив();
	ТипыПодписки.Добавить(Метаданные.ПодпискиНаСобытия.УстановитьПрефиксИнформационнойБазыИОрганизацииНомеруДокументаНДС.Источник);
	ТипыПодписки.Добавить(Метаданные.ПодпискиНаСобытия.УстановитьПрефиксИнформационнойБазыИОрганизацииНомеруДокумента.Источник);
	
	Для Каждого ТипДокумента ИЗ Метаданные.Документы Цикл
		ТипСодержитсяВПодписке = Ложь;
		Для Каждого Типы Из ТипыПодписки Цикл
			Если Типы.СодержитТип(Тип("ДокументОбъект."+ТипДокумента.Имя)) Тогда
				ТипСодержитсяВПодписке = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ТипСодержитсяВПодписке Тогда
			ДокументыИсключения.Добавить(ТипДокумента.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДокументыИсключения;
	
КонецФункции

Функция ПолучитьМассивПользовательскихПрефиксовДокумента(ИмяДокумента,Организация)
	
	МассивПрефиксов = Новый Массив;
	
	Если ИмяДокумента = "НалоговаяНакладная" ИЛИ ИмяДокумента = "Приложение2КНалоговойНакладной" Тогда
		
		//СФормируем возможные варианты префиксов в зависимости от настроек префиксации налоговых
		НастройкаНумерации	= НалоговыйУчетПовтИсп.НастройкаНумерацииНалоговыхДокументов(Организация, НачалоМесяца(ТекущаяДата()));
		
		//Если нумерация с учетом месяца, то новые документы не добавляем
		Если НастройкаНумерации.ВестиМесячнуюНумерациюНалоговыхДокументов = Истина Тогда
			Возврат МассивПрефиксов;
		КонецЕсли;
		
		МассивПрефиксовПоНеНДСОперациям = Новый Массив;
		МассивПрефиксовПоНеНДСОперациям.Добавить("");
		Если НастройкаНумерации.ВестиРаздельнуюНумерациюНалоговыхДокументовПоНеНДСОперациям = Истина Тогда 
			МассивПрефиксовПоНеНДСОперациям.Добавить("Т");//технологические (нераспечатываемые) документы
		КонецЕсли;		
		
		ПрефиксНалоговых = "";
		Если НастройкаНумерации.ВестиРаздельнуюНумерациюНалоговыхДокументов = Истина Тогда
			// разделяем префиксом Налоговые от Приложений
			Если ИмяДокумента = "НалоговаяНакладная" Тогда
				ПрефиксНалоговых = ПрефиксНалоговых + "Н";
			Иначе
				ПрефиксНалоговых = ПрефиксНалоговых + "П";
			КонецЕсли;
		КонецЕсли;
		
		МассивПрефиксовПоСпецРежимам = Новый Массив;
		МассивПрефиксовПоСпецРежимам.Добавить("");
		Если НастройкаНумерации.ВестиРаздельнуюНумерациюНалоговыхДокументовПоСпецРежимам = Истина Тогда
			МассивПрефиксовПоСпецРежимам.Добавить("U");
			МассивПрефиксовПоСпецРежимам.Добавить("V");
			МассивПрефиксовПоСпецРежимам.Добавить("W");
		КонецЕсли;
		
		Для каждого ПрефиксПоНеНДСОперациям Из МассивПрефиксовПоНеНДСОперациям Цикл
			Для каждого ПрефиксПоСпецРежимам Из МассивПрефиксовПоСпецРежимам Цикл
				Префикс = ПрефиксПоНеНДСОперациям + ПрефиксНалоговых + ПрефиксПоСпецРежимам;
				МассивПрефиксов.Добавить(Новый Структура("Префикс12, Префикс20", Префикс, Префикс));
			КонецЦикла; 
		КонецЦикла; 
	Иначе
		МассивПрефиксов.Добавить(Новый Структура("Префикс12, Префикс20", "", ""));
	КонецЕсли;
	
	Возврат МассивПрефиксов;
	
КонецФункции


#КонецЕсли