#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Весовщик      = Пользователи.ТекущийПользователь();
	ДатаНачала    = НачалоДня(ТекущаяДата());
	ДатаОкончания = КонецДня(ТекущаяДата());
	
	ПоказатьДокументыПоВсемВесовщикам = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_ПомощникВесовщика_ПоказатьДокументыПоВсемВесовщикам", "Элеватор");
	ПоказатьСФасовкойИлиНесколькоТМЦ  = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_ПомощникВесовщика_ПоказатьСФасовкойИлиНесколькоТМЦ",  "Элеватор");
	ЗаполнениеИзПриказов              = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_ПомощникВесовщика_ЗаполнениеИзПриказов",              "Элеватор");
	
	ОбновитьНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗавершениеРаботы Тогда
		ПередЗакрытиемНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗакрытиемНаСервере()
	
	ХранилищеОбщихНастроек.Сохранить("ИНАГРО_ПомощникВесовщика_ПоказатьДокументыПоВсемВесовщикам", "Элеватор", ПоказатьДокументыПоВсемВесовщикам);
	ХранилищеОбщихНастроек.Сохранить("ИНАГРО_ПомощникВесовщика_ПоказатьСФасовкойИлиНесколькоТМЦ",  "Элеватор", ПоказатьСФасовкойИлиНесколькоТМЦ);
	ХранилищеОбщихНастроек.Сохранить("ИНАГРО_ПомощникВесовщика_ЗаполнениеИзПриказов",              "Элеватор", ЗаполнениеИзПриказов);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.ИНАГРО_ПриказНаВывоз.Форма.ФормаВыбораДляПомощникаВесовщика" Тогда		
		ОбработкаВыбораЗавершение(ВыбранноеЗначение);				         
	КонецЕсли;

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказатьДокументыПоВсемВесовщикамПриИзменении(Элемент)
	
	ОбновитьНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСФасовкойИлиНесколькоТМЦПриИзменении(Элемент)
	
	ОбновитьНаСервере();

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицФормы

&НаКлиенте
Процедура ТаблицаВвозВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ТекущиеДанные = Элементы.ТаблицаВвоз.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.ТТН);

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ТаблицаВвозВыборЗавершение", ЭтотОбъект, Параметры);
			
	ОткрытьФорму("Документ.ИНАГРО_ТТНВвоз.Форма.ФормаДокументаОбщая", ПараметрыФормы, , УникальныйИдентификатор, , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВвозВыборЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьТаблицаВвоз();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВывозВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ТекущиеДанные = Элементы.ТаблицаВывоз.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.ТТН);

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ТаблицаВывозВыборЗавершение", ЭтотОбъект, Параметры);
			
	ОткрытьФорму("Документ.ИНАГРО_ТТНВывоз.Форма.ФормаДокументаОбщая", ПараметрыФормы, , УникальныйИдентификатор, , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВывозВыборЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьТаблицаВывоз();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВзвешиваниеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ТекущиеДанные = Элементы.ТаблицаВзвешивание.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.ТТН);

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ТаблицаВзвешиваниеВыборЗавершение", ЭтотОбъект, Параметры);
			
	ОткрытьФорму("Документ.ИНАГРО_Взвешивание.Форма.ФормаДокумента", ПараметрыФормы, , УникальныйИдентификатор, , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВзвешиваниеВыборЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьТаблицаВзвешивание();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВнутреннееВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ТекущиеДанные = Элементы.ТаблицаВнутреннее.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.ТТН);

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ТаблицаВнутреннееВыборЗавершение", ЭтотОбъект, Параметры);
			
	ОткрытьФорму("Документ.ИНАГРО_ТТНВнутр.Форма.ФормаДокументаОбщая", ПараметрыФормы, , УникальныйИдентификатор, , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВнутреннееВыборЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьТаблицаВнутреннее();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы 

&НаКлиенте
Процедура ВыбратьПериод(Команда)

	ПараметрыВыбора = Новый Структура("НачалоПериода, КонецПериода", ДатаНачала, ДатаОкончания);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНачала	  = РезультатВыбора.НачалоПериода;
	ДатаОкончания = РезультатВыбора.КонецПериода;		
		
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	ЗаполнитьТаблицаВвоз();
	ЗаполнитьТаблицаВывоз();
	ЗаполнитьТаблицаВзвешивание();
	ЗаполнитьТаблицаВнутреннее();

КонецПроцедуры

&НаКлиенте
Процедура НоваяМашинаВвоз(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("НоваяМашинаВвозЗавершение", ЭтотОбъект, Параметры);
			
	ОткрытьФорму("Документ.ИНАГРО_ТТНВвоз.Форма.ФормаДокументаОбщая", ПараметрыФормы, , УникальныйИдентификатор, , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура НоваяМашинаВвозЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
	ЗаполнитьТаблицаВвоз();
	
КонецПроцедуры

&НаКлиенте
Процедура НоваяМашинаВывоз(Команда)
	
	Если ЗаполнениеИзПриказов Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ДатаОкончания",      НачалоДня(ДатаОкончания));
		ПараметрыФормы.Вставить("ВидПеревозки",       ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыПеревозки.Автотранспорт"));
		ПараметрыФормы.Вставить("РежимВыбора",        Истина); 
		ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина); 
		
		ОткрытьФорму("Документ.ИНАГРО_ПриказНаВывоз.Форма.ФормаВыбораДляПомощникаВесовщика", ПараметрыФормы, ЭтаФорма); 		
		
	Иначе
		
		ПараметрыФормы = Новый Структура;
		
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("НоваяМашинаВывозЗавершение", ЭтотОбъект, Параметры);
		
		ОткрытьФорму("Документ.ИНАГРО_ТТНВывоз.Форма.ФормаДокументаОбщая", ПараметрыФормы, , УникальныйИдентификатор, , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НоваяМашинаВывозЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
	ЗаполнитьТаблицаВывоз();
	
КонецПроцедуры

&НаКлиенте
Процедура НоваяМашинаВзвешивание(Команда)
		
	ПараметрыФормы = Новый Структура;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("НоваяМашинаВзвешиваниеЗавершение", ЭтотОбъект, Параметры);
			
	ОткрытьФорму("Документ.ИНАГРО_Взвешивание.Форма.ФормаДокумента", ПараметрыФормы, , УникальныйИдентификатор, , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура НоваяМашинаВзвешиваниеЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
	ЗаполнитьТаблицаВзвешивание();
	
КонецПроцедуры

&НаКлиенте
Процедура НоваяМашинаВнутреннее(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("НоваяМашинаВнутреннееЗавершение", ЭтотОбъект, Параметры);
			
	ОткрытьФорму("Документ.ИНАГРО_ТТНВнутр.Форма.ФормаДокументаОбщая", ПараметрыФормы, , УникальныйИдентификатор, , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура НоваяМашинаВнутреннееЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
	ЗаполнитьТаблицаВнутреннее();
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицаВвоз()
	
	ТаблицаВвоз.Очистить();
	
	Выборка = Документы.ИНАГРО_ТТНВвоз.Выбрать(ДатаНачала, ДатаОкончания);
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Выборка.ПометкаУдаления Тогда
			
			Если НЕ Выборка.Проведен Тогда
				
				Если Выборка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийТТНВвоз.ВвозФасованного Тогда
					Если НЕ ПоказатьСФасовкойИлиНесколькоТМЦ Тогда						
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если Выборка.Весовщик <> Весовщик Тогда
					Если НЕ ПоказатьДокументыПоВсемВесовщикам Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				НоваяСтрока = ТаблицаВвоз.Добавить();
				НоваяСтрока.Владелец       = Выборка.Владелец;
				НоваяСтрока.Транспорт      = Выборка.НомерТранспорта;
				НоваяСтрока.Водитель       = Выборка.Водитель;
				НоваяСтрока.НомерДокумента = ?(Выборка.НомерНакладной = "", Выборка.Номер, Выборка.НомерНакладной);					
				НоваяСтрока.ВремяПрибытия  = Выборка.ВремяПрибытия;
				НоваяСтрока.ТТН = Выборка.Ссылка;
				Если Выборка.ВесБрутто + Выборка.ВесБрутто1 = 0 Тогда	
					НоваяСтрока.Статус = НСтр("ru='Нет веса!';uk='Немає ваги!'");
				ИначеЕсли Выборка.ВесТары + Выборка.ВесТары1 = 0 Тогда
					НоваяСтрока.Статус = НСтр("ru='Нет тары!';uk='Немає тари!'");
				Иначе
					НоваяСтрока.Статус = НСтр("ru='Не проведен!';uk='Не проведений!'");
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицаВывоз()
	
	ТаблицаВывоз.Очистить();
	
	Выборка = Документы.ИНАГРО_ТТНВывоз.Выбрать(ДатаНачала, ДатаОкончания);
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Выборка.ПометкаУдаления  Тогда
			
			Если НЕ Выборка.Проведен Тогда
				
				Если Выборка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийТТНВывоз.ВывозФасованного Тогда
					Если НЕ ПоказатьСФасовкойИлиНесколькоТМЦ Тогда						
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если Выборка.Весовщик <> Весовщик Тогда
					Если НЕ ПоказатьДокументыПоВсемВесовщикам Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;				
				
				НоваяСтрока = ТаблицаВывоз.Добавить();				
				НоваяСтрока.Владелец       = Выборка.Владелец;
				НоваяСтрока.Транспорт      = Выборка.НомерТранспорта;
				НоваяСтрока.Водитель       = Выборка.Водитель;
				НоваяСтрока.НомерДокумента = Выборка.Номер;						
				НоваяСтрока.ВремяПрибытия  = Выборка.ВремяПрибытия;
				НоваяСтрока.ТТН            = Выборка.Ссылка;					
				Если Выборка.ВесБрутто + Выборка.ВесБрутто1 = 0 Тогда	
					НоваяСтрока.Статус = НСтр("ru='Нет веса!';uk='Немає ваги!'");
				ИначеЕсли Выборка.ВесТары + Выборка.ВесТары1 = 0 Тогда
					НоваяСтрока.Статус = НСтр("ru='Нет тары!';uk='Немає тари!'");
				Иначе
					НоваяСтрока.Статус = НСтр("ru='Не проведен!';uk='Не проведений!'");
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицаВзвешивание()
	
	ТаблицаВзвешивание.Очистить();
	
	Выборка = Документы.ИНАГРО_Взвешивание.Выбрать(ДатаНачала, ДатаОкончания);
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Выборка.ПометкаУдаления  Тогда
			
			Если НЕ Выборка.Проведен Тогда
				
				Если Выборка.Весовщик <> Весовщик Тогда
					Если НЕ ПоказатьДокументыПоВсемВесовщикам Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				НоваяСтрока = ТаблицаВзвешивание.Добавить();
				НоваяСтрока.Владелец       = Выборка.Владелец;
				НоваяСтрока.Транспорт      = Выборка.НомерТранспорта;
				НоваяСтрока.Водитель       = Выборка.Водитель;
				НоваяСтрока.НомерДокумента = Выборка.Номер;					
				НоваяСтрока.ВремяПрибытия  = Выборка.ВремяПрибытия;
				НоваяСтрока.ТТН            = Выборка.Ссылка;				
				Если Выборка.ВесБрутто + Выборка.ВесБрутто1 = 0 Тогда						
					НоваяСтрока.Статус = НСтр("ru='Нет веса!';uk='Немає ваги!'");
				ИначеЕсли Выборка.ВесТары + Выборка.ВесТары1 = 0 Тогда
					НоваяСтрока.Статус = НСтр("ru='Нет тары!';uk='Немає тари!'");
				Иначе
					НоваяСтрока.Статус = НСтр("ru='Не проведен!';uk='Не проведений!'");
				КонецЕсли;	
									
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицаВнутреннее()
	
	ТаблицаВнутреннее.Очистить();
	
	Выборка = Документы.ИНАГРО_ТТНВнутр.Выбрать(ДатаНачала, ДатаОкончания);
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Выборка.ПометкаУдаления  Тогда
			
			Если НЕ Выборка.Проведен Тогда
				
				Если Выборка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийТТНВнутр.ПеремещениеФасованного Тогда
					Если НЕ ПоказатьСФасовкойИлиНесколькоТМЦ Тогда						
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				Если Выборка.Весовщик <> Весовщик Тогда
					Если НЕ ПоказатьДокументыПоВсемВесовщикам Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				НоваяСтрока = ТаблицаВнутреннее.Добавить();
				НоваяСтрока.Владелец       = Выборка.Владелец;
				НоваяСтрока.Транспорт      = Выборка.НомерТранспорта;
				НоваяСтрока.Водитель       = Выборка.Водитель;
				НоваяСтрока.НомерДокумента = Выборка.Номер;				
				НоваяСтрока.ВремяПрибытия  = Выборка.ВремяПрибытия;
				НоваяСтрока.ТТН            = Выборка.Ссылка;
				Если Выборка.ВесБрутто + Выборка.ВесБрутто1 = 0 Тогда
					НоваяСтрока.Статус = НСтр("ru='Нет веса!';uk='Немає ваги!'");
				ИначеЕсли Выборка.ВесТары + Выборка.ВесТары1 = 0 Тогда
					НоваяСтрока.Статус = НСтр("ru='Нет тары!';uk='Немає тари!'");					
				Иначе
					НоваяСтрока.Статус = НСтр("ru='Не проведен!';uk='Не проведений!'");
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораЗавершение(ВыбранноеЗначение)
	
	ПараметрыФормы = Новый Структура;	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ПолучитьЗначенияЗаполнения(ВыбранноеЗначение)); 

	ОповещениеОЗакрытии = Новый ОписаниеОповещения("НоваяМашинаВывозЗавершение", ЭтотОбъект, Параметры);
	
	ОткрытьФорму("Документ.ИНАГРО_ТТНВывоз.Форма.ФормаДокументаОбщая", ПараметрыФормы, , УникальныйИдентификатор, , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначенияЗаполнения(ВыбранноеЗначение)
	
	ЗначенияЗаполнения = Новый Структура;

	ПриказНаВывоз      = ВыбранноеЗначение.Ссылка;
	ЛабораторныйАнализ = ВыбранноеЗначение.ЛабораторныйАнализ;
	
	ЗначенияЗаполнения.Вставить("Ссылка",                           ПриказНаВывоз);
	ЗначенияЗаполнения.Вставить("Организация",                      ПриказНаВывоз.Организация);
	ЗначенияЗаполнения.Вставить("Владелец",                         ПриказНаВывоз.Владелец);
	ЗначенияЗаполнения.Вставить("ДоговорКонтрагента",               ПриказНаВывоз.ДоговорКонтрагента);	
	ЗначенияЗаполнения.Вставить("Получатель",                       ПриказНаВывоз.Получатель);
	ЗначенияЗаполнения.Вставить("ДоговорПолучателя",                ПриказНаВывоз.ДоговорПолучателя);	
	ЗначенияЗаполнения.Вставить("Склад",                            ПриказНаВывоз.Склад);
	ЗначенияЗаполнения.Вставить("МестоХранения",                    ПриказНаВывоз.МестоХранения);	
	ЗначенияЗаполнения.Вставить("ВидХранения",                      ПриказНаВывоз.ВидХранения);
	ЗначенияЗаполнения.Вставить("Номенклатура",                     ВыбранноеЗначение.Номенклатура);
	ЗначенияЗаполнения.Вставить("Урожай",                           ПриказНаВывоз.Урожай);
	ЗначенияЗаполнения.Вставить("ПунктНазначения",                  ПриказНаВывоз.ПунктНазначения);
	Если ЛабораторныйАнализ <> Неопределено Тогда
		ЗначенияЗаполнения.Вставить("ЛабораторныйАнализ", ЛабораторныйАнализ);
		ЗначенияЗаполнения.Вставить("НомерАнализа",       ЛабораторныйАнализ.Номер);
		ЗначенияЗаполнения.Вставить("Влажность",          ЛабораторныйАнализ.Влажность);
		ЗначенияЗаполнения.Вставить("СорнаяПримесь",      ЛабораторныйАнализ.СорнаяПримесь);
		ЗначенияЗаполнения.Вставить("ЗерноваяПримесь",    ЛабораторныйАнализ.ЗерноваяПримесь);				
	КонецЕсли;
	ЗначенияЗаполнения.Вставить("ПолучилПоДругомуДокументу",        ПриказНаВывоз.ПолучилПоДругомуДокументу); 
	ЗначенияЗаполнения.Вставить("ДоверенностьСерия",                ПриказНаВывоз.ДоверенностьСерия);
	ЗначенияЗаполнения.Вставить("ДоверенностьНомер",                ПриказНаВывоз.ДоверенностьНомер);
	ЗначенияЗаполнения.Вставить("ДоверенностьДата",                 ПриказНаВывоз.ДоверенностьДата);
	ЗначенияЗаполнения.Вставить("ДокументПодтверждающийПолномочия", ПриказНаВывоз.ДокументПодтверждающийПолномочия);
	ЗначенияЗаполнения.Вставить("ДоверенностьЧерез",                ПриказНаВывоз.ДоверенностьЧерез);
	ЗначенияЗаполнения.Вставить("Комментарий",                      ПриказНаВывоз.Комментарий);
	
	Возврат ЗначенияЗаполнения;
	
КонецФункции

#КонецОбласти