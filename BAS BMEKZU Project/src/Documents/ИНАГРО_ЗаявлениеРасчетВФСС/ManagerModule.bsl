#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Заявка и ЗаявкаНС 
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Заявка";
	КомандаПечати.Представление = НСтр("ru='Заявка';uk='Заявка'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	
	// Приложение
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение";
	КомандаПечати.Представление = НСтр("ru='Приложение';uk='Додаток'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	
	// ПриложениеФИО
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПриложениеФИО";
	КомандаПечати.Представление = НСтр("ru='Приложение ФИО';uk='Додаток ПІБ'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";	
	
	// Приложение 1.1
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение1_1";
	КомандаПечати.Представление = НСтр("ru='Приложение 1.1';uk='Додаток 1.1'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";	
	
	// Приложение 1.2
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение1_2";
	КомандаПечати.Представление = НСтр("ru='Приложение 1.2 (Пособие на погребение)';uk='Додаток 1.2 (Допомога на поховання)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";	
	
	// Приложение 1.3
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение1_3";
	КомандаПечати.Представление = НСтр("ru='Приложение 1.3 (НС)';uk='Додаток 1.3 (НС)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	
	// Заявка 2018
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Заявка2018";
	КомандаПечати.Представление = НСтр("ru='Заявка 2018';uk='Заявка 2018'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru='Реестр документов ""Заявление-расчет в ФСС""';uk='Реєстр документів ""Заява-розрахунок в ФСС""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Заявка") Тогда  		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Заявка", НСтр("ru='Заявка';uk='Заявка'"), 
		ПечатьЗаявка(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , ,,Истина);		
	КонецЕсли; 	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение") Тогда  		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Приложение", НСтр("ru='Приложение';uk='Додаток'"), 
		ПечатьПриложение(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_Приложение",,Истина);		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриложениеФИО") Тогда  		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПриложениеФИО", НСтр("ru='Приложение ФИО';uk='Додаток ПІБ'"), 
		ПечатьПриложениеФИО(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_Приложение",,Истина);		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение1_1") Тогда  		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Приложение1_1", НСтр("ru='Приложение 1.1 ФИО';uk='Додаток 1.1'"), 
		ПечатьПриложение1_1(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_Приложение1_1",,Истина);		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение1_2") Тогда  		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Приложение1_2", НСтр("ru='Приложение 1.2 (Пособие на погребение)';uk='Додаток 1.2 (Допомога на поховання)'"), 
		ПечатьПриложение1_2(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_Приложение1_2",,Истина);		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение1_3") Тогда  		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Приложение1_3", НСтр("ru='Приложение 1.3 (НС)';uk='Додаток 1.3 (НС)'"), 
		ПечатьПриложение1_3(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_Приложение1_3",,Истина);		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Заявка2018") Тогда  		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Заявка2018", НСтр("ru='Заявка 2018';uk='Заявка 2018'"), 
		ПечатьЗаявка2018(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_Заявка2018",,Истина);		
	КонецЕсли;
	
	
КонецПроцедуры

Функция ПечатьЗаявка(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент();
	
	ПервыйДокумент = Истина;
	
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Для Каждого Объект Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли; 
		
		Если Объект.ЗаСчетФССОтНС Тогда
			ТабДокумент = ПечатьЗаявкаНС(Объект, ПараметрыВывода, ТабДокумент);
		Иначе
			ТабДокумент = ПечатьОбычнаяЗаявка(Объект, ПараметрыВывода, ТабДокумент);
		КонецЕсли; 
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьОбычнаяЗаявка(Объект, ПараметрыВывода, ТабДокумент);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_Заявка");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Организация = Объект.Организация.НаименованиеПолное;
	
	// Получим данные из РС КодыОрганизаций
	Результат = ПолучитьЗапросПоКодам(Объект);
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбластьШапка.Параметры.ФИОДиректораФонда = Выборка.ФИОДиректораФонда;
		ОбластьШапка.Параметры.НазваниеРабочегоОрганаФонда = Выборка.НазваниеРабочегоОрганаФонда;
		ОбластьШапка.Параметры.НомерРегистрации = Выборка.НомерРегистрации;
	КонецЕсли;
	ОбластьШапка.Параметры.КодПоЕДРПОУ = Объект.Организация.КодПоЕДРПОУ;
	
	// Получим данные из РС КонтактнаяИнформация для адреса организации
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОрганизацииКонтактнаяИнформация.Представление КАК Адрес
	|ИЗ
	|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|ГДЕ
	|	ОрганизацииКонтактнаяИнформация.Ссылка = &Ссылка
	|	И ОрганизацииКонтактнаяИнформация.Тип = &Тип
	|	И ОрганизацииКонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Организация );
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбластьШапка.Параметры.Адрес = Выборка.Адрес;	 
	КонецЕсли;
	
	// Получим данные из РС КонтактнаяИнформация для телефона организации
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОрганизацииКонтактнаяИнформация.Представление КАК Телефон
	|ИЗ
	|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|ГДЕ
	|	ОрганизацииКонтактнаяИнформация.Ссылка = &Ссылка
	|	И ОрганизацииКонтактнаяИнформация.Тип = &Тип
	|	И ОрганизацииКонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Организация );
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбластьШапка.Параметры.Телефон = Выборка.Телефон;	 
	КонецЕсли;
	
	ОбластьШапка.Параметры.НомерСчета = Объект.Организация.БанковскийСчетДляРасчетовСФСС.НомерСчета;
	ОбластьШапка.Параметры.МФОБанкаОрганизации = Объект.Организация.БанковскийСчетДляРасчетовСФСС.Банк.Код;
	
	ТабДокумент.Вывести(ОбластьШапка);
	
	// Заголовок
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ТабДокумент.Вывести(ОбластьЗаголовок);	
	
	// ШапкаТаблицы
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	
	// СтрокаВремНетрудоспособность
	ОбластьВремНетрудоспособность = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособность");
	ОбластьВремНетрудоспособность.Параметры.Сумма = Формат(Объект.ВсегоПоБольничным,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособность.Параметры.Дни = Объект.КоличествоДнейПоБольничным;
	ТабДокумент.Вывести(ОбластьВремНетрудоспособность);
	
	// СтрокаВремНетрудоспособностьУход
	ОбластьВремНетрудоспособностьУход = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьУход");
	ОбластьВремНетрудоспособностьУход.Параметры.Сумма = Формат(Объект.ВсегоПоБольничнымПоУходу,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособностьУход.Параметры.Дни = Объект.КоличествоДнейПоБольничнымПоУходу;
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьУход);
	
	// СтрокаВремНетрудоспособностьБерем
	ОбластьВремНетрудоспособностьБерем = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьБерем");
	ОбластьВремНетрудоспособностьБерем.Параметры.Сумма = Формат(Объект.ВсегоПоБеременностиИРодам,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособностьБерем.Параметры.Дни = Объект.КоличествоДнейПоБеременностиИРодам;
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьБерем);
	
	// СтрокаВремНетрудоспособностьПогребение 
	ОбластьВремНетрудоспособностьПогребение = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьПогребение");
	ОбластьВремНетрудоспособностьПогребение.Параметры.Сумма = Формат(Объект.ВсегоНаПогребение,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьПогребение);
	
	// Итог
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	ОбластьИтог.Параметры.СуммаИтог = Формат(Объект.ВсегоПоДокументу,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ТабДокумент.Вывести(ОбластьИтог);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьЗапросПоКодам(Ссылка) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	КодыОрганизацииСрезПоследних.НомерФСС КАК НомерРегистрации,
	               |	КодыОрганизацииСрезПоследних.ИНН,
	               |	КодыОрганизацииСрезПоследних.КодКВЕД,
	               |	КодыОрганизацииСрезПоследних.ИНАГРО_ФИОДиректораФСС КАК ФИОДиректораФонда,
	               |	КодыОрганизацииСрезПоследних.КлассПрофессиональногоРиска,
	               |	КодыОрганизацииСрезПоследних.ИНАГРО_НазваниеРабочегоОрганаФСС КАК НазваниеРабочегоОрганаФонда,
	               |	КодыОрганизацииСрезПоследних.НомерФССУ
	               |ИЗ
	               |	РегистрСведений.КодыОрганизации.СрезПоследних(&ПериодРегистрации, Организация = &Организация) КАК КодыОрганизацииСрезПоследних";
	
	Запрос.УстановитьПараметр("Организация",Ссылка.Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", Ссылка.ПериодРегистрации);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ПечатьЗаявкаНС(Объект, ПараметрыВывода, ТабДокумент);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_ЗаявкаНС");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Организация = Объект.Организация.НаименованиеПолное;
	
	// Получим данные из РС КодыОрганизаций
	Результат = ПолучитьЗапросПоКодам(Объект);
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбластьШапка.Параметры.НомерРегистрации = Выборка.НомерРегистрации;
		ОбластьШапка.Параметры.ИНН = Выборка.ИНН;
		ОбластьШапка.Параметры.КВЕД = Выборка.КодКВЕД;
		ОбластьШапка.Параметры.Риск = Выборка.КлассПрофессиональногоРиска;
	КонецЕсли;
	ОбластьШапка.Параметры.КодПоЕДРПОУ = Объект.Организация.КодПоЕДРПОУ;
	
	// Получим данные из РС КонтактнаяИнформация для адреса организации
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОрганизацииКонтактнаяИнформация.Представление КАК Адрес
	|ИЗ
	|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|ГДЕ
	|	ОрганизацииКонтактнаяИнформация.Ссылка = &Ссылка
	|	И ОрганизацииКонтактнаяИнформация.Тип = &Тип
	|	И ОрганизацииКонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Организация );
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбластьШапка.Параметры.Адрес = Выборка.Адрес;	 
	КонецЕсли;
	
	// Получим данные из РС КонтактнаяИнформация для телефона организации
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОрганизацииКонтактнаяИнформация.Представление КАК Телефон
	|ИЗ
	|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|ГДЕ
	|	ОрганизацииКонтактнаяИнформация.Ссылка = &Ссылка
	|	И ОрганизацииКонтактнаяИнформация.Тип = &Тип
	|	И ОрганизацииКонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Организация );
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбластьШапка.Параметры.Телефон = Выборка.Телефон;	 
	КонецЕсли;
	ОбластьШапка.Параметры.НомерСчета = Объект.Организация.ОсновнойБанковскийСчет.НомерСчета;
	ОбластьШапка.Параметры.МФОБанкаОрганизации = Объект.Организация.ОсновнойБанковскийСчет.Банк.Код;
	ОбластьШапка.Параметры.Банк = Объект.Организация.ОсновнойБанковскийСчет.Банк;
	
	ОбластьШапка.Параметры.Месяц = Формат(Объект.ПериодРегистрации, "ДФ=MMMM;Л = uk_UA");;
	ОбластьШапка.Параметры.Год = Год(Объект.ПериодРегистрации);
	
	ТабДокумент.Вывести(ОбластьШапка);
	
	// Шапка помощь 
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаПомощь");
	ТабДокумент.Вывести(ОбластьШапка);
	
	// Строка Помощь
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПомощь");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаявлениеРасчетВФССДокументыПоНачислениям.НомерСтроки КАК Номер,
	|	ЗаявлениеРасчетВФССДокументыПоНачислениям.Документ.НомерБольничногоЛиста КАК НомерБЛ,
	|	ЗаявлениеРасчетВФССДокументыПоНачислениям.Документ.СерияБольничногоЛиста КАК СерияБЛ,
	|	ЗаявлениеРасчетВФССДокументыПоНачислениям.Документ.Сотрудник КАК Сотрудник,
	|	ЗаявлениеРасчетВФССДокументыПоНачислениям.Документ КАК Документ,
	|	ЗаявлениеРасчетВФСС.Комментарий
	|ИЗ
	|	Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ДокументыПоНачислениям КАК ЗаявлениеРасчетВФССДокументыПоНачислениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЗаявлениеРасчетВФСС КАК ЗаявлениеРасчетВФСС
	|		ПО ЗаявлениеРасчетВФССДокументыПоНачислениям.Ссылка = ЗаявлениеРасчетВФСС.Ссылка
	|ГДЕ
	|	ЗаявлениеРасчетВФССДокументыПоНачислениям.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Объект.ссылка );
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Пока Выборка.Следующий() Цикл  
		
		РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Объект.ссылка);
		ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			РезультатЗапросаПоДокументам = ПолучитьЗапросДляРасчетаСумм(Объект);
			ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
			
			Пока ВыборкаПоДокументам.Следующий() Цикл
				Если ВыборкаПоДокументам.Документ = Выборка.Документ Тогда
					Если НЕ ВыборкаПоДокументам.Результат = 0 Тогда
						ОбластьСтрока.Параметры.Номер = Выборка.Номер;
						ОбластьСтрока.Параметры.СерияНомер = Выборка.СерияБЛ + " " + Выборка.НомерБЛ;
						ОбластьСтрока.Параметры.Сотрудник  = Выборка.Сотрудник;
						
						Сумма = ВыборкаПоДокументам.Результат;     
						СтрокаСуммы = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Сумма, ВалютаРеглУчета, "uk");
						СтрокаСуммы  = СтрокаСуммы + " (" + Цел(Сумма) + " грн. " + Формат((Сумма - Цел(Сумма)) * 100, "ЧЦ=2; ЧВН=") + " коп.)";
						ОбластьСтрока.Параметры.Результат  = СтрокаСуммы;  
						ОбластьСтрока.Параметры.Комментарий = Выборка.Комментарий;
						
						ТабДокумент.Присоединить(ОбластьСтрока);
						
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;	
	
	// Шапка траты 
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТраты");
	ТабДокумент.Вывести(ОбластьШапка);
	
	// Шапка погребение
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаПогребение");
	ТабДокумент.Вывести(ОбластьШапка);
	
	// Подпись
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	
	// Получим данные из РС КодыОрганизаций
	Результат = ПолучитьЗапросПоКодам(Объект);
	Выборка = Результат.Выбрать();
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Объект.Организация, Объект.Дата);
	
	Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
		ОбластьПодпись.Параметры.ФИОРуководителя = Руководители.РуководительФИО.Фамилия + " " + Руководители.РуководительФИО.Имя + " " + Руководители.РуководительФИО.Отчество;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер) Тогда
		ОбластьПодпись.Параметры.ФИОБухгалтера   = Руководители.ГлавныйБухгалтерФИО.Фамилия + " " + Руководители.ГлавныйБухгалтерФИО.Имя + " " + Руководители.ГлавныйБухгалтерФИО.Отчество;
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьПодпись);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьПриложение(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент();
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_Приложение");
	ПервыйДокумент = Истина;
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Для Каждого Объект Из МассивОбъектов Цикл
		
		Если Объект.ЗаСчетФССОтНС Тогда
			ТекстСообщения = НСтр("ru='При включенном флаге ""За счет ФСС от НС"" печать ""Приложения"" не производится!';uk='При увімкненому флазі ""За рахунок ФСС від НВ"" друк ""Додатку"" не здійснюється!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		Иначе
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли; 
		
		// Шапка 
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьШапка);
		
		// СтрокаПоБольничным
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоБольничным");
		НомерСтроки = 1;
		РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Объект);
		ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			
			РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения(ВыборкаПоШапкеДокумента);
			ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
			ТаблицаНачислений = СгруппироватьПериодыНачислений(ВыборкаПоДокументам, "ПФ_MXL_Приложение", ВыборкаПоШапкеДокумента);
			
			Для Каждого Начисление Из ТаблицаНачислений Цикл
				Если Не Начисление.РезультатФСС = 0 Тогда
					ОбластьСтрока.Параметры.Номер = НомерСтроки;
					ОбластьСтрока.Параметры.Сотрудник 					= ОбщегоНазначенияБПВызовСервера.ФамилияИнициалыФизЛица(Начисление.Сотрудник.ФизическоеЛицо);
					ОбластьСтрока.Параметры.КодПоДРФО 					= Начисление.ДРФО;
					ОбластьСтрока.Параметры.СерияНомер 					= Начисление.Серия + " " + Начисление.Номер;
					ОбластьСтрока.Параметры.ПричинаНетрудоспособности  	= Начисление.ПричинаНетрудоспособности.КодПричины;
					ОбластьСтрока.Параметры.ПериодНетрудоспособности   	= "З " + Формат(Начисление.ПериодНачало, "ДЛФ=Д") + " по " + Формат(Начисление.ПериодКонец, "ДЛФ=Д");
					ОбластьСтрока.Параметры.КоличествоДней 				= Начисление.КоличествоДней;
					ОбластьСтрока.Параметры.КоличествоДнейФСС 			= Начисление.КоличествоДнейФСС;
					ОбластьСтрока.Параметры.Результат 					= Формат(Начисление.Результат,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
					ОбластьСтрока.Параметры.РезультатФСС 				= Формат(Начисление.РезультатФСС,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
					
					ТабДокумент.Присоединить(ОбластьСтрока);
					
					НомерСтроки = НомерСтроки +1;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		// Подпись
		ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
		
		ЧислоДокумента                          = Формат(Объект.Дата,"ДФ='дд';Л=uk_UA");
		ДатаДокумента                           = Формат(Объект.Дата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
		ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
		ОбластьПодпись.Параметры.ДатаДокумента 	= ЧислоДокумента + ДатаДокументаБезЧисла;
		
		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Объект.Организация, Объект.Дата);
		
		Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
			ОбластьПодпись.Параметры.ФИОРуководителя = Руководители.РуководительФИО.Фамилия	    + " " + Руководители.РуководительФИО.Имя	 + " " + Руководители.РуководительФИО.Отчество;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер) Тогда
			ОбластьПодпись.Параметры.ФИОБухгалтера   = Руководители.ГлавныйБухгалтерФИО.Фамилия + " " + Руководители.ГлавныйБухгалтерФИО.Имя + " " + Руководители.ГлавныйБухгалтерФИО.Отчество;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьПодпись);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция СформироватьЗапросПоШапке(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	Дата,
	|	ПериодРегистрации, 
	|	Организация,
	|	Ответственный, 
	| 	Ссылка
	|ИЗ 
	|	Документ.ИНАГРО_ЗаявлениеРасчетВФСС
	|ГДЕ 
	|	Ссылка = &ДокументСсылка
	|";
	
	Возврат Запрос.Выполнить();
	
КонецФункции 

Функция ПолучитьЗапросДляПечатиПриложения(ВыборкаПоШапкеДокумента)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДокументСсылка", ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", ВыборкаПоШапкеДокумента.Дата);
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.Документ.СерияБольничногоЛиста КАК Серия,
	|	ДокументыПоНачислениям.Документ.НомерБольничногоЛиста КАК Номер,
	|	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности,
	|	ДокументыПоНачислениям.Документ.ДатаНачала КАК ПериодНачало,
	|	ДокументыПоНачислениям.Документ.ДатаОкончания КАК ПериодКонец,
	|	ДокументыПоНачислениям.Документ КАК Документ
	|ПОМЕСТИТЬ ВТДокументыПоНачислениям
	|ИЗ
	|	Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ДокументыПоНачислениям КАК ДокументыПоНачислениям
	|ГДЕ
	|	ДокументыПоНачислениям.Ссылка = &ДокументСсылка
	|	И ДокументыПоНачислениям.Документ ССЫЛКА Документ.ИНАГРО_НачислениеПоБольничномуЛисту
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Начисления.ВидРасчета.НачислениеЗаСчетФСС КАК НачислениеЗаСчетФСС,
	|	Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ОбозначениеВТабелеУчетаРабочегоВремени,
	|	Начисления.НормаДней КАК ОплаченоДнейЧасов,
	|	Начисления.НормаДней КАК НормаДней,
	|	Начисления.КалендарныеДни КАК КалендарныеДни,
	|	Начисления.Результат КАК Результат,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.Сотрудник.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО,
	|	Начисления.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	РегистрРасчета.ИНАГРО_Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор В
	|			(ВЫБРАТЬ
	|				ДокументыПоНачислениям.Документ
	|			ИЗ
	|				ВТДокументыПоНачислениям КАК ДокументыПоНачислениям)
	|	И Начисления.Назначение.ИНАГРО_ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство)
	|	И (Начисления.ВидРасчета.ЭтоБольничные = ИСТИНА
	|       ИЛИ Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФИОФизЛицСрезПоследних.ФизическоеЛицо 	КАК Физлицо,
	|	ФИОФизЛицСрезПоследних.Фамилия	 КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя 		КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(
	|			&ДатаДокумента,
	|			ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					ВТНачисления.Сотрудник.ФизическоеЛицо
	|				ИЗ
	|					ВТНачисления КАК ВТНачисления)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.Серия КАК Серия,
	|	ДокументыПоНачислениям.Номер КАК Номер,
	|	ДокументыПоНачислениям.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА
	|						И Начисления.Регистратор.ВидУчетаВремениДляСредней = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремениДляСредней.ПоКалендарнымДнямСПраздниками)
	|					ТОГДА Начисления.КалендарныеДни
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА
	|					ТОГДА Начисления.НормаДней
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК КоличествоДнейФСС,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ЛОЖЬ
	|						И Начисления.Регистратор.ВидУчетаВремениДляСредней = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремениДляСредней.ПоКалендарнымДнямСПраздниками)
	|					ТОГДА Начисления.КалендарныеДни
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ЛОЖЬ
	|					ТОГДА Начисления.НормаДней
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК КоличествоДней,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА
	|					ТОГДА Начисления.Результат
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК РезультатФСС,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ЛОЖЬ
	|					ТОГДА Начисления.Результат
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК Результат,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	Начисления.КодПоДРФО КАК ДРФО,
	|	ДокументыПоНачислениям.ПериодНачало КАК ПериодНачало,
	|	ДокументыПоНачислениям.ПериодКонец КАК ПериодКонец
	|ИЗ
	|	ВТДокументыПоНачислениям КАК ДокументыПоНачислениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО ДокументыПоНачислениям.Документ = Начисления.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
	|		ПО Начисления.Сотрудник.ФизическоеЛицо = ФИО.Физлицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПоНачислениям.Документ,
	|	ДокументыПоНачислениям.ПричинаНетрудоспособности,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	ДокументыПоНачислениям.Серия,
	|	ДокументыПоНачислениям.Номер,
	|	Начисления.КодПоДРФО,
	|	ДокументыПоНачислениям.ПериодНачало,
	|	ДокументыПоНачислениям.ПериодКонец";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ПолучитьЗапросДляПечатиПриложения1_1(ВыборкаПоШапкеДокумента) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДокументСсылка", ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", ВыборкаПоШапкеДокумента.Дата);
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДокументыПоНачислениям.Документ.СерияБольничногоЛиста КАК Серия,
	               |	ДокументыПоНачислениям.Документ.НомерБольничногоЛиста КАК Номер,
	               |	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности,
	               |	ДокументыПоНачислениям.Документ.ДатаНачала КАК ПериодНачало,
	               |	ДокументыПоНачислениям.Документ.ДатаОкончания КАК ПериодКонец,
	               |	ДокументыПоНачислениям.Документ КАК Документ,
	               |	ВЫБОР
	               |		КОГДА ДокументыПоНачислениям.Документ.ПервичныйБольничныйЛист = ЗНАЧЕНИЕ(Документ.ИНАГРО_НачислениеПоБольничномуЛисту.ПустаяСсылка)
	               |			ТОГДА ""1""
	               |		ИНАЧЕ ""2""
	               |	КОНЕЦ КАК ЭтоПродолжениеБольничного,
	               |	ДокументыПоНачислениям.СуммаЧАЭС КАК СуммаЧАЭС,
	               |	ДокументыПоНачислениям.ДниЧАЭС КАК ДниЧАЭС,
	               |	ДокументыПоНачислениям.НомерЧАЭС КАК НомерЧАЭС,
	               |	ДокументыПоНачислениям.Документ.СтажВМесяцах КАК СтажВМесяцах,
	               |	ДокументыПоНачислениям.Документ.СтажЗа12МесяцевВМесяцах КАК СтажЗа12МесяцевВМесяцах,
	               |	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности.КодПричиныЭлектронный КАК КодПричиныЭлектронный,
	               |	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности.КодПричины КАК КодПричины
	               |ПОМЕСТИТЬ ВТДокументыПоНачислениям
	               |ИЗ
	               |	Документ.ИНАГРО_ЗаявлениеРасчетВФСС.Больничные КАК ДокументыПоНачислениям
	               |ГДЕ
	               |	ДокументыПоНачислениям.Ссылка = &ДокументСсылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ДокументыПоНачислениям.Документ.СерияБольничногоЛиста,
	               |	ДокументыПоНачислениям.Документ.НомерБольничногоЛиста,
	               |	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности,
	               |	ДокументыПоНачислениям.Документ.ДатаНачала,
	               |	ДокументыПоНачислениям.Документ.ДатаОкончания,
	               |	ДокументыПоНачислениям.Документ,
	               |	ВЫБОР
	               |		КОГДА ДокументыПоНачислениям.Документ.ПервичныйБольничныйЛист = ЗНАЧЕНИЕ(Документ.ИНАГРО_НачислениеПоБольничномуЛисту.ПустаяСсылка)
	               |			ТОГДА ""1""
	               |		ИНАЧЕ ""2""
	               |	КОНЕЦ,
	               |	ДокументыПоНачислениям.СуммаЧАЭС,
	               |	ДокументыПоНачислениям.ДниЧАЭС,
	               |	ДокументыПоНачислениям.НомерЧАЭС,
	               |	ДокументыПоНачислениям.Документ.СтажВМесяцах,
	               |	ДокументыПоНачислениям.Документ.СтажЗа12МесяцевВМесяцах,
	               |	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности.КодПричиныЭлектронный,
	               |	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности.КодПричины
	               |ИЗ
	               |	Документ.ИНАГРО_ЗаявлениеРасчетВФСС.Декретные КАК ДокументыПоНачислениям
	               |ГДЕ
	               |	ДокументыПоНачислениям.Ссылка = &ДокументСсылка
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Документ";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Начисления.ВидРасчета.НачислениеЗаСчетФСС КАК НачислениеЗаСчетФСС,
	|	Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ОбозначениеВТабелеУчетаРабочегоВремени,
	|	Начисления.ОплаченоДнейЧасов КАК ОплаченоДнейЧасов,
	|	Начисления.Результат КАК Результат,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	ВЫБОР КОГДА Начисления.Сотрудник.ИНАГРО_ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы) 
	|				ТОГДА ""1"" 
	|				ИНАЧЕ ""2"" КОНЕЦ КАК ВидЗанятости,
	|	Начисления.Сотрудник.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО,
	|	Начисления.Регистратор КАК Регистратор,
	|	Начисления.Сторно КАК Сторно
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	РегистрРасчета.ИНАГРО_Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор В
	|			(ВЫБРАТЬ
	|				ДокументыПоНачислениям.Документ
	|			ИЗ
	|				ВТДокументыПоНачислениям КАК ДокументыПоНачислениям)
	|	И Начисления.Назначение.ИНАГРО_ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство)
	|	И (Начисления.ВидРасчета.ЭтоБольничные = ИСТИНА
	|       ИЛИ Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФИОФизЛицСрезПоследних.ФизическоеЛицо 	КАК Физлицо,
	|	ФИОФизЛицСрезПоследних.Фамилия	 КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя 		КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(
	|			&ДатаДокумента,
	|			ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					ВТНачисления.Сотрудник.ФизическоеЛицо
	|				ИЗ
	|					ВТНачисления КАК ВТНачисления)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.Серия КАК Серия,
	|	ДокументыПоНачислениям.Номер КАК Номер,
	|	ДокументыПоНачислениям.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности,
	|	ДокументыПоНачислениям.КодПричиныЭлектронный КАК КодПричиныЭлектронный,
	|	ДокументыПоНачислениям.КодПричины КАК КодПричины,
	|   Начисления.ВидЗанятости КАК ВидЗанятости,
	|   ДокументыПоНачислениям.СтажЗа12МесяцевВМесяцах КАК СтажЗа12МесяцевВМесяцах,
	|   ДокументыПоНачислениям.СтажВМесяцах КАК СтажВМесяцах,
	|   ДокументыПоНачислениям.ЭтоПродолжениеБольничного КАК ЭтоПродолжениеБольничного,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА И Начисления.Сторно = ЛОЖЬ
	|						И Начисления.Регистратор.ВидУчетаВремениДляСредней = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремениДляСредней.ПоКалендарнымДнямСПраздниками)
	|					ТОГДА Начисления.ОплаченоДнейЧасов
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК КоличествоДнейФСС,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ЛОЖЬ И Начисления.Сторно = ЛОЖЬ
	|						И Начисления.Регистратор.ВидУчетаВремениДляСредней = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремениДляСредней.ПоКалендарнымДнямСПраздниками)
	|					ТОГДА Начисления.ОплаченоДнейЧасов
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК КоличествоДней,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА
	|					ТОГДА Начисления.Результат
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК РезультатФСС,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ЛОЖЬ
	|					ТОГДА Начисления.Результат
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК Результат,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	Начисления.КодПоДРФО КАК ДРФО,
	|	ДокументыПоНачислениям.СуммаЧАЭС КАК СуммаЧАЭС,
	|	ДокументыПоНачислениям.ДниЧАЭС КАК ДниЧАЭС,
	|	ДокументыПоНачислениям.НомерЧАЭС КАК НомерЧАЭС,
	|	ДокументыПоНачислениям.ПериодНачало КАК ПериодНачало,
	|	ДокументыПоНачислениям.ПериодКонец КАК ПериодКонец
	|ИЗ
	|	ВТДокументыПоНачислениям КАК ДокументыПоНачислениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО ДокументыПоНачислениям.Документ = Начисления.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
	|		ПО Начисления.Сотрудник.ФизическоеЛицо = ФИО.Физлицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПоНачислениям.Документ,
	|	ДокументыПоНачислениям.ПричинаНетрудоспособности,
	|	ДокументыПоНачислениям.КодПричиныЭлектронный,
	|	ДокументыПоНачислениям.КодПричины,
	|	Начисления.ВидЗанятости,
	|   ДокументыПоНачислениям.СтажЗа12МесяцевВМесяцах,
	|   ДокументыПоНачислениям.СтажВМесяцах,
	|   ДокументыПоНачислениям.ЭтоПродолжениеБольничного,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	ДокументыПоНачислениям.Серия,
	|	ДокументыПоНачислениям.Номер,
	|	Начисления.КодПоДРФО,
	|	ДокументыПоНачислениям.СуммаЧАЭС,
	|	ДокументыПоНачислениям.ДниЧАЭС,
	|	ДокументыПоНачислениям.НомерЧАЭС,
	|	ДокументыПоНачислениям.ПериодНачало,
	|	ДокументыПоНачислениям.ПериодКонец";
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ПолучитьЗапросДляПечатиПриложения1_2(ВыборкаПоШапкеДокумента) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДокументСсылка", ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", ВыборкаПоШапкеДокумента.Дата);
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.Документ КАК Документ,
	|	ДокументыПоНачислениям.Сотрудник КАК Сотрудник,
	|	ДокументыПоНачислениям.Сумма КАК Сумма,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ФамилияУмершего КАК ФамилияУмершего,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ИмяУмершего КАК ИмяУмершего,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ОтчествоУмершего КАК ОтчествоУмершего,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СвидетельствоСерия КАК СвидетельствоСерия,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СвидетельствоНомер КАК СвидетельствоНомер
	|ПОМЕСТИТЬ ВТДокументыПоНачислениям
	|ИЗ
	|	Документ.ИНАГРО_ЗаявлениеРасчетВФСС.Погребение КАК ДокументыПоНачислениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_НачислениеЕдиновременныхПособийЗаСчетФСС.Начисления КАК НачислениеЕдиновременныхПособийЗаСчетФССНачисления
	|		ПО ДокументыПоНачислениям.Документ.Ссылка = НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Ссылка
	|			И ДокументыПоНачислениям.Сотрудник = НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Сотрудник
	|ГДЕ
	|	ДокументыПоНачислениям.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ФамилияУмершего,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ОтчествоУмершего,
	|	ДокументыПоНачислениям.Документ,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СвидетельствоСерия,
	|	ДокументыПоНачислениям.Сотрудник,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СвидетельствоНомер,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ИмяУмершего,
	|	ДокументыПоНачислениям.Сумма
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Начисления.ВидРасчета.НачислениеЗаСчетФСС КАК НачислениеЗаСчетФСС,
	|	Начисления.Результат КАК Результат,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.Сотрудник.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО,
	|	Начисления.Регистратор КАК Регистратор,
	|	Начисления.Сторно КАК Сторно
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	РегистрРасчета.ИНАГРО_Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор В
	|			(ВЫБРАТЬ
	|				ДокументыПоНачислениям.Документ
	|			ИЗ
	|				ВТДокументыПоНачислениям КАК ДокументыПоНачислениям)
	|	И Начисления.Сотрудник.ИНАГРО_ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФИОФизЛицСрезПоследних.ФизическоеЛицо 	КАК Физлицо,
	|	ФИОФизЛицСрезПоследних.Фамилия	 КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя 		КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(
	|			&ДатаДокумента,
	|			ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					ВТНачисления.Сотрудник.ФизическоеЛицо
	|				ИЗ
	|					ВТНачисления КАК ВТНачисления)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.СвидетельствоСерия КАК СвидетельствоСерия,
	|	ДокументыПоНачислениям.СвидетельствоНомер КАК СвидетельствоНомер,
	|	Начисления.Результат КАК Сумма,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия КАК Фамилия,
	|	ФИО.Имя КАК Имя,
	|	ФИО.Отчество КАК Отчество,
	|	Начисления.КодПоДРФО КАК ДРФО,
	|	ДокументыПоНачислениям.ФамилияУмершего КАК ФамилияУмершего,
	|	ДокументыПоНачислениям.ИмяУмершего КАК ИмяУмершего,
	|	ДокументыПоНачислениям.ОтчествоУмершего КАК ОтчествоУмершего
	|ИЗ
	|	ВТДокументыПоНачислениям КАК ДокументыПоНачислениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО ДокументыПоНачислениям.Документ = Начисления.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
	|		ПО (Начисления.Сотрудник.ФизическоеЛицо = ФИО.Физлицо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПоНачислениям.Документ,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	ДокументыПоНачислениям.СвидетельствоСерия,
	|	ДокументыПоНачислениям.СвидетельствоНомер,
	|	Начисления.КодПоДРФО,
	|	ДокументыПоНачислениям.ФамилияУмершего,
	|	ДокументыПоНачислениям.ИмяУмершего,
	|	ДокументыПоНачислениям.ОтчествоУмершего,
	|	Начисления.Результат
	|
	|УПОРЯДОЧИТЬ ПО
	|	Фамилия,
	|	Имя,
	|	Отчество";
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ПолучитьЗапросДляПечатиПриложения1_3(ВыборкаПоШапкеДокумента) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДокументСсылка", ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", ВыборкаПоШапкеДокумента.Дата);
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДокументыПоНачислениям.Документ.СерияБольничногоЛиста КАК Серия,
	               |	ДокументыПоНачислениям.Документ.НомерБольничногоЛиста КАК Номер,
	               |	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности,
	               |	ДокументыПоНачислениям.Документ.ДатаНачала КАК ПериодНачало,
	               |	ДокументыПоНачислениям.Документ.ДатаОкончания КАК ПериодКонец,
	               |	ДокументыПоНачислениям.Документ КАК Документ,
	               |	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности.КодПричиныЭлектронный КАК КодПричиныЭлектронный,
	               |	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности.КодПричины КАК КодПричины
	               |ПОМЕСТИТЬ ВТДокументыПоНачислениям
	               |ИЗ
	               |	Документ.ИНАГРО_ЗаявлениеРасчетВФСС.БольничныеНС КАК ДокументыПоНачислениям
	               |ГДЕ
	               |	ДокументыПоНачислениям.Ссылка = &ДокументСсылка
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Документ";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Начисления.ВидРасчета.НачислениеЗаСчетФСС КАК НачислениеЗаСчетФСС,
	|	Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ОбозначениеВТабелеУчетаРабочегоВремени,
	|	Начисления.ОплаченоДнейЧасов КАК ОплаченоДнейЧасов,
	|	Начисления.Результат КАК Результат,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	ВЫБОР КОГДА Начисления.Сотрудник.ИНАГРО_ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы) 
	|				ТОГДА ""1"" 
	|				ИНАЧЕ ""2"" КОНЕЦ КАК ВидЗанятости,
	|	Начисления.Сотрудник.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО,
	|	Начисления.Регистратор КАК Регистратор,
	|	Начисления.Сторно КАК Сторно
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	РегистрРасчета.ИНАГРО_Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор В
	|			(ВЫБРАТЬ
	|				ДокументыПоНачислениям.Документ
	|			ИЗ
	|				ВТДокументыПоНачислениям КАК ДокументыПоНачислениям)
	|	И Начисления.Назначение.ИНАГРО_ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство)
	|	И (Начисления.ВидРасчета.ЭтоБольничные = ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФИОФизЛицСрезПоследних.ФизическоеЛицо 	КАК Физлицо,
	|	ФИОФизЛицСрезПоследних.Фамилия	 КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя 		КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(
	|			&ДатаДокумента,
	|			ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					ВТНачисления.Сотрудник.ФизическоеЛицо
	|				ИЗ
	|					ВТНачисления КАК ВТНачисления)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.Серия КАК Серия,
	|	ДокументыПоНачислениям.Номер КАК Номер,
	|	ДокументыПоНачислениям.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности,
	|	ДокументыПоНачислениям.КодПричиныЭлектронный КАК КодПричиныЭлектронный,
	|	ДокументыПоНачислениям.КодПричины КАК КодПричины,
	|   Начисления.ВидЗанятости КАК ВидЗанятости,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА И Начисления.Сторно = ЛОЖЬ
	|						И Начисления.Регистратор.ВидУчетаВремениДляСредней = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремениДляСредней.ПоКалендарнымДнямСПраздниками)
	|					ТОГДА Начисления.ОплаченоДнейЧасов
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК КоличествоДнейФСС,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА
	|					ТОГДА Начисления.Результат
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК РезультатФСС,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	Начисления.КодПоДРФО КАК ДРФО,
	|	ДокументыПоНачислениям.ПериодНачало КАК ПериодНачало,
	|	ДокументыПоНачислениям.ПериодКонец КАК ПериодКонец
	|ИЗ
	|	ВТДокументыПоНачислениям КАК ДокументыПоНачислениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО ДокументыПоНачислениям.Документ = Начисления.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
	|		ПО Начисления.Сотрудник.ФизическоеЛицо = ФИО.Физлицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПоНачислениям.Документ,
	|	ДокументыПоНачислениям.ПричинаНетрудоспособности,
	|	ДокументыПоНачислениям.КодПричиныЭлектронный,
	|	ДокументыПоНачислениям.КодПричины,
	|	Начисления.ВидЗанятости,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	ДокументыПоНачислениям.Серия,
	|	ДокументыПоНачислениям.Номер,
	|	Начисления.КодПоДРФО,
	|	ДокументыПоНачислениям.ПериодНачало,
	|	ДокументыПоНачислениям.ПериодКонец";
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СгруппироватьПериодыНачислений(Выборка, ИмяМакета, ВыборкаШапка = Неопределено) Экспорт
	Перем прСотрудник, прПричинаНетрудоспособности, прДРФО, прСерия, прНомер; // Переменные содержащие информацию с прошлой строки выборки при обходе ее в цикле
	Перем прПериодНачало;
	Перем прПериодКонец;
	Перем прКоличествоДней, прКоличествоДнейФСС, прРезультат, прРезультатФСС;
	Перем НоваяСтрока; // Строка табличной части
	
	прПериодНачало = Дата(1,1,1);
	прПериодКонец = Дата(1,1,1);
	
	ТаблицаНачислений = Новый ТаблицаЗначений;
	
	ТаблицаНачислений.Колонки.Добавить("Сотрудник");
	ТаблицаНачислений.Колонки.Добавить("Фамилия");
	ТаблицаНачислений.Колонки.Добавить("Имя");
	ТаблицаНачислений.Колонки.Добавить("Отчество");
	ТаблицаНачислений.Колонки.Добавить("ПричинаНетрудоспособности");
	ТаблицаНачислений.Колонки.Добавить("КодПричиныЭлектронный");
	ТаблицаНачислений.Колонки.Добавить("КодПричины");
	ТаблицаНачислений.Колонки.Добавить("ДРФО");
	ТаблицаНачислений.Колонки.Добавить("Серия");
	ТаблицаНачислений.Колонки.Добавить("Номер");
	ТаблицаНачислений.Колонки.Добавить("ПериодНачало");
	ТаблицаНачислений.Колонки.Добавить("ПериодКонец");
	Если НЕ ИмяМакета = "ПФ_MXL_Приложение1_3" Тогда			
		ТаблицаНачислений.Колонки.Добавить("КоличествоДней");
		ТаблицаНачислений.Колонки.Добавить("Результат");
	КонецЕсли;	
	ТаблицаНачислений.Колонки.Добавить("КоличествоДнейФСС");
	ТаблицаНачислений.Колонки.Добавить("РезультатФСС");
	
	Если ИмяМакета = "ПФ_MXL_Приложение1_1" ИЛИ ИмяМакета = "ПФ_MXL_Приложение1_3" Тогда
		ТаблицаНачислений.Колонки.Добавить("ВидЗанятости");
		ТаблицаНачислений.Колонки.Добавить("СтажВМесяцах");
		ТаблицаНачислений.Колонки.Добавить("СтажЗа12МесяцевВМесяцах");
		ТаблицаНачислений.Колонки.Добавить("ЭтоПродолжениеБольничного");
	КонецЕсли;
	Если ИмяМакета = "ПФ_MXL_Приложение1_1" Тогда
		ТаблицаНачислений.Колонки.Добавить("СуммаЧАЭС");
		ТаблицаНачислений.Колонки.Добавить("ДниЧАЭС");
		ТаблицаНачислений.Колонки.Добавить("НомерЧАЭС");
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		// Если строки абсолютно разные добавляем новые
		Если Выборка.Сотрудник <> прСотрудник ИЛИ Выборка.ПричинаНетрудоспособности <> прПричинаНетрудоспособности ИЛИ НачалоДня(Выборка.ПериодНачало) <> (НачалоДня(прПериодКонец)+ 1*60*60*24) ИЛИ
			Выборка.ДРФО <> прДРФО ИЛИ Выборка.Серия <> прСерия ИЛИ Выборка.Номер <> прНомер Тогда
			НоваяСтрока = ТаблицаНачислений.Добавить();
			НоваяСтрока.Сотрудник = Выборка.Сотрудник;
			
			Если НЕ ЗначениеЗаполнено(ВыборкаШапка) Тогда
				Возврат Неопределено;	
			КонецЕсли;		
			
			НоваяСтрока.Фамилия = Выборка.Фамилия;
			НоваяСтрока.Имя = Выборка.Имя;
			НоваяСтрока.Отчество = Выборка.Отчество;
			НоваяСтрока.ПричинаНетрудоспособности 	= Выборка.ПричинаНетрудоспособности;
			НоваяСтрока.КодПричиныЭлектронный 		= Выборка.КодПричиныЭлектронный;
			НоваяСтрока.КодПричины					= Выборка.КодПричины;
						
			
			НоваяСтрока.ДРФО = Выборка.ДРФО;
			НоваяСтрока.Серия = Выборка.Серия;
			НоваяСтрока.Номер = Выборка.Номер;
			НоваяСтрока.ПериодНачало = Выборка.ПериодНачало;
			НоваяСтрока.ПериодКонец = Выборка.ПериодКонец;
			
			Если НЕ ИмяМакета = "ПФ_MXL_Приложение1_3" Тогда			
				НоваяСтрока.КоличествоДней = Выборка.КоличествоДней + Выборка.КоличествоДнейФСС;
				НоваяСтрока.Результат = Выборка.Результат + Выборка.РезультатФСС;
			КонецЕсли;	
			НоваяСтрока.КоличествоДнейФСС = Выборка.КоличествоДнейФСС;
			НоваяСтрока.РезультатФСС = Выборка.РезультатФСС;
			
			Если ИмяМакета = "ПФ_MXL_Приложение1_1" ИЛИ ИмяМакета = "ПФ_MXL_Приложение1_3" Тогда
				НоваяСтрока.ВидЗанятости = Выборка.ВидЗанятости;
			КонецЕсли;	
			Если ИмяМакета = "ПФ_MXL_Приложение1_1" Тогда
				НоваяСтрока.СтажВМесяцах = Выборка.СтажВМесяцах;
				НоваяСтрока.СтажЗа12МесяцевВМесяцах = Выборка.СтажЗа12МесяцевВМесяцах;
				НоваяСтрока.ЭтоПродолжениеБольничного = Выборка.ЭтоПродолжениеБольничного;
			КонецЕсли;	
			Если ИмяМакета = "ПФ_MXL_Приложение1_1" Тогда
				НоваяСтрока.СуммаЧАЭС = Выборка.СуммаЧАЭС;
				НоваяСтрока.ДниЧАЭС = Выборка.ДниЧАЭС;
				НоваяСтрока.НомерЧАЭС = Выборка.НомерЧАЭС;
			КонецЕсли;
			
			прСотрудник = Выборка.Сотрудник;
			прПричинаНетрудоспособности = Выборка.ПричинаНетрудоспособности;
			прКодПричиныЭлектронный 	= Выборка.КодПричиныЭлектронный;
			прКодПричины				= Выборка.КодПричины;
			прДРФО = Выборка.ДРФО;
			прСерия = Выборка.Серия;
			прНомер = Выборка.Номер;
			
			прПериодНачало = Выборка.ПериодНачало;
			прПериодКонец = Выборка.ПериодКонец;
			// Если строки одинаковые и если дата конца первой строки на один день меньше даты второй строки,
			// совмещаем их, делаем одну строку.	
		ИначеЕсли Выборка.Сотрудник = прСотрудник И Выборка.ПричинаНетрудоспособности = прПричинаНетрудоспособности И
			Выборка.ДРФО = прДРФО И Выборка.Серия = прСерия И Выборка.Номер = прНомер И НачалоДня(Выборка.ПериодНачало) = (НачалоДня(прПериодКонец)+ 1*60*60*24)   Тогда
			НоваяСтрока.ПериодНачало = прПериодНачало;
			НоваяСтрока.ПериодКонец = Выборка.ПериодКонец;
			Если НЕ ИмяМакета = "ПФ_MXL_Приложение1_3" Тогда			
				НоваяСтрока.КоличествоДней = НоваяСтрока.КоличествоДней + Выборка.КоличествоДней + Выборка.КоличествоДнейФСС;
				НоваяСтрока.Результат = НоваяСтрока.Результат + Выборка.Результат + Выборка.РезультатФСС;
			КонецЕсли;	
			НоваяСтрока.КоличествоДнейФСС = НоваяСтрока.КоличествоДнейФСС + Выборка.КоличествоДнейФСС;
			НоваяСтрока.РезультатФСС = НоваяСтрока.РезультатФСС + Выборка.РезультатФСС;
			
			Если ИмяМакета = "ПФ_MXL_Приложение1_1" ИЛИ ИмяМакета = "ПФ_MXL_Приложение1_3" Тогда
				НоваяСтрока.ВидЗанятости = Выборка.ВидЗанятости;
			КонецЕсли;	
			Если ИмяМакета = "ПФ_MXL_Приложение1_1" Тогда
				НоваяСтрока.СтажВМесяцах = Выборка.СтажВМесяцах;
				НоваяСтрока.СтажЗа12МесяцевВМесяцах = Выборка.СтажЗа12МесяцевВМесяцах;
				НоваяСтрока.ЭтоПродолжениеБольничного = Выборка.ЭтоПродолжениеБольничного;
			КонецЕсли;	
			
			прСотрудник = Выборка.Сотрудник;
			прПричинаНетрудоспособности = Выборка.ПричинаНетрудоспособности;
			прКодПричиныЭлектронный 	= Выборка.КодПричиныЭлектронный;
			прКодПричины				= Выборка.КодПричины;
			прДРФО = Выборка.ДРФО;
			прСерия = Выборка.Серия;
			прНомер = Выборка.Номер;
			
			прПериодКонец = Выборка.ПериодКонец;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаНачислений;
	
КонецФункции

Функция ПечатьПриложениеФИО(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент();
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_Приложение");
	ПервыйДокумент = Истина;
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Для Каждого Объект Из МассивОбъектов Цикл
		
		Если Объект.ЗаСчетФССОтНС Тогда
			ТекстСообщения = НСтр("ru='При включенном флаге ""За счет ФСС от НС"" печать ""Приложения"" не производится!';uk='При увімкненому флазі ""За рахунок ФСС від НВ"" друк ""Додатку"" не здійснюється!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		Иначе
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли; 
		
		// Шапка 
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьШапка);
		
		// СтрокаПоБольничным
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоБольничным");
		НомерСтроки = 1;
		РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Объект);
		ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			
			РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения(ВыборкаПоШапкеДокумента);
			ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
			ТаблицаНачислений = СгруппироватьПериодыНачислений(ВыборкаПоДокументам, "ПФ_MXL_Приложение", ВыборкаПоШапкеДокумента);
			
			Для Каждого Начисление Из ТаблицаНачислений Цикл
				Если Не Начисление.РезультатФСС = 0 Тогда
					ОбластьСтрока.Параметры.Номер = НомерСтроки;
					ОбластьСтрока.Параметры.Сотрудник 					= Начисление.Сотрудник;
					ОбластьСтрока.Параметры.КодПоДРФО 					= Начисление.ДРФО;
					ОбластьСтрока.Параметры.СерияНомер 					= Начисление.Серия + " " + Начисление.Номер;
					ОбластьСтрока.Параметры.ПричинаНетрудоспособности  	= Начисление.ПричинаНетрудоспособности.КодПричины;
					ОбластьСтрока.Параметры.ПериодНетрудоспособности   	= "З " + Формат(Начисление.ПериодНачало, "ДЛФ=Д") + " по " + Формат(Начисление.ПериодКонец, "ДЛФ=Д");
					ОбластьСтрока.Параметры.КоличествоДней 				= Начисление.КоличествоДней;
					ОбластьСтрока.Параметры.КоличествоДнейФСС 			= Начисление.КоличествоДнейФСС;
					ОбластьСтрока.Параметры.Результат 					= Формат(Начисление.Результат,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
					ОбластьСтрока.Параметры.РезультатФСС 				= Формат(Начисление.РезультатФСС,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
					
					ТабДокумент.Присоединить(ОбластьСтрока);
					
					НомерСтроки = НомерСтроки +1;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		// Подпись
		ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
		
		ЧислоДокумента                          = Формат(Объект.Дата,"ДФ='дд';Л=uk_UA");
		ДатаДокумента                           = Формат(Объект.Дата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
		ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
		ОбластьПодпись.Параметры.ДатаДокумента 	= ЧислоДокумента + ДатаДокументаБезЧисла;
		
		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Объект.Организация, Объект.Дата);
		
		Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
			ОбластьПодпись.Параметры.ФИОРуководителя = Руководители.РуководительФИО.Фамилия	    + " " + Руководители.РуководительФИО.Имя	 + " " + Руководители.РуководительФИО.Отчество;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер) Тогда
			ОбластьПодпись.Параметры.ФИОБухгалтера   = Руководители.ГлавныйБухгалтерФИО.Фамилия + " " + Руководители.ГлавныйБухгалтерФИО.Имя + " " + Руководители.ГлавныйБухгалтерФИО.Отчество;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьПодпись);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьПриложение1_1(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент();
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_Приложение1_1");
	ПервыйДокумент = Истина;
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Для Каждого Объект Из МассивОбъектов Цикл
		
		Если Объект.ЗаСчетФССОтНС Тогда
			ТекстСообщения = НСтр("ru='При включенном флаге ""За счет ФСС от НС"" печать ""Приложения"" не производится!';uk='При увімкненому флазі ""За рахунок ФСС від НВ"" друк ""Додатку"" не здійснюється!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		Иначе
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли; 
		
		//Шапка 
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьШапка);
		
		//СтрокаПоБольничным
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоБольничным");
		НомерСтроки = 1;
		РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Объект.Ссылка);
		ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			
			РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения1_1(ВыборкаПоШапкеДокумента);
			ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
			ТаблицаНачислений = СгруппироватьПериодыНачислений(ВыборкаПоДокументам, "ПФ_MXL_Приложение1_1", ВыборкаПоШапкеДокумента);
			
			Для Каждого Начисление ИЗ ТаблицаНачислений Цикл
				Если Не Начисление.РезультатФСС = 0 Тогда
					ЗаполнитьЗначенияСвойств(ОбластьСтрока,Начисление);
					ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
					ОбластьСтрока.Параметры.Фамилия 					= Начисление.Фамилия;
					ОбластьСтрока.Параметры.Имя							= Начисление.Имя;
					ОбластьСтрока.Параметры.Отчество					= Начисление.Отчество;
					ОбластьСтрока.Параметры.КодПоДРФО 					= Начисление.ДРФО;
					ОбластьСтрока.Параметры.Серия		 				= ?(Объект.РежимЗаполнения = 1,"" ,Начисление.Серия);
					ОбластьСтрока.Параметры.Номер						= СокрЛП(Начисление.Номер);
					ОбластьСтрока.Параметры.ВидЗанятости 			    = Начисление.ВидЗанятости;
					ОбластьСтрока.Параметры.ПричинаНетрудоспособности   = ?(Объект.РежимЗаполнения = 1, Начисление.ПричинаНетрудоспособности.КодПричиныЭлектронный, Начисление.ПричинаНетрудоспособности.КодПричины);
					ОбластьСтрока.Параметры.ДатаНачала  				= Формат(Начисление.ПериодНачало, "ДЛФ=Д");
					ОбластьСтрока.Параметры.ДатаОкончания 				= Формат(Начисление.ПериодКонец, "ДЛФ=Д");
					ОбластьСтрока.Параметры.КоличествоДней 				= Начисление.КоличествоДней;
					ОбластьСтрока.Параметры.КоличествоДнейФСС 			= Начисление.КоличествоДнейФСС;
					ОбластьСтрока.Параметры.Результат 					= Формат(Начисление.Результат,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
					ОбластьСтрока.Параметры.РезультатФСС 				= Формат(Начисление.РезультатФСС,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
					ОбластьСтрока.Параметры.СтажВМесяцах				= Начисление.СтажВМесяцах;
					ОбластьСтрока.Параметры.СтажЗа12МесяцевВМесяцах		= Начисление.СтажЗа12МесяцевВМесяцах;
					ОбластьСтрока.Параметры.ЭтоПродолжениеБольничного	= Начисление.ЭтоПродолжениеБольничного;
					ОбластьСтрока.Параметры.СуммаЧАЭС 					= Формат(Начисление.СуммаЧАЭС,"ЧЦ=15; ЧДЦ=2; ЧГ=");
					ОбластьСтрока.Параметры.ДниЧАЭС 					= Начисление.ДниЧАЭС;
					ОбластьСтрока.Параметры.НомерЧАЭС 					= Начисление.НомерЧАЭС;
					ТабДокумент.Присоединить(ОбластьСтрока);
					
					НомерСтроки = НомерСтроки +1;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		//Подпись
		ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
		Если ЗначениеЗаполнено(Объект.Ответственный.ФизическоеЛицо) Тогда
			
			//ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Объект.Организация, Объект.Ответственный.ФизЛицо, Объект.Дата);
			ДанныеФизЛица = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Объект.Организация, Объект.Ответственный.ФизическоеЛицо, Объект.Дата);
			
		    ОбластьПодпись.Параметры.Ответственный = Объект.Ответственный.ФизическоеЛицо.Фио;
			ОбластьПодпись.Параметры.ДолжностьОтветственного = ДанныеФизЛица.Должность;
			
		КонецЕсли;
		СведенияООрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Объект.Организация, Объект.Дата,,,КодЯзыкаПечать);
		ОбластьПодпись.Параметры.Телефон = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(СведенияООрганизации.Телефоны);	
		
	
		Если Объект.РежимЗаполнения = 1 Тогда
			ОбластьПодпись.Параметры.ПодвалКоды="* причина непрацездатності відображається за даними листка непрацездатності: 1- загальне захворювання; 2 – вагітність та пологи; 3 - Необхідність догляду за хворою дитиною; 4 - Необхідність догляду за хворим членом сім’ї; 5 - Необхідність догляду за дитиною віком до трьох років або дитиною з інвалідністю віком до 18 років у разі хвороби матері або іншої особи, яка доглядає за такою дитиною; 6 – Карантин, встановлений відповідно до законодавства; 7 – Протезування з поміщенням у стаціонар протезно-ортопедичного підприємства; 8 – Перебування у відділенні санаторно-курортного закладу; 10 - Ізоляція от COVID-19; 11 - Тимчасова непрацездатність внаслідок професійного захворювання; 12 – Тимчасова непрацездатність внаслідок нещасного випадку на виробництві"
		Иначе
			ОбластьПодпись.Параметры.ПодвалКоды="* причина непрацездатності відображається за даними листка непрацездатності: 1- загальне захворювання; 3 – захворювання внаслідок аварії на ЧАЕС; 5- невиробничі травми; 6- контакт з хворими на інфекційні захворювання та бактеріоносійство; 7- санаторно - курортне лікування; 8 – вагітність та пологи; 9 – ортопедичне протезування; 10 –догляд"
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьПодпись);		
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьПриложение1_2(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент();
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_Приложение1_2");
	ПервыйДокумент = Истина;
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Для Каждого Объект Из МассивОбъектов Цикл
		
		Если Объект.ЗаСчетФССОтНС Тогда
			ТекстСообщения = НСтр("ru='При включенном флаге ""За счет ФСС от НС"" печать ""Приложения"" не производится!';uk='При увімкненому флазі ""За рахунок ФСС від НВ"" друк ""Додатку"" не здійснюється!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		Иначе
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли; 
		
		//Шапка 
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьШапка);
		
		//СтрокаПоПособиям
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоПособиям");
		НомерСтроки = 1;
		РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Объект.Ссылка);
		ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			
			РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения1_2(ВыборкаПоШапкеДокумента);
			ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
			
			Пока ВыборкаПоДокументам.Следующий() Цикл 
				ОбластьСтрока.Параметры.Номер = НомерСтроки;
				ОбластьСтрока.Параметры.Фамилия 					= ВыборкаПоДокументам.Фамилия;
				ОбластьСтрока.Параметры.Имя							= ВыборкаПоДокументам.Имя;
				ОбластьСтрока.Параметры.Отчество					= ВыборкаПоДокументам.Отчество;
				ОбластьСтрока.Параметры.КодПоДРФО 					= ВыборкаПоДокументам.ДРФО;
				ОбластьСтрока.Параметры.ФамилияУмершего 			= ВыборкаПоДокументам.ФамилияУмершего;
				ОбластьСтрока.Параметры.ИмяУмершего					= ВыборкаПоДокументам.ИмяУмершего;
				ОбластьСтрока.Параметры.ОтчествоУмершего			= ВыборкаПоДокументам.ОтчествоУмершего;
				ОбластьСтрока.Параметры.СвидетельствоСерия			= ВыборкаПоДокументам.СвидетельствоСерия;
				ОбластьСтрока.Параметры.СвидетельствоНомер			= ВыборкаПоДокументам.СвидетельствоНомер;
				ОбластьСтрока.Параметры.Сумма 					    = Формат(ВыборкаПоДокументам.Сумма,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
				ТабДокумент.Присоединить(ОбластьСтрока);
				
				НомерСтроки = НомерСтроки +1;
			КонецЦикла;
			
		КонецЕсли;
		
		//Подпись
		ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
		
		Если ЗначениеЗаполнено(Объект.Ответственный.ФизическоеЛицо) Тогда
			
			//ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Объект.Организация, Объект.Ответственный.ФизЛицо, Объект.Дата);
			ДанныеФизЛица = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Объект.Организация, Объект.Ответственный.ФизическоеЛицо, Объект.Дата);
			
		    ОбластьПодпись.Параметры.Ответственный = Объект.Ответственный.ФизическоеЛицо.ФИО;
			ОбластьПодпись.Параметры.ДолжностьОтветственного = ДанныеФизЛица.Должность;
			
		КонецЕсли;
		СведенияООрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Объект.Организация, Объект.Дата,,,КодЯзыкаПечать);
		ОбластьПодпись.Параметры.Телефон = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(СведенияООрганизации.Телефоны);	
		ТабДокумент.Вывести(ОбластьПодпись);		
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьПриложение1_3(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент();
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_Приложение1_3");
	ПервыйДокумент = Истина;
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Для Каждого Объект Из МассивОбъектов Цикл
		
		Если Объект.ЗаСчетФССОтНС Тогда
			ТекстСообщения = НСтр("ru='При включенном флаге ""За счет ФСС от НС"" печать ""Приложения"" не производится!';uk='При увімкненому флазі ""За рахунок ФСС від НВ"" друк ""Додатку"" не здійснюється!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		Иначе
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли; 
		
		//Шапка 
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьШапка);
		
		//СтрокаПоБольничным
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоБольничным");
		НомерСтроки = 1;
		РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Объект.Ссылка);
		ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			
			РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения1_3(ВыборкаПоШапкеДокумента);
			ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
			ТаблицаНачислений = СгруппироватьПериодыНачислений(ВыборкаПоДокументам, "ПФ_MXL_Приложение1_3", ВыборкаПоШапкеДокумента);
			
			Для Каждого Начисление ИЗ ТаблицаНачислений Цикл
				Если Не Начисление.РезультатФСС = 0 Тогда
					ЗаполнитьЗначенияСвойств(ОбластьСтрока,Начисление);
					ОбластьСтрока.Параметры.НомерСтроки 				= НомерСтроки;
					ОбластьСтрока.Параметры.Фамилия 					= Начисление.Фамилия;
					ОбластьСтрока.Параметры.Имя							= Начисление.Имя;
					ОбластьСтрока.Параметры.Отчество					= Начисление.Отчество;
					ОбластьСтрока.Параметры.КодПоДРФО 					= Начисление.ДРФО;
					ОбластьСтрока.Параметры.Серия		 				= ?(Объект.РежимЗаполнения = 1,"" ,Начисление.Серия);
					ОбластьСтрока.Параметры.Номер						= СокрЛП(Начисление.Номер);
					ОбластьСтрока.Параметры.ВидЗанятости 			    = Начисление.ВидЗанятости;
					ОбластьСтрока.Параметры.ПричинаНетрудоспособности   = ?(Объект.РежимЗаполнения = 1, Начисление.ПричинаНетрудоспособности.КодПричиныЭлектронный, Начисление.ПричинаНетрудоспособности.КодПричины);
					ОбластьСтрока.Параметры.ДатаНачала  				= Формат(Начисление.ПериодНачало, "ДЛФ=Д");
					ОбластьСтрока.Параметры.ДатаОкончания 				= Формат(Начисление.ПериодКонец, "ДЛФ=Д");
					ОбластьСтрока.Параметры.КоличествоДнейФСС 			= Начисление.КоличествоДнейФСС;
					ОбластьСтрока.Параметры.РезультатФСС 				= Формат(Начисление.РезультатФСС,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
					ТабДокумент.Присоединить(ОбластьСтрока);
					
					НомерСтроки = НомерСтроки +1;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		//Подпись
		ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
		
		Если ЗначениеЗаполнено(Объект.Ответственный.ФизическоеЛицо) Тогда
			
			//ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Объект.Организация, Объект.Ответственный.ФизЛицо, Объект.Дата);
			ДанныеФизЛица = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Объект.Организация, Объект.Ответственный.ФизическоеЛицо, Объект.Дата);
			
		    ОбластьПодпись.Параметры.Ответственный = Объект.Ответственный.ФизическоеЛицо.ФИО;
			ОбластьПодпись.Параметры.ДолжностьОтветственного = ДанныеФизЛица.Должность;
		КонецЕсли;
			
		СведенияООрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Объект.Организация, Объект.Дата,,,КодЯзыкаПечать);
		ОбластьПодпись.Параметры.Телефон = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(СведенияООрганизации.Телефоны);	
		
		Если Объект.РежимЗаполнения = 1 Тогда
			ОбластьПодпись.Параметры.ПодвалКоды="* причина непрацездатності відображається за даними листка непрацездатності: 11 - Тимчасова непрацездатність внаслідок професійного захворювання; 12 – Тимчасова непрацездатність внаслідок нещасного випадку на виробництві"
		Иначе
			ОбластьПодпись.Параметры.ПодвалКоды="* причина непрацездатності відображається за даними листка непрацездатності: 2- професійне захворювання та його наслідки;     4 – нещасний випадок на виробництві та його наслідки"
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьПодпись);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьЗаявка2018(МассивОбъектов, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент();
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЗаявлениеРасчетВФСС.ПФ_MXL_Заявка2018");
	ПервыйДокумент = Истина;
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Для Каждого Объект Из МассивОбъектов Цикл
		
		СведенияООрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Объект.Организация, Объект.Дата,,,КодЯзыкаПечать);
		ОписаниеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияООрганизации, "ПолноеНаименование,",,КодЯзыкаПечать); 
		
		//Шапка 
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Организация = ОписаниеОрганизации;
		ОбластьШапка.Параметры.КодПоЕДРПОУ = СведенияООрганизации.КодПоЕДРПОУ;
		ОбластьШапка.Параметры.Адрес = СведенияООрганизации.ЮридическийАдрес;	 
		ОбластьШапка.Параметры.Телефон = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(СведенияООрганизации.Телефоны);	 	
		ОбластьШапка.Параметры.НомерСчета = Объект.Организация.БанковскийСчетДляРасчетовСФСС.НомерСчета;
		ОбластьШапка.Параметры.НаименованиеБанка = СведенияООрганизации.Банк;
		ОбластьШапка.Параметры.МФОБанкаОрганизации = СведенияООрганизации.МФО;
		
		ТабДокумент.Вывести(ОбластьШапка);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		//ШапкаТаблицы
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ОбластьШапкаТаблицы);
		
		//СтрокаВремНетрудоспособность
		ОбластьВремНетрудоспособность = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособность");
		ОбластьВремНетрудоспособность.Параметры.Сумма = Формат(Объект.Больничные.Итог("Сумма"),"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
		ОбластьВремНетрудоспособность.Параметры.Дни = Объект.Больничные.Итог("Дни");
		ОбластьВремНетрудоспособность.Параметры.СуммаЧАЭС = Формат(Объект.Больничные.Итог("СуммаЧАЭС"),"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
		ОбластьВремНетрудоспособность.Параметры.ДниЧАЭС = Объект.Больничные.Итог("ДниЧАЭС");
		ОбластьВремНетрудоспособность.Параметры.Отметка1 = (Объект.Больничные.Итог("Сумма") > 0);
		ТабДокумент.Вывести(ОбластьВремНетрудоспособность);
		
		//СтрокаВремНетрудоспособностьБерем
		ОбластьВремНетрудоспособностьБерем = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьБерем");
		ОбластьВремНетрудоспособностьБерем.Параметры.Сумма = Формат(Объект.Декретные.Итог("Сумма"),"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
		ОбластьВремНетрудоспособностьБерем.Параметры.Дни = Объект.Декретные.Итог("Дни");
		ОбластьВремНетрудоспособностьБерем.Параметры.СуммаЧАЭС = Формат(Объект.Декретные.Итог("СуммаЧАЭС"),"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
		ОбластьВремНетрудоспособностьБерем.Параметры.ДниЧАЭС = Объект.Декретные.Итог("ДниЧАЭС");
		ОбластьВремНетрудоспособностьБерем.Параметры.Отметка11 = (Объект.Декретные.Итог("Сумма") > 0);
		ТабДокумент.Вывести(ОбластьВремНетрудоспособностьБерем);
		
		//СтрокаВремНетрудоспособностьПогребение 
		ОбластьВремНетрудоспособностьПогребение = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьПогребение");
		ОбластьВремНетрудоспособностьПогребение.Параметры.Сумма = Формат(Объект.Погребение.Итог("Сумма"),"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
		ОбластьВремНетрудоспособностьПогребение.Параметры.КоличествоЛиц = Объект.Погребение.Количество();
		ОбластьВремНетрудоспособностьПогребение.Параметры.Отметка2 = (Объект.Погребение.Итог("Сумма") > 0);
		ТабДокумент.Вывести(ОбластьВремНетрудоспособностьПогребение);
		
		//СтрокаВремНетрудоспособностьНС
		ОбластьВремНетрудоспособностьНС = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьНС");
		ОбластьВремНетрудоспособностьНС.Параметры.Сумма = Формат(Объект.БольничныеНС.Итог("Сумма"),"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
		ОбластьВремНетрудоспособностьНС.Параметры.Дни = Объект.БольничныеНС.Итог("Дни");
		ОбластьВремНетрудоспособностьНС.Параметры.Отметка3 = (Объект.БольничныеНС.Итог("Сумма") > 0);
		ТабДокумент.Вывести(ОбластьВремНетрудоспособностьНС);
		
		ОбластьПрочее = Макет.ПолучитьОбласть("СтрокаПрочее");
		ТабДокумент.Вывести(ОбластьПрочее);
		
		//Итог
		ОбластьИтог = Макет.ПолучитьОбласть("Итог");
		СуммаИтог = Объект.Больничные.Итог("Сумма") + Объект.БольничныеНС.Итог("Сумма") + Объект.Декретные.Итог("Сумма"); 
		ОбластьИтог.Параметры.СуммаИтог = Формат(СуммаИтог,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
		ТабДокумент.Вывести(ОбластьИтог);
		
		ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
		
		ЧислоДокумента                          = Формат(Объект.Дата,"ДФ='дд';Л=uk_UA");
		ДатаДокумента                           = Формат(Объект.Дата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
		ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
		ОбластьПодпись.Параметры.ДатаДокумента 	= ЧислоДокумента + ДатаДокументаБезЧисла;
		
		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Объект.Организация, Объект.Дата);
		
		Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
			ОбластьПодпись.Параметры.ФИОРуководителя = Руководители.РуководительФИО.Фамилия	    + " " + Руководители.РуководительФИО.Имя	 + " " + Руководители.РуководительФИО.Отчество;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер) Тогда
			ОбластьПодпись.Параметры.ФИОБухгалтера   = Руководители.ГлавныйБухгалтерФИО.Фамилия + " " + Руководители.ГлавныйБухгалтерФИО.Имя + " " + Руководители.ГлавныйБухгалтерФИО.Отчество;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьПодпись);
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции	

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции	

Процедура РассчитатьИтоговыеСуммы(Объект) Экспорт
	
	ВсегоПоБольничным                 = 0;
	ВсегоПоБольничнымПоУходу          = 0;
	ВсегоПоБеременностиИРодам         = 0;
	ВсегоНаПогребение                 = 0;
	ВсегоПоДокументу                  = 0;
	КоличествоДнейПоБольничным        = 0;
	КоличествоДнейПоБольничнымПоУходу = 0;
	КоличествоДнейПоБеременностиИРодам = 0;
	
	Если Объект.Дата >= Дата(2018,10,1) Тогда
		
		ВсегоПоДокументу = Объект.Больничные.Итог("Сумма") + Объект.Декретные.Итог("Сумма") + Объект.БольничныеНС.Итог("Сумма") + Объект.Погребение.Итог("Сумма");
		
	Иначе	
		
		РезультатЗапросаПоДокументам = ПолучитьЗапросДляРасчетаСумм(Объект);
		ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
		
		Пока ВыборкаПоДокументам.Следующий() Цикл
			Сумма = ВыборкаПоДокументам.Результат;
			КоличествоДней = ВыборкаПоДокументам.КоличествоДней;
			// Для документа "Начисление по больничному листу"
			Если ТипЗнч(ВыборкаПоДокументам.Документ) = Тип("ДокументСсылка.ИНАГРО_НачислениеПоБольничномуЛисту") Тогда 
				СтатьяДокумента = ВыборкаПоДокументам.СтатьяРасчетовСФСС; 
				Если СтатьяДокумента = Справочники.СтатьиНалоговыхДеклараций.ФССУтрТрудосп_ВремНетрудосп ИЛИ СтатьяДокумента = Справочники.СтатьиНалоговыхДеклараций.ФССНесчСлуч_ВремНетрудосп Тогда
					ВсегоПоБольничным = ВсегоПоБольничным + Сумма;  
					КоличествоДнейПоБольничным = КоличествоДнейПоБольничным + КоличествоДней;
				ИначеЕсли СтатьяДокумента = Справочники.СтатьиНалоговыхДеклараций.ФССУтрТрудосп_Берем Тогда
					ВсегоПоБеременностиИРодам = ВсегоПоБеременностиИРодам + Сумма; 
					КоличествоДнейПоБеременностиИРодам = КоличествоДнейПоБеременностиИРодам + КоличествоДней;
				ИначеЕсли  СтатьяДокумента = Справочники.СтатьиНалоговыхДеклараций.ФССУтрТрудосп_ВремНетрудоспУход Тогда
					ВсегоПоБольничнымПоУходу = ВсегоПоБольничнымПоУходу + Сумма;
					КоличествоДнейПоБольничнымПоУходу = КоличествоДнейПоБольничнымПоУходу + КоличествоДней;
				КонецЕсли;
				// Для документа "Начисление единовременных пособий за счет ФСС"
			ИначеЕсли ТипЗнч(ВыборкаПоДокументам.Документ) = Тип("ДокументСсылка.ИНАГРО_НачислениеЕдиновременныхПособийЗаСчетФСС") Тогда
				ВсегоНаПогребение = ВсегоНаПогребение + Сумма;  
			КонецЕсли;     
		КонецЦикла;
		
		ВсегоПоДокументу =  ВсегоПоБольничным + ВсегоПоБеременностиИРодам + ВсегоПоБольничнымПоУходу + ВсегоНаПогребение;
		
	КонецЕсли;	
	
	Объект.ВсегоПоБольничным 					= ВсегоПоБольничным;
	Объект.ВсегоПоБеременностиИРодам			= ВсегоПоБеременностиИРодам;
	Объект.ВсегоПоБольничнымПоУходу 			= ВсегоПоБольничнымПоУходу;
	Объект.ВсегоНаПогребение 					= ВсегоНаПогребение;
	Объект.ВсегоПоДокументу 					= ВсегоПоДокументу;
	Объект.КоличествоДнейПоБольничным 			= КоличествоДнейПоБольничным;
	Объект.КоличествоДнейПоБольничнымПоУходу 	= КоличествоДнейПоБольничнымПоУходу;
	Объект.КоличествоДнейПоБеременностиИРодам 	= КоличествоДнейПоБеременностиИРодам;
	
КонецПроцедуры

Функция ПолучитьЗапросДляРасчетаСумм(Объект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДокументСсылка",    Объект.Ссылка);
	Запрос.УстановитьПараметр("Документ",          Объект.ДокументыПоНачислениям.Выгрузить( ,"Документ"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОсновнойЗапрос.Документ КАК Документ,
	|	ОсновнойЗапрос.Результат КАК Результат,
	|	ОсновнойЗапрос.СтатьяРасчетовСФСС КАК СтатьяРасчетовСФСС,
	|	ОсновнойЗапрос.КоличествоДней КАК КоличествоДней
	|ИЗ
	|	(ВЫБРАТЬ
	|		Начисления.Регистратор КАК Документ,
	|		СУММА(Начисления.Результат) КАК Результат,
	|		РазмерыВыплат.СтатьяРасчетовСФСС КАК СтатьяРасчетовСФСС,
	|		NULL КАК КоличествоДней
	|	ИЗ
	|		РегистрРасчета.ИНАГРО_Начисления КАК Начисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РазмерыЗаконодательноУстановленныхВыплат.СрезПоследних(&ПериодРегистрации, ) КАК РазмерыВыплат
	|			ПО Начисления.ВидРасчета = РазмерыВыплат.ВидРасчета
	|	ГДЕ
	|		Начисления.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
	|		И Начисления.Регистратор В(&Документ)
	|		И РазмерыВыплат.СтатьяРасчетовСФСС = ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ФССУтрТрудосп_Погребен)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РазмерыВыплат.СтатьяРасчетовСФСС,
	|		Начисления.Регистратор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Начисления.Регистратор,
	|		СУММА(Начисления.Результат),
	|		Начисления.Регистратор.ПричинаНетрудоспособности.СтатьяРасчетовСФСС,
	|		СУММА(ВЫБОР
	|				КОГДА Начисления.Назначение.ИНАГРО_ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство)
	|					ТОГДА ВЫБОР
	|							КОГДА Начисления.Регистратор.ВидУчетаВремениДляСредней = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремениДляСредней.ПоКалендарнымДнямСПраздниками)
	|								ТОГДА Начисления.КалендарныеДни
	|							ИНАЧЕ Начисления.НормаДней
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ)
	|	ИЗ
	|		РегистрРасчета.ИНАГРО_Начисления КАК Начисления
	|	ГДЕ
	|		Начисления.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеПоБольничномуЛисту
	|		И Начисления.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
	|		И Начисления.Регистратор В(&Документ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Начисления.Регистратор,
	|		Начисления.Регистратор.ПричинаНетрудоспособности.СтатьяРасчетовСФСС) КАК ОсновнойЗапрос";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьДанныеДляВыгрузки(Объект) Экспорт
	
	Результат = Новый Структура;
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Объект.Ссылка);
	ТаблицаНачислений = Новый ТаблицаЗначений;
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения1_1(ВыборкаПоШапкеДокумента);
		ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
		ТаблицаНачислений = СгруппироватьПериодыНачислений(ВыборкаПоДокументам, "ПФ_MXL_Приложение1_1", ВыборкаПоШапкеДокумента);
	КонецЕсли;
	Результат.Вставить("ТЧ11", ТаблицаНачислений);
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Объект.Ссылка);
	ТаблицаНачислений = Новый ТаблицаЗначений;
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения1_2(ВыборкаПоШапкеДокумента);
		ТаблицаНачислений = РезультатЗапросаПоДокументам.Выгрузить();
	КонецЕсли;
	Результат.Вставить("ТЧ12", ТаблицаНачислений);
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Объект.Ссылка);
	ТаблицаНачислений = Новый ТаблицаЗначений;
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения1_3(ВыборкаПоШапкеДокумента);
		ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
		ТаблицаНачислений = СгруппироватьПериодыНачислений(ВыборкаПоДокументам, "ПФ_MXL_Приложение1_3", ВыборкаПоШапкеДокумента);
	КонецЕсли;
	Результат.Вставить("ТЧ13", ТаблицаНачислений);
	
	Возврат Результат;

КонецФункции	

#КонецОбласти
	
#КонецЕсли

