#Область ОбработчикиСобытийФормы 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 
		
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	// Уведомим о появлении функционала рабочей даты
	НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях("РабочаяДатаИзДокумента");
	
	// Показываем, если это новый документ и сама рабочая дата еще не установлена.
	НастройкиПредупреждений.РабочаяДатаИзДокумента = НастройкиПредупреждений.РабочаяДатаИзДокумента
		И Параметры.Ключ.Пустая()
		И НЕ ЗначениеЗаполнено(БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("РабочаяДата"));
		
	СписокТабличныхЧастей = Новый СписокЗначений;
	СписокТабличныхЧастей.Добавить("Затраты",       "Затраты"); 	
	СписокТабличныхЧастей.Добавить("БазаПоВыпуску", "БазаПоВыпуску");
	СписокТабличныхЧастей.Добавить("БазаПоПлощади", "БазаПоПлощади");
	СписокТабличныхЧастей.Добавить("БазаПоЗатрате", "БазаПоЗатрате");
	СписокТабличныхЧастей.Добавить("Распределение", "Распределение");

	АктивизироватьТабличнуюЧасть = ОбщегоНазначенияБПВызовСервера.ПолучитьПервуюНепустуюВидимуюТабличнуюЧасть(
		ЭтаФорма, СписокТабличныхЧастей);
	ОбщегоНазначенияБПВызовСервера.АктивизироватьЭлементФормы(ЭтаФорма, АктивизироватьТабличнуюЧасть);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "РаспределениеЗатрат_Настройки" Тогда
		РаспределениеЗатрат_Настройки(Параметр);
	Иначе		
		ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтотОбъект, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьДобавленныеКолонкиТаблицыРаспределение();
	
	УстановитьСостояниеДокумента();

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ОбщегоНазначенияБПКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, 
		ТекущаяДатаДокумента);		
		
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
	Если НЕ ЗначениеЗаполнено(Объект.НачалоПериода) Тогда		
		Объект.НачалоПериода = НачалоДня(ТекущаяДатаДокумента);		
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.КонецПериода) Тогда		
		Объект.КонецПериода  = КонецДня(ТекущаяДатаДокумента);		
	КонецЕсли;
	
	ПроверитьДатыДокумента();
	
	УправлениеФормой(ЭтаФорма); 
		
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	УстановитьОсновноеПодразделениеОрганизации();
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	
	Объект.КонецПериода = КонецДня(Объект.КонецПериода); 
	
	ПроверитьДатыДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура СчетЗатратОтборЗатратПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда 
		ТекстСообщения = НСтр("ru='Необходимо выбрать организацию.';uk='Необхідно вибрати організацію.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.Организация");		
		Объект.СчетЗатратОтборЗатрат = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПустаяСсылка");		
	Иначе
		ДанныеОбъекта = Новый Структура("Дата, Организация, СчетЗатратОтборЗатрат");
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);		
		СчетЗатратОтборЗатратПриИзмененииНаСервере(ДанныеОбъекта);		
	КонецЕсли;	

КонецПроцедуры

&НаСервереБезКонтекста
Процедура СчетЗатратОтборЗатратПриИзмененииНаСервере(ДанныеОбъекта)
	
	Если УчетнаяПолитика.НеРаспределятьОПЗнаСебестоимостьПродукции(ДанныеОбъекта.Организация, ДанныеОбъекта.Дата)
		И  (ДанныеОбъекта.СчетЗатратОтборЗатрат = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы
		ИЛИ ДанныеОбъекта.СчетЗатратОтборЗатрат.Родитель = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы) Тогда
		ТекстСообщения = Нстр("ru = 'В учетной политике организации распределение в БУ общепроизводственных затрат на себестоимость продукции запрещено!'; uk = 'В обліковій політиці організації розподілення у БО загальновиробничих витрат на собівартість продукції заборонено!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.СчетЗатратОтборЗатрат");
		ДанныеОбъекта.СчетЗатратОтборЗатрат = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатурнаяГруппаОтборЗатратПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.НоменклатурнаяГруппаОтборЗатрат) Тогда		
		Объект.НалоговоеНазначениеЗатрат = ПолучитьЗначениеРеквизита(Объект.НоменклатурнаяГруппаОтборЗатрат, "НалоговоеНазначениеВПроизводстве");				
	КонецЕсли;	
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ПрименятьКоэффициентПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура БазаРаспределенияПриИзменении(Элемент)
	
	Объект.БазаПоВыпуску.Очистить();
	Объект.БазаПоЗатрате.Очистить();
	Объект.БазаПоПлощади.Очистить();
	
	Объект.НоменклатураОтборБаза = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыФормыРаспределение

&НаКлиенте
Процедура РаспределениеСчетПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Распределение.ТекущиеДанные;

	УстановитьЗаголовкиИДоступностьСубконтоТаблицыРаспределение(ЭтаФорма, ТекущиеДанные.Счет);

	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3", "Субконто1", "Субконто2", "Субконто3");
	ПоляОбъекта.Вставить("Организация", Объект.Организация); 	
	
	БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(ТекущиеДанные.Счет, ТекущиеДанные, ПоляОбъекта, Истина);
	
	ИзменитьПараметрыВыбораПолейСубконтоТаблицыРаспределение(ЭтаФорма);
	
	ДанныеСтрокиТаблицы = Новый Структура("Счет, Субконто1, Субконто2, Субконто3");		
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные); 	
	
	// Дополнительные поля, требующиеся для заполнения добавленных колонок табличного поля текущей формы.
	ДанныеСтрокиТаблицы.Вставить("Субконто1Доступность", ТекущиеДанные.Субконто1Доступность);
	ДанныеСтрокиТаблицы.Вставить("Субконто2Доступность", ТекущиеДанные.Субконто2Доступность);
	ДанныеСтрокиТаблицы.Вставить("Субконто3Доступность", ТекущиеДанные.Субконто3Доступность); 	
		
	ЗаполнитьДобавленныеКолонкиСтрокиТаблицыРаспределение(ДанныеСтрокиТаблицы);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);

КонецПроцедуры

&НаКлиенте
Процедура РаспределениеСубконтоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Затраты.ТекущиеДанные;

	ИзменитьПараметрыВыбораПолейСубконтоТаблицыРаспределение(ЭтаФорма);

	ДанныеСтрокиТаблицы = Новый Структура("Счет, Субконто1, Субконто2, Субконто3");		
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные); 	
	
	// Дополнительные поля, требующиеся для заполнения добавленных колонок табличного поля текущей формы.
	ДанныеСтрокиТаблицы.Вставить("Субконто1Доступность", ТекущиеДанные.Субконто1Доступность);
	ДанныеСтрокиТаблицы.Вставить("Субконто2Доступность", ТекущиеДанные.Субконто2Доступность);
	ДанныеСтрокиТаблицы.Вставить("Субконто3Доступность", ТекущиеДанные.Субконто3Доступность);  	
		
	ЗаполнитьДобавленныеКолонкиСтрокиТаблицыРаспределение(ДанныеСтрокиТаблицы);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);
		
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеСубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтрокаТаблицы = Элементы.Распределение.ТекущиеДанные;

	ПараметрыДокумента = ПолучитьСписокПараметров(ЭтаФорма, СтрокаТаблицы, "Субконто%Индекс%");
	ПараметрыДокумента.Вставить("СчетУчета", СтрокаТаблицы.Счет);
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтаФорма, Элемент, СтандартнаяОбработка, ПараметрыДокумента);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Настройки(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УправлениеЗатратами",          Объект.УправлениеЗатратами);
	ПараметрыФормы.Вставить("УправлениеБазойРаспределения", Объект.УправлениеБазойРаспределения);
	ПараметрыФормы.Вставить("УправлениеРаспределением",     Объект.УправлениеРаспределением);
	
	ОткрытьФорму("Документ.ИНАГРО_РаспределениеЗатрат.Форма.ФормаНастроек", ПараметрыФормы, , Новый УникальныйИдентификатор(), , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ПараметрыФормыВыбора = Новый Структура("НачалоПериода, КонецПериода", Объект.НачалоПериода, Объект.КонецПериода);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыФормыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Объект, РезультатВыбора, "НачалоПериода, КонецПериода");
	
	ПроверитьДатыДокумента();
	
КонецПроцедуры

// Табличная часть Затраты

&НаКлиенте
Процедура ЗаполнитьЗатраты(Команда)
	
	Если НЕ ПроверкаЗаполнения() Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Проведен Тогда		
		ПоказатьПредупреждение(, НСтр("ru='Заполнение возможно только в непроведенном документе.';uk='Заповнення можливе тільки в непроведеному документі.'"));
		Возврат;  		
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.НалоговоеНазначениеЗатрат) Тогда
		ТекстСообщения = НСтр("ru='Не заполнено Налоговое назначение затрат';uk='Не заповнене Податкове призначення витрат'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.НалоговоеНазначениеЗатрат");
		Возврат;
	КонецЕсли;
	
	Если Объект.Затраты.Количество() > 0 Тогда		
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть будет очищена. Продолжить?';uk='Перед заповненням таблична частина буде очищена. Продовжити?'");
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьЗатратыЗавершение", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);		
	Иначе
		ЗаполнитьЗатратыНаСервере();
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗатратыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
   	
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Затраты.Очистить();
			
	ЗаполнитьЗатратыНаСервере();
	
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьЗатратыНаСервере()
	
	Документ = РеквизитФормыВЗначение("Объект", Тип("ДокументОбъект.ИНАГРО_РаспределениеЗатрат"));	
	Документ.ЗаполнитьЗатраты();	
	ЗначениеВРеквизитФормы(Документ, "Объект");
	
КонецПроцедуры 

// Табличная часть БазаРаспределения

&НаКлиенте
Процедура ЗаполнитьБазаРаспределения(Команда)
	
	ТекущаяСтраница = Элементы.СтраницыБазаРаспределения.ТекущаяСтраница;
	
	Если ТекущаяСтраница.Имя = "ГруппаБазаПоВыпуску" Тогда
		ИмяТабличнойЧасти = "БазаПоВыпуску";
	ИначеЕсли ТекущаяСтраница.Имя = "ГруппаБазаПоПлощади" Тогда
		ИмяТабличнойЧасти = "БазаПоПлощади";
	ИначеЕсли ТекущаяСтраница.Имя = "ГруппаБазаПоЗатрате" Тогда
		ИмяТабличнойЧасти = "БазаПоЗатрате";
	КонецЕсли;	
		
	Если Объект[ИмяТабличнойЧасти].Количество() > 0 Тогда		
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть будет очищена. Продолжить?';uk='Перед заповненням таблична частина буде очищена. Продовжити?'");
		ДополнительныеПараметры = Новый Структура("ИмяТабличнойЧасти", ИмяТабличнойЧасти);
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьБазаРаспределенияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);		
	Иначе
		ЗаполнитьБазаРаспределенияНаСервере();
	КонецЕсли;         
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьБазаРаспределенияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
   	
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Объект[ДополнительныеПараметры.ИмяТабличнойЧасти].Очистить();
			
	ЗаполнитьБазаРаспределенияНаСервере();
	
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьБазаРаспределенияНаСервере()
	
	Документ = РеквизитФормыВЗначение("Объект", Тип("ДокументОбъект.ИНАГРО_РаспределениеЗатрат"));	
	Документ.ЗаполнитьБазаРаспределения();	
	ЗначениеВРеквизитФормы(Документ, "Объект");
	
КонецПроцедуры 

&НаКлиенте
Процедура БазаРаспределенияУстановитьСчет(Команда)
	
	ВыбЗнач = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПустаяСсылка");
	
	Массив = Новый Массив;
	Массив.Добавить(ТипЗнч(ВыбЗнач));
	ОписаниеТипов = Новый ОписаниеТипов(Массив);
	
	ТекущаяСтраница = Элементы.СтраницыБазаРаспределения.ТекущаяСтраница;
	
	Если ТекущаяСтраница.Имя = "ГруппаБазаПоВыпуску" Тогда
		ИмяТабличнойЧасти = "БазаПоВыпуску";
	ИначеЕсли ТекущаяСтраница.Имя = "ГруппаБазаПоПлощади" Тогда
		ИмяТабличнойЧасти = "БазаПоПлощади";
	ИначеЕсли ТекущаяСтраница.Имя = "ГруппаБазаПоЗатрате" Тогда
		ИмяТабличнойЧасти = "БазаПоЗатрате";
	КонецЕсли;	
	
	ДополнительныеПараметры = Новый Структура("ИмяТабличнойЧасти", ИмяТабличнойЧасти);
	Оповещение = Новый ОписаниеОповещения("БазаРаспределенияУстановитьСчетЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВводЗначения(Оповещение, ВыбЗнач, Нстр("ru='Введите значение';uk='Введіть значення'"), ОписаниеТипов); 

КонецПроцедуры

&НаКлиенте
Процедура БазаРаспределенияУстановитьСчетЗавершение(ВыбЗнач, ДополнительныеПараметры) Экспорт
   	
	Если ВыбЗнач <> Неопределено Тогда  	
		
		Для Каждого СтрокаТабличнойЧасти Из Объект[ДополнительныеПараметры.ИмяТабличнойЧасти] Цикл 
			СтрокаТабличнойЧасти.Счет = ВыбЗнач;
		КонецЦикла; 
		
	КонецЕсли;  
			
КонецПроцедуры  

// Табличная часть Распределение

&НаКлиенте
Процедура ЗаполнитьРаспределение(Команда)
	
	Если НЕ ПроверкаЗаполнения() Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Проведен Тогда		
		ПоказатьПредупреждение(, НСтр("ru='Заполнение возможно только в непроведенном документе.';uk='Заповнення можливе тільки в непроведеному документі.'"));
		Возврат;  		
	КонецЕсли;	
		
	Если Объект.Распределение.Количество() > 0 Тогда		
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть будет очищена. Продолжить?';uk='Перед заповненням таблична частина буде очищена. Продовжити?'");
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьРаспределениеЗавершение", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);		
	Иначе
		ЗаполнитьРаспределениеНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРаспределениеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
   	
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Распределение.Очистить();
			
	ЗаполнитьРаспределениеНаСервере();
	
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьРаспределениеНаСервере()
	
	Документ = РеквизитФормыВЗначение("Объект", Тип("ДокументОбъект.ИНАГРО_РаспределениеЗатрат"));	
	Документ.ЗаполнитьРаспределение(Объект.БазаРаспределения);	
	ЗначениеВРеквизитФормы(Документ, "Объект");
	
	ЗаполнитьДобавленныеКолонкиТаблицыРаспределение();
	
КонецПроцедуры 

&НаКлиенте
Процедура РаспределениеУстановитьСчет(Команда)
	
	ВыбЗнач = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПустаяСсылка");
	
	Массив = Новый Массив;
	Массив.Добавить(ТипЗнч(ВыбЗнач));
	ОписаниеТипов = Новый ОписаниеТипов(Массив);	
		
	Оповещение = Новый ОписаниеОповещения("РаспределениеУстановитьСчетЗавершение", ЭтотОбъект, Параметры);
	ПоказатьВводЗначения(Оповещение, ВыбЗнач, Нстр("ru='Введите значение';uk='Введіть значення'"), ОписаниеТипов); 

КонецПроцедуры

&НаКлиенте
Процедура РаспределениеУстановитьСчетЗавершение(ВыбЗнач, ДополнительныеПараметры) Экспорт
   	
	Если ВыбЗнач <> Неопределено Тогда  	
		
		Для Каждого СтрокаТабличнойЧасти Из Объект.Распределение Цикл 
			СтрокаТабличнойЧасти.СчетСписания = ВыбЗнач;
		КонецЦикла; 
		
	КонецЕсли;  
			
КонецПроцедуры  

&НаКлиенте
Процедура РаспределениеУстановитьПродукция(Команда)
		
	ВыбЗнач  = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	ВыбЗнач1 = ПредопределенноеЗначение("Справочник.БиологическиеАктивы.ПустаяСсылка");
	
	Массив = Новый Массив;
	Массив.Добавить(ТипЗнч(ВыбЗнач));
	Массив.Добавить(ТипЗнч(ВыбЗнач1));
	ОписаниеТипов = Новый ОписаниеТипов(Массив);	
		
	Оповещение = Новый ОписаниеОповещения("РаспределениеУстановитьПродукцияЗавершение", ЭтотОбъект, Параметры);
	ПоказатьВводЗначения(Оповещение, ВыбЗнач, Нстр("ru='Введите значение';uk='Введіть значення'"), ОписаниеТипов); 

КонецПроцедуры

&НаКлиенте
Процедура РаспределениеУстановитьПродукцияЗавершение(ВыбЗнач, ДополнительныеПараметры) Экспорт
   	
	Если ВыбЗнач <> Неопределено Тогда  	
		
		Для Каждого СтрокаТабличнойЧасти Из Объект.Распределение Цикл 
			СтрокаТабличнойЧасти.Продукция = ВыбЗнач;
		КонецЦикла; 
		
	КонецЕсли;  
			
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеУстановитьСклад(Команда)
	
	ВыбЗнач  = ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка");
		
	Массив = Новый Массив;
	Массив.Добавить(ТипЗнч(ВыбЗнач));	
	ОписаниеТипов = Новый ОписаниеТипов(Массив);	
		
	Оповещение = Новый ОписаниеОповещения("РаспределениеУстановитьСкладЗавершение", ЭтотОбъект, Параметры);
	ПоказатьВводЗначения(Оповещение, ВыбЗнач, Нстр("ru='Введите значение';uk='Введіть значення'"), ОписаниеТипов); 

КонецПроцедуры

&НаКлиенте
Процедура РаспределениеУстановитьСкладЗавершение(ВыбЗнач, ДополнительныеПараметры) Экспорт
   	
	Если ВыбЗнач <> Неопределено Тогда  	
		
		Для Каждого СтрокаТабличнойЧасти Из Объект.Распределение Цикл 
			СтрокаТабличнойЧасти.Склад = ВыбЗнач;
		КонецЦикла; 
		
	КонецЕсли;  
			
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеУстановитьПодразделение(Команда)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Владелец", Объект.Организация);	 
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", 	   ПараметрыОтбора);
	ПараметрыФормы.Вставить("РежимВыбора", Истина); 
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("РаспределениеУстановитьПодразделениеЗавершение", ЭтотОбъект);

	ОткрытьФорму("Справочник.ПодразделенияОрганизаций.Форма.ФормаВыбора", ПараметрыФормы, , , , , ОповещениеОЗакрытии);	 

КонецПроцедуры

&НаКлиенте
Процедура РаспределениеУстановитьПодразделениеЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
   	
	Если РезультатЗакрытия <> Неопределено Тогда  	
		
		Для Каждого СтрокаТабличнойЧасти Из Объект.Распределение Цикл 
			СтрокаТабличнойЧасти.Подразделение = РезультатЗакрытия;
		КонецЦикла; 
		
	КонецЕсли;  
			
КонецПроцедуры 

&НаКлиенте
Процедура РаспределениеНоменклатурнаяГруппа(Команда)
		
	ВыбЗнач  = ПредопределенноеЗначение("Справочник.НоменклатурныеГруппы.ПустаяСсылка");
		
	Массив = Новый Массив;
	Массив.Добавить(ТипЗнч(ВыбЗнач));	
	ОписаниеТипов = Новый ОписаниеТипов(Массив);	
		
	Оповещение = Новый ОписаниеОповещения("РаспределениеНоменклатурнаяГруппаЗавершение", ЭтотОбъект, Параметры);
	ПоказатьВводЗначения(Оповещение, ВыбЗнач, Нстр("ru='Введите значение';uk='Введіть значення'"), ОписаниеТипов); 
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеНоменклатурнаяГруппаЗавершение(ВыбЗнач, ДополнительныеПараметры) Экспорт
   	
	Если ВыбЗнач <> Неопределено Тогда  	
		
		Для Каждого СтрокаТабличнойЧасти Из Объект.Распределение Цикл 
			СтрокаТабличнойЧасти.НоменклатурнаяГруппа = ВыбЗнач;
		КонецЦикла; 
		
	КонецЕсли;  
			
КонецПроцедуры 

&НаКлиенте
Процедура РаспределениеУстановитьСтатьяЗатрат(Команда)
	
	ВыбЗнач  = ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ПустаяСсылка");
		
	Массив = Новый Массив;
	Массив.Добавить(ТипЗнч(ВыбЗнач));	
	ОписаниеТипов = Новый ОписаниеТипов(Массив);	
		
	Оповещение = Новый ОписаниеОповещения("РаспределениеУстановитьСтатьяЗатратЗавершение", ЭтотОбъект, Параметры);
	ПоказатьВводЗначения(Оповещение, ВыбЗнач, Нстр("ru='Введите значение';uk='Введіть значення'"), ОписаниеТипов); 

КонецПроцедуры

&НаКлиенте
Процедура РаспределениеУстановитьСтатьяЗатратЗавершение(ВыбЗнач, ДополнительныеПараметры) Экспорт
   	
	Если ВыбЗнач <> Неопределено Тогда  	
		
		Для Каждого СтрокаТабличнойЧасти Из Объект.Распределение Цикл 
			СтрокаТабличнойЧасти.СтатьяЗатрат = ВыбЗнач;
		КонецЦикла; 
		
	КонецЕсли;  
			
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ТекущаяДатаДокумента = Объект.Дата; 	
	
	Если НЕ ЗначениеЗаполнено(Объект.ПодразделениеОтборЗатрат) Тогда
		УстановитьОсновноеПодразделениеОрганизации();
	КонецЕсли;
	
	ЗаполнитьДобавленныеКолонкиТаблицыРаспределение();
	
	УправлениеФормой(ЭтотОбъект);
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Элементы.НалоговоеНазначениеЗатрат.Доступность      = НЕ ЗначениеЗаполнено(Объект.НоменклатурнаяГруппаОтборЗатрат);	
	
	Элементы.Коэффициент.Доступность                    = Объект.ПрименятьКоэффициент;
	Элементы.СписыватьВсеЗатратыПоПродукции.Доступность = Объект.ПрименятьКоэффициент;
	
	Элементы.СтраницаЗатраты.Видимость           = Объект.УправлениеЗатратами;
	Элементы.СтраницаБазаРаспределения.Видимость = Объект.УправлениеБазойРаспределения;
	Элементы.СтраницаРеспределение.Видимость     = Объект.УправлениеРаспределением;
	
	Если ЗначениеЗаполнено(Объект.БазаРаспределения) И ЗначениеЗаполнено(ПолучитьЗначениеРеквизита(Объект.БазаРаспределения, "СпособРаспределенияЗатрат")) Тогда		
		
		СпособРаспределенияЗатрат = ПолучитьЗначениеРеквизита(Объект.БазаРаспределения, "СпособРаспределенияЗатрат"); 
		
		ПропорциональноВыпуску      = (СпособРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыРаспределенияЗатрат.ПропорциональноКоличествуВыпускаГотовойПродукции")
							       ИЛИ СпособРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыРаспределенияЗатрат.ПропорциональноСуммеВыпускаГотовойПродукции"));
							  
		ПропорциональноПлощадиПолей = (СпособРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыРаспределенияЗатрат.ПропорциональноПлощадиПолей"));
		
		ПропорциональноЗатрате      = (СпособРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыРаспределенияЗатрат.ПропорциональноПрямойЗатрате")
		 						   ИЛИ СпособРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыРаспределенияЗатрат.ПропорциональноЗатратамПоВыпуску"));

        ОпределениеСтоимостиБА      = (СпособРаспределенияЗатрат = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыРаспределенияЗатрат.ОпределениеСтоимостиБиологическихАктивов"));		
		
	Иначе
		
		ПропорциональноВыпуску      = Ложь;
		ПропорциональноПлощадиПолей = Ложь;
		ПропорциональноЗатрате      = Ложь;
		ОпределениеСтоимостиБА      = Ложь;
		
	КонецЕсли;
	
	Элементы.СчетОтборБаза.Видимость                 = ПропорциональноВыпуску ИЛИ ПропорциональноЗатрате;
	Элементы.ПодразделениеОтборБаза.Видимость        = ПропорциональноВыпуску ИЛИ ПропорциональноПлощадиПолей ИЛИ ПропорциональноЗатрате;
	Элементы.НоменклатурнаяГруппаОтборБаза.Видимость = ПропорциональноВыпуску ИЛИ ПропорциональноПлощадиПолей ИЛИ ПропорциональноЗатрате;
	Элементы.НоменклатураОтборБаза.Видимость         = ПропорциональноВыпуску;
	Элементы.СтатьяДохода.Видимость                  = ОпределениеСтоимостиБА; 	
		
	Если ПропорциональноВыпуску Тогда
		Элементы.СтраницыБазаРаспределения.ТекущаяСтраница = Элементы.ГруппаБазаПоВыпуску;
	ИначеЕсли ПропорциональноПлощадиПолей Тогда
		Элементы.СтраницыБазаРаспределения.ТекущаяСтраница = Элементы.ГруппаБазаПоПлощади;
	ИначеЕсли ПропорциональноЗатрате Тогда
		Элементы.СтраницыБазаРаспределения.ТекущаяСтраница = Элементы.ГруппаБазаПоЗатрате;
	КонецЕсли; 
	
	Элементы.РаспределениеПродукция.Видимость 		 = ПропорциональноВыпуску;
	Элементы.РаспределениеСклад.Видимость 			 = ПропорциональноВыпуску;
	Элементы.РаспределениеДокументВыпуска.Видимость  = ПропорциональноВыпуску;
				          	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОсновноеПодразделениеОрганизации()
	
	ПодразделениеПоУмолчанию = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновноеПодразделениеОрганизации");
	Если БухгалтерскийУчетПереопределяемый.ПодразделениеПринадлежитОрганизации(ПодразделениеПоУмолчанию, Объект.Организация) Тогда
		Объект.ПодразделениеОтборЗатрат = ПодразделениеПоУмолчанию;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиИДоступностьСубконтоТаблицыРаспределение(Форма, Счет);
		
	ПоляФормы = Новый Структура("Субконто1, Субконто2, Субконто3",
								"РаспределениеСубконто1",
								"РаспределениеСубконто2",
								"РаспределениеСубконто3"); 
	
	БухгалтерскийУчетКлиентСервер.ПриВыбореСчета(Счет, Форма, ПоляФормы, Неопределено, Истина);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконтоТаблицыРаспределение(Форма)
	
	Если Форма.Элементы.Распределение.ТекущаяСтрока <> Неопределено Тогда 
		СтрокаТаблицы = Форма.Объект.Распределение.НайтиПоИдентификатору(Форма.Элементы.Распределение.ТекущаяСтрока);
		ПараметрыДокумента = ПолучитьСписокПараметров(Форма, СтрокаТаблицы, "Субконто%Индекс%");
		БухгалтерскийУчетКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(Форма, СтрокаТаблицы, "Субконто%Индекс%", "РаспределениеСубконто%Индекс%", ПараметрыДокумента);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблицыРаспределение()
	
	Для Каждого СтрокаТаблицы Из Объект.Распределение Цикл
		ЗаполнитьДобавленныеКолонкиСтрокиТаблицыРаспределение(СтрокаТаблицы);
	КонецЦикла;
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьДобавленныеКолонкиСтрокиТаблицыРаспределение(СтрокаТаблицы)
	
	ПоляОбъектаСубконто	= Новый Структура("Субконто1, Субконто2, Субконто3", "Субконто1", "Субконто2", "Субконто3");

	БухгалтерскийУчетКлиентСервер.УстановитьДоступностьСубконто(СтрокаТаблицы.Счет, СтрокаТаблицы, ПоляОбъектаСубконто);
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСписокПараметров(Форма, Объект, ШаблонИмяПоляОбъекта)

	СписокПараметров = Новый Структура;
	Для Индекс = 1 По 3 Цикл
		ИмяПоля = СтрЗаменить(ШаблонИмяПоляОбъекта, "%Индекс%", Индекс);
		Если ТипЗнч(Объект[ИмяПоля]) = Тип("СправочникСсылка.Контрагенты") Тогда
			СписокПараметров.Вставить("Контрагент", Объект[ИмяПоля]);
		ИначеЕсли ТипЗнч(Объект[ИмяПоля]) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			СписокПараметров.Вставить("ДоговорКонтрагента", Объект[ИмяПоля]);
		ИначеЕсли ТипЗнч(Объект[ИмяПоля]) = Тип("СправочникСсылка.Номенклатура") Тогда
			СписокПараметров.Вставить("Номенклатура", Объект[ИмяПоля]);
		ИначеЕсли ТипЗнч(Объект[ИмяПоля]) = Тип("СправочникСсылка.Склады") Тогда
			СписокПараметров.Вставить("Склад", Объект[ИмяПоля]);
		КонецЕсли;
	КонецЦикла;
	СписокПараметров.Вставить("Организация", Форма.Объект.Организация);

	Возврат СписокПараметров;

КонецФункции
	
&НаКлиенте
Процедура РаспределениеЗатрат_Настройки(Параметры)
	
	Если Параметры <> Неопределено Тогда
		
		Объект.УправлениеЗатратами          = Параметры.УправлениеЗатратами;
		Объект.УправлениеБазойРаспределения = Параметры.УправлениеБазойРаспределения;
		Объект.УправлениеРаспределением     = Параметры.УправлениеРаспределением;
		
	КонецЕсли;

	Если НЕ Объект.УправлениеЗатратами Тогда
		Объект.Затраты.Очистить();	
	ИначеЕсли НЕ Объект.УправлениеБазойРаспределения Тогда
		Объект.БазаПоВыпуску.Очистить();
		Объект.БазаПоЗатрате.Очистить();
		Объект.БазаПоПлощади.Очистить();	
	ИначеЕсли НЕ Объект.УправлениеРаспределением Тогда
		Объект.Распределение.Очистить();
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ПроверитьДатыДокумента()
	
	Документ = РеквизитФормыВЗначение("Объект", Тип("ДокументОбъект.ИНАГРО_РаспределениеЗатрат"));	
	Документ.ПроверитьДатыДокумента(Ложь);	
	ЗначениеВРеквизитФормы(Документ, "Объект");
	
КонецПроцедуры 

&НаКлиенте
Функция ПроверкаЗаполнения()
	
	Флаг = Истина;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ТекстСообщения = НСтр("ru='Не заполнена Организация';uk='Не заповнена Організація'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.Организация");
		Флаг = Ложь;
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.НачалоПериода) Тогда
		ТекстСообщения = НСтр("ru='Не заполнен Начало периода';uk='Не заповнено Початок періоду'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.НачалоПериода");
		Флаг = Ложь;
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.КонецПериода) Тогда
		ТекстСообщения = НСтр("ru='Не заполнен Конец периода';uk='Не заповнено Кінець періоду'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.КонецПериода");
		Флаг = Ложь;		
	ИначеЕсли Объект.ПрименятьКоэффициент И Объект.СписыватьВсеЗатратыПоПродукции Тогда		
		Если НЕ ЗначениеЗаполнено(Объект.СчетЗатратОтборЗатрат) Тогда
			ТекстСообщения = НСтр("ru='При установленном флаге ""Не применять коэффициент для суммы выпуск"" Счет затрат должен быть заполнен';uk='При встановленому флазі ""Не приміняти коефіцієнт для суми випуску"" Рахунок витрат повинен бути заповненим'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.СчетЗатратОтборЗатрат");
			Флаг = Ложь;	
		ИначеЕсли НЕ ЗначениеЗаполнено(Объект.НоменклатураОтборБаза) Тогда
			ТекстСообщения = НСтр("ru='При установленном флаге ""Не применять коэффициент для суммы выпуска"" Номенклатура должна быть заполнена';uk='При встановленому флазі ""Не приміняти коефіцієнт для суми випуску"" Номенклатура повинна бути заповнена'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.НоменклатураОтборБаза");
			Флаг = Ложь;
		КонецЕсли;		
	КонецЕсли;
	
	Возврат Флаг;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизита(Ссылка, Реквизит)
	
	Возврат	ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, Реквизит);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти