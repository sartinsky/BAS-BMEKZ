#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	// Структура, содержащая имена регистров сведений по которым надо проводить документ.
	Перем СтруктураПроведенияПоРегистрамСведений;

	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда
			
			// получим реквизиты табличной части
			РезультатЗапросаПоШтатныеЕдиницы = СформироватьЗапросПоШтатныеЕдиницы(Режим);
			ВыборкаПоШтатныеЕдиницы = РезультатЗапросаПоШтатныеЕдиницы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоШтатныеЕдиницы.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиШтатныеЕдиницы(ВыборкаПоШапкеДокумента, ВыборкаПоШтатныеЕдиницы, Отказ);

				Если НЕ Отказ Тогда

					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоШтатныеЕдиницы, СтруктураПроведенияПоРегистрамСведений);
					
				КонецЕсли;

			КонецЦикла;
			
		КонецЕсли; 

	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументОснование = Неопределено;

КонецПроцедуры

#КонецОбласти

#Область Проведение

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст = "
	|ВЫБРАТЬ 
	|	Дата, 
	|	Организация,
	| 	Ссылка 
	|ИЗ 
	|	Документ." + Метаданные().Имя + "
	|ГДЕ 
	|	Ссылка = &ДокументСсылка
	|";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "ШтатныеЕдиницы" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса. В запросе данные документа дополняются значениями
//  проверяемых параметров из связанного с.
//
Функция СформироватьЗапросПоШтатныеЕдиницы(Режим)

	Запрос = Новый Запрос;
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);

	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Док.ДатаИзменения,
	               |	Док.ПодразделениеОрганизации,
	               |	Док.Должность,
	               |	ВЫБОР
	               |		КОГДА ПараметрыРасчетаИндексации.Период ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ОшибкаДублирование,
	               |	Док.НомерСтроки КАК НомерСтроки
	               |ИЗ
	               |	Документ.ИНАГРО_ИзменениеПараметровРасчетаИндексацииПоДолжностям.ШтатныеЕдиницы КАК Док
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_КоэффициентПовышенияОкладов КАК ПараметрыРасчетаИндексации
	               |		ПО Док.ПодразделениеОрганизации = ПараметрыРасчетаИндексации.ПодразделениеОрганизации
	               |			И Док.Должность = ПараметрыРасчетаИндексации.Должность
	               |			И (ПараметрыРасчетаИндексации.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
	               |			И Док.ДатаИзменения = ПараметрыРасчетаИндексации.Период
	               |			И (ПараметрыРасчетаИндексации.Регистратор <> &ДокументСсылка)
	               |ГДЕ
	               |	Док.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции

// Проверяет правильность заполнения реквизитов в строке ТЧ "ШтатныеЕдиницы" документа.
// Если какой-то из реквизитов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определенной строке выборка 
//  							  из результата запроса
//  Отказ 						- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеСтрокиШтатныеЕдиницы(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ)

	СтрокаНачалаСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='В строке номер ""%1"" табл. части ""Штатные единицы"": ';uk='У рядку номер ""%1"" табл. частини ""Штатні одиниці"": '"), СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки));
	
	// Ошибка дублирования
	Если ВыборкаПоСтрокамДокумента.ОшибкаДублирование Тогда
		ОбщегоНазначенияБПКлиентСервер.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + НСтр("ru='уже зарегистрировано изменение параметров индексации другим документом!';uk='вже зареєстрована зміна параметрів індексації іншим документом!'"), Отказ);
	КонецЕсли;
		
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботникаОрганизации()

// По строке выборки результата запроса по документу формируем движения по регистрам.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                - выборка из результата запроса по шапке документа,
//  СтруктураПроведенияПоРегистрамСведений - структура, содержащая имена регистров 
//                                           сведений по которым надо проводить документ,
//  СтруктураПараметров                    - структура параметров проведения.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаСтрокамДокументам, СтруктураПроведенияПоРегистрамСведений, СтруктураПараметров = "")
		  
	Движения.ИНАГРО_КоэффициентПовышенияОкладов.Записывать = Истина;
	Движение = Движения.ИНАГРО_КоэффициентПовышенияОкладов.Добавить();
			
	Движение.Организация  					= ВыборкаПоШапкеДокумента.Организация;
	Движение.Период       					= ВыборкаСтрокамДокументам.ДатаИзменения;
	Движение.ПодразделениеОрганизации		= ВыборкаСтрокамДокументам.ПодразделениеОрганизации;
	Движение.Должность						= ВыборкаСтрокамДокументам.Должность;;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамСведений

#КонецОбласти

#Область СлужебныеПроцедурыИФункции	

Процедура ЗаполнитьПоДокументуОснованию(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ИНАГРО_КадровоеПеремещениеОрганизаций") Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	РаботникиОрганизаций.Период КАК ДатаИзменения,
			|	РаботникиОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
			|	РаботникиОрганизаций.Должность КАК Должность
			|ИЗ
			|	РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК РаботникиОрганизаций
			|ГДЕ
			|	РаботникиОрганизаций.Регистратор = &парамРегистратор
			|	И РаботникиОрганизаций.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)";
		
		Запрос.УстановитьПараметр("парамРегистратор", Основание);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДокументОснование = Основание;
		Организация       = Основание.Организация; 
		
		Пока Выборка.Следующий() Цикл
			СтрокаШтатныеЕдиницы = ШтатныеЕдиницы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаШтатныеЕдиницы, Выборка);
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ИНАГРО_ИзменениеШтатногоРасписанияОрганизаций") Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ШтатноеРасписаниеОрганизаций.Период КАК ДатаИзменения,
			|	ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
			|	ШтатноеРасписаниеОрганизаций.Должность КАК Должность
			|ИЗ
			|	РегистрСведений.ИНАГРО_ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеОрганизаций
			|ГДЕ
			|	ШтатноеРасписаниеОрганизаций.Регистратор = &парамРегистратор
			|	И ШтатноеРасписаниеОрганизаций.КоличествоСтавок > 0";
		
		Запрос.УстановитьПараметр("парамРегистратор", Основание);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДокументОснование = Основание;		
		Организация       = Основание.Организация; 
		
		Пока Выборка.Следующий() Цикл
			СтрокаШтатныеЕдиницы = ШтатныеЕдиницы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаШтатныеЕдиницы, Выборка);
		КонецЦикла;	
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ИНАГРО_ВводСведенийОПлановыхНачисленияхУдержаниях") Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	Начисления.Период КАК ДатаИзменения,
			|	Начисления.Сотрудник КАК Сотрудник
			|ПОМЕСТИТЬ ВТНачисления
			|ИЗ
			|	РегистрСведений.ИНАГРО_ПлановыеНачисленияРаботниковОрганизаций КАК Начисления
			|ГДЕ
			|	Начисления.Регистратор = &парамРегистратор
			|	И Начисления.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
			|	И Начисления.ВидНачисления = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыНачисленийРаботникаОрганизации.Основное)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Начисления.Сотрудник,
			|	Начисления.ДатаИзменения,
			|	МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период
			|ПОМЕСТИТЬ ВТПериодыРаботникиОрганизаций
			|ИЗ
			|	ВТНачисления КАК Начисления
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК РаботникиОрганизаций
			|		ПО Начисления.Сотрудник = РаботникиОрганизаций.Сотрудник
			|			И Начисления.ДатаИзменения >= РаботникиОрганизаций.Период
			|
			|СГРУППИРОВАТЬ ПО
			|	Начисления.Сотрудник,
			|	Начисления.ДатаИзменения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Начисления.ДатаИзменения,
			|	РаботникиОрганизаций.Должность,
			|	РаботникиОрганизаций.ПодразделениеОрганизации
			|ИЗ
			|	ВТНачисления КАК Начисления
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыРаботникиОрганизаций КАК ПериодыРаботникиОрганизаций
			|		ПО Начисления.Сотрудник = ПериодыРаботникиОрганизаций.Сотрудник
			|			И Начисления.ДатаИзменения = ПериодыРаботникиОрганизаций.ДатаИзменения
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК РаботникиОрганизаций
			|		ПО Начисления.Сотрудник = РаботникиОрганизаций.Сотрудник
			|			И (ПериодыРаботникиОрганизаций.Период = РаботникиОрганизаций.Период)";
		
		Запрос.УстановитьПараметр("парамРегистратор", Основание);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДокументОснование = Основание;
		Организация       = Основание.Организация; 
		
		Пока Выборка.Следующий() Цикл
			СтрокаШтатныеЕдиницы = ШтатныеЕдиницы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаШтатныеЕдиницы, Выборка);
		КонецЦикла;		
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли 
