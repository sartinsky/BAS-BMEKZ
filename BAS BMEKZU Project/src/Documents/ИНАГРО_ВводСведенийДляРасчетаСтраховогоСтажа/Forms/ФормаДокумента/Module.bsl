#Область ОбработчикиСобытийФормы 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 
		
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	// Уведомим о появлении функционала рабочей даты
	НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях("РабочаяДатаИзДокумента");
	
	// Показываем, если это новый документ и сама рабочая дата еще не установлена.
	НастройкиПредупреждений.РабочаяДатаИзДокумента = НастройкиПредупреждений.РабочаяДатаИзДокумента
		И Параметры.Ключ.Пустая()
		И НЕ ЗначениеЗаполнено(БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("РабочаяДата"));
		
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтотОбъект, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗапомнитьТекущиеЗначенияРеквизитов(); 	
	
	ЗаполнитьДобавленныеКолонкиТаблицыСтраховойСтаж();
	
	УстановитьСостояниеДокумента();

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ОбщегоНазначенияБПКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, 
		ТекущаяДатаДокумента);		
		
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПриИзмененииПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	ПриИзмененииПериода();
	
	Объект.ПериодС = ПредлагаемыйПериод(Объект.Сотрудник);

КонецПроцедуры

&НаКлиенте
Процедура ПериодСПриИзменении(Элемент)

	ПриИзмененииПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПоПриИзменении(Элемент)
	
	ПриИзмененииПериода();
		
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыФормыСтраховойСтаж

&НаКлиенте
Процедура СтраховойСтажПриАктивизацииЯчейки(Элемент)
	
	Элементы.СтраховойСтаж.ВыделенныеСтроки.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажМесяц1ПриИзменении(Элемент)
	
	РасчетСтроки(1, Элементы.СтраховойСтаж.ТекущиеДанные.Месяц1);
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажМесяц2ПриИзменении(Элемент)
	
	РасчетСтроки(2, Элементы.СтраховойСтаж.ТекущиеДанные.Месяц2);
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажМесяц3ПриИзменении(Элемент)
	
	РасчетСтроки(3, Элементы.СтраховойСтаж.ТекущиеДанные.Месяц3);
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажМесяц4ПриИзменении(Элемент)
		
	РасчетСтроки(4, Элементы.СтраховойСтаж.ТекущиеДанные.Месяц4);
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажМесяц5ПриИзменении(Элемент)
		
	РасчетСтроки(5, Элементы.СтраховойСтаж.ТекущиеДанные.Месяц5);
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажМесяц6ПриИзменении(Элемент)
		
	РасчетСтроки(6, Элементы.СтраховойСтаж.ТекущиеДанные.Месяц6);
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажМесяц7ПриИзменении(Элемент)
		
	РасчетСтроки(7, Элементы.СтраховойСтаж.ТекущиеДанные.Месяц7);
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажМесяц8ПриИзменении(Элемент)
		
	РасчетСтроки(8, Элементы.СтраховойСтаж.ТекущиеДанные.Месяц8);
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажМесяц9ПриИзменении(Элемент)
		
	РасчетСтроки(9, Элементы.СтраховойСтаж.ТекущиеДанные.Месяц9);
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажМесяц10ПриИзменении(Элемент)
		
	РасчетСтроки(10, Элементы.СтраховойСтаж.ТекущиеДанные.Месяц10);
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажМесяц11ПриИзменении(Элемент)
		
	РасчетСтроки(11, Элементы.СтраховойСтаж.ТекущиеДанные.Месяц11);
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажМесяц12ПриИзменении(Элемент)
		
	РасчетСтроки(12, Элементы.СтраховойСтаж.ТекущиеДанные.Месяц12);
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажВсегоМесяцевПриИзменении(Элемент)
	
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойСтажВсегоДнейПриИзменении(Элемент)
	
	ОбновитьИтоги(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьПериод(Команда)

	ПараметрыФормыВыбора = Новый Структура("НачалоПериода, КонецПериода", Объект.ПериодС, Объект.ПериодПо);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыФормыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ПериодС	= РезультатВыбора.НачалоПериода;
	Объект.ПериодПо = РезультатВыбора.КонецПериода;
	
	ПриИзмененииПериода();	
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ТекущаяДатаДокумента = Объект.Дата; 
	
	ЗапомнитьТекущиеЗначенияРеквизитов();
	
	ЗаполнитьДобавленныеКолонкиТаблицыСтраховойСтаж();
	
	ОбновитьИтоги(ЭтаФорма);
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ЗапомнитьТекущиеЗначенияРеквизитов()

	ТекущийПериод.ДатаНачала    = Объект.ПериодС;
	ТекущийПериод.ДатаОкончания = Объект.ПериодПо;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблицыСтраховойСтаж()
	
	ДанныеОбъекта = Новый Структура;
	ДанныеОбъекта.Вставить("ПериодС",  Объект.ПериодС);
	ДанныеОбъекта.Вставить("ПериодПо", Объект.ПериодПо);
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.СтраховойСтаж Цикл 		
		ЗаполнитьДобавленныеКолонкиТаблицыСтраховойСтажВСтроке(СтрокаТабличнойЧасти, ДанныеОбъекта);		
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьДобавленныеКолонкиТаблицыСтраховойСтажВСтроке(СтрокаТабличнойЧасти, Знач Объект)
	
	Если СтрокаТабличнойЧасти.Год = Год(Объект.ПериодС)  Тогда	
		Для НомерКолонки = 2 По 13 Цикл
			Если НомерКолонки - 1 < Месяц(Объект.ПериодС) Тогда 
				СтрокаТабличнойЧасти["ДоступностьМесяц" + (НомерКолонки - 1)] = Ложь;
			Иначе
				СтрокаТабличнойЧасти["ДоступностьМесяц" + (НомерКолонки - 1)] = Истина;
			КонецЕсли;	
		КонецЦикла;	
	ИначеЕсли СтрокаТабличнойЧасти.Год = Год(Объект.ПериодПо)  Тогда	
		Для НомерКолонки = 2 По 13 Цикл
			Если НомерКолонки - 1 > Месяц(Объект.ПериодПо) Тогда 
				СтрокаТабличнойЧасти["ДоступностьМесяц" + (НомерКолонки - 1)] = Ложь;
			Иначе
				СтрокаТабличнойЧасти["ДоступностьМесяц" + (НомерКолонки - 1)] = Истина;
			КонецЕсли;	
		КонецЦикла;
	Иначе	
		Для НомерКолонки = 2 По 13 Цикл
			СтрокаТабличнойЧасти["ДоступностьМесяц" + (НомерКолонки - 1)] = Истина;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоги(Форма)

	Элементы = Форма.Элементы;
	Объект   = Форма.Объект; 
		
	НеполныхМесяцев = Цел(Объект.СтраховойСтаж.Итог("ВсегоДней") / 30);
	ВсегоЛет = Цел((Объект.СтраховойСтаж.Итог("ВсегоМесяцев") + НеполныхМесяцев) / 12);
	ВсегоМесяцев = Объект.СтраховойСтаж.Итог("ВсегоМесяцев") + НеполныхМесяцев - ВсегоЛет * 12;
	ВсегоДней = Объект.СтраховойСтаж.Итог("ВсегоДней") - НеполныхМесяцев * 30; 
	Форма.ИтогиВсего = "Страховой стаж за период с " + Формат(Объект.ПериодС,"ДФ=dd.MM.yyyy") + " по "
													 + Формат(Объект.ПериодПо,"ДФ=dd.MM.yyyy") + ": лет - "
													 + ВсегоЛет + ", месяцев - " + ВсегоМесяцев + ", дней - " + ВсегоДней; 

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПериода()
	Если Не Объект.ПериодПо = Дата(1,1,1) Тогда
		Объект.ПериодПо = КонецМесяца(Объект.ПериодПо);
	КонецЕсли;
	
	Если ТекущийПериод.ДатаНачала <> Объект.ПериодС ИЛИ ТекущийПериод.ДатаОкончания <> Объект.ПериодПо Тогда
		
		Если Объект.СтраховойСтаж.Количество() > 0 Тогда
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПриИзмененииПериодаЗавершение", ЭтотОбъект);
			Текст = НСтр("ru='При изменении периода табличная часть будет очищена. Изменить период?';uk='При зміні періоду таблична частина буде очищена. Змінити період?'");
			Режим = РежимДиалогаВопрос.ДаНет;
			ПоказатьВопрос(ОписаниеОповещения, Текст, Режим, 0, КодВозвратаДиалога.Да);
			Возврат;
		КонецЕсли;
			
		ЗаполнитьСтраховойСтаж();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВопросПриИзмененииПериодаЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ТекущийПериод.ДатаНачала	 = Объект.ПериодС;
		ТекущийПериод.ДатаОкончания	 = Объект.ПериодПо;
		Объект.СтраховойСтаж.Очистить();
		
		ЗаполнитьСтраховойСтаж();
		
	Иначе
		
		Объект.ПериодС	= ТекущийПериод.ДатаНачала;
		Объект.ПериодПо = ТекущийПериод.ДатаОкончания;
		
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтраховойСтаж()
	
	Если    НЕ ЗначениеЗаполнено(Объект.ПериодС)
		ИЛИ НЕ ЗначениеЗаполнено(Объект.ПериодПо) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ПериодС > Объект.ПериодПо Тогда
		ТекстСообщения = НСтр("ru='Дата начала периода не может быть больше даты конца периода';uk='Дата початку періоду не може бути більше дати кінця періоду'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	Индекс = 0;
	ГодаВТаблице = Новый Массив();
	Пока Индекс < Объект.СтраховойСтаж.Количество() Цикл
		Если    Объект.СтраховойСтаж[Индекс].Год < Год(Объект.ПериодС)
			ИЛИ Объект.СтраховойСтаж[Индекс].Год > Год(Объект.ПериодПо) Тогда
			Объект.СтраховойСтаж.Удалить(Индекс);
			Продолжить;
		КонецЕсли;
		ГодаВТаблице.Добавить(Объект.СтраховойСтаж[Индекс].Год);
		Индекс = Индекс + 1;
	КонецЦикла;	
		
	Для Год = Год(Объект.ПериодС) По Год(Объект.ПериодПо) Цикл
		Если ГодаВТаблице.Найти(Год) = Неопределено Тогда 
			НоваяСтрока = Объект.СтраховойСтаж.Добавить();
			НоваяСтрока.Год = Год;
		КонецЕсли;	
	КонецЦикла;	
	
	Объект.СтраховойСтаж.Сортировать("Год");
	
	ЗаполнитьДобавленныеКолонкиТаблицыСтраховойСтаж();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПредлагаемыйПериод(Сотрудник)
	
	Запрос = Новый Запрос();
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(СтраховойСтажПоДаннымПФУ.Месяц) КАК Месяц
		|ИЗ
		|	РегистрСведений.ИНАГРО_СтраховойСтажПоДаннымПФУ КАК СтраховойСтажПоДаннымПФУ
		|ГДЕ
		|	СтраховойСтажПоДаннымПФУ.ФизЛицо = &ФизЛицо";
	
	Запрос.УстановитьПараметр("ФизЛицо", Сотрудник.ФизическоеЛицо);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() и ЗначениеЗаполнено(Выборка.Месяц) Тогда
		Возврат ДобавитьМесяц(Выборка.Месяц, 1);
	Иначе
		Возврат Дата(1, 1, 1);
	КонецЕсли;	
	
КонецФункции	

&НаКлиенте
Процедура РасчетСтроки(ИндексКолонки, Элемент)
	
	ТекущиеДанные = Элементы.СтраховойСтаж.ТекущиеДанные;
	
	ДнейВМесяце = День(КонецМесяца(Дата(ТекущиеДанные.Год, ИндексКолонки, 1)));
	
	Если Элемент > ДнейВМесяце Тогда
		Элемент = ДнейВМесяце;
		ТекущиеДанные["ПолныйМесяц" + ИндексКолонки] = 1;
	ИначеЕсли Элемент < ДнейВМесяце Тогда
		ТекущиеДанные["ПолныйМесяц" + ИндексКолонки] = 0;
	Иначе
		ТекущиеДанные["ПолныйМесяц" + ИндексКолонки] = 1;
	КонецЕсли;
	
	ВсегоДней                 = 0;
	ВсегоМесяцев              = 0;
	ВсегоДнейВНеполныхМесяцах = 0;
	НеполныхМесяцев           = 0;
	
	Для НомерКолонки = 1 По 12 Цикл
		Если  ТекущиеДанные["Месяц" + НомерКолонки] > 0
			И ТекущиеДанные["ПолныйМесяц" + НомерКолонки] = 0 Тогда
			ВсегоДнейВНеполныхМесяцах = ВсегоДнейВНеполныхМесяцах + ТекущиеДанные["Месяц" + НомерКолонки];
		ИначеЕсли ТекущиеДанные["Месяц" + НомерКолонки] > 0
			    И ТекущиеДанные["ПолныйМесяц" + НомерКолонки] = 1 Тогда
			ВсегоМесяцев = ВсегоМесяцев + 1;
		КонецЕсли;	
	КонецЦикла;	
	
	Если ВсегоДнейВНеполныхМесяцах > 0 Тогда
		НеполныхМесяцев = Цел(ВсегоДнейВНеполныхМесяцах/30);	
	    ВсегоДнейНеполногоМесяца = ВсегоДнейВНеполныхМесяцах - НеполныхМесяцев*30;
	КонецЕсли;
	
	ТекущиеДанные.ВсегоМесяцев = ВсегоМесяцев + НеполныхМесяцев;
	ТекущиеДанные.ВсегоДней    = ВсегоДнейНеполногоМесяца; 
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункцииБСП
 
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти 