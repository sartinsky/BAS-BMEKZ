
Перем мВалютаРегламентированногоУчета Экспорт;// Хранит валюту регламентированого учета

Перем мИспользоватьХарактеристики Экспорт; //Флаг использлвания характеристик

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ 

#Если Клиент Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//	
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	
КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа.
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати.
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("РеестрВладельцевСАвтомобилями, РеестрВладельцев", "Реестр владельцев с транспортом" , "Реестр владельцев");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);

	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	// Заполним по шапке документа дерево параметров, нужных при проведении.
	ДеревоПолейЗапросаПоШапке = ОбщегоНазначенияРед12.СформироватьДеревоПолейЗапросаПоШапке();
	
	// Сформируем запрос на дополнительные параметры, нужные при проведении, по данным шапки документа.
	СтруктураШапкиДокумента = УправлениеЗапасами.СформироватьЗапросПоДеревуПолей(ЭтотОбъект, ДеревоПолейЗапросаПоШапке, СтруктураШапкиДокумента, "");

	//ПроверитьЗаполнениеТабличнойЧастиДоговора(отказ);
	Если Не Отказ Тогда
		
		Движение                    = Движения.ИНАГРО_ДоговораКонтрагентов.Добавить();
		Движение.Период             = Дата;
		Движение.Организация        = ?(ЗначениеЗаполнено(Организация), Организация                , Справочники.Организации.ПустаяСсылка());
		Движение.Урожай		        = ?(ЗначениеЗаполнено(Урожай)                	  , Урожай                	   , Справочники.ИНАГРО_ВидыУрожая.ПустаяСсылка());
		Движение.Контрагент         = Контрагент;
		
		Движение.ДоговорКонтрагента = ДоговорКонтрагента;
		Движение.ДатаОкончания		= ?(ЗначениеЗаполнено(ДатаОкончания), ДатаОкончания, "");
		Движение.ВидКультуры		= ?(ЗначениеЗаполнено(ВидКультуры), ВидКультуры, Справочники.ИНАГРО_ВидыКультур.ПустаяСсылка());
		Движение.Статус=Статус;
		
	КонецЕсли;
КонецПроцедуры	// ОбработкаПроведения

// Начальное заполнение документа
// выполняется при открытии формы.
//
Процедура НачальноеЗаполнение(ПараметрОбъектКопирования = Неопределено, ПараметрОснование = Неопределено) Экспорт
	// Заполним реквизиты заданные в настройках пользователя и Настройках пользователя(элеватор).
	ИНАГРО_Элеватор.ЗаполнитьШапкуДокумента(ЭтотОбъект,Пользователи.ТекущийПользователь(),ПараметрОбъектКопирования,ПараметрОснование);	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект,Пользователи.ТекущийПользователь(),,,ПараметрОбъектКопирования,ПараметрОснование);
	
	// быть может, это ввод на основании
	Если ОбщегоНазначения.ЗначениеНеЗаполнено(ПараметрОснование) Тогда
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, Пользователи.ТекущийПользователь());
		//ИНАГРО_ОбщегоНазначения.УстановитьНомерДокумента(ЭтотОбъект);
	КонецЕсли;
	
	НеПроводитьНулевыеЗначения = Истина;	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;		
	КонецЕсли;
	
КонецПроцедуры



