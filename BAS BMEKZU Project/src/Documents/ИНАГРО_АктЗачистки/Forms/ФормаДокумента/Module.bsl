#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 
			
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();		
	КонецЕсли;
	
	// Уведомим о появлении функционала рабочей даты
	ЭтаФорма.НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях("РабочаяДатаИзДокумента");
	 
	// Показываем, если это новый документ и сама рабочая дата еще не установлена.
	ЭтаФорма.НастройкиПредупреждений.РабочаяДатаИзДокумента = ЭтаФорма.НастройкиПредупреждений.РабочаяДатаИзДокумента
	 	И ЭтаФорма.Параметры.Ключ.Пустая()
	  	И НЕ ЗначениеЗаполнено(БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("РабочаяДата"));	  
		
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
			
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;
	
	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ИНАГРО_ЭлеваторКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, ТекущаяДатаДокумента);

	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		ДатаПриИзмененииНаСервере();
	КонецЕсли;
		
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;

КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)

	НастройкаПериодов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтражатьВБухгалтерскомУчетеПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()

	УстановитьФункциональныеОпцииФормы();	

	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		СкладПриИзмененииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СкладПриИзмененииНаСервере()

	УстановитьФункциональныеОпцииФормы();
	
	УправлениеФормой(ЭтаФорма);
	
	ПолучитьОстатки();

КонецПроцедуры

&НаКлиенте
Процедура ВидХраненияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ВидХранения) Тогда		
		ПолучитьОстатки();
	КонецЕсли; 	
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда				
		ПолучитьОстатки();
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура УрожайПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Урожай) Тогда	
		ПолучитьОстатки();
	КонецЕсли;	

КонецПроцедуры

#Область ОбработчикиСобытийПанелиОсновные

&НаКлиенте
Процедура УбыльВлажностиПриИзменении(Элемент)
	
	УбыльВлажностиПриИзмененииСервере();

КонецПроцедуры 

&НаСервере
Процедура УбыльВлажностиПриИзмененииСервере()
	
	Объект.УбыльПоВлажности = Объект.ФизическийВес3 * Объект.УбыльВлажности / 100;
	
	УбыльВсего();

КонецПроцедуры

&НаКлиенте
Процедура УбыльСорнойПримесиПриИзменении(Элемент)
	
	УбыльСорнойПримесиПриИзмененииНаСервере();

КонецПроцедуры

&НаСервере
Процедура УбыльСорнойПримесиПриИзмененииНаСервере()
	
	Объект.УбыльПоСорнойПримеси = Объект.ФизическийВес3 * Объект.УбыльСорнойПримеси / 100;
	
	УбыльВсего();

КонецПроцедуры

&НаКлиенте
Процедура УбыльЕстественнаяПриИзменении(Элемент)
	
	УбыльЕстественнаяПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УбыльЕстественнаяПриИзмененииНаСервере()
	
	Объект.УбыльПоЕстественной = ?(Объект.НеРассчитыватьУбыльПриХранении, 0, Объект.ФизическийВес8 * Объект.УбыльЕстественная / 100);
	
	УбыльВсего();
	
КонецПроцедуры

&НаКлиенте
Процедура УбыльПоВлажностиПриИзменении(Элемент)
	
	УбыльВсего();

КонецПроцедуры

&НаКлиенте
Процедура УбыльПоСорнойПримесиПриИзменении(Элемент)
	
	УбыльВсего();

КонецПроцедуры

&НаКлиенте
Процедура УбыльПоПрочейПриИзменении(Элемент)
	
	УбыльВсего();

КонецПроцедуры

&НаКлиенте
Процедура УбыльПоЕстественнойПриИзменении(Элемент)

	Объект.УбыльЕстественная = ?(Объект.ФизическийВес8 = 0, 0, Объект.УбыльПоЕстественной * 100 / Объект.ФизическийВес8);
	
	УбыльВсего();

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОписаниеДвиженияФормы36НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.ОписаниеДвиженияФормы36",
		НСтр("ru='Описание движения формы 36';uk='Опис руху форми 36'"));

КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

#Область ВыборПериода

&НаКлиенте
Процедура ПодобратьПериодРасчетаДокумента(Команда)
	
	ПодобратьПериодРасчетаДокументаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПодобратьПериодРасчетаДокументаНаСервере()
	
	Запрос = Новый Запрос;
	
	Если ЗначениеЗаполнено(Объект.Урожай.ДатаНачала) Тогда
		ДатаНачалаЗаготовки = Объект.Урожай.ДатаНачала;
	Иначе
		ДатаНачалаЗаготовки = '00010101';
	КонецЕсли;	
		
	Фильтр = "";
	Фильтр = Фильтр + ?(ЗначениеЗаполнено(Объект.Организация),        " Организация = &Организация ","");
	Фильтр = Фильтр + ?(ЗначениеЗаполнено(Объект.Склад),              " И Склад = &Склад ","");
	Фильтр = Фильтр + ?(ЗначениеЗаполнено(Объект.Урожай),             " И Урожай = &Урожай ","");
	Если НЕ НеВестиУчетПоВидуХраненияВККУ Тогда
		Фильтр = Фильтр + ?(ЗначениеЗаполнено(Объект.ВидХранения), " И ВидХранения = &ВидХранения ","");
	КонецЕсли;
	Фильтр = Фильтр + ?(ЗначениеЗаполнено(Объект.Номенклатура),       " И Номенклатура = &Номенклатура ","");
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ИНАГРО_Форма36Обороты.Регистратор,
		|	ИНАГРО_Форма36Обороты.Регистратор.Дата КАК РегистраторДата,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма36Обороты.ВесПриходОборот, 0)) КАК ВесПриходОборот,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма36Обороты.ВесРасходОборот, 0)) КАК ВесРасходОборот,
		|	ИНАГРО_Форма36Обороты.Организация,
		|	ИНАГРО_Форма36Обороты.Номенклатура,
		|	ИНАГРО_Форма36Обороты.Склад,
		|	ИНАГРО_Форма36Обороты.Урожай,
		|	ИНАГРО_Форма36Обороты.ВидХранения
		|ИЗ
		|	РегистрНакопления.ИНАГРО_Форма36Сводная.Обороты(&ДатаНачалаЗаготовки, &ДатаДок, Регистратор, " + Фильтр + ") КАК ИНАГРО_Форма36Обороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ИНАГРО_Форма36Обороты.Регистратор,
		|	ИНАГРО_Форма36Обороты.Регистратор.Дата,
		|	ИНАГРО_Форма36Обороты.Организация,
		|	ИНАГРО_Форма36Обороты.Номенклатура,
		|	ИНАГРО_Форма36Обороты.Склад,
		|	ИНАГРО_Форма36Обороты.Урожай,
		|	ИНАГРО_Форма36Обороты.ВидХранения
		|
		|УПОРЯДОЧИТЬ ПО
		|	РегистраторДата";
	
	Запрос.УстановитьПараметр("ДатаНачалаЗаготовки", Новый Граница(НачалоДня(ДатаНачалаЗаготовки), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаДок",             Новый Граница(КонецДня(Объект.Дата), ВидГраницы.Включая));	
	Запрос.УстановитьПараметр("Организация",         Объект.Организация);
	Запрос.УстановитьПараметр("Склад",               Объект.Склад);
	Запрос.УстановитьПараметр("Урожай",              Объект.Урожай);
	Если НЕ НеВестиУчетПоВидуХраненияВККУ Тогда
		Запрос.УстановитьПараметр("ВидХранения", Объект.ВидХранения);	
	КонецЕсли;
	Запрос.УстановитьПараметр("Номенклатура",        Объект.Номенклатура);
	
	ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
	
	Объект.ДатаНачала    = '00010101';
	Объект.ДатаОкончания = КонецДня(Объект.Дата) - 1;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДокументов Цикл
		Если Объект.ДатаНачала = '00010101' Тогда
			Объект.ДатаНачала = НачалоДня(СтрокаТаблицы.РегистраторДата);
		ИначеЕсли ТипЗнч(СтрокаТаблицы.Регистратор) = Тип("ДокументСсылка.ИНАГРО_АктЗачистки") Тогда
			Если СтрокаТаблицы.Регистратор <> Объект.Ссылка Тогда
				Объект.ДатаНачала = КонецДня(СтрокаТаблицы.Регистратор.ДатаОкончания) + 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Объект.ДатаНачала = '00010101' Тогда
		Объект.ДатаНачала = ДатаНачалаЗаготовки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)

	ПараметрыФормыВыбора = Новый Структура("НачалоПериода, КонецПериода", Объект.ДатаНачала, Объект.ДатаОкончания);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыФормыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ДатаНачала	 = РезультатВыбора.НачалоПериода;
	Объект.ДатаОкончания = РезультатВыбора.КонецПериода;		
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодПриход(Команда)
	
	ПараметрыФормыВыбора = Новый Структура("НачалоПериода, КонецПериода", Объект.НачалоПриход, Объект.ОкончаниеПриход);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодПриходЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыФормыВыбора, Элементы.ВыбратьПериодПриход, , , , ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодПриходЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.НачалоПриход	   = РезультатВыбора.НачалоПериода;
	Объект.ОкончаниеПриход = РезультатВыбора.КонецПериода;		
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодРасход(Команда)
	
	ПараметрыФормыВыбора = Новый Структура("НачалоПериода, КонецПериода", Объект.НачалоРасход, Объект.ОкончаниеРасход);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодРасходЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыФормыВыбора, Элементы.ВыбратьПериодРасход, , , , ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодРасходЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.НачалоРасход	   = РезультатВыбора.НачалоПериода;
	Объект.ОкончаниеРасход = РезультатВыбора.КонецПериода;		
		
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Рассчитать(Команда)
	 	
	Если Объект.Ссылка.Пустая() Тогда		
		ТекстВопроса = НСтр("ru='Для расчета необходимо записать документ. Записать?';uk='Для розрахунку необхідно записати документ. Записати?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("РассчитатьПодтверждениеЗаписи", ЭтотОбъект, Параметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);		
	Иначе		
		Если Объект.Проведен Тогда			
			ТекстВопроса = НСтр("ru='Для заполнения необходимо отменить проведение документа. Отменить проведение?';uk='Для заповнення необхідно відмінити проведення документу. Відмінити проведення?'");
			Оповещение = Новый ОписаниеОповещения("ОтменитьПроведениеЗавершение", ЭтотОбъект, Параметры);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);	
		Иначе
			РассчитатьПодтверждениеЗаписи(КодВозвратаДиалога.ОК, Неопределено);		
		КонецЕсли;		
		РассчитатьПодтверждениеЗаписи(КодВозвратаДиалога.ОК, Неопределено);		
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьПодтверждениеЗаписи(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		Записать();
		Если Объект.Ссылка.Пустая() ИЛИ Модифицированность Тогда
			Возврат; // запись не удалась, сообщения о причинах выводит платформа
		КонецЕсли;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьНаСервере()
	
	РассчитатьДокумент();	
	
	Если Объект.СписокМестХранения.Количество() > 0 Тогда
		Объект.СписокМестХранения.Очистить();
	КонецЕсли;
	
	Если ВестиУчетПоФорме37Сводная Тогда		
		ЗаполнитьТаблицуМестХранения();
		РассчитатьТаблицуМестХранения();
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);	

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПроведениеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
   	
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда		
		Возврат;
	КонецЕсли;	
	
	ОтменитьПроведениеЗавершениеНаСервере();

КонецПроцедуры

&НаСервере
Процедура ОтменитьПроведениеЗавершениеНаСервере()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект"); 
	
	УстановитьСостояниеДокумента();

	РассчитатьНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура Пункт15(Команда)
	
	Разница = Объект.ФизическийВес9 - Объект.УбыльВсего;
	
	Если Разница < 0 Тогда
		Объект.П15 = НСтр("ru='Остается неиспользованное право ';uk='Залишається невикористане право '",
			Локализация.ПолучитьЯзыкФормированияПечатныхФорм()) + (-1 * Разница) + " кг. ";
	Иначе
		Объект.П15 = НСтр("ru='Остается неоправданная недостача ';uk='Залишається невиправдана недостача '",
			Локализация.ПолучитьЯзыкФормированияПечатныхФорм()) + Разница + " кг. ";
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУмолчанию(Команда)
		
	ДанныеОбъекта = Новый Структура(
		"Номенклатура, Урожай, ФизическийВес9,
		|П16, П17");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	ЗаполнитьПоУмолчаниюНаСервере(ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(Объект, ДанныеОбъекта);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьПоУмолчаниюНаСервере(ДанныеОбъекта)
		
	ДанныеОбъекта.П16 = "Недостача " + СокрЛП(ДанныеОбъекта.Номенклатура.НаименованиеПолное) + " врожаю " + СокрЛП(ДанныеОбъекта.Урожай.Наименование) + " в кількості " + ДанныеОбъекта.ФизическийВес9 + 
		" виникла за рахунок покращення якості по вологості та засміченості" + " під час сушки, очистки та природних втрат";
	
	ДанныеОбъекта.П17 = "Акт зачистки просимо затвердити. Нестачу " + СокрЛП(ДанныеОбъекта.Номенклатура.НаименованиеПолное) + " врожаю " + СокрЛП(ДанныеОбъекта.Урожай.Наименование) + " списати в кількості " + ДанныеОбъекта.ФизическийВес9 +
		" за рахунок покращення якості" + " по вологості та засміченості під час сушки, очистки та природних втрат при збереженні";

КонецПроцедуры 

&НаКлиенте
Процедура ЗаполнитьРасшифровкуПоВладельцам(Команда)
	
	ЗаполнитьРасшифровкуПоВладельцамНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасшифровкуПоВладельцамНаСервере()
	
	Объект.Итоги.Загрузить(ПолучитьТаблицуИтогов());

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьРасшифровкуПоВладельцам(Команда)
	
	Объект.Итоги.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокМестХранения(Команда)
	
	Объект.СписокМестХранения.Очистить();	
	
	ЗаполнитьТаблицуМестХранения();

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСписокМестХранения(Команда)
	
	РассчитатьТаблицуМестХранения();

КонецПроцедуры

#Область ФормированиеОтчетов

&НаКлиенте
Процедура СформироватьФорма36Сводная(Команда)
    
    СтруктураПараметровОтбора = СформироватьСтруктуруПараметровОтбора("Форма36Сводная");
	
	ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора, ИмяКоманды", СтруктураПараметровОтбора, "Форма36Сводная");
	
	ОткрытьФорму("Отчет.ИНАГРО_Форма36.Форма.ФормаОтчета", ПараметрыОткрытия);
    
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФорма36ПоВладельцам(Команда)
   
    СтруктураПараметровОтбора = СформироватьСтруктуруПараметровОтбора("Форма36ПоВладельцу");
	
	ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора, ИмяКоманды", СтруктураПараметровОтбора, "Форма36ПоВладельцу");
	
	ОткрытьФорму("Отчет.ИНАГРО_Форма36.Форма.ФормаОтчета", ПараметрыОткрытия);
    
КонецПроцедуры
 
&НаКлиенте
Процедура СформироватьФорма37Общая(Команда)
	
    СтруктуруОтбораПараметров = СформироватьСтруктуруПараметровОтбора("Форма37Общая");
    СтруктуруОтбораПараметров.Вставить("ВидФормы", "Форма37Общая");
	
    ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора, ИмяКоманды, СформироватьПриОткрытии", СтруктуруОтбораПараметров, "Форма37Общая", Истина);
	
	ОткрытьФорму("Отчет.ИНАГРО_Форма37.Форма.ФормаОтчета", ПараметрыОткрытия);
    
КонецПроцедуры   

&НаКлиенте
Процедура СформироватьФорма37ПоВладельцам(Команда)
    
    СтруктуруОтбораПараметров   = СформироватьСтруктуруПараметровОтбора("РеестрДвиженийЗернаПоВладельцам");
    СтруктуруОтбораПараметров.Вставить("ВидФормы", "РеестрДвиженийЗернаПоВладельцам");
	
	ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора, ИмяКоманды, СформироватьПриОткрытии", СтруктуруОтбораПараметров, "РеестрДвиженийЗернаПоВладельцам", Истина);
	
	ОткрытьФорму("Отчет.ИНАГРО_Форма37.Форма.ФормаОтчета", ПараметрыОткрытия);
    
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФорма37(Команда)
    
    СтруктуруОтбораПараметров   = СформироватьСтруктуруПараметровОтбора("Форма37");
    СтруктуруОтбораПараметров.Вставить("ВидФормы", "Форма37");
	
    ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора, ИмяКоманды, СформироватьПриОткрытии", СтруктуруОтбораПараметров, "Форма37", Истина);
	
	ОткрытьФорму("Отчет.ИНАГРО_Форма37.Форма.ФормаОтчета",ПараметрыОткрытия);
    
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФорма37Усушка(Команда)
    
    СтруктуруОтбораПараметров   = СформироватьСтруктуруПараметровОтбора("Форма37Усушка");
    СтруктуруОтбораПараметров.Вставить("ВидФормы", "Форма37Усушка");
	
	ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора, ИмяКоманды, СформироватьПриОткрытии", СтруктуруОтбораПараметров, "Форма37Усушка", Истина);
	
	ОткрытьФорму("Отчет.ИНАГРО_Форма37.Форма.ФормаОтчета", ПараметрыОткрытия);
    
КонецПроцедуры

&НаКлиенте
Процедура СформироватьУниверсальныйАнализЗерна(Команда)
	
	ПользовательскиеНастройки = ВернутьНастройкиКомпоновщика("ИНАГРО_УниверсальныйАнализЗерна", "АнализЗернаОборотка", "Основной");
	
    ПараметрыОткрытия = Новый Структура("ПользовательскиеНастройки, СформироватьПриОткрытии, КлючВарианта, ИмяКоманды", ПользовательскиеНастройки, Истина, "Основной", "УнивАнализЗерна");
	
	ОткрытьФорму("Отчет.ИНАГРО_УниверсальныйАнализЗерна.Форма.ФормаОтчета", ПараметрыОткрытия);

КонецПроцедуры                                                         

&НаКлиенте
Процедура СформироватьУниверсальныйАнализЗернаСводПоДвижению(Команда)
	
	ПользовательскиеНастройки = ВернутьНастройкиКомпоновщика("ИНАГРО_УниверсальныйАнализЗерна", "АнализЗернаСвод", "Вариант1");
	
	ПараметрыОткрытия = Новый Структура("ПользовательскиеНастройки, СформироватьПриОткрытии, КлючВарианта, ИмяКоманды", ПользовательскиеНастройки, Истина, "Вариант1", "ПоДвижениям");
	
	ОткрытьФорму("Отчет.ИНАГРО_УниверсальныйАнализЗерна.Форма.ФормаОтчета", ПараметрыОткрытия);

КонецПроцедуры  

&НаКлиенте
Процедура СформироватьУниверсальныйАнализЗернаСводПоДвижениюВЗачетномВесе(Команда)
    
    ПользовательскиеНастройки = ВернутьНастройкиКомпоновщика("ИНАГРО_УниверсальныйАнализЗерна", "СводПоДвижениюЗачВесе", "Вариант2");
	
	ПараметрыОткрытия = Новый Структура("ПользовательскиеНастройки, СформироватьПриОткрытии, КлючВарианта, ИмяКоманды", ПользовательскиеНастройки, Истина, "Вариант2", "СводПоДвижениюЗачВесе");
	
	ОткрытьФорму("Отчет.ИНАГРО_УниверсальныйАнализЗерна.Форма.ФормаОтчета", ПараметрыОткрытия);
    
КонецПроцедуры  

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	ТекущаяДатаДокумента = Объект.Дата;			

	УстановитьФункциональныеОпцииФормы();	

	УправлениеФормой(ЭтаФорма);	
	
	УстановитьСостояниеДокумента();
	
	ПолучитьОстатки();
	
	ОбновитьСообщенияНаФорме();
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма);	

	ПараметрыУчетаЭлеватора          = ИНАГРО_Элеватор.ПолучитьПараметрыУчетаЭлеватора(Объект.Дата);	
	ВестиУчетПоФорме37Сводная        = ПараметрыУчетаЭлеватора.ВестиУчетПоФорме37Сводная;
	НеВестиУчетПоВидуХраненияВККУ    = ПараметрыУчетаЭлеватора.НеВестиУчетПоВидуХраненияВККУ;
	СписыватьУсушкуПоСкладскомуУчету = ПараметрыУчетаЭлеватора.СписыватьУсушкуПоСкладскомуУчету;
	
	ВидимостьМестаХранения           = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитСклада(Объект.Склад, "ВестиУчетПоМестамХранения");

КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Элементы.МестоХранения.Видимость 			= Форма.ВидимостьМестаХранения;
	Элементы.ГруппаСписокМестХранения.Видимость = Форма.ВидимостьМестаХранения;
					
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьОстатки()
	
	ДанныеОбъекта = Новый Структура(
		"Организация, Владелец, ДоговорКонтрагента, 
		|Склад, ВидХранения, Номенклатура,
		|Урожай, Дата");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);	
	
	СтруктураПоОстаткам = ИНАГРО_Элеватор.ПроверкаНаличияЗерна(ДанныеОбъекта);	
		
	Синий   = Новый Цвет(47, 95, 237);
	Красный = Новый Цвет(255, 0, 0);	
	
	Элементы.НадписьОстаток.Заголовок  = НСтр("ru = 'Остаток: '; uk = 'Залишок: '") + СтруктураПоОстаткам.ВесОстаток;
	Элементы.НадписьОстаток.ЦветТекста = ?(СтруктураПоОстаткам.ВесОстаток > 0, Синий, Красный);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСообщенияНаФорме()
		
	Синий   = Новый Цвет(47, 95, 237);
	Красный = Новый Цвет(255, 0, 0);
	
	Элементы.НадписьУбыльВсего.Заголовок = НСтр("ru = 'Итого убыль: '; uk = 'Разом убуток: '") + Объект.УбыльВсего;
	
	НеоправданнаяНедостача = Объект.ФизическийВес9 - Объект.УбыльВсего;
	
	Если НеоправданнаяНедостача > 0 Тогда
		Элементы.НадписьНедостача.ЦветТекста = Красный;
		НадписьНеоправданнаяНедостача = НСтр("ru = 'Неоправданная недостача: '; uk = 'Невиправдана нестача: '") + НеоправданнаяНедостача + " кг.";
	ИначеЕсли НеоправданнаяНедостача < 0 Тогда 
		Элементы.НадписьНедостача.ЦветТекста = Синий;
		НадписьНеоправданнаяНедостача = НСтр("ru = 'Неиспользованное право '; uk = 'Невикористане право '")     + НеоправданнаяНедостача + " кг.";		
	Иначе
		Элементы.НадписьНедостача.ЦветТекста = Синий;
		НадписьНеоправданнаяНедостача = "";
	КонецЕсли;
	
	Элементы.НадписьНедостача.Заголовок = НадписьНеоправданнаяНедостача;
	
	Если Объект.УбыльСорнойПримеси > 0.2 Тогда
		Элементы.УбыльСорнойПримеси.ЦветФона = Красный;
		Элементы.НадписьКритичноеСнижениеСорнойПримеси.Заголовок  = НСтр("ru = 'Снижение сорной примеси превышает 0.2'; uk = 'Зниження смітної домішки перевищує 0.2'");;
		Элементы.НадписьКритичноеСнижениеСорнойПримеси.ЦветТекста = Красный;
	Иначе
		Элементы.УбыльСорнойПримеси.ЦветФона = ЦветаСтиля.ЦветФонаПоля;
		Элементы.НадписьКритичноеСнижениеСорнойПримеси.Заголовок  = "";
		Элементы.НадписьКритичноеСнижениеСорнойПримеси.ЦветТекста = ЦветаСтиля.ЦветТекстаПоля;	
	КонецЕсли;	
	
	Элементы.НадписьФизическийВес3.Заголовок = НСтр("ru = 'Всего по приходу: '; uk = 'Всього по приходу: '")  + Объект.ФизическийВес3 + " кг. " + Объект.Влажность3 +  НСтр("ru = '% Вл. '; uk = '% Вол. '") + Объект.СорнаяПримесь3 + НСтр("ru = '% Сорн. прим.'; uk = '% Сміт. дом.'");
	Элементы.НадписьФизическийВес8.Заголовок = НСтр("ru = 'Всего по расходу: '; uk = 'Всього по видаткам: '") + Объект.ФизическийВес8 + " кг. " + Объект.Влажность8 +  НСтр("ru = '% Вл. '; uk = '% Вол. '") + Объект.СорнаяПримесь8 + НСтр("ru = '% Сорн. прим.'; uk = '% Сміт. дом.'");
	
КонецПроцедуры

&НаСервере
Процедура УбыльВсего()
	
	Объект.УбыльВсего = Объект.УбыльПоВлажности + Объект.УбыльПоСорнойПримеси + Объект.УбыльПоПрочей + Объект.УбыльПоЕстественной;
		
	ОбновитьСообщенияНаФорме();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьДокумент()
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;	
	
	Объект.ФизическийВес1   = 0; 
	Объект.Влажность1       = 0; 
	Объект.СорнаяПримесь1   = 0; 
	Объект.ЗерноваяПримесь1 = 0; 
	ВесПоВлажности1         = 0; 
	ВесПоСорнойПримеси1     = 0; 
	ВесПоЗерновойПримеси1   = 0;
	Объект.ФизическийВес2   = 0; 
	Объект.Влажность2       = 0; 
	Объект.СорнаяПримесь2   = 0; 
	Объект.ЗерноваяПримесь2 = 0; 
	ВесПоВлажности2         = 0; 
	ВесПоСорнойПримеси2     = 0; 
	ВесПоЗерновойПримеси2   = 0;
	Объект.ФизическийВес3   = 0; 
	Объект.Влажность3       = 0; 
	Объект.СорнаяПримесь3   = 0; 
	Объект.ЗерноваяПримесь3 = 0; 
	ВесПоВлажности3         = 0; 
	ВесПоСорнойПримеси3     = 0; 
	ВесПоЗерновойПримеси3   = 0;
	Объект.ФизическийВес4   = 0; 
	Объект.Влажность4       = 0; 
	Объект.СорнаяПримесь4   = 0; 
	Объект.ЗерноваяПримесь4 = 0; 
	ВесПоВлажности4         = 0; 
	ВесПоСорнойПримеси4     = 0; 
	ВесПоЗерновойПримеси4   = 0;
	Объект.ФизическийВес5   = 0; 
	Объект.Влажность5       = 0; 
	Объект.СорнаяПримесь5   = 0; 
	Объект.ЗерноваяПримесь5 = 0; 
	ВесПоВлажности5         = 0; 
	ВесПоСорнойПримеси5     = 0; 
	ВесПоЗерновойПримеси5   = 0;
	Объект.ФизическийВес6   = 0; 
	Объект.Влажность6       = 0; 
	Объект.СорнаяПримесь6   = 0; 
	Объект.ЗерноваяПримесь6 = 0; 
	ВесПоВлажности6         = 0; 
	ВесПоСорнойПримеси6     = 0; 
	ВесПоЗерновойПримеси6   = 0;
	Объект.ФизическийВес7   = 0; 
	Объект.Влажность7       = 0; 
	Объект.СорнаяПримесь7   = 0; 
	Объект.ЗерноваяПримесь7 = 0; 
	ВесПоВлажности7         = 0; 
	ВесПоСорнойПримеси7     = 0; 
	ВесПоЗерновойПримеси7   = 0;
	Объект.ФизическийВес8   = 0; 
	Объект.Влажность8       = 0; 
	Объект.СорнаяПримесь8   = 0; 
	Объект.ЗерноваяПримесь8 = 0; 
	ВесПоВлажности8         = 0; 
	ВесПоСорнойПримеси8     = 0; 
	ВесПоЗерновойПримеси8   = 0;
	Объект.ФизическийВес9   = 0; 
	Объект.Влажность9       = 0; 
	Объект.СорнаяПримесь9   = 0; 
	Объект.ЗерноваяПримесь9 = 0; 
	ВесПоВлажности9         = 0; 
	ВесПоСорнойПримеси9     = 0; 
	ВесПоЗерновойПримеси9   = 0;
	Объект.НачалоПриход     = 0; 
	Объект.ОкончаниеПриход  = 0; 
	Объект.НачалоРасход     = 0; 
	Объект.ОкончаниеРасход  = 0;

	// Форма36Сводная
	
	Фильтр = Документы.ИНАГРО_АктЗачистки.СформироватьФильтрДокумента(Объект, "Форма36Сводная");		
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Форма36СводнаяОстаткиИОбороты.Регистратор КАК Регистратор,
		|	Форма36СводнаяОстаткиИОбороты.Склад,
		|	Форма36СводнаяОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	Форма36СводнаяОстаткиИОбороты.Урожай,
		|	Форма36СводнаяОстаткиИОбороты.ВидХранения,
		|	Форма36СводнаяОстаткиИОбороты.ВесПриходПриход КАК ФизическийВесПриход,
		|	ВЫБОР
		|		КОГДА (НЕ Форма36СводнаяОстаткиИОбороты.Регистратор В (&РегистраторыСПеревесом))
		|			И (НЕ Форма36СводнаяОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРаспределения)
		|			ТОГДА Форма36СводнаяОстаткиИОбороты.ВесРасходПриход
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ФизическийВесРасход,
		|	Форма36СводнаяОстаткиИОбороты.ВесПриходНачальныйОстаток КАК ФизическийВесНачОст,
		|	ВЫБОР
		|		КОГДА Форма36СводнаяОстаткиИОбороты.Регистратор.Перевес = ИСТИНА
		|				ИЛИ Форма36СводнаяОстаткиИОбороты.Регистратор.ВидОперации = &ПеревзвешиваниеАвто
		|				ИЛИ Форма36СводнаяОстаткиИОбороты.Регистратор.ВидОперации = &Перевзвешивание
		|			ТОГДА Форма36СводнаяОстаткиИОбороты.ВесРасходПриход
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ФизическийВесКонОст,
		|	Форма36СводнаяОстаткиИОбороты.ВесПоВлажностиПриходНачальныйОстаток КАК ВесПоВлажностиНачОст,
		|	Форма36СводнаяОстаткиИОбороты.ВесПоВлажностиПриходПриход КАК ВесПоВлажностиПриход,
		|	ВЫБОР
		|		КОГДА (НЕ Форма36СводнаяОстаткиИОбороты.Регистратор В (&РегистраторыСПеревесом))
		|			И (НЕ Форма36СводнаяОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРаспределения)
		|			ТОГДА Форма36СводнаяОстаткиИОбороты.ВесПоВлажностиРасходПриход
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоВлажностиРасход,
		|	ВЫБОР
		|		КОГДА Форма36СводнаяОстаткиИОбороты.Регистратор.Перевес = ИСТИНА
		|				ИЛИ Форма36СводнаяОстаткиИОбороты.Регистратор.ВидОперации = &ПеревзвешиваниеАвто
		|				ИЛИ Форма36СводнаяОстаткиИОбороты.Регистратор.ВидОперации = &Перевзвешивание
		|			ТОГДА Форма36СводнаяОстаткиИОбороты.ВесПоВлажностиРасходПриход
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоВлажностиКонОст,
		|	Форма36СводнаяОстаткиИОбороты.ВесПоСорнойПримесиПриходНачальныйОстаток КАК ВесПоСорнойПримесиНачОст,
		|	Форма36СводнаяОстаткиИОбороты.ВесПоСорнойПримесиПриходПриход КАК ВесПоСорнойПримесиПриход,
		|	ВЫБОР
		|		КОГДА (НЕ Форма36СводнаяОстаткиИОбороты.Регистратор В (&РегистраторыСПеревесом))
		|			И (НЕ Форма36СводнаяОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРаспределения)
		|			ТОГДА Форма36СводнаяОстаткиИОбороты.ВесПоСорнойПримесиРасходПриход
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоСорнойПримесиРасход,
		|	ВЫБОР
		|		КОГДА Форма36СводнаяОстаткиИОбороты.Регистратор.Перевес = ИСТИНА
		|				ИЛИ Форма36СводнаяОстаткиИОбороты.Регистратор.ВидОперации = &ПеревзвешиваниеАвто
		|				ИЛИ Форма36СводнаяОстаткиИОбороты.Регистратор.ВидОперации = &Перевзвешивание
		|			ТОГДА Форма36СводнаяОстаткиИОбороты.ВесПоСорнойПримесиРасходПриход
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоСорнойПримесиКонОст,
		|	Форма36СводнаяОстаткиИОбороты.ВесПоЗерновойПримесиПриходНачальныйОстаток КАК ВесПоЗерновойПримесиНачОст,
		|	Форма36СводнаяОстаткиИОбороты.ВесПоЗерновойПримесиПриходПриход КАК ВесПоЗерновойПримесиПриход,
		|	ВЫБОР
		|		КОГДА (НЕ Форма36СводнаяОстаткиИОбороты.Регистратор В (&РегистраторыСПеревесом))
		|			И (НЕ Форма36СводнаяОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРаспределения)
		|			ТОГДА Форма36СводнаяОстаткиИОбороты.ВесПоЗерновойПримесиРасходПриход
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоЗерновойПримесиРасход,
		|	ВЫБОР
		|		КОГДА Форма36СводнаяОстаткиИОбороты.Регистратор.Перевес = ИСТИНА
		|				ИЛИ Форма36СводнаяОстаткиИОбороты.Регистратор.ВидОперации = &ПеревзвешиваниеАвто
		|				ИЛИ Форма36СводнаяОстаткиИОбороты.Регистратор.ВидОперации = &Перевзвешивание
		|			ТОГДА Форма36СводнаяОстаткиИОбороты.ВесПоЗерновойПримесиРасходПриход
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоЗерновойПримесиКонОст,
		|	Форма36СводнаяОстаткиИОбороты.УбыльВесаПриСушкеРасход КАК УбыльВесаПриСушкеРасход
		|ИЗ
		|	РегистрНакопления.ИНАГРО_Форма36Сводная.ОстаткиИОбороты(&Начало, &Конец, Регистратор, , Организация = &Организация " + Фильтр + ") КАК Форма36СводнаяОстаткиИОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Форма36СводнаяОстаткиИОбороты.Регистратор.Дата
		|ИТОГИ
		|	СУММА(ФизическийВесПриход),
		|	СУММА(ФизическийВесРасход),
		|	СУММА(ФизическийВесНачОст),
		|	СУММА(ФизическийВесКонОст),
		|	СУММА(ВесПоВлажностиНачОст),
		|	СУММА(ВесПоВлажностиПриход),
		|	СУММА(ВесПоВлажностиРасход),
		|	СУММА(ВесПоВлажностиКонОст),
		|	СУММА(ВесПоСорнойПримесиНачОст),
		|	СУММА(ВесПоСорнойПримесиПриход),
		|	СУММА(ВесПоСорнойПримесиРасход),
		|	СУММА(ВесПоСорнойПримесиКонОст),
		|	СУММА(ВесПоЗерновойПримесиНачОст),
		|	СУММА(ВесПоЗерновойПримесиПриход),
		|	СУММА(ВесПоЗерновойПримесиРасход),
		|	СУММА(ВесПоЗерновойПримесиКонОст),
		|	СУММА(УбыльВесаПриСушкеРасход)
		|ПО
		|	Номенклатура,
		|	Регистратор";
	
	Запрос.УстановитьПараметр("Начало",                 Новый Граница(Объект.ДатаНачала, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Конец",                  Новый Граница(Объект.ДатаОкончания, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",            Объект.Организация);
	Запрос.УстановитьПараметр("Склад",                  Объект.Склад);
	Запрос.УстановитьПараметр("Номенклатура",           Объект.Номенклатура);
	Запрос.УстановитьПараметр("Урожай",                 Объект.Урожай);
	Если НЕ НеВестиУчетПоВидуХраненияВККУ Тогда
		Запрос.УстановитьПараметр("ВидХранения", Объект.ВидХранения);
	КонецЕсли;
	Запрос.УстановитьПараметр("ПеревзвешиваниеАвто",    Перечисления.ИНАГРО_ВидыОперацийТТНВнутр.Перевзвешивание);
	Запрос.УстановитьПараметр("Перевзвешивание",        Перечисления.ИНАГРО_ВидыОперацийПеремещения.Перевзвешивание);
	Запрос.УстановитьПараметр("РегистраторыФорма34",    ИНАГРО_Элеватор.РегистраторыФорма34(Объект.Ссылка));
	Запрос.УстановитьПараметр("РегистраторыСПеревесом", ИНАГРО_Элеватор.РегистраторыСПеревесом(Объект.Ссылка));
	
	ДеревоЗнач = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);	
	
	Для Каждого СтрНом Из ДеревоЗнач.Строки Цикл
		
		Объект.ФизическийВес1 = СтрНом.ФизическийВесНачОст;
		ВесПоВлажности1       = СтрНом.ВесПоВлажностиНачОст;
		ВесПоСорнойПримеси1   = СтрНом.ВесПоСорнойПримесиНачОст;
		ВесПоЗерновойПримеси1 = СтрНом.ВесПоЗерновойПримесиНачОст;
		
		тмцКонОст             = СтрНом.ФизическийВесНачОст;
		тмцПриход             = 0;
		д1                    = Объект.ДатаНачала;
		в1                    = тмцКонОст;
		ТДни                  = 0;
		СДни                  = 0;
		
		Для Каждого СтрДок Из СтрНом.Строки Цикл
			
			Если СтрДок.Регистратор <> NULL и СтрДок.Регистратор <> Неопределено Тогда
				
				Объект.ФизическийВес2 = Объект.ФизическийВес2 + СтрДок.ФизическийВесПриход;
				ВесПоВлажности2       = ВесПоВлажности2 + СтрДок.ВесПоВлажностиПриход;
				ВесПоСорнойПримеси2   = ВесПоСорнойПримеси2 + СтрДок.ВесПоСорнойПримесиПриход;
				ВесПоЗерновойПримеси2 = ВесПоЗерновойПримеси2 + СтрДок.ВесПоЗерновойПримесиПриход;
				
				Если     ТипЗнч(СтрДок.Регистратор) = Тип("ДокументСсылка.ИНАГРО_Форма34Сводная") 
					ИЛИ (ТипЗнч(СтрДок.Регистратор) = Тип("ДокументСсылка.ИНАГРО_РеестрТТНВывоз")
					   И СтрДок.Регистратор.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийРеестрТТНВывоз.ВывозОтходов) Тогда
					 //
				Иначе				
					Объект.ФизическийВес4 = Объект.ФизическийВес4 + СтрДок.ФизическийВесРасход;
					ВесПоВлажности4       = ВесПоВлажности4 + СтрДок.ВесПоВлажностиРасход;
					ВесПоСорнойПримеси4   = ВесПоСорнойПримеси4 + СтрДок.ВесПоСорнойПримесиРасход;
					ВесПоЗерновойПримеси4 = ВесПоЗерновойПримеси4 + СтрДок.ВесПоЗерновойПримесиРасход;
				КонецЕсли; 
				
				Объект.ФизическийВес7 = Объект.ФизическийВес7 + СтрДок.ФизическийВесКонОст;
				ВесПоВлажности7       = ВесПоВлажности7 + СтрДок.ВесПоВлажностиКонОст;
				ВесПоСорнойПримеси7   = ВесПоСорнойПримеси7 + СтрДок.ВесПоСорнойПримесиКонОст;
				ВесПоЗерновойПримеси7 = ВесПоЗерновойПримеси7 + СтрДок.ВесПоЗерновойПримесиКонОст;
				
				тмцКонОст             = тмцКонОст + СтрДок.ФизическийВесПриход - СтрДок.ФизическийВесРасход;
				д2                    = СтрДок.Регистратор.Дата;
				в2                    = тмцКонОст;                                        
				ТДни                  = ТДни + в1 * (НачалоДня(д2) - НачалоДня(д1)) / 86400;
				СДни                  = ?(тмцПриход = 0, 0, ТДни / тмцПриход);
				д1                    = д2;
				в1                    = в2;
				тмцПриход             = тмцПриход + СтрДок.ФизическийВесПриход;
				
				Если СтрДок.ФизическийВесПриход <> 0 Тогда
					// вне зависимости от вида документа
					Если Объект.НачалоПриход = Дата('00010101') Тогда
						Объект.НачалоПриход = СтрДок.Регистратор.Дата;
					КонецЕсли;
					Объект.ОкончаниеПриход = СтрДок.Регистратор.Дата;
				КонецЕсли;
				
				Если СтрДок.ФизическийВесРасход <> 0 Тогда
					// вне зависимости от вида документа
					Если Объект.НачалоРасход = Дата('00010101') Тогда
						Объект.НачалоРасход = СтрДок.Регистратор.Дата;
					КонецЕсли;
					Объект.ОкончаниеРасход = СтрДок.Регистратор.Дата;
				КонецЕсли;
				
				Если ТипЗнч(СтрДок.Регистратор) = Тип("ДокументСсылка.ИНАГРО_АктЗачистки") Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='За указанный период уже выполнялся ""%1""';uk='За вказаний період вже виконувався ""%1""'"), СтрДок.Регистратор.Ссылка);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);	
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		д2                    = Объект.ДатаОкончания;
		в2                    = тмцКонОст;
		ТДни                  = ТДни + в1 * (НачалоДня(д2) - НачалоДня(д1) + 1) / 86400;
		СДни                  = ?(тмцПриход = 0, 0, ТДни / тмцПриход);
		
	КонецЦикла;
	
	
	Объект.Влажность1         = Процент(Объект.ФизическийВес1, ВесПоВлажности1);
	Объект.СорнаяПримесь1     = Процент(Объект.ФизическийВес1, ВесПоСорнойПримеси1);
	Объект.ЗерноваяПримесь1   = Процент(Объект.ФизическийВес1, ВесПоЗерновойПримеси1);
	
	Объект.Влажность2         = Процент(Объект.ФизическийВес2, ВесПоВлажности2);
	Объект.СорнаяПримесь2     = Процент(Объект.ФизическийВес2, ВесПоСорнойПримеси2);
	Объект.ЗерноваяПримесь2   = Процент(Объект.ФизическийВес2, ВесПоЗерновойПримеси2);
	
	Объект.Влажность4         = Процент(Объект.ФизическийВес4, ВесПоВлажности4);
	Объект.СорнаяПримесь4     = Процент(Объект.ФизическийВес4, ВесПоСорнойПримеси4);
	Объект.ЗерноваяПримесь4   = Процент(Объект.ФизическийВес4, ВесПоЗерновойПримеси4);
	
	Объект.Влажность7         = Процент(Объект.ФизическийВес7, ВесПоВлажности7);
	Объект.СорнаяПримесь7     = Процент(Объект.ФизическийВес7, ВесПоСорнойПримеси7);
	Объект.ЗерноваяПримесь7   = Процент(Объект.ФизическийВес7, ВесПоЗерновойПримеси7);
		
	Объект.ФизическийВес3     = Объект.ФизическийВес1 + Объект.ФизическийВес2;
	ВесПоВлажности3           = ВесПоВлажности1 + ВесПоВлажности2;
	ВесПоСорнойПримеси3       = ВесПоСорнойПримеси1 + ВесПоСорнойПримеси2;
	ВесПоЗерновойПримеси3     = ВесПоЗерновойПримеси1 + ВесПоЗерновойПримеси2;
	Объект.Влажность3         = Процент(Объект.ФизическийВес3, ВесПоВлажности3);
	Объект.СорнаяПримесь3     = Процент(Объект.ФизическийВес3, ВесПоСорнойПримеси3);
	Объект.ЗерноваяПримесь3   = Процент(Объект.ФизическийВес3, ВесПоЗерновойПримеси3);
	
	Если Объект.ФизическийВес3 <> 0 Тогда
		СрокХранения               = Окр(ТДни / Объект.ФизическийВес3);
		Объект.СрокХраненияМесяцев = Цел(СрокХранения / 30);
		Объект.СрокХраненияДней    = СрокХранения - Объект.СрокХраненияМесяцев * 30;
	Иначе
		СрокХранения               = 0;
		Объект.СрокХраненияМесяцев = 0;
		Объект.СрокХраненияДней    = 0;
	КонецЕсли;
	
	// Форма36СводнаяОбщая	
	
	Фильтр              = Документы.ИНАГРО_АктЗачистки.СформироватьФильтрДокумента(Объект, "Форма36СводнаяОбщая");
	
	ФильтрРегистраторов = "И ИНАГРО_Форма36Сводная.Регистратор.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И (ИНАГРО_Форма36Сводная.Регистратор ССЫЛКА Документ.ИНАГРО_Форма34Сводная
	|	ИЛИ ИНАГРО_Форма36Сводная.Регистратор ССЫЛКА Документ.ИНАГРО_АктРаспределения
	|	ИЛИ ВЫБОР
	|		КОГДА ИНАГРО_Форма36Сводная.Регистратор ССЫЛКА Документ.ИНАГРО_РеестрТТНВывоз
	|			ТОГДА ВЫБОР
	|					КОГДА ИНАГРО_Форма36Сводная.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыОперацийРеестрТТНВывоз.ВывозОтходов)
	|							ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ) ";
	
	Запрос = Новый Запрос;

	Запрос.Текст = "ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Кат1
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ФизическийВесОтходы1Категории,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Кат2
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ФизическийВесОтходы2Категории,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Кат3
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ФизическийВесОтходы3Категории,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Побочный
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ФизическийВесПобочногоПродукта,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Кат1
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесПоВлажностиРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоВлажности1Категории,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Кат1
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесПоСорнойПримесиРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоСорнойПримеси1Категории,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Кат1
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесПоЗерновойПримесиРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоЗерновойПримеси1Категории,				 
		|	ВЫБОР				 
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Кат2
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесПоВлажностиРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоВлажности2Категории,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Кат2
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесПоСорнойПримесиРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоСорнойПримеси2Категории,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Кат2
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесПоЗерновойПримесиРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоЗерновойПримеси2Категории,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Кат3
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесПоВлажностиРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоВлажности3Категории,				 				
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Кат3
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесПоСорнойПримесиРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоСорнойПримеси3Категории,				 
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Кат3
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесПоЗерновойПримесиРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоЗерновойПримеси3Категории,				 
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Побочный
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесПоВлажностиРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоВлажностиПобочногоПродукта,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Побочный
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесПоСорнойПримесиРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоСорнойПримесиПобочногоПродукта,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36Сводная.КодРасхода = &Побочный
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36Сводная.ВесПоЗерновойПримесиРасход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоЗерновойПримесиПобПродукта,				 
		|	ИНАГРО_Форма36Сводная.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ИНАГРО_Форма36Сводная КАК ИНАГРО_Форма36Сводная
		|ГДЕ
		|	ИНАГРО_Форма36Сводная.Организация = &Организация 
		|" + ФильтрРегистраторов + Фильтр + " 				 				 
		|ИТОГИ
		|	СУММА(ФизическийВесОтходы1Категории),
		|	СУММА(ФизическийВесОтходы2Категории),
		|	СУММА(ФизическийВесОтходы3Категории),
		|	СУММА(ФизическийВесПобочногоПродукта),
		|	СУММА(ВесПоВлажности1Категории),
		|	СУММА(ВесПоСорнойПримеси1Категории),
		|	СУММА(ВесПоЗерновойПримеси1Категории),				 
		|	СУММА(ВесПоВлажности2Категории),
		|	СУММА(ВесПоСорнойПримеси2Категории),
		|	СУММА(ВесПоЗерновойПримеси2Категории),
		|	СУММА(ВесПоВлажности3Категории),
		|	СУММА(ВесПоСорнойПримеси3Категории),
		|	СУММА(ВесПоЗерновойПримеси3Категории),
		|	СУММА(ВесПоВлажностиПобочногоПродукта),
		|	СУММА(ВесПоСорнойПримесиПобочногоПродукта),
		|	СУММА(ВесПоЗерновойПримесиПобПродукта)
		|ПО
		|	ОБЩИЕ,
		|	Регистратор";
	
	Запрос.УстановитьПараметр("ДатаНач",      Объект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКон",      Объект.ДатаОкончания);
	Запрос.УстановитьПараметр("Организация",  Объект.Организация);	
	Запрос.УстановитьПараметр("Склад",        Объект.Склад);
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);	
	Запрос.УстановитьПараметр("Урожай",       Объект.Урожай);
	Если НЕ НеВестиУчетПоВидуХраненияВККУ Тогда
		Запрос.УстановитьПараметр("ВидХранения", Объект.ВидХранения);
	КонецЕсли;
	Запрос.УстановитьПараметр("Кат1",         Перечисления.ИНАГРО_КодыРасхода.Кат1);		
	Запрос.УстановитьПараметр("Кат2",         Перечисления.ИНАГРО_КодыРасхода.Кат2);		
	Запрос.УстановитьПараметр("Кат3",         Перечисления.ИНАГРО_КодыРасхода.Кат3);		
	Запрос.УстановитьПараметр("Побочный",     Перечисления.ИНАГРО_КодыРасхода.Побочный);	
	
	// обнуляем дополнительные переменные
	ФВ5  = 0;
	ВПВ5 = 0;
	ВПС5 = 0;
	ВПЗ5 = 0; 
	ФВ6  = 0;
	ВПВ6 = 0;
	ВПС6 = 0;
	ВПЗ6 = 0;
	
	Объект.АктыСушкиИОчистки.Очистить();
	
	ВыборкаОбщ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	
	Пока ВыборкаОбщ.Следующий() Цикл 
		
		ФВ5  = ФВ5  + ВыборкаОбщ.ФизическийВесОтходы1Категории  + ВыборкаОбщ.ФизическийВесОтходы2Категории  + ВыборкаОбщ.ФизическийВесПобочногоПродукта;
		ВПВ5 = ВПВ5 + ВыборкаОбщ.ВесПоВлажности1Категории       + ВыборкаОбщ.ВесПоВлажности2Категории       + ВыборкаОбщ.ВесПоВлажностиПобочногоПродукта;
		ВПС5 = ВПС5 + ВыборкаОбщ.ВесПоСорнойПримеси1Категории   + ВыборкаОбщ.ВесПоСорнойПримеси2Категории   + ВыборкаОбщ.ВесПоСорнойПримесиПобочногоПродукта;
		ВПЗ5 = ВПЗ5 + ВыборкаОбщ.ВесПоЗерновойПримеси1Категории + ВыборкаОбщ.ВесПоЗерновойПримеси2Категории + ВыборкаОбщ.ВесПоЗерновойПримесиПобПродукта;
		
		ФВ6  = ФВ6  + ВыборкаОбщ.ФизическийВесОтходы3Категории;
		ВПВ6 = ВПВ6 + ВыборкаОбщ.ВесПоВлажности3Категории;
		ВПС6 = ВПС6 + ВыборкаОбщ.ВесПоСорнойПримеси3Категории;
		ВПЗ6 = ВПЗ6 + ВыборкаОбщ.ВесПоЗерновойПримеси3Категории;		
		
		Выборка = ВыборкаОбщ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = Объект.АктыСушкиИОчистки.Добавить();
			НоваяСтрока.Акт                  = Выборка.Регистратор;			
			
			Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ИНАГРО_Форма34Сводная") Тогда
				Если Выборка.Регистратор.ВидДокумента = Перечисления.ИНАГРО_ВидыАктовОчисткиСушки.Оздоровление Тогда
					НоваяСтрока.тУбыльОтСушки   = -1;
				Иначе					
					НоваяСтрока.тФизическийВес  = Выборка.Регистратор.ФизическийВес1;
					НоваяСтрока.тУбыльОтСушки   = Выборка.Регистратор.УбыльОтСушки;
					НоваяСтрока.тУбыльОтОчистки = Выборка.Регистратор.УбыльОтОчистки;
					НоваяСтрока.тОчищено        = Выборка.Регистратор.ФизическийВес3;
					НоваяСтрока.тПросушено      = Выборка.Регистратор.ФизическийВес5;				
				КонецЕсли;
				НоваяСтрока.ВидОчистки = Выборка.Регистратор.ЦельПодработки;
			Иначе
				НоваяСтрока.ВидОчистки          = Выборка.Регистратор.Примечание; 				
			КонецЕсли;
			
			НоваяСтрока.тФизическийВес5      = Выборка.ФизическийВесОтходы1Категории + Выборка.ФизическийВесОтходы2Категории + Выборка.ФизическийВесПобочногоПродукта;
			НоваяСтрока.тФизическийВес6      = Выборка.ФизическийВесОтходы3Категории;
			НоваяСтрока.тВесПоВлажности5     = Выборка.ВесПоВлажности1Категории      + Выборка.ВесПоВлажности2Категории      + Выборка.ВесПоВлажностиПобочногоПродукта;
			НоваяСтрока.тВесПоСорнойПримеси5 = Выборка.ВесПоСорнойПримеси1Категории  + Выборка.ВесПоСорнойПримеси2Категории  + Выборка.ВесПоСорнойПримесиПобочногоПродукта;
			НоваяСтрока.тВесПоВлажности6     = Выборка.ВесПоВлажности3Категории;
			НоваяСтрока.тВесПоСорнойПримеси6 = Выборка.ВесПоСорнойПримеси3Категории;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Объект.ФизическийВес5     = ?(ФВ5  = Неопределено, 0, ФВ5);
	ВесПоВлажности5           = ?(ВПВ5 = Неопределено, 0, ВПВ5);
	ВесПоСорнойПримеси5       = ?(ВПС5 = Неопределено, 0, ВПС5);
	ВесПоЗерновойПримеси5     = ?(ВПЗ5 = Неопределено, 0, ВПЗ5);
	Объект.Влажность5         = Процент(Объект.ФизическийВес5, ВесПоВлажности5);
	Объект.СорнаяПримесь5     = Процент(Объект.ФизическийВес5, ВесПоСорнойПримеси5);
	Объект.ЗерноваяПримесь5   = Процент(Объект.ФизическийВес5, ВесПоЗерновойПримеси5);
	
	Объект.ФизическийВес6     = ?(ФВ6  = Неопределено, 0, ФВ6);
	ВесПоВлажности6           = ?(ВПВ6 = Неопределено, 0, ВПВ6);
	ВесПоСорнойПримеси6       = ?(ВПС6 = Неопределено, 0, ВПС6);
	ВесПоЗерновойПримеси6     = ?(ВПЗ6 = Неопределено, 0, ВПЗ6);
	Объект.Влажность6         = Процент(Объект.ФизическийВес6, ВесПоВлажности6);
	Объект.СорнаяПримесь6     = Процент(Объект.ФизическийВес6, ВесПоСорнойПримеси6);
	Объект.ЗерноваяПримесь6   = Процент(Объект.ФизическийВес6, ВесПоЗерновойПримеси6);
	
	Объект.ФизическийВес8     = Объект.ФизическийВес4 + Объект.ФизическийВес5 + Объект.ФизическийВес6 + Объект.ФизическийВес7;
	ВесПоВлажности8           = ВесПоВлажности4 + ВесПоВлажности5 + ВесПоВлажности6 + ВесПоВлажности7;
	ВесПоСорнойПримеси8       = ВесПоСорнойПримеси4 + ВесПоСорнойПримеси5 + ВесПоСорнойПримеси6 + ВесПоСорнойПримеси7;
	ВесПоЗерновойПримеси8     = ВесПоЗерновойПримеси4 + ВесПоЗерновойПримеси5 + ВесПоЗерновойПримеси6 + ВесПоЗерновойПримеси7;
	Объект.Влажность8         = Процент(Объект.ФизическийВес8, ВесПоВлажности8);
	Объект.СорнаяПримесь8     = Процент(Объект.ФизическийВес8, ВесПоСорнойПримеси8);
	Объект.ЗерноваяПримесь8   = Процент(Объект.ФизическийВес8, ВесПоЗерновойПримеси8);
	
	Объект.ФизическийВес9     = Объект.ФизическийВес3 - Объект.ФизическийВес8;
	Объект.Влажность9         = Объект.Влажность3 - Объект.Влажность8;
	Объект.СорнаяПримесь9     = Объект.СорнаяПримесь3 - Объект.СорнаяПримесь8;
	Объект.ЗерноваяПримесь9   = Объект.ЗерноваяПримесь3 - Объект.ЗерноваяПримесь8;
	
	Объект.УбыльВлажности     = 100 *(Объект.Влажность3 - Объект.Влажность8) / (100 - Объект.Влажность8);
	УбыльВлажностиПриИзмененииСервере();
	
	Объект.УбыльСорнойПримеси = (Объект.СорнаяПримесь3 - Объект.СорнаяПримесь8) * (100 - Объект.УбыльВлажности) / (100 - Объект.СорнаяПримесь8);
	УбыльСорнойПримесиПриИзмененииНаСервере();
	
	Объект.УбыльЕстественная  = ИНАГРО_Элеватор.ПолучитьПроцентЕстественнойУбыли(Объект.Дата, Объект.Номенклатура, СрокХранения, Объект.СпособХранения, Объект.Склад);
	УбыльЕстественнаяПриИзмененииНаСервере();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуМестХранения()
	
	Фильтр = " ИСТИНА ";

	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_Остатки_СводнаяОстатки.МестоХранения,
		|	СУММА(ИНАГРО_Остатки_СводнаяОстатки.ВесОстаток) КАК ВесОстаток,
		|	СУММА(ИНАГРО_Остатки_СводнаяОстатки.КоличествоОстаток) КАК КоличествоОстаток,
		|	СУММА(ИНАГРО_Остатки_СводнаяОстатки.ЗачетныйВесОстаток) КАК ЗачетныйВесОстаток,
		|	СУММА(ИНАГРО_Остатки_СводнаяОстатки.УбыльВесаПриСушкеОстаток) КАК УбыльВесаПриСушкеОстаток,
		|	СУММА(ИНАГРО_Остатки_СводнаяОстатки.ЗачетныйВесДляКонтроляОстаток) КАК ЗачетныйВесДляКонтроляОстаток
		|ИЗ
		|	РегистрНакопления.ИНАГРО_Остатки_Сводная.Остатки(&Период, ) КАК ИНАГРО_Остатки_СводнаяОстатки
		|ГДЕ
		|	&Фильтр
		|
		|СГРУППИРОВАТЬ ПО
		|	ИНАГРО_Остатки_СводнаяОстатки.МестоХранения";
	
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Фильтр = Фильтр + " И ИНАГРО_Остатки_СводнаяОстатки.Организация = &Организация ";
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
		Фильтр = Фильтр + " И ИНАГРО_Остатки_СводнаяОстатки.Номенклатура = &Номенклатура ";
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Склад) Тогда 
		Запрос.УстановитьПараметр("Склад", Объект.Склад);
		Фильтр = Фильтр + " И ИНАГРО_Остатки_СводнаяОстатки.Склад = &Склад ";
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.МестоХранения) Тогда
		Запрос.УстановитьПараметр("МестоХранения", Объект.МестоХранения);
		Фильтр = Фильтр + " И ИНАГРО_Остатки_СводнаяОстатки.МестоХранения = &МестоХранения ";
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Урожай) Тогда
		Запрос.УстановитьПараметр("Урожай", Объект.Урожай);
		Фильтр = Фильтр + " И ИНАГРО_Остатки_СводнаяОстатки.Урожай = &Урожай ";
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ВидХранения) Тогда
		Запрос.УстановитьПараметр("ВидХранения", Объект.ВидХранения);
		Фильтр = Фильтр + " И ИНАГРО_Остатки_СводнаяОстатки.ВидХранения = &ВидХранения ";
	КонецЕсли;	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Фильтр", Фильтр);
	
	ВыборкаОбщие = Запрос.Выполнить().Выбрать();	
	
	Пока ВыборкаОбщие.Следующий() Цикл
		
		СтрТабМестХранения = Объект.СписокМестХранения.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрТабМестХранения, ВыборкаОбщие);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьТаблицуМестХранения()
	
	ОстатокПоПеревзвешиванию           = Объект.ФизическийВес7;
	УсушкаПоАктамОчисткиСушки          = Объект.АктыСушкиИОчистки.Итог("тУбыльОтСушки");
	
	Если Объект.СписыватьНеиспользованноеПраво Тогда
		Вес = Объект.ФизическийВес9 ;
	Иначе 
		Вес = Объект.УбыльПоВлажности + Объект.УбыльПоСорнойПримеси + Объект.УбыльПоПрочей + Объект.УбыльПоЕстественной;
	КонецЕсли;
	
	Если СписыватьУсушкуПоСкладскомуУчету Тогда				
		Вес = Вес - УсушкаПоАктамОчисткиСушки;
	КонецЕсли;
	
	БазаРаспределенияВеса 			   = Объект.СписокМестХранения.Итог("ВесОстаток");
	БазаРаспределенияУбыльВесаПриСушке = Объект.СписокМестХранения.Итог("УбыльВесаПриСушкеОстаток");	
	ОстатокВес 						   = Вес;
	ОстатокУсушкаПоАктамОчисткиСушки   = УсушкаПоАктамОчисткиСушки;
	ОстатокОстатокПоПеревзвешиванию	   = ОстатокПоПеревзвешиванию;
	
	СтрСМаксВесомОстатка               = Неопределено;
	МаксВесОстатка                     = 0;
	
	Для Каждого СтрМестХранения Из Объект.СписокМестХранения Цикл
		
		ВесПоМестуХранения 						 = ?(БазаРаспределенияВеса = 0, 0, Вес * СтрМестХранения.ВесОстаток / БазаРаспределенияВеса);
		УбыльВесаПриСушкеПоМестуХранения 		 = ?(БазаРаспределенияУбыльВесаПриСушке = 0, 0, УсушкаПоАктамОчисткиСушки * СтрМестХранения.УбыльВесаПриСушкеОстаток / БазаРаспределенияУбыльВесаПриСушке);
		ОстатокПоПеревзвешиваниюПоМестуХранения  = ?(БазаРаспределенияВеса = 0, 0, ОстатокПоПеревзвешиванию * СтрМестХранения.ВесОстаток / БазаРаспределенияВеса);
		
		СтрМестХранения.Вес 					 = ВесПоМестуХранения;
		СтрМестХранения.УбыльВесаПриСушке 		 = УбыльВесаПриСушкеПоМестуХранения;
		СтрМестХранения.ОстатокПоПеревзвешиванию = ОстатокПоПеревзвешиваниюПоМестуХранения;
		
		ОстатокВес 								 = ОстатокВес - ВесПоМестуХранения;
		ОстатокУсушкаПоАктамОчисткиСушки 		 = ОстатокУсушкаПоАктамОчисткиСушки - УбыльВесаПриСушкеПоМестуХранения;
		ОстатокОстатокПоПеревзвешиванию			 = ОстатокОстатокПоПеревзвешиванию - ОстатокПоПеревзвешиваниюПоМестуХранения;
		
		Если СтрМестХранения.ВесОстаток > МаксВесОстатка Тогда
			
			МаксВесОстатка 		 = СтрМестХранения.ВесОстаток;
			СтрСМаксВесомОстатка = СтрМестХранения;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если СтрСМаксВесомОстатка <> Неопределено И (ОстатокВес > 0 ИЛИ ОстатокУсушкаПоАктамОчисткиСушки > 0) Тогда
		
		СтрСМаксВесомОстатка.Вес 				 = ОстатокВес;
		СтрСМаксВесомОстатка.УбыльВесаПриСушке 	 = ОстатокУсушкаПоАктамОчисткиСушки;
		СтрМестХранения.ОстатокПоПеревзвешиванию = ОстатокОстатокПоПеревзвешиванию;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуИтогов()
	
	ТаблицаОборотов = СоздатьТаблицуПоОборотам();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_Форма36ОстаткиИОбороты.Владелец КАК Владелец,
		|	ИНАГРО_Форма36ОстаткиИОбороты.Договор КАК Договор,
		|	ИНАГРО_Форма36ОстаткиИОбороты.Регистратор.Ссылка КАК Регистратор,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПриходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПриход,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоВлажностиПриходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоВлажностиПриход,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоСорнойПримесиПриходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоСорнойПримесиПриход,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоЗерновойПримесиПриходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоЗерновойПримесиПриход,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесРасходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесРасход,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоВлажностиРасходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоВлажностиРасход,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоСорнойПримесиРасходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоСорнойПримесиРасход,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоЗерновойПримесиРасходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоЗерновойПримесиРасход,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПриходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПриходПереоформление,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоВлажностиПриходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоВлажностиПриходПереоформление,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоСорнойПримесиПриходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоСорнойПримесиПриходПереоформление,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоЗерновойПримесиПриходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоЗерновойПримесиПриходПереоформление,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесРасходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесРасходПереоформление,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоВлажностиРасходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоВлажностиРасходПереоформление,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоСорнойПримесиРасходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоСорнойПримесиРасходПереоформление,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|					И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесРасходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесРасходРеализация,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|					И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоВлажностиРасходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоВлажностиРасходРеализация,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|					И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоСорнойПримесиРасходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоСорнойПримесиРасходРеализация,
		|	ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.УбыльВесаПриСушкеПриход, 0) КАК УбыльВесаПриСушке,
		|	ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесПриходНачальныйОстаток, 0) КАК ВесПриходНачальныйОстаток,
		|	ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесПоВлажностиПриходНачальныйОстаток, 0) КАК ВесПоВлажностиПриходНачальныйОстаток,
		|	ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесПоСорнойПримесиПриходНачальныйОстаток, 0) КАК ВесПоСорнойПримесиПриходНачальныйОстаток,
		|	ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесПоЗерновойПримесиПриходНачальныйОстаток, 0) КАК ВесПоЗерновойПримесиПриходНачальныйОстаток,
		|	ВЫБОР
		|		КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_РеестрТТНВнутр
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_ТТНВнутр
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Перемещение
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесПриходПриход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПриходБезПереоформления,
		|	ВЫБОР
		|		КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_РеестрТТНВнутр
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_ТТНВнутр
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Перемещение
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесПоВлажностиПриходПриход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоВлажностиПриходБезПереоформления,
		|	ВЫБОР
		|		КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_РеестрТТНВнутр
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_ТТНВнутр
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Перемещение
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесПоСорнойПримесиПриходПриход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоСорнойПримесиПриходБезПереоформления,
		|	ВЫБОР
		|		КОГДА НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Переоформление
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_РеестрТТНВнутр
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_ТТНВнутр
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Перемещение
		|				И НЕ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_АктРасчет310
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесПоЗерновойПримесиПриходПриход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПоЗерновойПримесиПриходБезПереоформления,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_РеестрТТНВнутр
		|				ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_ТТНВнутр
		|				ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Перемещение
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесПриходПриход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесПриходВнутр,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_РеестрТТНВнутр
		|					ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_ТТНВнутр
		|					ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Перемещение
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоВлажностиПриходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоВлажностиПриходВнутр,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_РеестрТТНВнутр
		|					ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_ТТНВнутр
		|					ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Перемещение
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоСорнойПримесиПриходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоСорнойПримесиПриходВнутр,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_РеестрТТНВнутр
		|					ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_ТТНВнутр
		|					ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Перемещение
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоЗерновойПримесиПриходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоЗерновойПримесиПриходВнутр,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_РеестрТТНВнутр
		|				ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_ТТНВнутр
		|				ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Перемещение
		|			ТОГДА ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесРасходПриход, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВесРасходВнутр,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_РеестрТТНВнутр
		|					ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_ТТНВнутр
		|					ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Перемещение
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоВлажностиРасходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоВлажностиРасходВнутр,
		|	ЕСТЬNULL(ВЫБОР
		|			КОГДА ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_РеестрТТНВнутр
		|					ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_ТТНВнутр
		|					ИЛИ ИНАГРО_Форма36ОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_Перемещение
		|				ТОГДА ИНАГРО_Форма36ОстаткиИОбороты.ВесПоСорнойПримесиРасходПриход
		|			ИНАЧЕ 0
		|		КОНЕЦ, 0) КАК ВесПоСорнойПримесиРасходВнутр,
		|	ЕСТЬNULL(ЗапросПоОчистке.ФизическийВесОтходы1Категории, 0) КАК ФизическийВесОтходы1Категории,
		|	ЕСТЬNULL(ЗапросПоОчистке.ФизическийВесОтходы2Категории, 0) КАК ФизическийВесОтходы2Категории,
		|	ЕСТЬNULL(ЗапросПоОчистке.ФизическийВесОтходы3Категории, 0) КАК ФизическийВесОтходы3Категории,
		|	ЕСТЬNULL(ЗапросПоОчистке.ФизическийВесПобочногоПродукта, 0) КАК ФизическийВесПобочногоПродукта,
		|	ЕСТЬNULL(ЗапросПоОчистке.ВесПоВлажности1Категории, 0) КАК ВесПоВлажности1Категории,
		|	ЕСТЬNULL(ЗапросПоОчистке.ВесПоСорнойПримеси1Категории, 0) КАК ВесПоСорнойПримеси1Категории,
		|	ЕСТЬNULL(ЗапросПоОчистке.ВесПоВлажности2Категории, 0) КАК ВесПоВлажности2Категории,
		|	ЕСТЬNULL(ЗапросПоОчистке.ВесПоСорнойПримеси2Категории, 0) КАК ВесПоСорнойПримеси2Категории,
		|	ЕСТЬNULL(ЗапросПоОчистке.ВесПоВлажности3Категории, 0) КАК ВесПоВлажности3Категории,
		|	ЕСТЬNULL(ЗапросПоОчистке.ВесПоСорнойПримеси3Категории, 0) КАК ВесПоСорнойПримеси3Категории,
		|	ЕСТЬNULL(ЗапросПоОчистке.ВесПоВлажностиПобочногоПродукта, 0) КАК ВесПоВлажностиПобочногоПродукта,
		|	ЕСТЬNULL(ЗапросПоОчистке.ВесПоСорнойПримесиПобочногоПродукта, 0) КАК ВесПоСорнойПримесиПобочногоПродукта,
		|	ЕСТЬNULL(ЗапросПоОстаткам.ВесОстаток, 0) КАК Остаток37,
		|	ЗапросПоАктамРасчета.УбыльПоВлажности КАК УбыльПоВлажности,
		|	ЗапросПоАктамРасчета.УбыльПоЕстественной КАК УбыльПоЕстественной,
		|	ЗапросПоАктамРасчета.УбыльПоПрочей КАК УбыльПоПрочей,
		|	ЗапросПоАктамРасчета.УбыльПоСорнойПримеси КАК УбыльПоСорнойПримеси,
		|	ЗапросПоАктамРасчета.ПовышениеПоВлажности КАК ПовышениеПоВлажности,
		|	ЗапросПоАктамРасчета.ПовышениеПоСорнойПримеси КАК ПовышениеПоСорнойПримеси,
		|	ИНАГРО_Форма36ОстаткиИОбороты.Регистратор.Дата КАК ДатаДокумента,
		|	ЗапросПоАктамРасчета.Владелец КАК Владелец1,
		|	ЗапросПоАктамРасчета.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ЗапросПоАктамРасчета.УбыльПоВлажности КАК УбыльПоВлажности1,
		|	ЗапросПоАктамРасчета.УбыльПоЕстественной КАК УбыльПоЕстественной1,
		|	ЗапросПоАктамРасчета.УбыльПоПрочей КАК УбыльПоПрочей1,
		|	ЗапросПоАктамРасчета.УбыльПоСорнойПримеси КАК УбыльПоСорнойПримеси1,
		|	ЗапросПоАктамРасчета.ПовышениеПоВлажности КАК ПовышениеПоВлажности1,
		|	ЗапросПоАктамРасчета.ПовышениеПоСорнойПримеси КАК ПовышениеПоСорнойПримеси1,
		|	ЗапросПоАктамРасчета.Ссылка КАК Ссылка,
		|	ЗапросПоАктамРасчета.Владелец КАК Владелец2,
		|	ЗапросПоАктамРасчета.ДоговорКонтрагента КАК ДоговорКонтрагента1,
		|	ЗапросПоАктамРасчета.УбыльПоВлажности КАК УбыльПоВлажности2,
		|	ЗапросПоАктамРасчета.УбыльПоЕстественной КАК УбыльПоЕстественной2,
		|	ЗапросПоАктамРасчета.УбыльПоПрочей КАК УбыльПоПрочей2,
		|	ЗапросПоАктамРасчета.УбыльПоСорнойПримеси КАК УбыльПоСорнойПримеси2,
		|	ЗапросПоАктамРасчета.ПовышениеПоВлажности КАК ПовышениеПоВлажности2,
		|	ЗапросПоАктамРасчета.ПовышениеПоСорнойПримеси КАК ПовышениеПоСорнойПримеси2,
		|	ЗапросПоАктамРасчета.Ссылка КАК Ссылка1
		|ИЗ
		|	РегистрНакопления.ИНАГРО_Форма36.ОстаткиИОбороты(
		|			&Начало,
		|			&Конец,
		|			Регистратор,
		|			,
		|			Организация = &Организация
		|				И Номенклатура = &Номенклатура
		|				И ВидХранения = &ВидХранения
		|				И Склад = &Склад
		|				И Урожай = &Урожай) КАК ИНАГРО_Форма36ОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СУММА(ВЫБОР
		|					КОГДА ИНАГРО_Форма36.КодРасхода = &Кат1
		|						ТОГДА ЕСТЬNULL(ИНАГРО_Форма36.ВесРасход, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ФизическийВесОтходы1Категории,
		|			СУММА(ВЫБОР
		|					КОГДА ИНАГРО_Форма36.КодРасхода = &Кат2
		|						ТОГДА ЕСТЬNULL(ИНАГРО_Форма36.ВесРасход, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ФизическийВесОтходы2Категории,
		|			СУММА(ВЫБОР
		|					КОГДА ИНАГРО_Форма36.КодРасхода = &Кат3
		|						ТОГДА ЕСТЬNULL(ИНАГРО_Форма36.ВесРасход, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ФизическийВесОтходы3Категории,
		|			СУММА(ВЫБОР
		|					КОГДА ИНАГРО_Форма36.КодРасхода = &Побочный
		|						ТОГДА ЕСТЬNULL(ИНАГРО_Форма36.ВесРасход, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ФизическийВесПобочногоПродукта,
		|			СУММА(ВЫБОР
		|					КОГДА ИНАГРО_Форма36.КодРасхода = &Кат1
		|						ТОГДА ЕСТЬNULL(ИНАГРО_Форма36.ВесПоВлажностиРасход, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ВесПоВлажности1Категории,
		|			СУММА(ВЫБОР
		|					КОГДА ИНАГРО_Форма36.КодРасхода = &Кат1
		|						ТОГДА ЕСТЬNULL(ИНАГРО_Форма36.ВесПоСорнойПримесиРасход, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ВесПоСорнойПримеси1Категории,
		|			СУММА(ВЫБОР
		|					КОГДА ИНАГРО_Форма36.КодРасхода = &Кат2
		|						ТОГДА ЕСТЬNULL(ИНАГРО_Форма36.ВесПоВлажностиРасход, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ВесПоВлажности2Категории,
		|			СУММА(ВЫБОР
		|					КОГДА ИНАГРО_Форма36.КодРасхода = &Кат2
		|						ТОГДА ЕСТЬNULL(ИНАГРО_Форма36.ВесПоСорнойПримесиРасход, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ВесПоСорнойПримеси2Категории,
		|			СУММА(ВЫБОР
		|					КОГДА ИНАГРО_Форма36.КодРасхода = &Кат3
		|						ТОГДА ЕСТЬNULL(ИНАГРО_Форма36.ВесПоВлажностиРасход, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ВесПоВлажности3Категории,
		|			СУММА(ВЫБОР
		|					КОГДА ИНАГРО_Форма36.КодРасхода = &Кат3
		|						ТОГДА ЕСТЬNULL(ИНАГРО_Форма36.ВесПоСорнойПримесиРасход, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ВесПоСорнойПримеси3Категории,
		|			СУММА(ВЫБОР
		|					КОГДА ИНАГРО_Форма36.КодРасхода = &Побочный
		|						ТОГДА ЕСТЬNULL(ИНАГРО_Форма36.ВесПоВлажностиРасход, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ВесПоВлажностиПобочногоПродукта,
		|			СУММА(ВЫБОР
		|					КОГДА ИНАГРО_Форма36.КодРасхода = &Побочный
		|						ТОГДА ЕСТЬNULL(ИНАГРО_Форма36.ВесПоСорнойПримесиРасход, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ВесПоСорнойПримесиПобочногоПродукта,
		|			ИНАГРО_Форма36.Владелец КАК Владелец,
		|			ИНАГРО_Форма36.Договор КАК Договор,
		|			ИНАГРО_Форма36.Регистратор КАК Регистратор
		|		ИЗ
		|			РегистрНакопления.ИНАГРО_Форма36 КАК ИНАГРО_Форма36
		|		ГДЕ
		|			ИНАГРО_Форма36.Организация = &Организация
		|			И ИНАГРО_Форма36.Регистратор.Дата >= &ДатаНачала
		|			И ИНАГРО_Форма36.Регистратор.Дата <= &ДатаКонца
		|			И (ИНАГРО_Форма36.Регистратор ССЫЛКА Документ.ИНАГРО_Форма34Сводная
		|					ИЛИ ИНАГРО_Форма36.Регистратор ССЫЛКА Документ.ИНАГРО_АктРаспределения)
		|			И ИНАГРО_Форма36.Склад = &Склад
		|			И ИНАГРО_Форма36.Урожай = &Урожай
		|			И ИНАГРО_Форма36.ВидХранения = &ВидХранения
		|			И ИНАГРО_Форма36.ВесРасход <> 0
		|			И ИНАГРО_Форма36.Номенклатура = &Номенклатура
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ИНАГРО_Форма36.Владелец,
		|			ИНАГРО_Форма36.Договор,
		|			ИНАГРО_Форма36.Регистратор) КАК ЗапросПоОчистке
		|		ПО ИНАГРО_Форма36ОстаткиИОбороты.Владелец = ЗапросПоОчистке.Владелец
		|			И ИНАГРО_Форма36ОстаткиИОбороты.Договор = ЗапросПоОчистке.Договор
		|			И ИНАГРО_Форма36ОстаткиИОбороты.Регистратор = ЗапросПоОчистке.Регистратор
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИНАГРО_ОстаткиОстатки.Владелец КАК Владелец,
		|			ИНАГРО_ОстаткиОстатки.Договор КАК Договор,
		|			СУММА(ИНАГРО_ОстаткиОстатки.ВесОстаток) КАК ВесОстаток
		|		ИЗ
		|			РегистрНакопления.ИНАГРО_Остатки.Остатки(
		|					&Конец,
		|					Организация = &Организация
		|						И Номенклатура = &Номенклатура
		|						И ВидХранения = &ВидХранения
		|						И Склад = &Склад
		|						И Урожай = &Урожай) КАК ИНАГРО_ОстаткиОстатки
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ИНАГРО_ОстаткиОстатки.Владелец,
		|			ИНАГРО_ОстаткиОстатки.Договор) КАК ЗапросПоОстаткам
		|		ПО ИНАГРО_Форма36ОстаткиИОбороты.Владелец = ЗапросПоОстаткам.Владелец
		|			И ИНАГРО_Форма36ОстаткиИОбороты.Договор = ЗапросПоОстаткам.Договор
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИНАГРО_АктРасчет310.Владелец КАК Владелец,
		|			ИНАГРО_АктРасчет310.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|			СУММА(ИНАГРО_АктРасчет310.УбыльПоВлажности) КАК УбыльПоВлажности,
		|			СУММА(ИНАГРО_АктРасчет310.УбыльПоЕстественной) КАК УбыльПоЕстественной,
		|			СУММА(ИНАГРО_АктРасчет310.УбыльПоПрочей) КАК УбыльПоПрочей,
		|			СУММА(ИНАГРО_АктРасчет310.УбыльПоСорнойПримеси) КАК УбыльПоСорнойПримеси,
		|			СУММА(ИНАГРО_АктРасчет310.ПовышениеПоВлажности) КАК ПовышениеПоВлажности,
		|			СУММА(ИНАГРО_АктРасчет310.ПовышениеПоСорнойПримеси) КАК ПовышениеПоСорнойПримеси,
		|			ИНАГРО_АктРасчет310.Ссылка КАК Ссылка
		|		ИЗ
		|			Документ.ИНАГРО_АктРасчет310 КАК ИНАГРО_АктРасчет310
		|		ГДЕ
		|			ИНАГРО_АктРасчет310.Проведен = ИСТИНА
		|			И ИНАГРО_АктРасчет310.Организация = &Организация
		|			И ИНАГРО_АктРасчет310.Склад = &Склад
		|			И ИНАГРО_АктРасчет310.ВидХранения = &ВидХранения
		|			И ИНАГРО_АктРасчет310.Дата МЕЖДУ &ДатаНачала И &ДатаКонца
		|			И ИНАГРО_АктРасчет310.Номенклатура = &Номенклатура
		|			И ИНАГРО_АктРасчет310.Урожай = &Урожай
		|			И ИНАГРО_АктРасчет310.ВидОперации = &АктРасчетаРасчетПоФакту
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ИНАГРО_АктРасчет310.Владелец,
		|			ИНАГРО_АктРасчет310.ДоговорКонтрагента,
		|			ИНАГРО_АктРасчет310.Ссылка) КАК ЗапросПоАктамРасчета
		|		ПО ИНАГРО_Форма36ОстаткиИОбороты.Владелец = ЗапросПоАктамРасчета.Владелец
		|			И ИНАГРО_Форма36ОстаткиИОбороты.Договор = ЗапросПоАктамРасчета.ДоговорКонтрагента
		|			И ИНАГРО_Форма36ОстаткиИОбороты.Регистратор = ЗапросПоАктамРасчета.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Владелец,
		|	Договор,
		|	ДатаДокумента
		|ИТОГИ
		|	СУММА(ВесПриход),
		|	СУММА(ВесПоВлажностиПриход),
		|	СУММА(ВесПоСорнойПримесиПриход),
		|	СУММА(ВесПоЗерновойПримесиПриход),
		|	СУММА(ВесРасход),
		|	СУММА(ВесПоВлажностиРасход),
		|	СУММА(ВесПоСорнойПримесиРасход),
		|	СУММА(ВесПоЗерновойПримесиРасход),
		|	СУММА(ВесПриходПереоформление),
		|	СУММА(ВесПоВлажностиПриходПереоформление),
		|	СУММА(ВесПоСорнойПримесиПриходПереоформление),
		|	СУММА(ВесПоЗерновойПримесиПриходПереоформление),
		|	СУММА(ВесРасходПереоформление),
		|	СУММА(ВесПоВлажностиРасходПереоформление),
		|	СУММА(ВесПоСорнойПримесиРасходПереоформление),
		|	СУММА(ВесРасходРеализация),
		|	СУММА(ВесПоВлажностиРасходРеализация),
		|	СУММА(ВесПоСорнойПримесиРасходРеализация),
		|	СУММА(УбыльВесаПриСушке),
		|	СУММА(ВесПриходНачальныйОстаток),
		|	СУММА(ВесПоВлажностиПриходНачальныйОстаток),
		|	СУММА(ВесПоСорнойПримесиПриходНачальныйОстаток),
		|	СУММА(ВесПоЗерновойПримесиПриходНачальныйОстаток),
		|	СУММА(ВесПриходБезПереоформления),
		|	СУММА(ВесПоВлажностиПриходБезПереоформления),
		|	СУММА(ВесПоСорнойПримесиПриходБезПереоформления),
		|	СУММА(ВесПоЗерновойПримесиПриходБезПереоформления),
		|	СУММА(ВесПриходВнутр),
		|	СУММА(ВесПоВлажностиПриходВнутр),
		|	СУММА(ВесПоСорнойПримесиПриходВнутр),
		|	СУММА(ВесПоЗерновойПримесиПриходВнутр),
		|	СУММА(ВесРасходВнутр),
		|	СУММА(ВесПоВлажностиРасходВнутр),
		|	СУММА(ВесПоСорнойПримесиРасходВнутр),
		|	СУММА(ФизическийВесОтходы1Категории),
		|	СУММА(ФизическийВесОтходы2Категории),
		|	СУММА(ФизическийВесОтходы3Категории),
		|	СУММА(ФизическийВесПобочногоПродукта),
		|	СУММА(ВесПоВлажности1Категории),
		|	СУММА(ВесПоСорнойПримеси1Категории),
		|	СУММА(ВесПоВлажности2Категории),
		|	СУММА(ВесПоСорнойПримеси2Категории),
		|	СУММА(ВесПоВлажности3Категории),
		|	СУММА(ВесПоСорнойПримеси3Категории),
		|	СУММА(ВесПоВлажностиПобочногоПродукта),
		|	СУММА(ВесПоСорнойПримесиПобочногоПродукта),
		|	МАКСИМУМ(Остаток37),
		|	СУММА(УбыльПоВлажности),
		|	СУММА(УбыльПоЕстественной),
		|	СУММА(УбыльПоПрочей),
		|	СУММА(УбыльПоСорнойПримеси),
		|	СУММА(ПовышениеПоВлажности),
		|	СУММА(ПовышениеПоСорнойПримеси)
		|ПО
		|	ОБЩИЕ,
		|	Владелец,
		|	Договор";
	
	Запрос.УстановитьПараметр("Начало",                  Новый Граница(Объект.ДатаНачала, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Конец",                   Новый Граница(Объект.ДатаОкончания, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидХранения",             Объект.ВидХранения);
	Запрос.УстановитьПараметр("Склад",                   Объект.Склад);
	Запрос.УстановитьПараметр("Номенклатура",            Объект.Номенклатура);
	Запрос.УстановитьПараметр("Урожай",                  Объект.Урожай);
	Запрос.УстановитьПараметр("Организация",             Объект.Организация);
	Запрос.УстановитьПараметр("Кат1",                    Перечисления.ИНАГРО_КодыРасхода.Кат1);		
	Запрос.УстановитьПараметр("Кат2",                    Перечисления.ИНАГРО_КодыРасхода.Кат2);		
	Запрос.УстановитьПараметр("Кат3",                    Перечисления.ИНАГРО_КодыРасхода.Кат3);		
	Запрос.УстановитьПараметр("Побочный",                Перечисления.ИНАГРО_КодыРасхода.Побочный);
	запрос.УстановитьПараметр("ДатаНачала",              Объект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКонца",               Объект.ДатаОкончания);
	Запрос.УстановитьПараметр("АктРасчетаРасчетПоФакту", Перечисления.ИНАГРО_ВидыОперацийАктРасчет310.РасчетПоФакту);
	
	ВыборкаОбщие = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПоОборотам = Ложь;
	
	Если ВыборкаОбщие.Количество() > 0 Тогда
		
		Пока ВыборкаОбщие.Следующий() Цикл
			
			ВыборкаВладельцев = ВыборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
			
			Пока ВыборкаВладельцев.Следующий() Цикл
				
				ВыборкаПоДоговорам = ВыборкаВладельцев.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаПоДоговорам.Следующий() Цикл
					
					СтрокаТаблицыОборотов = ТаблицаОборотов.Добавить();
					
					ОстатокЕсть                          = Ложь;
					ВыборкаНачальныйОстаток              = ВыборкаПоДоговорам.Выбрать();
					ВесПоВлажностиНачальныйОстаток       = 0;
					ВесПоСорнойПримесиНачальныйОстаток   = 0;
					ВесПоЗерновойПримесиНачальныйОстаток = 0;
					ОстатокНаНачало                      = 0;
					 
					Если НЕ ПоОборотам Тогда				
						
						Пока ВыборкаНачальныйОстаток.Следующий() Цикл
							
							Если ВыборкаНачальныйОстаток.Регистратор <> Null Тогда
								
								Если НЕ ОстатокЕсть Тогда						
									ВесПоВлажностиНачальныйОстаток       = ВыборкаНачальныйОстаток.ВесПоВлажностиПриходНачальныйОстаток;
									ВесПоСорнойПримесиНачальныйОстаток   = ВыборкаНачальныйОстаток.ВесПоСорнойПримесиПриходНачальныйОстаток;
									ВесПоЗерновойПримесиНачальныйОстаток = ВыборкаНачальныйОстаток.ВесПоЗерновойПримесиПриходНачальныйОстаток;
									ОстатокНаНачало                      = ВыборкаНачальныйОстаток.ВесПриходНачальныйОстаток;						
									ВлажностьОстаткаНаНачало             = ИНАГРО_Элеватор.Процент(ВыборкаНачальныйОстаток.ВесПриходНачальныйОстаток, ВесПоВлажностиНачальныйОстаток, 2);
									СорнаяПримесьОстаткаНаНачало         = ИНАГРО_Элеватор.Процент(ВыборкаНачальныйОстаток.ВесПриходНачальныйОстаток, ВесПоСорнойПримесиНачальныйОстаток, 2);
									ЗерноваяПримесьОстаткаНаНачало       = ИНАГРО_Элеватор.Процент(ВыборкаНачальныйОстаток.ВесПриходНачальныйОстаток, ВесПоЗерновойПримесиНачальныйОстаток, 2);
									ОстатокЕсть                          = Истина;
									Прервать;
									
								КонецЕсли; 
								
							КонецЕсли; 				                     
						КонецЦикла;
						
						// вес остаток					
						СтрокаТаблицыОборотов.ВесПриходНачальныйОстаток            = ОстатокНаНачало;	
						СтрокаТаблицыОборотов.ВесПоВлажностиНачальныйОстаток       = ВесПоВлажностиНачальныйОстаток;
						СтрокаТаблицыОборотов.ВесПоСорнойПримесиНачальныйОстаток   = ВесПоСорнойПримесиНачальныйОстаток;
						СтрокаТаблицыОборотов.ВесПоЗерновойПримесиНачальныйОстаток = ВесПоЗерновойПримесиНачальныйОстаток;
						СтрокаТаблицыОборотов.ВлажностьОстаткаНаНачало             = ВлажностьОстаткаНаНачало;
						СтрокаТаблицыОборотов.СорнаяПримесьОстаткаНаНачало         = СорнаяПримесьОстаткаНаНачало;
						СтрокаТаблицыОборотов.зерноваяПримесьОстаткаНаНачало       = ЗерноваяПримесьОстаткаНаНачало;
						
					КонецЕсли;
					
					// Владелец, договор
					СтрокаТаблицыОборотов.Владелец                                  = ВыборкаПоДоговорам.Владелец;
					СтрокаТаблицыОборотов.ДоговорКонтрагента                        = ВыборкаПоДоговорам.Договор;
					
					// Приход
					СтрокаТаблицыОборотов.ВесПриход                                 = ВыборкаПоДоговорам.ВесПриход;
					СтрокаТаблицыОборотов.ВлажностьПриход                           = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесПриход, ВыборкаПоДоговорам.ВесПоВлажностиПриход, 2);
					СтрокаТаблицыОборотов.СорнаяПримесьПриход                       = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесПриход, ВыборкаПоДоговорам.ВесПоСорнойПримесиПриход, 2);
					СтрокаТаблицыОборотов.ЗерноваяПримесьПриход                     = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесПриход, ВыборкаПоДоговорам.ВесПоЗерновойПримесиПриход, 2);
					СтрокаТаблицыОборотов.ВесПоВлажностиПриход                      = ВыборкаПоДоговорам.ВесПоВлажностиПриход;
					СтрокаТаблицыОборотов.ВесПоСорнойПримесиПриход                  = ВыборкаПоДоговорам.ВесПоСорнойПримесиПриход;
					СтрокаТаблицыОборотов.ВесПоЗерновойПримесиПриход                = ВыборкаПоДоговорам.ВесПоЗерновойПримесиПриход;
					
					// Приход без переоформления
					СтрокаТаблицыОборотов.ВесПриходБезПереоформления                = ВыборкаПоДоговорам.ВесПриходБезПереоформления;
					СтрокаТаблицыОборотов.ВлажностьПриходБезПереоформления          = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесПриходБезПереоформления, ВыборкаПоДоговорам.ВесПоВлажностиПриходБезПереоформления, 2); 
					СтрокаТаблицыОборотов.СорнаяПримесьПриходБезПереоформления      = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесПриходБезПереоформления, ВыборкаПоДоговорам.ВесПоСорнойПримесиПриходБезПереоформления, 2); 
					СтрокаТаблицыОборотов.ВесПоВлажностиПриходБезПереоформления     = ВыборкаПоДоговорам.ВесПоВлажностиПриходБезПереоформления; 
					СтрокаТаблицыОборотов.ВесПоСорнойПримесиПриходБезПереоформления = ВыборкаПоДоговорам.ВесПоСорнойПримесиПриходБезПереоформления;
					//СтрокаТаблицыОборотов.ВесПоЗерновойПримесиПриходБезПереоформления = ВыборкаПоДоговорам.ВесПоЗерновойПримесиПриходБезПереоформления;
					
					// Приход переоформление 
					СтрокаТаблицыОборотов.ВесПриходПереоформление                   = ВыборкаПоДоговорам.ВесПриходПереоформление;
					СтрокаТаблицыОборотов.ВлажностьПриходПереоформление             = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесПриходПереоформление, ВыборкаПоДоговорам.ВесПоВлажностиПриходПереоформление, 2);
					СтрокаТаблицыОборотов.СорнаяПримесьПриходПереоформление         = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесПриходПереоформление, ВыборкаПоДоговорам.ВесПоСорнойПримесиПриходПереоформление, 2);
					СтрокаТаблицыОборотов.ВесПоВлажностиПриходПереоформление        = ВыборкаПоДоговорам.ВесПоВлажностиПриходПереоформление;
					СтрокаТаблицыОборотов.ВесПоСорнойПримесиПриходПереоформление    = ВыборкаПоДоговорам.ВесПоСорнойПримесиПриходПереоформление;
					//СтрокаТаблицыОборотов.ВесПоЗерновойПримесиПриходПереоформление = ВыборкаПоДоговорам.ВесПоЗерновойПримесиПриходПереоформление;
					
					// Приход внутренний
					СтрокаТаблицыОборотов.ВесПриходВнутр                            = ВыборкаПоДоговорам.ВесПриходВнутр;
					СтрокаТаблицыОборотов.ВлажностьПриходВнутр                      = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесПриходВнутр, ВыборкаПоДоговорам.ВесПоВлажностиПриходВнутр,2);
					СтрокаТаблицыОборотов.СорнаяПримесьПриходВнутр                  = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесПриходВнутр, ВыборкаПоДоговорам.ВесПоСорнойПримесиПриходВнутр,2);
					СтрокаТаблицыОборотов.ВесПоВлажностиПриходВнутр                 = ВыборкаПоДоговорам.ВесПоВлажностиПриходВнутр;
					СтрокаТаблицыОборотов.ВесПоСорнойПримесиПриходВнутр             = ВыборкаПоДоговорам.ВесПоСорнойПримесиПриходВнутр;
					//СтрокаТаблицыОборотов.ВесПоЗерновойПримесиПриходВнутр             = ВыборкаПоДоговорам.ВесПоЗерновойПримесиПриходВнутр;

					// Расход
					СтрокаТаблицыОборотов.ВесРасход                                 = ВыборкаПоДоговорам.ВесРасход;
					СтрокаТаблицыОборотов.ВлажностьРасход                           = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесРасход, ВыборкаПоДоговорам.ВесПоВлажностиРасход, 2);
					СтрокаТаблицыОборотов.СорнаяПримесьРасход                       = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесРасход, ВыборкаПоДоговорам.ВесПоСорнойПримесиРасход, 2);
					СтрокаТаблицыОборотов.ЗерноваяПримесьРасход                     = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесРасход, ВыборкаПоДоговорам.ВесПоЗерновойПримесиРасход, 2);
					СтрокаТаблицыОборотов.ВесПоВлажностиРасход                      = ВыборкаПоДоговорам.ВесПоВлажностиРасход;
					СтрокаТаблицыОборотов.ВесПоСорнойПримесиРасход                  = ВыборкаПоДоговорам.ВесПоСорнойПримесиРасход;
					СтрокаТаблицыОборотов.ВесПоЗерновойПримесиРасход                = ВыборкаПоДоговорам.ВесПоЗерновойПримесиРасход;

					// Расход реализация
					СтрокаТаблицыОборотов.ВесРасходРеализация                       = ВыборкаПоДоговорам.ВесРасходРеализация;  
					СтрокаТаблицыОборотов.ВлажностьРасходРеализация                 = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесРасходРеализация, ВыборкаПоДоговорам.ВесПоВлажностиРасходРеализация, 2); 
					СтрокаТаблицыОборотов.СорнаяПримесьРасходРеализация             = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесРасходРеализация, ВыборкаПоДоговорам.ВесПоСорнойПримесиРасходРеализация, 2);  
					СтрокаТаблицыОборотов.ВесПоВлажностиРасходРеализация            = ВыборкаПоДоговорам.ВесПоВлажностиРасходРеализация;
					СтрокаТаблицыОборотов.ВесПоСорнойПримесиРасходРеализация        = ВыборкаПоДоговорам.ВесПоСорнойПримесиРасходРеализация;
					
					// Расход переоформление
					СтрокаТаблицыОборотов.ВесРасходПереоформление                   = ВыборкаПоДоговорам.ВесРасходПереоформление ;
					СтрокаТаблицыОборотов.ВлажностьРасходПереоформление             = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесРасходПереоформление, ВыборкаПоДоговорам.ВесПоВлажностиРасходПереоформление, 2);
					СтрокаТаблицыОборотов.СорнаяПримесьРасходПереоформление         = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесРасходПереоформление, ВыборкаПоДоговорам.ВесПоСорнойПримесиРасходПереоформление, 2);
					СтрокаТаблицыОборотов.ВесПоВлажностиРасходПереоформление        = ВыборкаПоДоговорам.ВесПоВлажностиРасходПереоформление;
					СтрокаТаблицыОборотов.ВесПоСорнойПримесиРасходПереоформление    = ВыборкаПоДоговорам.ВесПоСорнойПримесиРасходПереоформление;
					
					// Расход внутр
					СтрокаТаблицыОборотов.ВесРасходВнутр                            = ВыборкаПоДоговорам.ВесРасходВнутр;
					СтрокаТаблицыОборотов.влажностьРасходВнутр                      = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесРасходВнутр, ВыборкаПоДоговорам.ВесПоВлажностиРасходВнутр, 2);
					СтрокаТаблицыОборотов.СорнаяПримесьРасходВнутр                  = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ВесРасходВнутр, ВыборкаПоДоговорам.ВесПоСорнойПримесиРасходВнутр, 2);
					СтрокаТаблицыОборотов.ВесПоВлажностиРасходВнутр                 = ВыборкаПоДоговорам.ВесПоВлажностиРасходВнутр;
					СтрокаТаблицыОборотов.ВесПоСорнойПримесиРасходВнутр             = ВыборкаПоДоговорам.ВесПоСорнойПримесиРасходВнутр;
					
					// Отходы I категории
					СтрокаТаблицыОборотов.ФизическийВесОтходы1Категории             = ВыборкаПоДоговорам.ФизическийВесОтходы1Категории;
					СтрокаТаблицыОборотов.Влажность1Категории                       = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ФизическийВесОтходы1Категории, ВыборкаПоДоговорам.ВесПоВлажности1Категории, 2);
					СтрокаТаблицыОборотов.СорнаяПримесь1Категории                   = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ФизическийВесОтходы1Категории, ВыборкаПоДоговорам.ВесПоСорнойПримеси1Категории, 2);
					СтрокаТаблицыОборотов.ВесПоВлажности1Категории                  = ВыборкаПоДоговорам.ВесПоВлажности1Категории;
					СтрокаТаблицыОборотов.ВесПоСорнойПримеси1Категории              = ВыборкаПоДоговорам.ВесПоСорнойПримеси1Категории;

					// Отходы II категории
					СтрокаТаблицыОборотов.ФизическийВесОтходы2Категории             = ВыборкаПоДоговорам.ФизическийВесОтходы2Категории;
					СтрокаТаблицыОборотов.Влажность2Категории                       = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ФизическийВесОтходы2Категории, ВыборкаПоДоговорам.ВесПоВлажности2Категории, 2);
					СтрокаТаблицыОборотов.СорнаяПримесь2Категории                   = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ФизическийВесОтходы2Категории, ВыборкаПоДоговорам.ВесПоСорнойПримеси2Категории, 2);
					СтрокаТаблицыОборотов.ВесПоВлажности2Категории                  = ВыборкаПоДоговорам.ВесПоВлажности2Категории;
					СтрокаТаблицыОборотов.ВесПоСорнойПримеси2Категории              = ВыборкаПоДоговорам.ВесПоСорнойПримеси2Категории;
					
					// Отходы III категории
					СтрокаТаблицыОборотов.ФизическийВесОтходы3Категории             = ВыборкаПоДоговорам.ФизическийВесОтходы3Категории;
					СтрокаТаблицыОборотов.Влажность3Категории                       = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ФизическийВесОтходы3Категории, ВыборкаПоДоговорам.ВесПоВлажности3Категории, 2);
					СтрокаТаблицыОборотов.СорнаяПримесь3Категории                   = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ФизическийВесОтходы3Категории, ВыборкаПоДоговорам.ВесПоСорнойПримеси3Категории, 2);
					СтрокаТаблицыОборотов.ВесПоВлажности3Категории                  = ВыборкаПоДоговорам.ВесПоВлажности3Категории;
					СтрокаТаблицыОборотов.ВесПоСорнойПримеси3Категории              = ВыборкаПоДоговорам.ВесПоСорнойПримеси3Категории;

					// Побочный продукт
					СтрокаТаблицыОборотов.ФизическийВесПобочногоПродукта            = ВыборкаПоДоговорам.ФизическийВесПобочногоПродукта;
					СтрокаТаблицыОборотов.ВлажностьПобочногоПродукта                = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ФизическийВесПобочногоПродукта, ВыборкаПоДоговорам.ВесПоВлажностиПобочногоПродукта, 2);
					СтрокаТаблицыОборотов.СорнаяПримесьПобочногоПродукта            = ИНАГРО_Элеватор.Процент(ВыборкаПоДоговорам.ФизическийВесПобочногоПродукта, ВыборкаПоДоговорам.ВесПоСорнойПримесиПобочногоПродукта, 2);
					СтрокаТаблицыОборотов.ВесПоВлажностиПобочногоПродукта           = ВыборкаПоДоговорам.ВесПоВлажностиПобочногоПродукта;
					СтрокаТаблицыОборотов.ВесПоСорнойПримесиПобочногоПродукта       = ВыборкаПоДоговорам.ВесПоСорнойПримесиПобочногоПродукта;
					
					// Прочие					
					СтрокаТаблицыОборотов.УбыльВесаПриСушке                         = ВыборкаПоДоговорам.УбыльВесаПриСушке;
					СтрокаТаблицыОборотов.УбыльПоВлажности                          = ВыборкаПоДоговорам.УбыльПоВлажности;
					СтрокаТаблицыОборотов.ПовышениеПоВлажности                      = ВыборкаПоДоговорам.ПовышениеПоВлажности;
					СтрокаТаблицыОборотов.УбыльПоСорнойПримеси                      = ВыборкаПоДоговорам.УбыльПоСорнойПримеси;
					СтрокаТаблицыОборотов.ПовышениеПоСорнойПримеси                  = ВыборкаПоДоговорам.ПовышениеПоСорнойПримеси;
					СтрокаТаблицыОборотов.УбыльПоЕстественной                       = ВыборкаПоДоговорам.УбыльПоЕстественной;
					СтрокаТаблицыОборотов.УбыльПоПрочей                             = ВыборкаПоДоговорам.УбыльПоПрочей;					
					СтрокаТаблицыОборотов.Остаток37                                 = ВыборкаПоДоговорам.Остаток37;
										
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТаблицаОборотов;
	
КонецФункции

&НаСервере
Функция СоздатьТаблицуПоОборотам()
	
	СтруктураКолонок = Новый Структура(
		"Владелец, ДоговорКонтрагента, Регистратор,
		|ВесПриходНачальныйОстаток, ВесПоВлажностиНачальныйОстаток, ВесПоСорнойПримесиНачальныйОстаток, ВесПоЗерновойПримесиНачальныйОстаток,
		|ВлажностьОстаткаНаНачало, СорнаяПримесьОстаткаНаНачало, ЗерноваяПримесьОстаткаНаНачало,
		|ВесПриход, ВесПоВлажностиПриход, ВесПоСорнойПримесиПриход, ВесПоЗерновойПримесиПриход, ВлажностьПриход, СорнаяПримесьПриход, ЗерноваяПримесьПриход,
		|ВесПриходПереоформление, ВлажностьПриходПереоформление, СорнаяПримесьПриходПереоформление, ВесПоВлажностиПриходПереоформление, 
		|ВесПоСорнойПримесиПриходПереоформление, ВесПоЗерновойПримесиПриходПереоформление,
		|ВесПриходВнутр, ВесПоВлажностиПриходВнутр, ВесПоСорнойПримесиПриходВнутр, ВесПоЗерновойПримесиПриходВнутр, ВлажностьПриходВнутр, СорнаяПримесьПриходВнутр,
		|ВесРасход, ВесПоВлажностиРасход, ВесПоСорнойПримесиРасход, ВесПоЗерновойПримесиРасход, ВлажностьРасход, 
		|СорнаяПримесьРасход, ЗерноваяПримесьРасход,
		|ВесРасходПереоформление, ВлажностьРасходПереоформление, СорнаяПримесьРасходПереоформление, ВесПоВлажностиРасходПереоформление, ВесПоСорнойПримесиРасходПереоформление,
		|ВесРасходРеализация, ВлажностьРасходРеализация, СорнаяПримесьРасходРеализация, ВесПоВлажностиРасходРеализация, ВесПоСорнойПримесиРасходРеализация,
		|ВесРасходВнутр, ВесПоВлажностиРасходВнутр, ВесПоСорнойПримесиРасходВнутр, ВлажностьРасходВнутр, СорнаяПримесьРасходВнутр,
		|ВесПриходБезПереоформления, ВесПоВлажностиПриходБезПереоформления, ВесПоСорнойПримесиПриходБезПереоформления, ВесПоЗерновойПримесиПриходБезПереоформления,
		|ВлажностьПриходБезПереоформления, СорнаяПримесьПриходБезПереоформления,
		|ФизическийВесОтходы1Категории, ФизическийВесОтходы2Категории, ФизическийВесОтходы3Категории,		
		|Влажность1Категории, Влажность2Категории, Влажность3Категории, СорнаяПримесь1Категории, СорнаяПримесь2Категории, СорнаяПримесь3Категории,
		|ВесПоВлажности1Категории, ВесПоВлажности2Категории, ВесПоВлажности3Категории, ВесПоСорнойПримеси1Категории, ВесПоСорнойПримеси2Категории, ВесПоСорнойПримеси3Категории,
		|ФизическийВесПобочногоПродукта, ВлажностьПобочногоПродукта, СорнаяПримесьПобочногоПродукта, ВесПоВлажностиПобочногоПродукта, ВесПоСорнойПримесиПобочногоПродукта,
		|УбыльВесаПриСушке, УбыльПоВлажности, ПовышениеПоВлажности, УбыльПоСорнойПримеси, ПовышениеПоСорнойПримеси,УбыльПоПрочей, УбыльПоЕстественной,     
		|Остаток37
		|");
	                                                                                   
	ТаблицаОборотов = Новый ТаблицаЗначений;	
	
	Для Каждого ЭлементСтруктуры Из СтруктураКолонок цикл
		ТаблицаОборотов.Колонки.Добавить(ЭлементСтруктуры.Ключ);
	КонецЦикла;
	
	Возврат ТаблицаОборотов;
	
КонецФункции

&НаСервере
Функция Процент(ФизическийВес, ВесПоВлажности)
	
	Если ФизическийВес = 0 Тогда
		Возврат 0;
	Иначе
		Возврат ВесПоВлажности * 100 / ФизическийВес;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура НастройкаПериодов()
	
	Объект.ДатаНачала      = НачалоДня(Объект.ДатаНачала);
	Объект.ДатаОкончания   = КонецДня(Объект.ДатаОкончания);
	
	Объект.НачалоПриход    = НачалоДня(Объект.НачалоПриход);
	Объект.ОкончаниеПриход = ?(Объект.ОкончаниеПриход = '00010101', Объект.ОкончаниеПриход, КонецДня(Объект.ОкончаниеПриход));
	
	Объект.НачалоРасход    = НачалоДня(Объект.НачалоРасход);
	Объект.ОкончаниеРасход = ?(Объект.ОкончаниеРасход = '00010101', Объект.ОкончаниеРасход, КонецДня(Объект.ОкончаниеРасход));
	
КонецПроцедуры

&НаСервере
Функция СформироватьСтруктуруПараметровОтбора(ИмяФормыОтчета = "")
		
	СтруктураПараметровОтбора = Новый Структура;	
	СтруктураПараметровОтбора.Вставить("Номенклатура", Объект.Номенклатура);
	СтруктураПараметровОтбора.Вставить("Владелец",     Справочники.Контрагенты.ПустаяСсылка());
	СтруктураПараметровОтбора.Вставить("Организация",  Объект.Организация);
	СтруктураПараметровОтбора.Вставить("Склад",        Объект.Склад);
	СтруктураПараметровОтбора.Вставить("Урожай",       Объект.Урожай);
	Если НЕ НеВестиУчетПоВидуХраненияВККУ Тогда
		СтруктураПараметровОтбора.Вставить("ВидХранения", Объект.ВидХранения);
	КонецЕсли;
       
    СтруктураПараметровОтбора.Вставить("ПериодОтчета",  Новый СтандартныйПериод(Объект.ДатаНачала,Объект.ДатаОкончания));
	
	Возврат СтруктураПараметровОтбора;
	
КонецФункции

&НаСервере
Функция ВернутьНастройкиКомпоновщика(ИмяОтчета, ИмяФормыОтчета, ИмяВариантаОтчета)
        
    ОтчетОбъект               = Отчеты[ИмяОтчета].Создать();
    НовыйКомпоновщикНастроек  = Новый КомпоновщикНастроекКомпоновкиДанных;
    НовыйКомпоновщикНастроек.ЗагрузитьНастройки(ОтчетОбъект.СхемаКомпоновкиДанных.ВариантыНастроек[ИмяВариантаОтчета].Настройки);
    
    СтруктуруОтбораПараметров = СформироватьСтруктуруПараметровОтбора(ИмяФормыОтчета);
    ВложенныйОтчет            = НовыйКомпоновщикНастроек.Настройки.Структура.Количество() = 1;
    ПользовательскиеНастройки = Отчеты.ИНАГРО_УниверсальныйАнализЗерна.ЗаполнитьПользовательскиеНастройкиОтчета(НовыйКомпоновщикНастроек, СтруктуруОтбораПараметров, ВложенныйОтчет);
    
    Возврат ПользовательскиеНастройки;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП
 
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти