#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Макет
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Макет";
	КомандаПечати.Представление = НСтр("ru = 'Акт зачистки (ф. №30)'; uk = 'Акт зачистки (ф. №30)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// ВедомостьПроверки
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВедомостьПроверки";
	КомандаПечати.Представление = НСтр("ru = 'Ведомость проверки'; uk = 'Відомість перевірки'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// РасшифровкаПоВладельцам
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РасшифровкаПоВладельцам";
	КомандаПечати.Представление = НСтр("ru = 'Расшифровка по владельцам'; uk = 'Розшифровка по власникам'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// РасшифровкаПоВладельцам
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РасчетСреднегоСтрокаХранения";
	КомандаПечати.Представление = НСтр("ru = 'Расчет среднего срока хранения'; uk = 'Розрахунок середнього терміну зберігання'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// Форма 30 2021
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Форма30_2021";
	КомандаПечати.Представление = "Акт зачистки (ф. №30) 2021";
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Акт зачистки""';uk='Реєстр документів ""Акт зачистки""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
				
КонецПроцедуры	

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Макет") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Макет", НСтр("ru = 'Акт Зачистки'; uk = 'Акт Зачистки'"), 
		ПечатьМакет(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_АктЗачистки.ПФ_MXL_Макет", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВедомостьПроверки") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ВедомостьПроверки", НСтр("ru = 'Ведомость Проверки'; uk = 'Відомість перевірки'"), 
		ПечатьВедомостьПроверки(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_АктЗачистки.ПФ_MXL_ВедомостьПроверки", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасшифровкаПоВладельцам") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РасшифровкаПоВладельцам", НСтр("ru = 'Расшифровка По Владельцам'; uk = 'Розшифровка За Власниками'"), 
		ПечатьРасшифровкаПоВладельцам(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_АктЗачистки.ПФ_MXL_РасшифровкаПоВладельцам", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасчетСреднегоСтрокаХранения") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РасчетСреднегоСтрокаХранения", НСтр("ru = 'Расчет Среднего Срока Хранения'; uk = 'Розрахунок Середнього Терміну Зберігання'"), 
		ПечатьРасчетСреднегоСтрокаХранения(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_АктЗачистки.ПФ_MXL_РасчетСреднегоСтрокаХранения", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Форма30_2021") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Форма30_2021", "Акт зачистки (ф. №30) 2021", 
		ПечатьФорма30_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_АктЗачистки.ПФ_MXL_UK_Форма30_2021", , Истина);
		
	КонецЕсли; 	

КонецПроцедуры

Функция ПечатьМакет(МассивОбъектов, ОбъектыПечати, ПараметрыВывода, ВыводитьСписокАктов = Истина)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_АктЗачистки.ПФ_MXL_Макет";
	
	Макет = ПолучитьМакет("ПФ_MXL_Макет");
	
	// Регламентированная печ. форма
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ИНАГРО_АктЗачистки.Номер КАК Номер,
	               |	ИНАГРО_АктЗачистки.ФизическийВес1 КАК ФизическийВес1,
	               |	ИНАГРО_АктЗачистки.НачалоПриход КАК НачалоПриход,
	               |	ИНАГРО_АктЗачистки.НачалоРасход КАК НачалоРасход,
	               |	ИНАГРО_АктЗачистки.ОкончаниеПриход КАК КонецПриход,
	               |	ИНАГРО_АктЗачистки.ОкончаниеРасход КАК КонецРасход,
	               |	ИНАГРО_АктЗачистки.ФизическийВес7 КАК ФизическийВес7,
	               |	ИНАГРО_АктЗачистки.ФизическийВес9 КАК ФизическийВес9,
	               |	ИНАГРО_АктЗачистки.Дата КАК Дата,
	               |	ИНАГРО_АктЗачистки.Склад КАК Склад,
	               |	ИНАГРО_АктЗачистки.Организация КАК Организация,
	               |	ИНАГРО_АктЗачистки.ФизическийВес8 КАК ФизическийВес8,
	               |	ИНАГРО_АктЗачистки.ФизическийВес3 КАК ФизическийВес3,
	               |	ИНАГРО_АктЗачистки.ФизическийВес2 КАК ФизическийВес2,
	               |	ИНАГРО_АктЗачистки.Ссылка КАК Ссылка,
	               |	ИНАГРО_АктЗачистки.П15 КАК П15,
	               |	ИНАГРО_АктЗачистки.СрокХраненияДней КАК СрокХраненияДней,
	               |	ИНАГРО_АктЗачистки.СрокХраненияМесяцев КАК СрокХраненияМесяцев,
	               |	ИНАГРО_АктЗачистки.УбыльВлажности КАК УбыльВлажности,
	               |	ИНАГРО_АктЗачистки.УбыльПоВлажности КАК УбыльПоВлажности,
	               |	ИНАГРО_АктЗачистки.УбыльВсего КАК УбыльВсего,
	               |	ИНАГРО_АктЗачистки.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
	               |	ИНАГРО_АктЗачистки.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
	               |	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тПросушено КАК тПросушено,
	               |	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тОчищено КАК тОчищено,
	               |	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тВесПоВлажности5 КАК тВесПоВлажности5,
	               |	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тВесПоВлажности6 КАК тВесПоВлажности6,
	               |	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тФизическийВес6 КАК тФизическийВес6,
	               |	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тФизическийВес5 КАК тФизическийВес5,
	               |	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тФизическийВес КАК тФизическийВес,
	               |	ИНАГРО_АктЗачистки.УбыльПоСорнойПримеси КАК УбыльПоСорнойПримеси,
	               |	ИНАГРО_АктЗачистки.УбыльСорнойПримеси КАК УбыльСорнойПримеси,
	               |	ИНАГРО_АктЗачистки.УбыльПоЕстественной КАК УбыльПоЕстественной,
	               |	ИНАГРО_АктЗачистки.УбыльЕстественная КАК УбыльЕстественная,
	               |	ИНАГРО_АктЗачистки.ВидХранения КАК ВидХранения,
	               |	ИНАГРО_АктЗачистки.Урожай КАК Урожай,
	               |	ИНАГРО_АктЗачистки.Влажность1 КАК Влажность1,
	               |	ИНАГРО_АктЗачистки.Влажность2 КАК Влажность2,
	               |	ИНАГРО_АктЗачистки.Влажность3 КАК Влажность3,
	               |	ИНАГРО_АктЗачистки.Влажность4 КАК Влажность4,
	               |	ИНАГРО_АктЗачистки.Влажность5 КАК Влажность5,
	               |	ИНАГРО_АктЗачистки.Влажность6 КАК Влажность6,
	               |	ИНАГРО_АктЗачистки.Влажность7 КАК Влажность7,
	               |	ИНАГРО_АктЗачистки.Влажность9 КАК Влажность9,
	               |	ИНАГРО_АктЗачистки.Влажность8 КАК Влажность8,
	               |	ИНАГРО_АктЗачистки.СорнаяПримесь1 КАК СорнаяПримесь1,
	               |	ИНАГРО_АктЗачистки.СорнаяПримесь2 КАК СорнаяПримесь2,
	               |	ИНАГРО_АктЗачистки.СорнаяПримесь3 КАК СорнаяПримесь3,
	               |	ИНАГРО_АктЗачистки.СорнаяПримесь4 КАК СорнаяПримесь4,
	               |	ИНАГРО_АктЗачистки.СорнаяПримесь5 КАК СорнаяПримесь5,
	               |	ИНАГРО_АктЗачистки.СорнаяПримесь6 КАК СорнаяПримесь6,
	               |	ИНАГРО_АктЗачистки.СорнаяПримесь7 КАК СорнаяПримесь7,
	               |	ИНАГРО_АктЗачистки.СорнаяПримесь8 КАК СорнаяПримесь8,
	               |	ИНАГРО_АктЗачистки.СорнаяПримесь9 КАК СорнаяПримесь9,
	               |	ИНАГРО_АктЗачистки.ФизическийВес6 КАК ФизическийВес6,
	               |	ИНАГРО_АктЗачистки.ФизическийВес4 КАК ФизическийВес4,
	               |	ИНАГРО_АктЗачистки.ДатаНачала КАК ДатаНачала,
	               |	ИНАГРО_АктЗачистки.ДатаОкончания КАК ДатаОкончания,
	               |	ИНАГРО_АктЗачистки.Конец2 КАК Конец,
	               |	ИНАГРО_АктЗачистки.УбыльПоПрочей КАК УбыльПрочая,
	               |	ИНАГРО_АктЗачистки.П16 КАК П16,
	               |	ИНАГРО_АктЗачистки.П17 КАК П17
	               |ИЗ
	               |	Документ.ИНАГРО_АктЗачистки КАК ИНАГРО_АктЗачистки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_АктЗачистки.АктыСушкиИОчистки КАК ИНАГРО_АктЗачисткиАктыСушкиИОчистки
	               |		ПО (ИНАГРО_АктЗачисткиАктыСушкиИОчистки.Ссылка = ИНАГРО_АктЗачистки.Ссылка)
	               |ГДЕ
	               |	ИНАГРО_АктЗачистки.Ссылка В(&МассивОбъектов)
	               |ИТОГИ
	               |	МАКСИМУМ(ФизическийВес1),
	               |	МАКСИМУМ(НачалоПриход),
	               |	МАКСИМУМ(НачалоРасход),
	               |	МАКСИМУМ(КонецПриход),
	               |	МАКСИМУМ(КонецРасход),
	               |	МИНИМУМ(ФизическийВес7),
	               |	МАКСИМУМ(ФизическийВес9),
	               |	МАКСИМУМ(Дата),
	               |	МАКСИМУМ(Склад),
	               |	МАКСИМУМ(ФизическийВес8),
	               |	МАКСИМУМ(ФизическийВес3),
	               |	МАКСИМУМ(ФизическийВес2),
	               |	МАКСИМУМ(П15),
	               |	МАКСИМУМ(СрокХраненияДней),
	               |	МАКСИМУМ(УбыльВлажности),
	               |	МАКСИМУМ(УбыльПоВлажности),
	               |	МАКСИМУМ(УбыльВсего),
	               |	СУММА(тПросушено),
	               |	СУММА(тОчищено),
	               |	СУММА(тВесПоВлажности5),
	               |	СУММА(тВесПоВлажности6),
	               |	СУММА(тФизическийВес6),
	               |	СУММА(тФизическийВес5),
	               |	СУММА(тФизическийВес),
	               |	МАКСИМУМ(УбыльПоСорнойПримеси),
	               |	МАКСИМУМ(УбыльСорнойПримеси),
	               |	МАКСИМУМ(УбыльПоЕстественной),
	               |	МАКСИМУМ(УбыльЕстественная),
	               |	МАКСИМУМ(ФизическийВес6),
	               |	МАКСИМУМ(ФизическийВес4),
	               |	МАКСИМУМ(ДатаНачала),
	               |	МАКСИМУМ(ДатаОкончания),
	               |	МАКСИМУМ(УбыльПрочая)
	               |ПО
	               |	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);	
	
	ВыборкаСсылка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаСсылка.Следующий()Цикл
		
		ОблШапка = Макет.ПолучитьОбласть("Шапка");
		ОблШапка.Параметры.Фирма = ВыборкаСсылка.ОрганизацияНаименованиеПолное;
		ОблШапка.Параметры.НомерДок = ВыборкаСсылка.Номер;
		ОблШапка.Параметры.Заполнить(ВыборкаСсылка);
		ОблШапка.Параметры.ДатаДок = Формат(ВыборкаСсылка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		ОблШапка.Параметры.ТМЦ = ВыборкаСсылка.НоменклатураНаименованиеПолное;
		ОблШапка.Параметры.Начало = Формат(ВыборкаСсылка.ДатаНачала, "ДЛФ=D");
		ОблШапка.Параметры.Начало1 = Формат(ВыборкаСсылка.НачалоПриход, "ДЛФ=D");
		ОблШапка.Параметры.Конец1 = Формат(ВыборкаСсылка.КонецПриход, "ДЛФ=D");
		ОблШапка.Параметры.Начало2 = Формат(ВыборкаСсылка.НачалоРасход, "ДЛФ=D");
		ОблШапка.Параметры.Конец2 = Формат(ВыборкаСсылка.КонецРасход, "ДЛФ=D");
		ОблШапка.Параметры.Конец = Формат(ВыборкаСсылка.ДатаОкончания, "ДЛФ=D");
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(ВыборкаСсылка.Организация, ВыборкаСсылка.Дата);
		ОблШапка.Параметры.Руководитель = Руководители.Руководитель;
		ОблШапка.Параметры.НачальникВТЛ = Руководители.НачальникВТЛ;
		ОблШапка.Параметры.ГлавныйБухгалтер = Руководители.ГлавныйБухгалтер;
		ДанныеОтветственногоЛица = Неопределено;
		ЗавСкладом = ИНАГРО_Элеватор.ОтветственныеЛица(ВыборкаСсылка.Организация, ВыборкаСсылка.Дата, ВыборкаСсылка.Склад, ДанныеОтветственногоЛица);
		ОблШапка.Параметры.ЗавСкладом = ДанныеОтветственногоЛица.ФИО;
		Если НЕ ДанныеОтветственногоЛица = Неопределено Тогда
			ОблШапка.Параметры.ДолжностьЗавСкладом = ДанныеОтветственногоЛица.Должность;
		КонецЕсли;
		ОблШапка.Параметры.НедостачаОстаток = ?(ВыборкаСсылка.ФизическийВес9 < 0, "(" + ВыборкаСсылка.ФизическийВес9 + ")", ВыборкаСсылка.ФизическийВес9);
		ОблШапка.Параметры.ВесПовышенияВсего = "";
		ТабДокумент.Вывести(ОблШапка);
		
		// ШАПКА
		
		ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
		
		ОблДно = Макет.ПолучитьОбласть("Дно");
		ОблДно.Параметры.Заполнить(ВыборкаСсылка);
		
		ТабЧастьАктыСушкиИОчистки = ВыборкаСсылка.Ссылка.АктыСушкиИОчистки;
		
		//ВывестиТаблицуАктовОчисткиСушки(ТабДокумент, МассивОбъектов, Макет, ?(ТабЧастьАктыСушкиИОчистки.Количество() > 10, Ложь, Истина));
		
		ОблШапкаАктовОчисткиСушки = Макет.ПолучитьОбласть("ШапкаАктовОчисткиСушки");
		ТабДокумент.Вывести(ОблШапкаАктовОчисткиСушки);
		ОблСтрока = Макет.ПолучитьОбласть("СтрокаАктовОчисткиСушки");
		//
		ТабЧасть = ТабЧастьАктыСушкиИОчистки.Выгрузить();
		Усушка = 0;
		Если ВыводитьСписокАктов Тогда
			Для Каждого	Стр Из ТабЧасть Цикл
				ОблСтрока.Параметры.АктНомерДок = ИНАГРО_Общий.ВернутьКодБезПрефикса(Стр.Акт.Номер);
				ОблСтрока.Параметры.АктДатаДок = Формат(Стр.Акт.Дата, "ДЛФ=D");
				Если ТипЗнч(Стр.Акт)=Тип("ДокументСсылка.ИНАГРО_Форма34Сводная") Тогда
					ОблСтрока.Параметры.Агрегат = Стр.ВидОчистки;
				ИначеЕсли ТипЗнч(Стр.Акт)=Тип("ДокументСсылка.ИНАГРО_АктРаспределения") Тогда
					ОблСтрока.Параметры.Агрегат = Стр.ВидОчистки;
				КонецЕсли;
				ОблСтрока.Параметры.Заполнить(Стр);
				Усушка = Усушка + Стр.тУбыльОтСушки;
				ТабДокумент.Вывести(ОблСтрока);
			КонецЦикла;
		Иначе
			ОблСтрока.Параметры.Агрегат = "Див. додаток";
			ТабДокумент.Вывести(ОблСтрока);
		КонецЕсли;
		
		ОблДноАктовОчисткиСушки = Макет.ПолучитьОбласть("ДноАктовОчисткиСушки");
		Если ВыводитьСписокАктов Тогда
			ОблДноАктовОчисткиСушки.Параметры.Заполнить(ВыборкаСсылка);
			ОблДноАктовОчисткиСушки.Параметры.тОчищеноВсего 	   = ТабЧасть.Итог("тОчищено");
			ОблДноАктовОчисткиСушки.Параметры.тПросушеноВсего 	   = ТабЧасть.Итог("тПросушено");
			ОблДноАктовОчисткиСушки.Параметры.тФизическийВес5Всего = ТабЧасть.Итог("тФизическийВес5");
			ОблДноАктовОчисткиСушки.Параметры.тФизическийВес6Всего = ТабЧасть.Итог("тФизическийВес6");
			ТабДокумент.Вывести(ОблДноАктовОчисткиСушки);
		КонецЕсли;
		
		СреднийСрокХранения_ = ВыборкаСсылка.СрокХраненияМесяцев * 30 + ВыборкаСсылка.СрокХраненияДней;
		СтруктураПредставлениеСреднегоСрокаХранения = ПолучитьПредставлениеСреднегоСрокаХранения(СреднийСрокХранения_, КодЯзыкаПечать);
		ОблДно.Параметры.ПредставлениеСрокаХранения = СтруктураПредставлениеСреднегоСрокаХранения.ПредставлениеСрокаХранения;
		УбыльВсегоФактическая = ВыборкаСсылка.ФизическийВес9;
		Если УбыльВсегоФактическая > ВыборкаСсылка.УбыльПоВлажности Тогда
			ОблДно.Параметры.УбыльВлажностиФактическая 		= ВыборкаСсылка.УбыльВлажности;
			ОблДно.Параметры.УбыльПоВлажностиФактическая 	= ВыборкаСсылка.УбыльПоВлажности;		
			УбыльВсегоФактическая = ВыборкаСсылка.ФизическийВес9 - ВыборкаСсылка.УбыльПоВлажности;
			Если УбыльВсегоФактическая > ВыборкаСсылка.УбыльПоСорнойПримеси Тогда			
				ОблДно.Параметры.УбыльСорнойПримесиФактическая	= ВыборкаСсылка.УбыльСорнойПримеси;
				ОблДно.Параметры.УбыльПоСорнойПримесиФактическая = ВыборкаСсылка.УбыльПоСорнойПримеси;			
				УбыльВсегоФактическая = УбыльВсегоФактическая - ВыборкаСсылка.УбыльПоСорнойПримеси;
				Если УбыльВсегоФактическая > ВыборкаСсылка.УбыльПоЕстественной Тогда
					ОблДно.Параметры.УбыльЕстественнаяФактическая	= ВыборкаСсылка.УбыльЕстественная;			
					ОблДно.Параметры.УбыльПоЕстественнойФактическая = ВыборкаСсылка.УбыльПоЕстественной;
					ОблДно.Параметры.УбыльПрочаяФактическая = УбыльВсегоФактическая - ВыборкаСсылка.УбыльПоЕстественной;				
				Иначе
					ОблДно.Параметры.УбыльЕстественнаяФактическая	= ?(ВыборкаСсылка.ФизическийВес8=0, 0, Окр(УбыльВсегоФактическая * 100 / ВыборкаСсылка.ФизическийВес8, 3));
					ОблДно.Параметры.УбыльПоЕстественнойФактическая = УбыльВсегоФактическая;
				КонецЕсли
			Иначе
				УбыльПоСорнойПримесиФактическая = УбыльВсегоФактическая;
				ОблДно.Параметры.УбыльСорнойПримесиФактическая	= ?(ВыборкаСсылка.ФизическийВес3=0, 0, Окр(УбыльПоСорнойПримесиФактическая * 100 / ВыборкаСсылка.ФизическийВес3, 2));
				ОблДно.Параметры.УбыльПоСорнойПримесиФактическая = УбыльПоСорнойПримесиФактическая;			
			КонецЕсли;		
		Иначе
			ОблДно.Параметры.УбыльВлажностиФактическая 		= ?(ВыборкаСсылка.ФизическийВес3=0, 0, Окр(УбыльВсегоФактическая * 100 / ВыборкаСсылка.ФизическийВес3, 2));
			ОблДно.Параметры.УбыльПоВлажностиФактическая 	= УбыльВсегоФактическая;		
		КонецЕсли;
		
		ОблДно.Параметры.УбыльВсегоФактическая = ВыборкаСсылка.ФизическийВес9;
		
		ОблДно.Параметры.УбыльВсего = ВыборкаСсылка.УбыльВсего;
		Разница = ВыборкаСсылка.ФизическийВес9 - ВыборкаСсылка.УбыльВсего;
		Если СокрЛП(ВыборкаСсылка.п15) = "" Тогда
			ОблДно.Параметры.ТекстРазница = НСтр("ru='Остается неоправданная недостача ';uk='Залишається невиправдана недостача '",КодЯзыкаПечать) + ?(Разница > 0, Разница, "___________") + "кг.";
		Иначе
			ОблДно.Параметры.ТекстРазница = СокрЛП(ВыборкаСсылка.п15);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОблДно);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОблЗаголовокАктовОчисткиСушки = Макет.ПолучитьОбласть("ЗаголовокАктовОчисткиСушки");
		ОблЗаголовокАктовОчисткиСушки.Параметры.НомерДок = ВыборкаСсылка.Номер;
		ОблЗаголовокАктовОчисткиСушки.Параметры.ДатаДок = Формат(ВыборкаСсылка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));				
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбратнаяСторона = Макет.ПолучитьОбласть("ОбратнаяСторона");
		ОбратнаяСторона.Параметры.Заполнить(ВыборкаСсылка);
		ТабДокумент.ПолеСверху 	= 5;
		ТабДокумент.ПолеСнизу 	= 5;
		ТабДокумент.Вывести(ОбратнаяСторона);
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

Функция ПечатьФорма30_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода, ВыводитьСписокАктов = Истина)
	
	УстановитьПривилегированныйРежим(Истина);
		
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_АктЗачистки.Номер КАК Номер,
		|	ИНАГРО_АктЗачистки.ФизическийВес1 КАК ФизическийВес1,
		|	ИНАГРО_АктЗачистки.НачалоПриход КАК НачалоПриход,
		|	ИНАГРО_АктЗачистки.НачалоРасход КАК НачалоРасход,
		|	ИНАГРО_АктЗачистки.ОкончаниеПриход КАК КонецПриход,
		|	ИНАГРО_АктЗачистки.ОкончаниеРасход КАК КонецРасход,
		|	ИНАГРО_АктЗачистки.ФизическийВес7 КАК ФизическийВес7,
		|	ИНАГРО_АктЗачистки.ФизическийВес9 КАК ФизическийВес9,
		|	ИНАГРО_АктЗачистки.Дата КАК Дата,
		|	ИНАГРО_АктЗачистки.Склад КАК Склад,
		|	ИНАГРО_АктЗачистки.Организация КАК Организация,
		|	ИНАГРО_АктЗачистки.ФизическийВес8 КАК ФизическийВес8,
		|	ИНАГРО_АктЗачистки.ФизическийВес3 КАК ФизическийВес3,
		|	ИНАГРО_АктЗачистки.ФизическийВес2 КАК ФизическийВес2,
		|	ИНАГРО_АктЗачистки.Ссылка КАК Ссылка,
		|	ИНАГРО_АктЗачистки.П15 КАК П15,
		|	ИНАГРО_АктЗачистки.СрокХраненияДней КАК СрокХраненияДней,
		|	ИНАГРО_АктЗачистки.СрокХраненияМесяцев КАК СрокХраненияМесяцев,
		|	ИНАГРО_АктЗачистки.УбыльВлажности КАК УбыльВлажности,
		|	ИНАГРО_АктЗачистки.УбыльПоВлажности КАК УбыльПоВлажности,
		|	ИНАГРО_АктЗачистки.УбыльВсего КАК УбыльВсего,
		|	ИНАГРО_АктЗачистки.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
		|	ИНАГРО_АктЗачистки.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тПросушено КАК тПросушено,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тОчищено КАК тОчищено,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тВесПоВлажности5 КАК тВесПоВлажности5,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тВесПоВлажности6 КАК тВесПоВлажности6,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тФизическийВес6 КАК тФизическийВес6,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тФизическийВес5 КАК тФизическийВес5,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тФизическийВес КАК тФизическийВес,
		|	ИНАГРО_АктЗачистки.УбыльПоСорнойПримеси КАК УбыльПоСорнойПримеси,
		|	ИНАГРО_АктЗачистки.УбыльСорнойПримеси КАК УбыльСорнойПримеси,
		|	ИНАГРО_АктЗачистки.УбыльПоЕстественной КАК УбыльПоЕстественной,
		|	ИНАГРО_АктЗачистки.УбыльЕстественная КАК УбыльЕстественная,
		|	ИНАГРО_АктЗачистки.ВидХранения КАК ВидХранения,
		|	ИНАГРО_АктЗачистки.Урожай КАК Урожай,
		|	ИНАГРО_АктЗачистки.Влажность1 КАК Влажность1,
		|	ИНАГРО_АктЗачистки.Влажность2 КАК Влажность2,
		|	ИНАГРО_АктЗачистки.Влажность3 КАК Влажность3,
		|	ИНАГРО_АктЗачистки.Влажность4 КАК Влажность4,
		|	ИНАГРО_АктЗачистки.Влажность5 КАК Влажность5,
		|	ИНАГРО_АктЗачистки.Влажность6 КАК Влажность6,
		|	ИНАГРО_АктЗачистки.Влажность7 КАК Влажность7,
		|	ИНАГРО_АктЗачистки.Влажность9 КАК Влажность9,
		|	ИНАГРО_АктЗачистки.Влажность8 КАК Влажность8,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь1 КАК СорнаяПримесь1,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь2 КАК СорнаяПримесь2,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь3 КАК СорнаяПримесь3,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь4 КАК СорнаяПримесь4,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь5 КАК СорнаяПримесь5,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь6 КАК СорнаяПримесь6,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь7 КАК СорнаяПримесь7,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь8 КАК СорнаяПримесь8,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь9 КАК СорнаяПримесь9,
		|	ИНАГРО_АктЗачистки.ФизическийВес5 КАК ФизическийВес5,
		|	ИНАГРО_АктЗачистки.ФизическийВес6 КАК ФизическийВес6,
		|	ИНАГРО_АктЗачистки.ФизическийВес4 КАК ФизическийВес4,
		|	ИНАГРО_АктЗачистки.ДатаНачала КАК ДатаНачала,
		|	ИНАГРО_АктЗачистки.ДатаОкончания КАК ДатаОкончания,
		|	ИНАГРО_АктЗачистки.Конец2 КАК Конец,
		|	ИНАГРО_АктЗачистки.УбыльПоПрочей КАК УбыльПрочая,
		|	ИНАГРО_АктЗачистки.П16 КАК П16,
		|	ИНАГРО_АктЗачистки.П17 КАК П17
		|ИЗ
		|	Документ.ИНАГРО_АктЗачистки КАК ИНАГРО_АктЗачистки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_АктЗачистки.АктыСушкиИОчистки КАК ИНАГРО_АктЗачисткиАктыСушкиИОчистки
		|		ПО (ИНАГРО_АктЗачисткиАктыСушкиИОчистки.Ссылка = ИНАГРО_АктЗачистки.Ссылка)
		|ГДЕ
		|	ИНАГРО_АктЗачистки.Ссылка В(&МассивОбъектов)
		|ИТОГИ
		|	СУММА(тПросушено),
		|	СУММА(тОчищено),
		|	СУММА(тВесПоВлажности5),
		|	СУММА(тВесПоВлажности6),
		|	СУММА(тФизическийВес6),
		|	СУММА(тФизическийВес5),
		|	СУММА(тФизическийВес)
		|ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);	
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_АктЗачистки.ПФ_MXL_UK_Форма30_2021";
	ТабДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет; 
	ТабДокумент.АвтоМасштаб         = Истина;

	Макет = ПолучитьМакет("ПФ_MXL_UK_Форма30_2021");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;

	Пока Выборка.Следующий()Цикл
		
		СведенияООтправителе     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
		Руководители             = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизацииИмяФамилия(Выборка.Организация, Выборка.Дата);
		//ДолжностьРуководителя    = Руководители.ДолжностьРуководителя;
		Руководитель             = Руководители.Руководитель;
		ГлавныйБухгалтер         = Руководители.ГлавныйБухгалтер;
		ГлавныйИнженер           = Руководители.ГлавныйИнженер;
		НачальникВТЛ             = Руководители.НачальникВТЛ;		
		ДанныеОтветственногоЛица = Неопределено;		
		ЗавСкладом               = ИНАГРО_Элеватор.ОтветственныеЛицаИмяФамилия(Выборка.Организация, Выборка.Дата, Выборка.Склад, ДанныеОтветственногоЛица);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.ЄДРПОУ                = СведенияООтправителе.КодПоЕДРПОУ; 
		Шапка.Параметры.Организация           = Выборка.Организация.НаименованиеПолное;
		Шапка.Параметры.День                  = Формат(Выборка.Дата, "ДФ=дд");
		Шапка.Параметры.Месяц                 = Сред(Формат(Выборка.Дата, "ДФ='дд ММММ';Л=uk"), 3);
		Шапка.Параметры.Год                   = Формат(Выборка.Дата, "ДФ=гг");
		
		//Шапка.Параметры.ДолжностьРуководителя = ДолжностьРуководителя; 
		Шапка.Параметры.Руководитель          = Руководитель;
		Шапка.Параметры.ГлавныйБухгалтер      = ГлавныйБухгалтер; 
		Шапка.Параметры.ГлавныйИнженер        = ГлавныйИнженер;
		Шапка.Параметры.НачальникВТЛ          = НачальникВТЛ;
		Если ЗначениеЗаполнено(ДанныеОтветственногоЛица) Тогда
			Шапка.Параметры.ДолжностьЗавСкладом = ДанныеОтветственногоЛица.Должность;
		КонецЕсли;
		Шапка.Параметры.ЗавСкладом            = ЗавСкладом;
		
		Шапка.Параметры.Заполнить(Выборка);
		Шапка.Параметры.Номенклатура          = Выборка.НоменклатураНаименованиеПолное;
		Шапка.Параметры.Начало                = Формат(Выборка.ДатаНачала,    "ДЛФ=D");
		Шапка.Параметры.Начало1               = Формат(Выборка.НачалоПриход,  "ДЛФ=D");
		Шапка.Параметры.Конец1                = Формат(Выборка.КонецПриход,   "ДЛФ=D");
		Шапка.Параметры.Начало2               = Формат(Выборка.НачалоРасход,  "ДЛФ=D");
		Шапка.Параметры.Конец2                = Формат(Выборка.КонецРасход,   "ДЛФ=D");
		Шапка.Параметры.Конец                 = Формат(Выборка.ДатаОкончания, "ДЛФ=D");		
		Шапка.Параметры.НедостачаОстаток      = ?(Выборка.ФизическийВес9 < 0, "(" + Выборка.ФизическийВес9 + ")", Выборка.ФизическийВес9);		
		Шапка.Параметры.ВесПовышенияВсего     = "";
		
		ТабДокумент.Вывести(Шапка);
		
		// СтрокаАктовОчисткиСушки
		СтрокаАктовОчисткиСушки = Макет.ПолучитьОбласть("СтрокаАктовОчисткиСушки");
		
		ТабЧастьАктыСушкиИОчистки = Выборка.Ссылка.АктыСушкиИОчистки;
		ТабЧасть                  = ТабЧастьАктыСушкиИОчистки.Выгрузить();
		
		Усушка = 0;
		
		Если ВыводитьСписокАктов Тогда
			
			Для Каждого	Стр Из ТабЧасть Цикл
				
				СтрокаАктовОчисткиСушки.Параметры.АктНомерДок = ИНАГРО_Общий.ВернутьКодБезПрефикса(Стр.Акт.Номер);
				СтрокаАктовОчисткиСушки.Параметры.АктДатаДок  = Формат(Стр.Акт.Дата, "ДЛФ=D");
				
				//
				Если ТипЗнч(Стр.Акт) = Тип("ДокументСсылка.ИНАГРО_Форма34Сводная") Тогда
					СтрокаАктовОчисткиСушки.Параметры.Агрегат        = Стр.ВидОчистки;
					СтрокаАктовОчисткиСушки.Параметры.ФизическийВес2 = Стр.Акт.ФизическийВес2;					
				ИначеЕсли ТипЗнч(Стр.Акт)=Тип("ДокументСсылка.ИНАГРО_АктРаспределения") Тогда
					СтрокаАктовОчисткиСушки.Параметры.Агрегат        = Стр.ВидОчистки;
				КонецЕсли;
				
				СтрокаАктовОчисткиСушки.Параметры.Заполнить(Стр);
				СтрокаАктовОчисткиСушки.Параметры.тФизическийВес = Стр.тФизическийВес;
				
				Усушка = Усушка + Стр.тУбыльОтСушки;
				
				ТабДокумент.Вывести(СтрокаАктовОчисткиСушки);
				
			КонецЦикла;
			
		Иначе
			
			СтрокаАктовОчисткиСушки.Параметры.Агрегат = "Див. додаток";
			
			ТабДокумент.Вывести(СтрокаАктовОчисткиСушки);
			
		КонецЕсли;
		
		// Подвал
		Подвал = Макет.ПолучитьОбласть("Подвал");
		Подвал.Параметры.Заполнить(Выборка);

		// п.13
		//СреднийСрокХранения_ = Выборка.СрокХраненияМесяцев * 30 + Выборка.СрокХраненияДней;
		//СтруктураПредставлениеСреднегоСрокаХранения = ПолучитьПредставлениеСреднегоСрокаХранения(СреднийСрокХранения_, КодЯзыкаПечать);
		//
		//Подвал.Параметры.ПредставлениеСрокаХранения = СтруктураПредставлениеСреднегоСрокаХранения.ПредставлениеСрокаХранения;
		
		Если ЗначениеЗаполнено(Выборка.СрокХраненияМесяцев) Тогда
			СрокХраненияМесяцев = Строка(Выборка.СрокХраненияМесяцев);
		Иначе 
			СрокХраненияМесяцев = "____";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.СрокХраненияДней) Тогда
			СрокХраненияДней = Строка(Выборка.СрокХраненияДней);
		Иначе 
			СрокХраненияДней = "____";
		КонецЕсли;
		
		ПредставлениеСрокаХранения = СрокХраненияМесяцев + " місяців " + СрокХраненияДней + " днів";
		
		Подвал.Параметры.ПредставлениеСрокаХранения = ПредставлениеСрокаХранения;
		
		//Подвал.Параметры.ПредставлениеСрокаХранения = Строка(Выборка.СрокХраненияМесяцев) + " місяців " + Строка(Выборка.СрокХраненияДней) + " днів";
		
		// п.14
				
		УбыльВсегоФактическая = Выборка.ФизическийВес9;
		
		Если УбыльВсегоФактическая > Выборка.УбыльПоВлажности Тогда
			
			Подвал.Параметры.УбыльВлажностиФактическая 	 = Выборка.УбыльВлажности;
			Подвал.Параметры.УбыльПоВлажностиФактическая = Выборка.УбыльПоВлажности;		
			
			УбыльВсегоФактическая = Выборка.ФизическийВес9 - Выборка.УбыльПоВлажности;
			
			Если УбыльВсегоФактическая > Выборка.УбыльПоСорнойПримеси Тогда			
				
				Подвал.Параметры.УбыльСорнойПримесиФактическая	 = Выборка.УбыльСорнойПримеси;
				Подвал.Параметры.УбыльПоСорнойПримесиФактическая = Выборка.УбыльПоСорнойПримеси;			
				
				УбыльВсегоФактическая = УбыльВсегоФактическая - Выборка.УбыльПоСорнойПримеси;
				
				Если УбыльВсегоФактическая > Выборка.УбыльПоЕстественной Тогда
					Подвал.Параметры.УбыльЕстественнаяФактическая	= Выборка.УбыльЕстественная;			
					Подвал.Параметры.УбыльПоЕстественнойФактическая = Выборка.УбыльПоЕстественной;
					Подвал.Параметры.УбыльПрочаяФактическая         = УбыльВсегоФактическая - Выборка.УбыльПоЕстественной;				
				Иначе
					Подвал.Параметры.УбыльЕстественнаяФактическая	= ?(Выборка.ФизическийВес8 = 0, 0, Окр(УбыльВсегоФактическая * 100 / Выборка.ФизическийВес8, 3));
					Подвал.Параметры.УбыльПоЕстественнойФактическая = УбыльВсегоФактическая;
				КонецЕсли
				
			Иначе
				
				УбыльПоСорнойПримесиФактическая = УбыльВсегоФактическая;
				
				Подвал.Параметры.УбыльСорнойПримесиФактическая	 = ?(Выборка.ФизическийВес3 = 0, 0, Окр(УбыльПоСорнойПримесиФактическая * 100 / Выборка.ФизическийВес3, 2));
				Подвал.Параметры.УбыльПоСорнойПримесиФактическая = УбыльПоСорнойПримесиФактическая;
				
			КонецЕсли;		
			
		Иначе
			
			Подвал.Параметры.УбыльВлажностиФактическая 	 = ?(Выборка.ФизическийВес3 = 0, 0, Окр(УбыльВсегоФактическая * 100 / Выборка.ФизическийВес3, 2));
			Подвал.Параметры.УбыльПоВлажностиФактическая = УбыльВсегоФактическая;		
			
		КонецЕсли;
		
		Подвал.Параметры.УбыльВсегоФактическая = Выборка.ФизическийВес9;
		Подвал.Параметры.УбыльВсего            = Выборка.УбыльВсего;
		
		// п.15
		Разница = Выборка.ФизическийВес9 - Выборка.УбыльВсего;
		
		Если СокрЛП(Выборка.п15) = "" Тогда
			Подвал.Параметры.ТекстРазница = "Залишається невиправданою нестача " + ?(Разница > 0, Разница, "___________") + "кг, надлишок ___________ кг";
		Иначе
			Подвал.Параметры.ТекстРазница = СокрЛП(Выборка.п15) + ", надлишок ___________ кг";
		КонецЕсли;
		
		// п.16, 17
		Подвал.Параметры.п16              = Выборка.п16; 
		Подвал.Параметры.п17              = Выборка.п17;
		
		Подвал.Параметры.ГлавныйБухгалтер = ГлавныйБухгалтер; 
		Подвал.Параметры.НачальникВТЛ     = НачальникВТЛ;
		Подвал.Параметры.ЗавСкладом       = ЗавСкладом;
		
		ТабДокумент.Вывести(Подвал);
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

Функция ПечатьФорма30_2021_(МассивОбъектов, ОбъектыПечати, ПараметрыВывода, ВыводитьСписокАктов = Истина)
	
	УстановитьПривилегированныйРежим(Истина);
		
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_АктЗачистки.Номер КАК Номер,
		|	ИНАГРО_АктЗачистки.ФизическийВес1 КАК ФизическийВес1,
		|	ИНАГРО_АктЗачистки.НачалоПриход КАК НачалоПриход,
		|	ИНАГРО_АктЗачистки.НачалоРасход КАК НачалоРасход,
		|	ИНАГРО_АктЗачистки.ОкончаниеПриход КАК КонецПриход,
		|	ИНАГРО_АктЗачистки.ОкончаниеРасход КАК КонецРасход,
		|	ИНАГРО_АктЗачистки.ФизическийВес7 КАК ФизическийВес7,
		|	ИНАГРО_АктЗачистки.ФизическийВес9 КАК ФизическийВес9,
		|	ИНАГРО_АктЗачистки.Дата КАК Дата,
		|	ИНАГРО_АктЗачистки.Склад КАК Склад,
		|	ИНАГРО_АктЗачистки.Организация КАК Организация,
		|	ИНАГРО_АктЗачистки.ФизическийВес8 КАК ФизическийВес8,
		|	ИНАГРО_АктЗачистки.ФизическийВес3 КАК ФизическийВес3,
		|	ИНАГРО_АктЗачистки.ФизическийВес2 КАК ФизическийВес2,
		|	ИНАГРО_АктЗачистки.Ссылка КАК Ссылка,
		|	ИНАГРО_АктЗачистки.П15 КАК П15,
		|	ИНАГРО_АктЗачистки.СрокХраненияДней КАК СрокХраненияДней,
		|	ИНАГРО_АктЗачистки.СрокХраненияМесяцев КАК СрокХраненияМесяцев,
		|	ИНАГРО_АктЗачистки.УбыльВлажности КАК УбыльВлажности,
		|	ИНАГРО_АктЗачистки.УбыльПоВлажности КАК УбыльПоВлажности,
		|	ИНАГРО_АктЗачистки.УбыльВсего КАК УбыльВсего,
		|	ИНАГРО_АктЗачистки.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
		|	ИНАГРО_АктЗачистки.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тПросушено КАК тПросушено,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тОчищено КАК тОчищено,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тВесПоВлажности5 КАК тВесПоВлажности5,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тВесПоВлажности6 КАК тВесПоВлажности6,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тФизическийВес6 КАК тФизическийВес6,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тФизическийВес5 КАК тФизическийВес5,
		|	ИНАГРО_АктЗачисткиАктыСушкиИОчистки.тФизическийВес КАК тФизическийВес,
		|	ИНАГРО_АктЗачистки.УбыльПоСорнойПримеси КАК УбыльПоСорнойПримеси,
		|	ИНАГРО_АктЗачистки.УбыльСорнойПримеси КАК УбыльСорнойПримеси,
		|	ИНАГРО_АктЗачистки.УбыльПоЕстественной КАК УбыльПоЕстественной,
		|	ИНАГРО_АктЗачистки.УбыльЕстественная КАК УбыльЕстественная,
		|	ИНАГРО_АктЗачистки.ВидХранения КАК ВидХранения,
		|	ИНАГРО_АктЗачистки.Урожай КАК Урожай,
		|	ИНАГРО_АктЗачистки.Влажность1 КАК Влажность1,
		|	ИНАГРО_АктЗачистки.Влажность2 КАК Влажность2,
		|	ИНАГРО_АктЗачистки.Влажность3 КАК Влажность3,
		|	ИНАГРО_АктЗачистки.Влажность4 КАК Влажность4,
		|	ИНАГРО_АктЗачистки.Влажность5 КАК Влажность5,
		|	ИНАГРО_АктЗачистки.Влажность6 КАК Влажность6,
		|	ИНАГРО_АктЗачистки.Влажность7 КАК Влажность7,
		|	ИНАГРО_АктЗачистки.Влажность9 КАК Влажность9,
		|	ИНАГРО_АктЗачистки.Влажность8 КАК Влажность8,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь1 КАК СорнаяПримесь1,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь2 КАК СорнаяПримесь2,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь3 КАК СорнаяПримесь3,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь4 КАК СорнаяПримесь4,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь5 КАК СорнаяПримесь5,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь6 КАК СорнаяПримесь6,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь7 КАК СорнаяПримесь7,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь8 КАК СорнаяПримесь8,
		|	ИНАГРО_АктЗачистки.СорнаяПримесь9 КАК СорнаяПримесь9,
		|	ИНАГРО_АктЗачистки.ФизическийВес5 КАК ФизическийВес5,
		|	ИНАГРО_АктЗачистки.ФизическийВес6 КАК ФизическийВес6,
		|	ИНАГРО_АктЗачистки.ФизическийВес4 КАК ФизическийВес4,
		|	ИНАГРО_АктЗачистки.ДатаНачала КАК ДатаНачала,
		|	ИНАГРО_АктЗачистки.ДатаОкончания КАК ДатаОкончания,
		|	ИНАГРО_АктЗачистки.Конец2 КАК Конец,
		|	ИНАГРО_АктЗачистки.УбыльПоПрочей КАК УбыльПрочая,
		|	ИНАГРО_АктЗачистки.П16 КАК П16,
		|	ИНАГРО_АктЗачистки.П17 КАК П17
		|ИЗ
		|	Справочник.Номенклатура КАК Номен,
		|	Справочник.Организации КАК Орган,
		|	Документ.ИНАГРО_АктЗачистки КАК ИНАГРО_АктЗачистки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_АктЗачистки.АктыСушкиИОчистки КАК ИНАГРО_АктЗачисткиАктыСушкиИОчистки
		|		ПО (ИНАГРО_АктЗачисткиАктыСушкиИОчистки.Ссылка = ИНАГРО_АктЗачистки.Ссылка)
		|ГДЕ
		|	ИНАГРО_АктЗачистки.Ссылка В(&МассивОбъектов)
		|ИТОГИ
		|	МАКСИМУМ(ФизическийВес1),
		|	МАКСИМУМ(НачалоПриход),
		|	МАКСИМУМ(НачалоРасход),
		|	МАКСИМУМ(КонецПриход),
		|	МАКСИМУМ(КонецРасход),
		|	МИНИМУМ(ФизическийВес7),
		|	МАКСИМУМ(ФизическийВес9),
		|	МАКСИМУМ(Дата),
		|	МАКСИМУМ(Склад),
		|	МАКСИМУМ(ФизическийВес8),
		|	МАКСИМУМ(ФизическийВес3),
		|	МАКСИМУМ(ФизическийВес2),
		|	МАКСИМУМ(П15),
		|	МАКСИМУМ(СрокХраненияДней),
		|	МАКСИМУМ(УбыльВлажности),
		|	МАКСИМУМ(УбыльПоВлажности),
		|	МАКСИМУМ(УбыльВсего),
		|	СУММА(тПросушено),
		|	СУММА(тОчищено),
		|	СУММА(тВесПоВлажности5),
		|	СУММА(тВесПоВлажности6),
		|	СУММА(тФизическийВес6),
		|	СУММА(тФизическийВес5),
		|	СУММА(тФизическийВес),
		|	МАКСИМУМ(УбыльПоСорнойПримеси),
		|	МАКСИМУМ(УбыльСорнойПримеси),
		|	МАКСИМУМ(УбыльПоЕстественной),
		|	МАКСИМУМ(УбыльЕстественная),
		|	МАКСИМУМ(ФизическийВес6),
		|	МАКСИМУМ(ФизическийВес4),
		|	МАКСИМУМ(ДатаНачала),
		|	МАКСИМУМ(ДатаОкончания),
		|	МАКСИМУМ(УбыльПрочая)
		|ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);	
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_АктЗачистки.ПФ_MXL_UK_Форма30_2021";
	ТабДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет; 
	ТабДокумент.АвтоМасштаб         = Истина;

	Макет = ПолучитьМакет("ПФ_MXL_UK_Форма30_2021");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;

	Пока Выборка.Следующий()Цикл
		
		СведенияООтправителе     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
		Руководители             = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизацииИмяФамилия(Выборка.Организация, Выборка.Дата);
		//ДолжностьРуководителя    = Руководители.ДолжностьРуководителя;
		Руководитель             = Руководители.Руководитель;
		ГлавныйБухгалтер         = Руководители.ГлавныйБухгалтер;
		ГлавныйИнженер           = Руководители.ГлавныйИнженер;
		НачальникВТЛ             = Руководители.НачальникВТЛ;		
		ДанныеОтветственногоЛица = Неопределено;		
		ЗавСкладом               = ИНАГРО_Элеватор.ОтветственныеЛицаИмяФамилия(Выборка.Организация, Выборка.Дата, Выборка.Склад, ДанныеОтветственногоЛица);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.ЄДРПОУ                = СведенияООтправителе.КодПоЕДРПОУ; 
		Шапка.Параметры.Организация           = Выборка.Организация.НаименованиеПолное;
		Шапка.Параметры.День                  = Формат(Выборка.Дата, "ДФ=дд");
		Шапка.Параметры.Месяц                 = Сред(Формат(Выборка.Дата, "ДФ='дд ММММ';Л=uk"), 3);
		Шапка.Параметры.Год                   = Формат(Выборка.Дата, "ДФ=гг");
		
		//Шапка.Параметры.ДолжностьРуководителя = ДолжностьРуководителя; 
		Шапка.Параметры.Руководитель          = Руководитель;
		Шапка.Параметры.ГлавныйБухгалтер      = ГлавныйБухгалтер; 
		Шапка.Параметры.ГлавныйИнженер        = ГлавныйИнженер;
		Шапка.Параметры.НачальникВТЛ          = НачальникВТЛ;
		Если ЗначениеЗаполнено(ДанныеОтветственногоЛица) Тогда
			Шапка.Параметры.ДолжностьЗавСкладом = ДанныеОтветственногоЛица.Должность;
		КонецЕсли;
		Шапка.Параметры.ЗавСкладом            = ЗавСкладом;
		
		Шапка.Параметры.Заполнить(Выборка);
		Шапка.Параметры.Номенклатура          = Выборка.НоменклатураНаименованиеПолное;
		Шапка.Параметры.Начало                = Формат(Выборка.ДатаНачала,    "ДЛФ=D");
		Шапка.Параметры.Начало1               = Формат(Выборка.НачалоПриход,  "ДЛФ=D");
		Шапка.Параметры.Конец1                = Формат(Выборка.КонецПриход,   "ДЛФ=D");
		Шапка.Параметры.Начало2               = Формат(Выборка.НачалоРасход,  "ДЛФ=D");
		Шапка.Параметры.Конец2                = Формат(Выборка.КонецРасход,   "ДЛФ=D");
		Шапка.Параметры.Конец                 = Формат(Выборка.ДатаОкончания, "ДЛФ=D");		
		Шапка.Параметры.НедостачаОстаток      = ?(Выборка.ФизическийВес9 < 0, "(" + Выборка.ФизическийВес9 + ")", Выборка.ФизическийВес9);		
		Шапка.Параметры.ВесПовышенияВсего     = "";
		
		ТабДокумент.Вывести(Шапка);
		
		// СтрокаАктовОчисткиСушки
		СтрокаАктовОчисткиСушки = Макет.ПолучитьОбласть("СтрокаАктовОчисткиСушки");
		
		ТабЧастьАктыСушкиИОчистки = Выборка.Ссылка.АктыСушкиИОчистки;
		ТабЧасть                  = ТабЧастьАктыСушкиИОчистки.Выгрузить();
		
		Усушка = 0;
		
		Если ВыводитьСписокАктов Тогда
			
			Для Каждого	Стр Из ТабЧасть Цикл
				
				СтрокаАктовОчисткиСушки.Параметры.АктНомерДок = ИНАГРО_Общий.ВернутьКодБезПрефикса(Стр.Акт.Номер);
				СтрокаАктовОчисткиСушки.Параметры.АктДатаДок  = Формат(Стр.Акт.Дата, "ДЛФ=D");
				
				//
				Если ТипЗнч(Стр.Акт) = Тип("ДокументСсылка.ИНАГРО_Форма34Сводная") Тогда
					СтрокаАктовОчисткиСушки.Параметры.Агрегат        = Стр.ВидОчистки;
					СтрокаАктовОчисткиСушки.Параметры.ФизическийВес2 = Стр.Акт.ФизическийВес2;					
				ИначеЕсли ТипЗнч(Стр.Акт)=Тип("ДокументСсылка.ИНАГРО_АктРаспределения") Тогда
					СтрокаАктовОчисткиСушки.Параметры.Агрегат        = Стр.ВидОчистки;
				КонецЕсли;
				
				СтрокаАктовОчисткиСушки.Параметры.Заполнить(Стр);
				СтрокаАктовОчисткиСушки.Параметры.тФизическийВес = Стр.тФизическийВес;
				
				Усушка = Усушка + Стр.тУбыльОтСушки;
				
				ТабДокумент.Вывести(СтрокаАктовОчисткиСушки);
				
			КонецЦикла;
			
		Иначе
			
			СтрокаАктовОчисткиСушки.Параметры.Агрегат = "Див. додаток";
			
			ТабДокумент.Вывести(СтрокаАктовОчисткиСушки);
			
		КонецЕсли;
		
		// Подвал
		Подвал = Макет.ПолучитьОбласть("Подвал");
		Подвал.Параметры.Заполнить(Выборка);

		// п.13
		//СреднийСрокХранения_ = Выборка.СрокХраненияМесяцев * 30 + Выборка.СрокХраненияДней;
		//СтруктураПредставлениеСреднегоСрокаХранения = ПолучитьПредставлениеСреднегоСрокаХранения(СреднийСрокХранения_, КодЯзыкаПечать);
		//
		//Подвал.Параметры.ПредставлениеСрокаХранения = СтруктураПредставлениеСреднегоСрокаХранения.ПредставлениеСрокаХранения;
		
		Если ЗначениеЗаполнено(Выборка.СрокХраненияМесяцев) Тогда
			СрокХраненияМесяцев = Строка(Выборка.СрокХраненияМесяцев);
		Иначе 
			СрокХраненияМесяцев = "____";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.СрокХраненияДней) Тогда
			СрокХраненияДней = Строка(Выборка.СрокХраненияДней);
		Иначе 
			СрокХраненияДней = "____";
		КонецЕсли;
		
		ПредставлениеСрокаХранения = СрокХраненияМесяцев + " місяців " + СрокХраненияДней + " днів";
		
		Подвал.Параметры.ПредставлениеСрокаХранения = ПредставлениеСрокаХранения;
		
		//Подвал.Параметры.ПредставлениеСрокаХранения = Строка(Выборка.СрокХраненияМесяцев) + " місяців " + Строка(Выборка.СрокХраненияДней) + " днів";
		
		// п.14
				
		УбыльВсегоФактическая = Выборка.ФизическийВес9;
		
		Если УбыльВсегоФактическая > Выборка.УбыльПоВлажности Тогда
			
			Подвал.Параметры.УбыльВлажностиФактическая 	 = Выборка.УбыльВлажности;
			Подвал.Параметры.УбыльПоВлажностиФактическая = Выборка.УбыльПоВлажности;		
			
			УбыльВсегоФактическая = Выборка.ФизическийВес9 - Выборка.УбыльПоВлажности;
			
			Если УбыльВсегоФактическая > Выборка.УбыльПоСорнойПримеси Тогда			
				
				Подвал.Параметры.УбыльСорнойПримесиФактическая	 = Выборка.УбыльСорнойПримеси;
				Подвал.Параметры.УбыльПоСорнойПримесиФактическая = Выборка.УбыльПоСорнойПримеси;			
				
				УбыльВсегоФактическая = УбыльВсегоФактическая - Выборка.УбыльПоСорнойПримеси;
				
				Если УбыльВсегоФактическая > Выборка.УбыльПоЕстественной Тогда
					Подвал.Параметры.УбыльЕстественнаяФактическая	= Выборка.УбыльЕстественная;			
					Подвал.Параметры.УбыльПоЕстественнойФактическая = Выборка.УбыльПоЕстественной;
					Подвал.Параметры.УбыльПрочаяФактическая         = УбыльВсегоФактическая - Выборка.УбыльПоЕстественной;				
				Иначе
					Подвал.Параметры.УбыльЕстественнаяФактическая	= ?(Выборка.ФизическийВес8 = 0, 0, Окр(УбыльВсегоФактическая * 100 / Выборка.ФизическийВес8, 3));
					Подвал.Параметры.УбыльПоЕстественнойФактическая = УбыльВсегоФактическая;
				КонецЕсли
				
			Иначе
				
				УбыльПоСорнойПримесиФактическая = УбыльВсегоФактическая;
				
				Подвал.Параметры.УбыльСорнойПримесиФактическая	 = ?(Выборка.ФизическийВес3 = 0, 0, Окр(УбыльПоСорнойПримесиФактическая * 100 / Выборка.ФизическийВес3, 2));
				Подвал.Параметры.УбыльПоСорнойПримесиФактическая = УбыльПоСорнойПримесиФактическая;
				
			КонецЕсли;		
			
		Иначе
			
			Подвал.Параметры.УбыльВлажностиФактическая 	 = ?(Выборка.ФизическийВес3 = 0, 0, Окр(УбыльВсегоФактическая * 100 / Выборка.ФизическийВес3, 2));
			Подвал.Параметры.УбыльПоВлажностиФактическая = УбыльВсегоФактическая;		
			
		КонецЕсли;
		
		Подвал.Параметры.УбыльВсегоФактическая = Выборка.ФизическийВес9;
		Подвал.Параметры.УбыльВсего            = Выборка.УбыльВсего;
		
		// п.15
		Разница = Выборка.ФизическийВес9 - Выборка.УбыльВсего;
		
		Если СокрЛП(Выборка.п15) = "" Тогда
			Подвал.Параметры.ТекстРазница = "Залишається невиправданою нестача " + ?(Разница > 0, Разница, "___________") + "кг, надлишок ___________ кг";
		Иначе
			Подвал.Параметры.ТекстРазница = СокрЛП(Выборка.п15) + ", надлишок ___________ кг";
		КонецЕсли;
		
		// п.16, 17
		Подвал.Параметры.п16              = Выборка.п16; 
		Подвал.Параметры.п17              = Выборка.п17;
		
		Подвал.Параметры.ГлавныйБухгалтер = ГлавныйБухгалтер; 
		Подвал.Параметры.НачальникВТЛ     = НачальникВТЛ;
		Подвал.Параметры.ЗавСкладом       = ЗавСкладом;
		
		ТабДокумент.Вывести(Подвал);
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

Функция ПолучитьПредставлениеСреднегоСрокаХранения(СреднийСрокХранения, КодЯзыкаПечать) Экспорт
	
	ПредставлениеСрокаХранения = ""; 
	
	СтруктураПредставлениеСреднегоСрокаХранения = Новый Структура("СреднийСрокХранения, СрокХраненияМесяцев, СрокХраненияДней, ПредставлениеСрокаХранения", 0, 0, 0, "");
	
	СрокХраненияМесяцев = Цел(СреднийСрокХранения/30);
	СрокХраненияДней 	= СреднийСрокХранения - Цел(СреднийСрокХранения/30)*30;						
	
	МесяцНадпись = ?(КодЯзыкаПечать = "uk", " місяців ", " месяцев ");
	ДеньНадпись	 = ?(КодЯзыкаПечать = "uk", " днів"	 , " дней");
	
	Если СреднийСрокХранения <= 90 Тогда 
		ПредставлениеСрокаХранения = Формат(СреднийСрокХранения, "ЧН=") + ДеньНадпись;
	Иначе
		ПредставлениеСрокаХранения = Формат(СреднийСрокХранения / 30, "ЧДЦ=1") + МесяцНадпись;
	КонецЕсли;
	
	СтруктураПредставлениеСреднегоСрокаХранения.СреднийСрокХранения 		= СреднийСрокХранения;
	СтруктураПредставлениеСреднегоСрокаХранения.СрокХраненияМесяцев			= СрокХраненияМесяцев;
	СтруктураПредставлениеСреднегоСрокаХранения.СрокХраненияДней			= СрокХраненияДней;
	СтруктураПредставлениеСреднегоСрокаХранения.ПредставлениеСрокаХранения	= ПредставлениеСрокаХранения;
	
	Возврат СтруктураПредставлениеСреднегоСрокаХранения;
	
КонецФункции

Функция ПечатьВедомостьПроверки(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_АктЗачистки.ПФ_MXL_ВедомостьПроверки";
	
	Макет = ПолучитьМакет("ПФ_MXL_ВедомостьПроверки");
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_АктЗачисткиИтоги.Владелец КАК владелец,
		|	ИНАГРО_АктЗачисткиИтоги.ВесПриход КАК ВесПрихода,
		|	ИНАГРО_АктЗачисткиИтоги.ВлажностьПриход КАК ВлажностьПрихода,
		|	ИНАГРО_АктЗачисткиИтоги.СорнаяПримесьПриход КАК СорПрихода,
		|	ИНАГРО_АктЗачисткиИтоги.ВесРасход КАК ВесРасхода,
		|	ИНАГРО_АктЗачисткиИтоги.ВлажностьРасход КАК ВлажностьРасхода,
		|	ИНАГРО_АктЗачисткиИтоги.СорнаяПримесьРасход КАК СорРасхода,
		|	ИНАГРО_АктЗачисткиИтоги.УбыльВесаПриСушке КАК УсловноеСписание,
		|	ИНАГРО_АктЗачисткиИтоги.ВесПриходПереоформление КАК ВесПриходПоПереоформлению,
		|	ИНАГРО_АктЗачисткиИтоги.ВесПоВлажностиПриходПереоформление КАК ВлажностьПриходПоПереоформлению,
		|	ИНАГРО_АктЗачисткиИтоги.СорнаяПримесьПриходПереоформление КАК СорПриходПоПереоформлению,
		|	ИНАГРО_АктЗачисткиИтоги.ВесРасходПереоформление КАК ВесРасходПоПереоформлению,
		|	ИНАГРО_АктЗачисткиИтоги.ВесПоВлажностиРасходПереоформление КАК ВлажностьРасходПоПереоформлению,
		|	ИНАГРО_АктЗачисткиИтоги.СорнаяПримесьРасходПереоформление КАК СорРасходПоПереоформлению,
		|	ИНАГРО_АктЗачисткиИтоги.УбыльПоВлажности КАК ПравоПоВлаге,
		|	ИНАГРО_АктЗачисткиИтоги.УбыльПоСорнойПримеси КАК ПравоПоСору,
		|	ИНАГРО_АктЗачисткиИтоги.УбыльПоВлажности + ИНАГРО_АктЗачисткиИтоги.УбыльПоСорнойПримеси КАК ПравоВсего,
		|	ИНАГРО_АктЗачисткиИтоги.ПовышениеПоВлажности КАК НачислениеПоВлаге,
		|	ИНАГРО_АктЗачисткиИтоги.ПовышениеПоСорнойПримеси КАК НачислениеПоСору,
		|	ИНАГРО_АктЗачисткиИтоги.ПовышениеПоВлажности + ИНАГРО_АктЗачисткиИтоги.ПовышениеПоСорнойПримеси КАК НачислениеВсего,
		|	ВЫБОР
		|		КОГДА ИНАГРО_АктЗачисткиИтоги.Остаток37 > 0
		|			ТОГДА ИНАГРО_АктЗачисткиИтоги.Остаток37
		|	КОНЕЦ КАК Недодано,
		|	ВЫБОР
		|		КОГДА ИНАГРО_АктЗачисткиИтоги.Остаток37 < 0
		|			ТОГДА -1 * ИНАГРО_АктЗачисткиИтоги.Остаток37
		|	КОНЕЦ КАК Передано,
		|	ИНАГРО_АктЗачисткиИтоги.ВесПоВлажностиПриход КАК ВесПоВлажностиПриход,
		|	ИНАГРО_АктЗачисткиИтоги.ВесПоСорнойПримесиПриход КАК ВесПоСорнойПримесиПриход,
		|	ИНАГРО_АктЗачисткиИтоги.ВесПоВлажностиРасход КАК ВесПоВлажностиРасход,
		|	ИНАГРО_АктЗачисткиИтоги.ВесПоСорнойПримесиРасход КАК ВесПоСорнойПримесиРасход,
		|	ИНАГРО_АктЗачисткиИтоги.ВесПоВлажностиПриходПереоформление КАК ВесПоВлажностиПриходПереоформление,
		|	ИНАГРО_АктЗачисткиИтоги.ВесПоСорнойПримесиПриходПереоформление КАК ВесПоСорнойПримесиПриходПереоформление,
		|	ИНАГРО_АктЗачисткиИтоги.ВесПоВлажностиРасходПереоформление КАК ВесПоВлажностиРасходПереоформление,
		|	ИНАГРО_АктЗачисткиИтоги.ВесПоСорнойПримесиРасходПереоформление КАК ВесПоСорнойПримесиРасходПереоформление,
		|	ИНАГРО_АктЗачистки.Ссылка КАК Ссылка,
		|	ИНАГРО_АктЗачистки.Дата КАК Дата,
		|	ИНАГРО_АктЗачистки.Номер КАК Номер,
		|	ИНАГРО_АктЗачистки.Номенклатура КАК Номенклатура,
		|	ИНАГРО_АктЗачистки.Урожай КАК Урожай,
		|	ИНАГРО_АктЗачистки.Организация КАК Организация,
		|	ИНАГРО_АктЗачистки.Склад КАК Склад,
		|	ИНАГРО_АктЗачистки.ДатаНачала КАК ДатаНачала,
		|	ИНАГРО_АктЗачистки.ДатаОкончания КАК ДатаОкончания
		|ИЗ
		|	Документ.ИНАГРО_АктЗачистки КАК ИНАГРО_АктЗачистки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_АктЗачистки.Итоги КАК ИНАГРО_АктЗачисткиИтоги
		|		ПО (ИНАГРО_АктЗачисткиИтоги.Ссылка = ИНАГРО_АктЗачистки.Ссылка)
		|ГДЕ
		|	ИНАГРО_АктЗачистки.Ссылка В(&МассивОбъектов)
		|ИТОГИ
		|	СУММА(ВесПрихода),
		|	ВЫРАЗИТЬ(100 * СУММА(ВесПоВлажностиПриход) / СУММА(ВесПрихода) КАК ЧИСЛО(15, 2)) КАК ВлажностьПрихода,
		|	ВЫРАЗИТЬ(100 * СУММА(ВесПоСорнойПримесиПриход) / СУММА(ВесПрихода) КАК ЧИСЛО(15, 2)) КАК СорПрихода,
		|	СУММА(ВесРасхода),
		|	ВЫРАЗИТЬ(100 * СУММА(ВесПоВлажностиРасход) / СУММА(ВесРасхода) КАК ЧИСЛО(15, 2)) КАК ВлажностьРасхода,
		|	ВЫРАЗИТЬ(100 * СУММА(ВесПоСорнойПримесиРасход) / СУММА(ВесРасхода) КАК ЧИСЛО(15, 2)) КАК СорРасхода,
		|	СУММА(УсловноеСписание),
		|	СУММА(ВесПриходПоПереоформлению),
		|	ВЫРАЗИТЬ(100 * СУММА(ВесПоВлажностиПриходПереоформление) / СУММА(ИНАГРО_АктЗачисткиИтоги.ВесПриходПереоформление) КАК ЧИСЛО(15, 2)) КАК ВлажностьПриходПоПереоформлению,
		|	ВЫРАЗИТЬ(100 * СУММА(ВесПоСорнойПримесиПриходПереоформление) / СУММА(ИНАГРО_АктЗачисткиИтоги.ВесПриходПереоформление) КАК ЧИСЛО(15, 2)) КАК СорПриходПоПереоформлению,
		|	СУММА(ВесРасходПоПереоформлению),
		|	ВЫРАЗИТЬ(100 * СУММА(ВесПоВлажностиРасходПереоформление) / СУММА(ИНАГРО_АктЗачисткиИтоги.ВесРасходПереоформление) КАК ЧИСЛО(15, 2)) КАК ВлажностьРасходПоПереоформлению,
		|	ВЫРАЗИТЬ(100 * СУММА(ВесПоСорнойПримесиРасходПереоформление) / СУММА(ИНАГРО_АктЗачисткиИтоги.ВесРасходПереоформление) КАК ЧИСЛО(15, 2)) КАК СорРасходПоПереоформлению,
		|	СУММА(ПравоПоВлаге),
		|	СУММА(ПравоПоСору),
		|	СУММА(ПравоВсего),
		|	СУММА(НачислениеПоВлаге),
		|	СУММА(НачислениеПоСору),
		|	СУММА(НачислениеВсего),
		|	СУММА(Недодано),
		|	СУММА(Передано),
		|	СУММА(ВесПоВлажностиПриход),
		|	СУММА(ВесПоСорнойПримесиПриход),
		|	СУММА(ВесПоВлажностиРасход),
		|	СУММА(ВесПоСорнойПримесиРасход),
		|	СРЕДНЕЕ(ВесПоВлажностиПриходПереоформление),
		|	СУММА(ВесПоСорнойПримесиПриходПереоформление),
		|	СРЕДНЕЕ(ВесПоВлажностиРасходПереоформление),
		|	СУММА(ВесПоСорнойПримесиРасходПереоформление),
		|	МАКСИМУМ(Дата),
		|	МАКСИМУМ(Номер),
		|	МАКСИМУМ(Номенклатура),
		|	МАКСИМУМ(Урожай),
		|	МАКСИМУМ(Организация),
		|	МАКСИМУМ(Склад),
		|	МАКСИМУМ(ДатаНачала),
		|	МАКСИМУМ(ДатаОкончания)
		|ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// ШАПКА
	Пока ВыборкаИтоги.Следующий()Цикл
		
		//шапка
		ОблШапка = Макет.ПолучитьОбласть("Шапка");
		ОблШапка.Параметры.ТекДата = ВыборкаИтоги.Дата;
		облШапка.Параметры.организация = ВыборкаИтоги.Организация;
		
		Если ВыборкаИтоги.ДатаНачала = '00010101000000' И ВыборкаИтоги.ДатаОкончания = '00010101000000' Тогда
			ОблШапка.Параметры.Дата = НСтр("ru='Без периода';uk='Без періода'",КодЯзыкаПечать);
		Иначе
			ОблШапка.Параметры.Дата = "За " + Формат(ВыборкаИтоги.ДатаНачала, "ДЛФ=D") + " - " + Формат(ВыборкаИтоги.ДатаОкончания, "ДЛФ=D");
		КонецЕсли;
		
		ОтборВсего = "";
		
		Если ЗначениеЗаполнено(ВыборкаИтоги.Урожай) тогда
			ОтборВсего = ОтборВсего+"Урожай- " + ВыборкаИтоги.Урожай +";";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаИтоги.Номенклатура) тогда
			ОтборВсего = ОтборВсего+" " + ВыборкаИтоги.Номенклатура +";";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаИтоги.Склад) тогда
			ОтборВсего = ОтборВсего+" " + ВыборкаИтоги.Склад +";";
		КонецЕсли;
		
		ОблШапка.Параметры.отбор = ОтборВсего;
		
		ТабДокумент.Вывести(ОблШапка);
		
		ПорНомер = 0;
		ВсегоНедодано = 0;
		ВсегоПередано = 0;
		
		ВыборкаВладельцы = ВыборкаИтоги.Выбрать();
		
		Пока ВыборкаВладельцы.Следующий() цикл
			//Если ВыборкаВладельцы.Владелец = Null Тогда 
			//	Продолжить;
			//КонецЕсли;
			ПорНомер = ПорНомер + 1;
			ОблСтрока = Макет.ПолучитьОбласть("Строка");
			ОблСтрока.Параметры.Заполнить(ВыборкаВладельцы);
			ОблСтрока.Параметры.номер = ПорНомер;
			ТабДокумент.Вывести(ОблСтрока);	
			
		КонецЦикла;
		
		ОблИтог=макет.ПолучитьОбласть("Итог");
		ОблИтог.Параметры.Заполнить(ВыборкаИтоги);
		ТабДокумент.Вывести(ОблИтог);
		
		ОблПереоформление = Макет.ПолучитьОбласть("Переоформление");
		
		ОблПереоформление.Параметры.Заполнить(ВыборкаИтоги);
		ТабДокумент.Вывести(ОблПереоформление);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьРасшифровкаПоВладельцам(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_АктЗачистки.ПФ_MXL_РасшифровкаПоВладельцам";
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
	
		Макет = ПолучитьМакет("ПФ_MXL_РасшифровкаПоВладельцам");
		
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РасшифровкаПоВладельцам.Ссылка КАК Ссылка,
		               |	РасшифровкаПоВладельцам.НомерСтроки КАК НомерСтроки,
		               |	РасшифровкаПоВладельцам.ВесПоВлажности1Категории КАК ВесПоВлажности1Категории,
		               |	РасшифровкаПоВладельцам.ВесПоВлажности2Категории КАК ВесПоВлажности2Категории,
		               |	РасшифровкаПоВладельцам.ВесПоВлажности3Категории КАК ВесПоВлажности3кат,
		               |	РасшифровкаПоВладельцам.ВесПоВлажностиНачальныйОстаток КАК ВесПоВлажностиНачальныйОстаток,
		               |	РасшифровкаПоВладельцам.ВесПоВлажностиПобочногоПродукта КАК ВесПоВлажностиПобочногоПродукта,
		               |	РасшифровкаПоВладельцам.ВесПоВлажностиПриход КАК ВесПоВлажностиПриход,
		               |	РасшифровкаПоВладельцам.ВесПоВлажностиПриходБезПереоформления КАК ВесПоВлажностиПриходБезПереоформления,
		               |	РасшифровкаПоВладельцам.ВесПоВлажностиПриходВнутр КАК ВесПоВлажностиПриходВнутр,
		               |	РасшифровкаПоВладельцам.ВесПоВлажностиПриходПереоформление КАК ВесПоВлажностиПриходПереоформление,
		               |	РасшифровкаПоВладельцам.ВесПоВлажностиРасход КАК ВесПоВлажностиРасход,
		               |	РасшифровкаПоВладельцам.ВесПоВлажностиРасходВнутр КАК ВесПоВлажностиРасходВнутр,
		               |	РасшифровкаПоВладельцам.ВесПоВлажностиРасходПереоформление КАК ВесПоВлажностиРасходПереоформление,
		               |	РасшифровкаПоВладельцам.ВесПоВлажностиРасходРеализация КАК ВесПоВлажностиРасходРеализация,
		               |	РасшифровкаПоВладельцам.ВесПоЗерновойПримесиНачальныйОстаток КАК ВесПоЗерновойПримесиНачальныйОстаток,
		               |	РасшифровкаПоВладельцам.ВесПоЗерновойПримесиПриход КАК ВесПоЗерновойПримесиПриход,
		               |	РасшифровкаПоВладельцам.ВесПоЗерновойПримесиПриходБезПереоформления КАК ВесПоЗерновойПримесиПриходБезПереоформления,
		               |	РасшифровкаПоВладельцам.ВесПоЗерновойПримесиПриходВнутр КАК ВесПоЗерновойПримесиПриходВнутр,
		               |	РасшифровкаПоВладельцам.ВесПоЗерновойПримесиПриходПереоформление КАК ВесПоЗерновойПримесиПриходПереоформление,
		               |	РасшифровкаПоВладельцам.ВесПоЗерновойПримесиРасход КАК ВесПоЗерновойПримесиРасход,
		               |	РасшифровкаПоВладельцам.ВесПоСорнойПримесиПобочногоПродукта КАК ВесПоСорнойПримесиПобочногоПродукта,
		               |	РасшифровкаПоВладельцам.ВесПоСорнойПримеси1Категории КАК ВесПоСорнойПримеси1Категории,
		               |	РасшифровкаПоВладельцам.ВесПоСорнойПримеси2Категории КАК ВесПоСорнойПримеси2Категории,
		               |	РасшифровкаПоВладельцам.ВесПоСорнойПримеси3Категории КАК ВесПоСорной3кат,
		               |	РасшифровкаПоВладельцам.ВесПоСорнойПримесиНачальныйОстаток КАК ВесПоСорнойПримесиНачальныйОстаток,
		               |	РасшифровкаПоВладельцам.ВесПоСорнойПримесиПриход КАК ВесПоСорнойПримесиПриход,
		               |	РасшифровкаПоВладельцам.ВесПоСорнойПримесиПриходБезПереоформления КАК ВесПоСорнойПримесиПриходБезПереоформления,
		               |	РасшифровкаПоВладельцам.ВесПоСорнойПримесиПриходВнутр КАК ВесПоСорнойПримесиПриходВнутр,
		               |	РасшифровкаПоВладельцам.ВесПоСорнойПримесиПриходПереоформление КАК ВесПоСорнойПримесиПриходПереоформление,
		               |	РасшифровкаПоВладельцам.ВесПоСорнойПримесиРасход КАК ВесПоСорнойПримесиРасход,
		               |	РасшифровкаПоВладельцам.ВесПоСорнойПримесиРасходВнутр КАК ВесПоСорнойПримесиРасходВнутр,
		               |	РасшифровкаПоВладельцам.ВесПоСорнойПримесиРасходПереоформление КАК ВесПоСорнойПримесиРасходПереоформление,
		               |	РасшифровкаПоВладельцам.ВесПоСорнойПримесиРасходРеализация КАК ВесПоСорнойПримесиРасходРеализация,
		               |	РасшифровкаПоВладельцам.ВесПриход КАК ВесПриход,
		               |	РасшифровкаПоВладельцам.ВесПриходБезПереоформления КАК ВесПриходБезПереоформления,
		               |	РасшифровкаПоВладельцам.ВесПриходВнутр КАК ВесПриходВнутр,
		               |	РасшифровкаПоВладельцам.ВесПриходНачальныйОстаток КАК ВесПриходНачальныйОстаток,
		               |	РасшифровкаПоВладельцам.ВесПриходПереоформление КАК ВесПриходПереоформление,
		               |	РасшифровкаПоВладельцам.ВесРасход КАК ВесРасход,
		               |	РасшифровкаПоВладельцам.ВесРасходВнутр КАК ВесРасходВнутр,
		               |	РасшифровкаПоВладельцам.ВесРасходПереоформление КАК ВесРасходПереоформление,
		               |	РасшифровкаПоВладельцам.ВесРасходРеализация КАК ВесРасходРеализация,
		               |	РасшифровкаПоВладельцам.Владелец КАК Владелец,
		               |	РасшифровкаПоВладельцам.Влажность1Категории КАК Влажность1Категории,
		               |	РасшифровкаПоВладельцам.Влажность2Категории КАК Влажность2Категории,
		               |	РасшифровкаПоВладельцам.Влажность3Категории КАК Влажность3Категории,
		               |	РасшифровкаПоВладельцам.ВлажностьОстаткаНаНачало КАК ВлажностьОстаткаНаНачало,
		               |	РасшифровкаПоВладельцам.ВлажностьПобочногоПродукта КАК ВлажностьПобочногоПродукта,
		               |	РасшифровкаПоВладельцам.ВлажностьПриход КАК ВлажностьПриход,
		               |	РасшифровкаПоВладельцам.ВлажностьПриходБезПереоформления КАК ВлажностьПриходБезПереоформления,
		               |	РасшифровкаПоВладельцам.ВлажностьПриходВнутр КАК ВлажностьПриходВнутр,
		               |	РасшифровкаПоВладельцам.ВлажностьПриходПереоформление КАК ВлажностьПриходПереоформление,
		               |	РасшифровкаПоВладельцам.ВлажностьРасход КАК ВлажностьРасход,
		               |	РасшифровкаПоВладельцам.ВлажностьРасходВнутр КАК ВлажностьРасходВнутр,
		               |	РасшифровкаПоВладельцам.ВлажностьРасходПереоформление КАК ВлажностьРасходПереоформление,
		               |	РасшифровкаПоВладельцам.ВлажностьРасходРеализация КАК ВлажностьРасходРеализация,
		               |	РасшифровкаПоВладельцам.ДоговорКонтрагента КАК ДоговорКонтрагента,
		               |	РасшифровкаПоВладельцам.ЗерноваяПримесьОстаткаНаНачало КАК ЗерноваяПримесьОстаткаНаНачало,
		               |	РасшифровкаПоВладельцам.ЗерноваяПримесьПриход КАК ЗерноваяПримесьПриход,
		               |	РасшифровкаПоВладельцам.ЗерноваяПримесьРасход КАК ЗерноваяПримесьРасход,
		               |	РасшифровкаПоВладельцам.Остаток37 КАК Остаток37,
		               |	РасшифровкаПоВладельцам.ПовышениеПоВлажности КАК ПовышениеПоВлажности,
		               |	РасшифровкаПоВладельцам.ПовышениеПоСорнойПримеси КАК ПовышениеПоСорнойПримеси,
		               |	РасшифровкаПоВладельцам.Регистратор КАК Регистратор,
		               |	РасшифровкаПоВладельцам.СорнаяПримесь1Категории КАК СорнаяПримесь1Категории,
		               |	РасшифровкаПоВладельцам.СорнаяПримесь2Категории КАК СорнаяПримесь2Категории,
		               |	РасшифровкаПоВладельцам.СорнаяПримесь3Категории КАК СорнаяПримесь3Категории,
		               |	РасшифровкаПоВладельцам.СорнаяПримесьОстаткаНаНачало КАК СорнаяПримесьОстаткаНаНачало,
		               |	РасшифровкаПоВладельцам.СорнаяПримесьПобочногоПродукта КАК СорнаяПримесьПобочногоПродукта,
		               |	РасшифровкаПоВладельцам.СорнаяПримесьПриход КАК СорнаяПримесьПриход,
		               |	РасшифровкаПоВладельцам.СорнаяПримесьПриходБезПереоформления КАК СорнаяПримесьПриходБезПереоформления,
		               |	РасшифровкаПоВладельцам.СорнаяПримесьПриходВнутр КАК СорнаяПримесьПриходВнутр,
		               |	РасшифровкаПоВладельцам.СорнаяПримесьПриходПереоформление КАК СорнаяПримесьПриходПереоформление,
		               |	РасшифровкаПоВладельцам.СорнаяПримесьРасход КАК СорнаяПримесьРасход,
		               |	РасшифровкаПоВладельцам.СорнаяПримесьРасходВнутр КАК СорнаяПримесьРасходВнутр,
		               |	РасшифровкаПоВладельцам.СорнаяПримесьРасходПереоформление КАК СорнаяПримесьРасходПереоформление,
		               |	РасшифровкаПоВладельцам.СорнаяПримесьРасходРеализация КАК СорнаяПримесьРасходРеализация,
		               |	РасшифровкаПоВладельцам.УбыльВесаПриСушке КАК УбыльВесаПриСушке,
		               |	РасшифровкаПоВладельцам.УбыльПоВлажности КАК УбыльПоВлажности,
		               |	РасшифровкаПоВладельцам.УбыльПоЕстественной КАК УбыльПоЕстественной,
		               |	РасшифровкаПоВладельцам.УбыльПоПрочей КАК УбыльПоПрочей,
		               |	РасшифровкаПоВладельцам.УбыльПоСорнойПримеси КАК УбыльПоСорнойПримеси,
		               |	РасшифровкаПоВладельцам.ФизическийВесОтходы1Категории КАК ФизическийВесОтходы1Категории,
		               |	РасшифровкаПоВладельцам.ФизическийВесОтходы2Категории КАК ФизическийВесОтходы2Категории,
		               |	РасшифровкаПоВладельцам.ФизическийВесОтходы3Категории КАК ФизВесОтходы3Кат,
		               |	РасшифровкаПоВладельцам.ФизическийВесПобочногоПродукта КАК ФизическийВесПобочногоПродукта,
		               |	ИНАГРО_АктЗачистки.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		               |	ИНАГРО_АктЗачистки.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
		               |	ИНАГРО_АктЗачистки.Дата КАК Дата,
		               |	ИНАГРО_АктЗачистки.Начало1 КАК Начало1,
		               |	ИНАГРО_АктЗачистки.Номер КАК Номер,
		               |	ИНАГРО_АктЗачистки.Организация КАК Организация,
		               |	ИНАГРО_АктЗачистки.Склад КАК Склад,
		               |	РасшифровкаПоВладельцам.Владелец.НаименованиеПолное КАК ВладелецНаименованиеПолное
		               |ИЗ
		               |	Документ.ИНАГРО_АктЗачистки КАК ИНАГРО_АктЗачистки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_АктЗачистки.Итоги КАК РасшифровкаПоВладельцам
		               |		ПО (РасшифровкаПоВладельцам.Ссылка = ИНАГРО_АктЗачистки.Ссылка)
		               |ГДЕ
		               |	РасшифровкаПоВладельцам.Ссылка В(&МассивОбъектов)
		               |ИТОГИ
		               |	СУММА(НомерСтроки),
		               |	СУММА(ВесПоВлажности1Категории),
		               |	СУММА(ВесПоВлажности2Категории),
		               |	СУММА(ВесПоВлажности3кат),
		               |	СУММА(ВесПоВлажностиНачальныйОстаток),
		               |	СУММА(ВесПоВлажностиПобочногоПродукта),
		               |	СУММА(ВесПоВлажностиПриход),
		               |	СУММА(ВесПоВлажностиПриходБезПереоформления),
		               |	СУММА(ВесПоВлажностиПриходВнутр),
		               |	СУММА(ВесПоВлажностиПриходПереоформление),
		               |	СУММА(ВесПоВлажностиРасход),
		               |	СУММА(ВесПоВлажностиРасходВнутр),
		               |	СУММА(ВесПоВлажностиРасходПереоформление),
		               |	СУММА(ВесПоВлажностиРасходРеализация),
		               |	СУММА(ВесПоЗерновойПримесиНачальныйОстаток),
		               |	СУММА(ВесПоЗерновойПримесиПриход),
		               |	СУММА(ВесПоЗерновойПримесиПриходБезПереоформления),
		               |	СУММА(ВесПоЗерновойПримесиПриходВнутр),
		               |	СУММА(ВесПоЗерновойПримесиПриходПереоформление),
		               |	СУММА(ВесПоЗерновойПримесиРасход),
		               |	СУММА(ВесПоСорнойПримесиПобочногоПродукта),
		               |	СУММА(ВесПоСорнойПримеси1Категории),
		               |	СУММА(ВесПоСорнойПримеси2Категории),
		               |	СУММА(ВесПоСорной3кат),
		               |	СУММА(ВесПоСорнойПримесиНачальныйОстаток),
		               |	СУММА(ВесПоСорнойПримесиПриход),
		               |	СУММА(ВесПоСорнойПримесиПриходБезПереоформления),
		               |	СУММА(ВесПоСорнойПримесиПриходВнутр),
		               |	СУММА(ВесПоСорнойПримесиПриходПереоформление),
		               |	СУММА(ВесПоСорнойПримесиРасход),
		               |	СУММА(ВесПоСорнойПримесиРасходВнутр),
		               |	СУММА(ВесПоСорнойПримесиРасходПереоформление),
		               |	СУММА(ВесПоСорнойПримесиРасходРеализация),
		               |	СУММА(ВесПриход),
		               |	СУММА(ВесПриходБезПереоформления),
		               |	СУММА(ВесПриходВнутр),
		               |	СУММА(ВесПриходНачальныйОстаток),
		               |	СУММА(ВесПриходПереоформление),
		               |	СУММА(ВесРасход),
		               |	СУММА(ВесРасходВнутр),
		               |	СУММА(ВесРасходПереоформление),
		               |	СУММА(ВесРасходРеализация),
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Владелец),
		               |	СУММА(Влажность1Категории),
		               |	СУММА(Влажность2Категории),
		               |	СУММА(Влажность3Категории),
		               |	СУММА(ВлажностьОстаткаНаНачало),
		               |	СУММА(ВлажностьПобочногоПродукта),
		               |	СУММА(ВлажностьПриход),
		               |	СУММА(ВлажностьПриходБезПереоформления),
		               |	СУММА(ВлажностьПриходВнутр),
		               |	СУММА(ВлажностьПриходПереоформление),
		               |	СУММА(ВлажностьРасход),
		               |	СУММА(ВлажностьРасходВнутр),
		               |	СУММА(ВлажностьРасходПереоформление),
		               |	СУММА(ВлажностьРасходРеализация),
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДоговорКонтрагента),
		               |	СУММА(ЗерноваяПримесьОстаткаНаНачало),
		               |	СУММА(ЗерноваяПримесьПриход),
		               |	СУММА(ЗерноваяПримесьРасход),
		               |	СУММА(Остаток37),
		               |	СУММА(ПовышениеПоВлажности),
		               |	СУММА(ПовышениеПоСорнойПримеси),
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Регистратор),
		               |	СУММА(СорнаяПримесь1Категории),
		               |	СУММА(СорнаяПримесь2Категории),
		               |	СУММА(СорнаяПримесь3Категории),
		               |	СУММА(СорнаяПримесьОстаткаНаНачало),
		               |	СУММА(СорнаяПримесьПобочногоПродукта),
		               |	СУММА(СорнаяПримесьПриход),
		               |	СУММА(СорнаяПримесьПриходБезПереоформления),
		               |	СУММА(СорнаяПримесьПриходВнутр),
		               |	СУММА(СорнаяПримесьПриходПереоформление),
		               |	СУММА(СорнаяПримесьРасход),
		               |	СУММА(СорнаяПримесьРасходВнутр),
		               |	СУММА(СорнаяПримесьРасходПереоформление),
		               |	СУММА(СорнаяПримесьРасходРеализация),
		               |	СУММА(УбыльВесаПриСушке),
		               |	СУММА(УбыльПоВлажности),
		               |	СУММА(УбыльПоЕстественной),
		               |	СУММА(УбыльПоПрочей),
		               |	СУММА(УбыльПоСорнойПримеси),
		               |	СУММА(ФизическийВесОтходы1Категории),
		               |	СУММА(ФизическийВесОтходы2Категории),
		               |	СУММА(ФизВесОтходы3Кат),
		               |	СУММА(ФизическийВесПобочногоПродукта),
		               |	МАКСИМУМ(ОрганизацияНаименованиеПолное),
		               |	МАКСИМУМ(НоменклатураНаименованиеПолное),
		               |	МАКСИМУМ(Дата),
		               |	МАКСИМУМ(Начало1),
		               |	МАКСИМУМ(Номер),
		               |	МАКСИМУМ(Организация),
		               |	МАКСИМУМ(Склад),
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВладелецНаименованиеПолное)
		               |ПО
		               |	Ссылка" ;
					   
					   
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		ВыборкаСсылка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.Заполнить(Ссылка);
		
		Шапка.Параметры.Фирма = Ссылка.Организация.НаименованиеПолное;
		Шапка.Параметры.НомерДок = Ссылка.Номер;
		Шапка.Параметры.ДатаДок = Формат(Ссылка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.ТМЦ = Ссылка.Номенклатура.НаименованиеПолное;
		Шапка.Параметры.Начало = Формат(Ссылка.Начало1, "ДЛФ=D");
		
		ТабДокумент.Вывести(Шапка);
		
		Пока ВыборкаСсылка.Следующий() Цикл			

			ВысотаШапки = ТабДокумент.ВысотаТаблицы;	
			ТабДокумент.ПовторятьПриПечатиСтроки = ТабДокумент.Область("R8:R" + ВысотаШапки);
			
			ОблСтрока = Макет.ПолучитьОбласть("Строка");
			ТабЧастьИтоги = ВыборкаСсылка.Ссылка.Итоги;
			Ном = 0;
			
			Для Каждого	ТекСтр Из Ссылка.Итоги Цикл
				Ном = Ном + 1;
				ЗаполнитьЗначенияСвойств(ОблСтрока.Параметры, ТекСтр);
				ОблСтрока.Параметры.Ном = Ном;
				ОблСтрока.Параметры.Владелец = ТекСтр.Владелец.НаименованиеПолное;
				Приложение_ВесПП_1_2Кат = ТекСтр.ФизическийВесПобочногоПродукта + ТекСтр.ФизическийВесОтходы1Категории + ТекСтр.ФизическийВесОтходы2Категории;
				Приложение_ВесПоВлажностиПП_1_2Кат = ТекСтр.ВесПоВлажностиПобочногоПродукта + ТекСтр.ВесПоВлажности1Категории + ТекСтр.ВесПоВлажности2Категории;
				Приложение_ВесПоСорнойПримесиПП_1_2Кат = ТекСтр.ВесПоСорнойПримесиПобочногоПродукта + ТекСтр.ВесПоСорнойПримеси1Категории + ТекСтр.ВесПоСорнойПримеси2Категории;
				
				ОблСтрока.Параметры.Приложение_ВесПП_1_2Кат = Приложение_ВесПП_1_2Кат;
				ОблСтрока.Параметры.Приложение_ВлажностьПП_1_2_кат = ИНАГРО_Элеватор.Процент(Приложение_ВесПП_1_2Кат, Приложение_ВесПоВлажностиПП_1_2Кат);
				ОблСтрока.Параметры.Приложение_СорнаяПримесьПП_1_2_кат = ИНАГРО_Элеватор.Процент(Приложение_ВесПП_1_2Кат, Приложение_ВесПоСорнойПримесиПП_1_2Кат);
				
				ОблСтрока.Параметры.Влажность3Кат = ИНАГРО_Элеватор.Процент(ТекСтр.ФизическийВесОтходы3Категории, ТекСтр.ВесПоВлажности3Категории);
				ОблСтрока.Параметры.СорнаяПримесь3Кат = ИНАГРО_Элеватор.Процент(ТекСтр.ФизическийВесОтходы3Категории, ТекСтр.ВесПоСорнойПримеси3Категории);
				ОблСтрока.Параметры.ФизВесОтходы3Кат = ТекСтр.ФизическийВесОтходы3Категории;
				ОблСтрока.Параметры.Остаток = ТекСтр.ВесПриход - ТекСтр.ВесРасход;
				
				ТабДокумент.Вывести(ОблСтрока);
			КонецЦикла;

			ОблИтог = Макет.ПолучитьОбласть("Итог");
			ЗаполнитьЗначенияСвойств(ОблИтог.Параметры, ВыборкаСсылка);		
			// Нач. остаток
			ОблИтог.Параметры.ВлажностьНачальныйОстаток = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесПриходНачальныйОстаток, ВыборкаСсылка.ВесПоВлажностиНачальныйОстаток);		
			ОблИтог.Параметры.СорнаяПримесьНачальныйОстаток = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесПриходНачальныйОстаток, ВыборкаСсылка.ВесПоСорнойПримесиНачальныйОстаток);
			// Приход
			ОблИтог.Параметры.ВлажностьПриход = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесПриход, ВыборкаСсылка.ВесПоВлажностиПриход);
			ОблИтог.Параметры.СорнаяПримесьПриход = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесПриход, ВыборкаСсылка.ВесПоСорнойПримесиПриход);
			ОблИтог.Параметры.ВлажностьПриходПереоформление = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесПриходПереоформление, ВыборкаСсылка.ВесПоВлажностиПриходПереоформление);
			ОблИтог.Параметры.СорнаяПримесьПриходПереоформление = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесПриходПереоформление, ВыборкаСсылка.ВесПоСорнойПримесиПриходПереоформление);
			ОблИтог.Параметры.ВлажностьПриходБезПереоформления = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесПриходБезПереоформления, ВыборкаСсылка.ВесПоВлажностиПриходБезПереоформления);
			ОблИтог.Параметры.СорнаяПримесьПриходБезПереоформления = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесПриходБезПереоформления, ВыборкаСсылка.ВесПоСорнойПримесиПриходБезПереоформления);
			// Расход
			ОблИтог.Параметры.ВлажностьРасход = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесРасход, ВыборкаСсылка.ВесПоВлажностиРасход);
			ОблИтог.Параметры.СорнаяПримесьРасход = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесРасход, ВыборкаСсылка.ВесПоСорнойПримесиРасход);
			ОблИтог.Параметры.ВлажностьРасходПереоформление = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесРасходПереоформление, ВыборкаСсылка.ВесПоВлажностиРасходПереоформление);
			ОблИтог.Параметры.СорнаяПримесьРасходПереоформление = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесРасходПереоформление, ВыборкаСсылка.ВесПоСорнойПримесиРасходПереоформление);
			ОблИтог.Параметры.ВлажностьРасходРеализация = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесРасходРеализация, ВыборкаСсылка.ВесПоВлажностиРасходРеализация);
			ОблИтог.Параметры.СорнаяПримесьРасходРеализация = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ВесРасходРеализация, ВыборкаСсылка.ВесПоСорнойПримесиРасходРеализация);
			// Отходы
			Приложение_ВесПП_1_2Кат = ВыборкаСсылка.ФизическийВесПобочногоПродукта + ВыборкаСсылка.ФизическийВесОтходы1Категории + ВыборкаСсылка.ФизическийВесОтходы2Категории;
			Приложение_ВесПоВлажностиПП_1_2Кат = ВыборкаСсылка.ВесПоСорнойПримесиПобочногоПродукта + ВыборкаСсылка.ВесПоВлажности1Категории + ВыборкаСсылка.ВесПоВлажности2Категории;
			Приложение_ВесПоСорнойПримесиПП_1_2Кат = ВыборкаСсылка.ВесПоСорнойПримесиПобочногоПродукта + ВыборкаСсылка.ВесПоСорнойПримеси1Категории + ВыборкаСсылка.ВесПоСорнойПримеси2Категории;
			ОблИтог.Параметры.Приложение_ВесПП_1_2Кат = Приложение_ВесПП_1_2Кат;
			ОблИтог.Параметры.Приложение_ВлажностьПП_1_2_кат = ИНАГРО_Элеватор.Процент(Приложение_ВесПП_1_2Кат, Приложение_ВесПоВлажностиПП_1_2Кат);
			ОблИтог.Параметры.Приложение_СорнаяПримесьПП_1_2_кат = ИНАГРО_Элеватор.Процент(Приложение_ВесПП_1_2Кат, Приложение_ВесПоСорнойПримесиПП_1_2Кат);
			ОблИтог.Параметры.Влажность3Кат = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ФизВесОтходы3Кат, ВыборкаСсылка.ВесПоВлажности3кат);
			ОблИтог.Параметры.СорнаяПримесь3Кат = ИНАГРО_Элеватор.Процент(ВыборкаСсылка.ФизВесОтходы3Кат, ВыборкаСсылка.ВесПоСорной3кат);
			// Остаток
			ОблИтог.Параметры.Остаток = ВыборкаСсылка.ВесПриход - ВыборкаСсылка.ВесРасход;		
			
			ТабДокумент.Вывести(ОблИтог);
			//
					
			ТабДокумент.ФиксацияСверху = ВысотаШапки;
			ТабДокумент.АвтоМасштаб	= Истина;
			ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			ТабДокумент.ПолеСлева 	= 10;
			ТабДокумент.ПолеСправа 	= 5;
			ТабДокумент.ПолеСверху 	= 5;
			ТабДокумент.ПолеСнизу 	= 5;	
			ТабДокумент.ИмяПараметровПечати = "ИНАГРО_АктЗачистки_РасшифровкаПоВладельцам";
			
			
						   
		КонецЦикла;
		
		ОблДно = Макет.ПолучитьОбласть("Дно");
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(Ссылка.Организация, Ссылка.Дата);
		ОблДно.Параметры.Руководитель = Руководители.Руководитель;
		ОблДно.Параметры.НачальникВТЛ = Руководители.НачальникВТЛ;
		ОблДно.Параметры.ГлавныйБухгалтер = Руководители.ГлавныйБухгалтер;
		ДанныеОтветственногоЛица = Неопределено;
		ЗавСкладом = ИНАГРО_Элеватор.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата, Ссылка.Склад, ДанныеОтветственногоЛица);
		ОблДно.Параметры.ЗавСкладом = ДанныеОтветственногоЛица.ФИО;
		
		ТабДокумент.Вывести(ОблДно);

		
	КонецЦикла;
	
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьДокумента()

Функция ПечатьРасчетСреднегоСтрокаХранения(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_АктЗачистки.ПФ_MXL_РасчетСреднегоСтрокаХранения";
	
	Для Каждого Ссылка Из МассивОбъектов Цикл

		Макет = ПолучитьМакет("ПФ_MXL_РасчетСреднегоСтрокаХранения");
		
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;

		// первый запрос выбирает остатки взаиморасчетов 
		Запрос = Новый Запрос;
		
		Фильтр = "";
		Фильтр = Фильтр + " Организация В ИЕРАРХИИ(&Организация)";	
		Фильтр = Фильтр + ?(ЗначениеЗаполнено(Ссылка.Урожай)		, "И Урожай В ИЕРАРХИИ(&Урожай)", "");	
		Фильтр = Фильтр + ?(ЗначениеЗаполнено(Ссылка.Склад)		, "И Склад В ИЕРАРХИИ(&Склад)", "");
		Фильтр = Фильтр + ?(ЗначениеЗаполнено(Ссылка.ВидХранения)	, "И ВидХранения В ИЕРАРХИИ(&ВидХранения)", "");
		Фильтр = Фильтр + ?(ЗначениеЗаполнено(Ссылка.Номенклатура)	, "И Номенклатура В ИЕРАРХИИ(&Номенклатура)", "");
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.Организация КАК Организация,
		|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.Склад КАК Склад,
		|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.Урожай КАК Урожай,
		|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.ВидХранения КАК ВидХранения,
		|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.Период КАК Период,
		|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.ВесПриходКонечныйОстаток КАК Приход,
		|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.ВесПриходКонечныйОстаток КАК ВесПриходКонечныйОстаток,
		|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.ВесРасходКонечныйОстаток КАК ВесРасходКонечныйОстаток
		|ИЗ
		|	РегистрНакопления.ИНАГРО_Форма36Сводная.ОстаткиИОбороты(&НачПериода, &КонПериода, День, , "+Фильтр+") КАК ИНАГРО_Форма36СводнаяОстаткиИОбороты
		|ИТОГИ
		|	СУММА(ВесПриходКонечныйОстаток),
		|	СУММА(ВесРасходКонечныйОстаток),
		|	СУММА(Приход)
		|ПО
		|	Организация,
		|	Склад,
		|	Урожай,
		|	ВидХранения,
		|	Номенклатура,
		|	Период ПЕРИОДАМИ(ДЕНЬ, &НачПериода, &КонПериода)";
		
		// "+Фильтр+"
		Запрос.УстановитьПараметр("НачПериода",Ссылка.ДатаНачала);
		Запрос.УстановитьПараметр("КонПериода",Ссылка.ДатаОкончания);
		Запрос.УстановитьПараметр("Организация",Ссылка.Организация);
		Запрос.УстановитьПараметр("Урожай",Ссылка.Урожай);
		Запрос.УстановитьПараметр("Склад",Ссылка.Склад);
		Запрос.УстановитьПараметр("ВидХранения",Ссылка.ВидХранения);
		Запрос.УстановитьПараметр("Номенклатура",Ссылка.Номенклатура);
		
		Результат = Запрос.Выполнить();
		
		// создаем тз
		ТЗВременная = Результат.Выгрузить();
		// ... и очищаем ее
		ТЗВременная.Очистить();	
		// обходим результат "периодами" помещая в тз
		
		ВыборкаОрганизация = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Организация");
		Пока ВыборкаОрганизация.Следующий() Цикл	
			ВыборкаСклад = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Склад");
			Пока ВыборкаСклад.Следующий() Цикл			
				ВыборкаУрожай = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Урожай");
				Пока ВыборкаУрожай.Следующий() Цикл		
					ВыборкаВидХранения = ВыборкаУрожай.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ВидХранения");
					Пока ВыборкаВидХранения.Следующий() Цикл	
						ВыборкаНоменклатура = ВыборкаВидХранения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Номенклатура");
						Пока ВыборкаНоменклатура.Следующий() Цикл
							ВыборкаПериод = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период","ВСЕ");
							Пока ВыборкаПериод.Следующий() Цикл 
								НСтрока = ТЗВременная.Добавить();
								ЗаполнитьЗначенияСвойств(НСтрока,ВыборкаПериод);			
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;	
		
		// второй запрос нужен чтобы поместить нашу тз во временную таблицу
		Запрос = Новый Запрос;
		МВТ = Новый МенеджерВременныхТаблиц;
		Запрос.МенеджерВременныхТаблиц = МВТ;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаПараметр.Организация,
		|	ТаблицаПараметр.Склад,
		|	ТаблицаПараметр.Урожай,
		|	ТаблицаПараметр.ВидХранения,	
		|	ТаблицаПараметр.Номенклатура,
		|	ТаблицаПараметр.Период,
		|	ТаблицаПараметр.ВесПриходКонечныйОстаток КАК ВесПриходКонечныйОстаток,
		|	ТаблицаПараметр.ВесРасходКонечныйОстаток КАК ВесРасходКонечныйОстаток
		|ПОМЕСТИТЬ ВременнаяТаблица
		|ИЗ
		|	&ТаблицаПараметр КАК ТаблицаПараметр";
		
		Запрос.УстановитьПараметр("ТаблицаПараметр", ТЗВременная);
		
		Результат = Запрос.Выполнить();		
		
		// Третий запрос - используем нашу временную таблицу, соединяя ее с другой и вычисляя произвольную формулу.
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МВТ;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВременнаяТаблица.Организация КАК Организация,
		|	ВременнаяТаблица.Склад КАК Склад,
		|	ВременнаяТаблица.Урожай КАК Урожай,
		|	ВременнаяТаблица.ВидХранения КАК ВидХранения,
		|	ВременнаяТаблица.Номенклатура КАК Номенклатура,
		|	ВременнаяТаблица.Период КАК Период,
		|	ВременнаяТаблица.ВесПриходКонечныйОстаток - ВременнаяТаблица.ВесРасходКонечныйОстаток КАК Остаток,
		|	ЕСТЬNULL(ИНАГРО_Форма36СводнаяОстаткиИОбороты.ВесПриходПриход, 0) КАК Приход
		|ИЗ
		|	ВременнаяТаблица КАК ВременнаяТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИНАГРО_Форма36Сводная.ОстаткиИОбороты(&НачПериода, &КонПериода, День, ,"+Фильтр+" ) КАК ИНАГРО_Форма36СводнаяОстаткиИОбороты
		|		ПО ВременнаяТаблица.ВидХранения = ИНАГРО_Форма36СводнаяОстаткиИОбороты.ВидХранения
		|			И ВременнаяТаблица.Организация = ИНАГРО_Форма36СводнаяОстаткиИОбороты.Организация
		|			И ВременнаяТаблица.Склад = ИНАГРО_Форма36СводнаяОстаткиИОбороты.Склад
		|			И ВременнаяТаблица.Урожай = ИНАГРО_Форма36СводнаяОстаткиИОбороты.Урожай
		|			И ВременнаяТаблица.Номенклатура = ИНАГРО_Форма36СводнаяОстаткиИОбороты.Номенклатура
		|			И ВременнаяТаблица.Период = ИНАГРО_Форма36СводнаяОстаткиИОбороты.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	Урожай,
		|	Склад,
		|	ВидХранения,
		|	Номенклатура,
		|	Период
		|ИТОГИ
		|	СУММА(Остаток),
		|	СУММА(Приход)
		|ПО
		|	Организация,
		|	Урожай,
		|	Склад,
		|	ВидХранения,
		|	Номенклатура,
		|	Период";
		
		Запрос.УстановитьПараметр("НачПериода",Ссылка.ДатаНачала);
		Запрос.УстановитьПараметр("КонПериода",Ссылка.ДатаОкончания);

		Запрос.УстановитьПараметр("Организация",Ссылка.Организация);
		Запрос.УстановитьПараметр("Урожай",Ссылка.Урожай);
		Запрос.УстановитьПараметр("Склад",Ссылка.Склад);
		Запрос.УстановитьПараметр("ВидХранения",Ссылка.ВидХранения);
		Запрос.УстановитьПараметр("Номенклатура",Ссылка.Номенклатура);
		
		ДеревоРезультата = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ТабДокумент = Новый ТабличныйДокумент;
		
		Макет = ПолучитьМакет("ПФ_MXL_РасчетСреднегоСтрокаХранения");
		
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;

		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.Фирма = Ссылка.Организация.НаименованиеПолное;
		Шапка.Параметры.Номенклатура = Ссылка.Номенклатура.НаименованиеПолное;
		Шапка.Параметры.Начало = Формат(Ссылка.ДатаНачала, "ДЛФ=D");
		Шапка.Параметры.Конец = Формат(Ссылка.ДатаОкончания, "ДЛФ=D");
		Шапка.Параметры.Склад = Ссылка.Склад;
		Шапка.Параметры.Урожай = Ссылка.Урожай;
		Шапка.Параметры.ВидХранения = Ссылка.ВидХранения;
		ТабДокумент.Вывести(Шапка);
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		ОблИтог = Макет.ПолучитьОбласть("Итог");
		ВыборкаОрганизация = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Организация");
		Пока ВыборкаОрганизация.Следующий() Цикл	
			ВыборкаУрожай = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Урожай");
			Пока ВыборкаУрожай.Следующий() Цикл
				ВыборкаСклад = ВыборкаУрожай.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Склад");
				Пока ВыборкаСклад.Следующий() Цикл			
					ВыборкаВидХранения = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ВидХранения");
					Пока ВыборкаВидХранения.Следующий() Цикл			
						ВыборкаНоменклатура = ВыборкаВидХранения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Номенклатура");					
						Пока ВыборкаНоменклатура.Следующий() Цикл
							ВыборкаПериод = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
							ИтогСуммаЕжедневныхОстатков = 0;
							ПредыдущийДень = "";
							Ном = 1; 
							ПредыдущийОстаток = 0; 
							КвоДней = 1; 
							ИтогКвоДней = 0; 
							Обход = 0;
							Пока ВыборкаПериод.Следующий() Цикл
								Если ВыборкаПериод.Остаток = 0 Тогда
									Продолжить;
								КонецЕсли;	
								ПоследнийДень = ВыборкаПериод.Период;
								Если ПредыдущийОстаток <> ВыборкаПериод.Остаток Тогда
									Если Обход = 0 Тогда
										СуммаЕжедневныхОстатков = Окр(ПредыдущийОстаток * КвоДней /100, 0);
										ИтогСуммаЕжедневныхОстатков = ИтогСуммаЕжедневныхОстатков + СуммаЕжедневныхОстатков;
										ПредыдущийДень = ВыборкаПериод.Период;
										ПредыдущийОстаток = ВыборкаПериод.Остаток;
										Обход = 1;
									Иначе	
										ОблСтрока.Параметры.Ном = Ном;
										ОблСтрока.Параметры.Период = ПредыдущийДень;
										ОблСтрока.Параметры.Остаток = ПредыдущийОстаток;
										ОблСтрока.Параметры.КвоДней = КвоДней;
										СуммаЕжедневныхОстатков = Окр(ПредыдущийОстаток * КвоДней /100, 0);
										ОблСтрока.Параметры.СуммаЕжедневныхОстатков = СуммаЕжедневныхОстатков;
										ИтогСуммаЕжедневныхОстатков = ИтогСуммаЕжедневныхОстатков + СуммаЕжедневныхОстатков;
										ТабДокумент.Вывести(ОблСтрока);
										ПредыдущийДень = ВыборкаПериод.Период;
										ПредыдущийОстаток = ВыборкаПериод.Остаток;							
										Ном = Ном + 1;								
										КвоДней = 1;
									КонецЕсли;
								Иначе 
									КвоДней = КвоДней + 1;
								КонецЕсли;
								ИтогКвоДней = ИтогКвоДней + 1;
							КонецЦикла;
							Если ПредыдущийДень <> ПоследнийДень Тогда
								ОблСтрока.Параметры.Ном = Ном;
								ОблСтрока.Параметры.Период = ПредыдущийДень;
								ОблСтрока.Параметры.Остаток = ПредыдущийОстаток;
								ОблСтрока.Параметры.КвоДней = КвоДней;
								СуммаЕжедневныхОстатков = Окр(ПредыдущийОстаток * КвоДней /100, 0);
								ОблСтрока.Параметры.СуммаЕжедневныхОстатков = СуммаЕжедневныхОстатков;
								ИтогСуммаЕжедневныхОстатков = ИтогСуммаЕжедневныхОстатков + СуммаЕжедневныхОстатков;
								ТабДокумент.Вывести(ОблСтрока);
							КонецЕсли;
							ОблИтог.Параметры.КвоДней = ИтогКвоДней;
							ОблИтог.Параметры.СуммаЕжедневныхОстатков = ИтогСуммаЕжедневныхОстатков;
							ОбъемПоступления  = Окр(ВыборкаНоменклатура.Приход / 100, 0);
							ОблИтог.Параметры.Приход = ОбъемПоступления;
							СреднийСрокХранения = Окр(?(ОбъемПоступления = 0, 0, ИтогСуммаЕжедневныхОстатков / ОбъемПоступления), 0);
							
							СтруктураПредставлениеСреднегоСрокаХранения 	= ПолучитьПредставлениеСреднегоСрокаХранения(СреднийСрокХранения, КодЯзыкаПечать);
							ОблИтог.Параметры.ПредставлениеСрокаХранения 	= СтруктураПредставлениеСреднегоСрокаХранения.ПредставлениеСрокаХранения;
							
							ТабДокумент.Вывести(ОблИтог);
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция СформироватьФильтрДокумента(Объект, Форма36) Экспорт
	
	Фильтр = "";		
	
	Если Форма36 = "Форма36СводнаяОбщая" Тогда		
		
		Если НЕ ИНАГРО_Элеватор.ПолучитьПараметрУчетаЭлеватора(Объект.Дата, "НеВестиУчетПоВидуХраненияВККУ", Ложь) Тогда
			Если ЗначениеЗаполнено(Объект.ВидХранения) Тогда
				Фильтр = Фильтр + " И ИНАГРО_Форма36Сводная.ВидХранения=&ВидХранения ";
			КонецЕсли;	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Склад) Тогда
			Фильтр = Фильтр + " И ИНАГРО_Форма36Сводная.Склад=&Склад ";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
			Фильтр = Фильтр + " И ИНАГРО_Форма36Сводная.Номенклатура=&Номенклатура ";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Урожай) Тогда
			Фильтр = Фильтр + " И ИНАГРО_Форма36Сводная.Урожай=&Урожай ";
		КонецЕсли;
		
		Если Объект.ДатаНачала <> '00010101000000' И Объект.ДатаОкончания <> '00010101000000' Тогда
			Фильтр = Фильтр + " И ИНАГРО_Форма36Сводная.Период > &ДатаНач ";
			Фильтр = Фильтр + " И ИНАГРО_Форма36Сводная.Период <= &ДатаКон ";
		ИначеЕсли Объект.ДатаНачала <> '00010101000000' Тогда
			Фильтр = Фильтр + " И ИНАГРО_Форма36Сводная.Период > &ДатаНач ";
		ИначеЕсли Объект.ДатаОкончания <> '00010101000000' Тогда
			Фильтр = Фильтр + " И ИНАГРО_Форма36Сводная.Период <= &ДатаКон ";
		КонецЕсли;
		
		Возврат Фильтр;
		
	ИначеЕсли 	Форма36 = "Форма36Сводная" Тогда
		
		Если НЕ ИНАГРО_Элеватор.ПолучитьПараметрУчетаЭлеватора(Объект.Дата, "НеВестиУчетПоВидуХраненияВККУ", Ложь) Тогда
			Если ЗначениеЗаполнено(Объект.ВидХранения) Тогда
				Фильтр = Фильтр +" И ВидХранения=&ВидХранения ";
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Склад) Тогда
			Фильтр = Фильтр + " И Склад=&Склад ";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
			Фильтр = Фильтр + " И Номенклатура=&Номенклатура ";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Урожай) Тогда
			Фильтр = Фильтр + " И Урожай=&Урожай ";
		КонецЕсли;
		
		Возврат Фильтр;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти 

#КонецЕсли

