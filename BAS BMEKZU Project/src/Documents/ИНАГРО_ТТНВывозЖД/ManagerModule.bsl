#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Квитанция
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Квитанция";
	КомандаПечати.Представление = НСтр("ru = 'Квитанция на взвешивание';uk = 'Квитанція на зважування'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка"; 	
    
    // Пропуск
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Пропуск_2021";
	КомандаПечати.Представление = Нстр("ru='Пропуск (2021)';uk='Пропуск (2021)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
    
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Товарно-транспортная накладная (железнодорожная) (вывоз)""';uk='Реєстр документів ""Товарно-транспортна накладна (залізнична) (вивезення)""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры		

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Квитанция") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Квитанция", НСтр("ru = 'Квитанция на взвешивание';uk = 'Квитанція на зважування'"), 
		ПечатьКвитанция(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ТТНВывозЖД.ПФ_MXL_Квитанция", ,Истина);
	 ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Пропуск_2021") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Пропуск_2021", Нстр("ru='Пропуск (2021)';uk='Пропуск (2021)'"), 
		ПечатьПропускФ196_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "ОбОбщийМакети.ИНАГРО_ПФ_MXL_UK_Пропуск_Ф196_2021", ,Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьКвитанция(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ТТНВывозЖД_Квитанция";
	
	Макет = ПолучитьМакет("ПФ_MXL_Квитанция");
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_ТТНВывозЖД.Ссылка,
		|	ИНАГРО_ТТНВывозЖД.ВерсияДанных,
		|	ИНАГРО_ТТНВывозЖД.ПометкаУдаления,
		|	ИНАГРО_ТТНВывозЖД.Номер,
		|	ИНАГРО_ТТНВывозЖД.Дата,
		|	ИНАГРО_ТТНВывозЖД.Проведен,
		|	ИНАГРО_ТТНВывозЖД.Вес,
		|	ИНАГРО_ТТНВывозЖД.ВесБрутто,
		|	ИНАГРО_ТТНВывозЖД.ВесНетто,
		|	ИНАГРО_ТТНВывозЖД.Весовщик,
		|	ИНАГРО_ТТНВывозЖД.ВесТары,
		|	ИНАГРО_ТТНВывозЖД.ВидЖурнала,
		|	ИНАГРО_ТТНВывозЖД.ВидХранения,
		|	ИНАГРО_ТТНВывозЖД.Владелец,
		|	ИНАГРО_ТТНВывозЖД.Влажность,
		|	ИНАГРО_ТТНВывозЖД.ВремяВыбытия,
		|	ИНАГРО_ТТНВывозЖД.ВремяПрибытия,
		|	ИНАГРО_ТТНВывозЖД.ДоговорКонтрагента,
		|	ИНАГРО_ТТНВывозЖД.ЗачетныйВес,
		|	ИНАГРО_ТТНВывозЖД.ЗерноваяПримесь,
		|	ИНАГРО_ТТНВывозЖД.Комментарий,
		|	ИНАГРО_ТТНВывозЖД.ЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывозЖД.МестоХранения,
		|	ИНАГРО_ТТНВывозЖД.Номенклатура,
		|	ИНАГРО_ТТНВывозЖД.НомерАнализа,
		|	ИНАГРО_ТТНВывозЖД.НомерВагона,
		|	ИНАГРО_ТТНВывозЖД.НомерЖурнала,
		|	ИНАГРО_ТТНВывозЖД.НомерНакладной,
		|	ИНАГРО_ТТНВывозЖД.ОписаниеДвиженияФормы36,
		|	ИНАГРО_ТТНВывозЖД.Организация,
		|	ИНАГРО_ТТНВывозЖД.Ответственный,
		|	ИНАГРО_ТТНВывозЖД.ПриказНаВывоз,
		|	ИНАГРО_ТТНВывозЖД.Склад,
		|	ИНАГРО_ТТНВывозЖД.СорнаяПримесь,
		|	ИНАГРО_ТТНВывозЖД.ТипЖурнала,
		|	ИНАГРО_ТТНВывозЖД.УдалитьТранспорт,
		|	ИНАГРО_ТТНВывозЖД.УдалитьЕдиницаИзмерения,
		|	ИНАГРО_ТТНВывозЖД.УдалитьЖурналВесовщика,
		|	ИНАГРО_ТТНВывозЖД.УдалитьОтражатьВБухгалтерскомУчете,
		|	ИНАГРО_ТТНВывозЖД.Урожай,
		|	ИНАГРО_ТТНВывозЖД.Представление,
		|	ИНАГРО_ТТНВывозЖД.МоментВремени,
		|	ИНАГРО_ТТНВывозЖД.Организация.НаименованиеПолное
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывозЖД КАК ИНАГРО_ТТНВывозЖД
		|ГДЕ
		|	ИНАГРО_ТТНВывозЖД.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		//Шапка
		ОблШапка = Макет.ПолучитьОбласть("Шапка");
		ОблШапка.Параметры.Заполнить(Выборка);
		
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(ОблШапка.Параметры.Владелец);
		
		ОблШапка.Параметры.Организация = Выборка.ОрганизацияНаименованиеПолное;
		ВремяНачалаДняПриОтгрузке = ИНАГРО_Элеватор.ПолучитьПараметрУчетаЭлеватора(Выборка.Дата, "ВремяНачалаДняПриОтгрузке", 0);
		Если ВремяНачалаДняПриОтгрузке <> 0 Тогда
			Облшапка.Параметры.Дата = Формат(Выборка.ВремяВыбытия, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Иначе
			Облшапка.Параметры.Дата = Формат(Выборка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		КонецЕсли;
		ОблШапка.Параметры.ВесПрописью = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,Выборка.Вес);
		ТабДокумент.Вывести(ОблШапка);
		
		//Дно
		ОблДно = Макет.ПолучитьОбласть("Дно");
		ТабДокумент.Вывести(ОблДно);
		//Разделитель
		ОблРазделитель = Макет.ПолучитьОбласть("Разделитель");
		ТабДокумент.Вывести(ОблРазделитель);
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

Функция ПечатьПропускФ196_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ТТНВывоз_Пропуск_2021";
    
    Макет = ПолучитьОбщийМакет("ИНАГРО_ПФ_MXL_UK_Пропуск_Ф196_2021");
    
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
    
    ПервыйДокумент = Истина;
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |   ИНАГРО_ТТНВывозЖД.Ссылка КАК Ссылка,
    |   ИНАГРО_ТТНВывозЖД.ВерсияДанных КАК ВерсияДанных,
    |   ИНАГРО_ТТНВывозЖД.ПометкаУдаления КАК ПометкаУдаления,
    |   ИНАГРО_ТТНВывозЖД.Номер КАК Номер,
    |   ИНАГРО_ТТНВывозЖД.Дата КАК Дата,
    |   ИНАГРО_ТТНВывозЖД.Проведен КАК Проведен,
    |   ИНАГРО_ТТНВывозЖД.Вес КАК Вес,
    |   ИНАГРО_ТТНВывозЖД.ВесБрутто КАК ВесБрутто,
    |   ИНАГРО_ТТНВывозЖД.ВесНетто КАК ВесНетто,
    |   ИНАГРО_ТТНВывозЖД.Весовщик КАК Весовщик,
    |   ИНАГРО_ТТНВывозЖД.ВесТары КАК ВесТары,
    |   ИНАГРО_ТТНВывозЖД.ВидЖурнала КАК ВидЖурнала,
    |   ИНАГРО_ТТНВывозЖД.ВидХранения КАК ВидХранения,
    |   ИНАГРО_ТТНВывозЖД.Владелец КАК Владелец,
    |   ИНАГРО_ТТНВывозЖД.Влажность КАК Влажность,
    |   ИНАГРО_ТТНВывозЖД.ВремяВыбытия КАК ВремяВыбытия,
    |   ИНАГРО_ТТНВывозЖД.ВремяПрибытия КАК ВремяПрибытия,
    |   ИНАГРО_ТТНВывозЖД.ДоговорКонтрагента КАК ДоговорКонтрагента,
    |   ИНАГРО_ТТНВывозЖД.ЗачетныйВес КАК ЗачетныйВес,
    |   ИНАГРО_ТТНВывозЖД.ЗерноваяПримесь КАК ЗерноваяПримесь,
    |   ИНАГРО_ТТНВывозЖД.Комментарий КАК Комментарий,
    |   ИНАГРО_ТТНВывозЖД.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
    |   ИНАГРО_ТТНВывозЖД.МестоХранения КАК МестоХранения,
    |   ИНАГРО_ТТНВывозЖД.Номенклатура КАК Номенклатура,
    |   ИНАГРО_ТТНВывозЖД.НомерАнализа КАК НомерАнализа,
    |   ИНАГРО_ТТНВывозЖД.НомерЖурнала КАК НомерЖурнала,
    |   ИНАГРО_ТТНВывозЖД.НомерНакладной КАК НомерНакладной,
    |   ИНАГРО_ТТНВывозЖД.ОписаниеДвиженияФормы36 КАК ОписаниеДвиженияФормы36,
    |   ИНАГРО_ТТНВывозЖД.Организация КАК Организация,
    |   ИНАГРО_ТТНВывозЖД.Ответственный КАК Ответственный,
    |   ИНАГРО_ТТНВывозЖД.ПриказНаВывоз КАК ПриказНаВывоз,
    |   ИНАГРО_ТТНВывозЖД.Склад КАК Склад,
    |   ИНАГРО_ТТНВывозЖД.СорнаяПримесь КАК СорнаяПримесь,
    |   ИНАГРО_ТТНВывозЖД.ТипЖурнала КАК ТипЖурнала,
    |   ИНАГРО_ТТНВывозЖД.Урожай КАК Урожай,
    |   ИНАГРО_ТТНВывозЖД.Представление КАК Представление,
    |   ИНАГРО_ТТНВывозЖД.МоментВремени КАК МоментВремени,
    |   ИНАГРО_ТТНВывозЖД.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
    |   ИНАГРО_ТТНВывозЖД.Организация.Наименование КАК ОрганизацияНаименование,
    |   ИНАГРО_ТТНВывозЖД.Владелец.Наименование КАК ВладелецНаименование,
    |   ИНАГРО_ТТНВывозЖД.ПриказНаВывоз.Номер КАК ПриказНаВывозНомер,
    |   ИНАГРО_ТТНВывозЖД.ПриказНаВывоз.Дата КАК ПриказНаВывозДата,
    |   ИНАГРО_ТТНВывозЖД.ПриказНаВывоз.ДоверенностьДата КАК ПриказНаВывозДоверенностьДата,
    |   ИНАГРО_ТТНВывозЖД.ПриказНаВывоз.ДоверенностьНомер КАК ПриказНаВывозДоверенностьНомер,
    |   ИНАГРО_ТТНВывозЖД.ПриказНаВывоз.ДоверенностьСерия КАК ПриказНаВывозДоверенностьСерия,
    |   ИНАГРО_ТТНВывозЖД.ПриказНаВывоз.ДоверенностьЧерез КАК ПриказНаВывозДоверенностьЧерез,
    |   ИНАГРО_ТТНВывозЖД.НомерВагона КАК НомерВагона
    |ИЗ
    |   Документ.ИНАГРО_ТТНВывозЖД КАК ИНАГРО_ТТНВывозЖД
    |ГДЕ
    |   ИНАГРО_ТТНВывозЖД.Ссылка В(&МассивОбъектов)";
    
    Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
    
     
    Выборка   = Запрос.Выполнить().Выбрать();
    
    
    Пока Выборка.Следующий() Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        КвоЭкземпляров = 2;
        СтруктураСохранения = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_ТТНВывоз_Пропуск_2021");	
        Если СтруктураСохранения <> Неопределено Тогда
            КвоЭкземпляров = СтруктураСохранения.ВыбранноеКоличествоПропуск_2021; 
        КонецЕсли;
        
        Если КвоЭкземпляров > 1 Тогда
            КвоЭкземпляровНаСтраницу = 2;
            КвоЭкземпляровПоделенноеНаДва = Окр(КвоЭкземпляров/2,0);
        Иначе 
            КвоЭкземпляровНаСтраницу = 1;
            КвоЭкземпляровПоделенноеНаДва = 1;
        КонецЕсли; 
        
        КоличествоНапечатанныхЭкземпляров = 0;
        НомерЭкземпляраДелНаДва = 1;
        Пока НомерЭкземпляраДелНаДва <= КвоЭкземпляровПоделенноеНаДва Цикл
            
            ОблОбщая = Макет.ПолучитьОбласть("Общая|Лист");
            
            ОблШапка = Макет.ПолучитьОбласть("Шапка|Лист");
            
            ОблШапка.Параметры.Организация = Выборка.ОрганизацияНаименованиеПолное;
            
            СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация,,,,КодЯзыкаПечать);
            ОблШапка.Параметры.ЕДРПУ = СведенияОбОрганизации.КодПоЕДРПОУ;
            
            ОблШапка.Параметры.НомерДок = Выборка.Номер;
            
            ОблШапка.Параметры.ВодительАвтомобиль = Нстр("ru='вагона № ';uk='вагону № '") + Строка(Выборка.НомерВагона);
            ОблШапка.Параметры.День               = Формат(Выборка.Дата, "ДФ=дд");
            ОблШапка.Параметры.Месяц              = МесяцПрописью(Выборка.Дата,ПараметрыВывода);
            ОблШапка.Параметры.Год                  = Формат(Выборка.Дата, "ДФ=гг");
            ОблШапка.Параметры.Часов              = Формат(Выборка.Дата, "ДФ=Ч");
            ОблШапка.Параметры.Минут              = Формат(Выборка.Дата, "ДФ=мм");
            
            //ОблШапка.Параметры.ЧерезКого = Выборка.ДоверенностьЧерез;
            ОблШапка.Параметры.НомерНакладной = Выборка.Номер;
            
            
            ОблСтрока = Макет.ПолучитьОбласть("Строка|Лист");
            
            КоличествоМест = 0;
            // КоличествоМест = Выборка.КоличествоМест;
            ОблСтрока.Параметры.Ном				= 1;
            ОблСтрока.Параметры.Номенклатура	= Выборка.Номенклатура;	
            ОблСтрока.Параметры.Вес				= Выборка.Вес;
            //ОблСтрока.Параметры.КвоМест         = Выборка.КоличествоМест;
            //ОблСтрока.Параметры.ВидФасовки      = Выборка.ВидФасовки;
            
            
            ОблДно = Макет.ПолучитьОбласть("Дно|Лист");
            Если  КоличествоМест > 0  Тогда 
                ОблДно.Параметры.КоличествоМестПрописью = ОбщегоНазначенияБПВызовСервера.КоличествоПрописью(КоличествоМест, КодЯзыкаПечать);
            КонецЕсли;
            ОблДно.Параметры.ВесПрописью = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать, Выборка.Вес);
            
            ОблДно.Параметры.ЗавСкладом = ИНАГРО_Элеватор.ОтветственныеЛицаИмяФамилия(Выборка.Организация,Выборка.Дата, Выборка.Склад);
            
            
            
            ОблОбратнаяСтраница = Макет.ПолучитьОбласть("ОбратнаяСтраница|Лист");
            
            ОтветственноеЛицо = "";
            ОтветственноеЛицо = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Выборка.Дата, Новый Структура("ФизическоеЛицо", Выборка.Ответственный.ФизическоеЛицо));
            Если ОтветственноеЛицо.Количество() > 0 Тогда
                ОтветственноеЛицо = СокрЛП(ОтветственноеЛицо[0].Имя)
                + " "
                + ВРег(СокрЛП(ОтветственноеЛицо[0].Фамилия)); 
            Иначе
                ОтветственноеЛицо = "";									 
            КонецЕсли;
            ОблОбратнаяСтраница.Параметры.Ответственный = ОтветственноеЛицо;
            
            
            ВывестиОбластьПропуска(ТабДокумент, ОблШапка, КвоЭкземпляровНаСтраницу,КоличествоНапечатанныхЭкземпляров,КвоЭкземпляров);
            ВывестиОбластьПропуска(ТабДокумент, ОблСтрока, КвоЭкземпляровНаСтраницу,КоличествоНапечатанныхЭкземпляров,КвоЭкземпляров);
            ВывестиОбластьПропуска(ТабДокумент, ОблДно, КвоЭкземпляровНаСтраницу,КоличествоНапечатанныхЭкземпляров,КвоЭкземпляров);
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
            ВывестиОбластьПропуска(ТабДокумент, ОблОбратнаяСтраница, КвоЭкземпляровНаСтраницу,КоличествоНапечатанныхЭкземпляров,КвоЭкземпляров);
            
            
            НомерЭкземпляраДелНаДва = НомерЭкземпляраДелНаДва + 1;
            КоличествоНапечатанныхЭкземпляров = КоличествоНапечатанныхЭкземпляров + 2;
            
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
            
        КонецЦикла;
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция МесяцПрописью(ТекДата, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	ФорматДаты=Формат(ТекДата, "ДЛФ=DD;Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	аа=Лев(ФорматДаты,СтрДлина(ФорматДаты)-7);
	Месяц=СокрЛП(Прав(аа,СтрДлина(аа)-2));
	
	Возврат Месяц;
	
КонецФункции

Процедура ВывестиОбластьПропуска(ТабДокумент, Область, КвоЭкземпляровНаСтраницу, КоличествоНапечатанныхЭкземпляров, КвоЭкземпляров)
	
	Ном = 1;
	ОсталосьНапечатать = КвоЭкземпляров - КоличествоНапечатанныхЭкземпляров; 
	
	КвоЭкз = Мин(ОсталосьНапечатать,КвоЭкземпляровНаСтраницу);
	
	Пока Ном <= КвоЭкз Цикл
		Если (Цел(Ном/КвоЭкз) - Ном/КвоЭкз) <> 0 ИЛИ Ном = 1 Тогда
			ТабДокумент.Вывести(Область);
		Иначе 
			ТабДокумент.Присоединить(Область);
		КонецЕсли;				
		Ном = Ном + 1;
	КонецЦикла;	
		
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
Процедура ЗаписатьВыбранноеКоличество(РезультатЗакрытия) Экспорт 
	
	СтруктураСохранения = Новый Структура("ВыбранноеКоличество", РезультатЗакрытия);		
	ХранилищеОбщихНастроек.Сохранить("ИНАГРО_ТТНВывозЖД_Пропуск", , СтруктураСохранения);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли