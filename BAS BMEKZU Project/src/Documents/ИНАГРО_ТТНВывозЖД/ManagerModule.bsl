#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Квитанция
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Квитанция";
	КомандаПечати.Представление = НСтр("ru = 'Квитанция на взвешивание';uk = 'Квитанція на зважування'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка"; 	
		
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Товарно-транспортная накладная (железнодорожная) (вывоз)""';uk='Реєстр документів ""Товарно-транспортна накладна (залізнична) (вивезення)""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры		

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Квитанция") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Квитанция", НСтр("ru = 'Квитанция на взвешивание';uk = 'Квитанція на зважування'"), 
		ПечатьКвитанция(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ТТНВывозЖД.ПФ_MXL_Квитанция", ,Истина);
			
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьКвитанция(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ТТНВывозЖД_Квитанция";
	
	Макет = ПолучитьМакет("ПФ_MXL_Квитанция");
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_ТТНВывозЖД.Ссылка,
		|	ИНАГРО_ТТНВывозЖД.ВерсияДанных,
		|	ИНАГРО_ТТНВывозЖД.ПометкаУдаления,
		|	ИНАГРО_ТТНВывозЖД.Номер,
		|	ИНАГРО_ТТНВывозЖД.Дата,
		|	ИНАГРО_ТТНВывозЖД.Проведен,
		|	ИНАГРО_ТТНВывозЖД.Вес,
		|	ИНАГРО_ТТНВывозЖД.ВесБрутто,
		|	ИНАГРО_ТТНВывозЖД.ВесНетто,
		|	ИНАГРО_ТТНВывозЖД.Весовщик,
		|	ИНАГРО_ТТНВывозЖД.ВесТары,
		|	ИНАГРО_ТТНВывозЖД.ВидЖурнала,
		|	ИНАГРО_ТТНВывозЖД.ВидХранения,
		|	ИНАГРО_ТТНВывозЖД.Владелец,
		|	ИНАГРО_ТТНВывозЖД.Влажность,
		|	ИНАГРО_ТТНВывозЖД.ВремяВыбытия,
		|	ИНАГРО_ТТНВывозЖД.ВремяПрибытия,
		|	ИНАГРО_ТТНВывозЖД.ДоговорКонтрагента,
		|	ИНАГРО_ТТНВывозЖД.ЗачетныйВес,
		|	ИНАГРО_ТТНВывозЖД.ЗерноваяПримесь,
		|	ИНАГРО_ТТНВывозЖД.Комментарий,
		|	ИНАГРО_ТТНВывозЖД.ЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывозЖД.МестоХранения,
		|	ИНАГРО_ТТНВывозЖД.Номенклатура,
		|	ИНАГРО_ТТНВывозЖД.НомерАнализа,
		|	ИНАГРО_ТТНВывозЖД.НомерВагона,
		|	ИНАГРО_ТТНВывозЖД.НомерЖурнала,
		|	ИНАГРО_ТТНВывозЖД.НомерНакладной,
		|	ИНАГРО_ТТНВывозЖД.ОписаниеДвиженияФормы36,
		|	ИНАГРО_ТТНВывозЖД.Организация,
		|	ИНАГРО_ТТНВывозЖД.Ответственный,
		|	ИНАГРО_ТТНВывозЖД.ПриказНаВывоз,
		|	ИНАГРО_ТТНВывозЖД.Склад,
		|	ИНАГРО_ТТНВывозЖД.СорнаяПримесь,
		|	ИНАГРО_ТТНВывозЖД.ТипЖурнала,
		|	ИНАГРО_ТТНВывозЖД.УдалитьТранспорт,
		|	ИНАГРО_ТТНВывозЖД.УдалитьЕдиницаИзмерения,
		|	ИНАГРО_ТТНВывозЖД.УдалитьЖурналВесовщика,
		|	ИНАГРО_ТТНВывозЖД.УдалитьОтражатьВБухгалтерскомУчете,
		|	ИНАГРО_ТТНВывозЖД.Урожай,
		|	ИНАГРО_ТТНВывозЖД.Представление,
		|	ИНАГРО_ТТНВывозЖД.МоментВремени,
		|	ИНАГРО_ТТНВывозЖД.Организация.НаименованиеПолное
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывозЖД КАК ИНАГРО_ТТНВывозЖД
		|ГДЕ
		|	ИНАГРО_ТТНВывозЖД.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		//Шапка
		ОблШапка = Макет.ПолучитьОбласть("Шапка");
		ОблШапка.Параметры.Заполнить(Выборка);
		
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(ОблШапка.Параметры.Владелец);
		
		ОблШапка.Параметры.Организация = Выборка.ОрганизацияНаименованиеПолное;
		ВремяНачалаДняПриОтгрузке = ИНАГРО_Элеватор.ПолучитьПараметрУчетаЭлеватора(Выборка.Дата, "ВремяНачалаДняПриОтгрузке", 0);
		Если ВремяНачалаДняПриОтгрузке <> 0 Тогда
			Облшапка.Параметры.Дата = Формат(Выборка.ВремяВыбытия, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Иначе
			Облшапка.Параметры.Дата = Формат(Выборка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		КонецЕсли;
		ОблШапка.Параметры.ВесПрописью = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,Выборка.Вес);
		ТабДокумент.Вывести(ОблШапка);
		
		//Дно
		ОблДно = Макет.ПолучитьОбласть("Дно");
		ТабДокумент.Вывести(ОблДно);
		//Разделитель
		ОблРазделитель = Макет.ПолучитьОбласть("Разделитель");
		ТабДокумент.Вывести(ОблРазделитель);
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции
	
Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
Процедура ЗаписатьВыбранноеКоличество(РезультатЗакрытия) Экспорт 
	
	СтруктураСохранения = Новый Структура("ВыбранноеКоличество", РезультатЗакрытия);		
	ХранилищеОбщихНастроек.Сохранить("ИНАГРО_ТТНВывозЖД_Пропуск", , СтруктураСохранения);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли