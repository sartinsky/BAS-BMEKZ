#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 
		
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();		
	КонецЕсли;
	
	// Уведомим о появлении функционала рабочей даты
	ЭтаФорма.НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях("РабочаяДатаИзДокумента");
	 
	// Показываем, если это новый документ и сама рабочая дата еще не установлена.
	ЭтаФорма.НастройкиПредупреждений.РабочаяДатаИзДокумента = ЭтаФорма.НастройкиПредупреждений.РабочаяДатаИзДокумента
	 	И ЭтаФорма.Параметры.Ключ.Пустая()
	  	И НЕ ЗначениеЗаполнено(БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("РабочаяДата"));

	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	// ПодключаемоеОборудование
	ИНАГРО_ПодключаемоеОборудованиеОбщегоНазначения.НастроитьПодключаемоеОборудование(ЭтаФорма);
	// ПодключаемоеОборудование	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если  ТипЗнч(Параметр) = Тип("Структура") 
		И Параметр.Свойство("ИдентификаторВызывающейФормы")
		И Параметр.ИдентификаторВызывающейФормы = УникальныйИдентификатор Тогда
		Если ИмяСобытия = "СозданЛабораторныйАнализ" ИЛИ ИмяСобытия = "ИзмененЛабораторныйАнализ" Тогда
			Если ИНАГРО_Элеватор.ЛабораторныйАнализПроверкаЗаполнения(Параметр.ДокументСсылка, ПолучитьПараметрыДляПроверкиЗаполнения()) Тогда
				Объект.ЛабораторныйАнализ = Параметр.ДокументСсылка;
				ЛабораторныйАнализПриИзменении(Неопределено);
				Модифицированность = Истина;
			КонецЕсли;
		КонецЕсли;		
	Иначе
		ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	КонецЕсли;	
	
	Если Источник = "ПодключаемоеОборудование" Тогда
		Если ИмяСобытия = "WP89" Тогда
			ЗавершениеПолученияВеса(Параметр, Неопределено);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
				
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;
	
	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ИНАГРО_ЭлеваторКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, ТекущаяДатаДокумента);
		
	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		ДатаПриИзмененииНаСервере();
	КонецЕсли;
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;

КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	ИНАГРО_ЭлеваторЗаполнениеДокументов.ЗаполнитьТипНомерЖурналаВесовой(Объект);	

	УстановитьФункциональныеОпцииФормы();
	
	УправлениеФормойНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()

	УстановитьФункциональныеОпцииФормы();	
	
	УправлениеФормойНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПриказНаВывозПриИзменении(Элемент)
	
	РасчетВеса();
	
	УправлениеФормойНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриказНаВывозНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Организация",            Объект.Организация);
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		ПараметрыОтбора.Вставить("Владелец",           Объект.Владелец);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		ПараметрыОтбора.Вставить("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		ПараметрыОтбора.Вставить("Склад",              Объект.Склад);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Урожай) Тогда
		ПараметрыОтбора.Вставить("Урожай",             Объект.Урожай);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ВидХранения) Тогда
		ПараметрыОтбора.Вставить("ВидХранения",        Объект.ВидХранения);
	КонецЕсли;	
		
	ПараметрыОтбора.Вставить("ВидПеревозки", ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыПеревозки.Железнодорожный"));
				
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор",       ПараметрыОтбора);
	ПараметрыФормы.Вставить("Ссылка",      Объект.Ссылка);
	ПараметрыФормы.Вставить("Дата",        Объект.Дата);
	ПараметрыФормы.Вставить("РежимВыбора", Истина); 
				
	ОткрытьФорму("Документ.ИНАГРО_ПриказНаВывоз.Форма.ФормаВыбораПриказа", ПараметрыФормы, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ПриказНаВывозОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Объект.ПриказНаВывоз = ВыбранноеЗначение;
	
	ПолучитьНоменклатуруИзПриказа(ВыбранноеЗначение);	

КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		
		ПараметрыОтбораДоговора = ПолучитьПараметрыДляДоговоров();
		
		ИНАГРО_ЭлеваторЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(Объект.Дата, Объект.Организация, Объект.Владелец, Объект.ДоговорКонтрагента, ПараметрыОтбораДоговора);		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		СкладПриИзмененииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СкладПриИзмененииНаСервере()
		
	Объект.МестоХранения = Справочники.ИНАГРО_МестаХранения.ПустаяСсылка();
	
	УстановитьФункциональныеОпцииФормы();
	
	УправлениеФормойНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ТипЖурналаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ТипЖурнала) Тогда
		
		ДанныеОбъекта = Новый Структура("ВидЖурнала, ТипЖурнала, НомерЖурнала");		
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);		
	
		ТипЖурналаПриИзмененииНаСервере(ДанныеОбъекта);
		
		Объект.НомерЖурнала = ДанныеОбъекта.НомерЖурнала;
		
	КонецЕсли; 


КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТипЖурналаПриИзмененииНаСервере(ДанныеОбъекта)
	
	Отбор = Новый Структура("ВидЖурнала, ТипЖурнала", ДанныеОбъекта.ВидЖурнала, ДанныеОбъекта.ТипЖурнала);
	
	ДанныеОбъекта.НомерЖурнала = РегистрыСведений.ИНАГРО_НумерацияЖурналовЭлеватора.Получить(Отбор).ТекущийНомерЖурнала + 1;

КонецПроцедуры

&НаКлиенте
Процедура ВидХраненияПриИзменении(Элемент)
	
	ПараметрыОтбораДоговора = ПолучитьПараметрыДляДоговоров();
		
	ИНАГРО_ЭлеваторЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(Объект.Дата, Объект.Организация, Объект.Владелец, Объект.ДоговорКонтрагента, ПараметрыОтбораДоговора);
	
КонецПроцедуры

&НаКлиенте
Процедура УрожайПриИзменении(Элемент)
	
	ПараметрыОтбораДоговора = ПолучитьПараметрыДляДоговоров();
		
	ИНАГРО_ЭлеваторЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(Объект.Дата, Объект.Организация, Объект.Владелец, Объект.ДоговорКонтрагента, ПараметрыОтбораДоговора);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛабораторныйАнализПриИзменении(Элемент)
	
	ДанныеОбъекта = Новый Структура(
		"ЛабораторныйАнализ, НомерАнализа, Влажность, 
		|СорнаяПримесь, ЗерноваяПримесь, ЗачетныйВес,
		|");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект); 

	ПараметрыДляРасчетаЗачетногоВеса = ПолучитьПараметрыДляРасчетаЗачетногоВеса();

	ИНАГРО_Элеватор.ЛабораторныйАнализПриИзмененииНаСервере(ДанныеОбъекта, ПараметрыДляРасчетаЗачетногоВеса);
	
	ЗаполнитьЗначенияСвойств(Объект, ДанныеОбъекта);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛабораторныйАнализНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ПараметрыОтбора.Вставить("Организация",        Объект.Организация);		
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		ПараметрыОтбора.Вставить("Владелец",           Объект.Владелец);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		ПараметрыОтбора.Вставить("ДоговорКонтрагента", Объект.ДоговорКонтрагента);		
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		ПараметрыОтбора.Вставить("Склад",              Объект.Склад);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.ВидХранения) Тогда
		ПараметрыОтбора.Вставить("ВидХранения",        Объект.ВидХранения);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		ПараметрыОтбора.Вставить("Номенклатура",       Объект.Номенклатура);
	КонецЕсли;	
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор",  ПараметрыОтбора);
	ПараметрыФормы.Вставить("Ссылка", Объект.Ссылка);
	
	ОткрытьФорму("Документ.ИНАГРО_ЛабораторныйАнализ.Форма.ФормаВыбора", ПараметрыФормы, Элемент, УникальныйИдентификатор, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВесБруттоПриИзменении(Элемент)
	
	РасчетВеса();

КонецПроцедуры

&НаКлиенте
Процедура ВесТарыПриИзменении(Элемент)
	
	РасчетВеса();

КонецПроцедуры

&НаКлиенте
Процедура ОписаниеДвиженияФормы36НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.ОписаниеДвиженияФормы36",
		НСтр("ru='Описание движения формы 36';uk='Опис руху форми 36'"));

КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьЛабораторныйАнализ(Команда)
			
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Дата",               Объект.Дата);
	ЗначенияЗаполнения.Вставить("Ссылка",             ПредопределенноеЗначение("Документ.ИНАГРО_ЛабораторныйАнализ.ПустаяСсылка"));
	ЗначенияЗаполнения.Вставить("Организация",        Объект.Организация);
	ЗначенияЗаполнения.Вставить("Владелец",           Объект.Владелец);
	ЗначенияЗаполнения.Вставить("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	ЗначенияЗаполнения.Вставить("Склад",        	  Объект.Склад);
	ЗначенияЗаполнения.Вставить("ВидХранения",        Объект.ВидХранения);
	ЗначенияЗаполнения.Вставить("Урожай",             Объект.Урожай);
	ЗначенияЗаполнения.Вставить("Номенклатура",       Объект.Номенклатура);
	ЗначенияЗаполнения.Вставить("Влажность",          Объект.Влажность);
	ЗначенияЗаполнения.Вставить("СорнаяПримесь",      Объект.СорнаяПримесь);
	ЗначенияЗаполнения.Вставить("ЗерноваяПримесь",    Объект.ЗерноваяПримесь);
	
	ЗначенияЗаполнения.Вставить("МассаПартии",        Объект.Вес);
	
	ЗначенияЗаполнения.Вставить("НомерТранспорта",    Объект.НомерВагона);
	ЗначенияЗаполнения.Вставить("СтанцияОтправления", СокрЛП(Объект.Организация));
	ЗначенияЗаполнения.Вставить("СтанцияНазначения",  Объект.Владелец);	
	
	ИНАГРО_ЭлеваторКлиент.СоздатьДокументНаОсновании(ЭтаФорма, ЗначенияЗаполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаF5(Команда)
		
	ИмяНажатойКомандыПолученияВеса = Команда.Имя;
	ОповещениеПолученияВеса = Новый ОписаниеОповещения("ЗавершениеПолученияВеса", ЭтаФорма);
	
	ИНАГРО_МенеджерОборудованияКлиент.НачатьПолученияВесаСЭлектронныхВесов(ОповещениеПолученияВеса, ЭтаФорма.УникальныйИдентификатор);		
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаF6(Команда)
	
	ИмяНажатойКомандыПолученияВеса = Команда.Имя;
	ОповещениеПолученияВеса = Новый ОписаниеОповещения("ЗавершениеПолученияВеса", ЭтаФорма);
	
	ИНАГРО_МенеджерОборудованияКлиент.НачатьПолученияВесаСЭлектронныхВесов(ОповещениеПолученияВеса, ЭтаФорма.УникальныйИдентификатор);		
		
КонецПроцедуры

&НаКлиенте
Процедура Выезд(Команда)
	
	Объект.ВремяВыбытия = ТекущаяДата();
	
	Элементы.Выезд.Доступность        = Ложь;
	Элементы.ВремяВыбытия.Доступность = Ложь;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	УстановитьФункциональныеОпцииФормы();
	
	ТекущаяДатаДокумента = Объект.Дата;			
			
	УправлениеФормойНаСервере();
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма);	
	
	ВидимостьМестаХранения = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитСклада(Объект.Склад, "ВестиУчетПоМестамХранения");
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	ЕстьПриказНаВывоз = ЗначениеЗаполнено(Объект.ПриказНаВывоз);
	
	Элементы.Владелец.Доступность           = НЕ ЕстьПриказНаВывоз;
	Элементы.ДоговорКонтрагента.Доступность = НЕ ЕстьПриказНаВывоз;
	Элементы.Склад.Доступность              = НЕ ЕстьПриказНаВывоз;
	Элементы.МестоХранения.Доступность      = НЕ ЕстьПриказНаВывоз;
	Элементы.ВидХранения.Доступность        = НЕ ЕстьПриказНаВывоз;
	Элементы.Урожай.Доступность             = НЕ ЕстьПриказНаВывоз;

	Элементы.МестоХранения.Видимость        = Форма.ВидимостьМестаХранения;
			
КонецПроцедуры

&НаСервере
Процедура УправлениеФормойНаСервере()
	
    ИНАГРО_ЭлеваторЗаполнениеДокументов.ЗаполнитьДополнительныеРеквизиты(ЭтаФорма);	
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНоменклатуруИзПриказа(ВыбранноеЗначение)	
	
	СписокВыбора = Новый СписокЗначений;

	СписокВыбора = ПолучитьНоменклатуруИзПриказаНаСервере(СписокВыбора, ВыбранноеЗначение);
		
	Если СписокВыбора.Количество() > 1 Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СписокВыбора", СписокВыбора); 
		
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПолучитьНоменклатуруИзПриказаЗавершение", ЭтотОбъект);
		
		ОткрытьФорму("ОбщаяФорма.ИНАГРО_ФормаВыбораКультуры", ПараметрыФормы, , Новый УникальныйИдентификатор(), , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли СписокВыбора.Количество() = 1 Тогда
		
		ПолучитьНоменклатуруИзПриказаЗавершение(Новый Структура("Номенклатура", СписокВыбора.Получить(0).Значение), );
		
	КонецЕсли;	
	              	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНоменклатуруИзПриказаЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		
		Объект.Номенклатура = РезультатЗакрытия.Номенклатура;
		
		ПолучитьНоменклатуруИзПриказаЗавершениеНаСервере();

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПолучитьНоменклатуруИзПриказаЗавершениеНаСервере()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");	
	ДокументОбъект.ЗаполнитьПоДокументуОснованию(Объект.ПриказНаВывоз, Объект.Номенклатура); 	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");	
		
	УправлениеФормойНаСервере();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеПолученияВеса(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если ИмяНажатойКомандыПолученияВеса = "КнопкаF5" Тогда			
			Объект.ВесБрутто = Результат;			
		ИначеЕсли ИмяНажатойКомандыПолученияВеса = "КнопкаF6" Тогда			
			Объект.ВесТары = Результат;			
		КонецЕсли;	
	КонецЕсли;
	
	Объект.ВремяВыбытия = ТекущаяДата();
	
	РасчетВеса();
	
	ИмяНажатойКомандыПолученияВеса = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетВеса()
	
	Объект.ВесНетто = Объект.ВесБрутто - Объект.ВесТары;
	Объект.Вес      = Объект.ВесНетто;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНоменклатуруИзПриказаНаСервере(СписокВыбора, Ссылка)
			
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ПриказНаВывозКультуры.Номенклатура
		|ИЗ
		|	Документ.ИНАГРО_ПриказНаВывоз.Культуры КАК ИНАГРО_ПриказНаВывозКультуры
		|ГДЕ
		|	ИНАГРО_ПриказНаВывозКультуры.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ИНАГРО_ПриказНаВывозКультуры.Номенклатура";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Номенклатура);
	КонецЦикла;	

	Возврат СписокВыбора;

КонецФункции

&НаКлиенте
Функция ПолучитьПараметрыДляДоговоров()

	ПараметрыОтбора = Новый Структура("ВидХранения, Урожай");
	ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Объект);

	Возврат ПараметрыОтбора;

КонецФункции

&НаКлиенте
Функция ПолучитьПараметрыДляПроверкиЗаполнения()
	
	ПараметрыДляПроверкиЗаполнения = Новый Структура(
		"Склад, ВидХранения, Урожай, 
		|Номенклатура");
	ЗаполнитьЗначенияСвойств(ПараметрыДляПроверкиЗаполнения, Объект);

	Возврат ПараметрыДляПроверкиЗаполнения; 

КонецФункции

&НаКлиенте
Функция ПолучитьПараметрыДляРасчетаЗачетногоВеса()
	
	ПараметрыДляРасчетаЗачетногоВеса = Новый Структура(
		"Ссылка, Дата, Организация,
		|Владелец, ДоговорКонтрагента, Номенклатура,
		|Склад, Влажность, СорнаяПримесь,
		|ФизическийВес, ЗачетныйВес     
		|");
	ЗаполнитьЗначенияСвойств(ПараметрыДляРасчетаЗачетногоВеса, Объект);
	ПараметрыДляРасчетаЗачетногоВеса.Вставить("ФизическийВес", Объект.Вес); 

	Возврат ПараметрыДляРасчетаЗачетногоВеса;	

КонецФункции

#КонецОбласти  

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    
    Если ТипЗнч(Команда) = Тип("КомандаФормы") Тогда
		
		ИмяКоманды      = Команда.Имя;
		АдресНастроек   = ЭтотОбъект.ПараметрыПодключаемыхКоманд.АдресТаблицыКоманд;
		ОписаниеКоманды = ПодключаемыеКомандыКлиентПовтИсп.ОписаниеКоманды(ИмяКоманды, АдресНастроек);
		
		Если   ОписаниеКоманды.Идентификатор = "Пропуск_2021" Тогда
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Команда",              Команда);
			ДополнительныеПараметры.Вставить("ИдентификаторКоманды", ОписаниеКоманды.Идентификатор);
			
			Оповещение = Новый ОписаниеОповещения("ВводЧислаЗавершение", ЭтотОбъект, ДополнительныеПараметры); 
			ПоказатьВводЧисла(Оповещение, 0, Нстр("ru='Введите количество экземпляров';uk='Введіть кількість екземплярів'"), 15, 0);
			
		Иначе
			ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);  			
		КонецЕсли; 
		
	Иначе
		ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте 
Процедура ВводЧислаЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
	
	Если РезультатЗакрытия <> Неопределено Тогда
		ЗаписатьВыбранноеКоличество(РезультатЗакрытия, ДополнительныеПараметры.ИдентификаторКоманды);		
		ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, ДополнительныеПараметры.Команда, Объект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьВыбранноеКоличество(РезультатЗакрытия, ИдентификаторКоманды)
	
	Документы.ИНАГРО_ТТНВывоз.ЗаписатьВыбранноеКоличество(РезультатЗакрытия, ИдентификаторКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти