#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПроцедурыИФункцииПечати
	
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Типовая форма П5
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТиповаяФормаП5";
	КомандаПечати.Представление = НСтр("ru='Типовая форма П5';uk='Типова форма П5'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Кадровое перемещение организаций (ИН-АГРО)""';uk='Реєстр документів ""Кадрове переміщення організацій (ІН-АГРО)""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры
		
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТиповаяФормаП5")  Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТиповаяФормаП5", НСтр("ru='Типовая форма П5';uk='Типова форма П5'"), 
		ПечатьП5(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_КадровоеПеремещениеОрганизаций.ПФ_MXL_П5", ,Истина);
		
	КонецЕсли; 	

КонецПроцедуры

// Формирует запрос по документу
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросДляПечати(Режим, Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Руководитель",   Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	Запрос.УстановитьПараметр("ДатаДокумента",  Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация",    Ссылка.Организация);
	
	
	Если Режим = "ПоРеквизитамДокумента" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность КАК ДолжностьРуководителя,
		|	КадровоеПеремещениеОрганизаций.Номер КАК НомерДок,
		|	КадровоеПеремещениеОрганизаций.Дата КАК ДатаДок,
		|	КадровоеПеремещениеОрганизаций.Организация.НаименованиеПолное КАК НазваниеОрганизации,
		|	ВЫБОР КОГДА (ФИОФизЛицСрезПоследних.ФизическоеЛицо) ЕСТЬ NULL  ТОГДА ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """" ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + ""."" ИНАЧЕ """" КОНЕЦ + ВЫБОР КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """" ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + ""."" ИНАЧЕ """" КОНЕЦ КОНЕЦ КАК ФИОРуководителя
		|ИЗ
		|	Документ.ИНАГРО_КадровоеПеремещениеОрганизаций КАК КадровоеПеремещениеОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ) КАК ОтветственныеЛицаОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследних
		|			ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизическоеЛицо
		|		ПО (ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо = &Руководитель) И КадровоеПеремещениеОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница
		|
		|ГДЕ
		|	КадровоеПеремещениеОрганизаций.Ссылка = &ДокументСсылка";
		
	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда
		
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", Ссылка.Организация);
		Запрос.УстановитьПараметр("Оклад", Справочники.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Док.ДатаНачала															КАК ДатаНачала,
		|	ВЫБОР
		|		КОГДА ФИОФизЛицСрезПоследних.Фамилия ЕСТЬ NULL 
		|			ТОГДА Док.Сотрудник.Наименование
		|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
		|	КОНЕЦ 																	КАК Работник,
		|	Док.Сотрудник 															КАК Сотрудник,
		|	Док.ТабельныйНомер,                                    
		|	Док.НомерСтроки 														КАК НомерСтроки,
		|	Док.ПодразделениеОрганизации.Наименование 								КАК НовоеПодразделение,
		|	Док.Должность.Наименование 												КАК НоваяДолжность,
		|	Работники.ПодразделениеОрганизацииНаименование 							КАК ПрежнееПодразделение,
		|	Работники.ДолжностьНаименование 										КАК ПрежняяДолжность,
		|	ЕСТЬNULL(КадровоеПеремещениеОрганизацийНачисления.Показатель1, 0) 	КАК ОкладТарифнаяСтавка,
		|	Работники.ДатаПредыдущегоИзменения										КАК ДатаПред
		|ИЗ
		|	Документ.ИНАГРО_КадровоеПеремещениеОрганизаций.РаботникиОрганизации 			КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(
		|		&ДатаДокумента,
		|		ФизическоеЛицо В
		|		    (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		        КадровыеПеремещенияОрганизацийРаботники.Сотрудник.ФизическоеЛицо
		|		    ИЗ
		|		        Документ.ИНАГРО_КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК КадровыеПеремещенияОрганизацийРаботники
		|		    ГДЕ
		|		        КадровыеПеремещенияОрганизацийРаботники.Ссылка = &ДокументСсылка)) КАК ФИОФизЛицСрезПоследних
		|		ПО Док.Сотрудник.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ПриемНаРаботуВОрганизацию.РаботникиОрганизации КАК ПриемНаРаботуОрганизацииРаботники
		|			ПО ПриемНаРаботуОрганизацииРаботники.Сотрудник = Док.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СписокДат.Сотрудник КАК Сотрудник,
		|			РаботникиОрганизации.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизацииНаименование,
		|			РаботникиОрганизации.Должность.Наименование КАК ДолжностьНаименование,
		|			СписокДат.ДатаПоследнегоИзменения	КАК ДатаПредыдущегоИзменения
		|		ИЗ
		|			(ВЫБРАТЬ
		|				РаботникиВнутри.Сотрудник КАК Сотрудник,
		|				МАКСИМУМ(РаботникиВнутри.Период) КАК ДатаПоследнегоИзменения
		|			ИЗ
		|				РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК РаботникиВнутри
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК Док
		|					ПО РаботникиВнутри.Сотрудник = Док.Сотрудник
		|						И (РаботникиВнутри.Организация = &ГоловнаяОрганизация)
		|						И РаботникиВнутри.Период < Док.ДатаНачала
		|			ГДЕ
		|				Док.Ссылка = &ДокументСсылка
		|			
		|			СГРУППИРОВАТЬ ПО
		|				РаботникиВнутри.Сотрудник) КАК СписокДат
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК РаботникиОрганизации
		|				ПО СписокДат.Сотрудник = РаботникиОрганизации.Сотрудник
		|					И (РаботникиОрганизации.Организация = &ГоловнаяОрганизация)
		|					И СписокДат.ДатаПоследнегоИзменения = РаботникиОрганизации.Период) КАК Работники
		|		ПО Док.Сотрудник = Работники.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_КадровоеПеремещениеОрганизаций.Начисления КАК КадровоеПеремещениеОрганизацийНачисления
		|		ПО Док.Ссылка = КадровоеПеремещениеОрганизацийНачисления.Ссылка
		|			И Док.Сотрудник = КадровоеПеремещениеОрганизацийНачисления.Сотрудник
		|			И КадровоеПеремещениеОрганизацийНачисления.ВидРасчета.Показатель1 = &Оклад
		|ГДЕ
		|	Док.Ссылка = &ДокументСсылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	Иначе
		Возврат Неопределено
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Печать типовой формы П5	
Функция ПечатьП5(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КадровоеПеремещениеОрганизаций_П5";
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		// получаем данные для печати
		ВыборкаДляШапки = СформироватьЗапросДляПечати("ПоРеквизитамДокумента", Ссылка).Выбрать();
		ВыборкаДляШапки.Следующий();
		ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента", Ссылка).Выбрать();
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата);
		
		// запоминаем области макета
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_КадровоеПеремещениеОрганизаций.ПФ_MXL_П5");
		
		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Форма");
		
		// Начинаем формировать выходной документ
		Счетчик = 1;
		Пока ВыборкаРаботники.Следующий() Цикл
			
			ОкладТарифнаяСтавка = ВыборкаРаботники.ОкладТарифнаяСтавка;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ //<< Ин-Агро - добавлено Разрешенные
			|	Показатель1 КАК Размер	
			|ИЗ
			|	РегистрСведений.ИНАГРО_ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&парамДата, Сотрудник = &парамСотрудник И Организация = &парамОрганизация)
			|ГДЕ
			| ВидРасчета.Показатель1 = &парамОклад
			|
			|";
			Запрос.УстановитьПараметр("парамДата", НачалоДня(ВыборкаРаботники.ДатаНачала - 1));
			Запрос.УстановитьПараметр("парамСотрудник", ВыборкаРаботники.Сотрудник);
			Запрос.УстановитьПараметр("парамОклад", Справочники.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф);
			Запрос.УстановитьПараметр("парамОрганизация", Ссылка.Организация);
			
			ОкладПрежний = Запрос.Выполнить().Выбрать();
			ОкладПрежний.Следующий();
			
			// Каждый приказ на отдельной странице.
			Если ТабДокумент.ВысотаТаблицы > 0 Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаДляШапки); // данные из шапки
			ОбластьМакета.Параметры.НомерДок = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаДляШапки.НомерДок, Истина, Истина);
			ОбластьМакета.Параметры.НазваниеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
			ОбластьМакета.Параметры.ЕДРПОУ = Ссылка.Организация.КодПоЕДРПОУ;
			
			// Данные по работнику.
			ОбластьМакета.Параметры.Заполнить(ВыборкаРаботники);
			ОбластьМакета.Параметры["ДатаПред"] = Формат(ВыборкаРаботники.ДатаПред, "ДФ=dd.MM.yyyy; ДП=");
			ОбластьМакета.Параметры["ДатаНачала"] = Формат(ВыборкаРаботники.ДатаНачала, "ДФ=dd.MM.yyyy; ДП=");
			ОбластьМакета.Параметры["ДатаДок"] = Формат(Ссылка.Дата, "ДФ=dd.MM.yyyy; ДП=");
			ОбластьМакета.Параметры["ОкладТарифнаяСтавка"] = ОкладТарифнаяСтавка;
			ОбластьМакета.Параметры["ПрежнийОкладТарифнаяСтавка"] = ОкладПрежний.Размер; 
			
			ТабДокумент.Вывести(ОбластьМакета);	
		КонецЦикла;	
			
	КонецЦикла;
		
	Возврат ТабДокумент;	
		
КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли