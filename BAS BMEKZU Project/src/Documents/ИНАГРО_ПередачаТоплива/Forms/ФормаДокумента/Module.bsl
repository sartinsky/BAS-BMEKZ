#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;

	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	УстановитьСостояниеДокумента();

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
		
	УстановитьСостояниеДокумента();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТранспортноеСредствоПриИзменении(Элемент)	
		
	Для каждого СтрокаТабличнойЧасти Из Объект.Товары Цикл
		
		ДанныеСтрокиТаблицы = Новый Структура(
		"Номенклатура, Количество, КоличествоВОсновномТопливе, КоэффициентВОсновноеТопливо,КоличествоВОсновномТопливеПолучатель,КоэффициентВОсновноеТопливоПолучатель");
		ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, СтрокаТабличнойЧасти);
		
		ОбновитьВОсновномТопливе(Объект.ТранспортноеСредство,Объект.ТранспортноеСредствоПолучатель, ДанныеСтрокиТаблицы); 
		
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ДанныеСтрокиТаблицы);
		
	КонецЦикла;  	
		
КонецПроцедуры 

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования,ЭтотОбъект,"Объект.Комментарий");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ДанныеСтрокиТаблицы = Новый Структура(
	"Номенклатура, Количество, ЕдиницаИзмерения, КоличествоВОсновномТопливе, КоэффициентВОсновноеТопливо,КоличествоВОсновномТопливеПолучатель,КоэффициентВОсновноеТопливоПолучатель");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
	
	ДанныеОбъекта = Новый Структура("Дата, Организация");		
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект); 
	
	ТоварыНоменклатураПриИзмененииНаСервере(ДанныеСтрокиТаблицы, ДанныеОбъекта);
	
	ОбновитьВОсновномТопливе(Объект.ТранспортноеСредство,Объект.ТранспортноеСредствоПолучатель, ДанныеСтрокиТаблицы); 
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);
	 	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТоварыНоменклатураПриИзмененииНаСервере(СтрокаТабличнойЧасти, Знач ДанныеОбъекта)
		
	СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(СтрокаТабличнойЧасти.Номенклатура, ДанныеОбъекта);
	
	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТабличнойЧасти.ЕдиницаИзмерения            = СведенияОНоменклатуре.БазоваяЕдиницаИзмерения;
	СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливо = СведенияОНоменклатуре.Коэффициент;
	СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливоПолучатель = СведенияОНоменклатуре.Коэффициент;
				
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливо) Тогда
		СтрокаТабличнойЧасти.КоличествоВОсновномТопливе = СтрокаТабличнойЧасти.Количество / СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливо; 	
	КонецЕсли; 

	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливоПолучатель) Тогда
		СтрокаТабличнойЧасти.КоличествоВОсновномТопливеПолучатель = СтрокаТабличнойЧасти.Количество / СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливоПолучатель; 	
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоэффициентВОсновноеТопливоПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) И (СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливо > 0) Тогда
		СтрокаТабличнойЧасти.КоличествоВОсновномТопливе = СтрокаТабличнойЧасти.Количество / СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливо; 	
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоэффициентВОсновномТопливеПолучательПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) И (СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливоПолучатель > 0) Тогда
		СтрокаТабличнойЧасти.КоличествоВОсновномТопливеПолучатель = СтрокаТабличнойЧасти.Количество / СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливоПолучатель; 	
	КонецЕсли; 

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	ТекущаяДатаДокумента = Объект.Дата;
			
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьВОсновномТопливе(ТранспортноеСредство,ТранспортноеСредствоПолучатель, СтрокаТабличнойЧасти)
	
	СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливо = ИНАГРО_Транспорт.ПолучитьКоэффициентПересчетаВОсновноеТопливо(
													   ТранспортноеСредство, СтрокаТабличнойЧасти.Номенклатура); 	

	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливо) Тогда

		СтрокаТабличнойЧасти.КоличествоВОсновномТопливе = СтрокаТабличнойЧасти.Количество / СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливо;
		
	Иначе
		
		СтрокаТабличнойЧасти.КоличествоВОсновномТопливе = 0; 	
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Для топлива %1 в модели %2 нет коэффициента перевода в основное топливо.';uk='Для палива %1 в моделі %2 немає коефіцієнту переведення в основне паливо.'"),
			СтрокаТабличнойЧасти.Номенклатура, ТранспортноеСредство.Модель);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли; 
	
	СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливоПолучатель = ИНАГРО_Транспорт.ПолучитьКоэффициентПересчетаВОсновноеТопливо(
													   ТранспортноеСредствоПолучатель, СтрокаТабличнойЧасти.Номенклатура); 	

	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливоПолучатель) Тогда

		СтрокаТабличнойЧасти.КоличествоВОсновномТопливеПолучатель = СтрокаТабличнойЧасти.Количество / СтрокаТабличнойЧасти.КоэффициентВОсновноеТопливоПолучатель;
		
	Иначе
		
		СтрокаТабличнойЧасти.КоличествоВОсновномТопливеПолучатель = 0; 	
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Для топлива %1 в модели %2 нет коэффициента перевода в основное топливо.';uk='Для палива %1 в моделі %2 немає коефіцієнту переведення в основне паливо.'"),
			СтрокаТабличнойЧасти.Номенклатура, ТранспортноеСредствоПолучатель.Модель);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли; 
	
КонецПроцедуры   

#КонецОбласти
   
#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти