#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
    
    // Инвентаризация описание
    КомандаПечати = КомандыПечати.Добавить();
    КомандаПечати.Идентификатор = "ИнвентаризационнаяОпись";
    КомандаПечати.Представление = НСтр("ru = 'Инвентаризационная опись (Форма ІНВ-3а)'; uk = 'Інвентаризаційний опис (Форма ІНВ-3а)'");
    КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Инвентаризация""';uk='Реєстр документів ""Інвентаризація""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
    
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт
    
    // Устанавливаем признак доступности печати покомплектно.
    ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
    
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнвентаризационнаяОпись") Тогда
        
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИнвентаризационнаяОпись", НСтр("ru = 'Инвентаризационная опись (Форма ІНВ-3а)'; uk = 'Інвентаризаційний опис (Форма ІНВ-3а)'"), 
        ПечатьИнвентаризационнаяОпись(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_Инвентаризация.ПФ_MXL_ИнвентаризационнаяОпись", , Истина);
    КонецЕсли;
    
КонецПроцедуры

Функция ПечатьИнвентаризационнаяОпись(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    Запрос = Новый Запрос;
    Запрос.Текст =  "ВЫБРАТЬ
    |   ИНАГРО_Инвентаризация.Организация,
    |   ИНАГРО_Инвентаризация.Организация.НаименованиеПолное,
    |   ИНАГРО_Инвентаризация.Номер,
    |   ИНАГРО_Инвентаризация.Дата,
    |   ИНАГРО_Инвентаризация.Номенклатура,
    |   ИНАГРО_Инвентаризация.Номенклатура.НаименованиеПолное,
    |   ИНАГРО_Инвентаризация.НомерПриказа,
    |   ИНАГРО_Инвентаризация.ДатаПриказа,
    |   ИНАГРО_Инвентаризация.ДатаНачалаИнвентаризации,
    |   ИНАГРО_Инвентаризация.ДатаОкончанияИнвентаризации,
    |   ИНАГРО_Инвентаризация.ФизическийВесПоОписи,
    |   ИНАГРО_Инвентаризация.Заключение,
    |   ИНАГРО_Инвентаризация.Склад,
    |   ИНАГРО_Инвентаризация.ПервыйЧленКомиссии КАК ЧленКомиссии1,
    |   ИНАГРО_Инвентаризация.ВторойЧленКомиссии КАК ЧленКомиссии2,
    |   ИНАГРО_Инвентаризация.ТретийЧленКомиссии КАК ЧленКомиссии3,
    |   ИНАГРО_Инвентаризация.ЧетвертыйЧленКомиссии КАК ЧленКомиссии4,
    |   ИНАГРО_Инвентаризация.ПятыйЧленКомиссии КАК ЧленКомиссии5,
    |   ИНАГРО_Инвентаризация.ПредседательКомиссии КАК ЧленКомиссии6
    |ИЗ
    |   Документ.ИНАГРО_Инвентаризация КАК ИНАГРО_Инвентаризация
    |ГДЕ
    |   ИНАГРО_Инвентаризация.Ссылка = &Ссылка
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |   ИНАГРО_ИнвентаризацияСписокВладельцев.НомерСтроки,
    |   ИНАГРО_ИнвентаризацияСписокВладельцев.Владелец,
    |   ИНАГРО_ИнвентаризацияСписокВладельцев.ДоговорКонтрагента,
    |   ИНАГРО_ИнвентаризацияСписокВладельцев.ВесПоДаннымУчета,
    |   ИНАГРО_ИнвентаризацияСписокВладельцев.ВесПоИнвентаризации,
    |   ИНАГРО_ИнвентаризацияСписокВладельцев.СчетУчетаБУ
    |ИЗ
    |   Документ.ИНАГРО_Инвентаризация.СписокВладельцев КАК ИНАГРО_ИнвентаризацияСписокВладельцев
    |ГДЕ
    |   ИНАГРО_ИнвентаризацияСписокВладельцев.Ссылка = &Ссылка";
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_Инвентаризация.ПФ_MXL_ИнвентаризационнаяОпись";
	
	Макет = ПолучитьМакет("ПФ_MXL_ИнвентаризационнаяОпись");
	
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        Запрос.УстановитьПараметр("Ссылка",Ссылка);
        МассивРезультатов = Запрос.ВыполнитьПакет();
        ВыборкаШапка = МассивРезультатов[0].Выбрать();
        ВыборкаШапка.Следующий();
        ТЧСписокВладельцев = МассивРезультатов[1].Выгрузить();
        
        ОблШапка = Макет.ПолучитьОбласть("Шапка");
        ОблСтрока = Макет.ПолучитьОбласть("Строка");
        ОблДно = Макет.ПолучитьОбласть("Дно");
        
        ЗавСкладом = РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(,Новый Структура("СтруктурнаяЕдиница",ВыборкаШапка.Склад)).ФизическоеЛицо;
        
        ОблШапка.Параметры.Организация = ВыборкаШапка.ОрганизацияНаименованиеПолное;
        ОблШапка.Параметры.НомерДок = ВыборкаШапка.Номер;
        ОблШапка.Параметры.Дата = Формат(ВыборкаШапка.Дата,"ДЛФ = Д");
        ОблШапка.Параметры.Номенклатура = ВыборкаШапка.НоменклатураНаименованиеПолное;
        ОблШапка.Параметры.ЗавСкладом = ЗавСкладом;
        ОблШапка.Параметры.НомерПриказа = СокрЛП(ВыборкаШапка.НомерПриказа);
        ОблШапка.Параметры.ДатаПриказа = Формат(ВыборкаШапка.ДатаПриказа,"ДЛФ = Д");
        ОблШапка.Параметры.ДатаНачалаИнвентаризации = Формат(ВыборкаШапка.ДатаНачалаИнвентаризации,"ДЛФ = Д");
        ОблШапка.Параметры.ДатаОкончанияИнвентаризации = Формат(ВыборкаШапка.ДатаОкончанияИнвентаризации,"ДЛФ = Д");
        ТабДокумент.Вывести(ОблШапка);
        
        ИтогОтклонение = 0;
        Ном = 1;
        Для Каждого Стр Из ТЧСписокВладельцев Цикл
            ОблСтрока.Параметры.Ном = Стр.НомерСтроки;
            ОблСтрока.Параметры.Владелец = Стр.Владелец;
            ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(ОблСтрока.Параметры.Владелец);
            ОблСтрока.Параметры.БазЕдиница = "кг.";
            ОблСтрока.Параметры.ВесПоДаннымУчета = Стр.ВесПоДаннымУчета;
            ОблСтрока.Параметры.ВесПоИнвентаризации = Стр.ВесПоИнвентаризации;		
            Отклонение = Стр.ВесПоИнвентаризации - Стр.ВесПоДаннымУчета;
            ОблСтрока.Параметры.Отклонение = Отклонение;
            ИтогОтклонение = ИтогОтклонение + Отклонение;
            ТабДокумент.Вывести(ОблСтрока);
            Ном = Ном + 1;
        КонецЦикла;
        
        //Дно
        ОблДно.Параметры.ИтогВесПоДаннымУчета = ТЧСписокВладельцев.Итог("ВесПоДаннымУчета");
        ОблДно.Параметры.ИтогВесПоИнвентаризации = ТЧСписокВладельцев.Итог("ВесПоИнвентаризации");
        ОблДно.Параметры.ИтогОтклонение = ИтогОтклонение;
        ОблДно.Параметры.ФизическийВесПоОписи = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать, ВыборкаШапка.ФизическийВесПоОписи);
        ОблДно.Параметры.Заключение = ВыборкаШапка.Заключение;
        ОблДно.Параметры.ДатаПрописью = Формат(ВыборкаШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
        ОблДно.Параметры.ЧленКомиссии1 = ВыборкаШапка.ЧленКомиссии1;
        ОблДно.Параметры.ЧленКомиссии2 = ВыборкаШапка.ЧленКомиссии2;
        ОблДно.Параметры.ЧленКомиссии3 = ВыборкаШапка.ЧленКомиссии3;
        ОблДно.Параметры.ЧленКомиссии4 = ВыборкаШапка.ЧленКомиссии4;
        ОблДно.Параметры.ЧленКомиссии5 = ВыборкаШапка.ЧленКомиссии5;
        ОблДно.Параметры.ЧленКомиссии6 = ВыборкаШапка.ЧленКомиссии6;
        
        ТабДокумент.Вывести(ОблДно); 
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Заполняет счета учета номенклатуры в табличной части документа
//
// Параметры:
// Объект - СправочникСсылка - объект контактной информации
// ИмяТабличнойЧасти - имя табличной части.
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад, ОтражатьВБухгалтерскомУчете");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
		Объект.Номенклатура, ДанныеОбъекта);
	
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре);
	КонецЦикла;

КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - Строка - строка табличной части документа
//  СведенияОНоменклатуре - Структура - структура сведений о номенклатуре, либо структура счетов учета.
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре) Экспорт
	
	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчетаБУ") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;

	Если ДанныеОбъекта.ОтражатьВБухгалтерскомУчете Тогда
		
		Если ИНАГРО_Элеватор.ОпределитьПринадлежностьКонтрагента(СтрокаТабличнойЧасти.Владелец) Тогда
			СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаБУ;				
		Иначе
			СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаДоп;				
		КонецЕсли;		
		
	Иначе
		
		СтрокаТабличнойЧасти.СчетУчетаБУ     = ПланыСчетов.Хозрасчетный.ПустаяСсылка();			
		
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#КонецЕсли 