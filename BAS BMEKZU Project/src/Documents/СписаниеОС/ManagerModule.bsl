#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Форма ОЗ-3
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОЗ3";
	КомандаПечати.Представление = НСтр("ru='Форма ОЗ-3';uk='Форма ОЗ-3'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// ИНАГРО++
	
	Если ИНАГРО_ОбщийВызовСервераПовтИсп.ЕстьБСПУ() Тогда
		
		// СписаниеЖивотных
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "СписаниеЖивотных";
		КомандаПечати.Представление = НСтр("ru='Акт списания долгосрочных животных (ф.ДБАСГ-4)';uk='Акт списання довгострокових тварин (ф.ДБАСГ-4)'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.СписокФорм    = "ФормаДокумента";
		
		// СписаниеРастений
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "СписаниеРастений";
		КомандаПечати.Представление = НСтр("ru='Акт списания многолетних насаждений (ф.ДБАСГ-3)';uk='Акт списання багаторічних насаджень (ф.ДБАСГ-3)'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.СписокФорм    = "ФормаДокумента";
		
	КонецЕсли;
	
	// ИНАГРО--

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Списание ОС""';uk='Реєстр документів ""Списання ОЗ""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
		
КонецПроцедуры

// Функция формирует табличный документ с печатной формой ОЗ-3
// 
Функция ПечатьОЗ3(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета)
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент   = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеОС_ОЗ3";
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_UK_ОЗ3");
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",         Ссылка);
		Запрос.УстановитьПараметр("ТекДата",        Ссылка.МоментВремени());
		Запрос.УстановитьПараметр("ТекОрганизация", Ссылка.Организация);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписаниеОС.Дата                           КАК ДатаАкта,
		|	СписаниеОС.Номер                          КАК НомерАкта,
		|	ВЫРАЗИТЬ(СписаниеОС.Организация.НаименованиеПолное 
		|	                    КАК СТРОКА(1000))     КАК Организация,
		|	СписаниеОС.Организация.КодПоЕДРПОУ               КАК ЕДРПОУ,
		|	СписаниеОС.ПричинаСписания                КАК ПричинаСписания,
		|	СписаниеОС.ПричинаСписания.Код            КАК КодПричины
		|ИЗ
		|	Документ.СписаниеОС                       КАК СписаниеОС
		|
		|ГДЕ
		|	СписаниеОС.Ссылка = &Ссылка";
		ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
		ВыборкаПоШапке.Следующий();
		
		СписокОС = Ссылка.ОС.ВыгрузитьКолонку("ОсновноеСредство");
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка"        , Ссылка);
		Запрос.УстановитьПараметр("СписокОС"      , СписокОС);
		Запрос.УстановитьПараметр("ТекДата"       , Ссылка.МоментВремени());
		Запрос.УстановитьПараметр("ТекОрганизация", Ссылка.Организация);
		Запрос.УстановитьПараметр("СостояниеВвода", Перечисления.СостоянияОС.ВведеноВЭксплуатацию);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПервоначальныеСведенияБУ.ИнвентарныйНомер        КАК ИнвентарныйНомер,
		|	ПервоначальныеСведенияБУ.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	СчетаБухгалтерскогоУчета.СчетУчета               КАК СчетКт,
		|	СписаниеОСОС.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОС,
		|	СписаниеОСОС.ОсновноеСредство.ЗаводскойНомер     КАК ЗаводскойНомер,
		|	СписаниеОСОС.ОсновноеСредство.ДатаВыпуска        КАК ГодВыпуска,
		|	СписаниеОСОС.Ссылка.СчетСписанияБУ               КАК СчетДт,
		|	СписаниеОСОС.СтоимостьБУ - СписаниеОСОС.АмортизацияБУ - СписаниеОСОС.АмортизацияЗаМесяцБУ КАК ОстаточнаяСтоимость,
		|	СписаниеОСОС.АмортизацияБУ + СписаниеОСОС.АмортизацияЗаМесяцБУ КАК Амортизация,
		|	МестонахождениеОС.Местонахождение                КАК СдалоПодразделение,
		|	СостояниеОС.ДатаСостояния                        КАК ДатаВвода
		|ИЗ
		|	Документ.СписаниеОС.ОС КАК СписаниеОСОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних( 
		|		                    &ТекДата,
		|		                    ОсновноеСредство В (&СписокОС)
		|		                    И Организация = &ТекОрганизация) КАК ПервоначальныеСведенияБУ
		|		ПО СписаниеОСОС.ОсновноеСредство = ПервоначальныеСведенияБУ.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
		|		                    &ТекДата,
		|		                    ОсновноеСредство В (&СписокОС)
		|		                    И Организация = &ТекОрганизация) КАК СчетаБухгалтерскогоУчета
		|		ПО СписаниеОСОС.ОсновноеСредство = СчетаБухгалтерскогоУчета.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		|		                    &ТекДата,
		|		                    Организация = &ТекОрганизация
		|		                    И ОсновноеСредство В (&СписокОС)) КАК МестонахождениеОС
		|		ПО СписаниеОСОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			(ВЫБРАТЬ
		|				СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
		|				СостоянияОС.ДатаСостояния    КАК ДатаСостояния
		|			ИЗ
		|				РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОС
		|			ГДЕ
		|				СостоянияОС.Состояние = &СостояниеВвода
		|				И СостоянияОС.Организация = &ТекОрганизация
		|				И СостоянияОС.ОсновноеСредство В(&СписокОС)) КАК СостояниеОС
		|		ПО СписаниеОСОС.ОсновноеСредство = СостояниеОС.ОсновноеСредство
		|ГДЕ
		|	СписаниеОСОС.Ссылка = &Ссылка";
			
		Результат = Запрос.Выполнить();
		ВыборкаПоОС = Результат.Выбрать();
		
		СписокПодразделений = Результат.Выгрузить().ВыгрузитьКолонку("СдалоПодразделение");
		ВыборкаПоКомиссии = ОбщегоНазначенияБПВызовСервера.ПолучитьСведенияОКомиссии(Ссылка);
		
		Пока ВыборкаПоОС.Следующий() Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("ОЗ3");
			Параметры     = ОбластьМакета.Параметры;
			Параметры.Заполнить(ВыборкаПоШапке);
			Параметры.Заполнить(ВыборкаПоКомиссии);
			Параметры.Организация = СокрП(ВыборкаПоШапке.Организация);
			Параметры.Заполнить(ВыборкаПоОС);
			Параметры.ВидОперации = "Списання";
			ТабДокумент.Вывести(ОбластьМакета);
			НеНачало = Истина;
			
		КонецЦикла;
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;	
		
	Возврат ТабДокумент;
	
КонецФункции // ПечатьСписаниеТоваров()

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОЗ3") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		ИмяМакета = "";
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОЗ3",
			НСтр("ru='Форма ОЗ-3';uk='Форма ОЗ-3'"), ПечатьОЗ3(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета),, ИмяМакета);
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписаниеЖивотных") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		ИмяМакета = "";
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"СписаниеЖивотных",
		НСтр("ru='Акт списания долгосрочных животных (ф.ДБАСГ-4)';uk='Акт списання довгострокових тварин (ф.ДБАСГ-4)'"), 
		ИНАГРО_ПечатьСписаниеБА(МассивОбъектов, ОбъектыПечати, ПараметрыПечати,"СписаниеЖивотных"),, ИмяМакета);
	КонецЕсли;			
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписаниеРастений") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		ИмяМакета = "";
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"СписаниеРастений",
		НСтр("ru='Акт списания многолетних насаждений (ф.ДБАСГ-3)';uk='Акт списання багаторічних насаджень (ф.ДБАСГ-3)'"), 
		ИНАГРО_ПечатьСписаниеБА(МассивОбъектов, ОбъектыПечати, ПараметрыПечати,"СписаниеРастений"),, ИмяМакета);
	КонецЕсли;			
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "СубконтоБУ1");
	
	Возврат Результат;
	
КонецФункции

Функция ИНАГРО_ПечатьСписаниеБА(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ВидМакета) 
		
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент   = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеОС_БА";
	
	Если ВидМакета = "СписаниеЖивотных" Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ИНАГРО_ПФ_MXL_ДБАСГ4_АктСписанияДолгосрочныхЖивотных");
	Иначе
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ИНАГРО_ПФ_MXL_ДБАСГ3_АктСписанияМноголетнихРаст");
	КонецЕсли;	
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",         Ссылка);
		Запрос.УстановитьПараметр("ТекДата",        Ссылка.МоментВремени());
		Запрос.УстановитьПараметр("ТекОрганизация", Ссылка.Организация);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписаниеОС.Дата                           КАК ДатаАкта,
		|	СписаниеОС.Номер                          КАК Номер,
		|	ВЫРАЗИТЬ(СписаниеОС.Организация.НаименованиеПолное 
		|	                    КАК СТРОКА(1000))     КАК Организация,
		|	СписаниеОС.Организация.КодПоЕДРПОУ        КАК ЕДРПОУ,
		|	СписаниеОС.ПричинаСписания                КАК ПричинаСписания,
		|	СписаниеОС.ПричинаСписания.Код            КАК КодПричины
		|ИЗ
		|	Документ.СписаниеОС                       КАК СписаниеОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КодыОрганизации.СрезПоследних(&ТекДата,
		|		                                 Организация = &ТекОрганизация) КАК КодыОрганизации
		|		ПО СписаниеОС.Организация = КодыОрганизации.Организация
		|
		|ГДЕ
		|	СписаниеОС.Ссылка = &Ссылка";
		ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
		ВыборкаПоШапке.Следующий();
		
		СписокОС = Ссылка.ОС.ВыгрузитьКолонку("ОсновноеСредство");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПервоначальныеСведенияБУ.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ПервоначальныеСведенияБУ.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	СписаниеОСОС.ОсновноеСредство.НаименованиеПолное КАК Номенклатура,
		|	СписаниеОСОС.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
		|	СписаниеОСОС.ОсновноеСредство.ДатаВыпуска КАК ГодВыпуска,
		|	СписаниеОСОС.Ссылка.СчетСписанияБУ КАК Деб,
		|	СписаниеОСОС.СтоимостьБУ - СписаниеОСОС.АмортизацияБУ - СписаниеОСОС.АмортизацияЗаМесяцБУ КАК ОстаточнаяСтоимость,
		|	СписаниеОСОС.АмортизацияБУ + СписаниеОСОС.АмортизацияЗаМесяцБУ КАК Амортизация,
		|	МестонахождениеОС.Местонахождение КАК Подразделение,
		|	СчетаБухгалтерскогоУчета.СчетУчета КАК Кред,
		|	ГОД(СостояниеОС.ДатаСостояния) КАК ДатаВвода,
		|	СписаниеОСОС.Ссылка.ИНАГРО_Количество
		|ИЗ
		|	Документ.СписаниеОС.ОС КАК СписаниеОСОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|				&ТекДата,
		|				ОсновноеСредство В (&СписокОС)
		|					И Организация = &ТекОрганизация) КАК ПервоначальныеСведенияБУ
		|		ПО СписаниеОСОС.ОсновноеСредство = ПервоначальныеСведенияБУ.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		|				&ТекДата,
		|				Организация = &ТекОрганизация
		|					И ОсновноеСредство В (&СписокОС)) КАК МестонахождениеОС
		|		ПО СписаниеОСОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
		|				&ТекДата,
		|				ОсновноеСредство В (&СписокОС)
		|					И Организация = &ТекОрганизация) КАК СчетаБухгалтерскогоУчета
		|		ПО СписаниеОСОС.ОсновноеСредство = СчетаБухгалтерскогоУчета.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
		|			СостоянияОС.ДатаСостояния КАК ДатаСостояния
		|		ИЗ
		|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОС
		|		ГДЕ
		|			СостоянияОС.Состояние = &СостояниеВвода
		|			И СостоянияОС.Организация = &ТекОрганизация
		|			И СостоянияОС.ОсновноеСредство В(&СписокОС)) КАК СостояниеОС
		|		ПО СписаниеОСОС.ОсновноеСредство = СостояниеОС.ОсновноеСредство
		|ГДЕ
		|	СписаниеОСОС.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка.Ссылка);
		Запрос.УстановитьПараметр("ТекДата"       , Ссылка.МоментВремени());
		Запрос.УстановитьПараметр("ТекОрганизация", Ссылка.Организация);
		Запрос.УстановитьПараметр("СписокОС"      , СписокОС);
		Запрос.УстановитьПараметр("СостояниеВвода", Перечисления.СостоянияОС.ВведеноВЭксплуатацию);
		
		ВыборкаТЧ = Запрос.Выполнить().Выбрать();
		
		ТабДок = Новый ТабличныйДокумент;
		
		// печать производится на языке, указанном в настройках пользователя
		//КодЯзыкаПечать = ПараметрыПечати.КодЯзыкаДляМногоязычныхПечатныхФорм;
		//Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		ВыборкаПоКомиссии = ОбщегоНазначенияБПВызовСервера.ПолучитьСведенияОКомиссии(Ссылка);
		
		// Шапка
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.ЕДРПОУ = ВыборкаПоШапке.ЕДРПОУ;
		Шапка.Параметры.Заполнить(ВыборкаПоКомиссии);
		Шапка.Параметры.Заполнить(ВыборкаПоШапке);
		Шапка.Параметры.Год = Год(Ссылка.Дата);
		Шапка.Параметры.Месяц = Месяц(Ссылка.Дата);
		Шапка.Параметры.Число = День(Ссылка.Дата);
		
		Если ВыборкаТЧ.Следующий() Тогда
			Шапка.Параметры.Заполнить(ВыборкаТЧ);
		КонецЕсли;
		
		ВыборкаТЧ.Сбросить();
		ТабДок.Вывести(Шапка);
		
		//строка
		ОбластьСтрока = Макет.ПолучитьОбласть("строка");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		Пока ВыборкаТЧ.Следующий() Цикл 
			Если ВыборкаТЧ.ТипЗаписи()= ТипЗаписиЗапроса.ОбщийИтог Тогда
				Продолжить;
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаТЧ);
			ТабДок.Вывести(ОбластьСтрока);
			
			ОбластьПодвал.Параметры.Заполнить(ВыборкаТЧ);
			
		КонецЦикла;
		
		// Подвал
		ОбластьПодвал.Параметры.Заполнить(Ссылка);
		ОбластьПодвал.Параметры.Заполнить(ВыборкаПоКомиссии);
		ТабДок.Вывести(ОбластьПодвал);
		
		Возврат ТабДок;
	КонецЦикла;
	
	КонецФункции
	
#КонецОбласти

#КонецЕсли