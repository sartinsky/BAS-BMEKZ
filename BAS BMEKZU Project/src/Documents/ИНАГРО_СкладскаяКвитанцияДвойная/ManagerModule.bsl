#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Бланк
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_XML_Бланк";
	КомандаПечати.Представление = НСтр("ru='Бланк';uk='Бланк'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Бланк';uk='Бланк'");;
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Складская квитанция (двойная)""';uk='Реєстр документів ""Складська квитанція (подвійна)""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры		

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета АвтомобильныеВеса формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_XML_Бланк") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_XML_Бланк", НСтр("ru='Бланк';uk='Бланк'"), 
		ПечатьБланка(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_СкладскаяКвитанцияДвойная.ПФ_XML_Бланк", ,Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьБланка(МассивОбъектов, ПараметрыПечати, ПараметрыВывода)
	
	Для каждого Ссылка Из МассивОбъектов Цикл
		
		ТабДокумент = Новый ТабличныйДокумент;
		Макет = ПолучитьМакет("ПФ_XML_Бланк");
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		
		Структура = Новый Структура("Организация", Ссылка.Организация);
		
		Шапка.Параметры.Стр1Фирма = Ссылка.Организация.НаименованиеПолное;
		Шапка.Параметры.Стр2Фирма = БухгалтерскийУчетПереопределяемый.ПолучитьАдресИзКонтактнойИнформации(Ссылка.Организация, "Юридический");
		
		Шапка.Параметры.Чис=Формат(Ссылка.Дата,"ДФ=dd");
		Шапка.Параметры.Месяц=МесяцПрописью(Ссылка.Дата, ПараметрыВывода);
		Шапка.Параметры.Год=Прав(Год(Ссылка.Дата),2);
		//Шапка.Параметры.ФирмаЕДРПОУ=РегистрыСведений.КодыОрганизации.ПолучитьПоследнее(ТекущаяДата(), Структура).КодПоЕДРПОУ;
		Шапка.Параметры.ФирмаЕДРПОУ=Ссылка.Организация.КодПоЕДРПОУ;
		Шапка.Параметры.НомерДокБезПреф=Ссылка.Номер;
		Шапка.Параметры.Координаты1Влад=?(Ссылка.Владелец.НаименованиеПолное="", Ссылка.Владелец.Наименование, Ссылка.Владелец.НаименованиеПолное)
		+" "+БухгалтерскийУчетПереопределяемый.ПолучитьАдресИзКонтактнойИнформации(Ссылка.Владелец, "Юридический");
		Шапка.Параметры.Координаты2Влад=" "+?(Ссылка.Владелец.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо, Ссылка.Владелец.ИНН, Ссылка.Владелец.КодПоЕДРПОУ);
		
		Шапка.Параметры.ЧисДог=Формат(Ссылка.ДоговорКонтрагента.Дата,"ДФ=dd");
		Шапка.Параметры.МесяцДог=МесяцПрописью(Ссылка.ДоговорКонтрагента.Дата,ПараметрыВывода);
		Шапка.Параметры.ГодДог=Прав(Год(Ссылка.ДоговорКонтрагента.Дата),1);
		Шапка.Параметры.НомДог=Ссылка.ДоговорКонтрагента.Номер;
		Шапка.Параметры._Свидетельство="Картка аналізу";
		Шапка.Параметры.НомАнализа=Ссылка.ЛабораторныйАнализ.Номер;
		Шапка.Параметры.Клас=Ссылка.ЛабораторныйАнализ.Класс;
		Шапка.Параметры.ТМЦ=Ссылка.Номенклатура;
		Шапка.Параметры.Урожай=Ссылка.Урожай;
		Шапка.Параметры.ЧисЛабАнализа=Формат(Ссылка.ЛабораторныйАнализ.Дата,"ДФ=dd");
		Шапка.Параметры.МесяцЛабАнализа=МесяцПрописью(Ссылка.ЛабораторныйАнализ.Дата, ПараметрыВывода);
		Шапка.Параметры.ГодЛабАнализа=Прав(Год(Ссылка.ЛабораторныйАнализ.Дата),1);
		Шапка.Параметры._АвторСвидетельства= Ссылка.ЛабораторныйАнализ.Организация.НаименованиеПолное;
		ВидКультуры=ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(Ссылка.Номенклатура,"ВидКультуры");
		Шапка.Параметры.ТМЦГОСТ=ВидКультуры.ГОСТ;
		
		Шапка.Параметры.ЗачетныйВес=Ссылка.ЗачетныйВес;
		Шапка.Параметры.Вес=Ссылка.ФизическийВес;
		Шапка.Параметры.ЗачВесПрписью=ИНАГРО_Элеватор.ВернутьВесПрописью("uk_UA", Ссылка.ЗачетныйВес);
		Шапка.Параметры.ВесПрписью=ИНАГРО_Элеватор.ВернутьВесПрописью("uk_UA", Ссылка.ФизическийВес);
		Шапка.Параметры.Примечание=Ссылка.Комментарий;
		
		Если Ссылка.ПечатьВесаКВыдаче=Ложь Тогда
			Стр=ИНАГРО_Элеватор.ВернутьВесПрописью("uk_UA", Ссылка.ФизическийВес);
			Шапка.Параметры._Количество1_25=Лев(Стр,25);
			Шапка.Параметры._Количество26=Прав(Стр,СтрДлина(Стр)-25);
		Иначе
			Шапка.Параметры._Количество1_25="Згідно акту розрахунку";		
		КонецЕсли;
		Если Ссылка.ПечатьДоВостребования=Ложь Тогда
			Шапка.Параметры.СрокВыдачи="до запитання";
		Иначе
			Шапка.Параметры.СрокВыдачи=Формат(Ссылка.ДатаВыдачи,"ДЛФ=DD");
		КонецЕсли;
		
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(Ссылка.Организация, Ссылка.Дата);
		
		Шапка.Параметры.Дир = Руководители.Руководитель;
		Шапка.Параметры.Бух = Руководители.ГлавныйБухгалтер;
		
		Зараженность 		= "";
		Белок				= "";
		КлейковинаКачество	= "";
		Для Каждого Стр Из Ссылка.Характеристики Цикл
			
			Если Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда
				Зараженность = Стр.ЗначениеХар;
			ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Белок Тогда
				Белок = Стр.ЗначениеХар;
			ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКачество Тогда
				КлейковинаКачество = Стр.ЗначениеХар;
			КонецЕсли;
			
		КонецЦикла;	
		
		Если Ссылка.Влажность > 0 Тогда
			Шапка.Параметры.тВлажность = "Вологість";
			Шапка.Параметры.тЕдВлажность = "У відсотках";
			Шапка.Параметры.Влажность = Ссылка.Влажность;
		КонецЕсли;
		
		Если Ссылка.СорнаяПримесь > 0 Тогда
			Шапка.Параметры.тСорнаяПримесь = "Смітна";
			Шапка.Параметры.тЕдСорнаяПримесь = "У відсотках";
			Шапка.Параметры.СорнаяПримесь = Ссылка.СорнаяПримесь;
		КонецЕсли;
		
		Если Ссылка.ЗерноваяПримесь > 0 Тогда
			Шапка.Параметры.тЗерноваяПримесь = "Зернова";
			Шапка.Параметры.тЕдЗерноваяПримесь = "У відсотках";
			Шапка.Параметры.ЗерноваяПримесь = Ссылка.ЗерноваяПримесь;
		КонецЕсли;
		
		Если Зараженность <> "" Тогда
			Шапка.Параметры.тЗараженность = "Зараженість";
			Шапка.Параметры.тЕдЗараженность = "";
			Шапка.Параметры.Зараженность = Зараженность;
		КонецЕсли;
		
		Если Белок <> "" Тогда
			Шапка.Параметры.тБелок = "Білок";
			Шапка.Параметры.тЕдБелок = "У відсотках";
			Шапка.Параметры.Белок = Белок;
		КонецЕсли;
		
		Если КлейковинаКачество <> "" Тогда
			Шапка.Параметры.тКлейковинаКачество = "Клейковина";
			Шапка.Параметры.тЕдКлейковинаКачество = "У відсоках";
			Шапка.Параметры.КлейковинаКачество = КлейковинаКачество;
		КонецЕсли;
		
		ВидКультуры = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(Ссылка.Номенклатура,"ВидКультуры");
		НоменклатураХранения = ИНАГРО_Элеватор.ПолучитьПредопределеннуюНоменклатуру("Хранение");
		СтоимостьХранения = ИНАГРО_Элеватор.ПолучитьЦенуУслугиЭлеватора(Ссылка.Организация, Ссылка.Дата, Ссылка.Владелец, Ссылка.ДоговорКонтрагента, ВидКультуры.ВидКультурыДляРасчетаСтоимостиУслуги, Ссылка.Урожай, НоменклатураХранения);
		Если СтоимостьХранения <> 0 Тогда
			Вынагорода = "" + СтоимостьХранения + " грн. (" + ФорматироватьСуммуПрописи(СтоимостьХранения, Константы.ВалютаРегламентированногоУчета.Получить()) + ") за " + НоменклатураХранения.БазоваяЕдиницаИзмерения + " збереження ";
		КонецЕсли;	
		Шапка.Параметры.Вынагорода1 = Сред(Вынагорода,1,70);
		Шапка.Параметры.Вынагорода2 = Сред(Вынагорода,71);
		
		ТабДокумент.Вывести(Шапка);
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДокумент.ИмяПараметровПечати = "ИНАГРО_СкладскаяКвитанцияДвойная_Бланк";
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция МесяцПрописью(ТекДата, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	ФорматДаты=Формат(ТекДата, "ДЛФ=DD;Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	аа=Лев(ФорматДаты,СтрДлина(ФорматДаты)-7);
	Месяц=СокрЛП(Прав(аа,СтрДлина(аа)-2));
	
	Возврат Месяц;
	
КонецФункции

Функция ФорматироватьСуммуПрописи(Сумма, Валюта)
	
	ФорматСтрока  = "Л=uk_UA; ДП=Ложь";
	ПарамПредмета = Валюта.ПараметрыПрописиНаУкраинском;
	
	Результат = ЧислоПрописью(Сумма, ФорматСтрока, ПарамПредмета);
	
	Возврат Результат;
	
КонецФункции // ФорматироватьСуммуПрописи()

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#КонецЕсли