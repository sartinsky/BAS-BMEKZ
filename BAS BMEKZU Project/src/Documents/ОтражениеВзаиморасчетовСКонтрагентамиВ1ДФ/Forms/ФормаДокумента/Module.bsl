#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	// Обработчик подсистемы "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	Если Параметры.Ключ.Пустая() Тогда
		
		// создается новый документ
		ЗначенияДляЗаполнения = Новый Структура("ПредыдущийКвартал, Организация, Ответственный",
		"Объект.ПериодРегистрации",
		"Объект.Организация",
		"Объект.Ответственный");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
	КонецЕсли;
	
	ПериодНачисленияСтрокой = Формат(Объект.ПериодРегистрации, "ДФ='q ''квартал'' yyyy'");
	ПериодНачисленияСтрокойМесяц = Формат(Объект.ПериодРегистрации, "Л="+ЛокализацияПовтИсп.КодЯзыкаИнтерфейса()+";ДФ='ММММ гггг'");
			
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбработатьИзменениеОрганизацииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачисленияСтрокойПриИзменении(Элемент)
	
	ПериодНачисленияСтрокой = Формат(ЭтотОбъект.Объект.ПериодРегистрации, "ДФ='q ''квартал'' yyyy'");
	ПериодНачисленияСтрокойМесяц = Формат(Объект.ПериодРегистрации, "Л="+ЛокализацияПовтИсп.КодЯзыкаИнтерфейса()+";ДФ='ММММ гггг'");
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачисленияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормыВыбора = Новый Структура("НачалоПериода, КонецПериода, ВидПериода",
		НачалоКвартала(ЭтотОбъект.Объект.ПериодРегистрации),
		КонецКвартала(ЭтотОбъект.Объект.ПериодРегистрации),
		ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Квартал"));
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаКвартал", ПараметрыФормыВыбора, Элементы.ПериодНачисленияСтрокой, , , , ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ПериодНачисленияСтрокойОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ПериодНачисленияСтрокойМесяцНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормыВыбора = Новый Структура("НачалоПериода, КонецПериода, ВидПериода",
		НачалоМесяца(ЭтотОбъект.Объект.ПериодРегистрации),
		КонецМесяца(ЭтотОбъект.Объект.ПериодРегистрации),
		ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц"));
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", ПараметрыФормыВыбора, Элементы.ПериодНачисленияСтрокой, , , , ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ПериодНачисленияСтрокойМесяцОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий"
	);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоВзаиморасчетам(Команда)
		
	Если Объект.Контрагенты.Количество() > 0 
		Или Объект.НДФЛ.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='Табличные части будут очищены.
|Продолжить?';uk='Табличні частини будуть очищені.
|Продовжити?'");
		
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьПоВзаиморасчетам", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьПоВзаиморасчетамСервер(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьПоОплате(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоВзаиморасчетамСервер(Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВопросЗаполнитьПоВзаиморасчетам(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоВзаиморасчетамСервер(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоВзаиморасчетамСервер(ПоВзаиморасчетам)
	
		
	Объект.Контрагенты.Очистить(); 
	Объект.НДФЛ.Очистить();

	Запрос = Новый Запрос;
	Условие = "";
    Если ИНАГРО_ОбщийВызовСервераПовтИсп.ЕстьБСПУ() Тогда
		Условие = "	И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеПоПаям И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеДругихВыплат ";
	КонецЕсли;
	
	Если НЕ ПоВзаиморасчетам Тогда
		ТекстЗапроса = 
		    // ИНАГРО++ Изменен типовый запрос
			"ВЫБРАТЬ
			|	ОстаткиОбороты.Контрагент КАК Контрагент,
			|	СУММА(ОстаткиОбороты.УдержНДФЛ) КАК УдержНДФЛ,
			|	СУММА(ОстаткиОбороты.УдержВС) КАК УдержВС,
			|	СУММА(ОстаткиОбороты.ОбДт) КАК НачисленоДохода,
			|	ОстаткиОбороты.Счет КАК Счет
			|ИЗ
			|	(ВЫБРАТЬ
			|		Хозрасчетный.Контрагент КАК Контрагент,
			|		Хозрасчетный.Договор КАК Договор,
			|		СУММА(Хозрасчетный.УдержНДФЛ) КАК УдержНДФЛ,
			|		СУММА(Хозрасчетный.УдержВС) КАК УдержВС,
			|		СУММА(Хозрасчетный.ОбКт) КАК ОбКт,
			|		СУММА(Хозрасчетный.ОбДт) КАК ОбДт,
			|		Хозрасчетный.Счет КАК Счет
			|	ИЗ
			|		(ВЫБРАТЬ
			|			ХозрасчетныйОбороты.Субконто1 КАК Контрагент,
			|			ХозрасчетныйОбороты.Субконто2 КАК Договор,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет6411)
			|					ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
			|				ИНАЧЕ 0
			|			КОНЕЦ КАК УдержНДФЛ,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет642)
			|					ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
			|				ИНАЧЕ 0
			|			КОНЕЦ КАК УдержВС,
			|			ХозрасчетныйОбороты.СуммаОборотДт КАК ОбДт,
			|			ХозрасчетныйОбороты.СуммаОборотКт КАК ОбКт,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.Счет = &Счет6853
			|					ТОГДА ""Счет6853""
			|				ИНАЧЕ ""Счет""
			|			КОНЕЦ КАК Счет
			|		ИЗ
			|			РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&СписокСчетов), , Организация = &парамОрганизация, , ) КАК ХозрасчетныйОбороты
			|		ГДЕ
			|			ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
			|			И (ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (&СписокКорСчетов)
			|					ИЛИ ХозрасчетныйОбороты.КорСчет В (&Счет6411)
			|					ИЛИ ХозрасчетныйОбороты.КорСчет В (&Счет642))" + Условие + " ) КАК Хозрасчетный
			//|			И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеПоПаям
			//|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеДругихВыплат) КАК Хозрасчетный
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Хозрасчетный.Контрагент,
			|		Хозрасчетный.Договор,
			|		Хозрасчетный.Счет) КАК ОстаткиОбороты
			|ГДЕ
			|	(ОстаткиОбороты.ОбДт > 0
			|			ИЛИ ОстаткиОбороты.ОбКт > 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиОбороты.Контрагент,
			|	ОстаткиОбороты.Счет";
		    // ИНАГРО--			
	Иначе
		// по оплате
		ТекстЗапроса =
			// ИНАГРО++ Изменен типовый запрос
			"ВЫБРАТЬ
			|	ОстаткиОбороты.Контрагент КАК Контрагент,
			|	СУММА(ОстаткиОбороты.УдержНДФЛ) КАК УдержНДФЛ,
			|	СУММА(ОстаткиОбороты.УдержВС) КАК УдержВС,
			|	СУММА(ВЫБОР
			|			КОГДА ОстаткиОбороты.ОбКт - ОстаткиОбороты.ОстДт + ВЫБОР
			|					КОГДА ОстаткиОбороты.Возврат < 0
			|						ТОГДА ОстаткиОбороты.Возврат
			|					ИНАЧЕ 0
			|				КОНЕЦ > ОстаткиОбороты.ОбДт - ОстаткиОбороты.ОстКт - ВЫБОР
			|					КОГДА ОстаткиОбороты.Возврат > 0
			|						ТОГДА ОстаткиОбороты.Возврат
			|					ИНАЧЕ 0
			|				КОНЕЦ
			|				ТОГДА ОстаткиОбороты.ОбКт - ОстаткиОбороты.ОстДт + ВЫБОР
			|						КОГДА ОстаткиОбороты.Возврат < 0
			|							ТОГДА ОстаткиОбороты.Возврат
			|						ИНАЧЕ 0
			|					КОНЕЦ
			|			ИНАЧЕ ОстаткиОбороты.ОбДт - ОстаткиОбороты.ОстКт - ВЫБОР
			|					КОГДА ОстаткиОбороты.Возврат > 0
			|						ТОГДА ОстаткиОбороты.Возврат
			|					ИНАЧЕ 0
			|				КОНЕЦ
			|		КОНЕЦ) КАК НачисленоДохода,
			|	ОстаткиОбороты.Счет КАК Счет
			|ИЗ
			|	(ВЫБРАТЬ
			|		Хозрасчетный.Контрагент КАК Контрагент,
			|		Хозрасчетный.Договор КАК Договор,
			|		СУММА(Хозрасчетный.УдержНДФЛ) КАК УдержНДФЛ,
			|		СУММА(Хозрасчетный.УдержВС) КАК УдержВС,
			|		СУММА(Хозрасчетный.ОстКт) КАК ОстКт,
			|		СУММА(Хозрасчетный.ОстДт) КАК ОстДт,
			|		СУММА(Хозрасчетный.ОбКт) КАК ОбКт,
			|		СУММА(Хозрасчетный.ОбДт) КАК ОбДт,
			|		СУММА(Хозрасчетный.Возврат) КАК Возврат,
			|		Хозрасчетный.Счет КАК Счет
			|	ИЗ
			|		(ВЫБРАТЬ
			|			ХозрасчетныйОбороты.Субконто1 КАК Контрагент,
			|			ХозрасчетныйОбороты.Субконто2 КАК Договор,
			|			0 КАК УдержНДФЛ,
			|			0 КАК УдержВС,
			|			ХозрасчетныйОбороты.СуммаОстатокДт КАК ОстДт,
			|			ХозрасчетныйОбороты.СуммаОстатокКт КАК ОстКт,
			|			0 КАК ОбДт,
			|			0 КАК ОбКт,
			|			0 КАК Возврат,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.Счет = &Счет6853
			|					ТОГДА ""Счет6853""
			|				ИНАЧЕ ""Счет""
			|			КОНЕЦ КАК Счет
			|		ИЗ
			|			РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоПериода, Счет В ИЕРАРХИИ (&СписокСчетов), , Организация = &парамОрганизация) КАК ХозрасчетныйОбороты
			|		ГДЕ
			|			ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			ХозрасчетныйОбороты.Субконто1,
			|			ХозрасчетныйОбороты.Субконто2,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет6411)
			|					ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
			|				ИНАЧЕ 0
			|			КОНЕЦ,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет642)
			|					ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
			|				ИНАЧЕ 0
			|			КОНЕЦ,
			|			0,
			|			0,
			|			ХозрасчетныйОбороты.СуммаОборотДт,
			|			0,
			|			0,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.Счет = &Счет6853
			|					ТОГДА ""Счет6853""
			|				ИНАЧЕ ""Счет""
			|			КОНЕЦ
			|		ИЗ
			|			РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&СписокСчетовАвансы), , Организация = &парамОрганизация, , ) КАК ХозрасчетныйОбороты
			|		ГДЕ
			|			ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо) " + Условие + "
			//|			И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеПоПаям
			//|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеДругихВыплат
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			ХозрасчетныйОбороты.Субконто1,
			|			ХозрасчетныйОбороты.Субконто2,
			|			0,
			|			0,
			|			0,
			|			0,
			|			0,
			|			0,
			|			ХозрасчетныйОбороты.СуммаОборотКт,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.Счет = &Счет6853
			|					ТОГДА ""Счет6853""
			|				ИНАЧЕ ""Счет""
			|			КОНЕЦ
			|		ИЗ
			|			РегистрБухгалтерии.Хозрасчетный.Обороты(
			|					&НачалоПериода,
			|					&КонецПериода,
			|					Регистратор,
			|					Счет В ИЕРАРХИИ (&СписокСчетовАвансы)
			|						ИЛИ Счет В ИЕРАРХИИ (&СписокСчетовПоставщики),
			|					,
			|					Организация = &парамОрганизация,
			|					,
			|					) КАК ХозрасчетныйОбороты
			|		ГДЕ
			|			ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
			|			И ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ(&СписокКорСчетов) " + Условие + "
			//|			И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеПоПаям
			//|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеДругихВыплат
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			ХозрасчетныйОбороты.Субконто1,
			|			ХозрасчетныйОбороты.Субконто2,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет6411)
			|					ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
			|				ИНАЧЕ 0
			|			КОНЕЦ,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет642)
			|					ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
			|				ИНАЧЕ 0
			|			КОНЕЦ,
			|			0,
			|			0,
			|			0,
			|			ХозрасчетныйОбороты.СуммаОборотКт,
			|			0,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.Счет = &Счет6853
			|					ТОГДА ""Счет6853""
			|				ИНАЧЕ ""Счет""
			|			КОНЕЦ
			|		ИЗ
			|			РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&СписокСчетовПоставщики), , Организация = &парамОрганизация, , ) КАК ХозрасчетныйОбороты
			|		ГДЕ
			|			ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
			|			И НЕ ХозрасчетныйОбороты.КорСчет В (&СписокСчетовАвансы)
			|			И НЕ ХозрасчетныйОбороты.КорСчет В (&СписокСчетовПоставщики)
			|			И НЕ ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (&СписокКорСчетов) " + Условие + "
			//|			И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеПоПаям
			//|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеДругихВыплат
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			ХозрасчетныйОбороты.Субконто1,
			|			ХозрасчетныйОбороты.Субконто2,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет6411)
			|					ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
			|				ИНАЧЕ 0
			|			КОНЕЦ,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет642)
			|					ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
			|				ИНАЧЕ 0
			|			КОНЕЦ,
			|			0,
			|			0,
			|			ХозрасчетныйОбороты.СуммаОборотДт,
			|			0,
			|			0,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.Счет = &Счет6853
			|					ТОГДА ""Счет6853""
			|				ИНАЧЕ ""Счет""
			|			КОНЕЦ
			|		ИЗ
			|			РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&СписокСчетовПоставщики), , Организация = &парамОрганизация, , ) КАК ХозрасчетныйОбороты
			|		ГДЕ
			|			ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
			|			И ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ(&СписокКорСчетов) " + Условие + "
			//|			И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеПоПаям
			//|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеДругихВыплат
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			ХозрасчетныйОбороты.Субконто1,
			|			ХозрасчетныйОбороты.Субконто2,
			|			0,
			|			0,
			|			0,
			|			0,
			|			0,
			|			0,
			|			-ХозрасчетныйОбороты.СуммаОборотДт,
			|			ВЫБОР
			|				КОГДА ХозрасчетныйОбороты.Счет = &Счет6853
			|					ТОГДА ""Счет6853""
			|				ИНАЧЕ ""Счет""
			|			КОНЕЦ
			|		ИЗ
			|			РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&СписокСчетовПоставщики), , Организация = &парамОрганизация, , ) КАК ХозрасчетныйОбороты
			|		ГДЕ
			|			ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
			|			И НЕ ХозрасчетныйОбороты.КорСчет В (&СписокСчетовАвансы)
			|			И НЕ ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (&СписокКорСчетов)
			|			И НЕ ХозрасчетныйОбороты.КорСчет В (&СписокСчетовПоставщики)
			|			И НЕ ХозрасчетныйОбороты.КорСчет В (&Счет6411)
			|			И НЕ ХозрасчетныйОбороты.КорСчет В (&Счет642)  " + Условие + " ) КАК Хозрасчетный
			//|			И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеПоПаям
			//|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ИНАГРО_НачислениеДругихВыплат) КАК Хозрасчетный
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Хозрасчетный.Контрагент,
			|		Хозрасчетный.Договор,
			|		Хозрасчетный.Счет) КАК ОстаткиОбороты
			|ГДЕ
			|	ВЫБОР
			|			КОГДА ОстаткиОбороты.ОбКт - ОстаткиОбороты.ОстДт > ОстаткиОбороты.ОбДт - ОстаткиОбороты.ОстКт
			|				ТОГДА ОстаткиОбороты.ОбКт - ОстаткиОбороты.ОстДт
			|			ИНАЧЕ ОстаткиОбороты.ОбДт - ОстаткиОбороты.ОстКт
			|		КОНЕЦ > 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиОбороты.Контрагент,
			|	ОстаткиОбороты.Счет";
			// ИНАГРО--		
		
    КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	                                
	Запрос.УстановитьПараметр("парамОрганизация", Объект.Организация);
	Если Объект.ПериодРегистрации < УчетНДФЛ.ДатаИзмененияСхемыУчетаВС() Тогда 
		Запрос.УстановитьПараметр("НачалоПериода", НачалоКвартала(Объект.ПериодРегистрации));
		Запрос.УстановитьПараметр("КонецПериода", КонецКвартала(Объект.ПериодРегистрации) );
	Иначе
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.ПериодРегистрации));
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.ПериодРегистрации) );
	КонецЕсли;	
	Запрос.УстановитьПараметр("Счет6853", ПланыСчетов.Хозрасчетный.РасчетыПоИсполнительнымДокументам); // ИНАГРО
	
	СписокСчетов = Новый СписокЗначений;
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСОтечественнымиПоставщиками);				//631
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиУчастникамиПФГ);				//633
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСДругимиКредиторамиВНациональнойВалюте);	//6851
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоИсполнительнымДокументам);				//6853 // ИНАГРО
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДоговорамЗайма);						//6857 // ИНАГРО
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоВыданнымАвансамВНациональнойВалюте);	//3711
	
	СписокСчетовБанкКасса = Новый СписокЗначений;
	СписокСчетовБанкКасса.Добавить(ПланыСчетов.Хозрасчетный.Касса);			//301
	СписокСчетовБанкКасса.Добавить(ПланыСчетов.Хозрасчетный.СчетаВБанках);	//311
	СписокСчетовБанкКасса.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВНациональнойВалюте);	//3721
	
	СписокСчетовАвансы = Новый СписокЗначений;
	СписокСчетовАвансы.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоВыданнымАвансамВНациональнойВалюте);	//3711
	
	СписокСчетовПоставщики = Новый СписокЗначений;
	СписокСчетовПоставщики.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСОтечественнымиПоставщиками);				//631
	СписокСчетовПоставщики.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиУчастникамиПФГ);				//633
	СписокСчетовПоставщики.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСДругимиКредиторамиВНациональнойВалюте);	//6851
	СписокСчетовПоставщики.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоИсполнительнымДокументам);				//6853 // ИНАГРО 
	СписокСчетовПоставщики.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДоговорамЗайма);							//6857 // ИНАГРО
	
	Запрос.УстановитьПараметр("СписокСчетов"	, СписокСчетов);
	Запрос.УстановитьПараметр("Счет6411"		, ПланыСчетов.Хозрасчетный.РасчетыПоНДФЛ);
	Запрос.УстановитьПараметр("Счет642"			, ПланыСчетов.Хозрасчетный.РасчетыПоОбязательнымПлатежам);
	Запрос.УстановитьПараметр("СписокКорСчетов"	, СписокСчетовБанкКасса);
	Запрос.УстановитьПараметр("СписокСчетовАвансы"	, СписокСчетовАвансы);
    Запрос.УстановитьПараметр("СписокСчетовПоставщики"	, СписокСчетовПоставщики);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ИНН = Выборка.Контрагент.КодПоЕДРПОУ;
		Если ИНН = Неопределено Тогда
			
			Сообщить (НСтр("ru='Внимание! Для контрагента - ЧП  ';uk='Увага! Для контрагента - ПП  '") + Выборка.Контрагент + НСтр("ru=' не заполнен идентификационный номер (реквизит ДРФО в справочнике Контрагенты). Информация о нем не включается в ведомость!';uk=' не заповнений ідентифікаційний номер (реквізит ДРФО в довіднику Контрагенти). Інформація про нього не включається у відомість!'"));
			
		КонецЕсли;
		
		ТекСтрока = Объект.НДФЛ.Добавить();
			
		ТекСтрока.Контрагент = Выборка.Контрагент;
		ТекСтрока.ВидДохода = ?(Выборка.Счет = "Счет6853", Справочники.ВидыДоходовНДФЛ.Код29, Справочники.ВидыДоходовНДФЛ.Код42); // ИНАГРО
		
		ТекСтрока.Доход = Выборка.НачисленоДохода;
		ТекСтрока.Налог = Выборка.УдержНДФЛ;
		
		Если ЗначениеЗаполнено(Выборка.УдержВС)  Тогда
			ТекСтрокаВС = Объект.НДФЛ.Добавить();
			ТекСтрокаВС.Контрагент = Выборка.Контрагент;
			ТекСтрокаВС.Доход = Выборка.НачисленоДохода;
			ТекСтрокаВС.Налог = Выборка.УдержВС;
			Если Объект.ПериодРегистрации >= УчетНДФЛ.ДатаИзмененияСхемыУчетаВС() Тогда	
				ТекСтрокаВС.ВидДохода = Справочники.ВидыДоходовНДФЛ.Код42.ОблагаетсяВоеннымСбором2021;
			Иначе
				ТекСтрокаВС.ВидДохода = Справочники.ВидыДоходовНДФЛ.ВоенныйСбор;
			КонецЕсли;	
		КонецЕсли;
		
	КонецЦикла; 
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОплате(Команда)
	
		
	Если Объект.Контрагенты.Количество() > 0 
		Или Объект.НДФЛ.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='Табличные части будут очищены.
|Продолжить?';uk='Табличні частини будуть очищені.
|Продовжити?'");
		
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьПоОплате", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьПоВзаиморасчетамСервер(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Объект.ПериодРегистрации = РезультатВыбора.НачалоПериода;
	
	ПериодНачисленияСтрокой = Формат(ЭтотОбъект.Объект.ПериодРегистрации, "ДФ='q ''квартал'' yyyy'");
	ПериодНачисленияСтрокойМесяц = Формат(ЭтотОбъект.Объект.ПериодРегистрации, "Л="+ЛокализацияПовтИсп.КодЯзыкаИнтерфейса()+";ДФ='ММММ гггг'");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияПериодРегистрацииПриИзменении()

	ОбработатьИзменениеПериодРегистрацииНаСервере();

КонецПроцедуры

&НаСервере
Функция ЕстьЗаполненныеТабличныеЧасти()
	
	ДанныеВТЧЕсть = Ложь;
	
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Если Объект[ИмяТабличнойЧасти].Количество() > 0 Тогда
			ДанныеВТЧЕсть = Истина;
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	
	Возврат ДанныеВТЧЕсть;
	
КонецФункции

&НаСервере
Функция СписокТабличныхЧастейДокумента()
	
	СписокТабличныхЧастей = Новый Массив;
	
	СписокТабличныхЧастей.Добавить("Контрагенты");
	СписокТабличныхЧастей.Добавить("НДФЛ");
	
	Возврат СписокТабличныхЧастей;
	
КонецФункции

&НаСервере
Процедура ОбработатьИзменениеПериодРегистрацииНаСервере()

	Если ЕстьЗаполненныеТабличныеЧасти() Тогда
		ОчиститьТабличныеЧасти();
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТабличныеЧасти()
	
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Объект[ИмяТабличнойЧасти].Очистить();
	КонецЦикла;
	

КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеОрганизацииНаСервере()

	ОчиститьТабличныеЧасти();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти