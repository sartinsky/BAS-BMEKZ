#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	
// Подсистема "Управление доступом"

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "");
	
КонецПроцедуры

// Подсистема "Управление доступом"
	
	
///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст = "
	|Выбрать 
	|	Дата, 
	|	Организация,   
	|	ПериодРегистрации,
	| 	Ссылка 
	|Из 
	|	Документ." + Метаданные().Имя + "
	|Где 
	|	Ссылка = &ДокументСсылка
	|";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "РаботникиОрганизации" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоНДФЛ(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);

	// Описание текста запроса:
	// 1. Выборка "ТЧНДФЛ": 
	//		Выбираются строки документа.  
    //
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ТЧНДФЛ.НомерСтроки КАК НомерСтроки,
	               |	ТЧНДФЛ.Контрагент,
	               |	ТЧНДФЛ.ВидДохода,
	               |	ТЧНДФЛ.Доход,
	               |	ТЧНДФЛ.Налог
	               |ИЗ
	               |	Документ." + Метаданные().Имя + ".НДФЛ КАК ТЧНДФЛ
	               |
	               |ГДЕ
	               |	ТЧНДФЛ.Ссылка = &ДокументСсылка";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоРаботникиОрганизации()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                - выборка из результата запроса по шапке документа,
//  СтруктураПроведенияПоРегистрамСведений - структура, содержащая имена регистров 
//                                           сведений по которым надо проводить документ,
//  СтруктураПараметров                    - структура параметров проведения,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ТекСтрокаНДФЛ, ВидДвижения)
	
	////Движения по регистру "ВзаиморасчетыПоНДФЛ"

	Если ТекСтрокаНДФЛ.Доход = 0
		И ТекСтрокаНДФЛ.Налог = 0  Тогда
		Возврат;
	КонецЕсли;
	Движение = Движения.ВзаиморасчетыПоНДФЛ.Добавить();
	// Свойства
	Движение.ВидДвижения		= ВидДвиженияНакопления.Приход;
	Движение.Период				= Дата;
	// Измерения
	Движение.ПериодВзаиморасчетов	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
	Движение.ВидСтавки			= Перечисления.ВидыСтавокНДФЛ.Основная;
	Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
	Движение.Контрагент		= ТекСтрокаНДФЛ.Контрагент;
	Движение.ДоходНДФЛ			= ТекСтрокаНДФЛ.ВидДохода;
	// Ресурсы
	Движение.Доход = ТекСтрокаНДФЛ.Доход;
	Движение.Налог = ТекСтрокаНДФЛ.Налог;
	
	Движение.НалоговыйПериод	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
	
	Если ТекСтрокаНДФЛ.Налог <> 0  Тогда
		Возврат;
	КонецЕсли;
	// если налог не начислен сразу закрываем сумму дохода для 1Дф
	Движение = Движения.ВзаиморасчетыПоНДФЛ.Добавить();
	// Свойства
	Движение.ВидДвижения		= ВидДвиженияНакопления.Расход;
	Движение.Период				= Дата;
	// Измерения
	Движение.ПериодВзаиморасчетов	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
	Движение.ВидСтавки			= Перечисления.ВидыСтавокНДФЛ.Основная;
	Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
	Движение.Контрагент		= ТекСтрокаНДФЛ.Контрагент;
	Движение.ДоходНДФЛ			= ТекСтрокаНДФЛ.ВидДохода;
	// Ресурсы
	Движение.Доход = ТекСтрокаНДФЛ.Доход;
	Движение.Налог = 0;
	Движение.НалоговыйПериод	= ВыборкаПоШапкеДокумента.ПериодРегистрации;

КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамСведений

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке(Режим).Выбрать();
	
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		
		// выполним выборку по табличной части документа
		РезультатЗапросаПоНДФЛ = СформироватьЗапросПоНДФЛ(Режим);
		ВыборкаСтрокЗапроса = РезультатЗапросаПоНДФЛ.Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		// обходим строки запроса, проверяем данные и формируем движения
		Пока ВыборкаСтрокЗапроса.Следующий() Цикл
			// регистр ВзаиморасчетыПоНДФЛ Приход
			ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаСтрокЗапроса, ВидДвиженияНакопления.Приход);
			
		КонецЦикла;					
		
		// записываем движения регистров
		Движения.ВзаиморасчетыПоНДФЛ.Записать();
		
	КонецЕсли;
	
КонецПроцедуры


#КонецЕсли
