#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Приказ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приказ";
	КомандаПечати.Представление = НСтр("ru='Приказ';uk='Приказ'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая";

    //Пропуск
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Пропуск";
	КомандаПечати.Представление = НСтр("ru='Пропуск';uk='Пропуск'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая";
    
    // ПропусФ196
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПропускФ196";
	КомандаПечати.Представление = НСтр("ru='Пропуск ф196';uk='Пропуск ф196'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая";
    
    // ПриказФ16
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПриказФ16";
	КомандаПечати.Представление = НСтр("ru='Приказ ф16';uk='Приказ ф16'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая";
    
    // ПриказФ16УтвОбр
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПриказФ16УтвОбр";
	КомандаПечати.Представление = НСтр("ru='Приказ ф16 утвержденного образца';uk='Приказ ф16 затвердженого зразка'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая";
	
    // ПриказФ16УтвОбр 2021
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПриказФ16_2021";
	КомандаПечати.Представление = НСтр("ru='Приказ ф16 (2021)';uk='Приказ ф16 (2021)'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая";

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Приказ на вывоз""';uk='Реєстр документів ""Наказ на вивезення""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приказ") Тогда
        
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Приказ", НСтр("ru='Приказ';uk='Приказ'"), 
            ПечатьПриказ(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ПриказНаВывоз.ПФ_MXL_Приказ", , Истина);
             
    ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Пропуск") Тогда
        
         УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Пропуск", НСтр("ru='Пропуск';uk='Пропуск'"), 
            ПечатьПропуск(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ПриказНаВывоз.ПФ_MXL_Пропуск", , Истина);
            
    ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПропускФ196") Тогда
        
         УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПропускФ196", НСтр("ru='Пропуск Ф196';uk='Пропуск Ф196'"), 
            ПечатьПропускФ196(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "ОбщиеМакеты.ИНАГРО_ПФ_MXL_Пропуск_Ф196", , Истина);
            
    ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриказФ16") Тогда
        
         УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПриказФ16", НСтр("ru='Приказ ф16';uk='Приказ ф16'"), 
            ПечатьПриказФ16(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ПриказНаВывоз.ПФ_MXL_ПриказФ16", , Истина);
			
    ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриказФ16_2021") Тогда
        
         УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПриказФ16_2021", НСтр("ru='Приказ ф16 (2021)';uk='Приказ ф16 (2021)'"), 
            ПечатьПриказФ16_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ПриказНаВывоз.ПФ_MXL_ПриказФ16_2021", , Истина);
            
            
    ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриказФ16УтвОбр") Тогда
        
         УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПриказФ16УтвОбр", НСтр("ru='Приказ ф16 утвержденного образца';uk='Приказ ф16 затвердженого зразка'"), 
            ПечатьПриказФ16УтвОбр(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ПриказНаВывоз.ПФ_MXL_ПриказФ16_УтвержденногоОбразца", , Истина);
            
    КонецЕсли;
	
	
КонецПроцедуры

Функция ПечатьПриказ(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ПриказНаВывоз.Организация КАК Организация,
		|	ИНАГРО_ПриказНаВывоз.ВидОперации КАК ВидОперации,
		|	ИНАГРО_ПриказНаВывоз.Номер КАК Номер,
		|	ИНАГРО_ПриказНаВывоз.Владелец КАК Владелец,
		|	ИНАГРО_ПриказНаВывоз.Дата КАК Дата,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьСерия КАК ДовСерия,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьНомер КАК ДовНомер,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьЧерез КАК ДовЧерез,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьДата КАК ДовДата,
		|	ИНАГРО_ПриказНаВывоз.Урожай КАК Урожай,
		|	ИНАГРО_ПриказНаВывоз.Склад КАК Склад
		|ИЗ
		|	Документ.ИНАГРО_ПриказНаВывоз КАК ИНАГРО_ПриказНаВывоз
		|ГДЕ
		|	ИНАГРО_ПриказНаВывоз.Ссылка = &ТекущийДокумент";
    
    ЗапросКультуры = Новый Запрос;
    ЗапросКультуры.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ПриказНаВывозКультуры.Ссылка КАК Ссылка,
		|	ИНАГРО_ПриказНаВывозКультуры.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ПриказНаВывозКультуры.Номенклатура КАК Номенклатура,
		|	ИНАГРО_ПриказНаВывозКультуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ПриказНаВывозКультуры.Остаток КАК Остаток,
		|	ИНАГРО_ПриказНаВывозКультуры.Фасовка КАК Фасовка,
		|	ИНАГРО_ПриказНаВывозКультуры.Количество КАК Количество,
		|	ИНАГРО_ПриказНаВывозКультуры.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_ПриказНаВывозКультуры.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_ПриказНаВывозКультуры.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_ПриказНаВывозКультуры.Влажность КАК Влажность,
		|	ИНАГРО_ПриказНаВывозКультуры.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_ПриказНаВывозКультуры.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_ПриказНаВывозКультуры.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_ПриказНаВывозКультуры.Цена КАК Цена,
		|	ИНАГРО_ПриказНаВывозКультуры.Сумма КАК Сумма,
		|	ИНАГРО_ПриказНаВывозКультуры.НомерТранспорта КАК НомерТранспорта,
		|	ИНАГРО_ПриказНаВывозКультуры.УдалитьКоеффициент КАК УдалитьКоеффициент,
		|	ИНАГРО_ПриказНаВывозКультуры.УдалитьСтрокДействияПриказа КАК УдалитьСтрокДействияПриказа
		|ИЗ
		|	Документ.ИНАГРО_ПриказНаВывоз.Культуры КАК ИНАГРО_ПриказНаВывозКультуры
		|ГДЕ
		|	ИНАГРО_ПриказНаВывозКультуры.Ссылка = &ТекущийДокумент" ;
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ПриказНаВывоз.Приказ";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ПриказНаВывоз.ПФ_MXL_Приказ");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;

    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросКультуры.УстановитьПараметр("ТекущийДокумент", Ссылка);
        Культуры = ЗапросКультуры.Выполнить().Выгрузить();
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();

        
        Шапка = Макет.ПолучитьОбласть("Шапка");
		
		Шапка.Параметры.Фирма = РезультатШапка.Организация.НаименованиеПолное;
		
		Если РезультатШапка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ.Отгрузка ИЛИ РезультатШапка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ.ПустаяСсылка() Тогда
			Шапка.Параметры.ВидОперации = НСтр("ru='на отгрузку';uk='на відвантаження'",КодЯзыкаПечать);
		ИначеЕсли РезультатШапка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ.Переоформление Тогда
			Шапка.Параметры.ВидОперации = НСтр("ru='на переоформление';uk='на переоформлення'",КодЯзыкаПечать);
		Иначе
			Шапка.Параметры.ВидОперации = НСтр("ru='на уничтожение';uk='на знищення'",КодЯзыкаПечать);
		КонецЕсли;		
		
		Шапка.Параметры.НомерДок    = РезультатШапка.Номер;
		Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);
		Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.ДовСерия    = РезультатШапка.ДовСерия;
		Шапка.Параметры.ДовНомер    = РезультатШапка.ДовНомер;
		Шапка.Параметры.ДовДата     = Формат(РезультатШапка.ДовДата, "ДЛФ=D");
		Шапка.Параметры.ДовЧерез    = РезультатШапка.ДовЧерез;
		Шапка.Параметры.Урожай      = РезультатШапка.Урожай;
		Шапка.Параметры.Склад       = РезультатШапка.Склад;
		
		ТабДокумент.Вывести(Шапка);
		
		ИтогВес = 0;
		Для Каждого Стр ИЗ Культуры Цикл
			ОблСтр = Макет.ПолучитьОбласть("Строка");
			ОблСтр.Параметры.Заполнить(Стр);
			ТабДокумент.Вывести(ОблСтр);
			ИтогВес = ИтогВес + Стр.ФизическийВес;
        КонецЦикла;
        
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
        
		ОблДно = Макет.ПолучитьОбласть("Дно");
		ОблДно.Параметры.ИтогВес            = ИтогВес;
        ОблДно.Параметры.Директор           = Руководители.Руководитель;
        ОблДно.Параметры.ГлавныйБухгалтер   = Руководители.ГлавныйБухгалтер;
		ТабДокумент.Вывести(ОблДно);
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка);

    КонецЦикла; 
	Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьПропуск(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ПриказНаВывоз.Организация КАК Организация,
		|	ИНАГРО_ПриказНаВывоз.Номер КАК Номер,
		|	ИНАГРО_ПриказНаВывоз.Дата КАК Дата,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьЧерез КАК ДовЧерез
		|ИЗ
		|	Документ.ИНАГРО_ПриказНаВывоз КАК ИНАГРО_ПриказНаВывоз
		|ГДЕ
		|	ИНАГРО_ПриказНаВывоз.Ссылка = &ТекущийДокумент";
    
    ЗапросКультуры = Новый Запрос;
    ЗапросКультуры.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ПриказНаВывозКультуры.Ссылка КАК Ссылка,
		|	ИНАГРО_ПриказНаВывозКультуры.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ПриказНаВывозКультуры.Номенклатура КАК Номенклатура,
		|	ИНАГРО_ПриказНаВывозКультуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ПриказНаВывозКультуры.Остаток КАК Остаток,
		|	ИНАГРО_ПриказНаВывозКультуры.Фасовка КАК Фасовка,
		|	ИНАГРО_ПриказНаВывозКультуры.Количество КАК Количество,
		|	ИНАГРО_ПриказНаВывозКультуры.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_ПриказНаВывозКультуры.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_ПриказНаВывозКультуры.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_ПриказНаВывозКультуры.Влажность КАК Влажность,
		|	ИНАГРО_ПриказНаВывозКультуры.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_ПриказНаВывозКультуры.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_ПриказНаВывозКультуры.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_ПриказНаВывозКультуры.Цена КАК Цена,
		|	ИНАГРО_ПриказНаВывозКультуры.Сумма КАК Сумма,
		|	ИНАГРО_ПриказНаВывозКультуры.НомерТранспорта КАК НомерТранспорта,
		|	ИНАГРО_ПриказНаВывозКультуры.УдалитьКоеффициент КАК УдалитьКоеффициент,
		|	ИНАГРО_ПриказНаВывозКультуры.УдалитьСтрокДействияПриказа КАК УдалитьСтрокДействияПриказа
		|ИЗ
		|	Документ.ИНАГРО_ПриказНаВывоз.Культуры КАК ИНАГРО_ПриказНаВывозКультуры
		|ГДЕ
		|	ИНАГРО_ПриказНаВывозКультуры.Ссылка = &ТекущийДокумент" ;
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ПриказНаВывоз.Пропуск";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ПриказНаВывоз.ПФ_MXL_Пропуск");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросКультуры.УстановитьПараметр("ТекущийДокумент", Ссылка);
        Культуры = ЗапросКультуры.Выполнить().Выгрузить();
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        Шапка = Макет.ПолучитьОбласть("Шапка");
        
        Шапка.Параметры.Фирма       = РезультатШапка.Организация.НаименованиеПолное;  
        Шапка.Параметры.НомерДок    = РезультатШапка.Номер;
        Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
        Шапка.Параметры.Через       = РезультатШапка.ДовЧерез;
        
        ТабДокумент.Вывести(Шапка);
        
        Для Каждого Стр ИЗ Культуры Цикл
            ОблСтр = Макет.ПолучитьОбласть("Строка");
            ОблСтр.Параметры.Заполнить(Стр);
            ТабДокумент.Вывести(ОблСтр);
        КонецЦикла;
        
        ОблДно = Макет.ПолучитьОбласть("Дно");
        Руководители               = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация, РезультатШапка.Дата);
        ОблДно.Параметры.Бухгалтер = Руководители.ГлавныйБухгалтер;
        ТабДокумент.Вывести(ОблДно);
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;

КонецФункции

Функция ПечатьПриказФ16(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ПриказНаВывоз.Организация КАК Организация,
		|	ИНАГРО_ПриказНаВывоз.ВидОперации КАК ВидОперации,
		|	ИНАГРО_ПриказНаВывоз.Номер КАК Номер,
		|	ИНАГРО_ПриказНаВывоз.Владелец КАК Владелец,
		|	ИНАГРО_ПриказНаВывоз.Дата КАК Дата,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьСерия КАК ДовСерия,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьНомер КАК ДовНомер,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьЧерез КАК ДовЧерез,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьДата КАК ДовДата,
		|	ИНАГРО_ПриказНаВывоз.Урожай КАК Урожай,
		|	ИНАГРО_ПриказНаВывоз.Склад КАК Склад,
		|	ИНАГРО_ПриказНаВывоз.ПунктНазначения КАК ПунктНазначения,
		|	ИНАГРО_ПриказНаВывоз.ДатаОкончанияДействияПриказа КАК ДатаОкончанияДействияПриказа,
		|	ИНАГРО_ПриказНаВывоз.ПисьмоНомер КАК ПисьмоНомер,
		|	ИНАГРО_ПриказНаВывоз.ПисьмоДата КАК ПисьмоДата,
		|	ИНАГРО_ПриказНаВывоз.Мастер КАК Мастер,
		|	ИНАГРО_ПриказНаВывоз.Получатель КАК Получатель
		|ИЗ
		|	Документ.ИНАГРО_ПриказНаВывоз КАК ИНАГРО_ПриказНаВывоз
		|ГДЕ
		|	ИНАГРО_ПриказНаВывоз.Ссылка = &ТекущийДокумент";
    
    ЗапросКультуры = Новый Запрос;
    ЗапросКультуры.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ПриказНаВывозКультуры.Ссылка КАК Ссылка,
		|	ИНАГРО_ПриказНаВывозКультуры.Номенклатура КАК Номенклатура,
		|	ИНАГРО_ПриказНаВывозКультуры.Фасовка КАК Фасовка,
		|	ИНАГРО_ПриказНаВывозКультуры.Количество КАК Количество,
		|	ИНАГРО_ПриказНаВывозКультуры.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_ПриказНаВывозКультуры.Влажность КАК Влажность,
		|	ИНАГРО_ПриказНаВывозКультуры.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_ПриказНаВывозКультуры.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_ПриказНаВывоз.Культуры КАК ИНАГРО_ПриказНаВывозКультуры
		|ГДЕ
		|	ИНАГРО_ПриказНаВывозКультуры.Ссылка = &ТекущийДокумент" ;
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ПриказНаВывоз.ПриказФ16";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ПриказНаВывоз.ПФ_MXL_ПриказФ16");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;

    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросКультуры.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТаблицаРезультат = ЗапросКультуры.Выполнить().Выгрузить();
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
		мСобственноеПодразделение = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитКонтрагента(РезультатШапка.Владелец,"СобственноеПодразделение");
		
		ОблШапка 		= Макет.ПолучитьОбласть("Шапка");
		ОблШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОблСтрока 		= Макет.ПолучитьОбласть("Строка");
		ОблИтог 		= Макет.ПолучитьОбласть("Итог");
		ОблПодписи 		= Макет.ПолучитьОбласть("Подписи");
		
		ОблШапка.Параметры.Заполнить(Ссылка);
		
		Если РезультатШапка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ.Переоформление Тогда		
			ОблШапка.Параметры.Получатель = " на   " + РезультатШапка.Получатель.НаименованиеПолное;
		Иначе			
			ОблШапка.Параметры.Получатель = " на   " + РезультатШапка.ПунктНазначения; 			
		КонецЕсли;                                                                     
		
		ОблШапка.Параметры.Фирма 	= РезультатШапка.Организация.НаименованиеПолное;	
		ОблШапка.Параметры.Номер 	= РезультатШапка.Номер;
		ОблШапка.Параметры.Дата 	= Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		ОблШапка.Параметры.СтрокДействияПриказа = "до " + Формат(РезультатШапка.ДатаОкончанияДействияПриказа, "ДЛФ=D");
		ОблШапка.Параметры.Склад    = "" + РезультатШапка.Склад + " /  " + ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
		ОблШапка.Параметры.ДовЧерез = РезультатШапка.ДовЧерез;
		ОблШапка.Параметры.ДовНомер = РезультатШапка.ДовНомер;

		Если РезультатШапка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ.Отгрузка ИЛИ РезультатШапка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ.ПустаяСсылка() Тогда
			ОблШапка.Параметры.Отгрузить = НСтр("ru='Отгрузить';uk='Відвантажити'",КодЯзыкаПечать);
		ИначеЕсли РезультатШапка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ.Переоформление Тогда
			ОблШапка.Параметры.Отгрузить = НСтр("ru='Переоформить';uk='Переоформити'",КодЯзыкаПечать);
		Иначе
			ОблШапка.Параметры.Отгрузить = НСтр("ru='Уничтожить';uk='Знищити'",КодЯзыкаПечать);
		КонецЕсли;
		
		ОблШапка.Параметры.ДовДата = Формат(РезультатШапка.ДовДата, "ДЛФ=D");
		ОблШапка.Параметры.ПисьмоНомер  = ?(СокрЛП(РезультатШапка.ПисьмоНомер) = "", "_________", РезультатШапка.ПисьмоНомер);
		ОблШапка.Параметры.ПисьмоДата   = ?(РезультатШапка.ПисьмоДата = '00010101', "________________", Формат(РезультатШапка.ПисьмоДата, "ДЛФ=D"));
		
		ТабДокумент.Вывести(ОблШапка);
		ТабДокумент.Вывести(ОблШапкаТаблицы);	
				
		Ном = 1;
		Для Каждого Стр ИЗ ТаблицаРезультат Цикл
			ОблСтрока.Параметры.Заполнить(Стр);
			ОблСтрока.Параметры.Ном = Ном;
			ТабДокумент.Вывести(ОблСтрока);
			Ном = Ном + 1;
		КонецЦикла;
		
		ВсегоКоличество	                                = ТаблицаРезультат.Итог("Количество");
		ОблИтог.Параметры.ВсегоКоличество               = ВсегоКоличество;
		ВсегоФизическийВес                              = ТаблицаРезультат.Итог("ФизическийВес");	
		ОблИтог.Параметры.ВсегоФизическийВес            = ВсегоФизическийВес;
        ОблИтог.Параметры.ВсегоФизическийВесПрописью    = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,ВсегоФизическийВес);
		ТабДокумент.Вывести(ОблИтог);
		
		Руководители                                = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация, РезультатШапка.Дата);
		ОблПодписи.Параметры.ДолжностьРуководителя  = Руководители.ДолжностьРуководителя;
		ОблПодписи.Параметры.Директор               = Руководители.Руководитель;
		ОблПодписи.Параметры.ГлавныйБухгалтер       = Руководители.ГлавныйБухгалтер;
		ОблПодписи.Параметры.ЗавЛабораторией        = Руководители.НачальникВТЛ;
		ОблПодписи.Параметры.Бухгалтер              = Руководители.БухгалтерККУ;
		ОблПодписи.Параметры.Мастер                 = РазборФИО(РезультатШапка.Мастер);
		ТабДокумент.Вывести(ОблПодписи);
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
	КонецЦикла;
	
    Возврат ТабДокумент;

КонецФункции

Функция ПечатьПриказФ16УтвОбр(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ПриказНаВывоз.Организация КАК Организация,
		|	ИНАГРО_ПриказНаВывоз.ВидОперации КАК ВидОперации,
		|	ИНАГРО_ПриказНаВывоз.Номер КАК Номер,
		|	ИНАГРО_ПриказНаВывоз.Владелец КАК Владелец,
		|	ИНАГРО_ПриказНаВывоз.Дата КАК Дата,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьСерия КАК ДовСерия,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьНомер КАК ДовНомер,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьЧерез КАК ДовЧерез,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьДата КАК ДовДата,
		|	ИНАГРО_ПриказНаВывоз.Урожай КАК Урожай,
		|	ИНАГРО_ПриказНаВывоз.Склад КАК Склад,
		|	ИНАГРО_ПриказНаВывоз.ПунктНазначения КАК ПунктНазначения,
		|	ИНАГРО_ПриказНаВывоз.ДатаОкончанияДействияПриказа КАК ДатаОкончанияДействияПриказа,
		|	ИНАГРО_ПриказНаВывоз.ПисьмоНомер КАК ПисьмоНомер,
		|	ИНАГРО_ПриказНаВывоз.ПисьмоДата КАК ПисьмоДата,
		|	ИНАГРО_ПриказНаВывоз.Мастер КАК Мастер,
		|	ИНАГРО_ПриказНаВывоз.Получатель КАК Получатель
		|ИЗ
		|	Документ.ИНАГРО_ПриказНаВывоз КАК ИНАГРО_ПриказНаВывоз
		|ГДЕ
		|	ИНАГРО_ПриказНаВывоз.Ссылка = &ТекущийДокумент";
    
    ЗапросКультуры = Новый Запрос;
    ЗапросКультуры.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ПриказНаВывозКультуры.Ссылка КАК Ссылка,
		|	ИНАГРО_ПриказНаВывозКультуры.Номенклатура КАК Номенклатура,
		|	ИНАГРО_ПриказНаВывозКультуры.Фасовка КАК Фасовка,
		|	ИНАГРО_ПриказНаВывозКультуры.Количество КАК Количество,
		|	ИНАГРО_ПриказНаВывозКультуры.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_ПриказНаВывозКультуры.Влажность КАК Влажность,
		|	ИНАГРО_ПриказНаВывозКультуры.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_ПриказНаВывозКультуры.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_ПриказНаВывоз.Культуры КАК ИНАГРО_ПриказНаВывозКультуры
		|ГДЕ
		|	ИНАГРО_ПриказНаВывозКультуры.Ссылка = &ТекущийДокумент" ;
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ПриказНаВывоз.ПриказФ16_УтвОбр";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ПриказНаВывоз.ПФ_MXL_ПриказФ16_УтвержденногоОбразца");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;

    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросКультуры.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТаблицаРезультат = ЗапросКультуры.Выполнить().Выгрузить();
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        Руководители                = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
        мСобственноеПодразделение   = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитКонтрагента(РезультатШапка.Владелец,"СобственноеПодразделение");
        
        ОблШапка 		    = Макет.ПолучитьОбласть("Шапка");
        ОблШапкаТаблицы     = Макет.ПолучитьОбласть("ШапкаТаблицы");
        ОблСтрока 		    = Макет.ПолучитьОбласть("Строка");
        ОблИтог 		    = Макет.ПолучитьОбласть("Итог");
        ОблПодписи 		    = Макет.ПолучитьОбласть("Подписи");
        ОблШапкаОбрСтороны	= Макет.ПолучитьОбласть("ШапкаОбрСтороны");
        ОблСтрокаОбрСтороны	= Макет.ПолучитьОбласть("СтрокаОбрСтороны");
        
        ОблШапка.Параметры.Заполнить(Ссылка);
        
        Если РезультатШапка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ.Переоформление Тогда			
            ОблШапка.Параметры.Получатель = " на   " + РезультатШапка.Получатель.НаименованиеПолное;
        Иначе			
            ОблШапка.Параметры.Получатель = " на   " + РезультатШапка.ПунктНазначения; 			
        КонецЕсли;                                                             
        
        ОблШапка.Параметры.Фирма 	            = РезультатШапка.Организация.НаименованиеПолное;	
        ОблШапка.Параметры.Номер 	            = РезультатШапка.Номер;
        ОблШапка.Параметры.Дата 	            = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
        ОблШапка.Параметры.СтрокДействияПриказа = "до " + Формат(РезультатШапка.ДатаОкончанияДействияПриказа, "ДЛФ=D");
        ОблШапка.Параметры.Склад                = "" + РезультатШапка.Склад + " /  " + ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
        ОблШапка.Параметры.ДовЧерез             = РезультатШапка.ДовЧерез;
        ОблШапка.Параметры.ДовНомер             = РезультатШапка.ДовНомер;
        ОблШапка.Параметры.ЕДРПОУ               = РезультатШапка.Организация.КодПоЕДРПОУ;
        
        Если РезультатШапка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ.Отгрузка ИЛИ РезультатШапка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ.ПустаяСсылка() Тогда
            ОблШапка.Параметры.Отгрузить = НСтр("ru='Отпустить (отгрузить)';uk='Відпустити (відвантажити)'",КодЯзыкаПечать);
        ИначеЕсли РезультатШапка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ.Переоформление Тогда
            ОблШапка.Параметры.Отгрузить = НСтр("ru='Переоформить';uk='Переоформити'",КодЯзыкаПечать);
        Иначе
            ОблШапка.Параметры.Отгрузить = НСтр("ru='Уничтожить';uk='Знищити'",КодЯзыкаПечать);
        КонецЕсли;
        
        ОблШапка.Параметры.ДовДата      = Формат(РезультатШапка.ДовДата, "ДЛФ=D");
        ОблШапка.Параметры.ПисьмоНомер  = ?(СокрЛП(РезультатШапка.ПисьмоНомер) = "", "_________", РезультатШапка.ПисьмоНомер);
        ОблШапка.Параметры.ПисьмоДата   = ?(РезультатШапка.ПисьмоДата = '00010101', "________________", Формат(РезультатШапка.ПисьмоДата, "ДЛФ=D"));
        
        ТабДокумент.Вывести(ОблШапка);
        ТабДокумент.Вывести(ОблШапкаТаблицы);     
        
        Ном = 1;
        Для Каждого Стр ИЗ ТаблицаРезультат Цикл
            ОблСтрока.Параметры.Заполнить(Стр);
            ОблСтрока.Параметры.Ном = Ном;
            ТабДокумент.Вывести(ОблСтрока);
            Ном = Ном + 1;
        КонецЦикла;
        
        ВсегоКоличество	                                = ТаблицаРезультат.Итог("Количество");
        ОблИтог.Параметры.ВсегоКоличество               = ВсегоКоличество;
        ВсегоФизическийВес                              = ТаблицаРезультат.Итог("ФизическийВес");	
        ОблИтог.Параметры.ВсегоФизическийВес            = ВсегоФизическийВес;
        ОблИтог.Параметры.ВсегоФизическийВесПрописью    = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,ВсегоФизическийВес);
        ТабДокумент.Вывести(ОблИтог);
        
        Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация, РезультатШапка.Дата);
        ОблПодписи.Параметры.ДолжностьРуководителя  = Руководители.ДолжностьРуководителя;
        ОблПодписи.Параметры.Директор               = Руководители.Руководитель;
        ОблПодписи.Параметры.ГлавныйБухгалтер       = Руководители.ГлавныйБухгалтер;
        ОблПодписи.Параметры.ЗавЛабораторией        = Руководители.НачальникВТЛ;
        ОблПодписи.Параметры.Бухгалтер              = Руководители.БухгалтерККУ;
        ОблПодписи.Параметры.Мастер                 = РазборФИО(РезультатШапка.Мастер);
        
        ТабДокумент.Вывести(ОблПодписи);
        ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        ТабДокумент.Вывести(ОблШапкаОбрСтороны);
        
        Для Ном = 1 по 9 Цикл
            ТабДокумент.Вывести(ОблСтрокаОбрСтороны);
        КонецЦикла;
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьПриказФ16_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ПриказНаВывоз.Организация КАК Организация,
		|	ИНАГРО_ПриказНаВывоз.ВидОперации КАК ВидОперации,
		|	ИНАГРО_ПриказНаВывоз.Номер КАК Номер,
		|	ИНАГРО_ПриказНаВывоз.Владелец КАК Владелец,
		|	ИНАГРО_ПриказНаВывоз.Дата КАК Дата,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьСерия КАК ДовСерия,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьНомер КАК ДовНомер,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьЧерез КАК ДовЧерез,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьДата КАК ДовДата,
		|	ИНАГРО_ПриказНаВывоз.Урожай КАК Урожай,
		|	ИНАГРО_ПриказНаВывоз.Склад КАК Склад,
		|	ИНАГРО_ПриказНаВывоз.ПунктНазначения КАК ПунктНазначения,
		|	ИНАГРО_ПриказНаВывоз.ДатаОкончанияДействияПриказа КАК ДатаОкончанияДействияПриказа,
		|	ИНАГРО_ПриказНаВывоз.ПисьмоНомер КАК ПисьмоНомер,
		|	ИНАГРО_ПриказНаВывоз.ПисьмоДата КАК ПисьмоДата,
		|	ИНАГРО_ПриказНаВывоз.Мастер КАК Мастер,
		|	ИНАГРО_ПриказНаВывоз.Получатель КАК Получатель
		|ИЗ
		|	Документ.ИНАГРО_ПриказНаВывоз КАК ИНАГРО_ПриказНаВывоз
		|ГДЕ
		|	ИНАГРО_ПриказНаВывоз.Ссылка = &ТекущийДокумент";
    
    ЗапросКультуры = Новый Запрос;
    ЗапросКультуры.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ПриказНаВывозКультуры.Ссылка КАК Ссылка,
		|	ИНАГРО_ПриказНаВывозКультуры.Номенклатура КАК Номенклатура,
		|	ИНАГРО_ПриказНаВывозКультуры.Фасовка КАК Фасовка,
		|	ИНАГРО_ПриказНаВывозКультуры.Количество КАК Количество,
		|	ИНАГРО_ПриказНаВывозКультуры.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_ПриказНаВывозКультуры.Влажность КАК Влажность,
		|	ИНАГРО_ПриказНаВывозКультуры.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_ПриказНаВывозКультуры.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_ПриказНаВывоз.Культуры КАК ИНАГРО_ПриказНаВывозКультуры
		|ГДЕ
		|	ИНАГРО_ПриказНаВывозКультуры.Ссылка = &ТекущийДокумент" ;
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ПриказНаВывоз.ПриказФ16_2021";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ПриказНаВывоз.ПФ_MXL_ПриказФ16_2021");
    
    // печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = "uk";
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;

    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросКультуры.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТаблицаРезультат = ЗапросКультуры.Выполнить().Выгрузить();
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
		//Руководители                = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизацииИмяФамилия(РезультатШапка.Организация,РезультатШапка.Дата);
        мСобственноеПодразделение   = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитКонтрагента(РезультатШапка.Владелец,"СобственноеПодразделение");
        
        ОблШапка 		    = Макет.ПолучитьОбласть("Шапка");
        ОблШапкаТаблицы     = Макет.ПолучитьОбласть("ШапкаТаблицы");
        ОблСтрока 		    = Макет.ПолучитьОбласть("Строка");
        ОблПодписи 		    = Макет.ПолучитьОбласть("Подписи");
        ОблШапкаОбрСтороны	= Макет.ПолучитьОбласть("Страница2");
		//ОблСтрокаОбрСтороны	= Макет.ПолучитьОбласть("СтрокаОбрСтороны");
        
        ОблШапка.Параметры.Заполнить(Ссылка);
        
        Если РезультатШапка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ.Переоформление Тогда			
            ОблШапка.Параметры.Получатель = " на   " + РезультатШапка.Получатель.НаименованиеПолное;
        Иначе			
            ОблШапка.Параметры.Получатель = " на   " + РезультатШапка.ПунктНазначения; 			
        КонецЕсли;                                                             
        
        ОблШапка.Параметры.Фирма 	            = РезультатШапка.Организация.НаименованиеПолное;	
        ОблШапка.Параметры.Номер 	            = РезультатШапка.Номер;
        ОблШапка.Параметры.Дата 	            = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
        ОблШапка.Параметры.СтрокДействияПриказа = "до " + Формат(РезультатШапка.ДатаОкончанияДействияПриказа, "ДЛФ=D");
        ОблШапка.Параметры.Склад                = "" + РезультатШапка.Склад + " /  " + ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
        ОблШапка.Параметры.ДовЧерез             = РезультатШапка.ДовЧерез;
        ОблШапка.Параметры.ДовНомер             = РезультатШапка.ДовНомер;
        ОблШапка.Параметры.ЕДРПОУ               = РезультатШапка.Организация.КодПоЕДРПОУ;
                
        ОблШапка.Параметры.ДовДата      = Формат(РезультатШапка.ДовДата, "ДЛФ=D");
        ОблШапка.Параметры.ПисьмоНомер  = ?(СокрЛП(РезультатШапка.ПисьмоНомер) = "", "_________", РезультатШапка.ПисьмоНомер);
		
        ВсегоФизическийВес                              = ТаблицаРезультат.Итог("ФизическийВес");	
        ОблШапка.Параметры.ВсегоФизическийВесПрописью   = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,ВсегоФизическийВес);
		
        ТабДокумент.Вывести(ОблШапка);
        ТабДокумент.Вывести(ОблШапкаТаблицы);     
        
        Для Каждого Стр ИЗ ТаблицаРезультат Цикл
            ОблСтрока.Параметры.Заполнить(Стр);
            ТабДокумент.Вывести(ОблСтрока);
        КонецЦикла;
        
        
        Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизацииИмяФамилия(РезультатШапка.Организация, РезультатШапка.Дата);
        ОблПодписи.Параметры.Директор               = Руководители.Руководитель;
        ОблПодписи.Параметры.ГлавныйБухгалтер       = Руководители.ГлавныйБухгалтер;
        ОблПодписи.Параметры.НачальникВТЛ        = Руководители.НачальникВТЛ;
        
        ТабДокумент.Вывести(ОблПодписи);
        ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        ТабДокумент.Вывести(ОблШапкаОбрСтороны);
        
		//Для Ном = 1 по 9 Цикл
		//    ТабДокумент.Вывести(ОблСтрокаОбрСтороны);
		//КонецЦикла;
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
   КонецФункции


Функция ПечатьПропускФ196(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
        
	УстановитьПривилегированныйРежим(Истина);
	
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ПриказНаВывоз.Организация КАК Организация,
		|	ИНАГРО_ПриказНаВывоз.ВидОперации КАК ВидОперации,
		|	ИНАГРО_ПриказНаВывоз.Номер КАК Номер,
		|	ИНАГРО_ПриказНаВывоз.Владелец КАК Владелец,
		|	ИНАГРО_ПриказНаВывоз.Дата КАК Дата,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьСерия КАК ДовСерия,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьНомер КАК ДовНомер,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьЧерез КАК ДовЧерез,
		|	ИНАГРО_ПриказНаВывоз.ДоверенностьДата КАК ДовДата,
		|	ИНАГРО_ПриказНаВывоз.Урожай КАК Урожай,
		|	ИНАГРО_ПриказНаВывоз.Склад КАК Склад,
		|	ИНАГРО_ПриказНаВывоз.ПунктНазначения КАК ПунктНазначения,
		|	ИНАГРО_ПриказНаВывоз.ДатаОкончанияДействияПриказа КАК ДатаОкончанияДействияПриказа,
		|	ИНАГРО_ПриказНаВывоз.ПисьмоНомер КАК ПисьмоНомер,
		|	ИНАГРО_ПриказНаВывоз.ПисьмоДата КАК ПисьмоДата,
		|	ИНАГРО_ПриказНаВывоз.Мастер КАК Мастер,
		|	ИНАГРО_ПриказНаВывоз.Получатель КАК Получатель,
		|	ИНАГРО_ПриказНаВывоз.Комментарий КАК Примечание
		|ИЗ
		|	Документ.ИНАГРО_ПриказНаВывоз КАК ИНАГРО_ПриказНаВывоз
		|ГДЕ
		|	ИНАГРО_ПриказНаВывоз.Ссылка = &ТекущийДокумент";
	
	ЗапросКультуры = Новый Запрос;
	ЗапросКультуры.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ПриказНаВывозКультуры.Ссылка КАК Ссылка,
		|	ИНАГРО_ПриказНаВывозКультуры.Номенклатура КАК Номенклатура,
		|	ИНАГРО_ПриказНаВывозКультуры.Фасовка КАК Фасовка,
		|	ИНАГРО_ПриказНаВывозКультуры.Количество КАК Количество,
		|	ИНАГРО_ПриказНаВывозКультуры.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_ПриказНаВывозКультуры.Влажность КАК Влажность,
		|	ИНАГРО_ПриказНаВывозКультуры.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_ПриказНаВывозКультуры.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_ПриказНаВывоз.Культуры КАК ИНАГРО_ПриказНаВывозКультуры
		|ГДЕ
		|	ИНАГРО_ПриказНаВывозКультуры.Ссылка = &ТекущийДокумент" ;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_Пропуск_Ф196";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщиеМакеты.ИНАГРО_ПФ_MXL_Пропуск_Ф196");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Для каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ЗапросКультуры.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Культуры = ЗапросКультуры.Выполнить().Выгрузить();
		
		ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
		РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
		РезультатШапка.Следующий();
		
		ВремяНачалаДня  = ИНАГРО_Элеватор.ПолучитьПараметрУчетаЭлеватора(РезультатШапка.Дата, "ВремяНачалаДня", 0);
		
		КвоЭкземпляров = 2;
		СтруктураСохранения = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_ПриказНаВывоз_ПропускФ196");	
		Если СтруктураСохранения <> Неопределено Тогда
			КвоЭкземпляров = СтруктураСохранения.ВыбранноеКоличествоПропускФ196; 
		КонецЕсли;
		
		Если КвоЭкземпляров > 1 Тогда
			КвоЭкземпляровНаСтраницу = 2;
			КвоЭкземпляровПоделенноеНаДва = Окр(КвоЭкземпляров/2,0);
		Иначе 
			КвоЭкземпляровНаСтраницу = 1;
			КвоЭкземпляровПоделенноеНаДва = 1;
		КонецЕсли; 
		
		КоличествоНапечатанныхЭкземпляров = 0;
		НомерЭкземпляраДелНаДва = 1;
		Пока НомерЭкземпляраДелНаДва <= КвоЭкземпляровПоделенноеНаДва Цикл
			
			ОблОбщая = Макет.ПолучитьОбласть("Общая|Лист");
			ОблШапка = Макет.ПолучитьОбласть("Шапка|Лист");
			
			ОблШапка.Параметры.Организация          = РезультатШапка.Организация.Наименование;
			СведенияОбОрганизации                   = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(РезультатШапка.Организация,,,,КодЯзыкаПечать);
			ОблШапка.Параметры.ЕДРПУ                = СведенияОбОрганизации.КодПоЕДРПОУ;
			ОблШапка.Параметры.НомерДок             = РезультатШапка.Номер;
			ОблШапка.Параметры.ВодительАвтомобиль   = РезультатШапка.Примечание;
			ОблШапка.Параметры.ДатаДок              = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг р.';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать)) + "  " + Формат(ТекущаяДата(), "ДФ='H:мм:сс'");
			ОблШапка.Параметры.Кому                 = РезультатШапка.Владелец.Наименование;
			ОблШапка.Параметры.НомНаказу            = РезультатШапка.Номер;
			ОблШапка.Параметры.ДатаПриказа          = Формат(РезультатШапка.Дата, "ДФ='дд.ММ.гггг р.'");
			ОблШапка.Параметры.ЧерезКого            = РезультатШапка.ДовЧерез;
			ОблШапка.Параметры.Довереность          = "серія " + РезультатШапка.ДовСерия + " № " + РезультатШапка.ДовНомер + " від " + Формат(РезультатШапка.ДовДата, "ДФ='дд.ММ.гггг р.'");
			
			ВывестиОбластьПропуска(ТабДокумент, ОблШапка, КвоЭкземпляровНаСтраницу,КоличествоНапечатанныхЭкземпляров,КвоЭкземпляров);
			
			ОблСтрока = Макет.ПолучитьОбласть("Строка|Лист");
			Ном = 0;  Вес = 0;
			Для каждого СтрТов из Культуры Цикл 
				Ном = Ном + 1;
				ОблСтрока.Параметры.Ном				= Ном;
				ОблСтрока.Параметры.Номенклатура	= СтрТов.Номенклатура;	
				ОблСтрока.Параметры.Вес				= СтрТов.ФизическийВес;	
				Вес = Вес + СтрТов.ФизическийВес;
				ВывестиОбластьПропуска(ТабДокумент, ОблСтрока, КвоЭкземпляровНаСтраницу,КоличествоНапечатанныхЭкземпляров,КвоЭкземпляров);
			КонецЦикла;
			
			ОблДно = Макет.ПолучитьОбласть("Дно|Лист");
			ОблДно.Параметры.ВесПрописью = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать, Вес);
			
			Отбор = Новый Структура("СтруктурнаяЕдиница");
			Отбор.СтруктурнаяЕдиница = РезультатШапка.Склад;
			СрезПоследних   = РегистрыСведений.ОтветственныеЛица.СрезПоследних(РезультатШапка.Дата, Отбор);
			Если СрезПоследних.Количество() < 1 Тогда
			Иначе
				ОблДно.Параметры.ЗавСкладом = СрезПоследних[0].ФизическоеЛицо;
			КонецЕсли;
			
			ВывестиОбластьПропуска(ТабДокумент, ОблДно, КвоЭкземпляровНаСтраницу,КоличествоНапечатанныхЭкземпляров,КвоЭкземпляров);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
			
			НомерЭкземпляраДелНаДва = НомерЭкземпляраДелНаДва + 1;
			КоличествоНапечатанныхЭкземпляров = КоличествоНапечатанныхЭкземпляров + 2;
			
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		КонецЦикла;
		
	КонецЦикла;
		
	Возврат ТабДокумент;
    
 КонецФункции

Процедура ВывестиОбластьПропуска(ТабДокумент, Область, КвоЭкземпляровНаСтраницу, КоличествоНапечатанныхЭкземпляров, КвоЭкземпляров)
	
	Ном = 1;
	ОсталосьНапечатать = КвоЭкземпляров - КоличествоНапечатанныхЭкземпляров; 
	
	КвоЭкз = Мин(ОсталосьНапечатать,КвоЭкземпляровНаСтраницу);
	
	Пока Ном <= КвоЭкз Цикл
		Если (Цел(Ном/КвоЭкз) - Ном/КвоЭкз) <> 0 ИЛИ Ном = 1 Тогда
			ТабДокумент.Вывести(Область);
		Иначе 
			ТабДокумент.Присоединить(Область);
		КонецЕсли;				
		Ном = Ном + 1;
	КонецЦикла;	
		
КонецПроцедуры

Функция РазборФИО(Сотрудник)
	ФИО = глРазложить(Сотрудник," ", ".");
	Фамилия = ""; 
	Имя = ""; 
	Отчество = "";
	Если ФИО.Количество() > 0 Тогда
		Фамилия = Строка(ФИО.Получить(0));
		Если ФИО.Количество() > 1 Тогда
			Имя		= Строка(ФИО.Получить(1));
			Если ФИО.Количество() > 2 Тогда 
				// а вот отчество бывает и не из одного слова				
				Для Сч = 2 По ФИО.Количество()-1 Цикл
					Отчество = Отчество + Строка(ФИО.Получить(Сч)) + " ";
				КонецЦикла;
				Если ЗначениеЗаполнено(Отчество) Тогда  
					Отчество = Лев(Отчество,СтрДлина(Отчество)-1);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Фамилия+?(ЗначениеЗаполнено(Имя)," "+Лев(Имя,1)+"."+?(ЗначениеЗаполнено(Отчество),Лев(Отчество,1)+".",""),"")
КонецФункции

// Функция "расщепляет" строку на подстроки, используя заданный разделитель. 
// Разделитель может иметь любую длину. 
// Если в качестве разделителя задан пробел, рядом стоящие пробелы 
// считаются одним разделителем, а ведущие и хвостовые пробелы параметра Стр 
// игнорируются. 
Функция глРазложить(Знач Стр, Разделитель = ",", Разделитель2 = ",")     
	СЗ = Новый СписокЗначений;
	Если Разделитель = " " Или Разделитель = "." Тогда
		Стр = СокрЛП(Стр);
		Пока 1=1 Цикл
			Поз = Найти(Стр,Разделитель);
			Поз1 = Найти(Стр,Разделитель2);
			Если Поз=0 И Поз1=0 Тогда
    			СЗ.Добавить(Стр);
				Возврат СЗ;
			КонецЕсли;
			Если (Поз1 < Поз И Не Поз1 = 0) Или (Поз = 0 И Не Поз1 = 0) Тогда
    			СЗ.Добавить(Лев(Стр,Поз1-1));
    			Стр = СокрЛ(Сред(Стр,Поз1+1));
			Иначе	
    			СЗ.Добавить(Лев(Стр,Поз-1));
    			Стр = СокрЛ(Сред(Стр,Поз));
			КонецЕсли;	
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1=1 Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				СЗ.Добавить(Стр);
				Возврат СЗ;
			КонецЕсли;
			СЗ.Добавить(Лев(Стр,Поз-1));
			Стр = Сред(Стр,Поз+ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
КонецФункции                 

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Заполняет счета учета номенклатуры в табличной части документа
//
//  Параметры:
//  	Объект            - ДанныеФормыСтруктура
//  	ИмяТабличнойЧасти - Строка - имя табличной части
//
Процедура ЗаполнитьОстаткиВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура(
		"Организация, Владелец, ДоговорКонтрагента, 
		|Склад, ВидХранения, Урожай,
		|Дата");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);	
			
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		ЗаполнитьОстаткиВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти);
	КонецЦикла;

КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
//  Параметры:
//  	ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          	вид договора контрагента, признак комиссионной торговли и т.п.)
//  	СтрокаТабличнойЧасти  - строка табличной части документа
//
Процедура ЗаполнитьОстаткиВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти) Экспорт
	
	ДанныеОбъекта.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
	
	СтруктураПоОстаткам = ИНАГРО_Элеватор.ПроверкаНаличияЗерна(ДанныеОбъекта);	
	
	СтрокаТабличнойЧасти.Остаток = ?(СтруктураПоОстаткам.ВесОстаток > 0, СтруктураПоОстаткам.ВесОстаток, 0);
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;

	ВидОперации = Неопределено; 

	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидОперации");
	КонецЕсли;

	// Если документ копируется, то вид формы получаем из копируемого документа.
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначениеКопирования")
			И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Параметры.ЗначениеКопирования, "ВидОперации");
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
			Если Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда
				ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("Основание")
			И ЗначениеЗаполнено(Параметры.Основание) Тогда
			ВидОперации = ОпределитьВидОперацииПоДокументуОснованию(Параметры.Основание);
		КонецЕсли;
	КонецЕсли;  
	
	СтандартнаяОбработка = Ложь;
	ФормаИНАГРО_ПриказНаВывоз = ПолучитьСоответствиеВидовОперацийФормам();
	ВыбраннаяФорма = ФормаИНАГРО_ПриказНаВывоз[ВидОперации];
	Если ВыбраннаяФорма = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСоответствиеВидовОперацийФормам() Экспорт

	ФормаИНАГРО_ПриказНаВывоз = Новый Соответствие;
	
	ФормаИНАГРО_ПриказНаВывоз.Вставить(Перечисления.ИНАГРО_ВидыОперацийПриказ.Отгрузка,       "ФормаДокументаОбщая");
	ФормаИНАГРО_ПриказНаВывоз.Вставить(Перечисления.ИНАГРО_ВидыОперацийПриказ.Переоформление, "ФормаДокументаОбщая");
	ФормаИНАГРО_ПриказНаВывоз.Вставить(Перечисления.ИНАГРО_ВидыОперацийПриказ.Уничтожение,    "ФормаДокументаОбщая");
	
	Возврат ФормаИНАГРО_ПриказНаВывоз;

КонецФункции 

Функция ОпределитьВидОперацииПоДокументуОснованию(Основание) Экспорт

	Результат = Перечисления.ИНАГРО_ВидыОперацийПриказ.Отгрузка;

	Возврат Результат;

КонецФункции

Функция ПолучитьФиксированныйМассивВидовОпераций() Экспорт

	МассивВидовОпераций = Новый Массив;
	СписокВидовОпераций = Новый СписокЗначений;
	
	ЗначенияПеречисления = Метаданные.Перечисления.ИНАГРО_ВидыОперацийПриказ.ЗначенияПеречисления;
	Для Каждого ЗначениеПеречисления Из ЗначенияПеречисления Цикл
		ТекущийВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ[ЗначениеПеречисления.Имя];
		МассивВидовОпераций.Добавить(ТекущийВидОперации);
	КонецЦикла;
		
	Возврат Новый ФиксированныйМассив(МассивВидовОпераций);

КонецФункции

Процедура ЗаписатьВыбранноеКоличество(РезультатЗакрытия, ИдентификаторКоманды) Экспорт
	
	СтруктураСохранения = Новый Структура("ВыбранноеКоличество" + ИдентификаторКоманды, РезультатЗакрытия);		
	ХранилищеОбщихНастроек.Сохранить("ИНАГРО_ПриказНаВывоз_" + ИдентификаторКоманды, , СтруктураСохранения);
	
КонецПроцедуры

#КонецОбласти 

#КонецЕсли