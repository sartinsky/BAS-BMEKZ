#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда  

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	
	ИНАГРО_ЭлеваторЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения); 
	
	Если  ТипДанныхЗаполнения = Тип("Структура")
		И ДанныеЗаполнения.Свойство("ВидОперации") Тогда
		ВидОперации = ДанныеЗаполнения.ВидОперации;
	КонецЕсли;	
		
	ОтражатьВБухгалтерскомУчете = Истина;
	Мастер                      = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_ПриказНаВывоз_Мастер", "Элеватор");
	ТипЛабораторногоАнализа     = 1;	
				
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив; 	
	
	Если ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПриказ.Переоформление Тогда		
		МассивНепроверяемыхРеквизитов.Добавить("ВидПеревозки");					
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	 		
	Если ОбменДанными.Загрузка Тогда		
		Возврат;		
	КонецЕсли;
	
	Дата                         = НачалоДня(Дата);	
	ДатаОкончанияДействияПриказа = КонецДня(ДатаОкончанияДействияПриказа);
	
	ВремКод = Сред(Номер,5);
	Пока ((КодСимвола(Лев(ВремКод,1)) > КодСимвола("9")) ИЛИ (КодСимвола(Лев(ВремКод,1)) < КодСимвола("1"))) И (ВремКод<>"") Цикл
		ВремКод = Сред(ВремКод,2);
	КонецЦикла;	
	НомерПриказа                 = ВремКод;

	ХранилищеОбщихНастроек.Сохранить("ИНАГРО_ПриказНаВывоз_Мастер", "Элеватор", Мастер);
	
КонецПроцедуры 

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Перем Заголовок, СтруктураШапкиДокумента;
	Перем ТаблицаПоКультурам;
	
	//ИНАГРО_КонтрольПроцессов.КонтрольПоКонтрольномуВесу(Ссылка, Культуры, Отказ);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
		   
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияБПВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);	
		
	КонтрольПриказаВБизнесПроцессах = ИНАГРО_Элеватор.ПолучитьПараметрУчетаЭлеватора(Дата, "КонтрольПриказаВБизнесПроцессах", Ложь); 
	
	Если КонтрольПриказаВБизнесПроцессах Тогда   
		
		ПодготовитьТаблицуПоКультурам(СтруктураШапкиДокумента, ТаблицаПоКультурам, Отказ, Заголовок);
				
		Если НЕ Отказ Тогда
			
			Для Каждого СтрокаТаблицы Из ТаблицаПоКультурам Цикл  
				
				ВидТМЦ = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(СтрокаТаблицы.Номенклатура, "ВидТМЦ");
				
				Если НЕ ВидТМЦ = Перечисления.ИНАГРО_ВидыТМЦ.Кат3 Тогда  
					ИНАГРО_Элеватор.ДвиженияПоРегиструКонтрольПриказовНаВывоз(Движения, СтруктураШапкиДокумента, СтрокаТаблицы, "Приход"); 			
				КонецЕсли;
				
			КонецЦикла;	
			
		КонецЕсли;
		
	КонецЕсли;	

	ПроведениеСервер.ПодготовитьНаборыЗаписейКЗаписиДвижений(ЭтотОбъект); 	

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();	
		
КонецПроцедуры

#КонецОбласти

#Область Проведение

// Процедура формирует структуру шапки документа и дополнительных полей.
//
Процедура ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента) Экспорт

	// Дерево значений, содержащее имена необходимых полей в запросе по шапке.
	Перем ДеревоПолейЗапросаПоШапке;	
	
	СтруктураШапкиДокумента   = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	// Заполним по шапке документа дерево параметров, нужных при проведении.
	ДеревоПолейЗапросаПоШапке = ОбщегоНазначенияРед12.СформироватьДеревоПолейЗапросаПоШапке();	
	
КонецПроцедуры

Процедура ПодготовитьТаблицуПоКультурам(СтруктураШапкиДокумента, ТаблицаПоКультурам, Отказ, Заголовок);
	
	СтруктураПолей = Новый Структура();	
	СтруктураПолей.Вставить("Номенклатура",  "Номенклатура"); 	
	СтруктураПолей.Вставить("ФизическийВес", "ФизическийВес");
	СтруктураПолей.Вставить("ЗачетныйВес",   "ЗачетныйВес");
	
	РезультатЗапросаПоКультурам = ОбщегоНазначенияРед12.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Культуры", СтруктураПолей);
	
	ТаблицаПоКультурам = РезультатЗапросаПоКультурам.Выгрузить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции	

Процедура ЗаполнитьПоДокументуОснованию(Основание) Экспорт

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ИНАГРО_АктРасчет310") Тогда
		
		ДокументОснование                = Основание.Ссылка;
		Организация                      = Основание.Организация;
		Владелец                         = Основание.Владелец;		
		ДоговорКонтрагента               = Основание.ДоговорКонтрагента;		
		Склад                            = Основание.Склад;		
		ВидХранения                      = Основание.ВидХранения;		
		Урожай                           = Основание.Урожай;
		ОтражатьВБухгалтерскомУчете      = Основание.ОтражатьВБухгалтерскомУчете;		
		
		НоваяСтрока = Культуры.Добавить();
		НоваяСтрока.Номенклатура       = Основание.Номенклатура;
		НоваяСтрока.ЕдиницаИзмерения   = НоваяСтрока.Номенклатура.БазоваяЕдиницаИзмерения;
		НоваяСтрока.ФизическийВес      = Основание.ФизическийВес8;
		НоваяСтрока.ЛабораторныйАнализ = Основание.ЛабораторныйАнализ;
		НоваяСтрока.НомерАнализа       = Основание.НомерАнализа;
		НоваяСтрока.Влажность          = Основание.Влажность8;
		НоваяСтрока.СорнаяПримесь      = Основание.СорнаяПримесь8;
		НоваяСтрока.ЗерноваяПримесь    = Основание.ЗерноваяПримесь8;
		НоваяСтрока.ЗачетныйВес        = ИНАГРО_Элеватор.ЗачетныйВесПриПроведении(ПолучитьПараметрыДляРасчетаЗачетногоВеса(НоваяСтрока));
		НоваяСтрока.Сумма              = НоваяСтрока.ФизическийВес * НоваяСтрока.Цена;
		
		ДанныеОбъекта = Новый Структура(
			"Организация, Владелец, ДоговорКонтрагента, 
			|Склад, ВидХранения, Урожай,
			|Дата");
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтотОбъект);	
	
		Документы.ИНАГРО_ПриказНаВывоз.ЗаполнитьОстаткиВСтрокеТабличнойЧасти(ДанныеОбъекта, НоваяСтрока);		
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") Тогда
		
		ДокументОснование                = Основание.Ссылка;
		Организация                      = Основание.Организация;
		Владелец                         = Основание.Контрагент;		
		ДоговорКонтрагента               = Основание.ДоговорКонтрагента;		
		Склад                            = Основание.Склад;		
		ПунктНазначения                  = Основание.АдресДоставки;
		Комментарий                      = Основание.Комментарий;
		
		Для Каждого ТекСтрокаТовары Из Основание.Товары Цикл
			
			НоваяСтрока = Культуры.Добавить();
			НоваяСтрока.Номенклатура     = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовары.ЕдиницаИзмерения;
			НоваяСтрока.ФизическийВес    = ТекСтрокаТовары.Количество;
			НоваяСтрока.ЗачетныйВес      = ТекСтрокаТовары.Количество;
			НоваяСтрока.Цена             = ТекСтрокаТовары.Цена;  
			НоваяСтрока.Сумма            = ТекСтрокаТовары.Сумма;
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ДокументОснование                = Основание.Ссылка;
		Организация                      = Основание.Организация;
		Владелец                         = Основание.Контрагент;
		ДоговорКонтрагента               = Основание.ДоговорКонтрагента;		
		Склад                            = Основание.Склад;		
		ПунктНазначения                  = Основание.АдресДоставки;
		Комментарий                      = Основание.Комментарий;		
		ДоверенностьДата                 = Основание.ДоверенностьДата;                     
		ДоверенностьНомер                = Основание.ДоверенностьНомер;
		ДоверенностьСерия                = Основание.ДоверенностьСерия;  
		ДоверенностьЧерез                = Основание.Получил;
		ДокументПодтверждающийПолномочия = Основание.ДокументПодтверждающийПолномочия;
		
		Для Каждого ТекСтрокаТовары Из Основание.Товары Цикл
			
			НоваяСтрока = Культуры.Добавить();
			НоваяСтрока.Номенклатура     = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовары.ЕдиницаИзмерения;
			НоваяСтрока.ФизическийВес    = ТекСтрокаТовары.Количество;
			НоваяСтрока.ЗачетныйВес      = ТекСтрокаТовары.Количество;
			НоваяСтрока.Цена             = ТекСтрокаТовары.Цена;  
			НоваяСтрока.Сумма            = ТекСтрокаТовары.Сумма;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПараметрыДляРасчетаЗачетногоВеса(СтрокаТабличнойЧасти)
	
	ПараметрыДляРасчетаЗачетногоВеса = Новый Структура(
		"Ссылка, Дата, Организация,
		|Владелец, ДоговорКонтрагента, Номенклатура,
		|Склад, Влажность, СорнаяПримесь,
		|ФизическийВес, ЗачетныйВес");
	ЗаполнитьЗначенияСвойств(ПараметрыДляРасчетаЗачетногоВеса, ЭтотОбъект);
	ЗаполнитьЗначенияСвойств(ПараметрыДляРасчетаЗачетногоВеса, СтрокаТабличнойЧасти);
	
	Возврат ПараметрыДляРасчетаЗачетногоВеса; 

КонецФункции

#КонецОбласти

#КонецЕсли