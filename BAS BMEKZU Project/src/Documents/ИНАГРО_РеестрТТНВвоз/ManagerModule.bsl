#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// ЗХС3
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗХС3";
	КомандаПечати.Представление = НСтр("ru='ЗХС-3';uk='ЗХС-3'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";

    // ЗХС4
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗХС4";
	КомандаПечати.Представление = НСтр("ru='ЗХС-4';uk='ЗХС-4'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
    
    // Расчет
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Расчет";
	КомандаПечати.Представление = НСтр("ru='Расчет по владельцам';uk='Розрахунок по власникам'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
    
    // ЗХС3ПоКультурам
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗХС3ПоКультурам";
	КомандаПечати.Представление = НСтр("ru='ЗХС-3 по культурам';uk='ЗХС-3 по культурам'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Реестр товарно-транспортных накладных (ввоз)""';uk='Реєстр документів ""Реєстр товарно-транспортних накладних (ввезення)""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
	// ЗХС3. Форма 2021 року
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗХС3_2021";
	КомандаПечати.Представление = НСтр("ru='ЗХС-3 (2021)';uk='ЗХС-3 (2021)'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	
	// ЗХС4. Форма 2021 року
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗХС4_2021";
	КомандаПечати.Представление = НСтр("ru='ЗХС-4 (2021)';uk='ЗХС-4 (2021)'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";

    
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗХС3") Тогда
        
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС3", НСтр("ru='ЗХС3';uk='ЗХС3'"), 
            ПечатьЗХС3(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_ЗХС3", , Истина);
			
    ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗХС3_2021") Тогда
        
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС3_2021", НСтр("ru='ЗХС3 (2021)';uk='ЗХС3 (2021)'"), 
            ПечатьЗХС3_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_ЗХС3_2021", , Истина);
             
    ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗХС4") Тогда
        
         УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС4",НСтр("ru='ЗХС4';uk='ЗХС4'"), 
            ПечатьЗХС4(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_ЗХС4", , Истина);
			
    ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗХС4_2021") Тогда
        
         УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС4_2021",НСтр("ru='ЗХС4 (2021)';uk='ЗХС4 (2021)'"), 
            ПечатьЗХС4_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_ЗХС4_2021", , Истина);
            
    ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Расчет") Тогда
        
         УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Расчет",НСтр("ru='Расчет';uk='Розрахунок'"), 
            ПечатьРасчет(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Расчет", , Истина);
            
    ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗХС3ПоКультурам") Тогда
        
           ПечатьПоКультурам(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода);
            
    КонецЕсли;
	
	
КонецПроцедуры

Процедура ПечатьПоКультурам(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода)
		
        СтруктураПечати = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_РеестрТТНВвоз_ЗХС3ПоКультурам");
        
        Если СтруктураПечати.ВыбраннаяПечатнаяФорма = "Соя" Тогда
            
            УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС3ПоКультурам",НСтр("ru='Соя';uk='Соя'"), 
            ПечатьСоя(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Соя", , Истина);
            
        ИначеЕсли СтруктураПечати.ВыбраннаяПечатнаяФорма = "Подсолнечник" Тогда
            
            УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС3ПоКультурам",НСтр("ru='Подсолнечник';uk='Соняшник'"), 
            ПечатьСоняшник(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Подсолнечник", , Истина);
            
        ИначеЕсли СтруктураПечати.ВыбраннаяПечатнаяФорма = "Рапс" Тогда
            
            УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС3ПоКультурам",НСтр("ru = 'Рапс';uk = 'Ріпак'"), 
            ПечатьРапса(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Рапс", , Истина);
            
        ИначеЕсли СтруктураПечати.ВыбраннаяПечатнаяФорма = "Кукуруза" Тогда
            
            УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС3ПоКультурам",НСтр("ru = 'Кукуруза'; uk = 'Кукурудза'"), 
            ПечатьКукуруза(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Кукуруза", , Истина);
            
        ИначеЕсли СтруктураПечати.ВыбраннаяПечатнаяФорма = "Ячмень" Тогда
            
            УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС3ПоКультурам",НСтр("ru = 'Ячмень';   uk = 'Ячмінь'"), 
            ПечатьЯчмень(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Ячмень", , Истина);
            
        ИначеЕсли СтруктураПечати.ВыбраннаяПечатнаяФорма = "Пшеница" Тогда
            
            УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС3ПоКультурам",НСтр("ru = 'Пшеница';  uk = 'Пшениця'"), 
            ПечатьПшеница(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Пшеница", , Истина);
            
        ИначеЕсли СтруктураПечати.ВыбраннаяПечатнаяФорма = "Горчица" Тогда
            
            УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС3ПоКультурам",НСтр("ru = 'Пшеница';  uk = 'Пшениця'"), 
            ПечатьГорчица(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Горчица", , Истина);
            
        ИначеЕсли СтруктураПечати.ВыбраннаяПечатнаяФорма = "Просо" Тогда
            
            УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС3ПоКультурам",НСтр("ru = 'Просо';  uk = 'Просо'"), 
            ПечатьПросо(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Просо", , Истина);
            
        ИначеЕсли СтруктураПечати.ВыбраннаяПечатнаяФорма = "Кориандр" Тогда
            
            УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС3ПоКультурам",НСтр("ru = 'Кориандр';  uk = 'Коріандр'"), 
            ПечатьКориандр(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Кориандр", , Истина);
            
        ИначеЕсли СтруктураПечати.ВыбраннаяПечатнаяФорма = "Тмин" Тогда
            
            УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС3ПоКультурам",НСтр("ru = 'Тмин';  uk = 'Кмин'"), 
            ПечатьТмин(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Тмин", , Истина);
            
        ИначеЕсли СтруктураПечати.ВыбраннаяПечатнаяФорма = "Общий" Тогда
            
            УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗХС3ПоКультурам",НСтр("ru = 'Общий';  uk = 'Загальний'"), 
            ПечатьОбщий(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Общий", , Истина);
           
        КонецЕсли;
        
КонецПроцедуры
	
Функция ПечатьЗХС3(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ; 
    
    ЛабораторныйАнализ = Новый Запрос;
    ЛабораторныйАнализ.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.ЗХС3";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_ЗХС3");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        СписокТТНРезультат = СписокТТН.Выполнить().Выгрузить();
        
        ЛабораторныйАнализ.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТекущийЛабораторныйАнализ = ЛабораторныйАнализ.Выполнить().Выгрузить();
        
        Руководители    = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
        НомерДок        = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
        
        Шапка = Макет.ПолучитьОбласть("Шапка");	
        Шапка.Параметры.Фирма       = РезультатШапка.Организация.НаименованиеПолное;
        Шапка.Параметры.ТекДата     = ТекущаяДата();
        Шапка.Параметры.НомерДок    = НомерДок;
        Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
        Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
        ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);
        Шапка.Параметры.ТМЦ         = РезультатШапка.Номенклатура.НаименованиеПолное;
        Шапка.Параметры.Склад       = РезультатШапка.Склад;
        
        Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
            Шапка.Параметры.Регион =  РезультатШапка.ПолеТок.Регион;
        КонецЕсли;
        
        Попытка
            НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
        Исключение
            НомерСК = "";
        КонецПопытки;	
        Шапка.Параметры.НомерСК = НомерСК;
        
        ТабДокумент.Вывести(Шапка);
        
        ОблСтрока = Макет.ПолучитьОбласть("Строка");
        Инд = 0;
        Пока СписокТТНРезультат.Количество() > Инд Цикл
            ОблСтрока.Параметры.НомерТТН1 = СписокТТНРезультат[Инд].НомерТТН;
            ОблСтрока.Параметры.Вес1 = СписокТТНРезультат[Инд].Вес;
            ОблСтрока.Параметры.НомерАвто1=?(СписокТТНРезультат[Инд].ТТН.НомерТранспорта<>"",СписокТТНРезультат[Инд].ТТН.НомерТранспорта,"");
            Инд = Инд + 1;
            Если СписокТТНРезультат.Количество() > Инд Тогда
                ОблСтрока.Параметры.НомерТТН2 = СписокТТНРезультат[Инд].НомерТТН;
                ОблСтрока.Параметры.Вес2 = СписокТТНРезультат[Инд].Вес;
                ОблСтрока.Параметры.НомерАвто2=?(СписокТТНРезультат[Инд].ТТН.НомерТранспорта<>"",СписокТТНРезультат[Инд].ТТН.НомерТранспорта,"");
                Инд = Инд + 1;
            КонецЕсли;
            ТабДокумент.Вывести(ОблСтрока);
            ОблСтрока.Параметры.НомерТТН1   = "";
            ОблСтрока.Параметры.Вес1        = "";
            ОблСтрока.Параметры.НомерТТН2   = "";
            ОблСтрока.Параметры.Вес2        = "";
            ОблСтрока.Параметры.НомерАвто1  = "";
            ОблСтрока.Параметры.НомерАвто2  = "";
        КонецЦикла;
        
        ОблИтог=Макет.ПолучитьОбласть("Итог");
        ОблИтог.Параметры.Всего=РезультатШапка.ОбщийФизическийВес;
        ТабДокумент.Вывести(ОблИтог);
        
        ОблШапкаДоставки=Макет.ПолучитьОбласть("ШапкаДоставки");
        ТабДокумент.Вывести(ОблШапкаДоставки);
        
        ОблСтрокаДоставки=Макет.ПолучитьОбласть("СтрокаДоставки");
        ОблСтрокаДоставки.Параметры.КоличествоДоставки  = РезультатШапка.КоличествоДоставки;
        ОблСтрокаДоставки.Параметры.ЦенаДоставки        = РезультатШапка.ЦенаДоставки;
        ОблСтрокаДоставки.Параметры.СтоимостьДоставки   = РезультатШапка.СтоимостьДоставки;
        ТабДокумент.Вывести(ОблСтрокаДоставки);
                
        ОблДно = Макет.ПолучитьОбласть("Дно");
        ОблДно.Параметры.ФизВес         =  РезультатШапка.ОбщийФизическийВес;
        ОблДно.Параметры.КолТТН         = СписокТТНРезультат.Количество();
        ОблДно.Параметры.ФизВесПропись  = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,РезультатШапка.ОбщийФизическийВес);
        ОблДно.Параметры.ЗавСкладом     = ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
        ТабДокумент.Вывести(ОблДно);
        ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        
        ОблРаздел2 = Макет.ПолучитьОбласть("Раздел2");
        ИндексЗерновойПримеси   = 1;
        ИндексСорнойПримеси     = 1;
        СтрДругие               = "";
        
		СтруктураЛабАнализа = Новый Структура;
		
		Для Каждого Стр Из ТекущийЛабораторныйАнализ Цикл
			
			ЗначениеХарактеристики = Стр.Значение;
			
			Если ПустаяСтрока(Стр.Характеристика.ИмяПредопределенныхДанных) Тогда
				СтрДругие = "" + СтрДругие + "" + Стр.Характеристика + " - " + Стр.Значение + " " + Стр.ЕдиницаИзмерения + "; ";
				Продолжить;
			КонецЕсли;
			
			СтруктураЛабАнализа.Вставить(Стр.Характеристика.ИмяПредопределенныхДанных, СокрЛП(ЗначениеХарактеристики));
			
		КонецЦикла;
		
		СтруктураЛабАнализа.Вставить("СтрДругие", СтрДругие);
        
        ОблРаздел2.Параметры.Заполнить(СтруктураЛабАнализа);
        
        ОблРаздел2.Параметры.НомерАнализа   =РезультатШапка.НомерАнализа;
        ОблРаздел2.Параметры.ВесОбразцов    = РезультатШапка.ВесОбразцов;
        ОблРаздел2.Параметры.НачальникВТЛ   = Руководители.НачальникВТЛ;
        ТабДокумент.Вывести(ОблРаздел2);
        
        ТекущийОбъект = Новый Структура("Номенклатура, Дата, Организация,
                                        | Владелец, ДоговорКонтрагента, Склад, Влажность,
                                        | СорнаяПримесь, НатСкидкаВлажность, НатСкидкаСорнаяПримесь");
        ЗаполнитьЗначенияСвойств(ТекущийОбъект,РезультатШапка);

        ОблРаздел3 = Макет.ПолучитьОбласть("Раздел3");
        ОблРаздел3.Параметры.ОбщийФизВес            = РезультатШапка.ОбщийФизическийВес;
        ОблРаздел3.Параметры.ЗачетныйВес            = РезультатШапка.ЗачетныйВес;
        ОблРаздел3.Параметры.ПроцентЗачВесса        = РассчитатьПроцентЗачетногоВеса(ТекущийОбъект);
        ОблРаздел3.Параметры.СуммаЗаСушкуИОчистку   = РезультатШапка.СтоимостьОчистки + РезультатШапка.СтоимостьСушки;
        ОблРаздел3.Параметры.СуммаЗаДоставку        = РезультатШапка.СтоимостьДоставки;
        ОблРаздел3.Параметры.СоставительРеестра     = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
        ОблРаздел3.Параметры.РеестрПроверил         = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
        ТабДокумент.Вывести(ОблРаздел3);
         
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьЗХС3_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ; 
    
    ЛабораторныйАнализ = Новый Запрос;
    ЛабораторныйАнализ.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.ЗХС3_2021";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_ЗХС3_2021");
    
    // печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = "uk";
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        СписокТТНРезультат = СписокТТН.Выполнить().Выгрузить();
        
        ЛабораторныйАнализ.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТекущийЛабораторныйАнализ = ЛабораторныйАнализ.Выполнить().Выгрузить();
        
        Руководители    = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизацииИмяФамилия(РезультатШапка.Организация,РезультатШапка.Дата);
        НомерДок        = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
        
        Шапка = Макет.ПолучитьОбласть("Шапка");	
        Шапка.Параметры.Организация = РезультатШапка.Организация.НаименованиеПолное;
        Шапка.Параметры.ЕДРПОУ      = РезультатШапка.Организация.КодПоЕДРПОУ;
        Шапка.Параметры.ТекДата     = ТекущаяДата();
        Шапка.Параметры.НомерДок    = НомерДок;
        Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
        Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
        ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);
        Шапка.Параметры.ТМЦ         = РезультатШапка.Номенклатура.НаименованиеПолное;
		
		Шапка.Параметры.Регион = БухгалтерскийУчетПереопределяемый.ПолучитьАдресИзКонтактнойИнформации(РезультатШапка.Владелец, "Фактический");

        
		//Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
		//    Шапка.Параметры.Регион =  РезультатШапка.ПолеТок.Регион;
		//КонецЕсли;
        
        Попытка
            НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
        Исключение
            НомерСК = "";
        КонецПопытки;	
        Шапка.Параметры.НомерСК = НомерСК;
        
        ТабДокумент.Вывести(Шапка);
        
        ОблСтрока = Макет.ПолучитьОбласть("Строка");
        Инд = 0;
        Пока СписокТТНРезультат.Количество() > Инд Цикл
            ОблСтрока.Параметры.НомерТТН1 = СписокТТНРезультат[Инд].НомерТТН;
            ОблСтрока.Параметры.Вес1 = СписокТТНРезультат[Инд].Вес;
            ОблСтрока.Параметры.НомерАвто1=?(СписокТТНРезультат[Инд].ТТН.НомерТранспорта<>"",СписокТТНРезультат[Инд].ТТН.НомерТранспорта,"");
            Инд = Инд + 1;
            Если СписокТТНРезультат.Количество() > Инд Тогда
                ОблСтрока.Параметры.НомерТТН2 = СписокТТНРезультат[Инд].НомерТТН;
                ОблСтрока.Параметры.Вес2 = СписокТТНРезультат[Инд].Вес;
                ОблСтрока.Параметры.НомерАвто2=?(СписокТТНРезультат[Инд].ТТН.НомерТранспорта<>"",СписокТТНРезультат[Инд].ТТН.НомерТранспорта,"");
                Инд = Инд + 1;
            КонецЕсли;
            ТабДокумент.Вывести(ОблСтрока);
            ОблСтрока.Параметры.НомерТТН1   = "";
            ОблСтрока.Параметры.Вес1        = "";
            ОблСтрока.Параметры.НомерТТН2   = "";
            ОблСтрока.Параметры.Вес2        = "";
            ОблСтрока.Параметры.НомерАвто1  = "";
            ОблСтрока.Параметры.НомерАвто2  = "";
        КонецЦикла;
        
        ОблИтог=Макет.ПолучитьОбласть("Итог");
        ОблИтог.Параметры.ВсегоВес1=РезультатШапка.ОбщийФизическийВес;   // Рабить на Вес 1 и Вес 2
        ТабДокумент.Вывести(ОблИтог);
        
        ОблДно = Макет.ПолучитьОбласть("Дно");
		//ОблДно.Параметры.ФизВес         =  РезультатШапка.ОбщийФизическийВес;
        ОблДно.Параметры.КолТТН         = СписокТТНРезультат.Количество();
        ОблДно.Параметры.ФизВесПропись  = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,РезультатШапка.ОбщийФизическийВес);
        ОблДно.Параметры.ЗавСкладом     = ИНАГРО_Элеватор.ОтветственныеЛицаИмяФамилия(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
        ТабДокумент.Вывести(ОблДно);
        ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        
        ОблРаздел2 = Макет.ПолучитьОбласть("Раздел2");
        ИндексЗерновойПримеси   = 1;
        ИндексСорнойПримеси     = 1;
        СтрДругие               = "";
        
		СтруктураЛабАнализа = Новый Структура;
		
		Для Каждого Стр Из ТекущийЛабораторныйАнализ Цикл
			
			ЗначениеХарактеристики = Стр.Значение;
			
			Если ПустаяСтрока(Стр.Характеристика.ИмяПредопределенныхДанных) Тогда
				СтрДругие = "" + СтрДругие + "" + Стр.Характеристика + " - " + Стр.Значение + " " + Стр.ЕдиницаИзмерения + "; ";
				Продолжить;
			КонецЕсли;
			
			СтруктураЛабАнализа.Вставить(Стр.Характеристика.ИмяПредопределенныхДанных, СокрЛП(ЗначениеХарактеристики));
			
		КонецЦикла;
		
		СтруктураЛабАнализа.Вставить("СтрДругие", СтрДругие);
        
        ОблРаздел2.Параметры.Заполнить(СтруктураЛабАнализа);
        
        ОблРаздел2.Параметры.НомерАнализа   =РезультатШапка.НомерАнализа;
        ОблРаздел2.Параметры.ВесОбразцов    = РезультатШапка.ВесОбразцов;
        ОблРаздел2.Параметры.НачальникВТЛ   = Руководители.НачальникВТЛ;
        ТабДокумент.Вывести(ОблРаздел2);
        
        ТекущийОбъект = Новый Структура("Номенклатура, Дата, Организация,
                                        | Владелец, ДоговорКонтрагента, Склад, Влажность,
                                        | СорнаяПримесь, НатСкидкаВлажность, НатСкидкаСорнаяПримесь");
        ЗаполнитьЗначенияСвойств(ТекущийОбъект,РезультатШапка);

        ОблРаздел3 = Макет.ПолучитьОбласть("Раздел3");
        ОблРаздел3.Параметры.ОбщийФизВес            = РезультатШапка.ОбщийФизическийВес / 100;
        ОблРаздел3.Параметры.ЗачетныйВес            = РезультатШапка.ЗачетныйВес / 100;
        ОблРаздел3.Параметры.ПроцентЗачВесса        = РассчитатьПроцентЗачетногоВеса(ТекущийОбъект);
        ОблРаздел3.Параметры.СуммаЗаСушкуИОчистку   = РезультатШапка.СтоимостьОчистки + РезультатШапка.СтоимостьСушки;
        ОблРаздел3.Параметры.СуммаЗаДоставку        = РезультатШапка.СтоимостьДоставки;
		
		АвторДляПечати = "";
		ФИОАвтор = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Ссылка.Дата, Новый Структура("ФизическоеЛицо", ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо));
		Если ФИОАвтор.Количество() > 0 Тогда
			АвторДляПечати = СокрЛП(ФИОАвтор[0].Имя)
											 + " "
											 + ВРег(СокрЛП(ФИОАвтор[0].Фамилия)); 
		Иначе
			АвторДляПечати = "" + ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;									 
		КонецЕсли;
		
        ОблРаздел3.Параметры.СоставительРеестра     = АвторДляПечати;
        ОблРаздел3.Параметры.РеестрПроверил         = АвторДляПечати;
        ТабДокумент.Вывести(ОблРаздел3);
         
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции


Функция ПечатьЗХС4(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
   УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ; 
    
    ЛабораторныйАнализ = Новый Запрос;
    ЛабораторныйАнализ.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.ЗХС4";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_ЗХС4");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        СписокТТНРезультат = СписокТТН.Выполнить().Выгрузить();
        
        ЛабораторныйАнализ.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ЛабораторныйАнализРезультаты = ЛабораторныйАнализ.Выполнить().Выгрузить();
        
        Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
        
        Шапка = Макет.ПолучитьОбласть("Шапка");	
        Шапка.Параметры.Фирма       = РезультатШапка.Организация.НаименованиеПолное;
        Шапка.Параметры.ЕДРПОУ      = РезультатШапка.Организация.КодПоЕДРПОУ;
        Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
        Шапка.Параметры.Владелец    = РезультатШапка.Владелец.НаименованиеПолное;
        
        Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
            Шапка.Параметры.Регион = РезультатШапка.ПолеТок.Регион;
        КонецЕсли;
        Шапка.Параметры.ТМЦ = РезультатШапка.Номенклатура.НаименованиеПолное;
        
        Попытка
            НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
        Исключение
            НомерСК = "";
        КонецПопытки;
        
        ВесОбразцов = 0;
        Шапка.Параметры.НомерСК = НомерСК;
        Если ЗначениеЗаполнено(РезультатШапка.ЛабораторныйАнализ) Тогда
            Шапка.Параметры.Сорт = РезультатШапка.ЛабораторныйАнализ.Сорт;
            Шапка.Параметры.Клас = РезультатШапка.ЛабораторныйАнализ.Класс;
            Для Каждого СтрАнал из ЛабораторныйАнализРезультаты Цикл
                Если СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Тип Тогда
                    Шапка.Параметры.Тип = СтрАнал.Значение;
                    Прервать;
                КонецЕсли;	
            КонецЦикла;	
            ВесОбразцов = РезультатШапка.ЛабораторныйАнализ.ВесОбразцов;
        КонецЕсли;	
        ТабДокумент.Вывести(Шапка);
        ТабТТН = Новый ТаблицаЗначений;
        ТабТТН.Колонки.Добавить("Силос");
        ТабТТН.Колонки.Добавить("ФизВес");
        ТабТТН.Колонки.Добавить("ЦПВол");
        ТабТТН.Колонки.Добавить("ЦПСм");
        
        ОблСтрока = Макет.ПолучитьОбласть("Строка");
        ИтФизВес = 0; ИтЦПВол = 0; ИтЦПСм = 0; ИтЦПЗер = 0; ИтЦПНат = 0;
        Для Каждого СтрСпискаТТН из СписокТТНРезультат Цикл
            ЛА_ = Неопределено;
            ОблСтрока.Параметры.НомерТТН = СтрСпискаТТН.НомерТТН;
            ОблСтрока.Параметры.ФизВес = СтрСпискаТТН.Вес;
            ИтФизВес = ИтФизВес + СтрСпискаТТН.Вес;
            Если ЗначениеЗаполнено(СтрСпискаТТН.ТТН) Тогда
                ОблСтрока.Параметры.Силос = СтрСпискаТТН.ТТН.Силос;
                Если ЗначениеЗаполнено(СтрСпискаТТН.ТТН.ЛабораторныйАнализ) Тогда
                    ЛА_ = СтрСпискаТТН.ТТН.ЛабораторныйАнализ;
                КонецЕсли;	 
            Иначе
                ОблСтрока.Параметры.Силос = РезультатШапка.Силос;
            КонецЕсли;
            Если ЛА_ = Неопределено Тогда
                Если ЗначениеЗаполнено(РезультатШапка.ЛабораторныйАнализ) Тогда 
                    ЛА_ = РезультатШапка.ЛабораторныйАнализ; 
                КонецЕсли;	
            КонецЕсли;	
            Если Не ЛА_ = Неопределено Тогда
                СтрДругие = ""; 
                ОблСтрока.Параметры.ЦПВол   = 0;
                ОблСтрока.Параметры.ЦПСм    = 0;
                ОблСтрока.Параметры.ЦПЗер   = 0;
                Для Каждого СтрАнал из ЛабораторныйАнализРезультаты Цикл
                    Если СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Влажность Тогда
                        ОблСтрока.Параметры.ПрВолог = СтрАнал.Значение;
                        ОблСтрока.Параметры.ЦПВол = Окр(СтрСпискаТТН.Вес*СтрАнал.Значение/100,0);
                        ИтЦПВол = ИтЦПВол + ОблСтрока.Параметры.ЦПВол;
                    ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.СорнаяПримесь Тогда
                        ОблСтрока.Параметры.ПрСм = СтрАнал.Значение;
                        ОблСтрока.Параметры.ЦПСм = Окр(СтрСпискаТТН.Вес*СтрАнал.Значение/100,0);
                        ИтЦПСм = ИтЦПСм + ОблСтрока.Параметры.ЦПСм;
                    ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЗерноваяПримесь Тогда
                        ОблСтрока.Параметры.ПрЗер = СтрАнал.Значение;
                        ОблСтрока.Параметры.ЦПЗер = Окр(СтрСпискаТТН.Вес*СтрАнал.Значение/100,0);
                        ИтЦПЗер = ИтЦПЗер + ОблСтрока.Параметры.ЦПЗер;
                    ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Натура Тогда
                        ОблСтрока.Параметры.ПрНат = СтрАнал.Значение;
                        ОблСтрока.Параметры.ЦПНат = Окр(СтрСпискаТТН.Вес*СтрАнал.Значение/100,0);
                        ИтЦПНат = ИтЦПНат + ОблСтрока.Параметры.ЦПНат;
                    ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда
                        ОблСтрока.Параметры.ПрЗар = СтрАнал.Значение;
                    Иначе
                        СтрДругие = "" + СтрДругие + "" + СтрАнал.Характеристика.КраткоеНаименование + " - " + СтрАнал.Значение;
                    КонецЕсли;	
                КонецЦикла;	
                ОблСтрока.Параметры.ПрДруг = СтрДругие;
            КонецЕсли;	
            СтрокаТабТТН        = ТабТТН.Добавить();
            СтрокаТабТТН.Силос  = ОблСтрока.Параметры.Силос;
            СтрокаТабТТН.ФизВес = ОблСтрока.Параметры.ФизВес;
            СтрокаТабТТН.ЦПВол  = ОблСтрока.Параметры.ЦПВол;
            СтрокаТабТТН.ЦПСм   = ОблСтрока.Параметры.ЦПСм;
            ТабДокумент.Вывести(ОблСтрока);
        КонецЦикла;
        
        ОблИтог=Макет.ПолучитьОбласть("Итог");
        ОблИтог.Параметры.ИтФизВес = ИтФизВес;
        ОблИтог.Параметры.ИтЦПВол = ИтЦПВол;
        Если ИтЦПВол <> 0 Тогда
            ОблИтог.Параметры.ИтПрВолог = Окр(ИтЦПВол/ИтФизВес*100,2);
        Иначе
            ОблИтог.Параметры.ИтПрВолог = 0;
        КонецЕсли;	
        ОблИтог.Параметры.ИтЦПСм = ИтЦПСм;
        Если ИтЦПСм <> 0 Тогда
            ОблИтог.Параметры.ИтПрСм = Окр(ИтЦПСм/ИтФизВес*100,2);
        Иначе
            ОблИтог.Параметры.ИтПрСм = 0;
        КонецЕсли;	
        ОблИтог.Параметры.ИтЦПЗер = ИтЦПЗер;
        Если ИтЦПЗер <> 0 Тогда
            ОблИтог.Параметры.ИтПрЗер = Окр(ИтЦПЗер/ИтФизВес*100,2);
        Иначе
            ОблИтог.Параметры.ИтПрЗер = 0;
        КонецЕсли;	
        ОблИтог.Параметры.ИтЦПНат = ИтЦПНат;
        Если ИтЦПНат <> 0 Тогда
            ОблИтог.Параметры.ИтПрНат = Окр(ИтЦПНат/ИтФизВес*100,2);
        Иначе
            ОблИтог.Параметры.ИтПрНат = 0;
        КонецЕсли;
        
        ОблИтог.Параметры.ВесОбразцов   = ВесОбразцов;
        ОблИтог.Параметры.КвоНакл       = СписокТТНРезультат.Количество();
        ОблИтог.Параметры.НачальникВТЛ  = Руководители.НачальникВТЛ;
        
        Если ЗначениеЗаполнено(РезультатШапка.ЛабораторныйАнализ) Тогда 
            СтрДругие = ""; 
            Для Каждого СтрАнал из ЛабораторныйАнализРезультаты Цикл
                Если СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Влажность Тогда
                    Продолжить;
                ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.СорнаяПримесь Тогда
                    Продолжить;
                ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЗерноваяПримесь Тогда
                    Продолжить;
                ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Натура Тогда
                    Продолжить;
                ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда
                    ОблИтог.Параметры.ИтПрЗар = СтрАнал.Значение;
                Иначе
                    СтрДругие = "" + СтрДругие + "" + СтрАнал.Характеристика.КраткоеНаименование + " - " + СтрАнал.Значение;
                КонецЕсли;	
            КонецЦикла;	
            ОблИтог.Параметры.ИтПрДруг = СтрДругие;
        КонецЕсли;
        
        ТабДокумент.Вывести(ОблИтог);
        ТабДокумент.ВывестиВертикальныйРазделительСтраниц();
        ОблРаздел2 = Макет.ПолучитьОбласть("Раздел2");
        ТабДокумент.Вывести(ОблРаздел2);
        ОблСтрока = Макет.ПолучитьОбласть("Строка2");
        Для каждого СтрТабТТН из ТабТТН Цикл
            ОблСтрока.Параметры.Заполнить(СтрТабТТН);
            ТабДокумент.Вывести(ОблСтрока);
        КонецЦикла;
        
        ОблИтог = Макет.ПолучитьОбласть("Итог2");
        ОблИтог.Параметры.Сум_3_5_7 = ИтФизВес + ИтЦПВол + ИтЦПСм;
        ОблИтог.Параметры.ИтФизВес  = ИтФизВес;
        ОблИтог.Параметры.ИтЦПВол   = ИтЦПВол;
        ОблИтог.Параметры.ИтЦПСм    = ИтЦПСм;
        
        Если ИтЦПВол <> 0 Тогда
            ОблИтог.Параметры.ПрВол = Окр(ИтЦПВол/ИтФизВес*100,2);
        Иначе
            ОблИтог.Параметры.ПрВол = 0;
        КонецЕсли;	
        Если ИтЦПСм <> 0 Тогда
            ОблИтог.Параметры.ПрСм = Окр(ИтЦПСм/ИтФизВес*100,2);
        Иначе
            ОблИтог.Параметры.ПрСм = 0;
        КонецЕсли;	
        ТабДокумент.Вывести(ОблИтог);
        
        ОблРаздел3 = Макет.ПолучитьОбласть("Раздел3");
        ОблРаздел3.Параметры.Автор = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
        ТабДокумент.Вывести(ОблРаздел3);
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьЗХС4_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
   УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ; 
    
    ЛабораторныйАнализ = Новый Запрос;
    ЛабораторныйАнализ.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.ЗХС4_2021";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_ЗХС4_2021");
    
    // печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = "uk";
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        СписокТТНРезультат = СписокТТН.Выполнить().Выгрузить();
        
        ЛабораторныйАнализ.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ЛабораторныйАнализРезультаты = ЛабораторныйАнализ.Выполнить().Выгрузить();
        
        Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизацииИмяФамилия(РезультатШапка.Организация,РезультатШапка.Дата);
        
        Шапка = Макет.ПолучитьОбласть("Шапка");	
        Шапка.Параметры.Организация = РезультатШапка.Организация.НаименованиеПолное;
        Шапка.Параметры.ЕДРПОУ      = РезультатШапка.Организация.КодПоЕДРПОУ;
        Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
        Шапка.Параметры.Владелец    = РезультатШапка.Владелец.НаименованиеПолное;
        
        Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
            Шапка.Параметры.Регион = РезультатШапка.ПолеТок.Регион;
        КонецЕсли;
        Шапка.Параметры.ТМЦ = РезультатШапка.Номенклатура.НаименованиеПолное;
        
        Попытка
            НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
        Исключение
            НомерСК = "";
        КонецПопытки;
        
        ВесОбразцов = 0;
        Шапка.Параметры.НомерСК = НомерСК;
        Если ЗначениеЗаполнено(РезультатШапка.ЛабораторныйАнализ) Тогда
            Шапка.Параметры.Сорт = РезультатШапка.ЛабораторныйАнализ.Сорт;
            Шапка.Параметры.Клас = РезультатШапка.ЛабораторныйАнализ.Класс;
            Для Каждого СтрАнал из ЛабораторныйАнализРезультаты Цикл
                Если СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Тип Тогда
                    Шапка.Параметры.Тип = СтрАнал.Значение;
                    Прервать;
                КонецЕсли;	
            КонецЦикла;	
            ВесОбразцов = РезультатШапка.ЛабораторныйАнализ.ВесОбразцов;
        КонецЕсли;	
        ТабДокумент.Вывести(Шапка);
        ТабТТН = Новый ТаблицаЗначений;
        ТабТТН.Колонки.Добавить("Силос");
        ТабТТН.Колонки.Добавить("ФизВес");
        ТабТТН.Колонки.Добавить("ЦПВол");
        ТабТТН.Колонки.Добавить("ЦПСм");
        
        ОблСтрока = Макет.ПолучитьОбласть("Строка");
        ИтФизВес = 0; ИтЦПВол = 0; ИтЦПСм = 0; ИтЦПЗер = 0; ИтЦПНат = 0;
        Для Каждого СтрСпискаТТН из СписокТТНРезультат Цикл
            ЛА_ = Неопределено;
            ОблСтрока.Параметры.НомерТТН = СтрСпискаТТН.НомерТТН;
            ОблСтрока.Параметры.ФизВес = СтрСпискаТТН.Вес;
            ИтФизВес = ИтФизВес + СтрСпискаТТН.Вес;
            Если ЗначениеЗаполнено(СтрСпискаТТН.ТТН) Тогда
                ОблСтрока.Параметры.Силос = СтрСпискаТТН.ТТН.Силос;
                Если ЗначениеЗаполнено(СтрСпискаТТН.ТТН.ЛабораторныйАнализ) Тогда
                    ЛА_ = СтрСпискаТТН.ТТН.ЛабораторныйАнализ;
                КонецЕсли;	 
            Иначе
                ОблСтрока.Параметры.Силос = РезультатШапка.Силос;
            КонецЕсли;
            Если ЛА_ = Неопределено Тогда
                Если ЗначениеЗаполнено(РезультатШапка.ЛабораторныйАнализ) Тогда 
                    ЛА_ = РезультатШапка.ЛабораторныйАнализ; 
                КонецЕсли;	
            КонецЕсли;	
            Если Не ЛА_ = Неопределено Тогда
                СтрДругие = ""; 
                ОблСтрока.Параметры.ЦПВол   = 0;
                ОблСтрока.Параметры.ЦПСм    = 0;
                ОблСтрока.Параметры.ЦПЗер   = 0;
                Для Каждого СтрАнал из ЛабораторныйАнализРезультаты Цикл
                    Если СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Влажность Тогда
                        ОблСтрока.Параметры.ПрВолог = СтрАнал.Значение;
                        ОблСтрока.Параметры.ЦПВол = Окр(СтрСпискаТТН.Вес*СтрАнал.Значение/100,0);
                        ИтЦПВол = ИтЦПВол + ОблСтрока.Параметры.ЦПВол;
                    ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.СорнаяПримесь Тогда
                        ОблСтрока.Параметры.ПрСм = СтрАнал.Значение;
                        ОблСтрока.Параметры.ЦПСм = Окр(СтрСпискаТТН.Вес*СтрАнал.Значение/100,0);
                        ИтЦПСм = ИтЦПСм + ОблСтрока.Параметры.ЦПСм;
                    ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЗерноваяПримесь Тогда
                        ОблСтрока.Параметры.ПрЗер = СтрАнал.Значение;
                        ОблСтрока.Параметры.ЦПЗер = Окр(СтрСпискаТТН.Вес*СтрАнал.Значение/100,0);
                        ИтЦПЗер = ИтЦПЗер + ОблСтрока.Параметры.ЦПЗер;
                    ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Натура Тогда
                        ОблСтрока.Параметры.ПрНат = СтрАнал.Значение;
                        ОблСтрока.Параметры.ЦПНат = Окр(СтрСпискаТТН.Вес*СтрАнал.Значение/100,0);
                        ИтЦПНат = ИтЦПНат + ОблСтрока.Параметры.ЦПНат;
                    ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда
                        ОблСтрока.Параметры.ПрЗар = СтрАнал.Значение;
                    Иначе
                        СтрДругие = "" + СтрДругие + "" + СтрАнал.Характеристика.КраткоеНаименование + " - " + СтрАнал.Значение;
                    КонецЕсли;	
                КонецЦикла;	
                ОблСтрока.Параметры.ПрДруг = СтрДругие;
            КонецЕсли;	
            СтрокаТабТТН        = ТабТТН.Добавить();
            СтрокаТабТТН.Силос  = ОблСтрока.Параметры.Силос;
            СтрокаТабТТН.ФизВес = ОблСтрока.Параметры.ФизВес;
            СтрокаТабТТН.ЦПВол  = ОблСтрока.Параметры.ЦПВол;
            СтрокаТабТТН.ЦПСм   = ОблСтрока.Параметры.ЦПСм;
            ТабДокумент.Вывести(ОблСтрока);
        КонецЦикла;
        
        ОблИтог=Макет.ПолучитьОбласть("Итог");
        ОблИтог.Параметры.ИтФизВес = ИтФизВес;
        ОблИтог.Параметры.ИтЦПВол = ИтЦПВол;
        Если ИтЦПВол <> 0 Тогда
            ОблИтог.Параметры.ИтПрВолог = Окр(ИтЦПВол/ИтФизВес*100,2);
        Иначе
            ОблИтог.Параметры.ИтПрВолог = 0;
        КонецЕсли;	
        ОблИтог.Параметры.ИтЦПСм = ИтЦПСм;
        Если ИтЦПСм <> 0 Тогда
            ОблИтог.Параметры.ИтПрСм = Окр(ИтЦПСм/ИтФизВес*100,2);
        Иначе
            ОблИтог.Параметры.ИтПрСм = 0;
        КонецЕсли;	
        ОблИтог.Параметры.ИтЦПЗер = ИтЦПЗер;
        Если ИтЦПЗер <> 0 Тогда
            ОблИтог.Параметры.ИтПрЗер = Окр(ИтЦПЗер/ИтФизВес*100,2);
        Иначе
            ОблИтог.Параметры.ИтПрЗер = 0;
        КонецЕсли;	
        ОблИтог.Параметры.ИтЦПНат = ИтЦПНат;
        Если ИтЦПНат <> 0 Тогда
            ОблИтог.Параметры.ИтПрНат = Окр(ИтЦПНат/ИтФизВес*100,2);
        Иначе
            ОблИтог.Параметры.ИтПрНат = 0;
        КонецЕсли;
        
        ОблИтог.Параметры.ВесОбразцов   = ВесОбразцов;
        ОблИтог.Параметры.КвоНакл       = СписокТТНРезультат.Количество();
        ОблИтог.Параметры.НачальникВТЛ  = Руководители.НачальникВТЛ;
        
        Если ЗначениеЗаполнено(РезультатШапка.ЛабораторныйАнализ) Тогда 
            СтрДругие = ""; 
            Для Каждого СтрАнал из ЛабораторныйАнализРезультаты Цикл
                Если СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Влажность Тогда
                    Продолжить;
                ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.СорнаяПримесь Тогда
                    Продолжить;
                ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЗерноваяПримесь Тогда
                    Продолжить;
                ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Натура Тогда
                    Продолжить;
                ИначеЕсли СтрАнал.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда
                    ОблИтог.Параметры.ИтПрЗар = СтрАнал.Значение;
                Иначе
                    СтрДругие = "" + СтрДругие + "" + СтрАнал.Характеристика.КраткоеНаименование + " - " + СтрАнал.Значение;
                КонецЕсли;	
            КонецЦикла;	
            ОблИтог.Параметры.ИтПрДруг = СтрДругие;
        КонецЕсли;
        
        ТабДокумент.Вывести(ОблИтог);
        ТабДокумент.ВывестиВертикальныйРазделительСтраниц();
        ОблРаздел2 = Макет.ПолучитьОбласть("Раздел2");
        ТабДокумент.Вывести(ОблРаздел2);
        ОблСтрока = Макет.ПолучитьОбласть("Строка2");
        Для каждого СтрТабТТН из ТабТТН Цикл
            ОблСтрока.Параметры.Заполнить(СтрТабТТН);
            ТабДокумент.Вывести(ОблСтрока);
        КонецЦикла;
        
        ОблИтог = Макет.ПолучитьОбласть("Итог2");
        ОблИтог.Параметры.Сум_3_5_7 = ИтФизВес + ИтЦПВол + ИтЦПСм;
        ОблИтог.Параметры.ИтФизВес  = ИтФизВес;
        ОблИтог.Параметры.ИтЦПВол   = ИтЦПВол;
        ОблИтог.Параметры.ИтЦПСм    = ИтЦПСм;
        
        Если ИтЦПВол <> 0 Тогда
            ОблИтог.Параметры.ПрВол = Окр(ИтЦПВол/ИтФизВес*100,2);
        Иначе
            ОблИтог.Параметры.ПрВол = 0;
        КонецЕсли;	
        Если ИтЦПСм <> 0 Тогда
            ОблИтог.Параметры.ПрСм = Окр(ИтЦПСм/ИтФизВес*100,2);
        Иначе
            ОблИтог.Параметры.ПрСм = 0;
        КонецЕсли;	
        ТабДокумент.Вывести(ОблИтог);
        
        ОблРаздел3 = Макет.ПолучитьОбласть("Раздел3");
		
		АвторДляПечати = "";
		ФИОАвтор = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Ссылка.Дата, Новый Структура("ФизическоеЛицо", ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо));
		Если ФИОАвтор.Количество() > 0 Тогда
			АвторДляПечати = СокрЛП(ФИОАвтор[0].Имя)
											 + " "
											 + ВРег(СокрЛП(ФИОАвтор[0].Фамилия)); 
		Иначе
			АвторДляПечати = "" + ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;									 
		КонецЕсли;
		
		ОблРаздел3.Параметры.Автор = АвторДляПечати;
		
        ТабДокумент.Вывести(ОблРаздел3);
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьРасчет(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Авто КАК Авто,
		|	ИНАГРО_РеестрТТНВвоз.БазисыДляРасчетаУслугБратьИзДокумента КАК БазисыДляРасчетаУслугБратьИзДокумента,
		|	ИНАГРО_РеестрТТНВвоз.Вентилирование КАК Вентилирование,
		|	ИНАГРО_РеестрТТНВвоз.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ВидХранения КАК ВидХранения,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.Влажность1 КАК Влажность1,
		|	ИНАГРО_РеестрТТНВвоз.ВлажностьТТН КАК ВлажностьТТН,
		|	ИНАГРО_РеестрТТНВвоз.ВыставлятьУслугиОчисткиСушки КАК ВыставлятьУслугиОчисткиСушки,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорПокупателя КАК ДоговорПокупателя,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорПоставщика КАК ДоговорПоставщика,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК СкладскаяКвитанция,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Километраж КАК Километраж,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоОчистки КАК КоличествоОчистки,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоПриемки КАК КоличествоПриемки,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоСушки КАК КоличествоСушки,
		|	ИНАГРО_РеестрТТНВвоз.Комментарий КАК Комментарий,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВвоз.МестоХранения КАК МестоХранения,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.НеПереформировыватьАвтоматически КАК НеПереформировыватьАвтоматически,
		|	ИНАГРО_РеестрТТНВвоз.НеПереформировыватьУслуги КАК НеПереформировыватьУслуги,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.НомерБланка КАК НомерБланка,
		|	ИНАГРО_РеестрТТНВвоз.НомерПробы КАК НомерПробы,
		|	ИНАГРО_РеестрТТНВвоз.ОбщаяСуммаУслуг КАК ОбщаяСуммаУслуг,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.ОписаниеДвиженияФормы36 КАК ОписаниеДвиженияФормы36,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Ответственный КАК Ответственный,
		|	ИНАГРО_РеестрТТНВвоз.УдалитьОткуда КАК УдалитьОткуда,
		|	ИНАГРО_РеестрТТНВвоз.ОтражатьВБухгалтерскомУчете КАК ОтражатьВБухгалтерскомУчете,
		|	ИНАГРО_РеестрТТНВвоз.ОтражатьПоЗатратам КАК ОтражатьПоЗатратам,
		|	ИНАГРО_РеестрТТНВвоз.Очистка КАК Очистка,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.Поставщик КАК Поставщик,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь1 КАК СорнаяПримесь1,
		|	ИНАГРО_РеестрТТНВвоз.СтепеньВлажности КАК СтепеньВлажности,
		|	ИНАГРО_РеестрТТНВвоз.СтепеньЗагрязнения КАК СтепеньЗагрязнения,
		|	ИНАГРО_РеестрТТНВвоз.СтепеньЗараженности КАК СтепеньЗараженности,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СуммаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаНДС КАК СтоимостьНДС,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СуммаОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаПриемки КАК СуммаПриемки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СуммаСушки,
		|	ИНАГРО_РеестрТТНВвоз.Сушка КАК Сушка,
		|	ИНАГРО_РеестрТТНВвоз.СчетУчетаБУ КАК СчетУчетаБУ,
		|	ИНАГРО_РеестрТТНВвоз.Урожай КАК Урожай,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаОчистки КАК ЦенаОчистки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаПриемки КАК ЦенаПриемки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаСушки КАК ЦенаСушки,
		|	ИНАГРО_РеестрТТНВвоз.Представление КАК Представление,
		|	ИНАГРО_РеестрТТНВвоз.МоментВремени КАК МоментВремени
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    Услуги = Новый Запрос;
    Услуги.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозУслуги.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозУслуги.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвозУслуги.Количество КАК Количество,
		|	ИНАГРО_РеестрТТНВвозУслуги.Цена КАК Цена,
		|	ИНАГРО_РеестрТТНВвозУслуги.Сумма КАК Сумма
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.Услуги КАК ИНАГРО_РеестрТТНВвозУслуги
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозУслуги.Ссылка = &ТекущийДокумент" ; 
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.Расчет";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Расчет");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        Услуги.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧУслуги = Услуги.Выполнить().Выгрузить();
        
        
        ЕстьДопУслуги = (ТЧУслуги.Количество()>0);
        Макет.Области.ШапкаДопУслуг.Видимость   = ЕстьДопУслуги;
        Макет.Области.СтрокаДопУслуг.Видимость  = ЕстьДопУслуги;
        
        Шапка               = Макет.ПолучитьОбласть("Шапка");	
        ОблШапкаДопУслуг    = Макет.ПолучитьОбласть("ШапкаДопУслуг");
        ОблДопУслуги        = Макет.ПолучитьОбласть("СтрокаДопУслуг");	
        ОблИтоги            = Макет.ПолучитьОбласть("Итоги");
        Шапка.Параметры.Заполнить(РезультатШапка);
        
        НомерДок            = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
        ВидКультуры         = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
        ЗначенияБазисов     = ИНАГРО_Элеватор.ПолучитьБазисныеЗначения(ВидКультуры, РезультатШапка.Дата, РезультатШапка.Организация, РезультатШапка.Владелец, РезультатШапка.ДоговорКонтрагента, РезультатШапка.Склад);
        
        Шапка.Параметры.Организация = РезультатШапка.Организация.НаименованиеПолное;
        Шапка.Параметры.НомерДок    = НомерДок;
        Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
        Шапка.Параметры.Поставщик   = РезультатШапка.Поставщик;
        Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
        
        Влажность_                  = ЗначенияБазисов.Влажность;
        СорнаяПримесь_              = ЗначенияБазисов.СорнаяПримесь;
        ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Поставщик);
        ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);
        
        ТекущийОбъект = Новый Структура("Номенклатура, Дата, Организация,
                                        | Владелец, ДоговорКонтрагента, Склад, Влажность,
                                        | СорнаяПримесь, НатСкидкаВлажность, НатСкидкаСорнаяПримесь");
        ЗаполнитьЗначенияСвойств(ТекущийОбъект,РезультатШапка);
        
        Шапка.Параметры.ПроцентЗачВесса = РассчитатьПроцентЗачетногоВеса(ТекущийОбъект);
        ТабДокумент.Вывести(Шапка);
        
        ТабДокумент.Вывести(ОблШапкаДопУслуг);
        
        Для Каждого СтрУслуг Из ТЧУслуги Цикл
            ОблДопУслуги.Параметры.Услуга = СтрУслуг.Номенклатура;
            ОблДопУслуги.Параметры.КоличествоУслуги = СтрУслуг.Количество;
            ОблДопУслуги.Параметры.ЦенаУслуги = СтрУслуг.Цена;
            ОблДопУслуги.Параметры.СтоимостьУслуги = СтрУслуг.Сумма;
            ТабДокумент.Вывести(ОблДопУслуги);
        КонецЦикла;
        
        ОблИтоги.Параметры.Заполнить(РезультатШапка);
        ТабДокумент.Вывести(ОблИтоги);
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьСоя(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность1,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь1,
		|	ИНАГРО_РеестрТТНВвоз.СуммаНДС КАК СтоимостьНДС,
		|	ИНАГРО_РеестрТТНВвоз.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ;
    
    КультурыДогКонтрагента = Новый Запрос;
    КультурыДогКонтрагента.Текст =  
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовИНАГРО_Культуры.НомерСтроки КАК НомерСтроки,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Культура КАК ИНАГРО_Культура,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Собственное КАК ИНАГРО_Собственное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Переоформленное КАК ИНАГРО_Переоформленное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Тоннаж КАК ИНАГРО_Тоннаж,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Цена КАК ИНАГРО_Цена
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ИНАГРО_Культуры КАК ДоговорыКонтрагентовИНАГРО_Культуры
		|		ПО ИНАГРО_РеестрТТНВвоз.Ссылка = ДоговорыКонтрагентовИНАГРО_Культуры.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ;
    
    ЛабораторныйАназиз = Новый Запрос;
    ЛабораторныйАназиз.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ; 
    
    Услуги = Новый Запрос;
    Услуги.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозУслуги.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозУслуги.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвозУслуги.Количество КАК Количество,
		|	ИНАГРО_РеестрТТНВвозУслуги.Цена КАК Цена,
		|	ИНАГРО_РеестрТТНВвозУслуги.Сумма КАК Сумма
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.Услуги КАК ИНАГРО_РеестрТТНВвозУслуги
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозУслуги.Ссылка = &ТекущийДокумент" ;
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.Соя";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Соя");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        КультурыДогКонтрагента.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧКультурыДогКонтрагента = КультурыДогКонтрагента.Выполнить().Выгрузить();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧСписокТТН = СписокТТН.Выполнить().Выгрузить();
        
        ЛабораторныйАназиз.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧРезультатЛабораторныйАназиз = ЛабораторныйАназиз.Выполнить().Выгрузить();
        
        Услуги.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧУслуги = Услуги.Выполнить().Выгрузить();
        
        Руководители    = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
        НомерДок        = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
        
        Шапка               = Макет.ПолучитьОбласть("Шапка");
        ОблСтрока           = Макет.ПолучитьОбласть("Строка");
        ОблИтог             = Макет.ПолучитьОбласть("Итог");
        ОблСтрокаДоставки   = Макет.ПолучитьОбласть("СтрокаДоставки");
        ОблДно              = Макет.ПолучитьОбласть("Дно");
        ТаблицаАнализа      = Макет.ПолучитьОбласть("ТаблицаАнализа");
        ОблШапкаДоставки    = Макет.ПолучитьОбласть("ШапкаДоставки");
        ТаблицаРасчета      = Макет.ПолучитьОбласть("ТаблицаРасчета");	
        СтрокаТабРасчета    = Макет.ПолучитьОбласть("СтрокаТабРасчета");
        ПодвалРасчета       = Макет.ПолучитьОбласть("ПодвалРасчета");
        
        Шапка.Параметры.Фирма       = РезультатШапка.Организация.НаименованиеПолное;
        Шапка.Параметры.НомерДок    = НомерДок;
        Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
        Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
        Шапка.Параметры.ТМЦ         = РезультатШапка.Номенклатура.НаименованиеПолное;
        ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);
        
        Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
            Шапка.Параметры.Регион = РезультатШапка.ПолеТок.Регион;
        КонецЕсли;
        
        Попытка
            НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
        Исключение
            НомерСК = "";
        КонецПопытки;	
        Шапка.Параметры.НомерСК = НомерСК;
        
        ТабДокумент.Вывести(Шапка);
        
        Инд = 0;
        Пока ТЧСписокТТН.Количество() > Инд Цикл
            ОблСтрока.Параметры.НомерТТН1   = ТЧСписокТТН[Инд].НомерТТН;
            ОблСтрока.Параметры.Вес1        = ТЧСписокТТН[Инд].Вес;
            ОблСтрока.Параметры.НомерАвто1  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
            Инд = Инд + 1;
            Если ТЧСписокТТН.Количество() > Инд Тогда
                ОблСтрока.Параметры.НомерТТН2   = ТЧСписокТТН[Инд].НомерТТН;
                ОблСтрока.Параметры.Вес2        = ТЧСписокТТН[Инд].Вес;
                ОблСтрока.Параметры.НомерАвто2  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
                Инд = Инд + 1;
            КонецЕсли;
            ТабДокумент.Вывести(ОблСтрока);
            ОблСтрока.Параметры.НомерТТН1   = "";
            ОблСтрока.Параметры.Вес1        = "";
            ОблСтрока.Параметры.НомерТТН2   = "";
            ОблСтрока.Параметры.Вес2        = "";
            ОблСтрока.Параметры.НомерАвто1  = "";
            ОблСтрока.Параметры.НомерАвто2  = "";
        КонецЦикла;
        
        ОблИтог.Параметры.Всего = РезультатШапка.ОбщийФизическийВес;
        ТабДокумент.Вывести(ОблИтог);
        
        ТабДокумент.Вывести(ОблШапкаДоставки);
        
        ОблСтрокаДоставки.Параметры.КоличествоДоставки  = РезультатШапка.КоличествоДоставки;
        ОблСтрокаДоставки.Параметры.ЦенаДоставки        = РезультатШапка.ЦенаДоставки;
        ОблСтрокаДоставки.Параметры.СтоимостьДоставки   = РезультатШапка.СтоимостьДоставки;
        ТабДокумент.Вывести(ОблСтрокаДоставки);
        
        ОблДно.Параметры.ФизВес         = РезультатШапка.ОбщийФизическийВес;
        ОблДно.Параметры.КолТТН         = ТЧСписокТТН.Количество();
        ОблДно.Параметры.ФизВесПропись  = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,РезультатШапка.ОбщийФизическийВес);
        ОблДно.Параметры.ЗавСкладом     = ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
        ОблДно.Параметры.НазваниеСкада  = РезультатШапка.Склад;
        ТабДокумент.Вывести(ОблДно);
        
        //ШапкаТаблицыАнализа
        ВидКультуры                             = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
        ЗначенияБазисов                         = ИНАГРО_Элеватор.ПолучитьБазисныеЗначения(ВидКультуры,РезультатШапка.Дата,РезультатШапка.Организация,РезультатШапка.Владелец, РезультатШапка.ДоговорКонтрагента, РезультатШапка.Склад);	
        
        ТаблицаАнализа.Параметры.Заполнить(РезультатШапка);
        ТаблицаАнализа.Параметры.НомерАнализа   = ?(РезультатШапка.НомерАнализа = "",РезультатШапка.ЛабораторныйАнализ.Номер,РезультатШапка.НомерАнализа);
        ТаблицаАнализа.Параметры.БазВлаж        = ЗначенияБазисов.Влажность;
        ТаблицаАнализа.Параметры.БазСорн        = ЗначенияБазисов.СорнаяПримесь;		
        ТаблицаАнализа.Параметры.НачальникВТЛ   = Руководители.НачальникВТЛ;
        ТаблицаАнализа.Параметры.ОлейнаяПримесь = РезультатШапка.ЗерноваяПримесь;
        
        // заполнение цвета, запаха и зараженности из ЛабАнализа
        Если ЗначениеЗаполнено(ТЧРезультатЛабораторныйАназиз) Тогда
            Для каждого СтрокаТаблицы Из ТЧРезультатЛабораторныйАназиз Цикл
                Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда 
                    ТаблицаАнализа.Параметры.Цвет = СтрокаТаблицы.Значение;
                КонецЕсли;
                Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда 
                    ТаблицаАнализа.Параметры.Запах = СтрокаТаблицы.Значение;
                КонецЕсли;			
                Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда 
                    ТаблицаАнализа.Параметры.Зараженность = СтрокаТаблицы.Значение;
                КонецЕсли;
                Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КислотноеЧислоМасла Тогда 
                    ТаблицаАнализа.Параметры.КислотноеЧислоМасла = СтрокаТаблицы.Значение;
                КонецЕсли;

            КонецЦикла; 
        КонецЕсли;
        
        ТаблицаАнализа.Параметры.НатСкидкаВлажность     = РезультатШапка.НатСкидкаВлажность;
        ТаблицаАнализа.Параметры.НатСкидкаСорнаяПримесь = РезультатШапка.НатСкидкаСорнаяПримесь; 
        ТабДокумент.Вывести(ТаблицаАнализа);	
        
        //ТаблицаРасчета
        ТаблицаРасчета.Параметры.ФизическийВес      = РезультатШапка.ОбщийФизическийВес;
        ТаблицаРасчета.Параметры.ЗачетныйВес        = РезультатШапка.ЗачетныйВес;
        ТаблицаРасчета.Параметры.ПроцентЗачВесса    = 100-(РезультатШапка.НатСкидкаВлажность+РезультатШапка.НатСкидкаСорнаяПримесь);
        
        ЦенаЗаТону = 0;
        Для каждого СирДогКул из ТЧКультурыДогКонтрагента Цикл
            Если СирДогКул.ИНАГРО_Культура = ВидКультуры Тогда
                ЦенаЗаТону = СирДогКул.ИНАГРО_Цена;
            КонецЕсли;	
        КонецЦикла;
        
        ТаблицаРасчета.Параметры.ЦенаЗаТону = ЦенаЗаТону;
        ТаблицаРасчета.Параметры.Сумма      = ЦенаЗаТону*РезультатШапка.ОбщийФизическийВес;
        ТабДокумент.Вывести(ТаблицаРасчета);	
        
        СуммаУслуг=0;	
        Для каждого СтрокаУслуги Из ТЧУслуги Цикл  	
            СтрокаТабРасчета.Параметры.Номенклатура = СтрокаУслуги.Номенклатура;
            СтрокаТабРасчета.Параметры.Кол          = СтрокаУслуги.Количество;
            СтрокаТабРасчета.Параметры.Сумма        = Окр(СтрокаУслуги.Сумма/1.2,2);
            СтрокаТабРасчета.Параметры.Цена         = ?(СтрокаТабРасчета.Параметры.Кол = 0, 0, Окр(СтрокаТабРасчета.Параметры.Сумма / СтрокаТабРасчета.Параметры.Кол,2));
            СуммаУслуг                              = СуммаУслуг+СтрокаТабРасчета.Параметры.Сумма;
            ТабДокумент.Вывести(СтрокаТабРасчета);	
        КонецЦикла;
        
        //ПодвалРасчет
        ПодвалРасчета.Параметры.ИтогоНДС            = РезультатШапка.СтоимостьНДС;
        ПодвалРасчета.Параметры.ИтогоСНДС           = ТЧУслуги.Итог("Сумма");
        ПодвалРасчета.Параметры.ИтогоНачислено      = ПодвалРасчета.Параметры.ИтогоСНДС - ПодвалРасчета.Параметры.ИтогоНДС;
        ПодвалРасчета.Параметры.СоставительРеестра  = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
        ТабДокумент.Вывести(ПодвалРасчета);
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьСоняшник(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность1,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь1,
		|	ИНАГРО_РеестрТТНВвоз.СуммаНДС КАК СтоимостьНДС,
		|	ИНАГРО_РеестрТТНВвоз.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ;
    
    КультурыДогКонтрагента = Новый Запрос;
    КультурыДогКонтрагента.Текст =  
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовИНАГРО_Культуры.НомерСтроки КАК НомерСтроки,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Культура КАК ИНАГРО_Культура,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Собственное КАК ИНАГРО_Собственное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Переоформленное КАК ИНАГРО_Переоформленное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Тоннаж КАК ИНАГРО_Тоннаж,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Цена КАК ИНАГРО_Цена
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ИНАГРО_Культуры КАК ДоговорыКонтрагентовИНАГРО_Культуры
		|		ПО ИНАГРО_РеестрТТНВвоз.Ссылка = ДоговорыКонтрагентовИНАГРО_Культуры.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ;
    
    ЛабораторныйАназиз = Новый Запрос;
    ЛабораторныйАназиз.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ; 
    
    Услуги = Новый Запрос;
    Услуги.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозУслуги.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозУслуги.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвозУслуги.Количество КАК Количество,
		|	ИНАГРО_РеестрТТНВвозУслуги.Цена КАК Цена,
		|	ИНАГРО_РеестрТТНВвозУслуги.Сумма КАК Сумма
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.Услуги КАК ИНАГРО_РеестрТТНВвозУслуги
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозУслуги.Ссылка = &ТекущийДокумент" ;
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.Подсолнух";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Подсолнечник");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        КультурыДогКонтрагента.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧКультурыДогКонтрагента = КультурыДогКонтрагента.Выполнить().Выгрузить();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧСписокТТН = СписокТТН.Выполнить().Выгрузить();

        ЛабораторныйАназиз.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧРезультатЛабораторныйАназиз = ЛабораторныйАназиз.Выполнить().Выгрузить();
        
        Услуги.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧУслуги = Услуги.Выполнить().Выгрузить();

        Руководители    = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
		НомерДок        = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
        ОблИтог             = Макет.ПолучитьОбласть("Итог");
        ОблШапкаДоставки    = Макет.ПолучитьОбласть("ШапкаДоставки");
        ОблСтрокаДоставки   = Макет.ПолучитьОбласть("СтрокаДоставки");
        ОблДно              = Макет.ПолучитьОбласть("Дно");
        ТаблицаАнализа      = Макет.ПолучитьОбласть("ТаблицаАнализа");
        ТаблицаРасчета      = Макет.ПолучитьОбласть("ТаблицаРасчета");
        СтрокаТабРасчета    = Макет.ПолучитьОбласть("СтрокаТабРасчета");
        ПодвалРасчета       = Макет.ПолучитьОбласть("ПодвалРасчета");

		Шапка.Параметры.Фирма       = РезультатШапка.Организация.НаименованиеПолное;
		Шапка.Параметры.НомерДок    = НомерДок;
		Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
		Шапка.Параметры.ТМЦ         = РезультатШапка.Номенклатура.НаименованиеПолное;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);

		Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
			Шапка.Параметры.Регион = РезультатШапка.ПолеТок.Регион;
		КонецЕсли;
		
		Попытка
			НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
		Исключение
			НомерСК = "";
		КонецПопытки;	
		Шапка.Параметры.НомерСК = НомерСК;
		
		ТабДокумент.Вывести(Шапка);
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		Инд = 0;
		Пока ТЧСписокТТН.Количество() > Инд Цикл
			ОблСтрока.Параметры.НомерТТН1   = ТЧСписокТТН[Инд].НомерТТН;
			ОблСтрока.Параметры.Вес1        = ТЧСписокТТН[Инд].Вес;
			ОблСтрока.Параметры.НомерАвто1  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
			Инд = Инд + 1;
			Если ТЧСписокТТН.Количество() > Инд Тогда
				ОблСтрока.Параметры.НомерТТН2   = ТЧСписокТТН[Инд].НомерТТН;
				ОблСтрока.Параметры.Вес2        = ТЧСписокТТН[Инд].Вес;
				ОблСтрока.Параметры.НомерАвто2  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
				Инд = Инд + 1;
			КонецЕсли;
			ТабДокумент.Вывести(ОблСтрока);
			ОблСтрока.Параметры.НомерТТН1   = "";
			ОблСтрока.Параметры.Вес1        = "";
			ОблСтрока.Параметры.НомерТТН2   = "";
			ОблСтрока.Параметры.Вес2        = "";
			ОблСтрока.Параметры.НомерАвто1  = "";
			ОблСтрока.Параметры.НомерАвто2  = "";
		КонецЦикла;
		
		ОблИтог.Параметры.Всего = РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ОблИтог);
		
		ТабДокумент.Вывести(ОблШапкаДоставки);
		
		ОблСтрокаДоставки.Параметры.КоличествоДоставки  = РезультатШапка.КоличествоДоставки;
		ОблСтрокаДоставки.Параметры.ЦенаДоставки        = РезультатШапка.ЦенаДоставки;
		ОблСтрокаДоставки.Параметры.СтоимостьДоставки   = РезультатШапка.СтоимостьДоставки;
		ТабДокумент.Вывести(ОблСтрокаДоставки);
		
		СтруктураЛабАнализа = Новый Структура;
		
		ОблДно.Параметры.ФизВес = РезультатШапка.ОбщийФизическийВес;
		ОблДно.Параметры.КолТТН         = ТЧСписокТТН.Количество();
		ОблДно.Параметры.ФизВесПропись  = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,РезультатШапка.ОбщийФизическийВес);
		ОблДно.Параметры.ЗавСкладом     = ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
		ОблДно.Параметры.НазваниеСкада  = РезультатШапка.Склад;
		ТабДокумент.Вывести(ОблДно);
		
		
		//ШапкаТаблицыАнализа
				
		ТаблицаАнализа.Параметры.Заполнить(РезультатШапка);
		
		ВидКультуры                             = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
		ЗначенияБазисов                         = ИНАГРО_Элеватор.ПолучитьБазисныеЗначения(ВидКультуры,РезультатШапка.Дата,РезультатШапка.Организация,РезультатШапка.Владелец, РезультатШапка.ДоговорКонтрагента, РезультатШапка.Склад);	
        ТаблицаАнализа.Параметры.НомерАнализа   = ?(РезультатШапка.НомерАнализа = "",РезультатШапка.ЛабораторныйАнализ.Номер,РезультатШапка.НомерАнализа);
        ТаблицаАнализа.Параметры.БазВлаж        = ЗначенияБазисов.Влажность;
		ТаблицаАнализа.Параметры.БазСорн        = ЗначенияБазисов.СорнаяПримесь;		
		ТаблицаАнализа.Параметры.НачальникВТЛ   = Руководители.НачальникВТЛ;		
		// заполнение цвета, запаха и зараженности из ЛабАнализа
		Если ЗначениеЗаполнено(ТЧРезультатЛабораторныйАназиз) Тогда
			Для каждого СтрокаТаблицы Из ТЧРезультатЛабораторныйАназиз Цикл			
				
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Олейность Тогда 
					ТаблицаАнализа.Параметры.ОлейнаяПримесь = СтрокаТаблицы.Значение;
				КонецЕсли;
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КислотноеЧислоМасла Тогда 
					ТаблицаАнализа.Параметры.КислотноеЧислоМасла = СтрокаТаблицы.Значение;
				КонецЕсли;
				
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда 
					ТаблицаАнализа.Параметры.Цвет = СтрокаТаблицы.Значение;
				КонецЕсли;
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда 
					ТаблицаАнализа.Параметры.Запах = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда 
					ТаблицаАнализа.Параметры.Зараженность = СтрокаТаблицы.Значение;
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
		
		ТаблицаАнализа.Параметры.НатСкидкаВлажность     = РезультатШапка.НатСкидкаВлажность;
		ТаблицаАнализа.Параметры.НатСкидкаСорнаяПримесь = РезультатШапка.НатСкидкаСорнаяПримесь; 
		
		ТабДокумент.Вывести(ТаблицаАнализа);	
		
		//ТаблицаРасчета
		ТаблицаРасчета.Параметры.ФизическийВес      = РезультатШапка.ОбщийФизическийВес;
		ТаблицаРасчета.Параметры.ЗачетныйВес        = РезультатШапка.ЗачетныйВес;
		ТаблицаРасчета.Параметры.ПроцентЗачВесса    = 100-(РезультатШапка.НатСкидкаВлажность+РезультатШапка.НатСкидкаСорнаяПримесь);
		ЦенаЗаТону = 0;
		Для каждого СирДогКул из ТЧКультурыДогКонтрагента Цикл
			Если СирДогКул.ИНАГРО_Культура = ВидКультуры Тогда
				ЦенаЗаТону = СирДогКул.ИНАГРО_Цена;
			КонецЕсли;	
		КонецЦикла;	
		ТаблицаРасчета.Параметры.ЦенаЗаТону = ЦенаЗаТону;
		ТаблицаРасчета.Параметры.Сумма      = ЦенаЗаТону*РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ТаблицаРасчета);	
		
		
		СуммаУслуг=0;	
		Для каждого СтрокаУслуги Из ТЧУслуги Цикл  	
			СтрокаТабРасчета.Параметры.Номенклатура = СтрокаУслуги.Номенклатура;
			СтрокаТабРасчета.Параметры.Кол          = СтрокаУслуги.Количество;
			СтрокаТабРасчета.Параметры.Сумма        = Окр(СтрокаУслуги.Сумма/1.2,2);
			СтрокаТабРасчета.Параметры.Цена         = ?(СтрокаТабРасчета.Параметры.Кол = 0, 0, Окр(СтрокаТабРасчета.Параметры.Сумма / СтрокаТабРасчета.Параметры.Кол,2));
			СуммаУслуг                              = СуммаУслуг+СтрокаТабРасчета.Параметры.Сумма;
			ТабДокумент.Вывести(СтрокаТабРасчета);	
		КонецЦикла;
		
		//ПодвалРасчет
		ПодвалРасчета.Параметры.ИтогоНДС            = РезультатШапка.СтоимостьНДС;
		ПодвалРасчета.Параметры.ИтогоСНДС           = ТЧУслуги.Итог("Сумма");
		ПодвалРасчета.Параметры.ИтогоНачислено      = ПодвалРасчета.Параметры.ИтогоСНДС - ПодвалРасчета.Параметры.ИтогоНДС;
		ПодвалРасчета.Параметры.СоставительРеестра  = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
		ТабДокумент.Вывести(ПодвалРасчета);
                
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьРапса(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность1,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь1,
		|	ИНАГРО_РеестрТТНВвоз.СуммаНДС КАК СтоимостьНДС,
		|	ИНАГРО_РеестрТТНВвоз.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ;
    
    КультурыДогКонтрагента = Новый Запрос;
    КультурыДогКонтрагента.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовИНАГРО_Культуры.НомерСтроки КАК НомерСтроки,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Культура КАК ИНАГРО_Культура,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Собственное КАК ИНАГРО_Собственное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Переоформленное КАК ИНАГРО_Переоформленное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Тоннаж КАК ИНАГРО_Тоннаж,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Цена КАК ИНАГРО_Цена
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ИНАГРО_Культуры КАК ДоговорыКонтрагентовИНАГРО_Культуры
		|		ПО ИНАГРО_РеестрТТНВвоз.Ссылка = ДоговорыКонтрагентовИНАГРО_Культуры.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ;
    
    ЛабораторныйАназиз = Новый Запрос;
    ЛабораторныйАназиз.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ; 
    
    Услуги = Новый Запрос;
    Услуги.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозУслуги.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозУслуги.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвозУслуги.Количество КАК Количество,
		|	ИНАГРО_РеестрТТНВвозУслуги.Цена КАК Цена,
		|	ИНАГРО_РеестрТТНВвозУслуги.Сумма КАК Сумма
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.Услуги КАК ИНАГРО_РеестрТТНВвозУслуги
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозУслуги.Ссылка = &ТекущийДокумент" ;
    //
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.Рапс";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Рапс");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        КультурыДогКонтрагента.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧКультурыДогКонтрагента = КультурыДогКонтрагента.Выполнить().Выгрузить();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧСписокТТН = СписокТТН.Выполнить().Выгрузить();

        ЛабораторныйАназиз.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧРезультатЛабораторныйАназиз = ЛабораторныйАназиз.Выполнить().Выгрузить();
        
        Услуги.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧУслуги = Услуги.Выполнить().Выгрузить();

        Руководители    = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
		НомерДок        = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
        ОблИтог             = Макет.ПолучитьОбласть("Итог");
        ОблШапкаДоставки    = Макет.ПолучитьОбласть("ШапкаДоставки");
        ОблСтрокаДоставки   = Макет.ПолучитьОбласть("СтрокаДоставки");
        ОблДно              = Макет.ПолучитьОбласть("Дно");
        ТаблицаАнализа      = Макет.ПолучитьОбласть("ТаблицаАнализа");
        ТаблицаРасчета      = Макет.ПолучитьОбласть("ТаблицаРасчета");
        СтрокаТабРасчета    = Макет.ПолучитьОбласть("СтрокаТабРасчета");
        ПодвалРасчета       = Макет.ПолучитьОбласть("ПодвалРасчета");

		Шапка.Параметры.Фирма       = РезультатШапка.Организация.НаименованиеПолное;
		Шапка.Параметры.НомерДок    = НомерДок;
		Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
		Шапка.Параметры.ТМЦ         = РезультатШапка.Номенклатура.НаименованиеПолное;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);

		Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
			Шапка.Параметры.Регион = РезультатШапка.ПолеТок.Регион;
		КонецЕсли;
		
		Попытка
			НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
		Исключение
			НомерСК = "";
		КонецПопытки;	
		Шапка.Параметры.НомерСК = НомерСК;
		
		ТабДокумент.Вывести(Шапка);
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		Инд = 0;
		Пока ТЧСписокТТН.Количество() > Инд Цикл
			ОблСтрока.Параметры.НомерТТН1   = ТЧСписокТТН[Инд].НомерТТН;
			ОблСтрока.Параметры.Вес1        = ТЧСписокТТН[Инд].Вес;
			ОблСтрока.Параметры.НомерАвто1  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
			Инд = Инд + 1;
			Если ТЧСписокТТН.Количество() > Инд Тогда
				ОблСтрока.Параметры.НомерТТН2   = ТЧСписокТТН[Инд].НомерТТН;
				ОблСтрока.Параметры.Вес2        = ТЧСписокТТН[Инд].Вес;
				ОблСтрока.Параметры.НомерАвто2  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
				Инд = Инд + 1;
			КонецЕсли;
			ТабДокумент.Вывести(ОблСтрока);
			ОблСтрока.Параметры.НомерТТН1   = "";
			ОблСтрока.Параметры.Вес1        = "";
			ОблСтрока.Параметры.НомерТТН2   = "";
			ОблСтрока.Параметры.Вес2        = "";
			ОблСтрока.Параметры.НомерАвто1  = "";
			ОблСтрока.Параметры.НомерАвто2  = "";
		КонецЦикла;
		
		ОблИтог.Параметры.Всего = РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ОблИтог);
		
		ТабДокумент.Вывести(ОблШапкаДоставки);
		
		ОблСтрокаДоставки.Параметры.КоличествоДоставки  = РезультатШапка.КоличествоДоставки;
		ОблСтрокаДоставки.Параметры.ЦенаДоставки        = РезультатШапка.ЦенаДоставки;
		ОблСтрокаДоставки.Параметры.СтоимостьДоставки   = РезультатШапка.СтоимостьДоставки;
		ТабДокумент.Вывести(ОблСтрокаДоставки);
		
		ОблДно.Параметры.ФизВес         = РезультатШапка.ОбщийФизическийВес;
		ОблДно.Параметры.КолТТН         = ТЧСписокТТН.Количество();
		ОблДно.Параметры.ФизВесПропись  = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,РезультатШапка.ОбщийФизическийВес);
		ОблДно.Параметры.ЗавСкладом     = ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
		ОблДно.Параметры.НазваниеСкада  = РезультатШапка.Склад;
		ТабДокумент.Вывести(ОблДно);
		
		
		//ШапкаТаблицыАнализа
				
		ТаблицаАнализа.Параметры.Заполнить(РезультатШапка);
		
		ВидКультуры                             = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
		ЗначенияБазисов                         = ИНАГРО_Элеватор.ПолучитьБазисныеЗначения(ВидКультуры,РезультатШапка.Дата,РезультатШапка.Организация,РезультатШапка.Владелец, РезультатШапка.ДоговорКонтрагента, РезультатШапка.Склад);	
        ТаблицаАнализа.Параметры.НомерАнализа   = ?(РезультатШапка.НомерАнализа = "",РезультатШапка.ЛабораторныйАнализ.Номер,РезультатШапка.НомерАнализа);
        ТаблицаАнализа.Параметры.БазВлаж        = ЗначенияБазисов.Влажность;
		ТаблицаАнализа.Параметры.БазСорн        = ЗначенияБазисов.СорнаяПримесь;		
		ТаблицаАнализа.Параметры.НачальникВТЛ   = Руководители.НачальникВТЛ;		
        ТаблицаАнализа.Параметры.ОлейнаяПримесь = РезультатШапка.ЗерноваяПримесь;
        // заполнение цвета, запаха и зараженности из ЛабАнализа
		Если ЗначениеЗаполнено(ТЧРезультатЛабораторныйАназиз) Тогда
			Для каждого СтрокаТаблицы Из ТЧРезультатЛабораторныйАназиз Цикл			
				
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЭруковаКислота Тогда 
					ТаблицаАнализа.Параметры.ЭруковаКислота = СтрокаТаблицы.Значение;
				КонецЕсли;
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Глюкозенолат Тогда 
					ТаблицаАнализа.Параметры.Глюкозенолат = СтрокаТаблицы.Значение;
				КонецЕсли;
				
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда 
					ТаблицаАнализа.Параметры.Цвет = СтрокаТаблицы.Значение;
				КонецЕсли;
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда 
					ТаблицаАнализа.Параметры.Запах = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда 
					ТаблицаАнализа.Параметры.Зараженность = СтрокаТаблицы.Значение;
				КонецЕсли;	
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Олейность Тогда 
					ТаблицаАнализа.Параметры.Олейность = СтрокаТаблицы.Значение;
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
		
		ТаблицаАнализа.Параметры.НатСкидкаВлажность     = РезультатШапка.НатСкидкаВлажность;
		ТаблицаАнализа.Параметры.НатСкидкаСорнаяПримесь = РезультатШапка.НатСкидкаСорнаяПримесь; 
		
		ТабДокумент.Вывести(ТаблицаАнализа);	
		
		//ТаблицаРасчета
		ТаблицаРасчета.Параметры.ФизическийВес      = РезультатШапка.ОбщийФизическийВес;
		ТаблицаРасчета.Параметры.ЗачетныйВес        = РезультатШапка.ЗачетныйВес;
		ТаблицаРасчета.Параметры.ПроцентЗачВесса    = 100-(РезультатШапка.НатСкидкаВлажность+РезультатШапка.НатСкидкаСорнаяПримесь);
		ЦенаЗаТону = 0;
		Для каждого СирДогКул из ТЧКультурыДогКонтрагента Цикл
			Если СирДогКул.ИНАГРО_Культура = ВидКультуры Тогда
				ЦенаЗаТону = СирДогКул.ИНАГРО_Цена;
			КонецЕсли;	
		КонецЦикла;	
		ТаблицаРасчета.Параметры.ЦенаЗаТону = ЦенаЗаТону;
		ТаблицаРасчета.Параметры.Сумма      = ЦенаЗаТону*РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ТаблицаРасчета);	
		
		СуммаУслуг=0;	
		Для каждого СтрокаУслуги Из ТЧУслуги Цикл  	
			СтрокаТабРасчета.Параметры.Номенклатура = СтрокаУслуги.Номенклатура;
			СтрокаТабРасчета.Параметры.Кол          = СтрокаУслуги.Количество;
			СтрокаТабРасчета.Параметры.Сумма        = Окр(СтрокаУслуги.Сумма/1.2,2);
			СтрокаТабРасчета.Параметры.Цена         = ?(СтрокаТабРасчета.Параметры.Кол = 0, 0, Окр(СтрокаТабРасчета.Параметры.Сумма / СтрокаТабРасчета.Параметры.Кол,2));
			СуммаУслуг                              = СуммаУслуг+СтрокаТабРасчета.Параметры.Сумма;
			ТабДокумент.Вывести(СтрокаТабРасчета);	
		КонецЦикла;
		
		//ПодвалРасчет
		ПодвалРасчета.Параметры.ИтогоНДС            = РезультатШапка.СтоимостьНДС;
		ПодвалРасчета.Параметры.ИтогоСНДС           = ТЧУслуги.Итог("Сумма");
		ПодвалРасчета.Параметры.ИтогоНачислено      = ПодвалРасчета.Параметры.ИтогоСНДС - ПодвалРасчета.Параметры.ИтогоНДС;
		ПодвалРасчета.Параметры.СоставительРеестра  = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
		ТабДокумент.Вывести(ПодвалРасчета);
                
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьКукуруза(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность1,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь1,
		|	ИНАГРО_РеестрТТНВвоз.СуммаНДС КАК СтоимостьНДС,
		|	ИНАГРО_РеестрТТНВвоз.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ;
    
    КультурыДогКонтрагента = Новый Запрос;
    КультурыДогКонтрагента.Текст =  
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовИНАГРО_Культуры.НомерСтроки КАК НомерСтроки,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Культура КАК ИНАГРО_Культура,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Собственное КАК ИНАГРО_Собственное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Переоформленное КАК ИНАГРО_Переоформленное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Тоннаж КАК ИНАГРО_Тоннаж,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Цена КАК ИНАГРО_Цена
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ИНАГРО_Культуры КАК ДоговорыКонтрагентовИНАГРО_Культуры
		|		ПО ИНАГРО_РеестрТТНВвоз.Ссылка = ДоговорыКонтрагентовИНАГРО_Культуры.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ;
    
    ЛабораторныйАназиз = Новый Запрос;
    ЛабораторныйАназиз.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ; 
    
    Услуги = Новый Запрос;
    Услуги.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозУслуги.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозУслуги.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвозУслуги.Количество КАК Количество,
		|	ИНАГРО_РеестрТТНВвозУслуги.Цена КАК Цена,
		|	ИНАГРО_РеестрТТНВвозУслуги.Сумма КАК Сумма
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.Услуги КАК ИНАГРО_РеестрТТНВвозУслуги
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозУслуги.Ссылка = &ТекущийДокумент" ;
       
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.Кукуруза";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Кукуруза");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        КультурыДогКонтрагента.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧКультурыДогКонтрагента = КультурыДогКонтрагента.Выполнить().Выгрузить();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧСписокТТН = СписокТТН.Выполнить().Выгрузить();

        ЛабораторныйАназиз.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧРезультатЛабораторныйАназиз = ЛабораторныйАназиз.Выполнить().Выгрузить();
        
        Услуги.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧУслуги = Услуги.Выполнить().Выгрузить();

        Руководители    = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
		НомерДок        = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
        ОблИтог             = Макет.ПолучитьОбласть("Итог");
        ОблШапкаДоставки    = Макет.ПолучитьОбласть("ШапкаДоставки");
        ОблСтрокаДоставки   = Макет.ПолучитьОбласть("СтрокаДоставки");
        ОблДно              = Макет.ПолучитьОбласть("Дно");
        ТаблицаАнализа      = Макет.ПолучитьОбласть("ТаблицаАнализа");
        ТаблицаРасчета      = Макет.ПолучитьОбласть("ТаблицаРасчета");
        СтрокаТабРасчета    = Макет.ПолучитьОбласть("СтрокаТабРасчета");
        ПодвалРасчета       = Макет.ПолучитьОбласть("ПодвалРасчета");

		Шапка.Параметры.Фирма       = РезультатШапка.Организация.НаименованиеПолное;
		Шапка.Параметры.НомерДок    = НомерДок;
		Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
		Шапка.Параметры.ТМЦ         = РезультатШапка.Номенклатура.НаименованиеПолное;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);

		Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
			Шапка.Параметры.Регион = РезультатШапка.ПолеТок.Регион;
		КонецЕсли;
		
		Попытка
			НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
		Исключение
			НомерСК = "";
		КонецПопытки;	
		Шапка.Параметры.НомерСК = НомерСК;
		
		ТабДокумент.Вывести(Шапка);
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		Инд = 0;
		Пока ТЧСписокТТН.Количество() > Инд Цикл
			ОблСтрока.Параметры.НомерТТН1   = ТЧСписокТТН[Инд].НомерТТН;
			ОблСтрока.Параметры.Вес1        = ТЧСписокТТН[Инд].Вес;
			ОблСтрока.Параметры.НомерАвто1  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
			Инд = Инд + 1;
			Если ТЧСписокТТН.Количество() > Инд Тогда
				ОблСтрока.Параметры.НомерТТН2   = ТЧСписокТТН[Инд].НомерТТН;
				ОблСтрока.Параметры.Вес2        = ТЧСписокТТН[Инд].Вес;
				ОблСтрока.Параметры.НомерАвто2  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
				Инд = Инд + 1;
			КонецЕсли;
			ТабДокумент.Вывести(ОблСтрока);
			ОблСтрока.Параметры.НомерТТН1   = "";
			ОблСтрока.Параметры.Вес1        = "";
			ОблСтрока.Параметры.НомерТТН2   = "";
			ОблСтрока.Параметры.Вес2        = "";
			ОблСтрока.Параметры.НомерАвто1  = "";
			ОблСтрока.Параметры.НомерАвто2  = "";
		КонецЦикла;
		
		ОблИтог.Параметры.Всего = РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ОблИтог);
		
		ТабДокумент.Вывести(ОблШапкаДоставки);
		
		ОблСтрокаДоставки.Параметры.КоличествоДоставки  = РезультатШапка.КоличествоДоставки;
		ОблСтрокаДоставки.Параметры.ЦенаДоставки        = РезультатШапка.ЦенаДоставки;
		ОблСтрокаДоставки.Параметры.СтоимостьДоставки   = РезультатШапка.СтоимостьДоставки;
		ТабДокумент.Вывести(ОблСтрокаДоставки);
		
		ОблДно.Параметры.ФизВес         = РезультатШапка.ОбщийФизическийВес;
		ОблДно.Параметры.КолТТН         = ТЧСписокТТН.Количество();
		ОблДно.Параметры.ФизВесПропись  = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,РезультатШапка.ОбщийФизическийВес);
		ОблДно.Параметры.ЗавСкладом     = ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
		ОблДно.Параметры.НазваниеСкада  = РезультатШапка.Склад;
		ТабДокумент.Вывести(ОблДно);
		
		
		//ШапкаТаблицыАнализа
				
		ТаблицаАнализа.Параметры.Заполнить(РезультатШапка);
		
		ВидКультуры                             = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
		ЗначенияБазисов                         = ИНАГРО_Элеватор.ПолучитьБазисныеЗначения(ВидКультуры,РезультатШапка.Дата,РезультатШапка.Организация,РезультатШапка.Владелец, РезультатШапка.ДоговорКонтрагента, РезультатШапка.Склад);	
        ТаблицаАнализа.Параметры.НомерАнализа   = ?(РезультатШапка.НомерАнализа = "",РезультатШапка.ЛабораторныйАнализ.Номер,РезультатШапка.НомерАнализа);
        ТаблицаАнализа.Параметры.БазВлаж        = ЗначенияБазисов.Влажность;
		ТаблицаАнализа.Параметры.БазСорн        = ЗначенияБазисов.СорнаяПримесь;		
		ТаблицаАнализа.Параметры.НачальникВТЛ   = Руководители.НачальникВТЛ;		
        // заполнение цвета, запаха и зараженности из ЛабАнализа
		Если ЗначениеЗаполнено(ТЧРезультатЛабораторныйАназиз) Тогда
			Для каждого СтрокаТаблицы Из ТЧРезультатЛабораторныйАназиз Цикл			
				
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПроросшихЗерен Тогда 
					ТаблицаАнализа.Параметры.ВТомЧислеПроросшие = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда 
					ТаблицаАнализа.Параметры.Цвет = СтрокаТаблицы.Значение;
				КонецЕсли;
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда 
					ТаблицаАнализа.Параметры.Запах = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда 
					ТаблицаАнализа.Параметры.Зараженность = СтрокаТаблицы.Значение;
				КонецЕсли;
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Тип Тогда
					ТаблицаАнализа.Параметры.Тип = СтрокаТаблицы.Значение;
					ТаблицаАнализа.Параметры.Тип = СокрЛП(ТаблицаАнализа.Параметры.Тип);
				КонецЕсли;	
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПоврежденныхЗерен Тогда
					ТаблицаАнализа.Параметры.Поврежденные = СтрокаТаблицы.Значение;
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
		
		ТаблицаАнализа.Параметры.НатСкидкаВлажность     = РезультатШапка.НатСкидкаВлажность;
		ТаблицаАнализа.Параметры.НатСкидкаСорнаяПримесь = РезультатШапка.НатСкидкаСорнаяПримесь; 
		
		ТабДокумент.Вывести(ТаблицаАнализа);	
		
		//ТаблицаРасчета
		ТаблицаРасчета.Параметры.ФизическийВес      = РезультатШапка.ОбщийФизическийВес;
		ТаблицаРасчета.Параметры.ЗачетныйВес        = РезультатШапка.ЗачетныйВес;
		ТаблицаРасчета.Параметры.ПроцентЗачВесса    = 100-(РезультатШапка.НатСкидкаВлажность+РезультатШапка.НатСкидкаСорнаяПримесь);
		ЦенаЗаТону = 0;
		Для каждого СирДогКул из ТЧКультурыДогКонтрагента Цикл
			Если СирДогКул.ИНАГРО_Культура = ВидКультуры Тогда
				ЦенаЗаТону = СирДогКул.ИНАГРО_Цена;
			КонецЕсли;	
		КонецЦикла;	
		ТаблицаРасчета.Параметры.ЦенаЗаТону = ЦенаЗаТону;
		ТаблицаРасчета.Параметры.Сумма      = ЦенаЗаТону*РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ТаблицаРасчета);	
		
		
		СуммаУслуг=0;	
		Для каждого СтрокаУслуги Из ТЧУслуги Цикл  	
			СтрокаТабРасчета.Параметры.Номенклатура = СтрокаУслуги.Номенклатура;
			СтрокаТабРасчета.Параметры.Кол          = СтрокаУслуги.Количество;
			СтрокаТабРасчета.Параметры.Сумма        = Окр(СтрокаУслуги.Сумма/1.2,2);
			СтрокаТабРасчета.Параметры.Цена         = ?(СтрокаТабРасчета.Параметры.Кол = 0, 0, Окр(СтрокаТабРасчета.Параметры.Сумма / СтрокаТабРасчета.Параметры.Кол,2));
			СуммаУслуг                              = СуммаУслуг+СтрокаТабРасчета.Параметры.Сумма;
			ТабДокумент.Вывести(СтрокаТабРасчета);	
		КонецЦикла;
		
		//ПодвалРасчет
		ПодвалРасчета.Параметры.ИтогоНДС            = РезультатШапка.СтоимостьНДС;
		ПодвалРасчета.Параметры.ИтогоСНДС           = ТЧУслуги.Итог("Сумма");
		ПодвалРасчета.Параметры.ИтогоНачислено      = ПодвалРасчета.Параметры.ИтогоСНДС - ПодвалРасчета.Параметры.ИтогоНДС;
		ПодвалРасчета.Параметры.СоставительРеестра  = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
		ТабДокумент.Вывести(ПодвалРасчета);
                
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьЯчмень(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность1,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь1,
		|	ИНАГРО_РеестрТТНВвоз.СуммаНДС КАК СтоимостьНДС,
		|	ИНАГРО_РеестрТТНВвоз.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ;
    
    КультурыДогКонтрагента = Новый Запрос;
    КультурыДогКонтрагента.Текст =  
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовИНАГРО_Культуры.НомерСтроки КАК НомерСтроки,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Культура КАК ИНАГРО_Культура,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Собственное КАК ИНАГРО_Собственное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Переоформленное КАК ИНАГРО_Переоформленное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Тоннаж КАК ИНАГРО_Тоннаж,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Цена КАК ИНАГРО_Цена
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ИНАГРО_Культуры КАК ДоговорыКонтрагентовИНАГРО_Культуры
		|		ПО ИНАГРО_РеестрТТНВвоз.Ссылка = ДоговорыКонтрагентовИНАГРО_Культуры.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ;
    
    ЛабораторныйАназиз = Новый Запрос;
    ЛабораторныйАназиз.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ; 
    
    Услуги = Новый Запрос;
    Услуги.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозУслуги.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозУслуги.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвозУслуги.Количество КАК Количество,
		|	ИНАГРО_РеестрТТНВвозУслуги.Цена КАК Цена,
		|	ИНАГРО_РеестрТТНВвозУслуги.Сумма КАК Сумма
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.Услуги КАК ИНАГРО_РеестрТТНВвозУслуги
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозУслуги.Ссылка = &ТекущийДокумент" ;
       
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.Ячмень";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Ячмень");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        КультурыДогКонтрагента.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧКультурыДогКонтрагента = КультурыДогКонтрагента.Выполнить().Выгрузить();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧСписокТТН = СписокТТН.Выполнить().Выгрузить();

        ЛабораторныйАназиз.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧРезультатЛабораторныйАназиз = ЛабораторныйАназиз.Выполнить().Выгрузить();
        
        Услуги.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧУслуги = Услуги.Выполнить().Выгрузить();

        Руководители    = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
		НомерДок        = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
        ОблИтог             = Макет.ПолучитьОбласть("Итог");
        ОблШапкаДоставки    = Макет.ПолучитьОбласть("ШапкаДоставки");
        ОблСтрокаДоставки   = Макет.ПолучитьОбласть("СтрокаДоставки");
        ОблДно              = Макет.ПолучитьОбласть("Дно");
        ТаблицаАнализа      = Макет.ПолучитьОбласть("ТаблицаАнализа");
        ТаблицаРасчета      = Макет.ПолучитьОбласть("ТаблицаРасчета");
        СтрокаТабРасчета    = Макет.ПолучитьОбласть("СтрокаТабРасчета");
        ПодвалРасчета       = Макет.ПолучитьОбласть("ПодвалРасчета");

		Шапка.Параметры.Фирма       = РезультатШапка.Организация.НаименованиеПолное;
		Шапка.Параметры.НомерДок    = НомерДок;
		Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
		Шапка.Параметры.ТМЦ         = РезультатШапка.Номенклатура.НаименованиеПолное;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);

		Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
			Шапка.Параметры.Регион = РезультатШапка.ПолеТок.Регион;
		КонецЕсли;
		
		Попытка
			НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
		Исключение
			НомерСК = "";
		КонецПопытки;	
		Шапка.Параметры.НомерСК = НомерСК;
		
		ТабДокумент.Вывести(Шапка);
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		Инд = 0;
		Пока ТЧСписокТТН.Количество() > Инд Цикл
			ОблСтрока.Параметры.НомерТТН1   = ТЧСписокТТН[Инд].НомерТТН;
			ОблСтрока.Параметры.Вес1        = ТЧСписокТТН[Инд].Вес;
			ОблСтрока.Параметры.НомерАвто1  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
			Инд = Инд + 1;
			Если ТЧСписокТТН.Количество() > Инд Тогда
				ОблСтрока.Параметры.НомерТТН2   = ТЧСписокТТН[Инд].НомерТТН;
				ОблСтрока.Параметры.Вес2        = ТЧСписокТТН[Инд].Вес;
				ОблСтрока.Параметры.НомерАвто2  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
				Инд = Инд + 1;
			КонецЕсли;
			ТабДокумент.Вывести(ОблСтрока);
			ОблСтрока.Параметры.НомерТТН1   = "";
			ОблСтрока.Параметры.Вес1        = "";
			ОблСтрока.Параметры.НомерТТН2   = "";
			ОблСтрока.Параметры.Вес2        = "";
			ОблСтрока.Параметры.НомерАвто1  = "";
			ОблСтрока.Параметры.НомерАвто2  = "";
		КонецЦикла;
		
		ОблИтог.Параметры.Всего = РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ОблИтог);
		
		ТабДокумент.Вывести(ОблШапкаДоставки);
		
		ОблСтрокаДоставки.Параметры.КоличествоДоставки  = РезультатШапка.КоличествоДоставки;
		ОблСтрокаДоставки.Параметры.ЦенаДоставки        = РезультатШапка.ЦенаДоставки;
		ОблСтрокаДоставки.Параметры.СтоимостьДоставки   = РезультатШапка.СтоимостьДоставки;
		ТабДокумент.Вывести(ОблСтрокаДоставки);
		
		ОблДно.Параметры.ФизВес         = РезультатШапка.ОбщийФизическийВес;
		ОблДно.Параметры.КолТТН         = ТЧСписокТТН.Количество();
		ОблДно.Параметры.ФизВесПропись  = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,РезультатШапка.ОбщийФизическийВес);
		ОблДно.Параметры.ЗавСкладом     = ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
		ОблДно.Параметры.НазваниеСкада  = РезультатШапка.Склад;
		ТабДокумент.Вывести(ОблДно);
		
		
		//ШапкаТаблицыАнализа
				
		ТаблицаАнализа.Параметры.Заполнить(РезультатШапка);
		
		ВидКультуры                             = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
		ЗначенияБазисов                         = ИНАГРО_Элеватор.ПолучитьБазисныеЗначения(ВидКультуры,РезультатШапка.Дата,РезультатШапка.Организация,РезультатШапка.Владелец, РезультатШапка.ДоговорКонтрагента, РезультатШапка.Склад);	
        ТаблицаАнализа.Параметры.НомерАнализа   = ?(РезультатШапка.НомерАнализа = "",РезультатШапка.ЛабораторныйАнализ.Номер,РезультатШапка.НомерАнализа);
        ТаблицаАнализа.Параметры.БазВлаж        = ЗначенияБазисов.Влажность;
		ТаблицаАнализа.Параметры.БазСорн        = ЗначенияБазисов.СорнаяПримесь;		
		ТаблицаАнализа.Параметры.НачальникВТЛ   = Руководители.НачальникВТЛ;		
        ТаблицаАнализа.Параметры.ЗерноваяПримесь  = РезультатШапка.ЗерноваяПримесь;
        // заполнение цвета, запаха и зараженности из ЛабАнализа
		Если ЗначениеЗаполнено(ТЧРезультатЛабораторныйАназиз) Тогда
			Для каждого СтрокаТабХар Из ТЧРезультатЛабораторныйАназиз Цикл			
				Если СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Натура Тогда
				ТаблицаАнализа.Параметры.Натура = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Белок Тогда
				ТаблицаАнализа.Параметры.Белок = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.МелкоеЗерно Тогда
				ТаблицаАнализа.Параметры.МелкоеЗерно = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда
				ТаблицаАнализа.Параметры.Цвет = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда
				ТаблицаАнализа.Параметры.Запах = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда
				ТаблицаАнализа.Параметры.Зараженность = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПроросшихЗерен Тогда
				ТаблицаАнализа.Параметры.ПроросшееЗерно = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Крупность Тогда
				ТаблицаАнализа.Параметры.Крупность = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЖизнеУстойчивость Тогда
				ТаблицаАнализа.Параметры.Жизнеспособность = СтрокаТабХар.Значение;
			КонецЕсли;
			КонецЦикла; 
		КонецЕсли;
		
		ТаблицаАнализа.Параметры.СкидкаВлажность    = РезультатШапка.НатСкидкаВлажность;
		ТаблицаАнализа.Параметры.СкидкаСор          = РезультатШапка.НатСкидкаСорнаяПримесь; 
		
		ТабДокумент.Вывести(ТаблицаАнализа);	
		
		//ТаблицаРасчета
		ТаблицаРасчета.Параметры.ФизическийВес      = РезультатШапка.ОбщийФизическийВес;
		ТаблицаРасчета.Параметры.ЗачетныйВес        = РезультатШапка.ЗачетныйВес;
		ТаблицаРасчета.Параметры.ПроцентЗачВесса    = 100-(РезультатШапка.НатСкидкаВлажность+РезультатШапка.НатСкидкаСорнаяПримесь);
		ЦенаЗаТону = 0;
		Для каждого СирДогКул из ТЧКультурыДогКонтрагента Цикл
			Если СирДогКул.ИНАГРО_Культура = ВидКультуры Тогда
				ЦенаЗаТону = СирДогКул.ИНАГРО_Цена;
			КонецЕсли;	
		КонецЦикла;	
		ТаблицаРасчета.Параметры.ЦенаЗаТону = ЦенаЗаТону;
		ТаблицаРасчета.Параметры.Сумма      = ЦенаЗаТону*РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ТаблицаРасчета);	
		
		СуммаУслуг=0;	
		Для каждого СтрокаУслуги Из ТЧУслуги Цикл  	
			СтрокаТабРасчета.Параметры.Номенклатура = СтрокаУслуги.Номенклатура;
			СтрокаТабРасчета.Параметры.Кол          = СтрокаУслуги.Количество;
			СтрокаТабРасчета.Параметры.Сумма        = Окр(СтрокаУслуги.Сумма/1.2,2);
			СтрокаТабРасчета.Параметры.Цена         = ?(СтрокаТабРасчета.Параметры.Кол = 0, 0, Окр(СтрокаТабРасчета.Параметры.Сумма / СтрокаТабРасчета.Параметры.Кол,2));
			СуммаУслуг                              = СуммаУслуг+СтрокаТабРасчета.Параметры.Сумма;
			ТабДокумент.Вывести(СтрокаТабРасчета);	
		КонецЦикла;
		
		//ПодвалРасчет
		ПодвалРасчета.Параметры.ИтогоНДС            = РезультатШапка.СтоимостьНДС;
		ПодвалРасчета.Параметры.ИтогоСНДС           = ТЧУслуги.Итог("Сумма");
		ПодвалРасчета.Параметры.ИтогоНачислено      = ПодвалРасчета.Параметры.ИтогоСНДС - ПодвалРасчета.Параметры.ИтогоНДС;
		ПодвалРасчета.Параметры.СоставительРеестра  = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
		ТабДокумент.Вывести(ПодвалРасчета);
                
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьПшеница(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность1,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь1,
		|	ИНАГРО_РеестрТТНВвоз.СуммаНДС КАК СтоимостьНДС,
		|	ИНАГРО_РеестрТТНВвоз.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ;
    
    КультурыДогКонтрагента = Новый Запрос;
    КультурыДогКонтрагента.Текст =  
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовИНАГРО_Культуры.НомерСтроки КАК НомерСтроки,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Культура КАК ИНАГРО_Культура,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Собственное КАК ИНАГРО_Собственное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Переоформленное КАК ИНАГРО_Переоформленное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Тоннаж КАК ИНАГРО_Тоннаж,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Цена КАК ИНАГРО_Цена
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ИНАГРО_Культуры КАК ДоговорыКонтрагентовИНАГРО_Культуры
		|		ПО ИНАГРО_РеестрТТНВвоз.Ссылка = ДоговорыКонтрагентовИНАГРО_Культуры.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ;
    
    ЛабораторныйАназиз = Новый Запрос;
    ЛабораторныйАназиз.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ; 
    
    Услуги = Новый Запрос;
    Услуги.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозУслуги.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозУслуги.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвозУслуги.Количество КАК Количество,
		|	ИНАГРО_РеестрТТНВвозУслуги.Цена КАК Цена,
		|	ИНАГРО_РеестрТТНВвозУслуги.Сумма КАК Сумма
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.Услуги КАК ИНАГРО_РеестрТТНВвозУслуги
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозУслуги.Ссылка = &ТекущийДокумент" ;
       
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.Пшеница";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Пшеница");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        КультурыДогКонтрагента.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧКультурыДогКонтрагента = КультурыДогКонтрагента.Выполнить().Выгрузить();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧСписокТТН = СписокТТН.Выполнить().Выгрузить();

        ЛабораторныйАназиз.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧРезультатЛабораторныйАназиз = ЛабораторныйАназиз.Выполнить().Выгрузить();
        
        Услуги.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧУслуги = Услуги.Выполнить().Выгрузить();

        Руководители    = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
		НомерДок        = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
        ОблИтог             = Макет.ПолучитьОбласть("Итог");
        ОблШапкаДоставки    = Макет.ПолучитьОбласть("ШапкаДоставки");
        ОблСтрокаДоставки   = Макет.ПолучитьОбласть("СтрокаДоставки");
        ОблДно              = Макет.ПолучитьОбласть("Дно");
        ТаблицаАнализа      = Макет.ПолучитьОбласть("ТаблицаАнализа");
        ТаблицаРасчета      = Макет.ПолучитьОбласть("ТаблицаРасчета");
        СтрокаТабРасчета    = Макет.ПолучитьОбласть("СтрокаТабРасчета");
        ПодвалРасчета       = Макет.ПолучитьОбласть("ПодвалРасчета");

		Шапка.Параметры.Фирма       = РезультатШапка.Организация.НаименованиеПолное;
		Шапка.Параметры.НомерДок    = НомерДок;
		Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
		Шапка.Параметры.ТМЦ         = РезультатШапка.Номенклатура.НаименованиеПолное;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);

		Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
			Шапка.Параметры.Регион = РезультатШапка.ПолеТок.Регион;
		КонецЕсли;
		
		Попытка
			НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
		Исключение
			НомерСК = "";
		КонецПопытки;	
		Шапка.Параметры.НомерСК = НомерСК;
		
		ТабДокумент.Вывести(Шапка);
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		Инд = 0;
		Пока ТЧСписокТТН.Количество() > Инд Цикл
			ОблСтрока.Параметры.НомерТТН1   = ТЧСписокТТН[Инд].НомерТТН;
			ОблСтрока.Параметры.Вес1        = ТЧСписокТТН[Инд].Вес;
			ОблСтрока.Параметры.НомерАвто1  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
			Инд = Инд + 1;
			Если ТЧСписокТТН.Количество() > Инд Тогда
				ОблСтрока.Параметры.НомерТТН2   = ТЧСписокТТН[Инд].НомерТТН;
				ОблСтрока.Параметры.Вес2        = ТЧСписокТТН[Инд].Вес;
				ОблСтрока.Параметры.НомерАвто2  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
				Инд = Инд + 1;
			КонецЕсли;
			ТабДокумент.Вывести(ОблСтрока);
			ОблСтрока.Параметры.НомерТТН1   = "";
			ОблСтрока.Параметры.Вес1        = "";
			ОблСтрока.Параметры.НомерТТН2   = "";
			ОблСтрока.Параметры.Вес2        = "";
			ОблСтрока.Параметры.НомерАвто1  = "";
			ОблСтрока.Параметры.НомерАвто2  = "";
		КонецЦикла;
		
		ОблИтог.Параметры.Всего = РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ОблИтог);
		
		ТабДокумент.Вывести(ОблШапкаДоставки);
		
		ОблСтрокаДоставки.Параметры.КоличествоДоставки  = РезультатШапка.КоличествоДоставки;
		ОблСтрокаДоставки.Параметры.ЦенаДоставки        = РезультатШапка.ЦенаДоставки;
		ОблСтрокаДоставки.Параметры.СтоимостьДоставки   = РезультатШапка.СтоимостьДоставки;
		ТабДокумент.Вывести(ОблСтрокаДоставки);
		
		ОблДно.Параметры.ФизВес         = РезультатШапка.ОбщийФизическийВес;
		ОблДно.Параметры.КолТТН         = ТЧСписокТТН.Количество();
		ОблДно.Параметры.ФизВесПропись  = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,РезультатШапка.ОбщийФизическийВес);
		ОблДно.Параметры.ЗавСкладом     = ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
		ОблДно.Параметры.НазваниеСкада  = РезультатШапка.Склад;
		ТабДокумент.Вывести(ОблДно);
		
		
		//ШапкаТаблицыАнализа
				
		ТаблицаАнализа.Параметры.Заполнить(РезультатШапка);
		
		ВидКультуры                             = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
		ЗначенияБазисов                         = ИНАГРО_Элеватор.ПолучитьБазисныеЗначения(ВидКультуры,РезультатШапка.Дата,РезультатШапка.Организация,РезультатШапка.Владелец, РезультатШапка.ДоговорКонтрагента, РезультатШапка.Склад);	
        ТаблицаАнализа.Параметры.НомерАнализа   = ?(РезультатШапка.НомерАнализа = "",РезультатШапка.ЛабораторныйАнализ.Номер,РезультатШапка.НомерАнализа);
        ТаблицаАнализа.Параметры.БазВлаж        = ЗначенияБазисов.Влажность;
		ТаблицаАнализа.Параметры.БазСорн        = ЗначенияБазисов.СорнаяПримесь;		
		ТаблицаАнализа.Параметры.НачальникВТЛ   = Руководители.НачальникВТЛ;		
        ТаблицаАнализа.Параметры.ЗерноваяПримесь  = РезультатШапка.ЗерноваяПримесь;
        // заполнение цвета, запаха и зараженности из ЛабАнализа
        Если ЗначениеЗаполнено(ТЧРезультатЛабораторныйАназиз) Тогда
            Для каждого СтрокаТабХар Из ТЧРезультатЛабораторныйАназиз Цикл			
                Если СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Натура Тогда
                    ТаблицаАнализа.Параметры.Натура = СтрокаТабХар.Значение;
                ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Белок Тогда
                    ТаблицаАнализа.Параметры.Белок = СтрокаТабХар.Значение;
                ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда
                    ТаблицаАнализа.Параметры.Цвет = СтрокаТабХар.Значение;
                ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда
                    ТаблицаАнализа.Параметры.Запах = СтрокаТабХар.Значение;
                ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда
                    ТаблицаАнализа.Параметры.Зараженность = СтрокаТабХар.Значение;
                ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПроросшихЗерен Тогда
                    ТаблицаАнализа.Параметры.ПроросшееЗерно = СтрокаТабХар.Значение;
                ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЧислоПадения Тогда
                    ТаблицаАнализа.Параметры.ЧислоПадения = СтрокаТабХар.Значение;
                ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКоличество Тогда
                    ТаблицаАнализа.Параметры.КлейковинаКоличество = СтрокаТабХар.Значение;
                ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКачество Тогда
                    ТаблицаАнализа.Параметры.КлейковинаКачество = СтрокаТабХар.Значение;
                ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Стекловидность Тогда
                    ТаблицаАнализа.Параметры.Стекловидность = СтрокаТабХар.Значение;
                ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлопЧерепашки Тогда
                    ТаблицаАнализа.Параметры.КлопЧерепашки = СтрокаТабХар.Значение;
                КонецЕсли;
            КонецЦикла; 
        КонецЕсли;
		
		ТаблицаАнализа.Параметры.СкидкаВлажность    = РезультатШапка.НатСкидкаВлажность;
		ТаблицаАнализа.Параметры.СкидкаСор          = РезультатШапка.НатСкидкаСорнаяПримесь; 
		
		ТабДокумент.Вывести(ТаблицаАнализа);	
		
		//ТаблицаРасчета
		ТаблицаРасчета.Параметры.ФизическийВес      = РезультатШапка.ОбщийФизическийВес;
		ТаблицаРасчета.Параметры.ЗачетныйВес        = РезультатШапка.ЗачетныйВес;
		ТаблицаРасчета.Параметры.ПроцентЗачВесса    = 100-(РезультатШапка.НатСкидкаВлажность+РезультатШапка.НатСкидкаСорнаяПримесь);
		ЦенаЗаТону = 0;
		Для каждого СирДогКул из ТЧКультурыДогКонтрагента Цикл
			Если СирДогКул.ИНАГРО_Культура = ВидКультуры Тогда
				ЦенаЗаТону = СирДогКул.ИНАГРО_Цена;
			КонецЕсли;	
		КонецЦикла;	
		ТаблицаРасчета.Параметры.ЦенаЗаТону = ЦенаЗаТону;
		ТаблицаРасчета.Параметры.Сумма      = ЦенаЗаТону*РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ТаблицаРасчета);	
		
		СуммаУслуг=0;	
		Для каждого СтрокаУслуги Из ТЧУслуги Цикл  	
			СтрокаТабРасчета.Параметры.Номенклатура = СтрокаУслуги.Номенклатура;
			СтрокаТабРасчета.Параметры.Кол          = СтрокаУслуги.Количество;
			СтрокаТабРасчета.Параметры.Сумма        = Окр(СтрокаУслуги.Сумма/1.2,2);
			СтрокаТабРасчета.Параметры.Цена         = ?(СтрокаТабРасчета.Параметры.Кол = 0, 0, Окр(СтрокаТабРасчета.Параметры.Сумма / СтрокаТабРасчета.Параметры.Кол,2));
			СуммаУслуг                              = СуммаУслуг+СтрокаТабРасчета.Параметры.Сумма;
			ТабДокумент.Вывести(СтрокаТабРасчета);	
		КонецЦикла;
		
		//ПодвалРасчет
		ПодвалРасчета.Параметры.ИтогоНДС            = РезультатШапка.СтоимостьНДС;
		ПодвалРасчета.Параметры.ИтогоСНДС           = ТЧУслуги.Итог("Сумма");
		ПодвалРасчета.Параметры.ИтогоНачислено      = ПодвалРасчета.Параметры.ИтогоСНДС - ПодвалРасчета.Параметры.ИтогоНДС;
		ПодвалРасчета.Параметры.СоставительРеестра  = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
		ТабДокумент.Вывести(ПодвалРасчета);
                
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьГорчица(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность1,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь1,
		|	ИНАГРО_РеестрТТНВвоз.СуммаНДС КАК СтоимостьНДС,
		|	ИНАГРО_РеестрТТНВвоз.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ;
    
    КультурыДогКонтрагента = Новый Запрос;
    КультурыДогКонтрагента.Текст =  
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовИНАГРО_Культуры.НомерСтроки КАК НомерСтроки,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Культура КАК ИНАГРО_Культура,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Собственное КАК ИНАГРО_Собственное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Переоформленное КАК ИНАГРО_Переоформленное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Тоннаж КАК ИНАГРО_Тоннаж,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Цена КАК ИНАГРО_Цена
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ИНАГРО_Культуры КАК ДоговорыКонтрагентовИНАГРО_Культуры
		|		ПО ИНАГРО_РеестрТТНВвоз.Ссылка = ДоговорыКонтрагентовИНАГРО_Культуры.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ;
    
    ЛабораторныйАназиз = Новый Запрос;
    ЛабораторныйАназиз.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ; 
    
    Услуги = Новый Запрос;
    Услуги.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозУслуги.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозУслуги.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвозУслуги.Количество КАК Количество,
		|	ИНАГРО_РеестрТТНВвозУслуги.Цена КАК Цена,
		|	ИНАГРО_РеестрТТНВвозУслуги.Сумма КАК Сумма
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.Услуги КАК ИНАГРО_РеестрТТНВвозУслуги
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозУслуги.Ссылка = &ТекущийДокумент" ;
       
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.Горчица";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Горчица");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        КультурыДогКонтрагента.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧКультурыДогКонтрагента = КультурыДогКонтрагента.Выполнить().Выгрузить();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧСписокТТН = СписокТТН.Выполнить().Выгрузить();

        ЛабораторныйАназиз.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧРезультатЛабораторныйАназиз = ЛабораторныйАназиз.Выполнить().Выгрузить();
        
        Услуги.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧУслуги = Услуги.Выполнить().Выгрузить();

        Руководители    = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
		НомерДок        = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
        ОблИтог             = Макет.ПолучитьОбласть("Итог");
        ОблШапкаДоставки    = Макет.ПолучитьОбласть("ШапкаДоставки");
        ОблСтрокаДоставки   = Макет.ПолучитьОбласть("СтрокаДоставки");
        ОблДно              = Макет.ПолучитьОбласть("Дно");
        ТаблицаАнализа      = Макет.ПолучитьОбласть("ТаблицаАнализа");
        ТаблицаРасчета      = Макет.ПолучитьОбласть("ТаблицаРасчета");
        СтрокаТабРасчета    = Макет.ПолучитьОбласть("СтрокаТабРасчета");
        ПодвалРасчета       = Макет.ПолучитьОбласть("ПодвалРасчета");

		Шапка.Параметры.Фирма       = РезультатШапка.Организация.НаименованиеПолное;
		Шапка.Параметры.НомерДок    = НомерДок;
		Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
		Шапка.Параметры.ТМЦ         = РезультатШапка.Номенклатура.НаименованиеПолное;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);

		Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
			Шапка.Параметры.Регион = РезультатШапка.ПолеТок.Регион;
		КонецЕсли;
		
		Попытка
			НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
		Исключение
			НомерСК = "";
		КонецПопытки;	
		Шапка.Параметры.НомерСК = НомерСК;
		
		ТабДокумент.Вывести(Шапка);
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		Инд = 0;
		Пока ТЧСписокТТН.Количество() > Инд Цикл
			ОблСтрока.Параметры.НомерТТН1   = ТЧСписокТТН[Инд].НомерТТН;
			ОблСтрока.Параметры.Вес1        = ТЧСписокТТН[Инд].Вес;
			ОблСтрока.Параметры.НомерАвто1  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
			Инд = Инд + 1;
			Если ТЧСписокТТН.Количество() > Инд Тогда
				ОблСтрока.Параметры.НомерТТН2   = ТЧСписокТТН[Инд].НомерТТН;
				ОблСтрока.Параметры.Вес2        = ТЧСписокТТН[Инд].Вес;
				ОблСтрока.Параметры.НомерАвто2  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
				Инд = Инд + 1;
			КонецЕсли;
			ТабДокумент.Вывести(ОблСтрока);
			ОблСтрока.Параметры.НомерТТН1   = "";
			ОблСтрока.Параметры.Вес1        = "";
			ОблСтрока.Параметры.НомерТТН2   = "";
			ОблСтрока.Параметры.Вес2        = "";
			ОблСтрока.Параметры.НомерАвто1  = "";
			ОблСтрока.Параметры.НомерАвто2  = "";
		КонецЦикла;
		
		ОблИтог.Параметры.Всего = РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ОблИтог);
		
		ТабДокумент.Вывести(ОблШапкаДоставки);
		
		ОблСтрокаДоставки.Параметры.КоличествоДоставки  = РезультатШапка.КоличествоДоставки;
		ОблСтрокаДоставки.Параметры.ЦенаДоставки        = РезультатШапка.ЦенаДоставки;
		ОблСтрокаДоставки.Параметры.СтоимостьДоставки   = РезультатШапка.СтоимостьДоставки;
		ТабДокумент.Вывести(ОблСтрокаДоставки);
		
		ОблДно.Параметры.ФизВес         = РезультатШапка.ОбщийФизическийВес;
		ОблДно.Параметры.КолТТН         = ТЧСписокТТН.Количество();
		ОблДно.Параметры.ФизВесПропись  = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,РезультатШапка.ОбщийФизическийВес);
		ОблДно.Параметры.ЗавСкладом     = ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
		ОблДно.Параметры.НазваниеСкада  = РезультатШапка.Склад;
		ТабДокумент.Вывести(ОблДно);
		
		
		//ШапкаТаблицыАнализа
				
		ТаблицаАнализа.Параметры.Заполнить(РезультатШапка);
		
		ВидКультуры                             = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
		ЗначенияБазисов                         = ИНАГРО_Элеватор.ПолучитьБазисныеЗначения(ВидКультуры,РезультатШапка.Дата,РезультатШапка.Организация,РезультатШапка.Владелец, РезультатШапка.ДоговорКонтрагента, РезультатШапка.Склад);	
        ТаблицаАнализа.Параметры.НомерАнализа   = ?(РезультатШапка.НомерАнализа = "",РезультатШапка.ЛабораторныйАнализ.Номер,РезультатШапка.НомерАнализа);
        ТаблицаАнализа.Параметры.БазВлаж        = ЗначенияБазисов.Влажность;
		ТаблицаАнализа.Параметры.БазСорн        = ЗначенияБазисов.СорнаяПримесь;		
		ТаблицаАнализа.Параметры.НачальникВТЛ   = Руководители.НачальникВТЛ;
        ТаблицаАнализа.Параметры.ОлейнаяПримесь = РезультатШапка.ЗерноваяПримесь;
        // заполнение цвета, запаха и зараженности из ЛабАнализа
        Если ЗначениеЗаполнено(ТЧРезультатЛабораторныйАназиз) Тогда
            Для каждого СтрокаТаблицы Из ТЧРезультатЛабораторныйАназиз Цикл			
               Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда 
					ТаблицаАнализа.Параметры.Цвет = СтрокаТаблицы.Значение;
				КонецЕсли;
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда 
					ТаблицаАнализа.Параметры.Запах = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда 
					ТаблицаАнализа.Параметры.Зараженность = СтрокаТаблицы.Значение;
				КонецЕсли;
            КонецЦикла; 
        КонецЕсли;
		
		ТаблицаАнализа.Параметры.НатСкидкаВлажность    = РезультатШапка.НатСкидкаВлажность;
		ТаблицаАнализа.Параметры.НатСкидкаСорнаяПримесь          = РезультатШапка.НатСкидкаСорнаяПримесь; 
		
		ТабДокумент.Вывести(ТаблицаАнализа);	
		
		//ТаблицаРасчета
		ТаблицаРасчета.Параметры.ФизическийВес      = РезультатШапка.ОбщийФизическийВес;
		ТаблицаРасчета.Параметры.ЗачетныйВес        = РезультатШапка.ЗачетныйВес;
		ТаблицаРасчета.Параметры.ПроцентЗачВесса    = 100-(РезультатШапка.НатСкидкаВлажность+РезультатШапка.НатСкидкаСорнаяПримесь);
		ЦенаЗаТону = 0;
		Для каждого СирДогКул из ТЧКультурыДогКонтрагента Цикл
			Если СирДогКул.ИНАГРО_Культура = ВидКультуры Тогда
				ЦенаЗаТону = СирДогКул.ИНАГРО_Цена;
			КонецЕсли;	
		КонецЦикла;	
		ТаблицаРасчета.Параметры.ЦенаЗаТону = ЦенаЗаТону;
		ТаблицаРасчета.Параметры.Сумма      = ЦенаЗаТону*РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ТаблицаРасчета);	
		
		СуммаУслуг=0;	
		Для каждого СтрокаУслуги Из ТЧУслуги Цикл  	
			СтрокаТабРасчета.Параметры.Номенклатура = СтрокаУслуги.Номенклатура;
			СтрокаТабРасчета.Параметры.Кол          = СтрокаУслуги.Количество;
			СтрокаТабРасчета.Параметры.Сумма        = Окр(СтрокаУслуги.Сумма/1.2,2);
			СтрокаТабРасчета.Параметры.Цена         = ?(СтрокаТабРасчета.Параметры.Кол = 0, 0, Окр(СтрокаТабРасчета.Параметры.Сумма / СтрокаТабРасчета.Параметры.Кол,2));
			СуммаУслуг                              = СуммаУслуг+СтрокаТабРасчета.Параметры.Сумма;
			ТабДокумент.Вывести(СтрокаТабРасчета);	
		КонецЦикла;
		
		//ПодвалРасчет
		ПодвалРасчета.Параметры.ИтогоНДС            = РезультатШапка.СтоимостьНДС;
		ПодвалРасчета.Параметры.ИтогоСНДС           = ТЧУслуги.Итог("Сумма");
		ПодвалРасчета.Параметры.ИтогоНачислено      = ПодвалРасчета.Параметры.ИтогоСНДС - ПодвалРасчета.Параметры.ИтогоНДС;
		ПодвалРасчета.Параметры.СоставительРеестра  = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
		ТабДокумент.Вывести(ПодвалРасчета);
                
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьПросо(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность1,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь1,
		|	ИНАГРО_РеестрТТНВвоз.СуммаНДС КАК СтоимостьНДС,
		|	ИНАГРО_РеестрТТНВвоз.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ;
    
    КультурыДогКонтрагента = Новый Запрос;
    КультурыДогКонтрагента.Текст =  
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовИНАГРО_Культуры.НомерСтроки КАК НомерСтроки,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Культура КАК ИНАГРО_Культура,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Собственное КАК ИНАГРО_Собственное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Переоформленное КАК ИНАГРО_Переоформленное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Тоннаж КАК ИНАГРО_Тоннаж,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Цена КАК ИНАГРО_Цена
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ИНАГРО_Культуры КАК ДоговорыКонтрагентовИНАГРО_Культуры
		|		ПО ИНАГРО_РеестрТТНВвоз.Ссылка = ДоговорыКонтрагентовИНАГРО_Культуры.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ;
    
    ЛабораторныйАназиз = Новый Запрос;
    ЛабораторныйАназиз.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ; 
    
    Услуги = Новый Запрос;
    Услуги.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозУслуги.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозУслуги.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвозУслуги.Количество КАК Количество,
		|	ИНАГРО_РеестрТТНВвозУслуги.Цена КАК Цена,
		|	ИНАГРО_РеестрТТНВвозУслуги.Сумма КАК Сумма
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.Услуги КАК ИНАГРО_РеестрТТНВвозУслуги
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозУслуги.Ссылка = &ТекущийДокумент" ;
       
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.Просо";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Просо");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        КультурыДогКонтрагента.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧКультурыДогКонтрагента = КультурыДогКонтрагента.Выполнить().Выгрузить();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧСписокТТН = СписокТТН.Выполнить().Выгрузить();

        ЛабораторныйАназиз.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧРезультатЛабораторныйАназиз = ЛабораторныйАназиз.Выполнить().Выгрузить();
        
        Услуги.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧУслуги = Услуги.Выполнить().Выгрузить();

        Руководители    = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
		НомерДок        = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
        ОблИтог             = Макет.ПолучитьОбласть("Итог");
        ОблШапкаДоставки    = Макет.ПолучитьОбласть("ШапкаДоставки");
        ОблСтрокаДоставки   = Макет.ПолучитьОбласть("СтрокаДоставки");
        ОблДно              = Макет.ПолучитьОбласть("Дно");
        ТаблицаАнализа      = Макет.ПолучитьОбласть("ТаблицаАнализа");
        ТаблицаРасчета      = Макет.ПолучитьОбласть("ТаблицаРасчета");
        СтрокаТабРасчета    = Макет.ПолучитьОбласть("СтрокаТабРасчета");
        ПодвалРасчета       = Макет.ПолучитьОбласть("ПодвалРасчета");

		Шапка.Параметры.Фирма       = РезультатШапка.Организация.НаименованиеПолное;
		Шапка.Параметры.НомерДок    = НомерДок;
		Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
		Шапка.Параметры.ТМЦ         = РезультатШапка.Номенклатура.НаименованиеПолное;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);

		Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
			Шапка.Параметры.Регион = РезультатШапка.ПолеТок.Регион;
		КонецЕсли;
		
		Попытка
			НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
		Исключение
			НомерСК = "";
		КонецПопытки;	
		Шапка.Параметры.НомерСК = НомерСК;
		
		ТабДокумент.Вывести(Шапка);
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		Инд = 0;
		Пока ТЧСписокТТН.Количество() > Инд Цикл
			ОблСтрока.Параметры.НомерТТН1   = ТЧСписокТТН[Инд].НомерТТН;
			ОблСтрока.Параметры.Вес1        = ТЧСписокТТН[Инд].Вес;
			ОблСтрока.Параметры.НомерАвто1  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
			Инд = Инд + 1;
			Если ТЧСписокТТН.Количество() > Инд Тогда
				ОблСтрока.Параметры.НомерТТН2   = ТЧСписокТТН[Инд].НомерТТН;
				ОблСтрока.Параметры.Вес2        = ТЧСписокТТН[Инд].Вес;
				ОблСтрока.Параметры.НомерАвто2  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
				Инд = Инд + 1;
			КонецЕсли;
			ТабДокумент.Вывести(ОблСтрока);
			ОблСтрока.Параметры.НомерТТН1   = "";
			ОблСтрока.Параметры.Вес1        = "";
			ОблСтрока.Параметры.НомерТТН2   = "";
			ОблСтрока.Параметры.Вес2        = "";
			ОблСтрока.Параметры.НомерАвто1  = "";
			ОблСтрока.Параметры.НомерАвто2  = "";
		КонецЦикла;
		
		ОблИтог.Параметры.Всего = РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ОблИтог);
		
		ТабДокумент.Вывести(ОблШапкаДоставки);
		
		ОблСтрокаДоставки.Параметры.КоличествоДоставки  = РезультатШапка.КоличествоДоставки;
		ОблСтрокаДоставки.Параметры.ЦенаДоставки        = РезультатШапка.ЦенаДоставки;
		ОблСтрокаДоставки.Параметры.СтоимостьДоставки   = РезультатШапка.СтоимостьДоставки;
		ТабДокумент.Вывести(ОблСтрокаДоставки);
		
		ОблДно.Параметры.ФизВес         = РезультатШапка.ОбщийФизическийВес;
		ОблДно.Параметры.КолТТН         = ТЧСписокТТН.Количество();
		ОблДно.Параметры.ФизВесПропись  = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,РезультатШапка.ОбщийФизическийВес);
		ОблДно.Параметры.ЗавСкладом     = ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
		ОблДно.Параметры.НазваниеСкада  = РезультатШапка.Склад;
		ТабДокумент.Вывести(ОблДно);
		
		
		//ШапкаТаблицыАнализа
				
		ТаблицаАнализа.Параметры.Заполнить(РезультатШапка);
		
		ВидКультуры                             = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
		ЗначенияБазисов                         = ИНАГРО_Элеватор.ПолучитьБазисныеЗначения(ВидКультуры,РезультатШапка.Дата,РезультатШапка.Организация,РезультатШапка.Владелец, РезультатШапка.ДоговорКонтрагента, РезультатШапка.Склад);	
        ТаблицаАнализа.Параметры.НомерАнализа   = ?(РезультатШапка.НомерАнализа = "",РезультатШапка.ЛабораторныйАнализ.Номер,РезультатШапка.НомерАнализа);
        ТаблицаАнализа.Параметры.БазВлаж        = ЗначенияБазисов.Влажность;
		ТаблицаАнализа.Параметры.БазСорн        = ЗначенияБазисов.СорнаяПримесь;		
		ТаблицаАнализа.Параметры.НачальникВТЛ   = Руководители.НачальникВТЛ;
        ТаблицаАнализа.Параметры.ЗерноваяПримесь = РезультатШапка.ЗерноваяПримесь;

        // заполнение цвета, запаха и зараженности из ЛабАнализа
        Для каждого СтрокаТабХар Из ТЧРезультатЛабораторныйАназиз Цикл
			Если СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Ядро Тогда
				ТаблицаАнализа.Параметры.Ядро = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда
				ТаблицаАнализа.Параметры.Цвет = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда
				ТаблицаАнализа.Параметры.Запах = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда
				ТаблицаАнализа.Параметры.Зараженность = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПроросшихЗерен Тогда
				ТаблицаАнализа.Параметры.ПроросшееЗерно = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Крупность Тогда
				ТаблицаАнализа.Параметры.Крупность = СтрокаТабХар.Значение;
			КонецЕсли;
		КонецЦикла; 
		
		ТаблицаАнализа.Параметры.СкидкаВлажность    = РезультатШапка.НатСкидкаВлажность;
		ТаблицаАнализа.Параметры.СкидкаСор          = РезультатШапка.НатСкидкаСорнаяПримесь; 
		
		ТабДокумент.Вывести(ТаблицаАнализа);	
		
		//ТаблицаРасчета
		ТаблицаРасчета.Параметры.ФизическийВес      = РезультатШапка.ОбщийФизическийВес;
		ТаблицаРасчета.Параметры.ЗачетныйВес        = РезультатШапка.ЗачетныйВес;
		ТаблицаРасчета.Параметры.ПроцентЗачВесса    = 100-(РезультатШапка.НатСкидкаВлажность+РезультатШапка.НатСкидкаСорнаяПримесь);
		ЦенаЗаТону = 0;
		Для каждого СирДогКул из ТЧКультурыДогКонтрагента Цикл
			Если СирДогКул.ИНАГРО_Культура = ВидКультуры Тогда
				ЦенаЗаТону = СирДогКул.ИНАГРО_Цена;
			КонецЕсли;	
		КонецЦикла;	
		ТаблицаРасчета.Параметры.ЦенаЗаТону = ЦенаЗаТону;
		ТаблицаРасчета.Параметры.Сумма      = ЦенаЗаТону*РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ТаблицаРасчета);	
		
		СуммаУслуг=0;	
		Для каждого СтрокаУслуги Из ТЧУслуги Цикл  	
			СтрокаТабРасчета.Параметры.Номенклатура = СтрокаУслуги.Номенклатура;
			СтрокаТабРасчета.Параметры.Кол          = СтрокаУслуги.Количество;
			СтрокаТабРасчета.Параметры.Сумма        = Окр(СтрокаУслуги.Сумма/1.2,2);
			СтрокаТабРасчета.Параметры.Цена         = ?(СтрокаТабРасчета.Параметры.Кол = 0, 0, Окр(СтрокаТабРасчета.Параметры.Сумма / СтрокаТабРасчета.Параметры.Кол,2));
			СуммаУслуг                              = СуммаУслуг+СтрокаТабРасчета.Параметры.Сумма;
			ТабДокумент.Вывести(СтрокаТабРасчета);	
		КонецЦикла;
		
		//ПодвалРасчет
		ПодвалРасчета.Параметры.ИтогоНДС            = РезультатШапка.СтоимостьНДС;
		ПодвалРасчета.Параметры.ИтогоСНДС           = ТЧУслуги.Итог("Сумма");
		ПодвалРасчета.Параметры.ИтогоНачислено      = ПодвалРасчета.Параметры.ИтогоСНДС - ПодвалРасчета.Параметры.ИтогоНДС;
		ПодвалРасчета.Параметры.СоставительРеестра  = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
		ТабДокумент.Вывести(ПодвалРасчета);
                
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьКориандр(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность1,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь1,
		|	ИНАГРО_РеестрТТНВвоз.СуммаНДС КАК СтоимостьНДС,
		|	ИНАГРО_РеестрТТНВвоз.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ;
    
    КультурыДогКонтрагента = Новый Запрос;
    КультурыДогКонтрагента.Текст =  
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовИНАГРО_Культуры.НомерСтроки КАК НомерСтроки,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Культура КАК ИНАГРО_Культура,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Собственное КАК ИНАГРО_Собственное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Переоформленное КАК ИНАГРО_Переоформленное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Тоннаж КАК ИНАГРО_Тоннаж,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Цена КАК ИНАГРО_Цена
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ИНАГРО_Культуры КАК ДоговорыКонтрагентовИНАГРО_Культуры
		|		ПО ИНАГРО_РеестрТТНВвоз.Ссылка = ДоговорыКонтрагентовИНАГРО_Культуры.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ;
    
    ЛабораторныйАназиз = Новый Запрос;
    ЛабораторныйАназиз.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ; 
    
    Услуги = Новый Запрос;
    Услуги.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозУслуги.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозУслуги.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвозУслуги.Количество КАК Количество,
		|	ИНАГРО_РеестрТТНВвозУслуги.Цена КАК Цена,
		|	ИНАГРО_РеестрТТНВвозУслуги.Сумма КАК Сумма
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.Услуги КАК ИНАГРО_РеестрТТНВвозУслуги
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозУслуги.Ссылка = &ТекущийДокумент" ;
       
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.Кориандр";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Кориандр");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        КультурыДогКонтрагента.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧКультурыДогКонтрагента = КультурыДогКонтрагента.Выполнить().Выгрузить();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧСписокТТН = СписокТТН.Выполнить().Выгрузить();

        ЛабораторныйАназиз.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧРезультатЛабораторныйАназиз = ЛабораторныйАназиз.Выполнить().Выгрузить();
        
        Услуги.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧУслуги = Услуги.Выполнить().Выгрузить();

        Руководители    = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
		НомерДок        = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
        ОблИтог             = Макет.ПолучитьОбласть("Итог");
        ОблШапкаДоставки    = Макет.ПолучитьОбласть("ШапкаДоставки");
        ОблСтрокаДоставки   = Макет.ПолучитьОбласть("СтрокаДоставки");
        ОблДно              = Макет.ПолучитьОбласть("Дно");
        ТаблицаАнализа      = Макет.ПолучитьОбласть("ТаблицаАнализа");
        ТаблицаРасчета      = Макет.ПолучитьОбласть("ТаблицаРасчета");
        СтрокаТабРасчета    = Макет.ПолучитьОбласть("СтрокаТабРасчета");
        ПодвалРасчета       = Макет.ПолучитьОбласть("ПодвалРасчета");

		Шапка.Параметры.Фирма       = РезультатШапка.Организация.НаименованиеПолное;
		Шапка.Параметры.НомерДок    = НомерДок;
		Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
		Шапка.Параметры.ТМЦ         = РезультатШапка.Номенклатура.НаименованиеПолное;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);

		Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
			Шапка.Параметры.Регион = РезультатШапка.ПолеТок.Регион;
		КонецЕсли;
		
		Попытка
			НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
		Исключение
			НомерСК = "";
		КонецПопытки;	
		Шапка.Параметры.НомерСК = НомерСК;
		
		ТабДокумент.Вывести(Шапка);
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		Инд = 0;
		Пока ТЧСписокТТН.Количество() > Инд Цикл
			ОблСтрока.Параметры.НомерТТН1   = ТЧСписокТТН[Инд].НомерТТН;
			ОблСтрока.Параметры.Вес1        = ТЧСписокТТН[Инд].Вес;
			ОблСтрока.Параметры.НомерАвто1  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
			Инд = Инд + 1;
			Если ТЧСписокТТН.Количество() > Инд Тогда
				ОблСтрока.Параметры.НомерТТН2   = ТЧСписокТТН[Инд].НомерТТН;
				ОблСтрока.Параметры.Вес2        = ТЧСписокТТН[Инд].Вес;
				ОблСтрока.Параметры.НомерАвто2  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
				Инд = Инд + 1;
			КонецЕсли;
			ТабДокумент.Вывести(ОблСтрока);
			ОблСтрока.Параметры.НомерТТН1   = "";
			ОблСтрока.Параметры.Вес1        = "";
			ОблСтрока.Параметры.НомерТТН2   = "";
			ОблСтрока.Параметры.Вес2        = "";
			ОблСтрока.Параметры.НомерАвто1  = "";
			ОблСтрока.Параметры.НомерАвто2  = "";
		КонецЦикла;
		
		ОблИтог.Параметры.Всего = РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ОблИтог);
		
		ТабДокумент.Вывести(ОблШапкаДоставки);
		
		ОблСтрокаДоставки.Параметры.КоличествоДоставки  = РезультатШапка.КоличествоДоставки;
		ОблСтрокаДоставки.Параметры.ЦенаДоставки        = РезультатШапка.ЦенаДоставки;
		ОблСтрокаДоставки.Параметры.СтоимостьДоставки   = РезультатШапка.СтоимостьДоставки;
		ТабДокумент.Вывести(ОблСтрокаДоставки);
		
		ОблДно.Параметры.ФизВес         = РезультатШапка.ОбщийФизическийВес;
		ОблДно.Параметры.КолТТН         = ТЧСписокТТН.Количество();
		ОблДно.Параметры.ФизВесПропись  = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,РезультатШапка.ОбщийФизическийВес);
		ОблДно.Параметры.ЗавСкладом     = ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
		ОблДно.Параметры.НазваниеСкада  = РезультатШапка.Склад;
		ТабДокумент.Вывести(ОблДно);
		
		
		//ШапкаТаблицыАнализа
				
		ТаблицаАнализа.Параметры.Заполнить(РезультатШапка);
		
		ВидКультуры                             = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
		ЗначенияБазисов                         = ИНАГРО_Элеватор.ПолучитьБазисныеЗначения(ВидКультуры,РезультатШапка.Дата,РезультатШапка.Организация,РезультатШапка.Владелец, РезультатШапка.ДоговорКонтрагента, РезультатШапка.Склад);	
        ТаблицаАнализа.Параметры.НомерАнализа   = ?(РезультатШапка.НомерАнализа = "",РезультатШапка.ЛабораторныйАнализ.Номер,РезультатШапка.НомерАнализа);
        ТаблицаАнализа.Параметры.БазВлаж        = ЗначенияБазисов.Влажность;
		ТаблицаАнализа.Параметры.БазСорн        = ЗначенияБазисов.СорнаяПримесь;		
		ТаблицаАнализа.Параметры.НачальникВТЛ   = Руководители.НачальникВТЛ;
        
        Для каждого СтрокаТабХар Из ТЧРезультатЛабораторныйАназиз Цикл
			Если СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда
				ТаблицаАнализа.Параметры.Цвет = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда
				ТаблицаАнализа.Параметры.Запах = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда
				ТаблицаАнализа.Параметры.Зараженность = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Эфировая Тогда
				ТаблицаАнализа.Параметры.Эфировая = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПоврежденныхЗерен Тогда
				ТаблицаАнализа.Параметры.ПошкодженЗерен = СтрокаТабХар.Значение;
			КонецЕсли;

		КонецЦикла; 
		
		ТаблицаАнализа.Параметры.СкидкаВлажность    = РезультатШапка.НатСкидкаВлажность;
		ТаблицаАнализа.Параметры.СкидкаСор          = РезультатШапка.НатСкидкаСорнаяПримесь; 
		
		ТабДокумент.Вывести(ТаблицаАнализа);	
		
		//ТаблицаРасчета
		ТаблицаРасчета.Параметры.ФизическийВес      = РезультатШапка.ОбщийФизическийВес;
		ТаблицаРасчета.Параметры.ЗачетныйВес        = РезультатШапка.ЗачетныйВес;
		ТаблицаРасчета.Параметры.ПроцентЗачВесса    = 100-(РезультатШапка.НатСкидкаВлажность+РезультатШапка.НатСкидкаСорнаяПримесь);
		ЦенаЗаТону = 0;
		Для каждого СирДогКул из ТЧКультурыДогКонтрагента Цикл
			Если СирДогКул.ИНАГРО_Культура = ВидКультуры Тогда
				ЦенаЗаТону = СирДогКул.ИНАГРО_Цена;
			КонецЕсли;	
		КонецЦикла;	
		ТаблицаРасчета.Параметры.ЦенаЗаТону = ЦенаЗаТону;
		ТаблицаРасчета.Параметры.Сумма      = ЦенаЗаТону*РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ТаблицаРасчета);	
		
		СуммаУслуг=0;	
		Для каждого СтрокаУслуги Из ТЧУслуги Цикл  	
			СтрокаТабРасчета.Параметры.Номенклатура = СтрокаУслуги.Номенклатура;
			СтрокаТабРасчета.Параметры.Кол          = СтрокаУслуги.Количество;
			СтрокаТабРасчета.Параметры.Сумма        = Окр(СтрокаУслуги.Сумма/1.2,2);
			СтрокаТабРасчета.Параметры.Цена         = ?(СтрокаТабРасчета.Параметры.Кол = 0, 0, Окр(СтрокаТабРасчета.Параметры.Сумма / СтрокаТабРасчета.Параметры.Кол,2));
			СуммаУслуг                              = СуммаУслуг+СтрокаТабРасчета.Параметры.Сумма;
			ТабДокумент.Вывести(СтрокаТабРасчета);	
		КонецЦикла;
		
		//ПодвалРасчет
		ПодвалРасчета.Параметры.ИтогоНДС            = РезультатШапка.СтоимостьНДС;
		ПодвалРасчета.Параметры.ИтогоСНДС           = ТЧУслуги.Итог("Сумма");
		ПодвалРасчета.Параметры.ИтогоНачислено      = ПодвалРасчета.Параметры.ИтогоСНДС - ПодвалРасчета.Параметры.ИтогоНДС;
		ПодвалРасчета.Параметры.СоставительРеестра  = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
		ТабДокумент.Вывести(ПодвалРасчета);
                
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьТмин(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность1,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь1,
		|	ИНАГРО_РеестрТТНВвоз.СуммаНДС КАК СтоимостьНДС,
		|	ИНАГРО_РеестрТТНВвоз.ЗерноваяПримесь КАК ЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ;
    
    КультурыДогКонтрагента = Новый Запрос;
    КультурыДогКонтрагента.Текст =  
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовИНАГРО_Культуры.НомерСтроки КАК НомерСтроки,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Культура КАК ИНАГРО_Культура,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Собственное КАК ИНАГРО_Собственное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Переоформленное КАК ИНАГРО_Переоформленное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Тоннаж КАК ИНАГРО_Тоннаж,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Цена КАК ИНАГРО_Цена
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ИНАГРО_Культуры КАК ДоговорыКонтрагентовИНАГРО_Культуры
		|		ПО ИНАГРО_РеестрТТНВвоз.Ссылка = ДоговорыКонтрагентовИНАГРО_Культуры.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ;
    
    ЛабораторныйАназиз = Новый Запрос;
    ЛабораторныйАназиз.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ; 
    
    Услуги = Новый Запрос;
    Услуги.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозУслуги.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозУслуги.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвозУслуги.Количество КАК Количество,
		|	ИНАГРО_РеестрТТНВвозУслуги.Цена КАК Цена,
		|	ИНАГРО_РеестрТТНВвозУслуги.Сумма КАК Сумма
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.Услуги КАК ИНАГРО_РеестрТТНВвозУслуги
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозУслуги.Ссылка = &ТекущийДокумент" ;
       
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.Тмин";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Тмин");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        КультурыДогКонтрагента.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧКультурыДогКонтрагента = КультурыДогКонтрагента.Выполнить().Выгрузить();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧСписокТТН = СписокТТН.Выполнить().Выгрузить();

        ЛабораторныйАназиз.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧРезультатЛабораторныйАназиз = ЛабораторныйАназиз.Выполнить().Выгрузить();
        
        Услуги.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧУслуги = Услуги.Выполнить().Выгрузить();

        Руководители    = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
		НомерДок        = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
        ОблИтог             = Макет.ПолучитьОбласть("Итог");
        ОблШапкаДоставки    = Макет.ПолучитьОбласть("ШапкаДоставки");
        ОблСтрокаДоставки   = Макет.ПолучитьОбласть("СтрокаДоставки");
        ОблДно              = Макет.ПолучитьОбласть("Дно");
        ТаблицаАнализа      = Макет.ПолучитьОбласть("ТаблицаАнализа");
        ТаблицаРасчета      = Макет.ПолучитьОбласть("ТаблицаРасчета");
        СтрокаТабРасчета    = Макет.ПолучитьОбласть("СтрокаТабРасчета");
        ПодвалРасчета       = Макет.ПолучитьОбласть("ПодвалРасчета");

		Шапка.Параметры.Фирма       = РезультатШапка.Организация.НаименованиеПолное;
		Шапка.Параметры.НомерДок    = НомерДок;
		Шапка.Параметры.ДатаДок     = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
		Шапка.Параметры.ТМЦ         = РезультатШапка.Номенклатура.НаименованиеПолное;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);

		Если НЕ (ТипЗнч(РезультатШапка.ПолеТок) = Тип("Строка") ИЛИ РезультатШапка.ПолеТок = Неопределено ) Тогда
			Шапка.Параметры.Регион = РезультатШапка.ПолеТок.Регион;
		КонецЕсли;
		
		Попытка
			НомерСК = ?(РезультатШапка.ДокПодчинен = Неопределено,"",""+РезультатШапка.ДокПодчинен.Серия+"-"+РезультатШапка.ДокПодчинен.НомерВходящий);
		Исключение
			НомерСК = "";
		КонецПопытки;	
		Шапка.Параметры.НомерСК = НомерСК;
		
		ТабДокумент.Вывести(Шапка);
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		Инд = 0;
		Пока ТЧСписокТТН.Количество() > Инд Цикл
			ОблСтрока.Параметры.НомерТТН1   = ТЧСписокТТН[Инд].НомерТТН;
			ОблСтрока.Параметры.Вес1        = ТЧСписокТТН[Инд].Вес;
			ОблСтрока.Параметры.НомерАвто1  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
			Инд = Инд + 1;
			Если ТЧСписокТТН.Количество() > Инд Тогда
				ОблСтрока.Параметры.НомерТТН2   = ТЧСписокТТН[Инд].НомерТТН;
				ОблСтрока.Параметры.Вес2        = ТЧСписокТТН[Инд].Вес;
				ОблСтрока.Параметры.НомерАвто2  = ?(ТЧСписокТТН[Инд].ТТН.НомерТранспорта<>"",ТЧСписокТТН[Инд].ТТН.НомерТранспорта,"");
				Инд = Инд + 1;
			КонецЕсли;
			ТабДокумент.Вывести(ОблСтрока);
			ОблСтрока.Параметры.НомерТТН1   = "";
			ОблСтрока.Параметры.Вес1        = "";
			ОблСтрока.Параметры.НомерТТН2   = "";
			ОблСтрока.Параметры.Вес2        = "";
			ОблСтрока.Параметры.НомерАвто1  = "";
			ОблСтрока.Параметры.НомерАвто2  = "";
		КонецЦикла;
		
		ОблИтог.Параметры.Всего = РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ОблИтог);
		
		ТабДокумент.Вывести(ОблШапкаДоставки);
		
		ОблСтрокаДоставки.Параметры.КоличествоДоставки  = РезультатШапка.КоличествоДоставки;
		ОблСтрокаДоставки.Параметры.ЦенаДоставки        = РезультатШапка.ЦенаДоставки;
		ОблСтрокаДоставки.Параметры.СтоимостьДоставки   = РезультатШапка.СтоимостьДоставки;
		ТабДокумент.Вывести(ОблСтрокаДоставки);
		
		ОблДно.Параметры.ФизВес         = РезультатШапка.ОбщийФизическийВес;
		ОблДно.Параметры.КолТТН         = ТЧСписокТТН.Количество();
		ОблДно.Параметры.ФизВесПропись  = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,РезультатШапка.ОбщийФизическийВес);
		ОблДно.Параметры.ЗавСкладом     = ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата, РезультатШапка.Склад);
		ОблДно.Параметры.НазваниеСкада  = РезультатШапка.Склад;
		ТабДокумент.Вывести(ОблДно);
		
		
		//ШапкаТаблицыАнализа
				
		ТаблицаАнализа.Параметры.Заполнить(РезультатШапка);
		
		ВидКультуры                             = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
		ЗначенияБазисов                         = ИНАГРО_Элеватор.ПолучитьБазисныеЗначения(ВидКультуры,РезультатШапка.Дата,РезультатШапка.Организация,РезультатШапка.Владелец, РезультатШапка.ДоговорКонтрагента, РезультатШапка.Склад);	
        ТаблицаАнализа.Параметры.НомерАнализа   = ?(РезультатШапка.НомерАнализа = "",РезультатШапка.ЛабораторныйАнализ.Номер,РезультатШапка.НомерАнализа);
        ТаблицаАнализа.Параметры.БазВлаж        = ЗначенияБазисов.Влажность;
		ТаблицаАнализа.Параметры.БазСорн        = ЗначенияБазисов.СорнаяПримесь;		
		ТаблицаАнализа.Параметры.НачальникВТЛ   = Руководители.НачальникВТЛ;
        
        Для каждого СтрокаТабХар Из ТЧРезультатЛабораторныйАназиз Цикл
            
            Если СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда
				ТаблицаАнализа.Параметры.Цвет = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда
				ТаблицаАнализа.Параметры.Запах = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда
				ТаблицаАнализа.Параметры.Зараженность = СтрокаТабХар.Значение;
			ИначеЕсли СтрокаТабХар.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Эфировая Тогда
				ТаблицаАнализа.Параметры.Эфировая = СтрокаТабХар.Значение;
			КонецЕсли;

		КонецЦикла; 
		
		ТаблицаАнализа.Параметры.СкидкаВлажность    = РезультатШапка.НатСкидкаВлажность;
		ТаблицаАнализа.Параметры.СкидкаСор          = РезультатШапка.НатСкидкаСорнаяПримесь; 
		
		ТабДокумент.Вывести(ТаблицаАнализа);	
		
		//ТаблицаРасчета
		ТаблицаРасчета.Параметры.ФизическийВес      = РезультатШапка.ОбщийФизическийВес;
		ТаблицаРасчета.Параметры.ЗачетныйВес        = РезультатШапка.ЗачетныйВес;
		ТаблицаРасчета.Параметры.ПроцентЗачВесса    = 100-(РезультатШапка.НатСкидкаВлажность+РезультатШапка.НатСкидкаСорнаяПримесь);
		ЦенаЗаТону = 0;
		Для каждого СирДогКул из ТЧКультурыДогКонтрагента Цикл
			Если СирДогКул.ИНАГРО_Культура = ВидКультуры Тогда
				ЦенаЗаТону = СирДогКул.ИНАГРО_Цена;
			КонецЕсли;	
		КонецЦикла;	
		ТаблицаРасчета.Параметры.ЦенаЗаТону = ЦенаЗаТону;
		ТаблицаРасчета.Параметры.Сумма      = ЦенаЗаТону*РезультатШапка.ОбщийФизическийВес;
		ТабДокумент.Вывести(ТаблицаРасчета);	
		
		СуммаУслуг=0;	
		Для каждого СтрокаУслуги Из ТЧУслуги Цикл  	
			СтрокаТабРасчета.Параметры.Номенклатура = СтрокаУслуги.Номенклатура;
			СтрокаТабРасчета.Параметры.Кол          = СтрокаУслуги.Количество;
			СтрокаТабРасчета.Параметры.Сумма        = Окр(СтрокаУслуги.Сумма/1.2,2);
			СтрокаТабРасчета.Параметры.Цена         = ?(СтрокаТабРасчета.Параметры.Кол = 0, 0, Окр(СтрокаТабРасчета.Параметры.Сумма / СтрокаТабРасчета.Параметры.Кол,2));
			СуммаУслуг                              = СуммаУслуг+СтрокаТабРасчета.Параметры.Сумма;
			ТабДокумент.Вывести(СтрокаТабРасчета);	
		КонецЦикла;
		
		//ПодвалРасчет
		ПодвалРасчета.Параметры.ИтогоНДС            = РезультатШапка.СтоимостьНДС;
		ПодвалРасчета.Параметры.ИтогоСНДС           = ТЧУслуги.Итог("Сумма");
		ПодвалРасчета.Параметры.ИтогоНачислено      = ПодвалРасчета.Параметры.ИтогоСНДС - ПодвалРасчета.Параметры.ИтогоНДС;
		ПодвалРасчета.Параметры.СоставительРеестра  = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
		ТабДокумент.Вывести(ПодвалРасчета);
                
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьОбщий(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВвоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВвоз.Номер КАК Номер,
		|	ИНАГРО_РеестрТТНВвоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВвоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВвоз.ПолеТок КАК ПолеТок,
		|	ИНАГРО_РеестрТТНВвоз.СкладскаяКвитанция КАК ДокПодчинен,
		|	ИНАГРО_РеестрТТНВвоз.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВвоз.КоличествоДоставки КАК КоличествоДоставки,
		|	ИНАГРО_РеестрТТНВвоз.ЦенаДоставки КАК ЦенаДоставки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаДоставки КАК СтоимостьДоставки,
		|	ИНАГРО_РеестрТТНВвоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВвоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВвоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВвоз.СуммаОчистки КАК СтоимостьОчистки,
		|	ИНАГРО_РеестрТТНВвоз.СуммаСушки КАК СтоимостьСушки,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВвоз.Силос КАК Силос,
		|	ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВвоз.Влажность КАК Влажность1,
		|	ИНАГРО_РеестрТТНВвоз.СорнаяПримесь КАК СорнаяПримесь1,
		|	ИНАГРО_РеестрТТНВвоз.СуммаНДС КАК СтоимостьНДС,
		|	ИНАГРО_РеестрТТНВвоз.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВвоз.Поставщик КАК Поставщик,
		|	ИНАГРО_РеестрТТНВвоз.ВидХранения КАК ВидХранения
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент";
    
    СписокТТН = Новый Запрос;
    СписокТТН.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Вес КАК ВесТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Влажность КАК Влажность
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.СписокТТН КАК ИНАГРО_РеестрТТНВвозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозСписокТТН.Ссылка = &ТекущийДокумент" ;
    
    КультурыДогКонтрагента = Новый Запрос;
    КультурыДогКонтрагента.Текст =  
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовИНАГРО_Культуры.НомерСтроки КАК НомерСтроки,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Культура КАК ИНАГРО_Культура,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Собственное КАК ИНАГРО_Собственное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Переоформленное КАК ИНАГРО_Переоформленное,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Тоннаж КАК ИНАГРО_Тоннаж,
		|	ДоговорыКонтрагентовИНАГРО_Культуры.ИНАГРО_Цена КАК ИНАГРО_Цена
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ИНАГРО_Культуры КАК ДоговорыКонтрагентовИНАГРО_Культуры
		|		ПО ИНАГРО_РеестрТТНВвоз.Ссылка = ДоговорыКонтрагентовИНАГРО_Культуры.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ;
    
    ЛабораторныйАназиз = Новый Запрос;
    ЛабораторныйАназиз.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаВлажность КАК НатСкидкаВлажность,
		|	ИНАГРО_РеестрТТНВвоз.НатСкидкаСорнаяПримесь КАК НатСкидкаСорнаяПримесь
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз КАК ИНАГРО_РеестрТТНВвоз
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|		ПО ИНАГРО_РеестрТТНВвоз.ЛабораторныйАнализ = ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвоз.Ссылка = &ТекущийДокумент" ; 
    
    Услуги = Новый Запрос;
    Услуги.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВвозУслуги.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_РеестрТТНВвозУслуги.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВвозУслуги.Количество КАК Количество,
		|	ИНАГРО_РеестрТТНВвозУслуги.Цена КАК Цена,
		|	ИНАГРО_РеестрТТНВвозУслуги.Сумма КАК Сумма
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВвоз.Услуги КАК ИНАГРО_РеестрТТНВвозУслуги
		|ГДЕ
		|	ИНАГРО_РеестрТТНВвозУслуги.Ссылка = &ТекущийДокумент" ;
       
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Документ.ИНАГРО_ИНАГРО_РеестрТТНВвоз.Общий";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВвоз.ПФ_MXL_Общий");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    мВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        КультурыДогКонтрагента.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧКультурыДогКонтрагента = КультурыДогКонтрагента.Выполнить().Выгрузить();
        
        СписокТТН.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧСписокТТН = СписокТТН.Выполнить().Выгрузить();

        ЛабораторныйАназиз.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧРезультатЛабораторныйАназиз = ЛабораторныйАназиз.Выполнить().Выгрузить();
        
        Услуги.УстановитьПараметр("ТекущийДокумент", Ссылка);
        ТЧУслуги = Услуги.Выполнить().Выгрузить();

        // ++ ИНАГРО Степаненко Иван 23.05.2019 
        Шапка = Макет.ПолучитьОбласть("Шапка");		
		СтрокаТТН = Макет.ПолучитьОбласть("СтрокаТТН ");	
		Подвал = Макет.ПолучитьОбласть("Подвал ");	
		ТаблицаАнализа = Макет.ПолучитьОбласть("ТаблицаАнализа");
		//ДенежныйРасчет = Макет.ПолучитьОбласть("ДенежныйРасчет");
		
		НомерДок = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РезультатШапка.Номер);
		
		Шапка.Параметры.Заполнить(РезультатШапка);
		Шапка.Параметры.Поставщик   = РезультатШапка.Поставщик;
		Шапка.Параметры.Владелец    = РезультатШапка.Владелец;
		Шапка.Параметры.Номер       = НомерДок;
       	ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Поставщик);
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);
		
		//Шапка.Параметры.Организация = СсылкаНаОбъект.Организация.НаименованиеПолное;
		Шапка.Параметры.Дата = Формат(РезультатШапка.Дата, "ДЛФ=DD; Л=uk");
		Шапка.Параметры.Организация =  РезультатШапка.Организация.НаименованиеПолное;
		ТабДокумент.Вывести(Шапка);
		
		Инд = 0;
		Пока ТЧСписокТТН.Количество()>0 И ТЧСписокТТН.Количество()>Инд Цикл			
			
			СтрокаТТН.Параметры.НомерТТН1 = ТЧСписокТТН[Инд].НомерТТН;
			СтрокаТТН.Параметры.ВесТТН1 = ТЧСписокТТН[Инд].ВесТТН;			
			Инд = Инд+1;
			Попытка	
				Если ТЧСписокТТН.Количество()>Инд Тогда
					СтрокаТТН.Параметры.НомерТТН2 = ТЧСписокТТН[Инд].НомерТТН;
					СтрокаТТН.Параметры.ВесТТН2 = ТЧСписокТТН[Инд].ВесТТН;					
				Иначе
					СтрокаТТН.Параметры.НомерТТН2 = 0;
					СтрокаТТН.Параметры.ВесТТН2 = 0;				
				КонецЕсли;
				Инд = Инд+1;
			Исключение
			КонецПопытки;
			
			ТабДокумент.Вывести(СтрокаТТН);
		КонецЦикла; 
		Подвал.Параметры.ВесПоТТН = ТЧСписокТТН.Итог("ВесТТН");	
		Подвал.Параметры.КоличествоНакладных = ТЧСписокТТН.Количество();	
		Подвал.Параметры.ИтогВесПрописью = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,ТЧСписокТТН.Итог("ВесТТН"));	
		
		Подвал.Параметры.ЗавСкладом = ИНАГРО_Элеватор.ОтветственныеЛица(РезультатШапка.Организация, РезультатШапка.Дата,РезультатШапка.Склад);	
		Подвал.Параметры.НазваниеСкада = РезультатШапка.Склад;
		ТабДокумент.Вывести(Подвал);
		
		ТаблицаАнализа.Параметры.Заполнить(РезультатШапка);
		ТаблицаАнализа.Параметры.НатСкидкаВлажность = РезультатШапка.НатСкидкаВлажность;
		ТаблицаАнализа.Параметры.НатСкидкаСорнаяПримесь = РезультатШапка.НатСкидкаСорнаяПримесь;
		ОтветственыеЛицаОрганизации = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(РезультатШапка.Организация,РезультатШапка.Дата);
        ТаблицаАнализа.Параметры.НачальникВТЛ = ОтветственыеЛицаОрганизации.НачальникВТЛ; 
		Если ЗначениеЗаполнено(ТЧРезультатЛабораторныйАназиз) Тогда
			Для каждого СтрокаТаблицы Из ТЧРезультатЛабораторныйАназиз Цикл			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Натура Тогда 
					ТаблицаАнализа.Параметры.Натура = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда 
					ТаблицаАнализа.Параметры.Зараженность = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКачество Тогда
					Група = "0";
					Если (Число(СтрокаТаблицы.Значение) >= 45) и (Число(СтрокаТаблицы.Значение) <= 75) Тогда
						Група = "I";
					ИначеЕсли (Число(СтрокаТаблицы.Значение) >= 80) и (Число(СтрокаТаблицы.Значение) <= 100) Тогда
						Група = "II";
					ИначеЕсли (Число(СтрокаТаблицы.Значение) >= 105) и (Число(СтрокаТаблицы.Значение) <= 120) Тогда
						Група = "III";
					КонецЕсли;
					ТаблицаАнализа.Параметры.КлейкГпуппа =	Група;
				КонецЕсли;
				
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКачество Тогда 
					ТаблицаАнализа.Параметры.КлейкИДК = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКоличество Тогда 
					ТаблицаАнализа.Параметры.КлейкПроцент = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Белок Тогда 
					ТаблицаАнализа.Параметры.Белок = СтрокаТаблицы.Значение;
				КонецЕсли;			
				
				//дополнительная
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЧислоПадения Тогда 
					ТаблицаАнализа.Параметры.ЧислоПадения = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Стекловидность Тогда 
					ТаблицаАнализа.Параметры.Стекловидность = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлопЧерепашки Тогда 
					ТаблицаАнализа.Параметры.КлопЧерепашка = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.МелкоеЗерно Тогда 
					ТаблицаАнализа.Параметры.МелкоеЗерно = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда 
					ТаблицаАнализа.Параметры.Цвет = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ОбрушеныхЗерен Тогда 
					ТаблицаАнализа.Параметры.Обрушеных = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПоврежденныхЗерен Тогда 
					ТаблицаАнализа.Параметры.Поврежненных = СтрокаТаблицы.Значение;
				КонецЕсли;			
				Если СтрокаТаблицы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПроросшихЗерен Тогда 
					ТаблицаАнализа.Параметры.Проросших = СтрокаТаблицы.Значение;
				КонецЕсли;						
			КонецЦикла; 
		КонецЕсли;
		
		ТабДокумент.Вывести(ТаблицаАнализа);
		
		
		//ТаблицаРасчета
		ТаблицаРасчета = Макет.ПолучитьОбласть("ТаблицаРасчета");		
		ТабДокумент.Вывести(ТаблицаРасчета);	
		
		СтрокаТабРасчета = Макет.ПолучитьОбласть("СтрокаТабРасчета");
		суммаУслуг=0;	
		Для каждого СтрокаУслуги Из ТЧУслуги Цикл  	
			СтрокаТабРасчета.Параметры.Номенклатура= СтрокаУслуги.Номенклатура;
			СтрокаТабРасчета.Параметры.Кол=СтрокаУслуги.Количество;
			СтрокаТабРасчета.Параметры.Сумма=Окр(СтрокаУслуги.Сумма/1.2,2);
			СтрокаТабРасчета.Параметры.Цена=?(СтрокаТабРасчета.Параметры.Кол = 0, 0, Окр(СтрокаТабРасчета.Параметры.Сумма / СтрокаТабРасчета.Параметры.Кол,2));
			СуммаУслуг=суммаУслуг+СтрокаТабРасчета.Параметры.Сумма;
			ТабДокумент.Вывести(СтрокаТабРасчета);	
		КонецЦикла;
		
		//ПодвалРасчет
		ПодвалРасчета = Макет.ПолучитьОбласть("ПодвалРасчета");
		
		ПодвалРасчета.Параметры.ИтогоНДС = РезультатШапка.СтоимостьНДС;
		ПодвалРасчета.Параметры.ИтогоСНДС = ТЧУслуги.Итог("Сумма");
		ПодвалРасчета.Параметры.ИтогоНачислено = ПодвалРасчета.Параметры.ИтогоСНДС - ПодвалРасчета.Параметры.ИтогоНДС;
        ПодвалРасчета.Параметры.ИтогСуммаПрописью =  ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ПодвалРасчета.Параметры.ИтогоСНДС,мВалютаРегламентированногоУчета,КодЯзыкаПечать)
	        + Символы.ПС + НСтр("ru='В т.ч. НДС: ';uk='У т.ч. ПДВ: '",КодЯзыкаПечать)+ ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(РезультатШапка.СтоимостьНДС, мВалютаРегламентированногоУчета, КодЯзыкаПечать);
		//ПодвалРасчета.Параметры.СоставительРеестра = ИмяПользователя();
		ТабДокумент.Вывести(ПодвалРасчета);
        // -- ИНАГРО Степаненко Иван 23.05.2019 
                
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция РассчитатьПроцентЗачетногоВеса(ЭтотОбъект) Экспорт
    
    ВидКультуры=ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(ЭтотОбъект.Номенклатура,"ВидКультуры");
    ЗначенияБазисов = ИНАГРО_Элеватор.ПолучитьБазисныеЗначения(ВидКультуры, ЭтотОбъект.Дата, ЭтотОбъект.Организация, ЭтотОбъект.Владелец, ЭтотОбъект.ДоговорКонтрагента, ЭтотОбъект.Склад);
    
    Влажность_ = ЗначенияБазисов.Влажность;
    СорнаяПримесь_ = ЗначенияБазисов.СорнаяПримесь;	
    
    Запрос=Новый Запрос;
    Запрос.УстановитьПараметр("ДатаДок",ЭтотОбъект.Дата);
    Запрос.Текст="ВЫБРАТЬ
                |	СпособРасчетаЗачетногоВесаСрезПоследних.Способ
                |ИЗ
                |	РегистрСведений.ИНАГРО_СпособРасчетаЗачетногоВеса.СрезПоследних(&ДатаДок, ) КАК СпособРасчетаЗачетногоВесаСрезПоследних";
    Выборка=Запрос.Выполнить().Выбрать();
    Выборка.Следующий();
    СпособРасчетаЗачетногоВеса=?(Выборка.Количество()>0,Выборка.Способ,"");
    
    Если СпособРасчетаЗачетногоВеса = Перечисления.ИНАГРО_СпособыРасчетаЗачетногоВеса.ПоИнструкции310 Тогда
        ПроцентЗачВеса=1;
        Если ЭтотОбъект.Влажность > Влажность_ Тогда
            // только если факт.влажность больше базиса
            ПроцентЗачВеса = (100-ЭтотОбъект.Влажность)/(100-Влажность_);
        КонецЕсли;
        Если ЭтотОбъект.СорнаяПримесь > СорнаяПримесь_ Тогда
            // только если факт.СорнаяПримесь больше базиса
            ПроцентЗачВеса = ПроцентЗачВеса*(100-ЭтотОбъект.СорнаяПримесь)/(100-СорнаяПримесь_);
        КонецЕсли;				
        ПроцентЗачВесса = Окр(100*ПроцентЗачВеса,2);
    ИначеЕсли СпособРасчетаЗачетногоВеса = Перечисления.ИНАГРО_СпособыРасчетаЗачетногоВеса.ПоДювалю Тогда
        УбыльВесаПоВлажности = 0;
        Если (ЭтотОбъект.Влажность > Влажность_) Тогда
            УбыльВесаПоВлажности =ОКР((100*(ЭтотОбъект.Влажность-Влажность_))/(100-Влажность_),2);
        КонецЕсли;
        УбыльВесаПоСорной = 0;
        Если (ЭтотОбъект.СорнаяПримесь > СорнаяПримесь_) Тогда
            УбыльВесаПоСорной=ОКР((100-УбыльВесаПоВлажности)*(ЭтотОбъект.СорнаяПримесь-СорнаяПримесь_)/(100-СорнаяПримесь_),2);
        КонецЕсли;
        ПроцентЗачВесса  = 100 - УбыльВесаПоВлажности - УбыльВесаПоСорной;
    Иначе 
        ПроцентЗачВесса = 100-ЭтотОбъект.НатСкидкаВлажность-ЭтотОбъект.НатСкидкаСорнаяПримесь;
    КонецЕсли;
    
    Возврат ПроцентЗачВесса;
    
КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьВыбраннуюПечатнуюФорму(ВыбранныйЭлемент) Экспорт 
	
	СтруктураСохранения = Новый Структура("ВыбраннаяПечатнаяФорма", ВыбранныйЭлемент);		
	ХранилищеОбщихНастроек.Сохранить("ИНАГРО_РеестрТТНВвоз_ЗХС3ПоКультурам", , СтруктураСохранения);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли