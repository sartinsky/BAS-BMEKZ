#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	УчетДенежныхСредствБП.ЗаполнитьРеквизитыПлатежногоДокумента(ЭтотОбъект);
	
	Если ДанныеЗаполнения <> Неопределено
			И ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	
	
	АвтоЗначенияРеквизитов = УчетДенежныхСредствБП.СформироватьАвтоЗначенияРеквизитовПлательщикаПолучателя(
		Организация,
		СчетОрганизации,
		Контрагент,
		СчетКонтрагента);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, АвтоЗначенияРеквизитов);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк")
//++ БУ ЗИК
		ИЛИ ТипДанныхЗаполнения = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплаты") Тогда
//~		Тогда
//-- БУ ЗИК
		
		НазначениеПлатежаБылоИзмененоВручную = Ложь;
		Документы.ПлатежноеПоручение.СформироватьНазначениеПлатежа(
			ЭтотОбъект, АвтоЗначенияРеквизитов, НазначениеПлатежаБылоИзмененоВручную, Ложь);
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата              = НачалоДня(ОбщегоНазначенияБП.ПолучитьРабочуюДату());
	Ответственный     = Пользователи.ТекущийПользователь();
	НомерПоручения    = "";
	ДокументОснование = Неопределено;
	Оплачено          = Ложь;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НомерПоручения) Тогда
		СформироватьНомерПоручения();
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьДокументПоВедомости(Основание)
	
	Организация = Основание.Организация;
	СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка();
	СуммаНДС  = 0;
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	УчетДенежныхСредствБП.УстановитьБанковскийСчет(СчетОрганизации, Организация, ВалютаРегламентированногоУчета);
	
	ПлатежныеВедомости = Новый Массив;
	ПлатежныеВедомости.Добавить(Основание);
	
	ВидДокументаОснования = ТипЗнч(Основание);
	
	Если ВидДокументаОснования = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк") Тогда
		ВидВыплаты = Основание.СпособВыплаты;
	Иначе
		ВидВыплаты = Основание.ВидВыплаты;
	КонецЕсли;
	
	ВидЗаполнения = "";
	
	Если ВидВыплаты = Справочники.ВидыВыплат.Аванс
		ИЛИ ВидВыплаты = Справочники.ВидыВыплат.АвансПредварительныйРасчет
		ИЛИ ВидВыплаты = Справочники.ВидыВыплат.Очередная
		ИЛИ ВидВыплаты = Справочники.ВидыВыплат.ОчереднаяПогашениеДолгов
		ИЛИ НЕ ВидВыплаты.Предопределенный
		Тогда
		ВидЗаполнения = "Зарплата";
	ИначеЕсли ВидВыплаты = Справочники.ВидыВыплат.НДФЛКонтрагентам
		Тогда
		ВидЗаполнения = "НДФЛ";
	КонецЕсли;
	
	Если ВидЗаполнения = "Зарплата" Тогда
		
		// Зарплата
		Если ВидДокументаОснования = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк") Тогда
			
			Если ЗначениеЗаполнено(Основание.ЗарплатныйПроект) Тогда 
				Контрагент = Основание.ЗарплатныйПроект.Банк;
				УчетДенежныхСредствБП.УстановитьБанковскийСчет(СчетКонтрагента, Контрагент, ВалютаРегламентированногоУчета);
			КонецЕсли;
			
			ПараметрыОплаты = Ложь;
			
			ТаблицаВедомостей = УчетЗарплаты.ПолучитьДанныеВедомостейДляОплатыТаблично(Ссылка, ПлатежныеВедомости, , ПараметрыОплаты);
			
			Если ТаблицаВедомостей.Количество() = 0 Тогда
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Документ %1 полностью оплачен!';uk='Документ %1 повністю оплачений!'"), Основание.Ссылка);
				
				ВызватьИсключение ТекстСообщения;
				
			КонецЕсли;
			
			СуммаДокумента = ТаблицаВедомостей.Итог("СуммаКВыплате");
			
		ИначеЕсли ВидДокументаОснования = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплаты") Тогда
		
			ВалютаДокумента    = ВалютаРегламентированногоУчета;
			КурсДокумента      = 1;
			КратностьДокумента = 1;
			
			Если Организация.ОсновнойБанковскийСчет.ВалютаДенежныхСредств=ВалютаДокумента Тогда
				СчетОрганизации = Организация.ОсновнойБанковскийСчет;
			КонецЕсли;
			
			
			// Определим сумму выплаченной заработной платы
			Запрос=Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", Основание);
			
			ТекстЗапроса = "
			|ВЫБРАТЬ Различные                         
			|	РаботникиОрганизации.Банк
			|ИЗ	Документ.ВедомостьНаВыплатуЗарплаты.РаботникиОрганизации КАК РаботникиОрганизации
			|
			|ГДЕ 	РаботникиОрганизации.Ссылка = &Ссылка
			|	И	РаботникиОрганизации.ВыплаченностьЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВыплаченностьЗарплаты.Выплачено)
			|	И	РаботникиОрганизации.СпособВыплаты = ЗНАЧЕНИЕ(Перечисление.СпособыВыплатыЗарплаты.ЧерезБанк)
			|";
			Запрос.Текст = ТекстЗапроса;
			РезультатЗапроса = Запрос.Выполнить();
			Если РезультатЗапроса.Пустой() Тогда
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В документе %1 нет сумм к выплате со способом выплаты ""через банк""!';uk='У документі %1 немає сум до виплати зі способом виплати ""через банк""!'"), Основание.Ссылка);
				
				ВызватьИсключение ТекстСообщения;
				
			Иначе	
				тбБанки = РезультатЗапроса.Выгрузить();
				тбБанки.Свернуть("Банк");
				СтрокаБанки = Неопределено;
				Если тбБанки.Количество() > 0 Тогда
					СтрокаБанки = тбБанки[0];
				КонецЕсли;
				
				Если СтрокаБанки <> Неопределено Тогда
					Контрагент = СтрокаБанки.Банк;
					УчетДенежныхСредствБП.УстановитьБанковскийСчет(СчетКонтрагента, Контрагент, ВалютаРегламентированногоУчета);
					
					ВыборкаБанк = РезультатЗапроса.Выбрать(); 
					Если ВыборкаБанк.НайтиСледующий(СтрокаБанки.Банк,"Банк") Тогда
						
						Запрос=Новый Запрос;
						Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
						Запрос.УстановитьПараметр("Ссылка", Основание);
						Запрос.УстановитьПараметр("Регистратор", Ссылка);
						Запрос.УстановитьПараметр("Банк", СтрокаБанки.Банк);
						
						ТекстЗапроса = "                    
						|ВЫБРАТЬ                          
						|	СУММА(ПараметрыОплаты.Сумма)	КАК Сумма
						|ИЗ	Документ.ВедомостьНаВыплатуЗарплаты.ПараметрыОплаты	КАК ПараметрыОплаты
						|                          
						|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОплатаВедомостейНаВыплатуЗарплаты КАК РанееВыплаченныеСуммы
						|ПО	ПараметрыОплаты.Ссылка = РанееВыплаченныеСуммы.Ведомость
						|И	ПараметрыОплаты.Сотрудник.ФизическоеЛицо = РанееВыплаченныеСуммы.ФизическоеЛицо
						|И	(РанееВыплаченныеСуммы.Регистратор <> &Регистратор)
						|
						|ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплаты.РаботникиОрганизации КАК РаботникиОрганизации
						|ПО	ПараметрыОплаты.Ссылка = РаботникиОрганизации.Ссылка
						|И	ПараметрыОплаты.Сотрудник = РаботникиОрганизации.Сотрудник
						|
						|ГДЕ ПараметрыОплаты.Ссылка = &Ссылка
						|	И РанееВыплаченныеСуммы.ФизическоеЛицо ЕСТЬ NULL 
						|	И РаботникиОрганизации.ВыплаченностьЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВыплаченностьЗарплаты.Выплачено)
						|	И РаботникиОрганизации.СпособВыплаты = ЗНАЧЕНИЕ(Перечисление.СпособыВыплатыЗарплаты.ЧерезБанк)
						|	И РаботникиОрганизации.Банк = &Банк
						|
						|СГРУППИРОВАТЬ ПО
						|	ПараметрыОплаты.СчетУчета
						|";
						
						Запрос.Текст = ТекстЗапроса;
						Выборка = Запрос.Выполнить().Выбрать(); 
						Если Выборка.Следующий() Тогда 
							
							СуммаДокумента = СуммаДокумента + Выборка.Сумма;
							
						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	Если ВидЗаполнения = "НДФЛ" Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация",Организация);
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Параметры.Контрагент,
		|	Параметры.СчетКонтрагента
		|ИЗ РегистрСведений.ПараметрыПлатежныхДокументовПоНалогам КАК Параметры
		|ГДЕ	Параметры.Организация = &Организация
		|	И   Параметры.СтатьяНалоговойДекларации = ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ПустаяСсылка)
		|";
		Запрос.Текст = ТекстЗапроса;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Контрагент = Выборка.Контрагент;
			СчетКонтрагента = Выборка.СчетКонтрагента;
		КонецЕсли;
		
		// Зарплата
		ВалютаДокумента    = ВалютаРегламентированногоУчета;
		КурсДокумента      = 1;
		КратностьДокумента = 1;
		
		Если Организация.ОсновнойБанковскийСчет.ВалютаДенежныхСредств=ВалютаДокумента Тогда
			СчетОрганизации = Организация.ОсновнойБанковскийСчет;
		КонецЕсли;
		
		Если Основание.НДФЛ.Итог("Налог")>0 Тогда
			
			СуммаДокумента = Основание.НДФЛ.Итог("Налог");
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоВедомостиРасширенная(Основание)
	
	Организация = Основание.Организация;
	СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка();
	СуммаНДС  = 0;
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	УчетДенежныхСредствБП.УстановитьБанковскийСчет(СчетОрганизации, Организация, ВалютаРегламентированногоУчета);
	
	ПараметрыОплаты = Ложь;
	ПлатежныеВедомости = Новый Массив;
	ПлатежныеВедомости.Добавить(Основание);
			
	ТаблицаВедомостей = УчетЗарплаты.ПолучитьДанныеВедомостейДляОплатыТаблично(Ссылка, ПлатежныеВедомости, , ПараметрыОплаты);
			
	Если ТаблицаВедомостей.Количество() = 0 Тогда
			
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Документ %1 полностью оплачен!';uk='Документ %1 повністю оплачений!'"), Основание.Ссылка);
		ВызватьИсключение ТекстСообщения;
				
	КонецЕсли;
	
	СуммаДокумента = ТаблицаВедомостей.Итог("СуммаКВыплате");
	
КонецПроцедуры


Процедура ЗаполнитьПоДокументуОснованию(Основание)
	
	// Заполнение реквизитов из стандартного набора по документу основанию.
	ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
	
	ВидДокументаОснования = ТипЗнч(Основание);
	ДокументОснование     = Основание;
	
	Если ВидДокументаОснования = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
		ИЛИ ВидДокументаОснования = Тип("ДокументСсылка.ПоступлениеДопРасходов")
		или ВидДокументаОснования = Тип("ДокументСсылка.СчетНаОплатуПоставщика") 	
		ИЛИ ВидДокументаОснования = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")
		ИЛИ ВидДокументаОснования = Тип("ДокументСсылка.ОтчетКомитентуОПродажах")
		ИЛИ ВидДокументаОснования = Тип("ДокументСсылка.ПоступлениеНМА")
		ИЛИ Основание.Метаданные().Имя = "ИНАГРО_ВозвратБиологическихАктивовОтПокупателя" // ИНАГРО
		ИЛИ Основание.Метаданные().Имя = "ИНАГРО_ПоступлениеБиологическихАктивов"
		ИЛИ Основание.Метаданные().Имя = "ИНАГРО_СчетНаОплатуПоставщикаБиологическихАктивов"
		ИЛИ ВидДокументаОснования = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		Контрагент             = Основание.Контрагент; 
		КодПоЕДРПОУКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "КодПоЕДРПОУ");
		ДоговорКонтрагента     = Основание.ДоговорКонтрагента;
		ВалютаВзаиморасчетов   = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента, "ВалютаВзаиморасчетов");
		Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
			ВидРасчетовПоДоговору = БухгалтерскийУчетПереопределяемый.ОпределениеВидаРасчетовПоПараметрамДоговора(ДоговорКонтрагента);
			Если ВидРасчетовПоДоговору = Перечисления.ВидыРасчетовПоДоговорам.РасчетыВИностраннойВалюте Тогда
				ВалютаДокумента   = ВалютаВзаиморасчетов;
			КонецЕсли;
			
			СтруктураКурсаДокумента = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаДокумента, Дата);
			КурсДокумента           = СтруктураКурсаДокумента.Курс;
			КратностьДокумента      = СтруктураКурсаДокумента.Кратность;
		КонецЕсли;
		
		УчетДенежныхСредствБП.УстановитьБанковскийСчет(СчетКонтрагента, Контрагент, ВалютаДокумента);
		
		Если НЕ ЗначениеЗаполнено(КурсДокумента) Тогда
			КурсДокумента           = 1;
			КратностьДокумента      = 1;
		КонецЕсли;
		
		СтруктураКурсаВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаВзаиморасчетов, Дата);
		
		ТаблицаПлатежей = Новый ТаблицаЗначений();
		ТаблицаПлатежей.Колонки.Добавить("СуммаПлатежа", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15, 2));
		ТаблицаПлатежей.Колонки.Добавить("СтавкаНДС",    Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
		ТаблицаПлатежей.Колонки.Добавить("СуммаНДС",     ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15, 2));
		
		Если ВидДокументаОснования = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
			
			СуммаДокументаОснования = Новый ТаблицаЗначений();
			СуммаДокументаОснования.Колонки.Добавить("СуммаПлатежа", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15, 2));
			СуммаДокументаОснования.Колонки.Добавить("СтавкаНДС",    Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
			СуммаДокументаОснования.Колонки.Добавить("СуммаНДС",     ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15, 2));
			СтрокаТаблицыСумм = СуммаДокументаОснования.Добавить();
			
			СтрокаТаблицыСумм.СтавкаНДС	   = Основание.СтавкаНДСВознаграждения;
			СтрокаТаблицыСумм.СуммаНДС	   = Основание.Товары.Итог("СуммаНДСВознаграждения");
			СтрокаТаблицыСумм.СуммаПлатежа = ?(Основание.СуммаВключаетНДС, Основание.СуммаВознаграждения,
					Основание.СуммаВознаграждения + СтрокаТаблицыСумм.СуммаНДС);
			
		Иначе
			
			СуммаДокументаОснования = УчетНДС.ПолучитьСуммуДокументаСНДСВРазрезеСтавокНДС(Основание);
			СуммаДокументаОснования.Колонки.Сумма.Имя = "СуммаПлатежа";
			Если ВидДокументаОснования = Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда
				
				Если Основание.УдержатьВознаграждение Тогда
					СуммаКоррПлатежа = СуммаДокументаОснования.Итог("СуммаПлатежа") - Основание.СуммаВознаграждения;
					НоваяКолонкаСумм = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(
						СуммаКоррПлатежа, СуммаДокументаОснования.ВыгрузитьКолонку("СуммаПлатежа"));
					Если НоваяКолонкаСумм <> Неопределено Тогда
						СуммаДокументаОснования.ЗагрузитьКолонку(НоваяКолонкаСумм,"СуммаПлатежа");
					КонецЕсли;
					
					СуммаКоррНДС	= СуммаДокументаОснования.Итог("СуммаНДС") - Основание.Товары.Итог("СуммаНДСВознаграждения");
					НоваяКолонкаНДС = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СуммаКоррНДС,СуммаДокументаОснования.ВыгрузитьКолонку("СуммаНДС"));
					Если не НоваяКолонкаНДС = Неопределено Тогда
						СуммаДокументаОснования.ЗагрузитьКолонку(НоваяКолонкаНДС,"СуммаНДС");
					КонецЕсли; 
					
				КонецЕсли;
				
			ИначеЕсли ВидДокументаОснования = Тип("ДокументСсылка.ПоступлениеДопРасходов") Тогда
				
				Если Основание.Сумма <> 0 И Основание.СуммаНДС <> 0  Тогда
					Если СуммаДокументаОснования.Количество() = 0 Тогда
						СтрокаТаблицыСумм = СуммаДокументаОснования.Добавить();
					Иначе
						СтрокаТаблицыСумм = СуммаДокументаОснования[0];
					КонецЕсли;
					
					СтрокаТаблицыСумм.СуммаПлатежа	= СтрокаТаблицыСумм.СуммаПлатежа + Основание.Сумма;
					СтрокаТаблицыСумм.СуммаНДС		= СтрокаТаблицыСумм.СуммаНДС + Основание.СуммаНДС;
					Если НЕ Основание.СуммаВключаетНДС Тогда
						СтрокаТаблицыСумм.СуммаПлатежа = СтрокаТаблицыСумм.СуммаПлатежа + Основание.СуммаНДС;
					КонецЕсли;
				КонецЕсли;
				
				СуммаДокументаОснования.ЗаполнитьЗначения(Основание.СтавкаНДС, "СтавкаНДС");
				
			КонецЕсли;
		КонецЕсли;
		
		ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(СуммаДокументаОснования, ТаблицаПлатежей);
		Если ТаблицаПлатежей.Количество() = 0 Тогда
			ТаблицаПлатежей.Добавить();
		КонецЕсли;
		
		ТаблицаПлатежей.Свернуть("СтавкаНДС", "СуммаПлатежа, СуммаНДС");
		
		СуммаДокумента = ТаблицаПлатежей.Итог("СуммаПлатежа");
		СтавкаНДС      = ?(ТаблицаПлатежей.Количество() = 1, ТаблицаПлатежей[0].СтавкаНДС, "");
		СуммаНДС       = ТаблицаПлатежей.Итог("СуммаНДС");
		
		ТекстНазначение = Документы.ПлатежноеПоручение.ТекстНазначенияПлатежа(СчетКонтрагента, Основание.ДоговорКонтрагента);
	
		ТекстСумма="Сума " + Формат(СуммаДокумента,  "ЧЦ=15;ЧДЦ=2;ЧРД=,;ЧН='0,00'") +" "+ СчетОрганизации.ВалютаДенежныхСредств + Символы.ПС;
		
		Для Каждого СтрокаНДС ИЗ ТаблицаПлатежей цикл
			
			ПредставлениеСтавкиНДС = Строка(СтрокаНДС.СтавкаНДС);
			Если СтрокаНДС.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
				ПредставлениеСтавкиНДС = "звільнення від ПДВ";
			ИначеЕсли СтрокаНДС.СтавкаНДС = Перечисления.СтавкиНДС.НеНДС Или
				НЕ ЗначениеЗаполнено(СтрокаНДС.СтавкаНДС) Тогда
				ПредставлениеСтавкиНДС = "без податку";
			КонецЕсли;
			
			ТекстСумма = ТекстСумма + "ПДВ (" + ПредставлениеСтавкиНДС + ") " + Формат(СтрокаНДС.СуммаНДС, "ЧЦ=15;ЧДЦ=2;ЧРД=,;ЧН=0,00") +" "+ СчетОрганизации.ВалютаДенежныхСредств + Символы.ПС;
			
		КонецЦикла;
		
		НазначениеПлатежа=ТекстНазначение+Символы.ПС+ТекстСумма;
	ИначеЕсли ВидДокументаОснования = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк") 
		ИЛИ ВидДокументаОснования = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплаты") Тогда
		
		ЗаполнитьДокументПоВедомости(Основание);
		
	ИначеЕсли ВидДокументаОснования = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") Тогда
		/// Заполним реквизиты из стандартного набора по документу основанию.
		СчетКонтрагента       = Основание.СчетКонтрагента;
		СчетОрганизации       = Основание.СчетОрганизации;
		
		Контрагент             = Основание.Контрагент;
		КодПоЕДРПОУКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "КодПоЕДРПОУ");
		ДоговорКонтрагента     = Основание.ДоговорКонтрагента;
		ВидРасчетовПоДоговору  = БухгалтерскийУчетПереопределяемый.ОпределениеВидаРасчетовПоПараметрамДоговора(ДоговорКонтрагента);
		ВалютаВзаиморасчетов   = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента, "ВалютаВзаиморасчетов");
		
		Если ВидРасчетовПоДоговору = Перечисления.ВидыРасчетовПоДоговорам.РасчетыВИностраннойВалюте Тогда
			ВалютаДокумента = ВалютаВзаиморасчетов;
		КонецЕсли;
		
		СтруктураКурсаДокумента = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаДокумента, Дата);
		КурсДокумента           = СтруктураКурсаДокумента.Курс;
		КратностьДокумента      = СтруктураКурсаДокумента.Кратность;
		НазначениеПлатежа 		= Основание.НазначениеПлатежа;
		СуммаДокумента 			= Основание.СуммаДокумента;
		СтатьяДвиженияДенежныхСредств = Основание.СтатьяДвиженияДенежныхСредств;
		
		Если Основание.РасшифровкаПлатежа.Количество() = 1 Тогда
			ДоговорКонтрагента 	= Основание.РасшифровкаПлатежа[0].ДоговорКонтрагента;
			СтавкаНДС 			= Основание.РасшифровкаПлатежа[0].СтавкаНДС;
			СуммаНДС 			= Основание.РасшифровкаПлатежа[0].СуммаНДС;
			СтатьяДвиженияДенежныхСредств = Основание.РасшифровкаПлатежа[0].СтатьяДвиженияДенежныхСредств;
		ИначеЕсли Основание.РасшифровкаПлатежа.Количество() > 1 Тогда
			СтавкаНДС 			= Перечисления.СтавкиНДС.ПустаяСсылка();
			СуммаНДС 			= Основание.РасшифровкаПлатежа.Итог("СуммаНДС");
		КонецЕсли;
		
		ПереводНаДругойСчет = Основание.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПереводНаДругойСчет;
		
		Если ПереводНаДругойСчет Тогда
			Контрагент = Организация;
		КонецЕсли; 
		
		Если Основание.Проведен Тогда
			Оплачено = Истина;
		КонецЕсли;
		
	ИначеЕсли ВидДокументаОснования = Тип("ДокументСсылка.ЗаявкаНаПокупкуПродажуВалюты") Тогда
		
		Если Основание.ВидОперации = Перечисления.ВидыОперацийПокупкаПродажаВалюты.ПокупкаВалюты Тогда
			ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить();
			
			Контрагент = Основание.Банк;
			
			СчетОрганизации = Основание.СчетГривневый;
			СчетКонтрагента = Основание.СчетБанка;
			СрезНалогов = РегистрыСведений.ШкалаСтавокНалогов.ПолучитьПоследнее(Основание.Дата, Новый Структура("Налог",Справочники.Налоги.ПенсионныйВалюта));
			СуммаДокумента = Основание.СуммаГривневая + Окр(Основание.СуммаГривневая*Основание.Комиссионные/100,2,1) + Окр(Основание.СуммаГривневая*СрезНалогов.Ставка,2,1);
			
		ИначеЕсли Основание.ВидОперации = Перечисления.ВидыОперацийПокупкаПродажаВалюты.ПродажаВалюты Тогда
			ВалютаДокумента = Основание.Валюта;
						
			Контрагент = Основание.Банк;
			
			СчетОрганизации = Основание.СчетВалютный;
			СчетКонтрагента = Основание.СчетБанка;
			СуммаДокумента = Основание.СуммаВалютная;
	
		КонецЕсли;	
	
	КонецЕсли;
//КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьНомерПоручения()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Нумератор", 	   Перечисления.Нумераторы.ПлатежноеПоручение);
	СтруктураПараметров.Вставить("Дата",           Дата);
	СтруктураПараметров.Вставить("Организация",    Организация);
	СтруктураПараметров.Вставить("БанковскийСчет", СчетОрганизации);
	
	УправлениеДенежнымиСредствами.СформироватьСтроковыйНомерДокумента(СтруктураПараметров, НомерПоручения);
	УправлениеДенежнымиСредствами.ЗаписатьОчереднойНомер(СтруктураПараметров, НомерПоручения);
	
КонецПроцедуры
#КонецЕсли
