#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	УстановитьДоступностьПоляВводаНомерПоручения();
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	// Обработка выбора строки регистра сведений РеквизитыУплатыНалоговИПлатежейВБюджет
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДанныеФормыСтруктура") Тогда
		НадписьРеквизитыПлательщика      = УстановитьНадписьРеквизитыПлательщика(ЭтаФорма);
		НадписьРеквизитыПолучателя       = УстановитьНадписьРеквизитыПолучателя(ЭтаФорма);
		НадписьРеквизитыБанкаПлательщика = УстановитьНадписьРеквизитыБанкаПлательщика(ЭтаФорма);
		НадписьРеквизитыБанкаПолучателя  = УстановитьНадписьРеквизитыБанкаПолучателя(ЭтаФорма);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыборРеквизитовПлательщика" Тогда
		ЗаполнитьЗначенияСвойств(Объект, Параметр);
		НадписьРеквизитыПлательщика = УстановитьНадписьРеквизитыПлательщика(ЭтаФорма);
		Модифицированность = Истина;
	ИначеЕсли ИмяСобытия = "ВыборРеквизитовПолучателя" Тогда
		ЗаполнитьЗначенияСвойств(Объект, Параметр);
		НадписьРеквизитыПолучателя = УстановитьНадписьРеквизитыПолучателя(ЭтаФорма);
		Модифицированность = Истина;
	ИначеЕсли ИмяСобытия = "ВыборРеквизитовБанкаПлательщика" Тогда
		ЗаполнитьЗначенияСвойств(Объект, Параметр);
		НадписьРеквизитыБанкаПлательщика = УстановитьНадписьРеквизитыБанкаПлательщика(ЭтаФорма);
		Модифицированность = Истина;
	ИначеЕсли ИмяСобытия = "ВыборРеквизитовБанкаПолучателя" Тогда
		ЗаполнитьЗначенияСвойств(Объект, Параметр);
		НадписьРеквизитыБанкаПолучателя  = УстановитьНадписьРеквизитыБанкаПолучателя(ЭтаФорма);
		Модифицированность = Истина;
	ИначеЕсли ИмяСобытия = "ВыборРеквизитовПлатежейВБюджет" Тогда
		ЗаполнитьЗначенияСвойств(Объект, Параметр);
		Модифицированность = Истина;
	ИначеЕсли ИмяСобытия = "ОбновитьФорму"
		И ТипЗнч(Источник) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") Тогда
		Прочитать();
	ИначеЕсли ИмяСобытия = "ИзменениеНастроекПлатежныхПорученийИТребований" Тогда
		НастройкиПечатиПриИзмененииНаСервере();
		ЭтаФорма.Модифицированность	= Истина;
	ИначеЕсли ИмяСобытия = "Запись_Контрагенты" Тогда
		Если Источник = Объект.Контрагент Тогда
			УстановитьРеквизитыПолучателяНаСервере(Истина);
			ЭтаФорма.Модифицированность	= Истина;
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "Запись_Организации" Тогда
		Если Источник = Объект.Организация Тогда
			УстановитьРеквизитыПлательщикаНаСервере();
			ЭтаФорма.Модифицированность	= Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ОбновитьФорму", ВладелецФормы, Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	СброситьУстановленныйНомерПоручения();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	ОрганизацияПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура СчетОрганизацииПриИзменении(Элемент)
	
	УстановитьРеквизитыПлательщикаНаСервере();
	
	СброситьУстановленныйНомерПоручения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереводНаДругойСчетПриИзменении(Элемент)
	
	ПереводНаДругойСчетПриИзмененииНаСервере();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	КонтрагентПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СчетКонтрагентаПриИзменении(Элемент)
	
	СчетКонтрагентаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	ДоговорПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьРеквизитыПолучателяНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	ЕстьОшибки = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(
			"Поле", "Заполнение", НСтр("ru='Получатель';uk='Одержувач'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Контрагент", "Объект", ЕстьОшибки);
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.СчетКонтрагента) Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(
			"Поле", "Заполнение", НСтр("ru='Счет получателя';uk='Рахунок одержувача'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "СчетКонтрагента", "Объект", ЕстьОшибки);
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЭтоПлательщик", Ложь);
	СтруктураПараметров.Вставить("ЭтоБанк", Ложь);
	СтруктураПараметров.Вставить("Объект", Объект);
	
	ОткрытьФорму("Документ.ПлатежноеПоручение.Форма.РеквизитыПлательщикаПолучателя", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьРеквизитыБанкаПолучателяНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	ЕстьОшибки = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(
			"Поле", "Заполнение", НСтр("ru='Получатель';uk='Одержувач'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Контрагент", "Объект", ЕстьОшибки);
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.СчетКонтрагента) Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(
			"Поле", "Заполнение", НСтр("ru='Счет получателя';uk='Рахунок одержувача'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "СчетКонтрагента", "Объект", ЕстьОшибки);
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЭтоПлательщик", Ложь);
	СтруктураПараметров.Вставить("ЭтоБанк", Истина);
	СтруктураПараметров.Вставить("Объект", Объект);
	
	ОткрытьФорму("Документ.ПлатежноеПоручение.Форма.РеквизитыПлательщикаПолучателя", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаДокументаПриИзменении(Элемент)
	
	Объект.СуммаНДС = ПересчитатьСуммуНДС(Объект.СуммаДокумента, Объект.СтавкаНДС);
	СформироватьНазначениеПлатежаНаСервере(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	
	Объект.СуммаНДС = ПересчитатьСуммуНДС(Объект.СуммаДокумента, Объект.СтавкаНДС);
	СформироватьНазначениеПлатежаНаСервере(Истина);
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаНДСПриИзменении(Элемент)
	
	СформироватьНазначениеПлатежаНаСервере(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОплаченоПриИзменении(Элемент)
	
	ДокументСписания = НайтиДокументСписанияНаСервере(Объект.Ссылка, Объект.ДокументОснование, НадписьДокументСписания);
	
КонецПроцедуры

&НаКлиенте
Процедура НазначениеПлатежаПриИзменении(Элемент)
	
	Если ПустаяСтрока(Объект.НазначениеПлатежа) Тогда
		НазначениеПлатежаБылоИзмененоВручную = Ложь;
	Иначе
		НазначениеПлатежаБылоИзмененоВручную = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий"
	);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьНазначениеПлатежаВБюджет(Команда)
	
	СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	ЕстьОшибки = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(
			"Поле", "Заполнение", НСтр("ru='Организация';uk='Організація'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Организация", "Объект", ЕстьОшибки);
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Объект", Объект);
	
	ОткрытьФорму("Документ.ПлатежноеПоручение.Форма.РеквизитыПлатежейВБюджет", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область CлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	// Установка реквизитов формы
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	
	АвтоЗначенияРеквизитов = ПолучитьАвтоЗначенияРеквизитов(
		Объект.Организация,
		Объект.СчетОрганизации,
		Объект.Контрагент,
		Объект.СчетКонтрагента);
		
	ТекстНазначенияАвто = Документы.ПлатежноеПоручение.ТекстНазначенияПлатежа(
		Объект.СчетКонтрагента, Объект.ДоговорКонтрагента);
	АвтоЗначенияРеквизитов.Вставить("ТекстНазначенияПлатежа", ТекстНазначенияАвто);
	НазначениеПлатежаБылоИзмененоВручную = Документы.ПлатежноеПоручение.НазначениеПлатежаИзмененоВручную(
		Объект.НазначениеПлатежа, ТекстНазначенияАвто);
	
	НадписьРеквизитыПлательщика      = УстановитьНадписьРеквизитыПлательщика(ЭтаФорма);
	НадписьРеквизитыПолучателя       = УстановитьНадписьРеквизитыПолучателя(ЭтаФорма);
	НадписьРеквизитыБанкаПлательщика = УстановитьНадписьРеквизитыБанкаПлательщика(ЭтаФорма);
	НадписьРеквизитыБанкаПолучателя  = УстановитьНадписьРеквизитыБанкаПолучателя(ЭтаФорма);
	ПоказыватьВДокументахСчетаУчета = Истина;
	
	ДокументСписания = Документы.ПлатежноеПоручение.НайтиДокументСписания(Объект.Ссылка, Объект.ДокументОснование, НадписьДокументСписания);
	
	Если НЕ Объект.ПереводНаДругойСчет ТОгда
		Получатель = Объект.Контрагент;
	КонецЕсли;
	
	
	УстановитьСостояниеДокумента();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Элементы.СуммаНДС.Доступность         = НЕ Объект.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС")
		И НЕ Объект.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС0");
	
	
	Если Объект.ПереводНаДругойСчет Тогда
		Элементы.Контрагент.Видимость = Ложь;
	Иначе
		Элементы.Контрагент.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьАвтоТекстНазначенияИзДоговора(Знач ДоговорКонтрагента)
	
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорКонтрагента, "ВидДоговора");
	Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда
		АвтоТекстНазначения = НСтр("ru='Возврат оплаты по договору';uk='Повернення оплати за договором'");
	Иначе
		АвтоТекстНазначения = НСтр("ru='Оплата по договору';uk='Оплата за договором'");
	КонецЕсли;
	
	Возврат АвтоТекстНазначения;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПересчитатьСуммуНДС(СуммаДокумента, СтавкаНДС)
	
	ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДС);
	СуммаНДС   = Окр(СуммаДокумента * ПроцентНДС / (100 + ПроцентНДС), 2);
	
	Возврат СуммаНДС;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция УстановитьНадписьРеквизитыПлательщика(Форма)
	
	Объект = Форма.Объект;
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
	
		ШаблонНадписи  = НСтр("ru='Код по ЕДРПОУ %1, %2';uk='Код за ЄДРПОУ %1, %2'");
		
		ТекстНадписи   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНадписи,
			СокрЛП(Объект.КодПоЕДРПОУОрганизации),
			СокрЛП(Объект.ТекстПлательщика));
	Иначе
		ТекстНадписи = "";
	КонецЕсли;
	
	Возврат ТекстНадписи;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция УстановитьНадписьРеквизитыПолучателя(Форма)
	
	Объект = Форма.Объект;
	
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		
		ШаблонНадписи  = НСтр("ru='Код по ЕДРПОУ %1, %2';uk='Код за ЄДРПОУ %1, %2'");
		
		ТекстНадписи   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНадписи,
			СокрЛП(Объект.КодПоЕДРПОУКонтрагента),
			СокрЛП(Объект.ТекстПолучателя));
	Иначе
		ТекстНадписи = "";
	КонецЕсли;
	
	Возврат ТекстНадписи;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция УстановитьНадписьРеквизитыБанкаПлательщика(Форма)
	
	Объект = Форма.Объект;
	Если ЗначениеЗаполнено(Объект.СчетОрганизации) Тогда
	
		ШаблонНадписи  = НСтр("ru='МФО %1, %2';uk='МФО %1, %2'");
		
		ТекстНадписи   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНадписи,
			СокрЛП(Объект.МФОБанкаПлательщика),
			СокрЛП(Объект.НаименованиеБанкаПлательщика));
	Иначе
		ТекстНадписи = "";
	КонецЕсли;
	
	Возврат ТекстНадписи;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция УстановитьНадписьРеквизитыБанкаПолучателя(Форма)
	
	Объект = Форма.Объект;
	
	Если ЗначениеЗаполнено(Объект.СчетКонтрагента) Тогда
	
		ШаблонНадписи  = НСтр("ru='МФО %1, %2';uk='МФО %1, %2'");
		
		ТекстНадписи   = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНадписи,
			СокрЛП(Объект.МФОБанкаПолучателя),
			СокрЛП(Объект.НаименованиеБанкаПолучателя));
	Иначе
		ТекстНадписи = "";
	КонецЕсли;
	
	Возврат ТекстНадписи;
	
КонецФункции

&НаСервере
Процедура СформироватьНазначениеПлатежаНаСервере(ТолькоСумму = Ложь)
	
	Документы.ПлатежноеПоручение.СформироватьНазначениеПлатежа(
		Объект,
		АвтоЗначенияРеквизитов,
		НазначениеПлатежаБылоИзмененоВручную,
		ТолькоСумму);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьАвтоЗначенияРеквизитов(Знач Организация, Знач СчетОрганизации, Знач Контрагент, Знач СчетКонтрагента)
	
	Возврат УчетДенежныхСредствБП.СформироватьАвтоЗначенияРеквизитовПлательщикаПолучателя(
		Организация,
		СчетОрганизации,
		Контрагент,
		СчетКонтрагента);
	
КонецФункции

&НаСервере
Процедура УстановитьРеквизитыПолучателяНаСервере(ОбработкаОповещения = Ложь)
	
	АвтоЗначенияРеквизитов = ПолучитьАвтоЗначенияРеквизитов(
		Объект.Организация,
		Объект.СчетОрганизации,
		Объект.Контрагент,
		Объект.СчетКонтрагента);
	
	ЗаполнитьЗначенияСвойств(
		Объект,
		АвтоЗначенияРеквизитов,
		"ТекстПолучателя, КодПоЕДРПОУКонтрагента, НаименованиеБанкаПолучателя, МФОБанкаПолучателя");
		
	НадписьРеквизитыПолучателя      = УстановитьНадписьРеквизитыПолучателя(ЭтаФорма);
	НадписьРеквизитыБанкаПолучателя = УстановитьНадписьРеквизитыБанкаПолучателя(ЭтаФорма);
	
	Если ОбработкаОповещения И ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ДоговорКонтрагента) И ЗначениеЗаполнено(Объект.Организация) Тогда
			ОсновнойДоговор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Объект.Контрагент, "ОсновнойДоговорКонтрагента");
			
			Если ЗначениеЗаполнено(ОсновнойДоговор) И ОпределитьОрганизациюДоговора(ОсновнойДоговор) = Объект.Организация Тогда
				Объект.ДоговорКонтрагента = ОсновнойДоговор;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.СчетКонтрагента) Тогда
			Объект.СчетКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Объект.Контрагент, "ОсновнойБанковскийСчет");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ОпределитьОрганизациюДоговора(Договор)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Договор);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоговорыКонтрагентов.Организация
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Организация;
	КонецЕсли;
	
	Возврат Справочники.Организации.ПустаяСсылка();
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтавкуНДСПоДоговору(Знач ДоговорКонтрагента)
	
	СтавкаНДС = Перечисления.СтавкиНДС.НДС20;
	Если НЕ ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		Возврат СтавкаНДС;
	КонецЕсли;
	
	Возврат СтавкаНДС;
	
КонецФункции

&НаСервере
Процедура УстановитьРеквизитыПлательщикаНаСервере()
	
	АвтоЗначенияРеквизитов = ПолучитьАвтоЗначенияРеквизитов(
		Объект.Организация,
		Объект.СчетОрганизации,
		Объект.Контрагент,
		Объект.СчетКонтрагента);
	
	ЗаполнитьЗначенияСвойств(
		Объект,
		АвтоЗначенияРеквизитов,
		"ТекстПлательщика, КодПоЕДРПОУОрганизации, НаименованиеБанкаПлательщика, МФОБанкаПлательщика");
		
	НадписьРеквизитыПлательщика      = УстановитьНадписьРеквизитыПлательщика(ЭтаФорма);
	НадписьРеквизитыБанкаПлательщика = УстановитьНадписьРеквизитыБанкаПлательщика(ЭтаФорма);
	
	Если ЗначениеЗаполнено(Объект.СчетОрганизации) Тогда
		Объект.ВалютаДокумента = Объект.СчетОрганизации.ВалютаДенежныхСредств;
		Если ЗначениеЗаполнено(Объект.СчетКонтрагента) И НЕ(Объект.СчетКонтрагента.ВалютаДенежныхСредств = Объект.ВалютаДокумента) Тогда
			Объект.СчетКонтрагента = Справочники.БанковскиеСчета.ПустаяСсылка();
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) И НЕ(Объект.ДоговорКонтрагента.ВалютаВзаиморасчетов = Объект.ВалютаДокумента) Тогда
			Объект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	УчетДенежныхСредствБП.УстановитьБанковскийСчет(
		Объект.СчетОрганизации,
		Объект.Организация,
		Объект.ВалютаДокумента);
	
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		КонтрагентПриИзмененииНаСервере();
	КонецЕсли;
	
	УстановитьРеквизитыПлательщикаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПереводНаДругойСчетПриИзмененииНаСервере()
	
	
	Если Объект.ПереводНаДругойСчет Тогда
		Объект.Контрагент 		  = Объект.Организация;
		Объект.СчетКонтрагента 	  = Справочники.БанковскиеСчета.ПустаяСсылка();
		Объект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		
		СчетКонтрагентаПриИзмененииНаСервере();
		
	Иначе
		КонтрагентПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры
	
&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()
	
	Объект.Контрагент = Получатель;
	
	УчетДенежныхСредствБП.УстановитьБанковскийСчет(
		Объект.СчетКонтрагента,
		Объект.Контрагент,
		Объект.ВалютаДокумента);
	
	БухгалтерскийУчетПереопределяемый.УстановитьДоговорКонтрагента(
		Объект.ДоговорКонтрагента, Объект.Контрагент, Объект.Организация);
		
	ДоговорПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СчетКонтрагентаПриИзмененииНаСервере()
	
	АвтоЗначенияРеквизитов = ПолучитьАвтоЗначенияРеквизитов(
		Объект.Организация,
		Объект.СчетОрганизации,
		Объект.Контрагент,
		Объект.СчетКонтрагента);
	
	ЗаполнитьЗначенияСвойств(
		Объект,
		АвтоЗначенияРеквизитов,
		"ТекстПолучателя, КодПоЕДРПОУКонтрагента, НаименованиеБанкаПолучателя, МФОБанкаПолучателя");
		
	НадписьРеквизитыПолучателя       = УстановитьНадписьРеквизитыПолучателя(ЭтаФорма);
	НадписьРеквизитыБанкаПолучателя  = УстановитьНадписьРеквизитыБанкаПолучателя(ЭтаФорма);
	СформироватьНазначениеПлатежаНаСервере(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ДоговорПриИзмененииНаСервере()
	
	УстановитьРеквизитыПолучателяНаСервере();
	Объект.СтавкаНДС = ПолучитьСтавкуНДСПоДоговору(Объект.ДоговорКонтрагента);
	Документы.ПлатежноеПоручение.СформироватьНазначениеПлатежа(
		Объект, АвтоЗначенияРеквизитов, НазначениеПлатежаБылоИзмененоВручную);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиДокументСписанияНаСервере(Знач ПлатежноеПоручение, Знач ДокументОснование, НаименованиеДокумента)
	
	Возврат Документы.ПлатежноеПоручение.НайтиДокументСписания(ПлатежноеПоручение, ДокументОснование, НаименованиеДокумента);
	
КонецФункции

&НаСервере
Процедура НастройкиПечатиПриИзмененииНаСервере()
	
	АвтоЗначенияРеквизитов = ПолучитьАвтоЗначенияРеквизитов(
		Объект.Организация,
		Объект.СчетОрганизации,
		Объект.Контрагент,
		Объект.СчетКонтрагента);
	
	ЗаполнитьЗначенияСвойств(
		Объект,
		АвтоЗначенияРеквизитов,
		"ТекстПлательщика, КодПоЕДРПОУОрганизации, НаименованиеБанкаПлательщика, МФОБанкаПлательщика, ТекстПолучателя, КодПоЕДРПОУКонтрагента, НаименованиеБанкаПолучателя, МФОБанкаПолучателя");
		
	НадписьРеквизитыПлательщика	     = УстановитьНадписьРеквизитыПлательщика(ЭтаФорма);
	НадписьРеквизитыПолучателя	     = УстановитьНадписьРеквизитыПолучателя(ЭтаФорма);
	НадписьРеквизитыБанкаПлательщика = УстановитьНадписьРеквизитыБанкаПлательщика(ЭтаФорма);
	НадписьРеквизитыБанкаПолучателя  = УстановитьНадписьРеквизитыБанкаПолучателя(ЭтаФорма);
	
	Документы.ПлатежноеПоручение.СформироватьНазначениеПлатежа(
		Объект, АвтоЗначенияРеквизитов, НазначениеПлатежаБылоИзмененоВручную);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьРеквизитыПлательщикаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	ЕстьОшибки = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(
			"Поле", "Заполнение", НСтр("ru='Организация';uk='Організація'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Организация", "Объект", ЕстьОшибки);
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.СчетОрганизации) Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(
			"Поле", "Заполнение", НСтр("ru='Банковский счет';uk='Банківський рахунок'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "СчетОрганизации", "Объект", ЕстьОшибки);
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЭтоПлательщик", Истина);
	СтруктураПараметров.Вставить("ЭтоБанк", Ложь);
	СтруктураПараметров.Вставить("Объект", Объект);
	
	ОткрытьФорму("Документ.ПлатежноеПоручение.Форма.РеквизитыПлательщикаПолучателя", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьРеквизитыБанкаПлательщикаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	ЕстьОшибки = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(
			"Поле", "Заполнение", НСтр("ru='Организация';uk='Організація'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Организация", "Объект", ЕстьОшибки);
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.СчетОрганизации) Тогда
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(
			"Поле", "Заполнение", НСтр("ru='Банковский счет';uk='Банківський рахунок'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "СчетОрганизации", "Объект", ЕстьОшибки);
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЭтоПлательщик", Истина);
	СтруктураПараметров.Вставить("ЭтоБанк", Истина);
	СтруктураПараметров.Вставить("Объект", Объект);
	
	ОткрытьФорму("Документ.ПлатежноеПоручение.Форма.РеквизитыПлательщикаПолучателя", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДокументСписанияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Параметры.Ключ) ИЛИ Модифицированность  Тогда
		ОбъектЗаписан = Записать();
		
		Если НЕ ОбъектЗаписан Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументСписания) Тогда
		ПоказатьЗначение(, ДокументСписания);
	Иначе
		Если Объект.ПометкаУдаления Тогда
			ПоказатьПредупреждение( , НСтр("ru='Нельзя вводить оплату на основании документа, помеченного на удаление!';uk='Не можна вводити оплату на підставі документа, який відмічений для вилучення!'"));
			Возврат;
		КонецЕсли;
		
		ПараметрыСписания = Новый Структура("Основание", Параметры.Ключ);
		ОткрытьФорму("Документ.СписаниеСРасчетногоСчета.ФормаОбъекта", ПараметрыСписания, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьПоляВводаНомерПоручения()

	Элементы.НомерПоручения.Видимость = Истина;
	Элементы.НомерПоручения.ТолькоПросмотр = НЕ ЗначениеЗаполнено(Объект.НомерПоручения);
	Если Элементы.НомерПоручения.ТолькоПросмотр Тогда
		Элементы.НомерПоручения.Подсказка =  НСтр("ru='Номер поручения будет присвоен при записи объекта.';uk=""Номер доручення буде привласнений при записі об'єкта.""");
	Иначе
		Элементы.НомерПоручения.Подсказка =  НСтр("ru='Номер поручения';uk='Номер доручення'");
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура СброситьУстановленныйНомерПоручения()
	
	Если Объект.НомерПоручения <> "" Тогда
		Объект.НомерПоручения = "";
	КонецЕсли;
	УстановитьДоступностьПоляВводаНомерПоручения();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти