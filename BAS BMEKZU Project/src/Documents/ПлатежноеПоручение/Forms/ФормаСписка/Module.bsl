#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаКоманднаяПанель;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	СтруктураОтбора = Неопределено;
	Если Параметры.Свойство("Отбор", СтруктураОтбора) И ТипЗнч(СтруктураОтбора) = Тип("Структура") Тогда
		СтруктураОтбора.Свойство("Организация",     ОтборОрганизация);
		СтруктураОтбора.Свойство("СчетОрганизации", ОтборСчетОрганизации);
		СтруктураОтбора.Свойство("ДатаОтбора",      ОтборДатаОтбора);
		СтруктураОтбора.Свойство("Контрагент",      ОтборКонтрагент);
	КонецЕсли;

	// Уведомим о появлении нового функционала
	НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях("БыстроеОсвоениеПлатежноеПоручение");
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	АдресХранилищаНастройкиДинСпискаДляРеестра = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		ОтборОрганизация = Параметр;
		ОтборОрганизациячетИспользование = ЗначениеЗаполнено(ОтборОрганизация);
		ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Организация");
		
		УстановитьСчетОрганизации(ОтборСчетОрганизации, ОтборОрганизация);
		
		ОтборСчетОрганизацииИспользование = ЗначениеЗаполнено(ОтборСчетОрганизации);
		ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "СчетОрганизации");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ПоказатьБыстроеОсвоение", 0.5, Истина); 
	
	УстановитьВосстановленныеОтборы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОтборОрганизацияИспользование = ЗначениеЗаполнено(ОтборОрганизация);
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Организация");
	
	УстановитьСчетОрганизации(ОтборСчетОрганизации, ОтборОрганизация);
	
	ОтборСчетОрганизацииИспользование = ЗначениеЗаполнено(ОтборСчетОрганизации);
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "СчетОрганизации");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСчетОрганизацииПриИзменении(Элемент)
	
	ОтборСчетОрганизацииИспользование = ЗначениеЗаполнено(ОтборСчетОрганизации);
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "СчетОрганизации");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборДатаОтбораПриИзменении(Элемент)
	
	ОтборДатаОтбораИспользование = ЗначениеЗаполнено(ОтборДатаОтбора);
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "ДатаОтбора");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентПриИзменении(Элемент)
	
	ОтборКонтрагентИспользование = ЗначениеЗаполнено(ОтборКонтрагент);
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Контрагент");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСчетОрганизацииИспользованиеПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "СчетОрганизации");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияИспользованиеПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Организация");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентИспользованиеПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Контрагент");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборДатаИспользованиеПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "ДатаОтбора");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	КлючеваяОперация = "ОткрытиеФормыПлатежноеПоручение";
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСоздать(Команда)
	
	КлючеваяОперация = "СозданиеФормыПлатежноеПоручение";
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);
	
	ЗначенияЗаполнения = ОбщегоНазначенияБПКлиентСервер.ПолучитьСтруктуруОтбораСписка(Список.Отбор.Элементы);
	
	ОткрытьФорму("Документ.ПлатежноеПоручение.Форма.ФормаДокумента", 
		Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения), ЭтаФорма)
	
КонецПроцедуры
	
&НаКлиенте
Процедура ВыгрузитьВКлиентБанк(Команда)

	СтруктураПараметров = Новый Структура;
	Если ОтборОрганизацияИспользование И ЗначениеЗаполнено(ОтборОрганизация) Тогда
		СтруктураПараметров.Вставить("Организация", ОтборОрганизация);
	КонецЕсли;
	Если ОтборСчетОрганизацииИспользование И ЗначениеЗаполнено(ОтборСчетОрганизации) Тогда
		СтруктураПараметров.Вставить("БанковскийСчет", ОтборСчетОрганизации);
	КонецЕсли;

	СтруктураПараметров.Вставить("КлиентБанкРежимПоУмолчанию", "  Выгрузка  ");

	ОткрытьФорму("Обработка.КлиентБанк.Форма", СтруктураПараметров);

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);

КонецПроцедуры

#КонецОбласти

#Область CлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура УстановитьСчетОрганизации(СчетОрганизации, Знач Организация)
	
	Если Организация = Неопределено Тогда
		Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	УчетДенежныхСредствБП.УстановитьБанковскийСчет(СчетОрганизации, Организация,
		ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВосстановленныеОтборы()
	
	ОсновнаяОрганизация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	Если ЗначениеЗаполнено(ОсновнаяОрганизация) И ОсновнаяОрганизация <> ОтборОрганизация Тогда
		ОтборОрганизация                  = ОсновнаяОрганизация;
		УстановитьСчетОрганизации(ОтборСчетОрганизации, ОтборОрганизация);
		ОтборОрганизацияИспользование     = ЗначениеЗаполнено(ОтборОрганизация);
		ОтборСчетОрганизацииИспользование = ЗначениеЗаполнено(ОтборСчетОрганизации);
	КонецЕсли;
	
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Организация");
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "СчетОрганизации");
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "ДатаОтбора");
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Контрагент");
	
КонецПроцедуры

&НаСервере
Процедура НастройкиДинамическогоСписка()
	
	Отчеты.РеестрДокументов.НастройкиДинамическогоСписка(ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПОЛЕЗНАЯ ИНФОРМАЦИЯ

&НаКлиенте
Процедура ПоказатьБыстроеОсвоение()
	
	ОбщегоНазначенияБПКлиент.ПоказатьПредупреждениеОбИзменениях("БыстроеОсвоениеПлатежноеПоручение", , НастройкиПредупреждений);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	Если Команда.Имя = "ПодменюПечатьОбычное_Реестр" Тогда
		НастройкиДинамическогоСписка();
	КонецЕсли;
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
