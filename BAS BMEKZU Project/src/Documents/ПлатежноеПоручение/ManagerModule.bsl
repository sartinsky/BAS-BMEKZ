#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПечатьПлатежногоПорученияВГрн(Выборка, ТабличныйДокумент)
	
	Если НачалоДня(Выборка.Дата) > ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьДатуОкончанияПереходаНаСтандартIBAN() Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_UK_ПлатежноеПоручение_2020");
		МакетАдаптированДляIBAN = Истина;
	Иначе
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_UK_ПлатежноеПоручение");
		МакетАдаптированДляIBAN = Ложь;
	КонецЕсли;
	
	Обл   = Макет.ПолучитьОбласть("Шапка");
	
	Обл.Параметры.НомерПП = СокрЛП(Выборка.НомерПоручения);;
	
	Обл.Параметры.ДатаДокумента = """" + Формат(Выборка.Дата, "Л=uk_UA; ДФ=dd") + """" + 
									Сред(Формат(Выборка.Дата, "Л=uk_UA; ДФ='dd MMMM yyyy'"), 3) + " р.";
	
	// Сумма платежного документа
	СуммаБезКопеек  = ЗначениеЗаполнено(Выборка.СчетОрганизацииСуммаБезКопеек) И Выборка.СчетОрганизацииСуммаБезКопеек;
	Обл.Параметры.СуммаПлатежа  = УчетДенежныхСредствБП.ФорматироватьСуммуПлатежногоДокумента(
	Выборка.СуммаДокумента, СуммаБезКопеек);
	Обл.Параметры.СуммаПрописью = УчетДенежныхСредствБП.ФорматироватьСуммуПрописьюПлатежногоДокумента(
	Выборка.СуммаДокумента, Выборка.ВалютаДокумента, СуммаБезКопеек);
	
	// Реквизиты плательщика
	Обл.Параметры.КодПоЕДРПОУ = Выборка.КодПоЕДРПОУОрганизации;
	Обл.Параметры.Плательщик  = Выборка.ТекстПлательщика;
	
	// Реквизиты банка плательщика
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата,, Выборка.СчетОрганизации);
	
	//Обл.Параметры.БанкПлательщика 		= СокрЛП(Выборка.НаименованиеБанкаПлательщика);
	//Обл.Параметры.НомерСчетаПлательщика = СокрЛП(Выборка.НомерСчетаПлательщика);
	//Обл.Параметры.КодБанкаПлательщика   = СокрЛП(Выборка.МФОБанкаПлательщика);
	Обл.Параметры.БанкПлательщика         = СведенияОбОрганизации.Банк;
	Обл.Параметры.НомерСчетаПлательщика   = ?(МакетАдаптированДляIBAN, СведенияОбОрганизации.НомерСчета, СведенияОбОрганизации.НомерСчетаСПереносом);
	Если Не МакетАдаптированДляIBAN Тогда
		Обл.Параметры.КодБанкаПлательщика     = СведенияОбОрганизации.МФО_Платеж;
	КонецЕсли;
	
	// Реквизиты получателя
	Обл.Параметры.ПолучательЕДРПОУ = Выборка.КодПоЕДРПОУКонтрагента;
	Обл.Параметры.Получатель	   = Выборка.ТекстПолучателя;
	
	// Реквизиты банка получателя
	СведенияОПолучателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Контрагент, Выборка.Дата,, Выборка.СчетКонтрагента);
	
	//Обл.Параметры.БанкПолучателя		= СокрЛП(Выборка.НаименованиеБанкаПолучателя);
	//Обл.Параметры.НомерСчетаПолучателя  = СокрЛП(Выборка.НомерСчетаПолучателя);
	//Обл.Параметры.КодБанкаПолучателя    = СокрЛП(Выборка.МФОБанкаПолучателя);
	Обл.Параметры.БанкПолучателя          = СведенияОПолучателе.Банк;
	Если Не МакетАдаптированДляIBAN Тогда
		Обл.Параметры.КодБанкаПолучателя      = СведенияОПолучателе.МФО_Платеж;
	КонецЕсли;
	Обл.Параметры.НомерСчетаПолучателя   = ?(МакетАдаптированДляIBAN, СведенияОПолучателе.НомерСчета, СведенияОПолучателе.НомерСчетаСПереносом);
	
	// Прочие реквизиты
	Обл.Параметры.НазначениеПлатежа = СокрЛП(Выборка.НазначениеПлатежа);
	
	ТабличныйДокумент.Вывести(Обл);
	
КонецПроцедуры

Процедура ПечатьПлатежногоПорученияВВалюте(Выборка, ТабличныйДокумент)
	
	СведенияПлательщика = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация);
	СведенияПолучателя  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Контрагент);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_UK_ПлатежноеПоручениеВВалюте");
	Обл   = Макет.ПолучитьОбласть("Шапка");
	
	Обл.Параметры.НомерПП = СокрЛП(Выборка.НомерПоручения);
	
	Обл.Параметры.ДатаДокумента = Выборка.Дата;
	
	СуммаБезКопеек  = ЗначениеЗаполнено(Выборка.СчетОрганизацииСуммаБезКопеек) И Выборка.СчетОрганизацииСуммаБезКопеек;
	
	// Реквизиты банка плательщика
	СведенияПлательщика = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата,, Выборка.СчетОрганизации);
	Обл.Параметры.БанкПлательщика         = СведенияПлательщика.Банк;
	Обл.Параметры.АдресБанкаПлательщика = СокрЛП(Выборка.АдресБанкаПлательщика);
	
	// Реквизиты плательщика
	Обл.Параметры.Плательщик  			= Выборка.ТекстПлательщика;
	Обл.Параметры.АдресПлательщика 		= СведенияПлательщика.ЮридическийАдрес;
	Обл.Параметры.РезидентПлательщик    = Истина;
	Обл.Параметры.НомерСчетаПлательщика =  СведенияПлательщика.НомерСчета;
	
	// Реквизиты суммы
	Обл.Параметры.СуммаПлатежа  = УчетДенежныхСредствБП.ФорматироватьСуммуПлатежногоДокумента(Выборка.СуммаДокумента, СуммаБезКопеек);
	Обл.Параметры.СуммаПрописью = УчетДенежныхСредствБП.ФорматироватьСуммуПрописьюПлатежногоДокумента(Выборка.СуммаДокумента, Выборка.ВалютаДокумента, СуммаБезКопеек);
	Обл.Параметры.КодВалюты		= Выборка.ВалютаДокумента.Код;

	// Реквизиты получателя
	Обл.Параметры.Получатель	     = Выборка.ТекстПолучателя;
	Обл.Параметры.АдресПолучателя	 = СведенияПолучателя.ЮридическийАдрес;
	Обл.Параметры.РезидентПолучатель = ?(Выборка.ПереводНаДругойСчет, Истина, Не Выборка.Контрагент.НеЯвляетсяРезидентом);
		
	// Реквизиты банка получателя
	СведенияОПолучателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Контрагент, Выборка.Дата,, Выборка.СчетКонтрагента);
	Обл.Параметры.БанкПолучателя		= СведенияОПолучателе.Банк;
	Обл.Параметры.НомерСчетаПолучателя  = СведенияОПолучателе.НомерСчета;
	
	// Прочие реквизиты
	Обл.Параметры.НазначениеПлатежа = СокрЛП(Выборка.НазначениеПлатежа);
	Обл.Параметры.КодПоЕДРПОУ 		= Выборка.КодПоЕДРПОУОрганизации;
	
	ТабличныйДокумент.Вывести(Обл);
	
КонецПроцедуры

#Область ПрограммныйИнтерфейс

Процедура СформироватьНазначениеПлатежа(Объект, АвтоЗначенияРеквизитов, НазначениеПлатежаБылоИзмененоВручную, ТолькоСумму = Ложь) Экспорт
	
	ТекстНазначение = Объект.НазначениеПлатежа;
	
	ПозицияСумма = Найти(ТекстНазначение, "Сума");
	
	Если ПозицияСумма = 0 Тогда // для совместимости, при редактировании старых платежек
		ПозицияСумма = Найти(ТекстНазначение, "В т.ч. ПДВ");
		Если ПозицияСумма = 0 Тогда
			ПозицияСумма = Найти(ТекстНазначение, "Без податку (ПДВ)");
		КонецЕсли;
	КонецЕсли;
	
	Если ТолькоСумму Тогда
		
		ТекстНазначение = ?(ПозицияСумма = 0, ТекстНазначение, Лев(ТекстНазначение, ПозицияСумма - 1));
		Если Прав(ТекстНазначение, 1) = Символы.ПС Тогда
			ТекстНазначение = Лев(ТекстНазначение, СтрДлина(ТекстНазначение) - 1);
		КонецЕсли;
		
	Иначе
		
		ТекстНазначенияАвто = ТекстНазначенияПлатежа(Объект.СчетКонтрагента, Объект.ДоговорКонтрагента);
		Если НазначениеПлатежаБылоИзмененоВручную = Ложь ИЛИ ПустаяСтрока(ТекстНазначение) Тогда
			ТекстНазначение = "";
			Если ЗначениеЗаполнено(АвтоЗначенияРеквизитов.ТекстНазначенияПлатежа) Тогда
				// Менять только если значение назначения платежа не было ранее введено вручную
				ТекстНазначение = АвтоЗначенияРеквизитов.ТекстНазначенияПлатежа;
			Иначе
				ТекстНазначение = ТекстНазначенияАвто;
			КонецЕсли;
			
			НазначениеПлатежаБылоИзмененоВручную = Ложь;
		Иначе
			ТекстНазначение = ?(ПозицияСумма = 0, ТекстНазначение, Лев(ТекстНазначение, ПозицияСумма - 1));
			Если Прав(ТекстНазначение, 1) = Символы.ПС Тогда
				ТекстНазначение = Лев(ТекстНазначение, СтрДлина(ТекстНазначение) - 1);
			КонецЕсли;
			
			АвтоЗначенияРеквизитов.Вставить("ТекстНазначенияПлатежа", ТекстНазначенияАвто);
			НазначениеПлатежаБылоИзмененоВручную = НазначениеПлатежаИзмененоВручную(ТекстНазначение, ТекстНазначенияАвто);
		КонецЕсли;
		
	КонецЕсли;
	
	// отработаем ситуацию, когда ПП введена на основании документа "Списание с расчетного счета",
	// при этом, в Списании данные введены Списком (поэтому и СтавкаНДС в ПП пустая) и заполнено Назначение платежа
	// т.к. скорее всего, Назначение платежа в Списании более правильно (учтены реквизиты, которых нет в ПП)
	Если (НазначениеПлатежаБылоИзмененоВручную ИЛИ
		(ЗначениеЗаполнено(Объект.ДокументОснование) И ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета")))
		И Объект.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка()
		И НЕ ПустаяСтрока(Объект.НазначениеПлатежа) Тогда
		
		Возврат;
	КонецЕсли;
	
	ТекстСумма = "Сума " + Формат(Объект.СуммаДокумента, "ЧЦ=15; ЧДЦ=2; ЧРД=,; ЧН=0,00; ЧГ=");

	Если Объект.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
		ТекстНДС = "Без податку (ПДВ)";
	ИначеЕсли Объект.СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
		ТекстНДС = "ПДВ (0%)";
	ИначеЕсли Объект.СуммаНДС > 0 Тогда
		ТекстНДС = "В т.ч. ПДВ "
			+ ?(ЗначениеЗаполнено(Объект.СтавкаНДС), " (" + Объект.СтавкаНДС + ") ", "")
			+ Формат(Объект.СуммаНДС, "ЧЦ=15; ЧДЦ=2; ЧРД=,; ЧН=0,00; ЧГ=");
	Иначе
		ТекстНДС = "";
	КонецЕсли;
	
	ТекстСуммаНазначения = ТекстСумма + Символы.ПС + ТекстНДС;
	
	Объект.НазначениеПлатежа = ТекстНазначение
		+ ?(ПустаяСтрока(ТекстСуммаНазначения), "", Символы.ПС + ТекстСуммаНазначения);

КонецПроцедуры // СформироватьНазначениеПлатежа()

Функция ТекстНазначенияПлатежа(Знач СчетКонтрагентаНазначения, Знач ДоговорКонтрагентаНазначения) Экспорт
	
	Если ЗначениеЗаполнено(СчетКонтрагентаНазначения.ТекстНазначения) Тогда
		ТекстНазначение = СчетКонтрагентаНазначения.ТекстНазначения;
	Иначе
		Если ЗначениеЗаполнено(ДоговорКонтрагентаНазначения) Тогда
			ПараметрыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДоговорКонтрагентаНазначения, "НаименованиеДляПечати, ВидДоговора");
			СтрокаДоговор = СокрЛП(ПараметрыДоговора.НаименованиеДляПечати);
			Если ПараметрыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда
				ТекстНазначение = "Повернення оплати за договором ";
			Иначе
				ТекстНазначение = "Оплата за договором ";
			КонецЕсли;
			ТекстНазначение = ТекстНазначение + СтрокаДоговор;
		Иначе
			ТекстНазначение = "Оплата за рахунком ";
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТекстНазначение;
	
КонецФункции

Функция НазначениеПлатежаИзмененоВручную(НазначениеПлатежа, НазначениеПлатежаАвто) Экспорт
	
	Если ПустаяСтрока(НазначениеПлатежа) ИЛИ ПустаяСтрока(НазначениеПлатежаАвто) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПозицияСумма = Найти(НазначениеПлатежа, "Сума");
	
	Если ПозицияСумма = 0 Тогда // для совместимости, при редактировании старых платежек
		ПозицияСумма = Найти(НазначениеПлатежа, "В т.ч. ПДВ");
		Если ПозицияСумма = 0 Тогда
			ПозицияСумма = Найти(НазначениеПлатежа, "Без податку (ПДВ)");
		КонецЕсли;
	КонецЕсли;
	
	ТекстНазначение = ?(ПозицияСумма = 0, НазначениеПлатежа, Лев(НазначениеПлатежа, ПозицияСумма - 1));
	Если Прав(ТекстНазначение, 1) = Символы.ПС Тогда
		ТекстНазначение = Лев(ТекстНазначение, СтрДлина(ТекстНазначение) - 1);
	КонецЕсли;
	
	Возврат СокрЛП(ТекстНазначение) <> СокрЛП(НазначениеПлатежаАвто);
	
КонецФункции

Функция НайтиДокументСписания(ПлатежноеПоручение, ДокументОснование, НаименованиеДокумента = "") Экспорт

	ДокументСписания = Документы.СписаниеСРасчетногоСчета.ПустаяСсылка();

	Если ЗначениеЗаполнено(ДокументОснование) И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СписаниеСРасчетногоСчета") Тогда
		ДокументСписания = ДокументОснование;
		ПараметрыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСписания, "Номер,Дата,Проведен");
		СтрокаДокумент = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ПараметрыДокумента.Номер);
		НаименованиеДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Списание с банковского счета № %1 от %2 г.';uk='Списання з банківського рахунку № %1 від %2 р.'"), СтрокаДокумент, Формат(ПараметрыДокумента.Дата,"ДФ=dd.MM.yyyy"));
		Возврат ДокументСписания;
	КонецЕсли;

	Если ЗначениеЗаполнено(ПлатежноеПоручение) Тогда

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументСсылка", ПлатежноеПоручение);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ДокСписания.Ссылка
		|ИЗ
		|	Документ.СписаниеСРасчетногоСчета КАК ДокСписания
		|ГДЕ
		|	ДокСписания.ДокументОснование = &ДокументСсылка";

		ВыборкаИзЗапроса = Запрос.Выполнить().Выбрать();

		Если ВыборкаИзЗапроса.Следующий() Тогда
			ДокументСписания = ВыборкаИзЗапроса.Ссылка;
		КонецЕсли;

	КонецЕсли;

	Если ЗначениеЗаполнено(ДокументСписания) Тогда
		ПараметрыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСписания, "Номер,Дата,Проведен");
		СтрокаДокумент = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ПараметрыДокумента.Номер);
		НаименованиеДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Списание с банковского счета № %1 от %2 г.';uk='Списання з банківського рахунку № %1 від %2 р.'"), СтрокаДокумент, Формат(ПараметрыДокумента.Дата,"ДФ=dd.MM.yyyy"));
	Иначе
		НаименованиеДокумента = НСтр("ru='Ввести документ списания с банковского счета';uk='Ввести документ списання з банківського рахунку'");
	КонецЕсли;

	Возврат ДокументСписания;

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Платежное поручение
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПлатежноеПоручение";
	КомандаПечати.Представление = НСтр("ru='Платежное поручение';uk='Платіжне доручення'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru='Реестр документов ""Платежное поручение""';uk='Реєстр документів ""Платіжне доручення""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
	
КонецПроцедуры

//// Формирует и возвращает текст запроса для выборки данных,
//// необходимых для формирования печатной формы
Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыПлатежногоПоручения()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПлатежноеПоручение.Ссылка,
	|	ПлатежноеПоручение.ВерсияДанных,
	|	ПлатежноеПоручение.ПометкаУдаления,
	|	ПлатежноеПоручение.Номер,
	|	ПлатежноеПоручение.Дата,
	|	ПлатежноеПоручение.НомерПоручения,
	|	ПлатежноеПоручение.Проведен,
	|	ПлатежноеПоручение.ДокументОснование,
	|	ПлатежноеПоручение.Организация,
	|	ПлатежноеПоручение.СчетОрганизации,
	|	ПлатежноеПоручение.Контрагент,
	|	ПлатежноеПоручение.СчетКонтрагента,
	|	ПлатежноеПоручение.НазначениеПлатежа,
	|	ПлатежноеПоручение.СуммаДокумента,
	|	ПлатежноеПоручение.ВалютаДокумента,
	|	ПлатежноеПоручение.ТекстПлательщика,
	|	ПлатежноеПоручение.ТекстПолучателя,
	|	ПлатежноеПоручение.Комментарий,
	|	ПлатежноеПоручение.КодПоЕДРПОУОрганизации,
	|	ПлатежноеПоручение.КодПоЕДРПОУКонтрагента,
	|	ПлатежноеПоручение.ПоказательДаты,
	|	ПлатежноеПоручение.ПоказательНомера,
	|	ПлатежноеПоручение.ПоказательОснования,
	|	ПлатежноеПоручение.ПоказательПериода,
	|	ПлатежноеПоручение.ПереводНаДругойСчет,
	|	ПлатежноеПоручение.ПоказательТипа,
	|	ПлатежноеПоручение.СтатусСоставителя,
	|	ПлатежноеПоручение.Ответственный,
	|	ПлатежноеПоручение.СтавкаНДС,
	|	ПлатежноеПоручение.СуммаНДС,
	|	ПлатежноеПоручение.Представление,
	|	ПлатежноеПоручение.МоментВремени,
	|	ПлатежноеПоручение.СчетОрганизации.СуммаБезКопеек,
	|	ПлатежноеПоручение.СчетОрганизации.Банк.Код КАК МФОБанкаПлательщика,
	|	ПлатежноеПоручение.СчетОрганизации.Банк.КоррСчет КАК СчетБанкаПлательщика,
	|	ПлатежноеПоручение.НаименованиеБанкаПлательщика КАК НаименованиеБанкаПлательщика,
	|	ПлатежноеПоручение.СчетОрганизации.Банк.Город КАК АдресБанкаПлательщика,
	|	ПлатежноеПоручение.СчетОрганизации.НомерСчета КАК НомерСчетаПлательщика,
	|	ПлатежноеПоручение.СчетКонтрагента.Банк.Код КАК МФОБанкаПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.Банк.КоррСчет КАК СчетБанкаПолучателя,
	|	ПлатежноеПоручение.НаименованиеБанкаПолучателя КАК НаименованиеБанкаПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.Банк.Город КАК АдресБанкаПолучателя,
	|	ПлатежноеПоручение.СчетКонтрагента.НомерСчета КАК НомерСчетаПолучателя
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|ГДЕ
	|	ПлатежноеПоручение.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПлатежноеПоручение.Дата,
	|	ПлатежноеПоручение.Ссылка";

	Возврат ТекстЗапроса;

КонецФункции

// Формирует печатную форму
// платежного поручения
//
// Параметры:
//  ТабДок - табличный документ
//
Функция ПечатьПлатежногоПоручения(МассивОбъектов, ОбъектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПлатежноеПоручение_ПлатежноеПоручение";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыПлатежногоПоручения();
	
	Выборка = Запрос.Выполнить().Выбрать();
	ОдинДокумент   = МассивОбъектов.Количество() = 1;
	ПервыйДокумент = Истина;
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Пока Выборка.Следующий() Цикл

		ЕстьОшибки = Ложь;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		Если Выборка.ВалютаДокумента = ВалютаРегламентированногоУчета Тогда
			ПечатьПлатежногоПорученияВГрн(Выборка, ТабличныйДокумент);
		Иначе
			ПечатьПлатежногоПорученияВВалюте(Выборка, ТабличныйДокумент);
		КонецЕсли;
		
		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
		НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции
	
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета ПлатежноеПоручение формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПлатежноеПоручение") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		Если МассивОбъектов.Количество() = 1 Тогда
			ДатаНомер = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(МассивОбъектов[0], "Дата, Номер");
			НомерПечать    = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДатаНомер.Номер, Истина, Истина);
			ДатаДокумента  = Формат(ДатаНомер.Дата, "ДФ='дд ММММ гггг'");
			СинонимМакета  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Платежное поручение № %1 от %2';uk='Платіжне доручення № %1 від %2'"), НомерПечать, ДатаДокумента); 
		Иначе
			СинонимМакета = НСтр("ru='Платежные поручения';uk='Платіжні доручення'");
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПлатежноеПоручение",
			СинонимМакета,
			ПечатьПлатежногоПоручения(МассивОбъектов, ОбъектыПечати),,
			"ОбщийМакет.ПФ_MXL_UK_ПлатежноеПоручение");
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;
	
	ПолеЗапросаНазначениеПлатежа =
	"ВЫБОР
	|		КОГДА Таб.НазначениеПлатежа ПОДОБНО """"
	|			ТОГДА ВЫРАЗИТЬ(Таб.Контрагент.Наименование КАК СТРОКА(100))
	|		ИНАЧЕ """" + (ВЫРАЗИТЬ(Таб.Контрагент.Наименование КАК СТРОКА(100))) + "" / "" + Таб.НазначениеПлатежа
	|	КОНЕЦ";
	
	Результат.Вставить("Информация", ПолеЗапросаНазначениеПлатежа);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли