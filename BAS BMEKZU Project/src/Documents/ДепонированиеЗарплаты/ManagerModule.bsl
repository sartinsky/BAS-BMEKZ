
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(Депоненты.ФизическоеЛицо, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Печать реестра депонированных сумм
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрДепонированныхСумм";
	КомандаПечати.Представление = НСтр("ru='Печать реестра депонированных сумм';uk='Друк реєстру депонованих сум'");
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru='Реестр документов ""Депонирование зарплаты""';uk='Реєстр документів ""Депонування зарплати""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;

	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрДепонированныхСумм") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РеестрДепонированныхСумм", НСтр("ru='Реестр депонированных сумм';uk='Реєстр депонованих сум'"), РеестрДепонированныхСумм(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ДепонированиеЗарплаты.РеестрДепонированныхСумм", , Истина);
	КонецЕсли;
	
КонецПроцедуры

Функция РеестрДепонированныхСумм(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрДепонированныхСумм";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ДепонированиеЗарплаты.РеестрДепонированныхСумм");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	// получаем данные для печати
	ВыборкаШапок = ВыборкаДляПечатиШапки(МассивОбъектов);
	ВыборкаСтрок = ВыборкаДляПечатиТаблицы(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаШапок.Следующий() Цикл
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// подсчитываем количество страниц документа - для корректного разбиения на страницы
		ВсегоСтрокДокумента = ВыборкаСтрок.Количество();
		
		ОбластьМакетаШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
		ОбластьМакетаШапка			= Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогПоСтранице = Макет.ПолучитьОбласть("ИтогПоЛисту");
		ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		
		// выводим данные о документе
		ОбластьМакетаШапкаДокумента.Параметры.ДатаДокумента			= ВыборкаШапок.Дата;
		ОбластьМакетаШапкаДокумента.Параметры.НазваниеОрганизации	= ВРег(ВыборкаШапок.НазваниеОрганизации);
		
		ТабличныйДокумент.Вывести(ОбластьМакетаШапкаДокумента);
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		
		ВыведеноСтраниц = 1; ВыведеноСтрок = 0; ИтогоНаСтранице = 0; Итого = 0;
		// выводим данные по строкам документа.
		ВыборкаСтрок.Сбросить();
		Пока ВыборкаСтрок.НайтиСледующий(ВыборкаШапок.Депонирование, "Депонирование") Цикл
			
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрок);
			ОбластьМакетаСтрока.Параметры.ФизическоеЛицо	= ВыборкаСтрок.Фамилия +" "+ ВыборкаСтрок.Имя +" "+ ВыборкаСтрок.Отчество;
			
			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста и ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
				ВывестиПодвалЛиста = Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				
				ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
				ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
				ВыведеноСтраниц = ВыведеноСтраниц + 1;
				ИтогоНаСтранице = 0;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			ИтогоНаСтранице = ИтогоНаСтранице + ВыборкаСтрок.Сумма;
			Итого = Итого + ВыборкаСтрок.Сумма;
			
		КонецЦикла;
		
		Если ВыведеноСтрок > 0 Тогда 
			ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
		КонецЕсли;
		
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
		Для Сч = 1 По ОбластьМакетаСтрока.Параметры.Количество() Цикл
			ОбластьМакетаСтрока.Параметры.Установить(Сч - 1,""); 
		КонецЦикла;
		ОбластьМакетаСтрока.Параметры.ФизическоеЛицо = " ";
		Пока ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти) Цикл
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
		
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаШапок);
		ОбластьМакетаПодвал.Параметры.Итого = Итого;
		ОбластьМакетаПодвал.Параметры.Кассир = ФизическиеЛицаКлиентСервер.ИмяФамилияВФорматеДСТУ(ОбластьМакетаПодвал.Параметры.Кассир);
		ОбластьМакетаПодвал.Параметры.ГлавныйБухгалтер = ФизическиеЛицаКлиентСервер.ИмяФамилияВФорматеДСТУ(ОбластьМакетаПодвал.Параметры.ГлавныйБухгалтер);
		ОбластьМакетаПодвал.Параметры.Бухгалтер = ФизическиеЛицаКлиентСервер.ИмяФамилияВФорматеДСТУ(ОбластьМакетаПодвал.Параметры.Бухгалтер);

		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати поком-плектно 
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаШапок.Ссылка);
		
	КонецЦикла; // по документам
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует запрос по документу
//
// Параметры: 
//  Ведомости - массив ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ВыборкаДляПечатиШапки(Депонирования)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Депонирования", Депонирования);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДепонированиеЗарплаты.Ссылка КАК Депонирование,
	|	ДепонированиеЗарплаты.Ведомость КАК Ссылка,
	|	ДепонированиеЗарплаты.Дата КАК Дата,
	|	ДепонированиеЗарплаты.Ведомость.Номер КАК Номер,
	|	ДепонированиеЗарплаты.Организация КАК Организация,
	|	ВЫРАЗИТЬ(ДепонированиеЗарплаты.Организация.НаименованиеПолное КАК СТРОКА(300)) КАК НазваниеОрганизации,
	|	ДепонированиеЗарплаты.Ведомость.Кассир КАК Кассир,
	|	ДепонированиеЗарплаты.Ведомость.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	ДепонированиеЗарплаты.Ведомость.Бухгалтер КАК Бухгалтер
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ДепонированиеЗарплаты КАК ДепонированиеЗарплаты
	|ГДЕ
	|	ДепонированиеЗарплаты.Ссылка В(&Депонирования)";

	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Кассир");
	ИменаПолейОтветственныхЛиц.Добавить("ГлавныйБухгалтер");
	ИменаПолейОтветственныхЛиц.Добавить("Бухгалтер");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Депонирование,
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.Номер,
	|	ДанныеДокументов.Дата,
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.НазваниеОрганизации,
	|	ЕСТЬNULL(ВТФИОКассирПоследние.Фамилия, """") + "" "" + ЕСТЬNULL(ВТФИОКассирПоследние.Имя, """") + "" "" + ЕСТЬNULL(ВТФИОКассирПоследние.Отчество, """") КАК Кассир,
	|	ЕСТЬNULL(ВТФИОГлавБухПоследние.Фамилия, """") + "" "" + ЕСТЬNULL(ВТФИОГлавБухПоследние.Имя, """") + "" "" + ЕСТЬNULL(ВТФИОГлавБухПоследние.Отчество, """") КАК ГлавныйБухгалтер,
	|	ЕСТЬNULL(ВТФИОБухгалтерПоследние.Фамилия, """") + "" "" + ЕСТЬNULL(ВТФИОБухгалтерПоследние.Имя, """") + "" "" + ЕСТЬNULL(ВТФИОБухгалтерПоследние.Отчество, """") КАК Бухгалтер
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОКассирПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОКассирПоследние.Ссылка
	|			И ДанныеДокументов.Кассир = ВТФИОКассирПоследние.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОГлавБухПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОГлавБухПоследние.Ссылка
	|			И ДанныеДокументов.ГлавныйБухгалтер = ВТФИОГлавБухПоследние.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОБухгалтерПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОБухгалтерПоследние.Ссылка
	|			И ДанныеДокументов.Бухгалтер = ВТФИОБухгалтерПоследние.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокументов.Организация,
	|	НАЧАЛОПЕРИОДА(ДанныеДокументов.Дата, ГОД),
	|	ДанныеДокументов.Номер";
	
	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

// Формирует запрос по табличной части документа
//
// Параметры: 
//  Ведомости - массив ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк
//
// Возвращаемое значение:
//  Выборка из результата запроса
//
Функция ВыборкаДляПечатиТаблицы(Депонирования)

	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Депонирования", Депонирования);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДепонированиеЗарплатыДепоненты.Ссылка КАК Депонирование,
	|	ДепонированиеЗарплатыДепоненты.Ссылка.Дата КАК Период,
	|	ВедомостьВКассуЗарплата.Ссылка КАК Ссылка,
	|	ВедомостьВКассуЗарплата.Ссылка.Номер КАК НомерВедомости,
	|	ВедомостьВКассуЗарплата.НомерСтроки,
	|	ВедомостьВКассуЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВедомостьВКассуЗарплата.КВыплате КАК Сумма
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ДепонированиеЗарплаты.Депоненты КАК ДепонированиеЗарплатыДепоненты
	//++ БУ ЗИК
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВКассу.ЗарплатаПодробно КАК ВедомостьВКассуЗарплата
	//~|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВедомостьНаВыплатуЗарплатыВКассу.Зарплата КАК ВедомостьВКассуЗарплата
	//-- БУ ЗИК	
	|		ПО ДепонированиеЗарплатыДепоненты.Ссылка.Ведомость = ВедомостьВКассуЗарплата.Ссылка
	|			И ДепонированиеЗарплатыДепоненты.ФизическоеЛицо = ВедомостьВКассуЗарплата.ФизическоеЛицо
	|			И (ДепонированиеЗарплатыДепоненты.Ссылка В (&Депонирования));
	//Запрос.Выполнить();
	//
	//Запрос.Текст = 
	|ВЫБРАТЬ
	|	ДанныеДокументов.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов";
	
	МассивФизическихЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	Сотрудники = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(МассивФизическихЛиц, Истина, Депонирования[0].Организация, Депонирования[0].Дата);
	
	Запрос.УстановитьПараметр("ТаблицаСотрудников", Сотрудники);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ТаблицаСотрудников.Сотрудник КАК Сотрудник
	               |ПОМЕСТИТЬ ВТТаблицаСотрудников
	               |ИЗ
	               |	&ТаблицаСотрудников КАК ТаблицаСотрудников
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеДокументов.Депонирование КАК Депонирование,
				   |	ДанныеДокументов.Период КАК Период,
				   |	ДанныеДокументов.Ссылка КАК Ссылка,
				   |	ДанныеДокументов.НомерВедомости КАК НомерВедомости,
				   |	ДанныеДокументов.НомерСтроки,
				   |	ДанныеДокументов.ФизическоеЛицо КАК ФизическоеЛицо,
				   |	ДанныеДокументов.Сумма КАК Сумма,
	               |	ТаблицаСотрудников.Сотрудник КАК Сотрудник,
				   |	ТаблицаСотрудников.Сотрудник.Код КАК ТабельныйНомер
	               |ПОМЕСТИТЬ ВТДанные
	               |ИЗ
	               |	ВТДанныеДокументов КАК ДанныеДокументов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаСотрудников КАК ТаблицаСотрудников
	               |		ПО ДанныеДокументов.ФизическоеЛицо = ТаблицаСотрудников.ФизическоеЛицо";
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = 
		КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
    		Запрос.МенеджерВременныхТаблиц,
    		"ВТДанные");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, "Фамилия, Имя, Отчество, Подразделение");

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Депонирование КАК Депонирование,
	|	ДанныеДокументов.Ссылка КАК Ведомость,
	|	ДанныеДокументов.НомерСтроки КАК НомерСтроки,
	|	КадровыеДанныеСотрудников.Подразделение,
	|	ДанныеДокументов.НомерВедомости,
	|	ДанныеДокументов.ТабельныйНомер,
	|	КадровыеДанныеСотрудников.Фамилия,
	|	КадровыеДанныеСотрудников.Имя,
	|	КадровыеДанныеСотрудников.Отчество,
	|	ДанныеДокументов.Сумма
	|ИЗ
	|	ВТДанные КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|		ПО ДанныеДокументов.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Депонирование,
	|	Ведомость,
	|	НомерСтроки";

	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

#КонецОбласти

#КонецЕсли
