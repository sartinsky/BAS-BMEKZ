// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ЗаполнитьТабличнуюЧастьПодписиПриСозданииДокумента() Экспорт
	
	Для Каждого лПодпись Из ВидЭлектронногоДокумента.Подписи Цикл
		
		НоваяСтрокаПодписи = Подписи.Добавить();
		НоваяСтрокаПодписи.Подпись = лПодпись.Подпись;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьТабличнуюЧастьПодписиПриСозданииДокумента()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Если Организация.УдалятьПромежуточныеВерсииЭлектронныхДокументов Тогда
	//	ЕстьНепромежуточныеВерсииДокументов = Ложь;
	//	СписокУдаляемыхСтрок = Новый СписокЗначений;
	//	
	//	Для Каждого СтрокаСодержания Из Содержание Цикл
	//		Если Не СтрокаСодержания.ПромежуточнаяВерсия Тогда
	//			ЕстьНепромежуточныеВерсииДокументов = Истина;
	//		ИначеЕсли СтрокаСодержания.ПолученоОтКонтрагента Тогда
	//			ЕстьНепромежуточныеВерсииДокументов = Истина;
	//		ИначеЕсли Не СтрокаСодержания.НомерСтроки = 1 Тогда
	//			СписокУдаляемыхСтрок.Вставить(0, СтрокаСодержания.НомерСтроки - 1);
	//		КонецЕсли;
	//	КонецЦикла;
	//	
	//	Если ЕстьНепромежуточныеВерсииДокументов Тогда
	//		Для Каждого УдаляемаяСтрока Из СписокУдаляемыхСтрок Цикл
	//			Содержание.Удалить(УдаляемаяСтрока.Значение);
	//		КонецЦикла;
	//	КонецЕсли;
	//КонецЕсли;
	
	
	Если не ЭтоНовый() Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	скEDI_ЭлектронныйДокумент.Документ1С КАК Документ1С
		               |ИЗ
		               |	Документ.скEDI_ЭлектронныйДокумент КАК скEDI_ЭлектронныйДокумент
		               |ГДЕ
		               |	скEDI_ЭлектронныйДокумент.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			РанееДокумент1С = ВыборкаРезультатаЗапроса.Документ1С;
			
			Если ЗначениеЗаполнено(РанееДокумент1С) И РанееДокумент1С <> Документ1С Тогда
				скEDI_ОбщегоНазначения.скEDI_РегистрацияЭлектронногоДокументаПриЗаписи(РанееДокумент1С, Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ЕДРПОУКонтрагента = СокрЛП(ЕДРПОУКонтрагента);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Перем лРеквизитыЭлектронногоДокумента;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		лОсновныеДанныеЭлектронногоДокумента = ДанныеЗаполнения.ОсновныеДанные;
		лОсновныеДанныеЭлектронногоДокумента.Свойство("РеквизитыЭлектронногоДокумента", лРеквизитыЭлектронногоДокумента);
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, лОсновныеДанныеЭлектронногоДокумента);
		
		Если Не ЗначениеЗаполнено(Организация) Тогда
			
			Если ЗначениеЗаполнено(ВидЭлектронногоДокумента) Тогда
				
				Организация = ВидЭлектронногоДокумента.Владелец;
				
			ИначеЕсли ЗначениеЗаполнено(Документ1С) Тогда
				
				Организация = скEDI_ОбщегоНазначения.ПолучитьОрганизациюEDIПоДокументу1С(Документ1С);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ВидЭлектронногоДокумента) Тогда
			
			ВидЭлектронногоДокумента = скEDI_ОбщегоНазначения.ОпределитьВидЭлектронногоДокументаПоИмениШаблона(ЕДРПОУВладельцаШаблона, ИмяШаблона, ВерсияШаблона, Перечисления.скEDI_ТипыДокументовMEDoc.ПустаяСсылка(), Организация);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Дата) Тогда
			
			Дата = ТекущаяДата();
			
		КонецЕсли;
		
		ХранилищеРеквизитовЭлектронногоДокумента = Новый ХранилищеЗначения(лРеквизитыЭлектронногоДокумента);
		
		лМаршрут = Неопределено;
		Если лОсновныеДанныеЭлектронногоДокумента.Свойство("Маршрут", лМаршрут) Тогда
			Если ТипЗнч(лМаршрут) = Тип("Массив") Тогда
				Маршрут.Очистить();
				Для Каждого ЭлементМаршрута Из лМаршрут Цикл
					НовыйЭлементМаршрута = Маршрут.Добавить();
					ЗаполнитьЗначенияСвойств(НовыйЭлементМаршрута, ЭлементМаршрута);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	Если не ЗначениеЗаполнено(ДатаСоздания) Тогда
		ДатаСоздания = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ПриЗаписи(Отказ)
	Если ЗначениеЗаполнено(Документ1С) Тогда
		НаборЗаписей = РегистрыСведений.скEDI_ЭлектронныеДокументы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ЭлектронныйДокумент.Установить(Документы.скEDI_ЭлектронныйДокумент.ПустаяСсылка());
		НаборЗаписей.Отбор.Документ1С.Установить(Документ1С);
		НаборЗаписей.Отбор.ВидЭлектронногоДокумента.Установить(ВидЭлектронногоДокумента);
		НаборЗаписей.Записать(Истина);
	КонецЕсли;
		
	НаборЗаписей = РегистрыСведений.скEDI_ЭлектронныеДокументы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Отбор.ЭлектронныйДокумент.Установить(Ссылка);
	НаборЗаписей.Отбор.ВидЭлектронногоДокумента.Установить(ВидЭлектронногоДокумента);
	
	СтрокаНабора = НаборЗаписей.Добавить();
	СтрокаНабора.Организация = Организация;
	СтрокаНабора.ЭлектронныйДокумент = Ссылка;
	СтрокаНабора.Документ1С = Документ1С;
	СтрокаНабора.ВидЭлектронногоДокумента = ВидЭлектронногоДокумента;
	СтрокаНабора.ВхИсх = ВхИсх;
	Если ЗначениеЗаполнено(Документ1С) Тогда
		Информация = скEDI_НастройкиПодКонфигурацию.ПолучитьИнформациюДляРегистрацииДокумента(Документ1С);
		СтрокаНабора.Документ1СДата = Информация.Дата;
		СтрокаНабора.Документ1СНомер = Информация.Номер;
		СтрокаНабора.Документ1СКомментарий = Информация.Комментарий;
		СтрокаНабора.Документ1СКонтрагент = Информация.Контрагент;
		СтрокаНабора.Документ1СОрганизация = Информация.Организация;
		СтрокаНабора.Документ1СДоговорКонтрагента = Информация.ДоговорКонтрагента;
		Если ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаДокумента") Тогда
			СтрокаНабора.Документ1ССуммаДокумента = Информация.СуммаДокумента;
			СтрокаНабора.Документ1ССуммаНДСДокумента = Информация.СуммаНДСДокумента;
			СтрокаНабора.Документ1ССуммаБезНДСДокумента = Информация.СуммаБезНДСДокумента;
		ИначеЕсли ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаТЧТовары") Тогда
			СтрокаНабора.Документ1ССуммаДокумента = Информация.СуммаТовары;
			СтрокаНабора.Документ1ССуммаНДСДокумента = Информация.СуммаНДСТовары;
			СтрокаНабора.Документ1ССуммаБезНДСДокумента = Информация.СуммаБезНДСТовары;
		ИначеЕсли ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаТЧУслуги") Тогда
			СтрокаНабора.Документ1ССуммаДокумента = Информация.СуммаУслуги;
			СтрокаНабора.Документ1ССуммаНДСДокумента = Информация.СуммаНДСУслуги;
			СтрокаНабора.Документ1ССуммаБезНДСДокумента = Информация.СуммаБезНДСУслуги;
		КонецЕсли;
		СтрокаНабора.Документ1СПроведен = Информация.Проведен;
		СтрокаНабора.Документ1СМожетБытьПроведен = Информация.МожетБытьПроведен;
		СтрокаНабора.ВидДокумента1С = Информация.ВидДокумента1С;
	КонецЕсли;
	СтрокаНабора.РегистрируетсяВЕРННПокупателем = РегистрируетсяВЕРННПокупателем;
	НаборЗаписей.Записать(Истина);
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	//Отказ = Не МонопольныйРежим();
КонецПроцедуры
