#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Выполняет движения по регистрам.
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоОС, Отказ, Заголовок)
	
	НаборДвижений = Движения.СтоимостьПриобретенияОСПропорциональноОблагаемыхНДС;
	
	// Получим таблицу значений, совпадающую со струкутрой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.ВыгрузитьКолонки();
		
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС, ТаблицаДвижений);
	
	ТаблицаДвижений.ЗаполнитьЗначения(Организация,				"Организация");
	ТаблицаДвижений.ЗаполнитьЗначения(СпецРежимНалогообложения, "СпецРежимНалогообложения");
	
	Если НЕ Отказ И ТаблицаДвижений.Количество() > 0 Тогда
			
		НаборДвижений.мПериод          = Дата;
		НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
			
		Движения.СтоимостьПриобретенияОСПропорциональноОблагаемыхНДС.ВыполнитьПриход();
		Движения.СтоимостьПриобретенияОСПропорциональноОблагаемыхНДС.Записать();
			
	КонецЕсли;
	
КонецПроцедуры // ДвиженияПоРегистрам()

Функция ПодготовитьТаблицуОС(РезультатЗапросаПоОС, СтруктураШапкиДокумента)

	ТаблицаОС = РезультатЗапросаПоОС.Выгрузить();

	Возврат ТаблицаОС;

КонецФункции // ПодготовитьТаблицуТоваров()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаПроведения".
//
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Сформируем структуру реквизитов шапки документа.
	СтруктураШапкиДокумента = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияБПВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	// Получим необходимые данные для проведения и проверки заполенения данные по табличной части "ОС".
	СтруктураПолей = Новый Структура;
	СтруктураПростыхПолей = Новый Структура;
	СтруктураПолей.Вставить("НеоборотныйАктив"    		   , "НеоборотныйАктив");
	СтруктураПолей.Вставить("ДатаНачалаИспользования"      , "ДатаНачалаИспользования");
	СтруктураПолей.Вставить("ДатаФормированияКредита"      , "ДатаФормированияКредита");
	СтруктураПолей.Вставить("БазаНДС"					   , "БазаНДС");
	СтруктураПолей.Вставить("СуммаНДС"   				   , "СуммаНДС");
	СтруктураПолей.Вставить("СуммаНДСПропорциональноКредит", "СуммаНДСПропорциональноКредит");
	
	РезультатЗапросаПоОС = ОбщегоНазначенияРед12.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ОС", СтруктураПолей, СтруктураПростыхПолей);
	
	ТаблицаПоОС 	= ПодготовитьТаблицуОС(РезультатЗапросаПоОС, СтруктураШапкиДокумента);
	
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоОС, Отказ, Заголовок);
	КонецЕсли;

	ПроведениеСервер.ПодготовитьНаборыЗаписейКЗаписиДвижений(ЭтотОбъект);
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры // ОбработкаУдаленияПроведения

Процедура ЗаполнитьПоДокументуОснованию(Основание)
	
	// Заполним реквизиты из стандартного набора по документу основанию.
	ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;

	Если Дата >= '2013-01-01' Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДатаФормированияКредита");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначенияБП.ПолучитьРабочуюДату());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

#КонецЕсли
