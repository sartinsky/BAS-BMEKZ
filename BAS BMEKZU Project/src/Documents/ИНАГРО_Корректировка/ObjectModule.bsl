#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда  

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);	
	
	ИНАГРО_ЭлеваторЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения); 	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
КонецПроцедуры 

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Перем Заголовок, СтруктураШапкиДокумента;
		
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
		   
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияБПВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);

	ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);	

	// Движения по документу
	Если НЕ Отказ Тогда		
		ПроводкиПоРегистрамЭлеватора(РежимПроведения, СтруктураШапкиДокумента, Отказ, Заголовок);	
	КонецЕсли;	
		
	ПроведениеСервер.ПодготовитьНаборыЗаписейКЗаписиДвижений(ЭтотОбъект);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти

#Область Проведение

// Процедура формирует структуру шапки документа и дополнительных полей.
//
Процедура ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента) Экспорт

	// Дерево значений, содержащее имена необходимых полей в запросе по шапке.
	Перем ДеревоПолейЗапросаПоШапке;
	
	СтруктураШапкиДокумента   = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	// Заполним по шапке документа дерево параметров, нужных при проведении.
	ДеревоПолейЗапросаПоШапке = ОбщегоНазначенияРед12.СформироватьДеревоПолейЗапросаПоШапке();
	ОбщегоНазначенияРед12.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Владелец",             "Ссылка",      "Владелец");
	ОбщегоНазначенияРед12.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "ДоговорыКонтрагентов", "Организация", "ДоговорОрганизация");
	ОбщегоНазначенияРед12.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Номенклатура",         "Ссылка",      "Номенклатура");
   	ОбщегоНазначенияРед12.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Склад",                "Ссылка",      "Склад");
	ОбщегоНазначенияРед12.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Урожай",               "Ссылка",      "Урожай");   	
	
	// Сформируем запрос на дополнительные параметры, нужные при проведении, по данным шапки документа.
	СтруктураШапкиДокумента   = УправлениеЗапасами.СформироватьЗапросПоДеревуПолей(ЭтотОбъект, ДеревоПолейЗапросаПоШапке, СтруктураШапкиДокумента, "");

КонецПроцедуры

Процедура ПроводкиПоРегистрамЭлеватора(РежимПроведения, СтруктураШапкиДокумента, Отказ, Заголовок)
	
	Если ПравитьОстатки Тогда	
		Если ВидДвижения = Перечисления.ИНАГРО_ВидыДвижений.Расход Тогда
			// расход
			СтруктураДвиженияПроведения(СтруктураШапкиДокумента, "Расход");
			ИНАГРО_Элеватор.ДвиженияПоРегиструОстаткиРасход(Движения, СтруктураШапкиДокумента);
		ИначеЕсли ВидДвижения = Перечисления.ИНАГРО_ВидыДвижений.Приход Тогда
			// приход
			СтруктураДвиженияПроведения(СтруктураШапкиДокумента);
			ИНАГРО_Элеватор.ДвиженияПоРегиструОстаткиПриход(Движения, СтруктураШапкиДокумента);		
		КонецЕсли;
	КонецЕсли;
	
	Если Дополнительно И ПравитьОстатки Тогда	
		Если ВидДвижения = Перечисления.ИНАГРО_ВидыДвижений.Расход Тогда
			// расход
			СтруктураДвиженияПроведенияДополнительно(СтруктураШапкиДокумента);
			ИНАГРО_Элеватор.ДвиженияПоРегиструОстаткиПриход(Движения, СтруктураШапкиДокумента);
		ИначеЕсли ВидДвижения = Перечисления.ИНАГРО_ВидыДвижений.Приход Тогда
			// приход
			СтруктураДвиженияПроведенияДополнительно(СтруктураШапкиДокумента, "Расход");
			ИНАГРО_Элеватор.ДвиженияПоРегиструОстаткиРасход(Движения, СтруктураШапкиДокумента);
		КонецЕсли;
	КонецЕсли;	
	
	Если ПравитьФорму36 Тогда
		Если ВидДвижения = Перечисления.ИНАГРО_ВидыДвижений.Расход Тогда
			// расход
			СтруктураДвиженияПроведения(СтруктураШапкиДокумента, "Расход", "Форма36");
			ИНАГРО_Элеватор.ДвиженияПоРегиструФорма36Расход(Движения, СтруктураШапкиДокумента);
		ИначеЕсли ВидДвижения = Перечисления.ИНАГРО_ВидыДвижений.Приход Тогда
			// приход
			СтруктураДвиженияПроведения(СтруктураШапкиДокумента);
			ИНАГРО_Элеватор.ДвиженияПоРегиструФорма36Приход(Движения, СтруктураШапкиДокумента);
		КонецЕсли;
	КонецЕсли;
	
	Если ПравитьФорму36Сводную Тогда
		Если ВидДвижения = Перечисления.ИНАГРО_ВидыДвижений.Расход Тогда
			// расход
			СтруктураДвиженияПроведения(СтруктураШапкиДокумента, "Расход", "Форма36");
			ИНАГРО_Элеватор.ДвиженияПоРегиструФорма36СводнаяРасход(Движения, СтруктураШапкиДокумента);
		ИначеЕсли ВидДвижения = Перечисления.ИНАГРО_ВидыДвижений.Приход Тогда
			// приход
			СтруктураДвиженияПроведения(СтруктураШапкиДокумента);
			ИНАГРО_Элеватор.ДвиженияПоРегиструФорма36СводнаяПриход(Движения, СтруктураШапкиДокумента);
		КонецЕсли;
	КонецЕсли;
	
	Если Дополнительно И ПравитьФорму36 Тогда	
		Если ВидДвижения = Перечисления.ИНАГРО_ВидыДвижений.Расход Тогда
			// расход
			СтруктураДвиженияПроведенияДополнительно(СтруктураШапкиДокумента);
			ИНАГРО_Элеватор.ДвиженияПоРегиструФорма36Приход(Движения, СтруктураШапкиДокумента);
		ИначеЕсли ВидДвижения = Перечисления.ИНАГРО_ВидыДвижений.Приход Тогда
			// приход
			СтруктураДвиженияПроведенияДополнительно(СтруктураШапкиДокумента, "Расход", "Форма36");
			ИНАГРО_Элеватор.ДвиженияПоРегиструФорма36Расход(Движения, СтруктураШапкиДокумента);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Структура с реквизитами для проведения
//
Процедура СтруктураДвиженияПроведения(СтруктураШапкиДокумента, ВидДвижения_ = "Приход", Регистр = "Остатки")
	
	// Измерения
	СтруктураШапкиДокумента.Вставить("Организация",        Организация);
	СтруктураШапкиДокумента.Вставить("Владелец",           Владелец);
	СтруктураШапкиДокумента.Вставить("ДоговорКонтрагента", ДоговорКонтрагента);
	СтруктураШапкиДокумента.Вставить("Номенклатура",       Номенклатура);
	СтруктураШапкиДокумента.Вставить("Склад",              Склад);
	СтруктураШапкиДокумента.Вставить("ВидХранения",        ВидХранения);
	СтруктураШапкиДокумента.Вставить("Урожай",             Урожай);
	
	// Ресурсы
	СтруктураШапкиДокумента.Вставить("Количество",         Количество);
	СтруктураШапкиДокумента.Вставить("ФизическийВес",      Вес);
	СтруктураШапкиДокумента.Вставить("ЗачетныйВес",        ЗачетныйВес);
	СтруктураШапкиДокумента.Вставить("Влажность",          Влажность);
	СтруктураШапкиДокумента.Вставить("ВесПоВлажности",     ВесПоВлажности);
	СтруктураШапкиДокумента.Вставить("СорнаяПримесь",      СорнаяПримесь);
	СтруктураШапкиДокумента.Вставить("ВесПоСорнойПримеси", ВесПоСорнойПримеси);
	СтруктураШапкиДокумента.Вставить("ЗерноваяПримесь",    ЗерноваяПримесь);
	СтруктураШапкиДокумента.Вставить("Поставщик",          Владелец);
	СтруктураШапкиДокумента.Вставить("Откуда",             Склад);
	СтруктураШапкиДокумента.Вставить("ВесОбразцов",        0); 	
	СтруктураШапкиДокумента.Вставить("ВидФасовки",         ВидФасовки); 	
	СтруктураШапкиДокумента.Вставить("УбыльВесаПриСушке",  УбыльВесаПриСушке);	
	
КонецПроцедуры

// Структура с реквизитами для проведения дополнительная
//
Процедура СтруктураДвиженияПроведенияДополнительно(СтруктураШапкиДокумента,ВидДвижения_ = "Приход", Регистр = "Остатки")
	
	// Измерения
	СтруктураШапкиДокумента.Вставить("Организация",        Организация);
	СтруктураШапкиДокумента.Вставить("Владелец",           Владелец1);
	СтруктураШапкиДокумента.Вставить("ДоговорКонтрагента", ДоговорКонтрагента1);	
	СтруктураШапкиДокумента.Вставить("Номенклатура",       НоменклатураНовая);
	СтруктураШапкиДокумента.Вставить("Склад",              Склад1);
	СтруктураШапкиДокумента.Вставить("ВидХранения",        ВидХранения1);
	СтруктураШапкиДокумента.Вставить("Урожай",             Урожай1);
		
	// Ресурсы
	СтруктураШапкиДокумента.Вставить("Количество",         Количество);
	СтруктураШапкиДокумента.Вставить("ФизическийВес",      Вес);
	СтруктураШапкиДокумента.Вставить("Вес",                Вес);
	СтруктураШапкиДокумента.Вставить("Влажность",          Влажность);
	СтруктураШапкиДокумента.Вставить("СорнаяПримесь",      СорнаяПримесь); 
	СтруктураШапкиДокумента.Вставить("ВесПоСорнойПримеси", ВесПоСорнойПримеси);	
	СтруктураШапкиДокумента.Вставить("ВидФасовки",         ВидФасовки); 	
	СтруктураШапкиДокумента.Вставить("УбильВесаПриСушке",  УбыльВесаПриСушке);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли