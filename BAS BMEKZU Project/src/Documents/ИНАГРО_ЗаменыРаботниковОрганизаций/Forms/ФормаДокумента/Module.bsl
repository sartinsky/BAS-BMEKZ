#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	КадровыйУчетФормы.ФормаКадровогоДокументаПриСозданииНаСервере(ЭтаФорма);
	
	Если Параметры.Ключ.Пустая() Тогда
		
		// Заполним реквизиты из значений заполнения
		Если Параметры.Свойство("Организация") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
			Объект.Организация = Параметры.Организация;
		КонецЕсли;
		Если Параметры.Свойство("Подразделение") И ЗначениеЗаполнено(Параметры.Подразделение) Тогда 
			Объект.Подразделение = Параметры.Подразделение;
		КонецЕсли;
		
		Объект.ВидРасчета = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.Замещение"); 
		
		УстановитьФункциональныеОпцииФормы();
		
	КонецЕсли;
		
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	ПодготовитьФормуНаСервере(); 

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	Если Объект.ДатаНачала <> Дата('00010101') И ЗначениеЗаполнено(Объект.ЗаменаСотрудник) Тогда 
			 
		ТекстВопроса = НСтр("ru='Получить параметры работника?';uk='Отримати параметри працівника?'");
		Оповещение = Новый ОписаниеОповещения("ПолучитьПараметрыРаботникаЗавершение", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Возврат;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаменаСотрудникПриИзменении(Элемент)
			
	Если Объект.ДатаНачала <> Дата('00010101') Тогда 
			 
		ТекстВопроса = НСтр("ru='Получить параметры работника?';uk='Отримати параметри працівника?'");
		Оповещение = Новый ОписаниеОповещения("ПолучитьПараметрыРаботникаЗавершение", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Возврат;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
		
	УстановитьСостояниеДокумента();
			
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ПараметрыФО = Новый Структура("Организация, Период", Объект.Организация, Объект.Дата);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПараметрыРаботникаЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт 
   	
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
        Возврат;
	КонецЕсли;
			
	СтруктураДанных = ПолучитьГрафикПоРаботнику(Объект.ЗаменаСотрудник, Объект.ДатаНачала);
	Объект.ЗаменаПодразделениеОрганизации	= СтруктураДанных.ПодразделениеОрганизации;
	Объект.ЗаменаГрафикРаботы				= СтруктураДанных.ГрафикРаботы;
	Объект.ЗаменаДолжность					= СтруктураДанных.Должность;
		     
КонецПроцедуры

&НаСервере
// Получает График По Работнику
//
Функция ПолучитьГрафикПоРаботнику(Сотрудник, ДатаНачала)
	
	СтруктураДанныхОРаботнике = Новый Структура("ПодразделениеОрганизации,Подразделение,ГрафикРаботы,Должность");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачалаСобытия",	ДатаНачала );
	Запрос.УстановитьПараметр("парамСотрудник",		Сотрудник );
	Запрос.УстановитьПараметр("парамФизЛицо",		Сотрудник.ФизическоеЛицо );
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	АктуальныйГрафик.ПодразделениеОрганизации,   
	|	АктуальныйГрафик.ГрафикРаботы КАК ГрафикРаботы,   
	|	АктуальныйГрафик.Должность КАК Должность   
	|ИЗ Справочник.Сотрудники КАК Сотрудники	
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&ДатаНачалаСобытия, Сотрудник = &парамСотрудник) КАК АктуальныйГрафик
	|ПО ИСТИНА
	|ГДЕ Сотрудники.Ссылка = &парамСотрудник
	|";
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СтруктураДанныхОРаботнике.ПодразделениеОрганизации	= Выборка.ПодразделениеОрганизации;
		СтруктураДанныхОРаботнике.ГрафикРаботы				= Выборка.ГрафикРаботы;
		СтруктураДанныхОРаботнике.Должность					= Выборка.Должность;
	КонецЕсли;
	
	Возврат	СтруктураДанныхОРаботнике;

КонецФункции // ПолучитьГрафикПоРаботнику()

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти






