#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Реестр
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрНакладных";
	КомандаПечати.Представление = НСтр("ru='Реестр накладных на вывоз хлебопродуктов';uk='Реєстр накладних на вивіз хлібопродуктів'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
	
	// Таблица
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Таблица";
	КомандаПечати.Представление = НСтр("ru='Реестр накладных на вывезенное зерно';uk='Реєстр накладних на вивезення зерна'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";

	// Ведомость взвешиваний
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВедомостьОтвесов";
	КомандаПечати.Представление = НСтр("ru='Ведомость отвесов';uk='Відомість зважувань'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка"; 
	
	// Акт уничтожения
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктУничтожения";
	КомандаПечати.Представление = НСтр("ru='Акт уничтожения негодных отходов';uk='Акт знищення непридатних відходів'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка"; 

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Реестр товарно-транспортных накладных (вывоз)""';uk='Реєстр документів ""Реєстр товарно-транспортних накладних (вивезення)""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
    
    // Акт уничтожения 2021
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктУничтожения_2021";
	КомандаПечати.Представление = НСтр("ru='Акт уничтожения негодных отходов (2021)';uk='Акт знищення непридатних відходів (2021)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка"; 
    
    // Ведомость взвешиваний
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВедомостьОтвесов_2021";
	КомандаПечати.Представление = НСтр("ru='Ведомость отвесов (2021)';uk='Відомість зважувань (2021)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка"; 

	//// Список
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "Список";
	//КомандаПечати.Представление = НСтр("ru='Список';uk='Список'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка"; 

	//
	//// ЗХС3
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ЗХС3";
	//КомандаПечати.Представление = НСтр("ru='ЗХС3';uk='ЗХС3'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
	
КонецПроцедуры		

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрНакладных") Тогда		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РеестрНакладных", НСтр("ru='Реестр накладных на вывоз хлебопродуктов';uk='Реєстр накладних на вивіз хлібопродуктів'"), 
		ПечатьРеестр(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),, "Документ.ИНАГРО_РеестрТТНВывоз.ПФ_MXL_Реестр", ,Истина);  
		
	КонецЕсли;
	
	// Проверяем, нужно ли для макета формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Таблица") Тогда		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Таблица", НСтр("ru='Реестр накладных на вывезенное зерно';uk='Реєстр накладних на вивезення зерна'"), 
		ПечатьТаблица(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),, "Документ.ИНАГРО_РеестрТТНВывоз.ПФ_MXL_Таблица", ,Истина);
		
	КонецЕсли; 	
	
		// Проверяем, нужно ли для макета формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВедомостьОтвесов") Тогда		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ВедомостьОтвесов", НСтр("ru='Ведомость отвесов';uk='Відомість зважування'"), 
		ПечатьВедомостьВзвешиваний(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),, "Документ.ИНАГРО_РеестрТТНВывоз.ПФ_MXL_ВедомостьОтвесов", ,Истина);
		
	КонецЕсли; 
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктУничтожения") Тогда		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктУничтожения", НСтр("ru=''Акт уничтожения негодных отходов';uk='Акт знищення непридатних відходів'"), 
		ПечатьАктУничтожения(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),, "Документ.ИНАГРО_РеестрТТНВывоз.ПФ_MXL_АктУничтожения", ,Истина);
		
    КонецЕсли; 
    
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктУничтожения_2021") Тогда		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктУничтожения_2021", НСтр("ru='Акт уничтожения негодных отходов 2021';uk='Акт знищення непридатних відходів'"), 
		ПечатьАктУничтожения_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),, "Документ.ИНАГРО_РеестрТТНВывоз.ПФ_MXL_UK_АктУничтожения_2021", ,Истина);
		
    КонецЕсли; 
      Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВедомостьОтвесов_2021") Тогда		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ВедомостьОтвесов_2021", НСтр("ru=''Ведомость отвесов 2021';uk='Відомість зважування 2021'"), 
		ПечатьВедомостьВзвешиваний_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),, "Документ.ИНАГРО_РеестрТТНВывоз.ПФ_MXL_UK_ВедомостьОтвесов_2021", ,Истина);
		
	КонецЕсли; 




КонецПроцедуры

Функция ПечатьРеестр(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_РеестрТТНВывоз_ПФ_MXL_Реестр";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВывоз.ПФ_MXL_Реестр");
	
	// печать производится на языке, указанном в настройках
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	//Шапка
	Запрос = новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВывоз.Организация.НаименованиеПолное КАК ОрганизацияНаименование,
		|	ИНАГРО_РеестрТТНВывоз.Дата КАК ДатаДок,
		|	ИНАГРО_РеестрТТНВывоз.Номер КАК НомерДок,
		|	ИНАГРО_РеестрТТНВывоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВывоз.НовыйСклад КАК НовыйСклад,
		|	ИНАГРО_РеестрТТНВывоз.Урожай КАК Урожай,
		|	ИНАГРО_РеестрТТНВывоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВывоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВывоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВывоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВывоз.Получатель КАК Получатель,
		|	ИНАГРО_РеестрТТНВывоз.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_РеестрТТНВывоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВывоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВывоз.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВывоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВывоз.НомерАнализа КАК НомерАнализа
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВывоз КАК ИНАГРО_РеестрТТНВывоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВывоз.Ссылка = &Ссылка";
	
	//Строка
	ЗапросТТН = новый Запрос;
	ЗапросТТН.Текст =
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВывозСписокТТН.НомерСтроки КАК Ном,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдИзмерения,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Транспорт КАК Транспорт,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН КАК ТТН
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВывоз.СписокТТН КАК ИНАГРО_РеестрТТНВывозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка = &Ссылка"; 
	
	ПервыйДокумент = Истина;	
	
	Для каждого Ссылка Из МассивОбъектов Цикл 
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1; 		
		
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		Организация = Шапка.Организация;
		Дата        = Шапка.ДатаДок;
		
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(Шапка.Организация,Дата); 	
		НомерДок = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НомерДок);
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка"); 
		
		ОбластьШапка.Параметры.Фирма = Шапка.Организация.НаименованиеПолное;
		//ОбластьШапка.Параметры.ТекДата = ТекущаяДата();
		ОбластьШапка.Параметры.НомерДок = Шапка.НомерДок;
		ОбластьШапка.Параметры.ДатаДок = Формат(Шапка.ДатаДок, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		ОбластьШапка.Параметры.Владелец = Шапка.Владелец;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(ОбластьШапка.Параметры.Владелец);
		ОбластьШапка.Параметры.Склад = Шапка.Склад;	
		ОбластьШапка.Параметры.Урожай = Шапка.Урожай;
		ТабДокумент.Вывести(ОбластьШапка);  	
			
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		ЗапросТТН.УстановитьПараметр("Ссылка",Ссылка);
		
		ТабЧасть = ЗапросТТН.Выполнить().Выгрузить();
		
		Инд = 0;
		Пока ТабЧасть.Количество() > Инд Цикл
			ОблСтрока.Параметры.Ном = Инд + 1;
			ОблСтрока.Параметры.ТМЦ = Шапка.Номенклатура;
			ОблСтрока.Параметры.Ед = Шапка.Номенклатура.БазоваяЕдиницаИзмерения;
			ОблСтрока.Параметры.Транспорт = ТабЧасть[Инд].Транспорт;
			ОблСтрока.Параметры.Вес = ТабЧасть[Инд].Вес;
			
			 
			Если ЗначениеЗаполнено(Шапка.ЛабораторныйАнализ) Тогда
				ОблСтрока.Параметры.Влажность = Шапка.Влажность;
				ОблСтрока.Параметры.СорнаяПримесь = Шапка.СорнаяПримесь;
				ОблСтрока.Параметры.ЗерноваяПримесь = Шапка.ЗерноваяПримесь;
				ОблСтрока.Параметры.НомерАнализа = Шапка.НомерАнализа;
			Иначе
				ОблСтрока.Параметры.Влажность = ТабЧасть[Инд].ТТН.Влажность;
				ОблСтрока.Параметры.СорнаяПримесь = ТабЧасть[Инд].ТТН.СорнаяПримесь;
				ОблСтрока.Параметры.ЗерноваяПримесь = ТабЧасть[Инд].ТТН.ЗерноваяПримесь;
				ОблСтрока.Параметры.НомерАнализа = ТабЧасть[Инд].ТТН.НомерАнализа;
			КонецЕсли; 
			// >> ИН-АГРО
			
			Инд = Инд + 1;
			ТабДокумент.Вывести(ОблСтрока);
		КонецЦикла;
		
		ОблДно = Макет.ПолучитьОбласть("Дно");
		ОблДно.Параметры.Бухгалтер = Руководители.БухгалтерККУ;
		ОблДно.Параметры.ФизическийВес = Шапка.ФизическийВес;
		ТабДокумент.Вывести(ОблДно);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка); 			
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьТаблица(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_РеестрТТНВывоз_ПФ_MXL_Таблица";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВывоз.ПФ_MXL_Таблица"); 	
	
	// печать производится на языке, указанном в настройках
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	//Шапка
	ЗапросШапка = новый Запрос;
	ЗапросШапка.Текст =
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВывоз.Организация.НаименованиеПолное КАК ОрганизацияНаименование,
		|	ИНАГРО_РеестрТТНВывоз.Дата КАК ДатаДок,
		|	ИНАГРО_РеестрТТНВывоз.Номер КАК НомерДок,
		|	ИНАГРО_РеестрТТНВывоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВывоз.НовыйСклад КАК НовыйСклад,
		|	ИНАГРО_РеестрТТНВывоз.Урожай КАК Урожай,
		|	ИНАГРО_РеестрТТНВывоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВывоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВывоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВывоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВывоз.Получатель КАК Получатель,
		|	ИНАГРО_РеестрТТНВывоз.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_РеестрТТНВывоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВывоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВывоз.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВывоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВывоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВывоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВывоз.ВидОперации КАК ВидОперации,
		|	ИНАГРО_РеестрТТНВывоз.ВидХранения КАК ВидХранения,
		|	ИНАГРО_РеестрТТНВывоз.ВидОперацииОтвесов КАК ВидОперацииОтвесов,
		|	ИНАГРО_РеестрТТНВывоз.МестоХранения КАК МестоХранения,
		|	ИНАГРО_РеестрТТНВывоз.ВесОбразцов КАК ВесОбразцов
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВывоз КАК ИНАГРО_РеестрТТНВывоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВывоз.Ссылка = &Ссылка";
	
	//Строка
	ЗапросТТН = новый Запрос;
	ЗапросТТН.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВывозСписокТТН.НомерСтроки КАК Ном,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдИзмерения,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Транспорт КАК Транспорт,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН КАК ТТН
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВывоз.СписокТТН КАК ИНАГРО_РеестрТТНВывозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка = &Ссылка"; 
	
	ПервыйДокумент = Истина;
	
	Для каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ЗапросШапка.УстановитьПараметр("Ссылка",Ссылка);
		Шапка = ЗапросШапка.Выполнить().Выбрать();
		Шапка.Следующий();	
		
	ВидКультуры=ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(Шапка.Номенклатура,"ВидКультуры");
	
	Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(Шапка.Организация,Шапка.ДатаДок);
	
	
	ЗначенияБазисов=ИНАГРО_Элеватор.ПолучитьБазисныеЗначения(ВидКультуры, Шапка.Дата, Шапка.Организация, Шапка.Владелец, Шапка.ДоговорКонтрагента, Шапка.Склад);	
	
	НомерДок = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НомерДок);
	
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	
	ОблШапка.Параметры.Фирма = Шапка.Организация.НаименованиеПолное;
	ОблШапка.Параметры.ТекДата = ТекущаяДата();
	ОблШапка.Параметры.НомерДок = НомерДок;
	ОблШапка.Параметры.ДатаДок = Формат(Шапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	ОблШапка.Параметры.Владелец = Шапка.Владелец;
	ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(ОблШапка.Параметры.Владелец);
	ОблШапка.Параметры.Куда = Шапка.НовыйСклад;
	ОблШапка.Параметры.Поставщик = Шапка.Владелец;
	//ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(ОблШапка.Параметры.Владелец);
	ОблШапка.Параметры.Склад = Шапка.Склад;
	ОблШапка.Параметры.ВидХранения = Шапка.ВидХранения;
	ОблШапка.Параметры.ТМЦ = Шапка.Номенклатура.НаименованиеПолное;
	ОблШапка.Параметры.Урожай = Шапка.Урожай;
	ТабДокумент.Вывести(ОблШапка);
	
	ОблСтрока = Макет.ПолучитьОбласть("Строка");
	ЗапросТТН.УстановитьПараметр("Ссылка",Ссылка);
	
	ТабЧасть = ЗапросТТН.Выполнить().Выгрузить();
	
	Инд = 0;
	
	Пока ТабЧасть.Количество() > Инд Цикл
		ОблСтрока.Параметры.Ном1 = Инд + 1;
		ОблСтрока.Параметры.НомерТТН1 = ТабЧасть[Инд].НомерТТН;
		ОблСтрока.Параметры.Вес1 = ТабЧасть[Инд].Вес;
		ОблСтрока.Параметры.Влажность1 = ТабЧасть[Инд].ТТН.Влажность;    
		Инд = Инд + 1;
		Если ТабЧасть.Количество() > Инд Тогда
			ОблСтрока.Параметры.Ном2 = Инд + 1;
			ОблСтрока.Параметры.НомерТТН2 = ТабЧасть[Инд].НомерТТН;
			ОблСтрока.Параметры.Вес2 = ТабЧасть[Инд].Вес;
			ОблСтрока.Параметры.Влажность2 = ТабЧасть[Инд].ТТН.Влажность;  
			Инд = Инд + 1;
		Иначе 
			ОблСтрока.Параметры.Ном2 = "";
			ОблСтрока.Параметры.НомерТТН2 = "";
			ОблСтрока.Параметры.Вес2 = "";
			ОблСтрока.Параметры.Влажность2 = "";   
			Инд = Инд + 1;			
		КонецЕсли;
		ТабДокумент.Вывести(ОблСтрока);
	КонецЦикла;
	
	ОблДно = Макет.ПолучитьОбласть("Дно");
	ОблДно.Параметры.ФизическийВес = Шапка.ФизическийВес;
	ОблДно.Параметры.КолТТН = ТабЧасть.Количество();
	ОблДно.Параметры.НомерАнализа = Шапка.ЛабораторныйАнализ.Номер;
	ОблДно.Параметры.Влажность = Шапка.Влажность;
	ОблДно.Параметры.СорнаяПримесь = Шапка.СорнаяПримесь;
	ОблДно.Параметры.ЗерноваяПримесь = Шапка.ЗерноваяПримесь;
	ОблДно.Параметры.ВесОбразцов = Шапка.ВесОбразцов;
	ОблДно.параметры.ЗавЛаб= Руководители.НачальникВТЛ;
	ОблДно.параметры.бухгалтер=ПараметрыСеанса.ТекущийПользователь;
	ТабДокумент.Вывести(ОблДно);

		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка); 	
		
	КонецЦикла;
	
	Возврат ТабДокумент; 	
	
КонецФункции

Функция ПечатьВедомостьВзвешиваний (МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_РеестрТТНВывоз_ПФ_MXL_ВедомостьОтвесов";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВывоз.ПФ_MXL_ВедомостьОтвесов"); 	
	
	// печать производится на языке, указанном в настройках
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	//Шапка
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВывоз.Организация.НаименованиеПолное КАК ОрганизацияНаименование,
		|	ИНАГРО_РеестрТТНВывоз.Дата КАК ДатаДок,
		|	ИНАГРО_РеестрТТНВывоз.Номер КАК НомерДок,
		|	ИНАГРО_РеестрТТНВывоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВывоз.НовыйСклад КАК НовыйСклад,
		|	ИНАГРО_РеестрТТНВывоз.Урожай КАК Урожай,
		|	ИНАГРО_РеестрТТНВывоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВывоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВывоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВывоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВывоз.Получатель КАК Получатель,
		|	ИНАГРО_РеестрТТНВывоз.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_РеестрТТНВывоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВывоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВывоз.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВывоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВывоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВывоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВывоз.ВидОперации КАК ВидОперации,
		|	ИНАГРО_РеестрТТНВывоз.ВидХранения КАК ВидХранения,
		|	ИНАГРО_РеестрТТНВывоз.ВидОперацииОтвесов КАК ВидОперацииОтвесов,
		|	ИНАГРО_РеестрТТНВывоз.МестоХранения КАК МестоХранения,
		|	ИНАГРО_РеестрТТНВывоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВывоз.Комментарий КАК Примечание,
		|	ИНАГРО_РеестрТТНВывоз.ПредседательКомиссии КАК ГоловаКомиссии,
		|	ИНАГРО_РеестрТТНВывоз.ПервыйЧленКомиссии КАК ЧленКомиссии1,
		|	ИНАГРО_РеестрТТНВывоз.ВторойЧленКомиссии КАК ЧленКомиссии2,
		|	ИНАГРО_РеестрТТНВывоз.ТретийЧленКомиссии КАК ЧленКомиссии3
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВывоз КАК ИНАГРО_РеестрТТНВывоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВывоз.Ссылка = &Ссылка";
	
	//Строка
	ЗапросТТН = новый Запрос;
	ЗапросТТН.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВывозСписокТТН.НомерСтроки КАК Ном,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдИзмерения,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Транспорт КАК Транспорт,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН КАК ТТН
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВывоз.СписокТТН КАК ИНАГРО_РеестрТТНВывозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка = &Ссылка"; 
	
	ПервыйДокумент = Истина;
	
	Для каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ЗапросШапка.УстановитьПараметр("Ссылка",Ссылка);
		
		Шапка = ЗапросШапка.Выполнить().Выбрать();
		Шапка.Следующий();
		
		////Шапка
		ОблШапка = Макет.ПолучитьОбласть("Шапка");
		ОблШапка.Параметры.Организация = Шапка.Организация; 
		ОблШапка.Параметры.Дата= Формат(Шапка.Дата,"ДЛФ = Д");
		ОблШапка.Параметры.Культура	= Шапка.Номенклатура;
		ОблШапка.Параметры.Склад = Шапка.Склад;
		ОблШапка.Параметры.РодОперации = Шапка.ВидОперацииОтвесов;
		ОблШапка.Параметры.Весы	= "Автомобильные веса";
		ОблШапка.Параметры.Примечание	= Шапка.Примечание;
		ТабДокумент.Вывести(ОблШапка);
		//
		////Строка
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		ЗапросТТН.УстановитьПараметр("Ссылка",Ссылка);
		ТабЧасть = ЗапросТТН.Выполнить().Выгрузить();
		Инд = 0;
		ВесВсего=0;
		ВесТараВсего=0;
		ВесБруттоВсего=0;
		Пока ТабЧасть.Количество() > Инд Цикл
			ОблСтрока.Параметры.Ном1 = ТабЧасть[Инд].ТТН.НомерБланка;
			ОблСтрока.Параметры.Тара1 = ТабЧасть[Инд].ТТН.ВесТары+ТабЧасть[Инд].ТТН.ВесТары1;
			
			ОблСтрока.Параметры.Брутто1 = ТабЧасть[Инд].ТТН.ВесБрутто+ТабЧасть[Инд].ТТН.ВесБрутто1;
			ОблСтрока.Параметры.Нетто1 = ТабЧасть[Инд].ТТН.Вес;
			ВесТараВсего=ВесТараВсего+ОблСтрока.Параметры.Тара1;	
			ВесВсего=ВесВсего+ОблСтрока.Параметры.Нетто1;
			
			ВесБруттоВсего=ВесБруттоВсего+ОблСтрока.Параметры.Брутто1;
			
			Инд = Инд + 1;
			Если ТабЧасть.Количество() > Инд Тогда
				ОблСтрока.Параметры.Ном2 = ТабЧасть[Инд].ТТН.НомерБланка;
				ОблСтрока.Параметры.Тара2 = ТабЧасть[Инд].ТТН.ВесТары+ТабЧасть[Инд].ТТН.ВесТары1;
				ОблСтрока.Параметры.Брутто2 = ТабЧасть[Инд].ТТН.ВесБрутто+ТабЧасть[Инд].ТТН.ВесБрутто1;
				ОблСтрока.Параметры.Нетто2 = ТабЧасть[Инд].Вес;
				ВесТараВсего=ВесТараВсего+ОблСтрока.Параметры.Тара2;
				ВесВсего=ВесВсего+ОблСтрока.Параметры.Нетто2; 		
				ВесБруттоВсего=ВесБруттоВсего+ОблСтрока.Параметры.Брутто2;
				
				Инд = Инд + 1;
			Иначе
				ОблСтрока.Параметры.Ном2 = "" ;
				ОблСтрока.Параметры.Тара2 = "";
				ОблСтрока.Параметры.Брутто2 = "";
				ОблСтрока.Параметры.Нетто2 = "";
			КонецЕсли;
			ТабДокумент.Вывести(ОблСтрока);
			
		КонецЦикла;	
		
		
		//валютаДокумента=Справочники.Валюты.	//Дно
		ОблДно = Макет.ПолучитьОбласть("Дно");
		ОблДно.Параметры.ВесБруттоИтого = ВесБруттоВсего;
		ОблДно.Параметры.ВесТараИтого = ВесТараВсего;
		ОблДно.Параметры.ВесНеттоИТого = ВесВсего;
		
		ОблДно.Параметры.ГоловаКомисии 	= Шапка.ГоловаКомиссии;
		ОблДно.Параметры.ПервыйЧлен 	= Шапка.ЧленКомиссии1;
		ОблДно.Параметры.ВторойЧлен     = Шапка.ЧленКомиссии2;
		СтрокаВеса = ЧислоПрописью(ОблДно.Параметры.ВесНеттоИТого,"Л = uk_UK; НП=Ложь; FN = Ложь; ДП=Ложь" )+"кілограм";           
		ОблДно.Параметры.ВесПрописью = СтрЗаменить(СтрокаВеса,"00","");
		ТабДокумент.Вывести(ОблДно);
	
		
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка); 
		
	КонецЦикла;  
	
	Возврат ТабДокумент; 	 
	
КонецФункции 

Функция ПечатьАктУничтожения (МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_РеестрТТНВывоз_ПФ_MXL_АктУничтожения";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВывоз.ПФ_MXL_АктУничтожения"); 	
	
	// печать производится на языке, указанном в настройках
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	//Шапка
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВывоз.Организация.НаименованиеПолное КАК ОрганизацияНаименование,
		|	ИНАГРО_РеестрТТНВывоз.Дата КАК ДатаДок,
		|	ИНАГРО_РеестрТТНВывоз.Номер КАК НомерДок,
		|	ИНАГРО_РеестрТТНВывоз.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВывоз.НовыйСклад КАК НовыйСклад,
		|	ИНАГРО_РеестрТТНВывоз.Урожай КАК Урожай,
		|	ИНАГРО_РеестрТТНВывоз.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВывоз.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВывоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВывоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВывоз.Получатель КАК Получатель,
		|	ИНАГРО_РеестрТТНВывоз.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_РеестрТТНВывоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВывоз.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВывоз.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВывоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВывоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_РеестрТТНВывоз.Дата КАК Дата,
		|	ИНАГРО_РеестрТТНВывоз.ВидОперации КАК ВидОперации,
		|	ИНАГРО_РеестрТТНВывоз.ВидХранения КАК ВидХранения,
		|	ИНАГРО_РеестрТТНВывоз.ВидОперацииОтвесов КАК ВидОперацииОтвесов,
		|	ИНАГРО_РеестрТТНВывоз.МестоХранения КАК МестоХранения,
		|	ИНАГРО_РеестрТТНВывоз.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_РеестрТТНВывоз.Комментарий КАК Примечание,
		|	ИНАГРО_РеестрТТНВывоз.ПредседательКомиссии КАК ГоловаКомиссии,
		|	ИНАГРО_РеестрТТНВывоз.ПервыйЧленКомиссии КАК ЧленКомиссии1,
		|	ИНАГРО_РеестрТТНВывоз.ВторойЧленКомиссии КАК ЧленКомиссии2,
		|	ИНАГРО_РеестрТТНВывоз.ТретийЧленКомиссии КАК ЧленКомиссии3,
		|	ИНАГРО_РеестрТТНВывоз.НачальникОхраны КАК НачальникОхраны,
		|	ИНАГРО_РеестрТТНВывоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВывоз.ПриказНаВывоз КАК ПриказНаВывоз,
		|	ИНАГРО_РеестрТТНВывоз.ПриказНаУничтожение КАК ПриказНаУничтожение
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВывоз КАК ИНАГРО_РеестрТТНВывоз
		|ГДЕ
		|	ИНАГРО_РеестрТТНВывоз.Ссылка = &Ссылка";
	
	//Строка
	ЗапросТТН = новый Запрос;
	ЗапросТТН.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВывозСписокТТН.НомерСтроки КАК Ном,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдИзмерения,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Транспорт КАК Транспорт,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН КАК ТТН
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВывоз.СписокТТН КАК ИНАГРО_РеестрТТНВывозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка = &Ссылка"; 
	
	ПервыйДокумент = Истина;
	
	Для каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ЗапросШапка.УстановитьПараметр("Ссылка",Ссылка);
		
		Шапка = ЗапросШапка.Выполнить().Выбрать();
		Шапка.Следующий();
		
		ЗапросТТН.УстановитьПараметр("Ссылка",Ссылка);
		СписокТТН = ЗапросТТН.Выполнить().Выгрузить();
		
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(Шапка.Организация,Шапка.ДатаДок);
		пропускНаВывоз = "";
		
		Для каждого Строка из СписокТТН цикл
			ПропускНаВывоз = ПропускНаВывоз + Строка(Строка.НомерТТН)+"; ";
		КонецЦикла;			
			
		НомерДок = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НомерДок);
		
		ОблШапка = Макет.ПолучитьОбласть("Шапка");
		
		ОблШапка.Параметры.Организация = Шапка.ОрганизацияНаименование;
		ОблШапка.Параметры.Номер = НомерДок;
		ОблШапка.Параметры.Дата =Формат(Шапка.ДатаДок, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		ОблШапка.Параметры.НачальникВТЛ= Руководители.НачальникВТЛ;
		ОблШапка.Параметры.ЗавСкладом= РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(,Новый Структура("СтруктурнаяЕдиница",Шапка.Склад)).ФизическоеЛицо;
		
		
		ОблШапка.Параметры.НачальникОхраны = Шапка.НачальникОхраны;
		ОблШапка.Параметры.Директор = Руководители.Руководитель; 
		ОблШапка.Параметры.Склад = Шапка.Склад;
		ОблШапка.Параметры.Причина= Шапка.Примечание;
		ОблШапка.Параметры.приказ= Шапка.ПриказНаУничтожение;
		
		ОблШапка.Параметры.пропуск = ПропускНаВывоз;
		
		ОблШапка.Параметры.анализ = Шапка.ЛабораторныйАнализ;
		
		ОблШапка.Параметры.сор = 100 - Шапка.СорнаяПримесь;
		ОблШапка.Параметры.вес = Шапка.ФизическийВес;
		ТабДокумент.Вывести(ОблШапка); 	
		
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка); 		
				
	КонецЦикла;
	
	Возврат ТабДокумент; 
	
КонецФункции

Функция ПечатьАктУничтожения_2021 (МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_РеестрТТНВывоз_ПФ_MXL_UK_АктУничтожения_2021";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВывоз.ПФ_MXL_UK_АктУничтожения_2021"); 	
	
	// печать производится на языке, указанном в настройках
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	//Шапка
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.Текст = 
		"ВЫБРАТЬ
        |   ИНАГРО_РеестрТТНВывоз.Организация.НаименованиеПолное КАК ОрганизацияНаименование,
        |   ИНАГРО_РеестрТТНВывоз.Дата КАК ДатаДок,
        |   ИНАГРО_РеестрТТНВывоз.Номер КАК НомерДок,
        |   ИНАГРО_РеестрТТНВывоз.Склад КАК Склад,
        |   ИНАГРО_РеестрТТНВывоз.НовыйСклад КАК НовыйСклад,
        |   ИНАГРО_РеестрТТНВывоз.Урожай КАК Урожай,
        |   ИНАГРО_РеестрТТНВывоз.Организация КАК Организация,
        |   ИНАГРО_РеестрТТНВывоз.Владелец КАК Владелец,
        |   ИНАГРО_РеестрТТНВывоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
        |   ИНАГРО_РеестрТТНВывоз.Номенклатура КАК Номенклатура,
        |   ИНАГРО_РеестрТТНВывоз.Получатель КАК Получатель,
        |   ИНАГРО_РеестрТТНВывоз.ФизическийВес КАК ФизическийВес,
        |   ИНАГРО_РеестрТТНВывоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
        |   ИНАГРО_РеестрТТНВывоз.Влажность КАК Влажность,
        |   ИНАГРО_РеестрТТНВывоз.ЗерноваяПримесь КАК ЗерноваяПримесь,
        |   ИНАГРО_РеестрТТНВывоз.СорнаяПримесь КАК СорнаяПримесь,
        |   ИНАГРО_РеестрТТНВывоз.НомерАнализа КАК НомерАнализа,
        |   ИНАГРО_РеестрТТНВывоз.Дата КАК Дата,
        |   ИНАГРО_РеестрТТНВывоз.ВидОперации КАК ВидОперации,
        |   ИНАГРО_РеестрТТНВывоз.ВидХранения КАК ВидХранения,
        |   ИНАГРО_РеестрТТНВывоз.ВидОперацииОтвесов КАК ВидОперацииОтвесов,
        |   ИНАГРО_РеестрТТНВывоз.МестоХранения КАК МестоХранения,
        |   ИНАГРО_РеестрТТНВывоз.ВесОбразцов КАК ВесОбразцов,
        |   ИНАГРО_РеестрТТНВывоз.Комментарий КАК Примечание,
        |   ИНАГРО_РеестрТТНВывоз.ПредседательКомиссии КАК ГоловаКомиссии,
        |   ИНАГРО_РеестрТТНВывоз.ПервыйЧленКомиссии КАК ЧленКомиссии1,
        |   ИНАГРО_РеестрТТНВывоз.ВторойЧленКомиссии КАК ЧленКомиссии2,
        |   ИНАГРО_РеестрТТНВывоз.ТретийЧленКомиссии КАК ЧленКомиссии3,
        |   ИНАГРО_РеестрТТНВывоз.НачальникОхраны КАК НачальникОхраны,
        |   ИНАГРО_РеестрТТНВывоз.ЗачетныйВес КАК ЗачетныйВес,
        |   ИНАГРО_РеестрТТНВывоз.ПриказНаВывоз КАК ПриказНаВывоз,
        |   ИНАГРО_РеестрТТНВывоз.ПриказНаУничтожение КАК ПриказНаУничтожение,
        |   ИНАГРО_РеестрТТНВывоз.Организация.КодПоЕДРПОУ КАК КодПоЕДРПОУ
        |ИЗ
        |   Документ.ИНАГРО_РеестрТТНВывоз КАК ИНАГРО_РеестрТТНВывоз
        |ГДЕ
        |   ИНАГРО_РеестрТТНВывоз.Ссылка = &Ссылка";
	
	//Строка
	ЗапросТТН = Новый Запрос;
	ЗапросТТН.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВывозСписокТТН.НомерСтроки КАК Ном,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдИзмерения,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Транспорт КАК Транспорт,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.НомерТТН КАК НомерТТН,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ОбщийФизическийВес КАК ОбщийФизическийВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_РеестрТТНВывозСписокТТН.ТТН КАК ТТН
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВывоз.СписокТТН КАК ИНАГРО_РеестрТТНВывозСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка = &Ссылка"; 
	
	ПервыйДокумент = Истина;
	
	Для каждого Ссылка Из МассивОбъектов Цикл	
        
        СведенияООтправителе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата);
		Руководители         = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизацииИмяФамилия(Ссылка.Организация, Ссылка.Дата);
        
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ЗапросШапка.УстановитьПараметр("Ссылка",Ссылка);
		
		Шапка = ЗапросШапка.Выполнить().Выбрать();
		Шапка.Следующий();
		
		ЗапросТТН.УстановитьПараметр("Ссылка",Ссылка);
		СписокТТН = ЗапросТТН.Выполнить().Выгрузить();
		
		ПропускНаВывоз = "";
		
		Для каждого Строка из СписокТТН цикл
			ПропускНаВывоз = ПропускНаВывоз + Строка(Строка.НомерТТН)+"; ";
		КонецЦикла;			
			
		НомерДок = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НомерДок);
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		ОбластьШапка.Параметры.Организация = Шапка.ОрганизацияНаименование;
        ОбластьШапка.Параметры.ЄДРПОУ = Шапка.КодПоЕДРПОУ;
		ОбластьШапка.Параметры.Номер = НомерДок;
		ОбластьШапка.Параметры.Дата = Формат(Шапка.ДатаДок, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать)) + НСтр("ru = 'г.'; uk ='р.'");
        ОбластьШапка.Параметры.День = Формат(Шапка.Дата, "ДФ=дд");
		ОбластьШапка.Параметры.Месяц = Формат(Шапка.Дата, "ДФ=ММММ");
		ОбластьШапка.Параметры.Год = Формат(Шапка.Дата, "ДФ=гг");
		ОбластьШапка.Параметры.НачальникВТЛ = Руководители.НачальникВТЛ;
		ОбластьШапка.Параметры.ЗавСкладом = ИНАГРО_Элеватор.ОтветственныеЛицаИмяФамилия(Шапка.Организация,Шапка.Дата, Шапка.Склад);
		ОбластьШапка.Параметры.НачальникОхраны = Шапка.НачальникОхраны;
		ОбластьШапка.Параметры.Склад = Шапка.Склад;		
        ОбластьШапка.Параметры.Причина = Шапка.Примечание;
		ОбластьШапка.Параметры.приказ = Шапка.ПриказНаУничтожение;
		
		ОбластьШапка.Параметры.пропуск = ПропускНаВывоз;
		
		ОбластьШапка.Параметры.анализ = Формат(Шапка.ЛабораторныйАнализ,"ДЛФ=DD");
		
		ОбластьШапка.Параметры.сор = 100 - Шапка.СорнаяПримесь;
		ОбластьШапка.Параметры.вес = Шапка.ФизическийВес;
		ТабДокумент.Вывести(ОбластьШапка); 	
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка); 		
				
	КонецЦикла;
	
	Возврат ТабДокумент; 
	
КонецФункции

Функция ПечатьВедомостьВзвешиваний_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_РеестрТТНВывоз_ПФ_MXL_UK_ВедомостьОтвесов_2021";
    
    Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВывоз.ПФ_MXL_UK_ВедомостьОтвесов_2021"); 	
    
    // печать производится на языке, указанном в настройках
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    //Шапка
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст = 
    "ВЫБРАТЬ
    |	ИНАГРО_РеестрТТНВывоз.Организация.НаименованиеПолное КАК ОрганизацияНаименование,
    |	ИНАГРО_РеестрТТНВывоз.Дата КАК ДатаДок,
    |	ИНАГРО_РеестрТТНВывоз.Склад КАК Склад,
    |	ИНАГРО_РеестрТТНВывоз.Организация КАК Организация,
    |	ИНАГРО_РеестрТТНВывоз.Организация.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
    |	ИНАГРО_РеестрТТНВывоз.Номенклатура КАК Номенклатура,
    |	ИНАГРО_РеестрТТНВывоз.Дата КАК Дата,
    |	ИНАГРО_РеестрТТНВывоз.ВидОперации КАК ВидОперации,
    |	ИНАГРО_РеестрТТНВывоз.ПредседательКомиссии КАК ГоловаКомиссии,
    |	ИНАГРО_РеестрТТНВывоз.ПервыйЧленКомиссии КАК ЧленКомиссии1,
    |	ИНАГРО_РеестрТТНВывоз.ВторойЧленКомиссии КАК ЧленКомиссии2,
    |	ИНАГРО_РеестрТТНВывоз.ТретийЧленКомиссии КАК ЧленКомиссии3
    |ИЗ
    |	Документ.ИНАГРО_РеестрТТНВывоз КАК ИНАГРО_РеестрТТНВывоз
    |ГДЕ
    |	ИНАГРО_РеестрТТНВывоз.Ссылка = &Ссылка";
    
    //Строка
    ЗапросТТН = новый Запрос;
    ЗапросТТН.Текст =
    "ВЫБРАТЬ
    |   ИНАГРО_РеестрТТНВывозСписокТТН.НомерСтроки КАК Ном,
    |   ИНАГРО_РеестрТТНВывозСписокТТН.Транспорт КАК Транспорт,
    |   ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.Номенклатура.БазоваяЕдиницаИзмерения.Наименование КАК Ед,
    |   ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК Код,
    |   ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.ВесБрутто + ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.ВесБрутто1 КАК МассаБрутто,
    |   ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.ВесНетто + ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.ВесНетто1 КАК МассаНетто,
    |   ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.ВесТары + ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.ВесТары1 КАК ТараБрутто,
    |   ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.ВесТары КАК ТараКоличество,
    |   ИНАГРО_РеестрТТНВывозСписокТТН.ТТН.Вес КАК Вес,
    |   ИНАГРО_РеестрТТНВывозСписокТТН.ТТН КАК ТТН
    |ИЗ
    |   Документ.ИНАГРО_РеестрТТНВывоз.СписокТТН КАК ИНАГРО_РеестрТТНВывозСписокТТН
    |ГДЕ
    |   ИНАГРО_РеестрТТНВывозСписокТТН.Ссылка = &Ссылка";
   
    ПервыйДокумент = Истина;
    
    Для каждого Ссылка Из МассивОбъектов Цикл	
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросШапка.УстановитьПараметр("Ссылка",Ссылка);
        
        Шапка = ЗапросШапка.Выполнить().Выбрать();
        Шапка.Следующий();
        
        ////Шапка
        ОблШапка = Макет.ПолучитьОбласть("Шапка");
        ОблШапка.Параметры.Организация = Шапка.Организация; 
        ОблШапка.Параметры.День = Формат(Шапка.Дата, "ДФ=дд");
        ОблШапка.Параметры.Месяц = Формат(Шапка.Дата, "ДФ=ММММ");
        ОблШапка.Параметры.Год = Формат(Шапка.Дата, "ДФ=гг");
        ОблШапка.Параметры.Культура	= Шапка.Номенклатура;
        ОблШапка.Параметры.Склад = Шапка.Склад;
        ОблШапка.Параметры.РодОперации = Шапка.ВидОперации;
        ОблШапка.Параметры.ЄДРПОУ = Шапка.КодПоЕДРПОУ;
        
        ТабДокумент.Вывести(ОблШапка);
        ////Строка
        ОблСтрока = Макет.ПолучитьОбласть("Строка");
        ЗапросТТН.УстановитьПараметр("Ссылка",Ссылка);
        ТабЧасть = ЗапросТТН.Выполнить().Выгрузить();
        Для Каждого Стр ИЗ ТабЧасть Цикл	
            ОблСтрока.Параметры.Заполнить(Стр);
            ТабДокумент.Вывести(ОблСтрока);	
        КонецЦикла;	
        
        //валютаДокумента=Справочники.Валюты.	//Дно
        ОблДно = Макет.ПолучитьОбласть("Дно");
        ВсегоВес = ТабЧасть.Итог("Вес");
        ОблДно.Параметры.ВесПрописью = СтрШаблон(НСтр("ru = '%1 кг. (%2)'; uk = '%1 кг. (%2)'"),ВсегоВес, ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать, ВсегоВес));       
        
        ОблДно.Параметры.День = Формат(Шапка.Дата, "ДФ=дд");
        ОблДно.Параметры.Месяц = Формат(Шапка.Дата, "ДФ=ММММ");
        ОблДно.Параметры.Год = Формат(Шапка.Дата, "ДФ=гг");
        
        ГоловаКомиссииИмяФамилия = "";
        ДолжностьГоловаКомиссии = "";
        ГоловаКомиссии = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Шапка.Дата, Новый Структура("ФизическоеЛицо", Шапка.ГоловаКомиссии));
        Если ГоловаКомиссии.Количество() > 0 Тогда
            СтрукДолжностьГоловаКомиссии = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Шапка.Организация,Шапка.ГоловаКомиссии,Шапка.Дата); 
            ДолжностьГоловаКомиссии = ?(ПустаяСтрока(СтрукДолжностьГоловаКомиссии.Должность),"",СтрукДолжностьГоловаКомиссии.Должность);
            ГоловаКомиссииИмяФамилия = СокрЛП(ГоловаКомиссии[0].Имя)
            + " "
            + ВРег(СокрЛП(ГоловаКомиссии[0].Фамилия)); 
        КонецЕсли;
        ОблДно.Параметры.ГоловаКомисии 	= ГоловаКомиссииИмяФамилия;
        ОблДно.Параметры.ДолжностьГоловаКомисии 	= ДолжностьГоловаКомиссии;
        
        ЧленКомиссии1ИмяФамилия = ""; 
        ДолжностьЧленКомиссии1 = ""; 
        Если ТипЗнч(Шапка.ЧленКомиссии1) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
            СтрукДолжностьЧленКомиссии1 = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Шапка.Организация,Шапка.ЧленКомиссии1,Шапка.Дата); 
            ДолжностьЧленКомиссии1 = ?(ПустаяСтрока(СтрукДолжностьЧленКомиссии1.Должность),"",СтрукДолжностьЧленКомиссии1.Должность);
            ЧленКомиссии1 = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Шапка.Дата, Новый Структура("ФизическоеЛицо", Шапка.ЧленКомиссии1));
            Если ЧленКомиссии1.Количество() > 0 Тогда
                ЧленКомиссии1ИмяФамилия = СокрЛП(ЧленКомиссии1[0].Имя)
                + " "
                + ВРег(СокрЛП(ЧленКомиссии1[0].Фамилия)); 
            КонецЕсли;
        Иначе
            ЧленКомиссии1ИмяФамилия =  Шапка.ЧленКомиссии1;
        КонецЕсли; 
        ОблДно.Параметры.ПервыйЧлен 	= ЧленКомиссии1ИмяФамилия;
        ОблДно.Параметры.ДолжностьПервыйЧлен 	= ДолжностьЧленКомиссии1;
        
        
        ЧленКомиссии2ИмяФамилия = "";
        ДолжностьЧленКомиссии2 = ""; 
        Если ТипЗнч(Шапка.ЧленКомиссии2) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
            СтрукДолжностьЧленКомиссии2 = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Шапка.Организация,Шапка.ЧленКомиссии2,Шапка.Дата);
            ДолжностьЧленКомиссии2 = ?(ПустаяСтрока(СтрукДолжностьЧленКомиссии2.Должность),"",СтрукДолжностьЧленКомиссии2.Должность);
            ЧленКомиссии2 = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Шапка.Дата, Новый Структура("ФизическоеЛицо", Шапка.ЧленКомиссии2));
            Если ЧленКомиссии2.Количество() > 0 Тогда
                ЧленКомиссии2ИмяФамилия = СокрЛП(ЧленКомиссии2[0].Имя)
                + " "
                + ВРег(СокрЛП(ЧленКомиссии2[0].Фамилия)); 
            КонецЕсли;
        Иначе
            ЧленКомиссии2ИмяФамилия =  Шапка.ЧленКомиссии2;
        КонецЕсли;
        ОблДно.Параметры.ВторойЧлен     = ЧленКомиссии2ИмяФамилия;
        ОблДно.Параметры.ДолжностьВторойЧлен     = ДолжностьЧленКомиссии2;
        
        
        ЧленКомиссии3ИмяФамилия = "";
        ДолжностьЧленКомиссии3 = ""; 
        Если ТипЗнч(Шапка.ЧленКомиссии3) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
            ЧленКомиссии3 = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Шапка.Дата, Новый Структура("ФизическоеЛицо", Шапка.ЧленКомиссии3));
            Если ЧленКомиссии3.Количество() > 0 Тогда
                СтрукДолжностьЧленКомиссии3 = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Шапка.Организация,Шапка.ЧленКомиссии3,Шапка.Дата);   
                ДолжностьЧленКомиссии3 = ?(ПустаяСтрока(СтрукДолжностьЧленКомиссии3.Должность),"",СтрукДолжностьЧленКомиссии3.Должность);
                ЧленКомиссии3ИмяФамилия = СокрЛП(ЧленКомиссии3[0].Имя)
                + " "
                + ВРег(СокрЛП(ЧленКомиссии3[0].Фамилия)); 
            КонецЕсли;
        Иначе
            ЧленКомиссии3ИмяФамилия =  Шапка.ЧленКомиссии3;
        КонецЕсли;
        ОблДно.Параметры.ТретийЧлен     = ЧленКомиссии3ИмяФамилия;
        ОблДно.Параметры.ДолжностьТретийЧлен     = ДолжностьЧленКомиссии3; 
        
        Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(Шапка.Организация,Шапка.Дата);
        
        ТабДокумент.Вывести(ОблДно);
        
        // В табличном документе зададим имя области, в которую был 
        // выведен объект. Нужно для возможности печати покомплектно.
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Ссылка); 
        
    КонецЦикла;  
    
    Возврат ТабДокумент; 	 
	
КонецФункции 

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;

	ВидОперации = Неопределено; 

	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидОперации");
	КонецЕсли;

	// Если документ копируется, то вид формы получаем из копируемого документа.
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначениеКопирования")
			И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Параметры.ЗначениеКопирования, "ВидОперации");
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
			Если Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда
				ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	СтандартнаяОбработка = Ложь;
	ФормыИНАГРО_РеестрТТНВывоз = ПолучитьСоответствиеВидовОперацийФормам();
	ВыбраннаяФорма = ФормыИНАГРО_РеестрТТНВывоз[ВидОперации];
	Если ВыбраннаяФорма = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСоответствиеВидовОперацийФормам() Экспорт

	ФормыИНАГРО_РеестрТТНВывоз = Новый Соответствие;
	
	ФормыИНАГРО_РеестрТТНВывоз.Вставить(Перечисления.ИНАГРО_ВидыОперацийРеестрТТНВывоз.Вывоз,        "ФормаДокументаОбщая");
	ФормыИНАГРО_РеестрТТНВывоз.Вставить(Перечисления.ИНАГРО_ВидыОперацийРеестрТТНВывоз.ВывозОтходов, "ФормаДокументаОбщая");
		
	Возврат ФормыИНАГРО_РеестрТТНВывоз;

КонецФункции 

Функция ПолучитьФиксированныйМассивВидовОпераций() Экспорт

	МассивВидовОпераций = Новый Массив;
	СписокВидовОпераций = Новый СписокЗначений;
	
	ЗначенияПеречисления = Метаданные.Перечисления.ИНАГРО_ВидыОперацийРеестрТТНВывоз.ЗначенияПеречисления;
	Для Каждого ЗначениеПеречисления Из ЗначенияПеречисления Цикл
		ТекущийВидОперации = Перечисления.ИНАГРО_ВидыОперацийРеестрТТНВывоз[ЗначениеПеречисления.Имя];
		МассивВидовОпераций.Добавить(ТекущийВидОперации);
	КонецЦикла;
		
	Возврат Новый ФиксированныйМассив(МассивВидовОпераций);

КонецФункции

#КонецОбласти 

#КонецЕсли