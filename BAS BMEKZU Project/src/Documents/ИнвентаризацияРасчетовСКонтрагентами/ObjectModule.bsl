#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
//

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	// Заполним табличную часть СчетаРасчетов
	ТаблицаСчетов = УчетВзаиморасчетов.ПолучитьТаблицуСчетовУчетаВзаиморасчетов(Ложь, Истина);
	//НоваяСтрокаСчета = ТаблицаСчетов.Добавить();
	//НоваяСтрокаСчета.СчетРасчетов = ПланыСчетов.Хозрасчетный.ФинансовыеВложения;
	ТаблицаСчетов.Колонки.Добавить("УчаствуетВРасчетах");
	ТаблицаСчетов.ЗаполнитьЗначения(Истина, "УчаствуетВРасчетах");
	ЭтотОбъект.СчетаРасчетов.Загрузить(ТаблицаСчетов);
    	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата 		  = НачалоДня(ОбщегоНазначенияБП.ПолучитьРабочуюДату());
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Документы.ИнвентаризацияРасчетовСКонтрагентами.ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты, Неопределено, Ложь);

КонецПроцедуры

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//	Процедура выполняет заполнение документа по форме ИНВ-17 данными регистра БУ
//
//	Аргументы:	1.	аргВидЗадолженности 
// 	Тип:	 		Перечисления.ВидыЗадолженности
//	Назначение:     Формирование выборки по конкретному виду задолженности (опция)
//
// 				2.	СписокСчетовВАкт
// 	Тип:			Массив
//	Назначение:     Формирование выборки по счетам (обязательный аргумент)
//
Процедура ЗаполнитьАктДляИнв17(ВидЗадолженности = Неопределено) Экспорт
	
	// Проверка требования на отбор данных по виду задолженности
	Если НЕ (ВидЗадолженности = Неопределено) Тогда
		// Вид задолженности выбран
		// Выполнение очистки записей ТЧ Контрагенты по виду задолженности
		СтруктураОтбора = Новый Структура("ВидЗадолженности", ВидЗадолженности);
		УдаляемыеСтроки = Контрагенты.НайтиСтроки(СтруктураОтбора);
		
		Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			Контрагенты.Удалить(УдаляемаяСтрока);
		КонецЦикла;
	Иначе
		// Полная очистка записей в ТЧ Контрагенты
		Контрагенты.Очистить();
	КонецЕсли;
	
	Запрос 		= Новый Запрос;
	ГраницаАкта = Новый Граница(КонецДня(Дата), ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("Дата",        	  ГраницаАкта);
	Запрос.УстановитьПараметр("Организация", 	  Организация);
	МассивСчетов = СчетаРасчетов.ВыгрузитьКолонку("СчетРасчетов");
	МассивСчетов = ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(МассивСчетов);
	Запрос.УстановитьПараметр("МассивСчетов", МассивСчетов);
	
	ВидыСубконто = Новый Массив();
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	
	Запрос.УстановитьПараметр("ВидЗадолженности",  	ВидЗадолженности);
	Запрос.УстановитьПараметр("Дебиторская",  Перечисления.ВидыЗадолженности.Дебиторская);
	Запрос.УстановитьПараметр("Кредиторская", Перечисления.ВидыЗадолженности.Кредиторская);
	Запрос.УстановитьПараметр("Активный", ВидСчета.Активный);
	Запрос.УстановитьПараметр("Пассивный", ВидСчета.Пассивный);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Контрагент,
	|	ХозрасчетныйОстатки.Счет КАК СчетРасчетов,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОстатки.Счет.Вид = &Активный
	|					ИЛИ ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|				ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
	|			ИНАЧЕ ХозрасчетныйОстатки.СуммаОстатокКт
	|		КОНЕЦ) КАК Подтверждено,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = &Активный
	|				ИЛИ ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|			ТОГДА &Дебиторская
	|		ИНАЧЕ &Кредиторская
	|	КОНЕЦ КАК ВидЗадолженности
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата, Счет В (&МассивСчетов), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	(&ВидЗадолженности = НЕОПРЕДЕЛЕНО
	|			ИЛИ ВЫБОР
	|				КОГДА ХозрасчетныйОстатки.Счет.Вид = &Активный
	|						ИЛИ ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|					ТОГДА &Дебиторская
	|				ИНАЧЕ &Кредиторская
	|			КОНЕЦ = &ВидЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Счет,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = &Активный
	|				ИЛИ ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|			ТОГДА &Дебиторская
	|		ИНАЧЕ &Кредиторская
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1.Представление,
	|	ХозрасчетныйОстатки.Счет.Порядок";
	
	Выборка = Запрос.Выполнить().Выбрать();

	Пока (Выборка.Следующий()) Цикл
		СтрокаДанных = Контрагенты.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьАктДляИнв17()
