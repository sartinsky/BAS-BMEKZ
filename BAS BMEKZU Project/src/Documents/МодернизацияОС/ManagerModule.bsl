#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Акт о приеме-сдаче ОС (ОС-3)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОЗ2";
	КомандаПечати.Представление = НСтр("ru='Форма ОЗ-2';uk='Форма ОЗ-2'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Модернизация и ремонт ОС""';uk='Реєстр документів ""Модернізація і ремонт ОЗ""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

// Функция формирует табличный документ унифицированной формы ОЗ-2
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ по форме ОЗ-2.
//
Функция ПечатьОЗ2(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	УстановитьПривилегированныйРежим(Истина);

	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_UK_ОЗ2");
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Форма_ОЗ2";
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		
		Запрос       = Новый Запрос;
		Запрос.УстановитьПараметр("Период"            , Ссылка.МоментВремени());
		Запрос.УстановитьПараметр("ТекОрганизация"    , Ссылка.Организация);
		Запрос.УстановитьПараметр("ГлавныйБухгалтер"  , Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
		Запрос.УстановитьПараметр("РуководительОтдела", Ссылка.РуководительОтдела);
		Запрос.УстановитьПараметр("Сдал"              , Ссылка.Сдал);
		Запрос.УстановитьПараметр("Принял"            , Ссылка.Принял);
		Запрос.УстановитьПараметр("Ссылка"            , Ссылка.Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МодернизацияОС.Организация.НаименованиеПолное                КАК Организация,
		|	МодернизацияОС.Организация.КодПоЕДРПОУ                                   КАК ЕДРПОУ,
		|	МодернизацияОС.Номер                                          КАК НомерАкта,
		|	МодернизацияОС.Дата                                           КАК ДатаАкта,
		|	МодернизацияОС.СобытиеОС                                      КАК ВидОперации,
		|	МодернизацияОС.СчетУчетаБУВнеоборотногоАктива                 КАК СчетКт,
		|	МодернизацияОС.ДатаНачалаМодернизации                         КАК ДатаНачала,
		|	МодернизацияОС.ДатаОкончанияМодернизации                      КАК ДатаОкончания,
		|	МодернизацияОС.ЧтоНеВыполнено                                 КАК ЧтоНеВыполнено,
		|	МодернизацияОС.ЧтоИзменилось                                  КАК ЧтоИзменилось,
		|	РАЗНОСТЬДАТ(МодернизацияОС.ДатаНачалаМодернизации,
		|	            МодернизацияОС.ДатаОкончанияМодернизации,
		|	            ДЕНЬ)                                             КАК КоличествоДней
		|ИЗ
		|	Документ.МодернизацияОС КАК МодернизацияОС
		|ГДЕ
		|	МодернизацияОС.Ссылка = &Ссылка";
		ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
		ВыборкаПоШапке.Следующий();

		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",         Ссылка.Ссылка);
		Запрос.УстановитьПараметр("Период",         Ссылка.МоментВремени());
		Запрос.УстановитьПараметр("ТекОрганизация", Ссылка.Организация);
		
		СписокОС = Ссылка.ОС.ВыгрузитьКолонку("ОсновноеСредство");
		Запрос.УстановитьПараметр("СписокОС",       СписокОС);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МодернизацияОСОС.ОсновноеСредство.ЗаводскойНомер       КАК ЗаводскойНомер,
		|	МодернизацияОСОС.ОсновноеСредство.НаименованиеПолное   КАК ОсновноеСредствоНаименование,
		|	ВЫБОР
		|		КОГДА НЕ (МодернизацияОСОС.Ссылка.ВидУлучшения = ЗНАЧЕНИЕ(Перечисление.ВидыУлучшения.Ремонт))
		|			ТОГДА МодернизацияОСОС.СуммаМодернизацииБУ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаМодернизации,
		|	ВЫБОР
		|		КОГДА МодернизацияОСОС.Ссылка.ВидУлучшения = ЗНАЧЕНИЕ(Перечисление.ВидыУлучшения.Ремонт)
		|			ТОГДА МодернизацияОСОС.СуммаМодернизацииБУ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаРемонта,
		|	МодернизацияОСОС.СуммаМодернизацииБУ                   КАК СуммаМодернизацииИРемонта,
		|	СчетаБухгалтерскогоУчетаОС.СчетУчета                   КАК СчетДт,
		|	ПервоначальныеСведенияОС.ИнвентарныйНомер              КАК ИнвентарныйНомер,
		|	МестонахождениеОС.МОЛ.Код                              КАК КодМОЛа,
		|	МестонахождениеОС.Местонахождение.Наименование         КАК Подразделение
		|ИЗ
		|	Документ.МодернизацияОС.ОС КАК МодернизацияОСОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
		|		                    &Период,
		|		                    Организация = &ТекОрганизация
		|		                    И ОсновноеСредство В (&СписокОС)) КАК СчетаБухгалтерскогоУчетаОС
		|		ПО МодернизацияОСОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|		                    &Период,
		|		                    Организация = &ТекОрганизация
		|		                    И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОС
		|		ПО МодернизацияОСОС.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		|		                    &Период,
		|		                    Организация = &ТекОрганизация
		|		                    И ОсновноеСредство В (&СписокОС)) КАК МестонахождениеОС
		|		ПО МодернизацияОСОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
		|ГДЕ
		|	МодернизацияОСОС.Ссылка = &Ссылка";
		
			
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		НеПервая = Ложь;
		
		Пока Выборка.Следующий() Цикл
			
			Если НеПервая Тогда
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("ОЗ2");
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоШапке);
			
		
			ОбластьМакета.Параметры.Заполнить(Выборка);
			
			ДанныеФизЛицаПолучил = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Ссылка.Организация, Ссылка.Принял, Ссылка.Дата);
			ДанныеПолучил = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Ссылка.Организация, Ссылка.Принял, Ссылка.Дата);
			ОбластьМакета.Параметры.ПринялДолжность = ДанныеПолучил.Должность;
			ОбластьМакета.Параметры.Принял 			= ДанныеФизЛицаПолучил.Представление;
			
			ДанныеФизЛицаСдал = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Ссылка.Организация, Ссылка.Сдал, Ссылка.Дата);
			ДанныеСдал = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Ссылка.Организация, Ссылка.Сдал, Ссылка.Дата);
			ОбластьМакета.Параметры.СдалДолжность 	= ДанныеСдал.Должность;
			ОбластьМакета.Параметры.Сдал	 		= ДанныеФизЛицаСдал.Представление;
			
			ДанныеФизЛицаРуководительОтдела = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Ссылка.Организация, Ссылка.РуководительОтдела, Ссылка.Дата);
			ОбластьМакета.Параметры.РуководительОтдела = ДанныеФизЛицаРуководительОтдела.Представление;
			
			ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата);

			ОбластьМакета.Параметры.ГлавныйБухгалтер 	= ОтветственныеЛица.ГлавныйБухгалтерПредставление;
			
			ТабДокумент.Вывести(ОбластьМакета);
			НеПервая = Истина;
		
		КонецЦикла;
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;	
		
	Возврат ТабДокумент;

КонецФункции // ПечатьОЗ2()

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОЗ2") Тогда

		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОЗ2", НСтр("ru='Форма ОЗ-2';uk='Форма ОЗ-2'"), 
			ПечатьОЗ2(МассивОбъектов, ОбъектыПечати, ПараметрыПечати), , );

	КонецЕсли;

КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "ОбъектСтроительства");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли