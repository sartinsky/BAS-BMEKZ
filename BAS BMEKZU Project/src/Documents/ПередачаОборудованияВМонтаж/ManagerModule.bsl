#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет счета учета номенклатуры в табличной части документа
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СоответствиеСчетовУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаСпискаНоменклатуры(
		ДанныеОбъекта.Организация, ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "Номенклатура", Истина), ДанныеОбъекта.Склад, ДанныеОбъекта.Дата);
	
	Для каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		СчетаУчета = СоответствиеСчетовУчета.Получить(СтрокаТабличнойЧасти.Номенклатура);
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СчетаУчета);
	КонецЦикла;

КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо стуктура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти = "", СведенияОНоменклатуре) Экспорт

	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчетаБУ") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаБУ) Тогда
		СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаБУ;
	КонецЕсли;

КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Форма М-15а
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М15а";
	КомандаПечати.Представление = НСтр("ru='Форма М-15а';uk='Форма М-15а'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Передача оборудования в монтаж""';uk='Реєстр документів ""Передача устаткування у монтаж""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой ОС-15,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьМ15а(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета)
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаОборудованияВМонтаж_М15а";
	Макет       = УправлениеПечатью.МакетПечатнойФормы("Документ.ПередачаОборудованияВМонтаж.ПФ_MXL_UK_М15а");

	Шапка         = Макет.ПолучитьОбласть("Шапка");
	ШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	СтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	Оборот        = Макет.ПолучитьОбласть("ОборотнаяСторона");

	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("НаДату", Ссылка.Дата);
		Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Док.Дата                               КАК ДатаДокумента,
		|	Док.Номер                              КАК НомерДокумента,
		|	ПРЕДСТАВЛЕНИЕ(Док.ОбъектСтроительства) КАК ОбъектСтроительства,
		|	ПРЕДСТАВЛЕНИЕ(Док.Склад)               КАК Склад,
		|	Док.Организация.Наименование           КАК ОрганизацияНаименование,
		|	Док.Организация.НаименованиеПолное     КАК ОрганизацияНаименованиеПолное,
		|	Док.Организация.КодПоЕДРПОУ            КАК КодПоЕДРПОУ
		|ИЗ
		|	Документ.ПередачаОборудованияВМонтаж КАК Док
		|ГДЕ
		|	Док.Ссылка = &Ссылка";
		ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
		ВыборкаПоШапке.Следующий();

		Шапка.Параметры.Заполнить(ВыборкаПоШапке);
		
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоШапке.ОрганизацияНаименованиеПолное) Тогда
			
			Шапка.Параметры.Организация = ВыборкаПоШапке.ОрганизацияНаименование
			
		Иначе
			
			Шапка.Параметры.Организация = ВыборкаПоШапке.ОрганизацияНаименованиеПолное
			
		КонецЕсли;
		
		ТабДокумент.Вывести(Шапка);
		ТабДокумент.Вывести(ШапкаТаблицы);

		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Если Ссылка.Проведен Тогда
			
			Запрос.УстановитьПараметр("Вид"	  , ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПредварительныйЗапрос.Оборудование.НаименованиеПолное КАК НаименованиеОборудования,
			|	ПредварительныйЗапрос.Оборудование.Код                КАК КодОборудования,
			|	ПредварительныйЗапрос.Стоимость                       КАК Стоимость,
			|	ПредварительныйЗапрос.Количество                      КАК Количество
			|ИЗ
			|	(ВЫБРАТЬ
			|		ВЫРАЗИТЬ(ХозрасчетныйСубконто.Значение КАК Справочник.Номенклатура) КАК Оборудование,
			|		СУММА(Хозрасчетный.Сумма)                                           КАК Стоимость,
			|		СУММА(Хозрасчетный.КоличествоКт)                                    КАК Количество
			|	ИЗ
			|		РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
			|			ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
			|				И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
			|	ГДЕ
			|		Хозрасчетный.Регистратор = &Ссылка
			|		И Хозрасчетный.Активность
			|		И ХозрасчетныйСубконто.Вид = &Вид
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ВЫРАЗИТЬ(ХозрасчетныйСубконто.Значение КАК Справочник.Номенклатура)) КАК ПредварительныйЗапрос";
			
		Иначе
			
			Запрос.Текст =		
			"ВЫБРАТЬ
			|	ПередачаОборудования.Номенклатура.НаименованиеПолное КАК НаименованиеОборудования,
			|	ПередачаОборудования.Номенклатура.Код                КАК КодОборудования,
			|	ПередачаОборудования.Количество                      КАК Количество
			|ИЗ
			|	Документ.ПередачаОборудованияВМонтаж.Оборудование КАК ПередачаОборудования
			|ГДЕ
			|	ПередачаОборудования.Ссылка = &Ссылка"	
			
		КонецЕсли;

		ВыборкаПоОборудованию = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаПоОборудованию.Следующий() Цикл


			СтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
			СтрокаТаблицы.Параметры.Заполнить(ВыборкаПоОборудованию);

			Если Не ТабДокумент.ПроверитьВывод(СтрокаТаблицы) Тогда
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ШапкаТаблицы);
				
			КонецЕсли;
			
			ТабДокумент.Вывести(СтрокаТаблицы);

		Конеццикла;

		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Оборот.Параметры.Заполнить(ВыборкаПоШапке);
		ТабДокумент.Вывести(Оборот);
		

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;	

	Возврат ТабДокумент;

КонецФункции // ПечатьОС15()

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М15а") Тогда

		ИмяМакета = "";
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М15а", НСтр("ru='Форма М-15а';uk='Форма М-15а'"), 
			ПечатьМ15а(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета), , "Документ.ПередачаОборудованияВМонтаж.ПФ_MXL_UK_М15а");

	КонецЕсли;

КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Склад");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли