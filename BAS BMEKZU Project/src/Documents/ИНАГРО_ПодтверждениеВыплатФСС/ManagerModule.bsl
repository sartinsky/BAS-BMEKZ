#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Уведомление 
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Уведомление";
	КомандаПечати.Представление = НСтр("ru='Уведомление';uk='Повідомлення'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Подтверждение выплат ФСС""';uk='Реєстр документів ""Підтвердження виплат ФСС""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Уведомление") Тогда  		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Уведомление", НСтр("ru='Уведомление';uk='Повідомлення'"), 
		ПечатьУведомление(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ПодтверждениеВыплатФСС.ПФ_MXL_Уведомление",,Истина);		
	КонецЕсли; 	
	
КонецПроцедуры

Функция ПечатьУведомление(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент();
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ПодтверждениеВыплатФСС.ПФ_MXL_Уведомление");
	ПервыйДокумент = Истина;
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Для Каждого Объект Из МассивОбъектов Цикл
				
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли; 
		
		СведенияООрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Объект.Организация, Объект.Дата,,,КодЯзыкаПечать);
		ОписаниеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияООрганизации, "ПолноеНаименование,",,КодЯзыкаПечать); 
		
		//Шапка 
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Организация = ОписаниеОрганизации;
		ОбластьШапка.Параметры.КодПоЕДРПОУ = СведенияООрганизации.КодПоЕДРПОУ;
		ОбластьШапка.Параметры.Адрес = СведенияООрганизации.ЮридическийАдрес;	 
		ОбластьШапка.Параметры.Телефон = СведенияООрганизации.Телефоны;	 	 
						
		ТабДокумент.Вывести(ОбластьШапка);
		//Заголовок
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ТабДокумент.Вывести(ОбластьЗаголовок);	
		
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		
		ТаблицаДляПечати = СформироватьЗапросДляПечати(Объект.Ссылка);
		Для Каждого Строка Из ТаблицаДляПечати Цикл
			ОбластьСтрока.Параметры.Заполнить(Строка);	
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;	 
		
		ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
		
		ЧислоДокумента                          = Формат(Объект.Дата,"ДФ='дд';Л=uk_UA");
		ДатаДокумента                           = Формат(Объект.Дата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
		ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
		ОбластьПодпись.Параметры.ДатаДокумента 	= ЧислоДокумента + ДатаДокументаБезЧисла;
		
		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Объект.Организация, Объект.Дата);
		
		Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
			ОбластьПодпись.Параметры.ФИОРуководителя = Руководители.РуководительФИО.Фамилия	    + " " + Руководители.РуководительФИО.Имя	 + " " + Руководители.РуководительФИО.Отчество;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер) Тогда
			ОбластьПодпись.Параметры.ФИОБухгалтера   = Руководители.ГлавныйБухгалтерФИО.Фамилия + " " + Руководители.ГлавныйБухгалтерФИО.Имя + " " + Руководители.ГлавныйБухгалтерФИО.Отчество;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьПодпись);		
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция СформироватьЗапросДляПечати(Ссылка) Экспорт
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	ПодтверждениеВыплатФССВыплаты.НомерСтроки КАК НомерСтроки,
    |	ПодтверждениеВыплатФССВыплаты.Сотрудник КАК Сотрудник,
    |	ПодтверждениеВыплатФССВыплаты.Документ КАК Документ,
    |	ПодтверждениеВыплатФССВыплаты.ДатаВыплаты КАК ДатаВыплаты,
    |	ПодтверждениеВыплатФССВыплаты.Сумма КАК Сумма,
    |	ВЫБОР
    |		КОГДА ПодтверждениеВыплатФССВыплаты.Документ ССЫЛКА Документ.ИНАГРО_НачислениеПоБольничномуЛисту
    |			ТОГДА ПодтверждениеВыплатФССВыплаты.Документ.СерияБольничногоЛиста
	|		ИНАЧЕ ЕСТЬNULL(НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СвидетельствоСерия,"""")
    |	КОНЕЦ КАК Серия,
    |	ВЫБОР
    |		КОГДА ПодтверждениеВыплатФССВыплаты.Документ ССЫЛКА Документ.ИНАГРО_НачислениеПоБольничномуЛисту
    |			ТОГДА ПодтверждениеВыплатФССВыплаты.Документ.НомерБольничногоЛиста
	|		ИНАЧЕ ЕСТЬNULL(НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СвидетельствоНомер,"""")
    |	КОНЕЦ КАК Номер,
    |	ПодтверждениеВыплатФССВыплаты.Сотрудник.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО,
    |	ПодтверждениеВыплатФССВыплаты.Сотрудник.ФизическоеЛицо КАК Физлицо
    |ПОМЕСТИТЬ ВТВыплаты
    |ИЗ
    |	Документ.ИНАГРО_ПодтверждениеВыплатФСС.Выплаты КАК ПодтверждениеВыплатФССВыплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_НачислениеЕдиновременныхПособийЗаСчетФСС.Начисления КАК НачислениеЕдиновременныхПособийЗаСчетФССНачисления
	|		ПО ПодтверждениеВыплатФССВыплаты.Документ.Ссылка = НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Ссылка
	|			И ПодтверждениеВыплатФССВыплаты.Сотрудник = НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Сотрудник
    |ГДЕ
    |	ПодтверждениеВыплатФССВыплаты.Ссылка = &Ссылка
    |
    |ИНДЕКСИРОВАТЬ ПО
    |	Документ,
    |	Сотрудник";
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("ДатаДокумента", Ссылка.Дата);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФИОФизЛицСрезПоследних.ФизическоеЛицо 	КАК Физлицо,
	|	ФИОФизЛицСрезПоследних.Фамилия	 КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя 		КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(
	|			&ДатаДокумента,
	|			ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					ВТВыплаты.Сотрудник.ФизическоеЛицо
	|				ИЗ
	|					ВТВыплаты КАК ВТВыплаты)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ
	|	Выплаты.НомерСтроки КАК НомерСтроки,
	|	Выплаты.Документ КАК Документ,
	|	Выплаты.ДатаВыплаты КАК ДатаВыплаты,
	|	Выплаты.Сумма КАК Сумма,
	|	Выплаты.Серия КАК Серия,
	|	Выплаты.Номер КАК Номер,
	|	Выплаты.КодПоДРФО КАК КодПоДРФО,
	|	ФИО.Фамилия КАК Фамилия,
	|	ФИО.Имя КАК Имя,
	|	ФИО.Отчество КАК Отчество
	|ИЗ
	|	ВТВыплаты КАК Выплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
	|		ПО Выплаты.Физлицо = ФИО.Физлицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьЗапросПоДокументам(Ссылка, Организация, ЗаявлениеРасчет) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ЗаявлениеРасчет", ЗаявлениеРасчет);
	Запрос.УстановитьПараметр("Ссылка",          Ссылка);
	Запрос.УстановитьПараметр("Организация",     Организация);
		
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПодтверждениеВыплатФСС.Ссылка КАК ПроведенноеПодтверждение,
		|	ПодтверждениеВыплатФСС.ЗаявлениеРасчет КАК ЗаявлениеРасчет,
		|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
		|	ВложенныйЗапрос.Документ КАК ОплаченныйДокумент
		|ПОМЕСТИТЬ ВТПроведенныеПодтверждения
		|ИЗ
		|	Документ.ИНАГРО_ПодтверждениеВыплатФСС КАК ПодтверждениеВыплатФСС
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ПодтверждениеВыплатФССВыплаты.Сотрудник КАК Сотрудник,
		|			ПодтверждениеВыплатФССВыплаты.Документ КАК Документ,
		|			ПодтверждениеВыплатФССВыплаты.Ссылка КАК Ссылка
		|		ИЗ
		|			Документ.ИНАГРО_ПодтверждениеВыплатФСС.Выплаты КАК ПодтверждениеВыплатФССВыплаты) КАК ВложенныйЗапрос
		|		ПО ПодтверждениеВыплатФСС.Ссылка = ВложенныйЗапрос.Ссылка
		|			И (ПодтверждениеВыплатФСС.Ссылка.Проведен)
		|ГДЕ
		|	ПодтверждениеВыплатФСС.Ссылка <> &Ссылка
		|	И ПодтверждениеВыплатФСС.ЗаявлениеРасчет = &ЗаявлениеРасчет
		|	И ПодтверждениеВыплатФСС.Ссылка.Проведен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗаявлениеРасчет,
		|	Сотрудник";	
	
	Запрос.Выполнить();
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаявлениеРасчетВФССБольничные.Документ КАК Документ,
		|	ЗаявлениеРасчетВФССБольничные.Сотрудник КАК Сотрудник,
		|	СУММА(ЗаявлениеРасчетВФССБольничные.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.ИНАГРО_ЗаявлениеРасчетВФСС.Больничные КАК ЗаявлениеРасчетВФССБольничные
		|ГДЕ
		|	ЗаявлениеРасчетВФССБольничные.Ссылка = &ЗаявлениеРасчет
		|	И ЗаявлениеРасчетВФССБольничные.Ссылка.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявлениеРасчетВФССБольничные.Документ,
		|	ЗаявлениеРасчетВФССБольничные.Сотрудник
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаявлениеРасчетВФССБольничныеНС.Документ,
		|	ЗаявлениеРасчетВФССБольничныеНС.Сотрудник,
		|	СУММА(ЗаявлениеРасчетВФССБольничныеНС.Сумма)
		|ИЗ
		|	Документ.ИНАГРО_ЗаявлениеРасчетВФСС.БольничныеНС КАК ЗаявлениеРасчетВФССБольничныеНС
		|ГДЕ
		|	ЗаявлениеРасчетВФССБольничныеНС.Ссылка = &ЗаявлениеРасчет
		|	И ЗаявлениеРасчетВФССБольничныеНС.Ссылка.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявлениеРасчетВФССБольничныеНС.Документ,
		|	ЗаявлениеРасчетВФССБольничныеНС.Сотрудник
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаявлениеРасчетВФССДекретные.Документ,
		|	ЗаявлениеРасчетВФССДекретные.Сотрудник,
		|	СУММА(ЗаявлениеРасчетВФССДекретные.Сумма)
		|ИЗ
		|	Документ.ИНАГРО_ЗаявлениеРасчетВФСС.Декретные КАК ЗаявлениеРасчетВФССДекретные
		|ГДЕ
		|	ЗаявлениеРасчетВФССДекретные.Ссылка = &ЗаявлениеРасчет
		|	И ЗаявлениеРасчетВФССДекретные.Ссылка.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявлениеРасчетВФССДекретные.Документ,
		|	ЗаявлениеРасчетВФССДекретные.Сотрудник
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаявлениеРасчетВФССПогребение.Документ,
		|	ЗаявлениеРасчетВФССПогребение.Сотрудник,
		|	СУММА(ЗаявлениеРасчетВФССПогребение.Сумма)
		|ИЗ
		|	Документ.ИНАГРО_ЗаявлениеРасчетВФСС.Погребение КАК ЗаявлениеРасчетВФССПогребение
		|ГДЕ
		|	ЗаявлениеРасчетВФССПогребение.Ссылка = &ЗаявлениеРасчет
		|	И ЗаявлениеРасчетВФССПогребение.Ссылка.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявлениеРасчетВФССПогребение.Документ,
		|	ЗаявлениеРасчетВФССПогребение.Сотрудник";
	
	Запрос.Выполнить();
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документы.Документ КАК Документ,
		|	Документы.Сотрудник КАК Сотрудник,
		|	Документы.Сумма КАК Сумма
		|ИЗ
		|	ВТДокументы КАК Документы
		|ГДЕ
		|	НЕ Документы.Документ В
		|				(ВЫБРАТЬ
		|					ВТПроведенныеПодтверждения.ОплаченныйДокумент КАК Документ
		|				ИЗ
		|					ВТПроведенныеПодтверждения КАК ВТПроведенныеПодтверждения)";
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти 

#КонецЕсли