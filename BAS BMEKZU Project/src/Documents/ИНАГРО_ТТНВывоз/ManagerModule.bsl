#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Краткая
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Краткая";
	КомандаПечати.Представление = Нстр("ru='Краткая';uk='Стисла'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
	
	// Ф1-СГ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Ф1_СГ";
	КомандаПечати.Представление = "Ф1-СГ";
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
	
	// Ф1-ТН
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Ф1_ТН";
	КомандаПечати.Представление = "Ф1-ТН";
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
	
	// Ф1-ТН (2014)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Ф1_ТН_2014";
	КомандаПечати.Представление = "Ф1-ТН (2014)";
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
	
	// Ф1-ТН (2019)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Ф1_ТН_2019";
	КомандаПечати.Представление = "Ф1-ТН (2019)";
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
	
	// Пропуск
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Пропуск";
	КомандаПечати.Представление = Нстр("ru='Пропуск';uk='Пропуск'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Товарно-транспортная накладная (вывоз)""';uk='Реєстр документів ""Товарно-транспортна накладна (вивезення)""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры		

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Краткая") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Краткая", Нстр("ru='Краткая';uk='Стисла'"), 
		ПечатьДокумента(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ТТНВывоз.ПФ_MXL_Краткая", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Ф1_СГ") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Ф1_СГ", "Ф1-СГ", 
		ПечатьФ1_СГ(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ТТНВывоз.ПФ_MXL_Ф1_СГ", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Ф1_ТН") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Ф1_ТН", "Ф1-ТН", 
		ПечатьФ1_ТН(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ТТНВывоз.ПФ_MXL_Ф1_ТН", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Ф1_ТН_2014") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Ф1_ТН_2014", "Ф1-ТН (2014)", 
		ПечатьФ1_ТН_2014(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ТТНВывоз.ПФ_MXL_Ф1_ТН_2014", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Ф1_ТН_2019") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Ф1_ТН_2019", "Ф1-ТН (2019)", 
		ПечатьФ1_ТН_2019(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ТТНВывоз.ПФ_MXL_Ф1_ТН_2019", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Пропуск") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Пропуск", Нстр("ru='Пропуск';uk='Пропуск'"), 
		ПечатьПропускФ196(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ТТНВывоз.ПФ_MXL_Пропуск", ,Истина);
		
	КонецЕсли; 	

КонецПроцедуры

Функция ПечатьДокумента(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ТТНВывоз_Краткая";
	
	Макет = ПолучитьМакет("ПФ_MXL_Краткая");
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_ТТНВывоз.Ссылка,
		|	ИНАГРО_ТТНВывоз.ВерсияДанных,
		|	ИНАГРО_ТТНВывоз.ПометкаУдаления,
		|	ИНАГРО_ТТНВывоз.Номер,
		|	ИНАГРО_ТТНВывоз.Дата,
		|	ИНАГРО_ТТНВывоз.Проведен,
		|	ИНАГРО_ТТНВывоз.Автопредприятие,
		|	ИНАГРО_ТТНВывоз.Бухгалтер,
		|	ИНАГРО_ТТНВывоз.Вес,
		|	ИНАГРО_ТТНВывоз.ВесБрутто,
		|	ИНАГРО_ТТНВывоз.ВесБрутто1,
		|	ИНАГРО_ТТНВывоз.ВесБрутто1Контроль,
		|	ИНАГРО_ТТНВывоз.ВесБруттоКонтроль,
		|	ИНАГРО_ТТНВывоз.ВесНетто,
		|	ИНАГРО_ТТНВывоз.ВесНетто1,
		|	ИНАГРО_ТТНВывоз.Весовщик,
		|	ИНАГРО_ТТНВывоз.ВесТары,
		|	ИНАГРО_ТТНВывоз.ВесТары1,
		|	ИНАГРО_ТТНВывоз.ВесТары1Контроль,
		|	ИНАГРО_ТТНВывоз.ВесТарыКонтроль,
		|	ИНАГРО_ТТНВывоз.ВидЖурнала,
		|	ИНАГРО_ТТНВывоз.ВидОперации,
		|	ИНАГРО_ТТНВывоз.ВидПеревозки,
		|	ИНАГРО_ТТНВывоз.ВидФасовки,
		|	ИНАГРО_ТТНВывоз.ВидХранения,
		|	ИНАГРО_ТТНВывоз.Владелец,
		|	ИНАГРО_ТТНВывоз.Влажность,
		|	ИНАГРО_ТТНВывоз.Водитель,
		|	ИНАГРО_ТТНВывоз.ВремяВыбытия,
		|	ИНАГРО_ТТНВывоз.ВремяПрибытия,
		|	ИНАГРО_ТТНВывоз.ДатаВыбытия,
		|	ИНАГРО_ТТНВывоз.ДатаПрибытия,
		|	ИНАГРО_ТТНВывоз.ДоверенностьДата,
		|	ИНАГРО_ТТНВывоз.ДоверенностьНомер,
		|	ИНАГРО_ТТНВывоз.ДоверенностьСерия,
		|	ИНАГРО_ТТНВывоз.ДоверенностьЧерез,
		|	ИНАГРО_ТТНВывоз.ДоговорКонтрагента,
		|	ИНАГРО_ТТНВывоз.ДоговорПолучателя,
		|	ИНАГРО_ТТНВывоз.ДокументПодтверждающийПолномочия,
		|	ИНАГРО_ТТНВывоз.ЕстьЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывоз.Заказчик,
		|	ИНАГРО_ТТНВывоз.ЗачетныйВес,
		|	ИНАГРО_ТТНВывоз.ЗерноваяПримесь,
		|	ИНАГРО_ТТНВывоз.Качество,
		|	ИНАГРО_ТТНВывоз.Количество,
		|	ИНАГРО_ТТНВывоз.КоличествоМест,
		|	ИНАГРО_ТТНВывоз.Комментарий,
		|	ИНАГРО_ТТНВывоз.ЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывоз.МестоНазначения,
		|	ИНАГРО_ТТНВывоз.МестоХранения,
		|	ИНАГРО_ТТНВывоз.НеПереформировыватьАвтоматически,
		|	ИНАГРО_ТТНВывоз.Номенклатура,
		|	ИНАГРО_ТТНВывоз.НомерАнализа,
		|	ИНАГРО_ТТНВывоз.НомерБланка,
		|	ИНАГРО_ТТНВывоз.НомерЖурнала,
		|	ИНАГРО_ТТНВывоз.НомерНакладной,
		|	ИНАГРО_ТТНВывоз.НомерПломбыАвтомобиля,
		|	ИНАГРО_ТТНВывоз.НомерПломбыПрицепа,
		|	ИНАГРО_ТТНВывоз.НомерПрицепа,
		|	ИНАГРО_ТТНВывоз.НомерПропуска,
		|	ИНАГРО_ТТНВывоз.НомерТранспорта,
		|	ИНАГРО_ТТНВывоз.ОписаниеДвиженияФормы36,
		|	ИНАГРО_ТТНВывоз.Организация,
		|	ИНАГРО_ТТНВывоз.Ответственный,
		|	ИНАГРО_ТТНВывоз.ОтпускРазрешил,
		|	ИНАГРО_ТТНВывоз.ОтражатьВБухгалтерскомУчете,
		|	ИНАГРО_ТТНВывоз.Получатель,
		|	ИНАГРО_ТТНВывоз.ПолучилПоДругомуДокументу,
		|	ИНАГРО_ТТНВывоз.ПриказДата,
		|	ИНАГРО_ТТНВывоз.ПриказНаВывоз,
		|	ИНАГРО_ТТНВывоз.ПриказНомер,
		|	ИНАГРО_ТТНВывоз.Прицеп,
		|	ИНАГРО_ТТНВывоз.ПунктНазначения,
		|	ИНАГРО_ТТНВывоз.Рецепт,
		|	ИНАГРО_ТТНВывоз.Силос,
		|	ИНАГРО_ТТНВывоз.Склад,
		|	ИНАГРО_ТТНВывоз.СорнаяПримесь,
		|	ИНАГРО_ТТНВывоз.ТипЖурнала,
		|	ИНАГРО_ТТНВывоз.Транспорт,
		|	ИНАГРО_ТТНВывоз.Урожай,
		|	ИНАГРО_ТТНВывоз.Организация.НаименованиеПолное,
		|	ИНАГРО_ТТНВывоз.Владелец.НаименованиеПолное
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывоз КАК ИНАГРО_ТТНВывоз
		|ГДЕ
		|	ИНАГРО_ТТНВывоз.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Ссылка,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.НомерСтроки,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Вес,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.ВидФасовки,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Влажность,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.ЗерноваяПримесь,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Количество,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.ЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Номенклатура,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.СорнаяПримесь,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.СчетУчетаБУ,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.УдалитьЗачетныйВес,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.НомерАнализа,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Урожай
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывоз.СписокНоменклатуры КАК ИНАГРО_ТТНВывозСписокНоменклатуры
		|ГДЕ
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаШапка = МассивРезультатов[0].Выбрать();
	
	ВыборкаТЧ    =  МассивРезультатов[1].Выгрузить();
	
	Пока ВыборкаШапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Строка = Макет.ПолучитьОбласть("Строка");
		Итог  = Макет.ПолучитьОбласть("Итог");
		СтрокаДляНесколькихТМЦ = Макет.ПолучитьОбласть("СтрокаДляНесколькихТМЦ");
		
		Шапка.Параметры.Организация = ВыборкаШапка.ОрганизацияНаименованиеПолное;
		Шапка.Параметры.ТекДата = ТекущаяДата();
		Шапка.Параметры.НомерДок = ВыборкаШапка.Номер;
		ВремяНачалаДняПриОтгрузке = ИНАГРО_Элеватор.ПолучитьПараметрУчетаЭлеватора(ВыборкаШапка.Дата, "ВремяНачалаДняПриОтгрузке", 0);
		Если ВремяНачалаДняПриОтгрузке <> 0 Тогда	
			Шапка.Параметры.Дата = Формат(ВыборкаШапка.ВремяВыбытия, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Иначе
			Шапка.Параметры.Дата = Формат(ВыборкаШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		КонецЕсли;
		Шапка.Параметры.Владелец = ВыборкаШапка.ВладелецНаименованиеПолное;
		Шапка.Параметры.Склад = ВыборкаШапка.Склад;
		Шапка.Параметры.ВидХранения = ВыборкаШапка.ВидХранения;
		//Шапка.Параметры.Автотранспорт = ?(ТипЗнч(ВыборкаШапка.Водитель) = Тип("СправочникСсылка.ИНАГРО_Водители"), ВыборкаШапка.Водитель.НомерТранспорта, "");
		Шапка.Параметры.Транспорт = ВыборкаШапка.НомерТранспорта;
		Шапка.Параметры.Водитель = ВыборкаШапка.Водитель;
		Шапка.Параметры.Владелец = ВыборкаШапка.Владелец;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);
		Шапка.Параметры.Получатель = ВыборкаШапка.Получатель;
		Шапка.Параметры.ДовСерия = ВыборкаШапка.ДоверенностьСерия;
		Шапка.Параметры.ДовНомер = ВыборкаШапка.ДоверенностьНомер;
		Шапка.Параметры.ДовДата = ?(ВыборкаШапка.ДоверенностьДата = '00010101000000', "",Формат(ВыборкаШапка.ДоверенностьДата, "ДЛФ=D"));
		Шапка.Параметры.ДовЧерез = ВыборкаШапка.ДоверенностьЧерез;
		Шапка.Параметры.ПриказНомер = ВыборкаШапка.ПриказНомер;
		Шапка.Параметры.ПриказДата = ?(ВыборкаШапка.ПриказДата = '00010101000000', "",Формат(ВыборкаШапка.ПриказДата, "ДЛФ=D"));
		ТабДокумент.Вывести(Шапка);
		
		Если ВыборкаШапка.ВидОперации=Перечисления.ИНАГРО_ВидыОперацийТТНВывоз.ВывозФасованного Тогда		
			
			ТабТЧ = ВыборкаТЧ.Скопировать(Новый Структура("Ссылка",ВыборкаШапка.Ссылка));
			
			Для Каждого Стр Из ТабТЧ Цикл
				СтрокаДляНесколькихТМЦ.Параметры.Ном=Стр.НомерСтроки;
				СтрокаДляНесколькихТМЦ.Параметры.Номенклатура=Стр.Номенклатура;	
				СтрокаДляНесколькихТМЦ.Параметры.Вес=Стр.Вес;	
				ТабДокумент.Вывести(СтрокаДляНесколькихТМЦ);
			КонецЦикла;
		Иначе
			Строка.Параметры.Номенклатура = ВыборкаШапка.Номенклатура;
			Строка.Параметры.ВесБрутто = ВыборкаШапка.ВесБрутто;
			Строка.Параметры.ВесНетто = ВыборкаШапка.ВесНетто;
			Строка.Параметры.ВесТары = ВыборкаШапка.ВесТары;
			Строка.Параметры.ВесБрутто1 = ВыборкаШапка.ВесБрутто1;
			Строка.Параметры.ВесНетто1 = ВыборкаШапка.ВесНетто1;
			Строка.Параметры.ВесТары1 = ВыборкаШапка.ВесТары1;
			ТабДокумент.Вывести(Строка);
		КонецЕсли;
		
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(ВыборкаШапка.Организация, ВыборкаШапка.Дата);
		Итог.Параметры.ФИОРуководителя = Руководители.Руководитель;
		
		ДанныеСотрудника = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаШапка.Организация, ВыборкаШапка.Бухгалтер, ВыборкаШапка.Дата);
		Итог.Параметры.Бухгалтер = ДанныеСотрудника.Представление; 
		ДанныеСотрудника = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаШапка.Организация, ВыборкаШапка.ОтпускРазрешил, ВыборкаШапка.Дата);
		Итог.Параметры.Отпустил = ДанныеСотрудника.Представление; 		
		
		Итог.Параметры.Вес = ВыборкаШапка.Вес;
		Итог.Параметры.ВесПроп = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать, ВыборкаШапка.Вес);
		ТабДокумент.Вывести(Итог);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьФ1_СГ(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ИНАГРО_ТТНВывоз_Ф1_СГ";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = ПолучитьМакет("ПФ_MXL_Ф1_СГ");
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_ТТНВывоз.Ссылка,
		|	ИНАГРО_ТТНВывоз.ВерсияДанных,
		|	ИНАГРО_ТТНВывоз.ПометкаУдаления,
		|	ИНАГРО_ТТНВывоз.Номер,
		|	ИНАГРО_ТТНВывоз.Дата,
		|	ИНАГРО_ТТНВывоз.Проведен,
		|	ИНАГРО_ТТНВывоз.Автопредприятие,
		|	ИНАГРО_ТТНВывоз.Бухгалтер,
		|	ИНАГРО_ТТНВывоз.Вес,
		|	ИНАГРО_ТТНВывоз.ВесБрутто,
		|	ИНАГРО_ТТНВывоз.ВесБрутто1,
		|	ИНАГРО_ТТНВывоз.ВесБрутто1Контроль,
		|	ИНАГРО_ТТНВывоз.ВесБруттоКонтроль,
		|	ИНАГРО_ТТНВывоз.ВесНетто,
		|	ИНАГРО_ТТНВывоз.ВесНетто1,
		|	ИНАГРО_ТТНВывоз.Весовщик,
		|	ИНАГРО_ТТНВывоз.ВесТары,
		|	ИНАГРО_ТТНВывоз.ВесТары1,
		|	ИНАГРО_ТТНВывоз.ВесТары1Контроль,
		|	ИНАГРО_ТТНВывоз.ВесТарыКонтроль,
		|	ИНАГРО_ТТНВывоз.ВидЖурнала,
		|	ИНАГРО_ТТНВывоз.ВидОперации,
		|	ИНАГРО_ТТНВывоз.ВидПеревозки,
		|	ИНАГРО_ТТНВывоз.ВидФасовки,
		|	ИНАГРО_ТТНВывоз.ВидХранения,
		|	ИНАГРО_ТТНВывоз.Владелец,
		|	ИНАГРО_ТТНВывоз.Влажность,
		|	ИНАГРО_ТТНВывоз.Водитель,
		|	ИНАГРО_ТТНВывоз.ВремяВыбытия,
		|	ИНАГРО_ТТНВывоз.ВремяПрибытия,
		|	ИНАГРО_ТТНВывоз.ДатаВыбытия,
		|	ИНАГРО_ТТНВывоз.ДатаПрибытия,
		|	ИНАГРО_ТТНВывоз.ДоверенностьДата,
		|	ИНАГРО_ТТНВывоз.ДоверенностьНомер,
		|	ИНАГРО_ТТНВывоз.ДоверенностьСерия,
		|	ИНАГРО_ТТНВывоз.ДоверенностьЧерез,
		|	ИНАГРО_ТТНВывоз.ДоговорКонтрагента,
		|	ИНАГРО_ТТНВывоз.ДоговорПолучателя,
		|	ИНАГРО_ТТНВывоз.ДокументПодтверждающийПолномочия,
		|	ИНАГРО_ТТНВывоз.ЕстьЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывоз.Заказчик,
		|	ИНАГРО_ТТНВывоз.ЗачетныйВес,
		|	ИНАГРО_ТТНВывоз.ЗерноваяПримесь,
		|	ИНАГРО_ТТНВывоз.Качество,
		|	ИНАГРО_ТТНВывоз.Количество,
		|	ИНАГРО_ТТНВывоз.КоличествоМест,
		|	ИНАГРО_ТТНВывоз.Комментарий,
		|	ИНАГРО_ТТНВывоз.ЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывоз.МестоНазначения,
		|	ИНАГРО_ТТНВывоз.МестоХранения,
		|	ИНАГРО_ТТНВывоз.НеПереформировыватьАвтоматически,
		|	ИНАГРО_ТТНВывоз.Номенклатура,
		|	ИНАГРО_ТТНВывоз.НомерАнализа,
		|	ИНАГРО_ТТНВывоз.НомерБланка,
		|	ИНАГРО_ТТНВывоз.НомерЖурнала,
		|	ИНАГРО_ТТНВывоз.НомерНакладной,
		|	ИНАГРО_ТТНВывоз.НомерПломбыАвтомобиля,
		|	ИНАГРО_ТТНВывоз.НомерПломбыПрицепа,
		|	ИНАГРО_ТТНВывоз.НомерПрицепа,
		|	ИНАГРО_ТТНВывоз.НомерПропуска,
		|	ИНАГРО_ТТНВывоз.НомерТранспорта,
		|	ИНАГРО_ТТНВывоз.ОписаниеДвиженияФормы36,
		|	ИНАГРО_ТТНВывоз.Организация,
		|	ИНАГРО_ТТНВывоз.Ответственный,
		|	ИНАГРО_ТТНВывоз.ОтпускРазрешил,
		|	ИНАГРО_ТТНВывоз.ОтражатьВБухгалтерскомУчете,
		|	ИНАГРО_ТТНВывоз.Получатель,
		|	ИНАГРО_ТТНВывоз.ПолучилПоДругомуДокументу,
		|	ИНАГРО_ТТНВывоз.ПриказДата,
		|	ИНАГРО_ТТНВывоз.ПриказНаВывоз,
		|	ИНАГРО_ТТНВывоз.ПриказНомер,
		|	ИНАГРО_ТТНВывоз.Прицеп,
		|	ИНАГРО_ТТНВывоз.ПунктНазначения,
		|	ИНАГРО_ТТНВывоз.Рецепт,
		|	ИНАГРО_ТТНВывоз.Силос,
		|	ИНАГРО_ТТНВывоз.Склад,
		|	ИНАГРО_ТТНВывоз.СорнаяПримесь,
		|	ИНАГРО_ТТНВывоз.ТипЖурнала,
		|	ИНАГРО_ТТНВывоз.Транспорт,
		|	ИНАГРО_ТТНВывоз.УдалитьЖурналВесовщика,
		|	ИНАГРО_ТТНВывоз.УдалитьКуда,
		|	ИНАГРО_ТТНВывоз.УдалитьНесколькоНоменклатур,
		|	ИНАГРО_ТТНВывоз.УдалитьОтражатьПоЗатратам,
		|	ИНАГРО_ТТНВывоз.УдалитьПартия,
		|	ИНАГРО_ТТНВывоз.РедактировалсяВручнуюВесБрутто,
		|	ИНАГРО_ТТНВывоз.РедактировалсяВручнуюВесБрутто1,
		|	ИНАГРО_ТТНВывоз.РедактировалсяВручнуюВесТары,
		|	ИНАГРО_ТТНВывоз.РедактировалсяВручнуюВесТары1,
		|	ИНАГРО_ТТНВывоз.УдалитьСозданЧерезБП,
		|	ИНАГРО_ТТНВывоз.УдалитьТолькоЗарегистрировать,
		|	ИНАГРО_ТТНВывоз.УдалитьЧерез,
		|	ИНАГРО_ТТНВывоз.Урожай,
		|	ИНАГРО_ТТНВывоз.Организация.НаименованиеПолное,
		|	ИНАГРО_ТТНВывоз.Автопредприятие.КодПоЕДРПОУ,
		|	ИНАГРО_ТТНВывоз.Владелец.КодПоЕДРПОУ,
		|	ИНАГРО_ТТНВывоз.Номенклатура.НаименованиеПолное,
		|	ИНАГРО_ТТНВывоз.ЛабораторныйАнализ.СтанцияОтправления
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывоз КАК ИНАГРО_ТТНВывоз
		|ГДЕ
		|	ИНАГРО_ТТНВывоз.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Шапка = Макет.ПолучитьОбласть("Шапка|Лист");
		
		Шапка.Параметры.Организация = Выборка.ОрганизацияНаименованиеПолное;
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация,,,,КодЯзыкаПечать);
		Шапка.Параметры.ОрганизацияКод = СведенияОбОрганизации.КодПоЕДРПОУ;		
		
		Шапка.Параметры.НомерДок = Выборка.Номер;
		ВремяНачалаДняПриОтгрузке = ИНАГРО_Элеватор.ПолучитьПараметрУчетаЭлеватора(Выборка.Дата, "ВремяНачалаДняПриОтгрузке", 0);
		Если ВремяНачалаДняПриОтгрузке <> 0 Тогда
			Шапка.Параметры.ДатаДок = Формат(Выборка.ВремяВыбытия, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Иначе	
			Шапка.Параметры.ДатаДок = Формат(Выборка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		КонецЕсли;	
		
		Шапка.Параметры.ПунктНазначения = Выборка.ПунктНазначения;
		Шапка.Параметры.Автопредприятие = Выборка.Автопредприятие;
		Шапка.Параметры.АвтопредприятиеКод = Выборка.АвтопредприятиеКодПоЕДРПОУ;
		Шапка.Параметры.НомерТранспорта = Выборка.НомерТранспорта;
		Шапка.Параметры.Водитель = Выборка.Водитель;
		Шапка.Параметры.Владелец = Выборка.Владелец;
		Шапка.Параметры.ВладелецКод = Выборка.ВладелецКодПоЕДРПОУ;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Владелец);
		Шапка.Параметры.Номенклатура = Выборка.НоменклатураНаименованиеПолное;
		Шапка.Параметры.ПункНагрузки = Выборка.ЛабораторныйАнализСтанцияОтправления;
		Шапка.Параметры.Получатель = Выборка.Получатель;	
		Шапка.Параметры.ПриказНомер = СокрЛП(Выборка.ПриказНомер);
		Шапка.Параметры.ВесБрутто = Выборка.ВесБрутто + Выборка.ВесБрутто1;
		Шапка.Параметры.ВесНетто = Выборка.ВесНетто + Выборка.ВесНетто1;
		Шапка.Параметры.ВесТары = Выборка.ВесТары + Выборка.ВесТары1;
		Шапка.Параметры.Прицеп = Выборка.НомерПрицепа;
		Шапка.Параметры.ОтпускРазрешил = Выборка.ОтпускРазрешил;
		
		КвоЭкземпляров = 3;
		СтруктураСохранения = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_ТТНВывоз_Ф1_СГ");	
		Если СтруктураСохранения <> Неопределено Тогда
			КвоЭкземпляров = СтруктураСохранения.ВыбранноеКоличествоФ1_СГ; 
		КонецЕсли;
		
		Ном = 1;		
		Пока Ном <= КвоЭкземпляров Цикл
			ТабДокумент.Вывести(Шапка);
			Ном = Ном + 1;
			Если Ном <= КвоЭкземпляров Тогда
				ТабДокумент.Присоединить(Шапка);
				Ном = Ном + 1;
			КонецЕсли;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТабДокумент;
		
КонецФункции

Функция ПечатьФ1_ТН(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ИНАГРО_ТТНВывоз_Ф1_ТН";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = ПолучитьМакет("ПФ_MXL_Ф1_ТН");
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_ТТНВывоз.Ссылка,
		|	ИНАГРО_ТТНВывоз.ВерсияДанных,
		|	ИНАГРО_ТТНВывоз.ПометкаУдаления,
		|	ИНАГРО_ТТНВывоз.Номер,
		|	ИНАГРО_ТТНВывоз.Дата,
		|	ИНАГРО_ТТНВывоз.Проведен,
		|	ИНАГРО_ТТНВывоз.Автопредприятие,
		|	ИНАГРО_ТТНВывоз.Бухгалтер,
		|	ИНАГРО_ТТНВывоз.Вес,
		|	ИНАГРО_ТТНВывоз.ВесБрутто,
		|	ИНАГРО_ТТНВывоз.ВесБрутто1,
		|	ИНАГРО_ТТНВывоз.ВесБрутто1Контроль,
		|	ИНАГРО_ТТНВывоз.ВесБруттоКонтроль,
		|	ИНАГРО_ТТНВывоз.ВесНетто,
		|	ИНАГРО_ТТНВывоз.ВесНетто1,
		|	ИНАГРО_ТТНВывоз.Весовщик,
		|	ИНАГРО_ТТНВывоз.ВесТары,
		|	ИНАГРО_ТТНВывоз.ВесТары1,
		|	ИНАГРО_ТТНВывоз.ВесТары1Контроль,
		|	ИНАГРО_ТТНВывоз.ВесТарыКонтроль,
		|	ИНАГРО_ТТНВывоз.ВидЖурнала,
		|	ИНАГРО_ТТНВывоз.ВидОперации,
		|	ИНАГРО_ТТНВывоз.ВидПеревозки,
		|	ИНАГРО_ТТНВывоз.ВидФасовки,
		|	ИНАГРО_ТТНВывоз.ВидХранения,
		|	ИНАГРО_ТТНВывоз.Владелец,
		|	ИНАГРО_ТТНВывоз.Влажность,
		|	ИНАГРО_ТТНВывоз.Водитель,
		|	ИНАГРО_ТТНВывоз.ВремяВыбытия,
		|	ИНАГРО_ТТНВывоз.ВремяПрибытия,
		|	ИНАГРО_ТТНВывоз.ДатаВыбытия,
		|	ИНАГРО_ТТНВывоз.ДатаПрибытия,
		|	ИНАГРО_ТТНВывоз.ДоверенностьДата,
		|	ИНАГРО_ТТНВывоз.ДоверенностьНомер,
		|	ИНАГРО_ТТНВывоз.ДоверенностьСерия,
		|	ИНАГРО_ТТНВывоз.ДоверенностьЧерез,
		|	ИНАГРО_ТТНВывоз.ДоговорКонтрагента,
		|	ИНАГРО_ТТНВывоз.ДоговорПолучателя,
		|	ИНАГРО_ТТНВывоз.ДокументПодтверждающийПолномочия,
		|	ИНАГРО_ТТНВывоз.ЕстьЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывоз.Заказчик,
		|	ИНАГРО_ТТНВывоз.ЗачетныйВес,
		|	ИНАГРО_ТТНВывоз.ЗерноваяПримесь,
		|	ИНАГРО_ТТНВывоз.Качество,
		|	ИНАГРО_ТТНВывоз.Количество,
		|	ИНАГРО_ТТНВывоз.КоличествоМест,
		|	ИНАГРО_ТТНВывоз.Комментарий,
		|	ИНАГРО_ТТНВывоз.ЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывоз.МестоНазначения,
		|	ИНАГРО_ТТНВывоз.МестоХранения,
		|	ИНАГРО_ТТНВывоз.НеПереформировыватьАвтоматически,
		|	ИНАГРО_ТТНВывоз.Номенклатура,
		|	ИНАГРО_ТТНВывоз.НомерАнализа,
		|	ИНАГРО_ТТНВывоз.НомерБланка,
		|	ИНАГРО_ТТНВывоз.НомерЖурнала,
		|	ИНАГРО_ТТНВывоз.НомерНакладной,
		|	ИНАГРО_ТТНВывоз.НомерПломбыАвтомобиля,
		|	ИНАГРО_ТТНВывоз.НомерПломбыПрицепа,
		|	ИНАГРО_ТТНВывоз.НомерПрицепа,
		|	ИНАГРО_ТТНВывоз.НомерПропуска,
		|	ИНАГРО_ТТНВывоз.НомерТранспорта,
		|	ИНАГРО_ТТНВывоз.ОписаниеДвиженияФормы36,
		|	ИНАГРО_ТТНВывоз.Организация,
		|	ИНАГРО_ТТНВывоз.Ответственный,
		|	ИНАГРО_ТТНВывоз.ОтпускРазрешил,
		|	ИНАГРО_ТТНВывоз.ОтражатьВБухгалтерскомУчете,
		|	ИНАГРО_ТТНВывоз.Получатель,
		|	ИНАГРО_ТТНВывоз.ПолучилПоДругомуДокументу,
		|	ИНАГРО_ТТНВывоз.ПриказДата,
		|	ИНАГРО_ТТНВывоз.ПриказНаВывоз,
		|	ИНАГРО_ТТНВывоз.ПриказНомер,
		|	ИНАГРО_ТТНВывоз.Прицеп,
		|	ИНАГРО_ТТНВывоз.ПунктНазначения,
		|	ИНАГРО_ТТНВывоз.Рецепт,
		|	ИНАГРО_ТТНВывоз.Силос,
		|	ИНАГРО_ТТНВывоз.Склад,
		|	ИНАГРО_ТТНВывоз.СорнаяПримесь,
		|	ИНАГРО_ТТНВывоз.ТипЖурнала,
		|	ИНАГРО_ТТНВывоз.Транспорт,
		|	ИНАГРО_ТТНВывоз.Урожай,
		|	ИНАГРО_ТТНВывоз.Организация.НаименованиеПолное,
		|	ИНАГРО_ТТНВывоз.Автопредприятие.КодПоЕДРПОУ,
		|	ИНАГРО_ТТНВывоз.Владелец.КодПоЕДРПОУ,
		|	ИНАГРО_ТТНВывоз.Номенклатура.НаименованиеПолное,
		|	ИНАГРО_ТТНВывоз.ЛабораторныйАнализ.СтанцияОтправления,
		|	ИНАГРО_ТТНВывоз.Получатель.НаименованиеПолное,
		|	ИНАГРО_ТТНВывоз.Получатель.КодПоЕДРПОУ,
		|	ИНАГРО_ТТНВывоз.Номенклатура.БазоваяЕдиницаИзмерения
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывоз КАК ИНАГРО_ТТНВывоз
		|ГДЕ
		|	ИНАГРО_ТТНВывоз.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Лист1 = Макет.ПолучитьОбласть("Лист1");
		Лист2 = Макет.ПолучитьОбласть("Лист2");
		
		Лист1.Параметры.Организация = Выборка.ОрганизацияНаименованиеПолное;
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация,,,,КодЯзыкаПечать);
		Лист1.Параметры.ОрганизацияКод = СведенияОбОрганизации.КодПоЕДРПОУ;
		
		Лист1.Параметры.НомерДок = Выборка.Номер;
		ВремяНачалаДняПриОтгрузке = ИНАГРО_Элеватор.ПолучитьПараметрУчетаЭлеватора(Выборка.Дата, "ВремяНачалаДняПриОтгрузке", 0);
		Если ВремяНачалаДняПриОтгрузке <> 0 Тогда
			Лист1.Параметры.ДатаДок = Формат(Выборка.ВремяВыбытия, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Иначе	
			Лист1.Параметры.ДатаДок = Формат(Выборка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		КонецЕсли;
		Лист1.Параметры.Владелец 			= Выборка.Владелец;
		Лист1.Параметры.ВладелецКод 		= Выборка.ВладелецКодПоЕДРПОУ;
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Лист1.Параметры.Владелец);
		Лист1.Параметры.ПунктНазначения 	= Выборка.ПунктНазначения;
		Лист1.Параметры.Автопредприятие 	= Выборка.Автопредприятие;
		Лист1.Параметры.АвтопредприятиеКод 	= Выборка.АвтопредприятиеКодПоЕДРПОУ;
		Лист1.Параметры.ВидПеревозки 		= Выборка.ВидПеревозки;
		Лист1.Параметры.МаркаГосНомер 		= Выборка.НомерТранспорта;
		Лист1.Параметры.Водитель 			= Выборка.Водитель;
		
		Лист1.Параметры.ПункНагрузки 		= СведенияОбОрганизации.ФактическийАдрес;
		Лист1.Параметры.Прицеп 				= Выборка.НомерПрицепа;
		Лист1.Параметры.Получатель			= Выборка.ПолучательНаименованиеПолное;	
		Лист1.Параметры.ПолучательКод 		= Выборка.ПолучательКодПоЕДРПОУ;
		Лист1.Параметры.Номенклатура 		= Выборка.НоменклатураНаименованиеПолное;
		Лист1.Параметры.ЕдиницаИзмерения 	= Выборка.НоменклатураБазоваяЕдиницаИзмерения;
		Лист1.Параметры.ВесБрутто 			= (Выборка.ВесБрутто + Выборка.ВесБрутто1)/1000;
		
		Лист1.Параметры.НомерПломбыАвтомобиля 	= Выборка.НомерПломбыАвтомобиля;
		Лист1.Параметры.НомерПломбыПрицепа 		= Выборка.НомерПломбыПрицепа;
		Лист1.Параметры.НомерДоверености 		= Выборка.ДоверенностьСерия + Выборка.ДоверенностьНомер;
		ДатаДоверенности = Формат(Выборка.Дата,"ДЛФ=ДД");
		Если НЕ Выборка.ДоверенностьДата = Дата(1, 1, 1) Тогда
			Лист1.Параметры.ДатаДоверенности 	= Лев(ДатаДоверенности,2);
			ДатаДоверенности 					= Сред(ДатаДоверенности,4,СтрДлина(ДатаДоверенности));
			Лист1.Параметры.МесяцДоверенности 	= Сред(ДатаДоверенности,1,Найти(ДатаДоверенности," "));
			Лист1.Параметры.ГодДоверенности 	= Сред(ДатаДоверенности,СтрДлина(ДатаДоверенности) - 4,СтрДлина(ДатаДоверенности) - 2);
		КонецЕсли;
				
		КвоЭкземпляров = 3;
		СтруктураСохранения = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_ТТНВывоз_Ф1_ТН");	
		Если СтруктураСохранения <> Неопределено Тогда
			КвоЭкземпляров = СтруктураСохранения.ВыбранноеКоличествоФ1_ТН; 
		КонецЕсли;
		
		Ном = 1;		
		Пока Ном <= КвоЭкземпляров Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;

			ТабДокумент.Вывести(Лист1);
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(Лист2);

			Ном = Ном + 1;
		КонецЦикла;
		
	КонецЦикла;		
	
	Возврат ТабДокумент;
		
КонецФункции 

Функция ПечатьФ1_ТН_2014(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ТТНВывоз_Ф1_ТН_2014";
	
	Макет = ПолучитьМакет("ПФ_MXL_Ф1_ТН_2014");
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_ТТНВывоз.Ссылка,
		|	ИНАГРО_ТТНВывоз.ВерсияДанных,
		|	ИНАГРО_ТТНВывоз.ПометкаУдаления,
		|	ИНАГРО_ТТНВывоз.Номер,
		|	ИНАГРО_ТТНВывоз.Дата,
		|	ИНАГРО_ТТНВывоз.Проведен,
		|	ИНАГРО_ТТНВывоз.Автопредприятие,
		|	ИНАГРО_ТТНВывоз.Бухгалтер,
		|	ИНАГРО_ТТНВывоз.Вес,
		|	ИНАГРО_ТТНВывоз.ВесБрутто,
		|	ИНАГРО_ТТНВывоз.ВесБрутто1,
		|	ИНАГРО_ТТНВывоз.ВесБрутто1Контроль,
		|	ИНАГРО_ТТНВывоз.ВесБруттоКонтроль,
		|	ИНАГРО_ТТНВывоз.ВесНетто,
		|	ИНАГРО_ТТНВывоз.ВесНетто1,
		|	ИНАГРО_ТТНВывоз.Весовщик,
		|	ИНАГРО_ТТНВывоз.ВесТары,
		|	ИНАГРО_ТТНВывоз.ВесТары1,
		|	ИНАГРО_ТТНВывоз.ВесТары1Контроль,
		|	ИНАГРО_ТТНВывоз.ВесТарыКонтроль,
		|	ИНАГРО_ТТНВывоз.ВидЖурнала,
		|	ИНАГРО_ТТНВывоз.ВидОперации,
		|	ИНАГРО_ТТНВывоз.ВидПеревозки,
		|	ИНАГРО_ТТНВывоз.ВидФасовки,
		|	ИНАГРО_ТТНВывоз.ВидХранения,
		|	ИНАГРО_ТТНВывоз.Владелец,
		|	ИНАГРО_ТТНВывоз.Влажность,
		|	ИНАГРО_ТТНВывоз.Водитель,
		|	ИНАГРО_ТТНВывоз.ВремяВыбытия,
		|	ИНАГРО_ТТНВывоз.ВремяПрибытия,
		|	ИНАГРО_ТТНВывоз.ДатаВыбытия,
		|	ИНАГРО_ТТНВывоз.ДатаПрибытия,
		|	ИНАГРО_ТТНВывоз.ДоверенностьДата,
		|	ИНАГРО_ТТНВывоз.ДоверенностьНомер,
		|	ИНАГРО_ТТНВывоз.ДоверенностьСерия,
		|	ИНАГРО_ТТНВывоз.ДоверенностьЧерез,
		|	ИНАГРО_ТТНВывоз.ДоговорКонтрагента,
		|	ИНАГРО_ТТНВывоз.ДоговорПолучателя,
		|	ИНАГРО_ТТНВывоз.ДокументПодтверждающийПолномочия,
		|	ИНАГРО_ТТНВывоз.ЕстьЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывоз.Заказчик,
		|	ИНАГРО_ТТНВывоз.ЗачетныйВес,
		|	ИНАГРО_ТТНВывоз.ЗерноваяПримесь,
		|	ИНАГРО_ТТНВывоз.Качество,
		|	ИНАГРО_ТТНВывоз.Количество,
		|	ИНАГРО_ТТНВывоз.КоличествоМест,
		|	ИНАГРО_ТТНВывоз.Комментарий,
		|	ИНАГРО_ТТНВывоз.ЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывоз.МестоНазначения,
		|	ИНАГРО_ТТНВывоз.МестоХранения,
		|	ИНАГРО_ТТНВывоз.НеПереформировыватьАвтоматически,
		|	ИНАГРО_ТТНВывоз.Номенклатура,
		|	ИНАГРО_ТТНВывоз.НомерАнализа,
		|	ИНАГРО_ТТНВывоз.НомерБланка,
		|	ИНАГРО_ТТНВывоз.НомерЖурнала,
		|	ИНАГРО_ТТНВывоз.НомерНакладной,
		|	ИНАГРО_ТТНВывоз.НомерПломбыАвтомобиля,
		|	ИНАГРО_ТТНВывоз.НомерПломбыПрицепа,
		|	ИНАГРО_ТТНВывоз.НомерПрицепа,
		|	ИНАГРО_ТТНВывоз.НомерПропуска,
		|	ИНАГРО_ТТНВывоз.НомерТранспорта,
		|	ИНАГРО_ТТНВывоз.ОписаниеДвиженияФормы36,
		|	ИНАГРО_ТТНВывоз.Организация,
		|	ИНАГРО_ТТНВывоз.Ответственный,
		|	ИНАГРО_ТТНВывоз.ОтпускРазрешил,
		|	ИНАГРО_ТТНВывоз.ОтражатьВБухгалтерскомУчете,
		|	ИНАГРО_ТТНВывоз.Получатель,
		|	ИНАГРО_ТТНВывоз.ПолучилПоДругомуДокументу,
		|	ИНАГРО_ТТНВывоз.ПриказДата,
		|	ИНАГРО_ТТНВывоз.ПриказНаВывоз,
		|	ИНАГРО_ТТНВывоз.ПриказНомер,
		|	ИНАГРО_ТТНВывоз.Прицеп,
		|	ИНАГРО_ТТНВывоз.ПунктНазначения,
		|	ИНАГРО_ТТНВывоз.Рецепт,
		|	ИНАГРО_ТТНВывоз.Силос,
		|	ИНАГРО_ТТНВывоз.Склад,
		|	ИНАГРО_ТТНВывоз.СорнаяПримесь,
		|	ИНАГРО_ТТНВывоз.ТипЖурнала,
		|	ИНАГРО_ТТНВывоз.Транспорт,
		|	ИНАГРО_ТТНВывоз.Урожай,
		|	ИНАГРО_ТТНВывоз.Водитель.Наименование,
		|	ИНАГРО_ТТНВывоз.Водитель.Удостоверение,
		|	ИНАГРО_ТТНВывоз.НомерПрицепа.Марка,
		|	ИНАГРО_ТТНВывоз.НомерТранспорта.Марка
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывоз КАК ИНАГРО_ТТНВывоз
		|ГДЕ
		|	ИНАГРО_ТТНВывоз.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_ТТНВывоз.Номенклатура,
		|	ИНАГРО_ТТНВывоз.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ТТНВывоз.Вес,
		|	ИНАГРО_ТТНВывоз.ВесБрутто + ИНАГРО_ТТНВывоз.ВесБрутто1 КАК ВесБрутто,
		|	ИНАГРО_ТТНВывоз.ВесНетто + ИНАГРО_ТТНВывоз.ВесНетто1 КАК ВесНетто,
		|	ИНАГРО_ТТНВывоз.ВесТары + ИНАГРО_ТТНВывоз.ВесТары1 КАК ВесТары,
		|	ИНАГРО_ТТНВывоз.КоличествоМест,
		|	ИНАГРО_ПриказНаВывозКультуры.Фасовка КАК ВидФасовки,
		|	ИНАГРО_ПриказНаВывозКультуры.Цена,
		|	ИНАГРО_ПриказНаВывозКультуры.Сумма * 1.2 КАК Сумма,
		|	ИНАГРО_ПриказНаВывозКультуры.Сумма * 0.2 КАК НДС,
		|	ИНАГРО_ТТНВывоз.Ссылка
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывоз КАК ИНАГРО_ТТНВывоз
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ПриказНаВывоз.Культуры КАК ИНАГРО_ПриказНаВывозКультуры
		|		ПО ИНАГРО_ТТНВывоз.ПриказНаВывоз = ИНАГРО_ПриказНаВывозКультуры.Ссылка
		|			И ИНАГРО_ТТНВывоз.Номенклатура = ИНАГРО_ПриказНаВывозКультуры.Номенклатура
		|ГДЕ
		|	ИНАГРО_ТТНВывоз.Ссылка В(&МассивОбъектов)
		|	И ИНАГРО_ТТНВывоз.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыОперацийТТНВывоз.Вывоз)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Номенклатура,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Номенклатура.БазоваяЕдиницаИзмерения,
		|	0,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Вес,
		|	0,
		|	0,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Количество,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.ВидФасовки,
		|	ИНАГРО_ПриказНаВывозКультуры.Цена,
		|	ИНАГРО_ПриказНаВывозКультуры.Сумма * 1.2,
		|	ИНАГРО_ПриказНаВывозКультуры.Сумма * 0.2,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Ссылка
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывоз.СписокНоменклатуры КАК ИНАГРО_ТТНВывозСписокНоменклатуры
		|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ПриказНаВывоз.Культуры КАК ИНАГРО_ПриказНаВывозКультуры
		|		ПО ИНАГРО_ТТНВывозСписокНоменклатуры.Ссылка.ПриказНаВывоз = ИНАГРО_ПриказНаВывозКультуры.Ссылка
		|			И ИНАГРО_ТТНВывозСписокНоменклатуры.Номенклатура = ИНАГРО_ПриказНаВывозКультуры.Номенклатура
		|ГДЕ
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Ссылка В(&МассивОбъектов)
		|	И НЕ ИНАГРО_ТТНВывозСписокНоменклатуры.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыОперацийТТНВывоз.Вывоз)";
		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаШапка = МассивРезультатов[0].Выбрать();
	
	ВыборкаТЧ    =  МассивРезультатов[1].Выгрузить();
	
	Пока ВыборкаШапка.Следующий() Цикл
		
		КвоЭкземпляров = 3;
		СтруктураСохранения = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_ТТНВывоз_Ф1_ТН_2014");	
		Если СтруктураСохранения <> Неопределено Тогда
			КвоЭкземпляров = СтруктураСохранения.ВыбранноеКоличествоФ1_ТН_2014; 
		КонецЕсли;
		
		Ном = 1;		
		Пока Ном <= КвоЭкземпляров Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;
			
			// Запомним номер строки, с которой начали выводить текущий документ.
			НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			
			Лист1 = Макет.ПолучитьОбласть("Лист1");
			Лист2 = Макет.ПолучитьОбласть("Лист2");
			Лист3 = Макет.ПолучитьОбласть("Лист3");
			Строка = Макет.ПолучитьОбласть("Строка");
			ПустСтрока = Макет.ПолучитьОбласть("ПустСтрока");
			
			СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаШапка.Организация,,,,КодЯзыкаПечать);
			Лист1.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование + ?(СведенияОбОрганизации.ЮридическийАдрес = "","",", ") + СведенияОбОрганизации.ЮридическийАдрес;
			
			Лист1.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаШапка.Номер);
			
			ВремяНачалаДняПриОтгрузке = ИНАГРО_Элеватор.ПолучитьПараметрУчетаЭлеватора(ВыборкаШапка.Дата, "ВремяНачалаДняПриОтгрузке", 0);
			Если ВремяНачалаДняПриОтгрузке <> 0 Тогда
				Лист1.Параметры.ДатаДок = Формат(ВыборкаШапка.ВремяВыбытия, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
			Иначе	
				Лист1.Параметры.ДатаДок = Формат(ВыборкаШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
			КонецЕсли;
			Лист1.Параметры.Заказчик = ВыборкаШапка.Заказчик;
			Лист1.Параметры.ПунктНазначения = ВыборкаШапка.ПунктНазначения;
			Лист1.Параметры.Автопредприятие = ?(ЗначениеЗаполнено(ВыборкаШапка.Автопредприятие),ВыборкаШапка.Автопредприятие,ВыборкаШапка.Получатель);
			Лист1.Параметры.ВидПеревозки = ВыборкаШапка.ВидПеревозки;
			
			Если ЗначениеЗаполнено(ВыборкаШапка.НомерТранспорта) Тогда 
				Если ТипЗнч(ВыборкаШапка.НомерТранспорта) = Тип("Строка") Тогда
					Лист1.Параметры.МаркаГосНомер = ВыборкаШапка.НомерТранспорта;
				Иначе		
					Лист1.Параметры.МаркаГосНомер = ВыборкаШапка.НомерТранспортаМарка + " " + ВыборкаШапка.НомерТранспорта;
				КонецЕсли;
			КонецЕсли;
			
			Если ТипЗнч(ВыборкаШапка.Водитель) = Тип("Строка") Тогда
				Лист1.Параметры.Водитель = ВыборкаШапка.Водитель;	
				Лист1.Параметры.Водитель1 = ВыборкаШапка.Водитель;	
			ИначеЕсли НЕ ВыборкаШапка.Водитель = Неопределено Тогда
				Лист1.Параметры.Водитель = ВыборкаШапка.ВодительНаименование + " " + ?(ТипЗнч(ВыборкаШапка.Водитель) = Тип("СправочникСсылка.ИНАГРО_Водители") И ЗначениеЗаполнено(ВыборкаШапка.ВодительУдостоверение),ВыборкаШапка.ВодительУдостоверение,"") ;
				Лист1.Параметры.Водитель1 = ВыборкаШапка.ВодительНаименование + " " + ?(ТипЗнч(ВыборкаШапка.Водитель) = Тип("СправочникСсылка.ИНАГРО_Водители") И ЗначениеЗаполнено(ВыборкаШапка.ВодительУдостоверение),НСтр("ru='(водитель)';uk='(водій)'"),"") ;
			КонецЕсли;
			
			Лист1.Параметры.ПункНагрузки = СведенияОбОрганизации.ФактическийАдрес;
			
			Если ЗначениеЗаполнено(ВыборкаШапка.НомерПрицепа) Тогда 
				Если ТипЗнч(ВыборкаШапка.НомерПрицепа) = Тип("СправочникСсылка.ИНАГРО_ТранспортныеСредства") Тогда
					Лист1.Параметры.Прицеп = ВыборкаШапка.НомерПрицепаМарка + " " + ВыборкаШапка.НомерПрицепа;
				Иначе	
					Лист1.Параметры.Прицеп = ВыборкаШапка.НомерПрицепа;
				КонецЕсли; 
			КонецЕсли; 
			
			СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаШапка.получатель,,,,КодЯзыкаПечать);
			Лист1.Параметры.Получатель  = СведенияОбОрганизации.ПолноеНаименование + ?(СведенияОбОрганизации.ЮридическийАдрес = "","",", ") + СведенияОбОрганизации.ЮридическийАдрес;
			
			ДанныеСотрудника = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаШапка.Организация, ВыборкаШапка.Бухгалтер, ВыборкаШапка.Дата);
			Лист1.Параметры.Бухгалтер = ДанныеСотрудника.Представление; 
			ДанныеСотрудника = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаШапка.Организация, ВыборкаШапка.ОтпускРазрешил, ВыборкаШапка.Дата);
			Лист1.Параметры.ОтпускРазрешил = ДанныеСотрудника.Представление; 
			
			мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
			Если КодЯзыкаПечать = "uk" Тогда
				Лист1.Параметры.ВесБруттоПропись = ЧислоПрописью((ВыборкаШапка.ВесБрутто + ВыборкаШапка.ВесБрутто1)/1000,"Л=uk_UK;","тона,тони,тон,ж,кілограм,кілограма,кілограм,м,3");
				Лист1.Параметры.количествоМест = ЧислоПрописью(ВыборкаШапка.КоличествоМест,"Л = uk_UK;" ,",,,,,,,,0" );  
				ПрописьВалюты = мВалютаРегламентированногоУчета.ПараметрыПрописиНаУкраинском;
			Иначе
				Лист1.Параметры.ВесБруттоПропись = ЧислоПрописью((ВыборкаШапка.ВесБрутто + ВыборкаШапка.ВесБрутто1)/1000,"Л=ru_RU;","тонна,тонны,тонн,ж,килограмм,килограмма,килограмм,м,3");
				Лист1.Параметры.количествоМест = ЧислоПрописью(ВыборкаШапка.КоличествоМест,"Л = ru_RU;" ,",,,,,,,,0" );
				ПрописьВалюты = мВалютаРегламентированногоУчета.ПараметрыПрописиНаРусском;
			КонецЕсли;
			
			Лист1.Параметры.НомерПломбыАвтомобиля = ВыборкаШапка.НомерПломбыАвтомобиля;
			Лист1.Параметры.ДовСерия = ВыборкаШапка.ДоверенностьСерия;
			Лист1.Параметры.ДовНомер = ВыборкаШапка.ДоверенностьНомер;
			ДатаДоверенности = Формат(ВыборкаШапка.ДоверенностьДата,"ДЛФ=ДД;Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
			Лист1.Параметры.ДовЧерез = ВыборкаШапка.ДоверенностьЧерез;
			Если НЕ ВыборкаШапка.ДоверенностьДата = Дата(1, 1, 1) Тогда
				Лист1.Параметры.ДатаДоверенности = Лев(ДатаДоверенности,2);
				МесяцДов = Формат(ВыборкаШапка.ДоверенностьДата,"ДФ=ММММ;Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
				Лист1.Параметры.МесяцДоверенности = МесяцДов;
				ДатаДоверенности = Прав(ДатаДоверенности,5);
				Лист1.Параметры.ГодДоверенности = Лев(ДатаДоверенности,2);
			КонецЕсли;
			
			ВыборкаПоНоменклатуре = ВыборкаТЧ.Скопировать(Новый Структура("Ссылка",ВыборкаШапка.Ссылка));
			
			Лист1.Параметры.ИтогоСумма = ЧислоПрописью(Число(ВыборкаПоНоменклатуре.Итог("Сумма")),"Л=" + КодЯзыкаПечать + ";ДП=Ложь;", ПрописьВалюты);
			Лист1.Параметры.НДС = ЧислоПрописью(Число(ВыборкаПоНоменклатуре.Итог("НДС")),"Л=" + КодЯзыкаПечать + ";ДП=Ложь;", ПрописьВалюты);
			
			Лист3.Параметры.Весовщик = ВыборкаШапка.Весовщик;
			
			Если ТипЗнч(ВыборкаШапка.Водитель) = Тип("Строка") Тогда
				Лист3.Параметры.Водитель = ВыборкаШапка.Водитель;	
			ИначеЕсли НЕ ВыборкаШапка.Водитель = Неопределено Тогда
				Лист3.Параметры.Водитель = ВыборкаШапка.ВодительНаименование + " " + ?(ТипЗнч(ВыборкаШапка.Водитель) = Тип("СправочникСсылка.ИНАГРО_Водители") И ЗначениеЗаполнено(ВыборкаШапка.ВодительУдостоверение),НСтр("ru='(водитель)';uk='(водій)'"),"") ;
			КонецЕсли;
			
			Лист3.Параметры.ВремяЗаезда = ВыборкаШапка.ВремяПрибытия;
			Лист3.Параметры.ВремяВыезда = ВыборкаШапка.ВремяВыбытия;
			Лист3.Параметры.ВесБрутто = ВыборкаШапка.ВесБрутто;
			РазницаВВремени = ?(ВыборкаШапка.ВремяВыбытия > ВыборкаШапка.ВремяПрибытия, ВыборкаШапка.ВремяВыбытия - ВыборкаШапка.ВремяПрибытия,0);
			Часов = 0; Мин = 0; Сек = 0;
			Если РазницаВВремени > 60 Тогда
				МинДр = РазницаВВремени/60;
				Мин = Цел(МинДр);
				Сек = РазницаВВремени - (Мин*60); 
				Если Мин > 60 Тогда
					ЧасДр = Мин/60;
					Часов = Цел(ЧасДр);
					Мин = Мин - (Часов*60);
				КонецЕсли;
			Иначе
				Сек = РазницаВВремени;
			КонецЕсли;
			ЧасовС = Строка(Часов);
			Если СтрДлина(Строка(Мин)) = 2 Тогда
				МинС = Строка(Мин);
			Иначе
				МинС = "0"+Строка(Мин);
			КонецЕсли;	
			Если СтрДлина(Строка(Сек)) = 2 Тогда
				СекС = Строка(Сек);
			Иначе
				СекС = "0"+Строка(Сек);
			КонецЕсли;	
			
			Лист3.Параметры.РазницаВВремени = ЧасовС+":"+МинС+":"+СекС;
			
			ТабДокумент.Вывести(Лист1);
			ТабДокумент.Вывести(Лист2);
			КвоСтрочек = 0;
			ИтогВес = 0;
			ИтогСумма = 0;
			
			Для Каждого Стр Из ВыборкаПоНоменклатуре Цикл
				ЗаполнитьЗначенияСвойств(Строка.Параметры, Стр,,"ВесТары"); 
				Строка.Параметры.ВесБрутто = Формат(Стр.ВесБрутто/1000,"ЧЦ=14; ЧДЦ=3");
				Строка.Параметры.количествоМест = Стр.КоличествоМест;
				ТабДокумент.Вывести(Строка);
				ИтогВес = ИтогВес + Стр.ВесБрутто/1000;
				ИтогСумма = ИтогСумма + ?(ЗначениеЗаполнено(Стр.Сумма),Стр.Сумма,0);
				КвоСтрочек = КвоСтрочек + 1;	
			КонецЦикла; 
			
			Пока КвоСтрочек < 14 Цикл 
				ТабДокумент.Вывести(ПустСтрока);
				КвоСтрочек = КвоСтрочек + 1;
			КонецЦикла;
			
			Лист3.Параметры.ИтогВес = Формат(ИтогВес,"ЧЦ=14; ЧДЦ=3");
			Лист3.Параметры.ИтогСумма = Формат(ИтогСумма,"ЧЦ=14; ЧДЦ=2");
			ТабДокумент.Вывести(Лист3);
			
			Ном = Ном + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТабДокумент;
		
КонецФункции

Функция ПечатьФ1_ТН_2019(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ТТНВывоз_Ф1_ТН_2019";
	
	Макет = ПолучитьМакет("ПФ_MXL_Ф1_ТН_2019");
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_ТТНВывоз.Ссылка КАК Ссылка,
		|	ИНАГРО_ТТНВывоз.ВерсияДанных КАК ВерсияДанных,
		|	ИНАГРО_ТТНВывоз.ПометкаУдаления КАК ПометкаУдаления,
		|	ИНАГРО_ТТНВывоз.Номер КАК Номер,
		|	ИНАГРО_ТТНВывоз.Дата КАК Дата,
		|	ИНАГРО_ТТНВывоз.Проведен КАК Проведен,
		|	ИНАГРО_ТТНВывоз.Автопредприятие КАК Автопредприятие,
		|	ИНАГРО_ТТНВывоз.Бухгалтер КАК Бухгалтер,
		|	ИНАГРО_ТТНВывоз.Вес КАК Вес,
		|	ИНАГРО_ТТНВывоз.ВесБрутто КАК ВесБрутто,
		|	ИНАГРО_ТТНВывоз.ВесБрутто1 КАК ВесБрутто1,
		|	ИНАГРО_ТТНВывоз.ВесБрутто1Контроль КАК ВесБрутто1Контроль,
		|	ИНАГРО_ТТНВывоз.ВесБруттоКонтроль КАК ВесБруттоКонтроль,
		|	ИНАГРО_ТТНВывоз.ВесНетто КАК ВесНетто,
		|	ИНАГРО_ТТНВывоз.ВесНетто1 КАК ВесНетто1,
		|	ИНАГРО_ТТНВывоз.Весовщик КАК Весовщик,
		|	ИНАГРО_ТТНВывоз.ВесТары КАК ВесТары,
		|	ИНАГРО_ТТНВывоз.ВесТары1 КАК ВесТары1,
		|	ИНАГРО_ТТНВывоз.ВесТары1Контроль КАК ВесТары1Контроль,
		|	ИНАГРО_ТТНВывоз.ВесТарыКонтроль КАК ВесТарыКонтроль,
		|	ИНАГРО_ТТНВывоз.ВидЖурнала КАК ВидЖурнала,
		|	ИНАГРО_ТТНВывоз.ВидОперации КАК ВидОперации,
		|	ИНАГРО_ТТНВывоз.ВидПеревозки КАК ВидПеревозки,
		|	ИНАГРО_ТТНВывоз.ВидФасовки КАК ВидФасовки,
		|	ИНАГРО_ТТНВывоз.ВидХранения КАК ВидХранения,
		|	ИНАГРО_ТТНВывоз.Владелец КАК Владелец,
		|	ИНАГРО_ТТНВывоз.Влажность КАК Влажность,
		|	ИНАГРО_ТТНВывоз.Водитель КАК Водитель,
		|	ИНАГРО_ТТНВывоз.ВремяВыбытия КАК ВремяВыбытия,
		|	ИНАГРО_ТТНВывоз.ВремяПрибытия КАК ВремяПрибытия,
		|	ИНАГРО_ТТНВывоз.ДатаВыбытия КАК ДатаВыбытия,
		|	ИНАГРО_ТТНВывоз.ДатаПрибытия КАК ДатаПрибытия,
		|	ИНАГРО_ТТНВывоз.ДоверенностьДата КАК ДоверенностьДата,
		|	ИНАГРО_ТТНВывоз.ДоверенностьНомер КАК ДоверенностьНомер,
		|	ИНАГРО_ТТНВывоз.ДоверенностьСерия КАК ДоверенностьСерия,
		|	ИНАГРО_ТТНВывоз.ДоверенностьЧерез КАК ДоверенностьЧерез,
		|	ИНАГРО_ТТНВывоз.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_ТТНВывоз.ДоговорПолучателя КАК ДоговорПолучателя,
		|	ИНАГРО_ТТНВывоз.ДокументПодтверждающийПолномочия КАК ДокументПодтверждающийПолномочия,
		|	ИНАГРО_ТТНВывоз.ЕстьЛабораторныйАнализ КАК ЕстьЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывоз.Заказчик КАК Заказчик,
		|	ИНАГРО_ТТНВывоз.ЗачетныйВес КАК ЗачетныйВес,
		|	ИНАГРО_ТТНВывоз.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_ТТНВывоз.Качество КАК Качество,
		|	ИНАГРО_ТТНВывоз.Количество КАК Количество,
		|	ИНАГРО_ТТНВывоз.КоличествоМест КАК КоличествоМест,
		|	ИНАГРО_ТТНВывоз.Комментарий КАК Комментарий,
		|	ИНАГРО_ТТНВывоз.ЛабораторныйАнализ КАК ЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывоз.МестоНазначения КАК МестоНазначения,
		|	ИНАГРО_ТТНВывоз.МестоХранения КАК МестоХранения,
		|	ИНАГРО_ТТНВывоз.НеПереформировыватьАвтоматически КАК НеПереформировыватьАвтоматически,
		|	ИНАГРО_ТТНВывоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_ТТНВывоз.НомерАнализа КАК НомерАнализа,
		|	ИНАГРО_ТТНВывоз.НомерБланка КАК НомерБланка,
		|	ИНАГРО_ТТНВывоз.НомерЖурнала КАК НомерЖурнала,
		|	ИНАГРО_ТТНВывоз.НомерНакладной КАК НомерНакладной,
		|	ИНАГРО_ТТНВывоз.НомерПломбыАвтомобиля КАК НомерПломбыАвтомобиля,
		|	ИНАГРО_ТТНВывоз.НомерПломбыПрицепа КАК НомерПломбыПрицепа,
		|	ИНАГРО_ТТНВывоз.НомерПрицепа КАК НомерПрицепа,
		|	ИНАГРО_ТТНВывоз.НомерПропуска КАК НомерПропуска,
		|	ИНАГРО_ТТНВывоз.НомерТранспорта КАК НомерТранспорта,
		|	ИНАГРО_ТТНВывоз.ОписаниеДвиженияФормы36 КАК ОписаниеДвиженияФормы36,
		|	ИНАГРО_ТТНВывоз.Организация КАК Организация,
		|	ИНАГРО_ТТНВывоз.Ответственный КАК Ответственный,
		|	ИНАГРО_ТТНВывоз.ОтпускРазрешил КАК ОтпускРазрешил,
		|	ИНАГРО_ТТНВывоз.ОтражатьВБухгалтерскомУчете КАК ОтражатьВБухгалтерскомУчете,
		|	ИНАГРО_ТТНВывоз.Получатель КАК Получатель,
		|	ИНАГРО_ТТНВывоз.ПолучилПоДругомуДокументу КАК ПолучилПоДругомуДокументу,
		|	ИНАГРО_ТТНВывоз.ПриказДата КАК ПриказДата,
		|	ИНАГРО_ТТНВывоз.ПриказНаВывоз КАК ПриказНаВывоз,
		|	ИНАГРО_ТТНВывоз.ПриказНомер КАК ПриказНомер,
		|	ИНАГРО_ТТНВывоз.Прицеп КАК Прицеп,
		|	ИНАГРО_ТТНВывоз.ПунктНазначения КАК ПунктНазначения,
		|	ИНАГРО_ТТНВывоз.Рецепт КАК Рецепт,
		|	ИНАГРО_ТТНВывоз.Силос КАК Силос,
		|	ИНАГРО_ТТНВывоз.Склад КАК Склад,
		|	ИНАГРО_ТТНВывоз.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_ТТНВывоз.ТипЖурнала КАК ТипЖурнала,
		|	ИНАГРО_ТТНВывоз.Транспорт КАК Транспорт,
		|	ИНАГРО_ТТНВывоз.Урожай КАК Урожай,
		|	ИНАГРО_ТТНВывоз.Водитель.Наименование КАК ВодительНаименование,
		|	ИНАГРО_ТТНВывоз.Водитель.Удостоверение КАК ВодительУдостоверение,
		|	ИНАГРО_ТТНВывоз.НомерПрицепа.Марка КАК НомерПрицепаМарка,
		|	ИНАГРО_ТТНВывоз.НомерТранспорта.Марка КАК НомерТранспортаМарка,
		|	ИНАГРО_ТТНВывоз.Организация.ОсновнойБанковскийСчет КАК БанковскийСчет
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывоз КАК ИНАГРО_ТТНВывоз
		|ГДЕ
		|	ИНАГРО_ТТНВывоз.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_ТТНВывоз.Номенклатура КАК Номенклатура,
		|	ИНАГРО_ТТНВывоз.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ТТНВывоз.Вес КАК Вес,
		|	ИНАГРО_ТТНВывоз.ВесБрутто + ИНАГРО_ТТНВывоз.ВесБрутто1 КАК ВесБрутто,
		|	ИНАГРО_ТТНВывоз.ВесНетто + ИНАГРО_ТТНВывоз.ВесНетто1 КАК ВесНетто,
		|	ИНАГРО_ТТНВывоз.ВесТары + ИНАГРО_ТТНВывоз.ВесТары1 КАК ВесТары,
		|	ИНАГРО_ТТНВывоз.КоличествоМест КАК КоличествоМест,
		|	ИНАГРО_ПриказНаВывозКультуры.Фасовка КАК ВидФасовки,
		|	ИНАГРО_ПриказНаВывозКультуры.Цена КАК Цена,
		|	ИНАГРО_ПриказНаВывозКультуры.Сумма * 1.2 КАК Сумма,
		|	ИНАГРО_ПриказНаВывозКультуры.Сумма * 0.2 КАК НДС,
		|	ИНАГРО_ТТНВывоз.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывоз КАК ИНАГРО_ТТНВывоз
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ПриказНаВывоз.Культуры КАК ИНАГРО_ПриказНаВывозКультуры
		|		ПО ИНАГРО_ТТНВывоз.ПриказНаВывоз = ИНАГРО_ПриказНаВывозКультуры.Ссылка
		|			И ИНАГРО_ТТНВывоз.Номенклатура = ИНАГРО_ПриказНаВывозКультуры.Номенклатура
		|ГДЕ
		|	ИНАГРО_ТТНВывоз.Ссылка В(&МассивОбъектов)
		|	И ИНАГРО_ТТНВывоз.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыОперацийТТНВывоз.Вывоз)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Номенклатура,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Номенклатура.БазоваяЕдиницаИзмерения,
		|	0,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Вес,
		|	0,
		|	0,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Количество,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.ВидФасовки,
		|	ИНАГРО_ПриказНаВывозКультуры.Цена,
		|	ИНАГРО_ПриказНаВывозКультуры.Сумма * 1.2,
		|	ИНАГРО_ПриказНаВывозКультуры.Сумма * 0.2,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Ссылка
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывоз.СписокНоменклатуры КАК ИНАГРО_ТТНВывозСписокНоменклатуры
		|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ПриказНаВывоз.Культуры КАК ИНАГРО_ПриказНаВывозКультуры
		|		ПО ИНАГРО_ТТНВывозСписокНоменклатуры.Ссылка.ПриказНаВывоз = ИНАГРО_ПриказНаВывозКультуры.Ссылка
		|			И ИНАГРО_ТТНВывозСписокНоменклатуры.Номенклатура = ИНАГРО_ПриказНаВывозКультуры.Номенклатура
		|ГДЕ
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Ссылка В(&МассивОбъектов)
		|	И НЕ ИНАГРО_ТТНВывозСписокНоменклатуры.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыОперацийТТНВывоз.Вывоз)";
		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаШапка = МассивРезультатов[0].Выбрать();
	
	ВыборкаТЧ    =  МассивРезультатов[1].Выгрузить();
	
	Пока ВыборкаШапка.Следующий() Цикл
		
		КвоЭкземпляров = 3;
		СтруктураСохранения = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_ТТНВывоз_Ф1_ТН_2019");	
		Если СтруктураСохранения <> Неопределено Тогда
			КвоЭкземпляров = СтруктураСохранения.ВыбранноеКоличествоФ1_ТН_2019; 
		КонецЕсли;
		
		Ном = 1;		
		Пока Ном <= КвоЭкземпляров Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;
			
			// Запомним номер строки, с которой начали выводить текущий документ.
			НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			
			Шапка = Макет.ПолучитьОбласть("Шапка");
			ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ПогрузочныеОперации = Макет.ПолучитьОбласть("ПогрузочныеОперации");
			Всего = Макет.ПолучитьОбласть("Всего");
			Подписи = Макет.ПолучитьОбласть("Подписи");
			Строка = Макет.ПолучитьОбласть("Строка");
			ПустСтрока = Макет.ПолучитьОбласть("ПустСтрока");
			
			СведенияОбОрганизации		= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаШапка.Организация,,,,КодЯзыкаПечать);
			СведенияОЗаказчике			= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаШапка.Заказчик,    ВыборкаШапка.Дата,,,КодЯзыкаПечать);
			СведенияОГрузополучателе  	= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаШапка.Получатель,  ВыборкаШапка.Дата,,,КодЯзыкаПечать);
			СведенияОГрузоотправитель 	= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаШапка.Организация, ВыборкаШапка.Дата,,ВыборкаШапка.БанковскийСчет,КодЯзыкаПечать);
			Шапка.Параметры.ГрузоотправительПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузоотправитель, "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
			Шапка.Параметры.ГрузополучательПредставление  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГрузополучателе,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
			Шапка.Параметры.ПлательщикПредставление       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОЗаказчике,  "ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО,КодПоЕДРПОУ,",, КодЯзыкаПечать);
			
			//СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаШапка.Организация,,,,КодЯзыкаПечать);
			//Шапка.Параметры.ГрузоотправительПредставление = СведенияОбОрганизации.ПолноеНаименование + ?(СведенияОбОрганизации.ЮридическийАдрес = "","",", ") 
			//											+ СведенияОбОрганизации.ЮридическийАдрес + ?(СведенияОбОрганизации.ИНН = "", "", НСтр("ru = ', ИНН: ';uk =', ІПН: '",КодЯзыкаПечать) + СведенияОбОрганизации.ИНН) +  ?(СведенияОбОрганизации.НомерСчета = "","", НСтр("ru = ', т/с: ';uk =', п/р: '",КодЯзыкаПечать) 	
			//											+ СведенияОбОрганизации.НомерСчета) + ?(СведенияОбОрганизации.Банк = "","", НСтр("ru = ', в банке: ';uk =', у банку: '",КодЯзыкаПечать) + СведенияОбОрганизации.Банк) + ?(СведенияОбОрганизации.МФО = "","",НСтр("ru = ', МФО: ';uk =', МФО: '",КодЯзыкаПечать) + СведенияОбОрганизации.МФО);
															
			Шапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаШапка.Номер);
			
			ВремяНачалаДняПриОтгрузке = ИНАГРО_Элеватор.ПолучитьПараметрУчетаЭлеватора(ВыборкаШапка.Дата, "ВремяНачалаДняПриОтгрузке", 0);
			Если ВремяНачалаДняПриОтгрузке <> 0 Тогда
				Шапка.Параметры.ДатаДокумента = Формат(ВыборкаШапка.ВремяВыбытия, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
			Иначе	
				Шапка.Параметры.ДатаДокумента = Формат(ВыборкаШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
			КонецЕсли;
			
			//Шапка.Параметры.ПлательщикПредставление = ?(ВыборкаШапка.Заказчик.ИНН = "", ВыборкаШапка.Заказчик, СтрШаблон(НСтр("ru = '%1, ИНН: %2';uk ='%1, ІПН: %2'",КодЯзыкаПечать),ВыборкаШапка.Заказчик,ВыборкаШапка.Заказчик.ИНН));
			Шапка.Параметры.ПунктРазгрузки = ВыборкаШапка.ПунктНазначения;
			Шапка.Параметры.ОрганизацияПеревозчик = ?(ЗначениеЗаполнено(ВыборкаШапка.Автопредприятие),ВыборкаШапка.Автопредприятие,ВыборкаШапка.Получатель);
			Шапка.Параметры.ВидПеревозки = ВыборкаШапка.ВидПеревозки;
			
			Если ЗначениеЗаполнено(ВыборкаШапка.НомерТранспорта) Тогда 
				Если ТипЗнч(ВыборкаШапка.НомерТранспорта) = Тип("Строка") Тогда
					Шапка.Параметры.МаркаИГосНомерАвтомобиля = ВыборкаШапка.НомерТранспорта;
				Иначе		
					Шапка.Параметры.МаркаИГосНомерАвтомобиля = ВыборкаШапка.НомерТранспортаМарка + " " + ВыборкаШапка.НомерТранспорта;
				КонецЕсли;
			КонецЕсли;
			
			Если ТипЗнч(ВыборкаШапка.Водитель) = Тип("Строка") Тогда
				Шапка.Параметры.ФИОВодителя = ВыборкаШапка.Водитель;	
				Шапка.Параметры.ФИОВодителя1 = ВыборкаШапка.Водитель;	
			ИначеЕсли НЕ ВыборкаШапка.Водитель = Неопределено Тогда
				Шапка.Параметры.ФИОВодителя = ВыборкаШапка.ВодительНаименование + " " + ?(ТипЗнч(ВыборкаШапка.Водитель) = Тип("СправочникСсылка.ИНАГРО_Водители") И ЗначениеЗаполнено(ВыборкаШапка.ВодительУдостоверение),ВыборкаШапка.ВодительУдостоверение,"") ;
				Шапка.Параметры.ФИОВодителя1 = ВыборкаШапка.ВодительНаименование + " " + ?(ТипЗнч(ВыборкаШапка.Водитель) = Тип("СправочникСсылка.ИНАГРО_Водители") И ЗначениеЗаполнено(ВыборкаШапка.ВодительУдостоверение),НСтр("ru='(водитель)';uk='(водій)'"),"") ;
			КонецЕсли;
			
			Шапка.Параметры.ПунктПогрузки = СведенияОбОрганизации.ФактическийАдрес;
			
			Если ЗначениеЗаполнено(ВыборкаШапка.НомерПрицепа) Тогда 
				Если ТипЗнч(ВыборкаШапка.НомерПрицепа) = Тип("СправочникСсылка.ИНАГРО_ТранспортныеСредства") Тогда
					Шапка.Параметры.ГосНомерПрицепа = ВыборкаШапка.НомерПрицепаМарка + " " + ВыборкаШапка.НомерПрицепа;
				Иначе	
					Шапка.Параметры.ГосНомерПрицепа = ВыборкаШапка.НомерПрицепа;
				КонецЕсли; 
			КонецЕсли; 
			
			//СведенияОГрузополучателе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаШапка.получатель,,,,КодЯзыкаПечать);
			//Шапка.Параметры.ГрузополучательПредставление  = ?(ВыборкаШапка.Получатель.ИНН = "", ВыборкаШапка.Получатель, СтрШаблон(НСтр("ru = '%1, ИНН: %2';uk ='%1, ІПН: %2'",КодЯзыкаПечать),ВыборкаШапка.Получатель,ВыборкаШапка.Получатель.ИНН));
			
			мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
			Если КодЯзыкаПечать = "uk" Тогда
				Шапка.Параметры.ИтогоМасса = ЧислоПрописью((ВыборкаШапка.ВесБрутто + ВыборкаШапка.ВесБрутто1)/1000,"Л=uk_UK;","тона,тони,тон,ж,кілограм,кілограма,кілограм,м,3");
				Шапка.Параметры.КоличествоМестПрописью = ЧислоПрописью(ВыборкаШапка.КоличествоМест,"Л = uk_UK;" ,",,,,,,,,0" );  
				ПрописьВалюты = мВалютаРегламентированногоУчета.ПараметрыПрописиНаУкраинском;
			Иначе
				Шапка.Параметры.ИтогоМасса = ЧислоПрописью((ВыборкаШапка.ВесБрутто + ВыборкаШапка.ВесБрутто1)/1000,"Л=ru_RU;","тонна,тонны,тонн,ж,килограмм,килограмма,килограмм,м,3");
				Шапка.Параметры.КоличествоМестПрописью = ЧислоПрописью(ВыборкаШапка.КоличествоМест,"Л = ru_RU;" ,",,,,,,,,0" );
				ПрописьВалюты = мВалютаРегламентированногоУчета.ПараметрыПрописиНаРусском;
			КонецЕсли;
						
			ВыборкаПоНоменклатуре = ВыборкаТЧ.Скопировать(Новый Структура("Ссылка",ВыборкаШапка.Ссылка));
			
			Шапка.Параметры.ОтпущеноНаСуммуПрописью = ЧислоПрописью(Число(ВыборкаПоНоменклатуре.Итог("Сумма")),"Л=" + КодЯзыкаПечать + ";ДП=Ложь;", ПрописьВалюты);
			Шапка.Параметры.СуммаНДС = ЧислоПрописью(Число(ВыборкаПоНоменклатуре.Итог("НДС")),"Л=" + КодЯзыкаПечать + ";ДП=Ложь;", ПрописьВалюты);
			
			Подписи.Параметры.Весовщик = ВыборкаШапка.Весовщик;
			
			Если ТипЗнч(ВыборкаШапка.Водитель) = Тип("Строка") Тогда
				Подписи.Параметры.ФИОВодителя = ВыборкаШапка.Водитель;	
			ИначеЕсли НЕ ВыборкаШапка.Водитель = Неопределено Тогда
				Подписи.Параметры.ФИОВодителя = ВыборкаШапка.ВодительНаименование + " " + ?(ТипЗнч(ВыборкаШапка.Водитель) = Тип("СправочникСсылка.ИНАГРО_Водители") И ЗначениеЗаполнено(ВыборкаШапка.ВодительУдостоверение),НСтр("ru='(водитель)';uk='(водій)'"),"") ;
			КонецЕсли;
			
			ПогрузочныеОперации.Параметры.ВремяЗаезда = ВыборкаШапка.ВремяПрибытия;
			ПогрузочныеОперации.Параметры.ВремяВыезда = ВыборкаШапка.ВремяВыбытия;
			ПогрузочныеОперации.Параметры.ВесБрутто = ВыборкаШапка.ВесБрутто;
			РазницаВВремени = ?(ВыборкаШапка.ВремяВыбытия > ВыборкаШапка.ВремяПрибытия, ВыборкаШапка.ВремяВыбытия - ВыборкаШапка.ВремяПрибытия,0);
			Часов = 0; Мин = 0; Сек = 0;
			Если РазницаВВремени > 60 Тогда
				МинДр = РазницаВВремени/60;
				Мин = Цел(МинДр);
				Сек = РазницаВВремени - (Мин*60); 
				Если Мин > 60 Тогда
					ЧасДр = Мин/60;
					Часов = Цел(ЧасДр);
					Мин = Мин - (Часов*60);
				КонецЕсли;
			Иначе
				Сек = РазницаВВремени;
			КонецЕсли;
			ЧасовС = Строка(Часов);
			Если СтрДлина(Строка(Мин)) = 2 Тогда
				МинС = Строка(Мин);
			Иначе
				МинС = "0"+Строка(Мин);
			КонецЕсли;	
			Если СтрДлина(Строка(Сек)) = 2 Тогда
				СекС = Строка(Сек);
			Иначе
				СекС = "0"+Строка(Сек);
			КонецЕсли;	
			
			ПогрузочныеОперации.Параметры.РазницаВВремени = ЧасовС+":"+МинС+":"+СекС;
			
			ТабДокумент.Вывести(Шапка);
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			КвоСтрочек = 0;
			ИтогВес = 0;
			ИтогСумма = 0;
			ИтогоКоличество = 0;
			
			Для Каждого Стр Из ВыборкаПоНоменклатуре Цикл
				
				КвоСтрочек = КвоСтрочек + 1;
				Строка.Параметры.НомерСтроки = КвоСтрочек;
				Строка.Параметры.ТоварНаименование = Стр.Номенклатура;
				Строка.Параметры.БазоваяЕдиницаНаименование = Стр.ЕдиницаИзмерения;
				Строка.Параметры.Количество = Стр.КоличествоМест;
				Строка.Параметры.Цена = ?(ЗначениеЗаполнено(Стр.Цена),Стр.Цена,0);
				Строка.Параметры.Сумма = ?(ЗначениеЗаполнено(Стр.Сумма),Стр.Сумма,0);
				Строка.Параметры.ВидУпаковки = Стр.ВидФасовки;
				Строка.Параметры.Масса = Формат(Стр.ВесБрутто/1000,"ЧЦ=14; ЧДЦ=3");
				
				ТабДокумент.Вывести(Строка);
				
				ИтогВес = ИтогВес + Стр.ВесБрутто/1000;
				ИтогоКоличество = ИтогоКоличество + Стр.КоличествоМест;
				ИтогСумма = ИтогСумма + ?(ЗначениеЗаполнено(Стр.Сумма),Стр.Сумма,0);
					
			КонецЦикла; 
			
			Пока КвоСтрочек < 14 Цикл 
				ТабДокумент.Вывести(ПустСтрока);
				КвоСтрочек = КвоСтрочек + 1;
			КонецЦикла;
			
			Всего.Параметры.ИтогоМасса = Формат(ИтогВес,"ЧЦ=14; ЧДЦ=3");
			Всего.Параметры.ИтогоКоличество = ИтогоКоличество;
			Всего.Параметры.ИтогоСуммаСНДС = Формат(ИтогСумма,"ЧЦ=14; ЧДЦ=2");

			ТабДокумент.Вывести(Всего);
			ТабДокумент.Вывести(Подписи);
			ТабДокумент.Вывести(ПогрузочныеОперации);
			
			Ном = Ном + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТабДокумент;

		
КонецФункции

Функция ПечатьПропускФ196(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ТТНВывоз_Пропуск";
	
	Макет = ПолучитьОбщийМакет("ИНАГРО_ПФ_MXL_Пропуск_Ф196");
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_ТТНВывоз.Ссылка,
		|	ИНАГРО_ТТНВывоз.ВерсияДанных,
		|	ИНАГРО_ТТНВывоз.ПометкаУдаления,
		|	ИНАГРО_ТТНВывоз.Номер,
		|	ИНАГРО_ТТНВывоз.Дата,
		|	ИНАГРО_ТТНВывоз.Проведен,
		|	ИНАГРО_ТТНВывоз.Вес,
		|	ИНАГРО_ТТНВывоз.ВесБрутто,
		|	ИНАГРО_ТТНВывоз.ВесНетто,
		|	ИНАГРО_ТТНВывоз.Весовщик,
		|	ИНАГРО_ТТНВывоз.ВесТары,
		|	ИНАГРО_ТТНВывоз.ВидЖурнала,
		|	ИНАГРО_ТТНВывоз.ВидХранения,
		|	ИНАГРО_ТТНВывоз.Владелец,
		|	ИНАГРО_ТТНВывоз.Влажность,
		|	ИНАГРО_ТТНВывоз.ВремяВыбытия,
		|	ИНАГРО_ТТНВывоз.ВремяПрибытия,
		|	ИНАГРО_ТТНВывоз.ДоговорКонтрагента,
		|	ИНАГРО_ТТНВывоз.ЗачетныйВес,
		|	ИНАГРО_ТТНВывоз.ЗерноваяПримесь,
		|	ИНАГРО_ТТНВывоз.Комментарий,
		|	ИНАГРО_ТТНВывоз.ЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывоз.МестоХранения,
		|	ИНАГРО_ТТНВывоз.Номенклатура,
		|	ИНАГРО_ТТНВывоз.НомерАнализа,
		|	ИНАГРО_ТТНВывоз.НомерЖурнала,
		|	ИНАГРО_ТТНВывоз.НомерНакладной,
		|	ИНАГРО_ТТНВывоз.ОписаниеДвиженияФормы36,
		|	ИНАГРО_ТТНВывоз.Организация,
		|	ИНАГРО_ТТНВывоз.Ответственный,
		|	ИНАГРО_ТТНВывоз.ПриказНаВывоз,
		|	ИНАГРО_ТТНВывоз.Склад,
		|	ИНАГРО_ТТНВывоз.СорнаяПримесь,
		|	ИНАГРО_ТТНВывоз.ТипЖурнала,
		|	ИНАГРО_ТТНВывоз.Транспорт,
		|	ИНАГРО_ТТНВывоз.Урожай,
		|	ИНАГРО_ТТНВывоз.Представление,
		|	ИНАГРО_ТТНВывоз.МоментВремени,
		|	ИНАГРО_ТТНВывоз.Организация.НаименованиеПолное,
		|	ИНАГРО_ТТНВывоз.Организация.Наименование,
		|	ИНАГРО_ТТНВывоз.Владелец.Наименование,
		|	ИНАГРО_ТТНВывоз.ПриказНаВывоз.Номер,
		|	ИНАГРО_ТТНВывоз.ПриказНаВывоз.Дата,
		|	ИНАГРО_ТТНВывоз.ПриказНаВывоз.ДоверенностьДата,
		|	ИНАГРО_ТТНВывоз.ПриказНаВывоз.ДоверенностьНомер,
		|	ИНАГРО_ТТНВывоз.ПриказНаВывоз.ДоверенностьСерия,
		|	ИНАГРО_ТТНВывоз.ПриказНаВывоз.ДоверенностьЧерез,
		|	ИНАГРО_ТТНВывоз.НомерПрицепа,
		|	ИНАГРО_ТТНВывоз.НомерТранспорта,
		|	ИНАГРО_ТТНВывоз.ДоверенностьДата,
		|	ИНАГРО_ТТНВывоз.ДоверенностьНомер,
		|	ИНАГРО_ТТНВывоз.ДоверенностьСерия,
		|	ИНАГРО_ТТНВывоз.ДоверенностьЧерез,
		|	ИНАГРО_ТТНВывоз.ВидОперации,
		|	ИНАГРО_ТТНВывоз.КоличествоМест
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывоз КАК ИНАГРО_ТТНВывоз
		|ГДЕ
		|	ИНАГРО_ТТНВывоз.Ссылка В(&МассивОбъектов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Ссылка,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.НомерСтроки,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Вес,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.ВидФасовки,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Влажность,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.ЗерноваяПримесь,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Количество,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.ЛабораторныйАнализ,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Номенклатура,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.СорнаяПримесь,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.СчетУчетаБУ,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.НомерАнализа,
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Урожай
		|ИЗ
		|	Документ.ИНАГРО_ТТНВывоз.СписокНоменклатуры КАК ИНАГРО_ТТНВывозСписокНоменклатуры
		|ГДЕ
		|	ИНАГРО_ТТНВывозСписокНоменклатуры.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Выборка   = МассивРезультатов[0].Выбрать();
	
	ВыборкаТЧ =  МассивРезультатов[1].Выгрузить();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		КвоЭкземпляров = 2;
		СтруктураСохранения = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_ТТНВывоз_Пропуск");	
		Если СтруктураСохранения <> Неопределено Тогда
			КвоЭкземпляров = СтруктураСохранения.ВыбранноеКоличествоПропуск; 
		КонецЕсли;
		
		Если КвоЭкземпляров > 1 Тогда
			КвоЭкземпляровНаСтраницу = 2;
			КвоЭкземпляровПоделенноеНаДва = Окр(КвоЭкземпляров/2,0);
		Иначе 
			КвоЭкземпляровНаСтраницу = 1;
			КвоЭкземпляровПоделенноеНаДва = 1;
		КонецЕсли; 
		
		КоличествоНапечатанныхЭкземпляров = 0;
		НомерЭкземпляраДелНаДва = 1;
		Пока НомерЭкземпляраДелНаДва <= КвоЭкземпляровПоделенноеНаДва Цикл
			
			ОблОбщая = Макет.ПолучитьОбласть("Общая|Лист");
			
			ОблШапка = Макет.ПолучитьОбласть("Шапка|Лист");
			
			ОблШапка.Параметры.Организация = Выборка.ОрганизацияНаименование;
			
			СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация,,,,КодЯзыкаПечать);
			ОблШапка.Параметры.ЕДРПУ = СведенияОбОрганизации.КодПоЕДРПОУ;
			
			ОблШапка.Параметры.НомерДок = Выборка.Номер;
			
			Если ЗначениеЗаполнено(Выборка.НомерПрицепа) Тогда
				ОблШапка.Параметры.ВодительАвтомобиль = Нстр("ru='автомобиля № ';uk='автомобілю № '") + Строка(Выборка.НомерТранспорта) + " прицепу № " + Строка(Выборка.НомерПрицепа);
			Иначе
				ОблШапка.Параметры.ВодительАвтомобиль = Нстр("ru='автомобиля № ';uk='автомобілю № '") + Строка(Выборка.НомерТранспорта);
			КонецЕсли;	
			
			ВремяНачалаДня = ИНАГРО_Элеватор.ПолучитьПараметрУчетаЭлеватора(Выборка.Дата, "ВремяНачалаДня", 0);
			Если ВремяНачалаДня > 0 Тогда
				ОблШапка.Параметры.ДатаДок = Формат(Выборка.ВремяВыбытия, "ДФ='дд ММММ гггг р.';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать)) + "  " + Формат(ТекущаяДата(), "ДФ='H:мм:сс'");
			Иначе	
				ОблШапка.Параметры.ДатаДок = Формат(Выборка.Дата, "ДФ='дд ММММ гггг р.';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать)) + "  " + Формат(ТекущаяДата(), "ДФ='H:мм:сс'");
			КонецЕсли;
			
			ОблШапка.Параметры.ЧерезКого = Выборка.ДоверенностьЧерез;
			ОблШапка.Параметры.Кому = Выборка.ВладелецНаименование;
			ОблШапка.Параметры.Довереность = Нстр("ru='серия ';uk='серія '") + Выборка.ДоверенностьСерия + " № " + Выборка.ДоверенностьНомер + Нстр("ru=' от ';uk=' від '") + Формат(Выборка.ДоверенностьДата, "ДФ='дд.ММ.гггг р.'");
			
			Если ЗначениеЗаполнено(Выборка.ПриказНаВывоз) Тогда
				ОблШапка.Параметры.НомНаказу = Выборка.ПриказНаВывозНомер;
				ОблШапка.Параметры.ДатаПриказа = Формат(Выборка.ПриказНаВывозДата, "ДФ='дд.ММ.гггг р.'");
			КонецЕсли;
			
			Если Выборка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийТТНВывоз.ВывозФасованного Тогда
				ВывестиОбластьПропуска(ТабДокумент, ОблШапка, КвоЭкземпляровНаСтраницу,КоличествоНапечатанныхЭкземпляров,КвоЭкземпляров);
			КонецЕсли;
			
			ОблСтрока = Макет.ПолучитьОбласть("Строка|Лист");
			
			Если Выборка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийТТНВывоз.ВывозФасованного Тогда
				
				СписокНоменклатуры = ВыборкаТЧ.Скопировать(Новый Структура("Ссылка",Выборка.Ссылка));
				
				Для Каждого СтрокаТЧ Из СписокНоменклатуры Цикл
					
					ОблСтрока.Параметры.Ном				= СтрокаТЧ.НомерСтроки;
					ОблСтрока.Параметры.Номенклатура	= СтрокаТЧ.Номенклатура;	
					ОблСтрока.Параметры.Вес				= СтрокаТЧ.Вес;
					ОблСтрока.Параметры.КвоМест         = СтрокаТЧ.Количество;
					ВывестиОбластьПропуска(ТабДокумент, ОблСтрока, КвоЭкземпляровНаСтраницу,КоличествоНапечатанныхЭкземпляров,КвоЭкземпляров);
					
				КонецЦикла;
				
			Иначе
				ОблСтрока.Параметры.Ном				= 1;
				ОблСтрока.Параметры.Номенклатура	= Выборка.Номенклатура;	
				ОблСтрока.Параметры.Вес				= Выборка.Вес;	
				ОблСтрока.Параметры.КвоМест         = Выборка.КоличествоМест;
			КонецЕсли;
			
			ОблДно = Макет.ПолучитьОбласть("Дно|Лист");
			ОблДно.Параметры.ВесПрописью = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать, Выборка.Вес);
			
			ДанныеОтветственногоЛица = Неопределено;
			МОЛФизическоеЛицо = ИНАГРО_Элеватор.ОтветственныеЛица(Выборка.Организация, Выборка.Дата, Выборка.Склад, ДанныеОтветственногоЛица);
			Если ЗначениеЗаполнено(ДанныеОтветственногоЛица) Тогда
				ОблДно.Параметры.ЗавСкладом = ДанныеОтветственногоЛица.ФИО;
			Иначе
				ОблДно.Параметры.ЗавСкладом = МОЛФизическоеЛицо;
			КонецЕсли;
			
			Если Выборка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийТТНВывоз.ВывозФасованного Тогда
				ВывестиОбластьПропуска(ТабДокумент, ОблДно, КвоЭкземпляровНаСтраницу,КоличествоНапечатанныхЭкземпляров,КвоЭкземпляров);
			Иначе		
				ЗаполнитьЗначенияСвойств(ОблОбщая.Параметры, ОблШапка.Параметры);
				ЗаполнитьЗначенияСвойств(ОблОбщая.Параметры, ОблСтрока.Параметры);
				ЗаполнитьЗначенияСвойств(ОблОбщая.Параметры, ОблДно.Параметры);
				ВывестиОбластьПропуска(ТабДокумент, ОблОбщая, КвоЭкземпляровНаСтраницу,КоличествоНапечатанныхЭкземпляров,КвоЭкземпляров);
			КонецЕсли; 
			
			НомерЭкземпляраДелНаДва = НомерЭкземпляраДелНаДва + 1;
			КоличествоНапечатанныхЭкземпляров = КоличествоНапечатанныхЭкземпляров + 2;
			
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Процедура ВывестиОбластьПропуска(ТабДокумент, Область, КвоЭкземпляровНаСтраницу, КоличествоНапечатанныхЭкземпляров, КвоЭкземпляров)
	
	Ном = 1;
	ОсталосьНапечатать = КвоЭкземпляров - КоличествоНапечатанныхЭкземпляров; 
	
	КвоЭкз = Мин(ОсталосьНапечатать,КвоЭкземпляровНаСтраницу);
	
	Пока Ном <= КвоЭкз Цикл
		Если (Цел(Ном/КвоЭкз) - Ном/КвоЭкз) <> 0 ИЛИ Ном = 1 Тогда
			ТабДокумент.Вывести(Область);
		Иначе 
			ТабДокумент.Присоединить(Область);
		КонецЕсли;				
		Ном = Ном + 1;
	КонецЦикла;	
		
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область ПрограммныйИнтерфейс

// Заполняет счета учета номенклатуры в табличной части документа
//
// Параметры:
// Объект - СправочникСсылка - объект контактной информации
// ИмяТабличнойЧасти - имя табличной части
// СобственноеПодразделение - собственное подразделение.
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти, СобственноеПодразделение) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад, ОтражатьВБухгалтерскомУчете");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	ДанныеОбъекта.Вставить("СобственноеПодразделение", СобственноеПодразделение);

	СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
		Объект.Номенклатура, ДанныеОбъекта);
	
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре);
	КонецЦикла;

КонецПроцедуры

// Заполняет сведения о номенклатуре в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - Строка - строка табличной части документа
//  СведенияОНоменклатуре - Структура - структура сведений о номенклатуре, либо структура счетов учета.
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре) Экспорт
	
	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчетаБУ") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;

	Если ДанныеОбъекта.ОтражатьВБухгалтерскомУчете Тогда
		
		Если ДанныеОбъекта.СобственноеПодразделение Тогда
			СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаБУ;				
		Иначе
			СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаДоп;				
		КонецЕсли;	
		
	Иначе
		
		СтрокаТабличнойЧасти.СчетУчетаБУ         = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;

	ВидОперации = Неопределено; 

	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидОперации");
	КонецЕсли;

	// Если документ копируется, то вид формы получаем из копируемого документа.
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначениеКопирования")
			И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Параметры.ЗначениеКопирования, "ВидОперации");
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
			Если Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда
				ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	СтандартнаяОбработка = Ложь;
	ФормыИНАГРО_ТТНВывоз = ПолучитьСоответствиеВидовОперацийФормам();
	ВыбраннаяФорма = ФормыИНАГРО_ТТНВывоз[ВидОперации];
	Если ВыбраннаяФорма = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСоответствиеВидовОперацийФормам() Экспорт

	ФормыИНАГРО_ТТНВывоз = Новый Соответствие;
	
	ФормыИНАГРО_ТТНВывоз.Вставить(Перечисления.ИНАГРО_ВидыОперацийТТНВывоз.Вывоз,            "ФормаДокументаОбщая");
	ФормыИНАГРО_ТТНВывоз.Вставить(Перечисления.ИНАГРО_ВидыОперацийТТНВывоз.ВывозФасованного, "ФормаДокументаОбщая");
		
	Возврат ФормыИНАГРО_ТТНВывоз;

КонецФункции 

Функция ПолучитьФиксированныйМассивВидовОпераций() Экспорт

	МассивВидовОпераций = Новый Массив;
	СписокВидовОпераций = Новый СписокЗначений;
	
	ЗначенияПеречисления = Метаданные.Перечисления.ИНАГРО_ВидыОперацийТТНВывоз.ЗначенияПеречисления;
	Для Каждого ЗначениеПеречисления Из ЗначенияПеречисления Цикл
		ТекущийВидОперации = Перечисления.ИНАГРО_ВидыОперацийТТНВывоз[ЗначениеПеречисления.Имя];
		МассивВидовОпераций.Добавить(ТекущийВидОперации);
	КонецЦикла;
		
	Возврат Новый ФиксированныйМассив(МассивВидовОпераций);

КонецФункции
		
Процедура ЗаписатьВыбранноеКоличество(РезультатЗакрытия, ИдентификаторКоманды) Экспорт
	
	СтруктураСохранения = Новый Структура("ВыбранноеКоличество" + ИдентификаторКоманды, РезультатЗакрытия);		
	ХранилищеОбщихНастроек.Сохранить("ИНАГРО_ТТНВывоз_" + ИдентификаторКоманды, , СтруктураСохранения);
	
КонецПроцедуры

#КонецОбласти 

#КонецЕсли