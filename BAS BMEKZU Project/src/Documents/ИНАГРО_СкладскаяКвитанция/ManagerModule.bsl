#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Бланк
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_XML_Бланк";
	КомандаПечати.Представление = НСтр("ru='Бланк';uk='Бланк'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Бланк';uk='Бланк'");;
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Складская квитанция""';uk='Реєстр документів ""Складська квитанція""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры		

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета АвтомобильныеВеса формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_XML_Бланк") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_XML_Бланк", НСтр("ru='Бланк';uk='Бланк'"), 
		ПечатьБланка(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_СкладскаяКвитанция.ПФ_XML_Бланк", ,Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьБланка(МассивОбъектов, ПараметрыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СкладскаяКвитанция.ПФ_XML_Бланк");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	Для каждого СсылкаНаОбъект Из МассивОбъектов Цикл
		Шапка = Макет.ПолучитьОбласть("Шапка");
		
		Структура = Новый Структура("Организация", СсылкаНаОбъект.Организация);
		
		Шапка.Параметры.Стр1Фирма = СсылкаНаОбъект.Организация.НаименованиеПолное;
		Шапка.Параметры.Стр2Фирма =  БухгалтерскийУчетПереопределяемый.ПолучитьАдресИзКонтактнойИнформации(СсылкаНаОбъект.Организация, "Юридический") + " " + СсылкаНаОбъект.Организация.КодПоЕДРПОУ; //РегистрыСведений.КодыОрганизации.ПолучитьПоследнее(СсылкаНаОбъект.Дата, Структура).КодПоЕДРПОУ;
		Шапка.Параметры.НомерДокумента = ВернутьКодБезПрефикса(СсылкаНаОбъект.Номер);
		Чис=Формат(СсылкаНаОбъект.Дата,"ДФ=dd");
		Месяц=МесяцПрописью(СсылкаНаОбъект.Дата, ПараметрыВывода);	
		Шапка.Параметры.Стр1ДатаДок = Чис+" "+Месяц;
		Шапка.Параметры.ГодДок=Прав(Год(СсылкаНаОбъект.Дата),2);
		
		Шапка.Параметры.Стр1Владелец = ?(СсылкаНаОбъект.Владелец.НаименованиеПолное="", СсылкаНаОбъект.Владелец.Наименование, СсылкаНаОбъект.Владелец.НаименованиеПолное);
		Шапка.Параметры.Стр2Владелец =  БухгалтерскийУчетПереопределяемый.ПолучитьАдресИзКонтактнойИнформации(СсылкаНаОбъект.Владелец, "Юридический") + " " + ?(СсылкаНаОбъект.Владелец.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо, СсылкаНаОбъект.Владелец.ИНН, СсылкаНаОбъект.Владелец.КодПоЕДРПОУ);
		
		Чис=Формат(СсылкаНаОбъект.ДатаДоговора,"ДФ=dd");
		Месяц=МесяцПрописью(СсылкаНаОбъект.ДатаДоговора,ПараметрыВывода);	
		Шапка.Параметры.Стр1Договор = Чис+" "+Месяц;
		Шапка.Параметры.ГодДоговор = Прав(Год(СсылкаНаОбъект.ДатаДоговора),2); 
		Шапка.Параметры.Стр2Договор = СсылкаНаОбъект.НомерДоговора; 
		
		//ВернутьКодБезПрефикса(СсылкаНаОбъект.НомерДоговора);
		Шапка.Параметры.РеестрНакл = ВернутьКодБезПрефикса(СокрЛП(СсылкаНаОбъект.НомерДокументаОснования));
		
		Если СсылкаНаОбъект.УточнитьКультуру Тогда
			Шапка.Параметры._ТМЦ = СсылкаНаОбъект.УточненнаяКультура;
		Иначе		
			Шапка.Параметры._ТМЦ = СсылкаНаОбъект.Номенклатура.НаименованиеПолное;
		КонецЕсли;
		Шапка.Параметры.Урожай = СсылкаНаОбъект.Урожай;
		Шапка.Параметры.Вес = СсылкаНаОбъект.ФизическийВес;	
		
		Шапка.Параметры.ЗачетныйВес = СсылкаНаОбъект.ЗачетныйВес;
		ВидКультуры=ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(СсылкаНаОбъект.Номенклатура,"ВидКультуры");
		Шапка.Параметры.ТМЦГОСТ=ВидКультуры.ГОСТ;
		
		// структура заполнения
		Если КодЯзыкаПечать = "uk" Тогда 
			Если СсылкаНаОбъект.ТипХранения = Перечисления.ИНАГРО_ТипыХранения.Обезличенное Тогда				
				Шапка.Параметры.ТипХранения =  "Знеособлене";
			ИначеЕсли СсылкаНаОбъект.ТипХранения = Перечисления.ИНАГРО_ТипыХранения.Раздельное Тогда
				Шапка.Параметры.ТипХранения = "Відокремлене";
			КонецЕсли;
		Иначе 
			Шапка.Параметры.ТипХранения = СсылкаНаОбъект.ТипХранения;
		КонецЕсли;
		
		Шапка.Параметры.Прим = СсылкаНаОбъект.Комментарий;
		
		Шапка.Параметры.Анализ="Картка аналізу";
		ВыборкаПараметровНомерацииДокументов = ИНАГРО_ЭлеваторЗаполнениеДокументов.ПолучитьПараметрыВидовДокументов("ИмяПоМетаданным", СсылкаНаОбъект.ЛабораторныйАнализ.Метаданные().Имя); 
		НомерАнализа_ = СсылкаНаОбъект.НомерАнализа;
		Шапка.Параметры.НомАнализа=ВернутьКодБезПрефикса(Прав(НомерАнализа_, СтрДлина(НомерАнализа_) - ВыборкаПараметровНомерацииДокументов.ДлинаПрефикса));
		Чис=Формат(СсылкаНаОбъект.ЛабораторныйАнализ.Дата,"ДФ=dd");
		Месяц=МесяцПрописью(СсылкаНаОбъект.ЛабораторныйАнализ.Дата,ПараметрыВывода);	
		Шапка.Параметры.Стр1Анализа = Чис+" "+Месяц;
		Шапка.Параметры.ГодАнализа = Прав(Год(СсылкаНаОбъект.ЛабораторныйАнализ.Дата),2);
		Шапка.Параметры.ОрганизацияВыдачиЛабАнализа1="ВТЛ ";	
		Шапка.Параметры.ОрганизацияВыдачиЛабАнализа2=СсылкаНаОбъект.ЛабораторныйАнализ.Организация.НаименованиеПолное;
		
		Если СсылкаНаОбъект.ПечатьДоВостребования=Ложь Тогда
			Шапка.Параметры.СрокВыдачи="до запитання";
		Иначе
			Шапка.Параметры.СрокВыдачи=Формат(СсылкаНаОбъект.ДатаВыдачи, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		КонецЕсли;	
		
		Шапка.Параметры.СтрВладелец = СсылкаНаОбъект.Владелец.НаименованиеПолное + " " + БухгалтерскийУчетПереопределяемый.ПолучитьАдресИзКонтактнойИнформации(СсылкаНаОбъект.Владелец, "Юридический") + " " +?(СсылкаНаОбъект.Владелец.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо, СсылкаНаОбъект.Владелец.ИНН, СсылкаНаОбъект.Владелец.КодПоЕДРПОУ);
		
		Если СсылкаНаОбъект.ПечатьВесаКВыдаче=Ложь Тогда
			Стр=ИНАГРО_Элеватор.ВернутьВесПрописью("uk", СсылкаНаОбъект.ФизическийВес);
			Шапка.Параметры.Количество=Стр;
		Иначе
			Шапка.Параметры.Количество="Згідно акту розрахунку";		
		КонецЕсли;
		
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата);
		
		Шапка.Параметры.Дир = Руководители.Руководитель;
		Шапка.Параметры.Бух = Руководители.ГлавныйБухгалтер;
		
		Др = "";
		
		Для Каждого Стр Из СсылкаНаОбъект.Характеристики Цикл
			
			Если Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Влажность Тогда
				Шапка.Параметры.Влажность = "" + Стр.Значение + Стр.ЕдиницаИзмерения;
			ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЗерноваяПримесь Тогда
				Шапка.Параметры.ЗерноваяПримесь = "" + Стр.Значение + Стр.ЕдиницаИзмерения;
			ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.СорнаяПримесь Тогда
				Шапка.Параметры.СорнаяПримесь = "" + Стр.Значение + Стр.ЕдиницаИзмерения;
			ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКоличество Тогда
				Шапка.Параметры.КлейковинаКоличество = "" + Стр.Значение + Стр.ЕдиницаИзмерения;
			ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКачество Тогда
				Шапка.Параметры.КлейковинаКачество = "" + Стр.Значение + Стр.ЕдиницаИзмерения;
			ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда
				Шапка.Параметры.Зараженность = "" + Стр.Значение + Стр.ЕдиницаИзмерения;
			Иначе
				Др = "" + Др + " " + ВернутьПредставлениеХарактеристики(Стр.Характеристика) + " " + СокрЛП(Стр.Значение) + Стр.ЕдиницаИзмерения + ";";
			КонецЕсли;
			
		КонецЦикла;	
		
		//Ин1 = ""; 
		//Ин2 = "";
		//РазбитьСтроку(Др,Ин1,Ин2,70);
		//Шапка.Параметры.Ин1 = Ин1;
		//Шапка.Параметры.Ин2 = Ин2;
		Шапка.Параметры.Ин1 = Др;
		
		//////////////////////////////////
		ТабДокумент.Вывести(Шапка);
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ВернутьКодБезПрефикса(Код)
	
	ВремКод = Код;
	Пока ((КодСимвола(Лев(ВремКод,1)) > КодСимвола("9")) ИЛИ (КодСимвола(Лев(ВремКод,1)) < КодСимвола("1"))) И (ВремКод<>"") Цикл
		ВремКод = Сред(ВремКод,2);
	КонецЦикла;
	Возврат ВремКод;
	
КонецФункции

Функция МесяцПрописью(ТекДата, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	ФорматДаты=Формат(ТекДата, "ДЛФ=DD;Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	аа=Лев(ФорматДаты,СтрДлина(ФорматДаты)-7);
	Месяц=СокрЛП(Прав(аа,СтрДлина(аа)-2));
	
	Возврат Месяц;
	
КонецФункции

Функция ВернутьПредставлениеХарактеристики(Характеристика_)
	
	Если СокрЛП(Характеристика_.КраткоеНаименование) <> "" Тогда
		Возврат СокрЛП(Характеристика_.КраткоеНаименование);
	Иначе
		Возврат СокрЛП(Характеристика_.ПолноеНаименование);
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#КонецЕсли