#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// НДФЛ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечатнаяФормаНДФЛ";
	КомандаПечати.Представление = НСтр("ru='НДФЛ';uk='ПДФО'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// Военный сбор
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечатнаяФормаВС";
	КомандаПечати.Представление = НСтр("ru='Военный сбор';uk='Військовий збір'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// Итоги по работникам
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Итоги";
	КомандаПечати.Представление = НСтр("ru='Итоги по работникам';uk='Підсумки по працівникам'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Начисление зарплаты работникам организаций""';uk='Реєстр документів ""Нарахування зарплати працівникам організацій""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры	

// Процедура осуществляет печать документа 
// Можно направить печать на экран или принтер, а также распечатать необходимое количество копий.
// Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии. 
// Параметры:
// НазваниеМакета - строка, название макета.
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатнаяФормаНДФЛ") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПечатнаяФормаНДФЛ", НСтр("ru='НДФЛ';uk='ПДФО'"), 
		ПечатьНДФЛ(МассивОбъектов, ОбъектыПечати,ПараметрыВывода), , "Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПФ_MXL_ПечатнаяФормаНДФЛ", ,Истина);
	КонецЕсли;  		
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатнаяФормаВС") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПечатнаяФормаВС",НСтр("ru='Военный сбор';uk='Військовий збір'"), 
		ПечатьВС(МассивОбъектов, ОбъектыПечати,ПараметрыВывода), ,"Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПФ_MXL_ПечатнаяФормаВС", , Истина);
	КонецЕсли;                         
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Итоги") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"Итоги",НСтр("ru='Итоги по работникам';uk='Підсумки по працівникам'"), 
		ПечатьИтоги(МассивОбъектов, ОбъектыПечати,ПараметрыВывода), ,"Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПФ_MXL_Итоги", , Истина);
	КонецЕсли;	
	
	
КонецПроцедуры

// Формирует запрос по документу и связанным регистрам сведений
//
// Параметры: 
//  Режим - строка, может принимать значения:
//			"ПоРеквизитамДокумента"
//			"ПоТабличнойЧастиДокумента"
//
// Возвращаемое значение:
//  Результат запроса с данными об организации или о работниках из табличной части.
//
Функция СформироватьЗапросДляПечати(Режим,Ссылка)
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",   Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента",	  Ссылка.Дата);
	
	Если Режим = "ПоРеквизитамДокумента" Тогда
		
		Запрос.УстановитьПараметр("Руководитель",	  Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
		Запрос.УстановитьПараметр("ГлавныйБухгалтер", Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	Зарплата.Номер										КАК НомерДок,
		|	Зарплата.Дата										КАК ДатаДок,
		|	Зарплата.Организация.НаименованиеПолное				КАК НазваниеОрганизации,
		|	Зарплата.ПодразделениеОрганизации.Наименование		КАК НазваниеПодразделенияОрганизации,
		|	ВЫБОР КОГДА (ФИОФизЛицСрезПоследнихРуководитель.ФизическоеЛицо) ЕСТЬ NULL  ТОГДА ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.ФизическоеЛицо.Наименование ИНАЧЕ ФИОФизЛицСрезПоследнихРуководитель.Фамилия + ВЫБОР КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Имя, 1, 1) <> """" ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Имя, 1, 1) + ""."" ИНАЧЕ """" КОНЕЦ + ВЫБОР КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Отчество, 1, 1) <> """" ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Отчество, 1, 1) + ""."" ИНАЧЕ """" КОНЕЦ КОНЕЦ КАК ФИОРуководителя,
		|	ВЫБОР КОГДА (ФИОФизЛицСрезПоследнихГлБух.ФизическоеЛицо) ЕСТЬ NULL  ТОГДА ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.ФизическоеЛицо.Наименование ИНАЧЕ ФИОФизЛицСрезПоследнихГлБух.Фамилия + ВЫБОР КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Имя, 1, 1) <> """" ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Имя, 1, 1) + ""."" ИНАЧЕ """" КОНЕЦ + ВЫБОР КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Отчество, 1, 1) <> """" ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Отчество, 1, 1) + ""."" ИНАЧЕ """" КОНЕЦ КОНЕЦ КАК ФИОГлБуха,
		|	ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.Должность.Наименование КАК ДолжностьРуководителя,
		|	ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.Должность.Наименование
		|ИЗ
		|	Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций КАК Зарплата
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &Руководитель) КАК ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследнихРуководитель
		|			ПО ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.ФизическоеЛицо = ФИОФизЛицСрезПоследнихРуководитель.ФизическоеЛицо
		|		ПО Зарплата.Организация = ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.СтруктурнаяЕдиница
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &ГлавныйБухгалтер) КАК ОтветственныеЛицаОрганизацийСрезПоследнихГлБух
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследнихГлБух
		|			ПО ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.ФизическоеЛицо = ФИОФизЛицСрезПоследнихГлБух.ФизическоеЛицо
		|		ПО Зарплата.Организация = ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.СтруктурнаяЕдиница
		|
		|ГДЕ
		|	Зарплата.Ссылка = &ДокументСсылка";
		
	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда
		
		Запрос.УстановитьПараметр("Организация",   Ссылка.Организация);
		Запрос.УстановитьПараметр("ТабельныйНомер", "");
		Запрос.УстановитьПараметр("ВидЗанятости", Перечисления.ВидыЗанятости.ВнутреннееСовместительство);
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	ЗарплатаРаботники.Сотрудник.ФизическоеЛицо			КАК Физлицо,
		|	ВЫБОР КОГДА (ФИОФизЛицСрезПоследних.Фамилия) ЕСТЬ NULL  ТОГДА ЗарплатаРаботники.Сотрудник.ФизическоеЛицо.Наименование ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество КОНЕЦ КАК ФИО,
		|	РаботникиОрганизации.Должность						КАК Должность,
		|	РаботникиОрганизации.Сотрудник.Код					КАК ТабельныйНомер
		|
		|ИЗ	Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.РаботникиОрганизации КАК ЗарплатаРаботники
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, 
		|			ФизическоеЛицо В (
		|				ВЫБРАТЬ РАЗЛИЧНЫЕ 	
		|					ЗарплатаРаботники.Сотрудник.ФизическоеЛицо КАК Физлицо 
		|				ИЗ Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.РаботникиОрганизации КАК ЗарплатаРаботники 
		|				ГДЕ 	ЗарплатаРаботники.Ссылка = &ДокументСсылка 
		|			)) КАК ФИОФизЛицСрезПоследних
		|	ПО ЗарплатаРаботники.Сотрудник.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизическоеЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&ДатаДокумента, 
		|			 Сотрудник В (
		|				ВЫБРАТЬ РАЗЛИЧНЫЕ 	
		|					ЗарплатаРаботники.Сотрудник КАК Сотрудник
		|					ИЗ Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.РаботникиОрганизации КАК ЗарплатаРаботники 
		|				ГДЕ 	ЗарплатаРаботники.Ссылка = &ДокументСсылка 
		|			)) КАК РаботникиОрганизации
		|	ПО ЗарплатаРаботники.Сотрудник = РаботникиОрганизации.Сотрудник
		|	И РаботникиОрганизации.Организация = &Организация
		|
		|ГДЕ
		|	ЗарплатаРаботники.Ссылка = &ДокументСсылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизЛицо";
		
	ИначеЕсли Режим = "ПоТабличнойЧастиНДФЛ" Тогда     
		Запрос.УстановитьПараметр("Организация",   Ссылка.Организация);
		Запрос.УстановитьПараметр("ТабельныйНомер", "");
		Запрос.УстановитьПараметр("ВидЗанятости", Перечисления.ВидыЗанятости.ВнутреннееСовместительство);
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	НДФЛ.Сотрудник	КАК Сотрудник,
		|	ВЫБОР КОГДА (ФИОФизЛицСрезПоследних.Фамилия) ЕСТЬ NULL  ТОГДА НДФЛ.Сотрудник.ФизическоеЛицо.Наименование ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество КОНЕЦ+"" (""+НДФЛ.Сотрудник.ФизическоеЛицо.КодПоДРФО+"")"" КАК СотрудникИНН,
		|	НДФЛ.Доход	КАК Доход,
		|	НДФЛ.Налог	КАК Налог,
		|	НДФЛ.ДоходНДФЛ	КАК ДоходНДФЛ,
		|	НДФЛ.НалоговыйПериод	КАК НалоговыйПериод
		|
		|ИЗ	Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.НДФЛ КАК НДФЛ
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, 
		|			ФизическоеЛицо В (
		|				ВЫБРАТЬ РАЗЛИЧНЫЕ 	
		|					ЗарплатаРаботники.Сотрудник.ФизическоеЛицо КАК Физлицо 
		|				ИЗ Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.РаботникиОрганизации КАК ЗарплатаРаботники 
		|				ГДЕ 	ЗарплатаРаботники.Ссылка = &ДокументСсылка 
		|			)) КАК ФИОФизЛицСрезПоследних
		|	ПО НДФЛ.Сотрудник.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизическоеЛицо
		|
		|ГДЕ
		|	НДФЛ.Ссылка = &ДокументСсылка
		// ВОЕННЫЙ СБОР
		|	И НДФЛ.ДоходНДФЛ.ВидСтавкиРезидента <> Значение(Перечисление.ВидыСтавокНДФЛ.ВоенныйСбор)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник";
		
		// ВОЕННЫЙ СБОР	
	ИначеЕсли Режим = "ПоТабличнойЧастиВС" Тогда
		
		Запрос.УстановитьПараметр("Организация",   Ссылка.Организация);
		Запрос.УстановитьПараметр("ТабельныйНомер", "");
		Запрос.УстановитьПараметр("ВидЗанятости", Перечисления.ВидыЗанятости.ВнутреннееСовместительство);
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	НДФЛ.Сотрудник	КАК Сотрудник,
		|	ВЫБОР КОГДА (ФИОФизЛицСрезПоследних.Фамилия) ЕСТЬ NULL  ТОГДА НДФЛ.Сотрудник.ФизическоеЛицо.Наименование ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество КОНЕЦ+"" (""+НДФЛ.Сотрудник.ФизическоеЛицо.КодПоДРФО+"")"" КАК СотрудникИНН,
		|	НДФЛ.Доход	КАК Доход,
		|	НДФЛ.Налог	КАК Налог,
		|	НДФЛ.ДоходНДФЛ	КАК ДоходНДФЛ,
		|	НДФЛ.НалоговыйПериод	КАК НалоговыйПериод
		|
		|ИЗ	Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.НДФЛ КАК НДФЛ
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, 
		|			ФизическоеЛицо В (
		|				ВЫБРАТЬ РАЗЛИЧНЫЕ 	
		|					ЗарплатаРаботники.Сотрудник.ФизическоеЛицо КАК Физлицо 
		|				ИЗ Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.РаботникиОрганизации КАК ЗарплатаРаботники 
		|				ГДЕ 	ЗарплатаРаботники.Ссылка = &ДокументСсылка 
		|			)) КАК ФИОФизЛицСрезПоследних
		|	ПО НДФЛ.Сотрудник.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизическоеЛицо
		|
		|ГДЕ
		|	НДФЛ.Ссылка = &ДокументСсылка
		|	И НДФЛ.ДоходНДФЛ.ВидСтавкиРезидента = Значение(Перечисление.ВидыСтавокНДФЛ.ВоенныйСбор)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник";		
		
	ИначеЕсли Режим = "Итоги" Тогда
		
		Запрос.УстановитьПараметр("Организация",   				Ссылка.Организация);
		Запрос.УстановитьПараметр("ПериодРегистрации", 			Ссылка.ПериодРегистрации);
		Запрос.УстановитьПараметр("КонецПериодаРегистрации",	КонецМесяца(Ссылка.ПериодРегистрации));
		
		
		Запрос.Текст =
		
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВсеРаботники.Сотрудник КАК Сотрудник,
		|	ВсеРаботники.Сотрудник.Наименование КАК СотрудникНаименование,
		|	ВсеНачисления.ВидРасчета КАК ВидРасчета,
		|	ВсеНачисления.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
		|	ИСТИНА КАК Начисление,
		|	ЛОЖЬ КАК Взнос,
		|	ЛОЖЬ КАК Удержание,
		|	ЛОЖЬ КАК Налог,
		|	СУММА(НачисленияПоСотруднику.Результат) КАК Результат
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Работники.Ссылка КАК Ссылка,
		|		Работники.Сотрудник КАК Сотрудник
		|	ИЗ
		|		Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.РаботникиОрганизации КАК Работники) КАК ВсеРаботники
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ВложенныйЗапрос.Ссылка КАК Ссылка,
		|			ВложенныйЗапрос.ВидРасчета КАК ВидРасчета
		|		ИЗ
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				Начисления.Ссылка КАК Ссылка,
		|				Начисления.ВидРасчета КАК ВидРасчета
		|			ИЗ
		|				Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК Начисления
		|			ГДЕ
		|				Начисления.Ссылка = &ДокументСсылка
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				&ДокументСсылка,
		|				ИНАГРО_Начисления.ВидРасчета
		|			ИЗ
		|				РегистрРасчета.ИНАГРО_Начисления КАК ИНАГРО_Начисления
		|			ГДЕ
		|				ИНАГРО_Начисления.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
		|				И ИНАГРО_Начисления.Регистратор <> &ДокументСсылка
		|				И ИНАГРО_Начисления.Сотрудник В
		|						(ВЫБРАТЬ
		|							ИНАГРО_НачислениеЗарплатыРаботникамОрганизацийНачисления.Сотрудник КАК Сотрудник
		|						ИЗ
		|							Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК ИНАГРО_НачислениеЗарплатыРаботникамОрганизацийНачисления
		|						ГДЕ
		|							ИНАГРО_НачислениеЗарплатыРаботникамОрганизацийНачисления.Ссылка = &ДокументСсылка)) КАК ВложенныйЗапрос
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВложенныйЗапрос.ВидРасчета,
		|			ВложенныйЗапрос.Ссылка) КАК ВсеНачисления
		|		ПО ВсеРаботники.Ссылка = ВсеНачисления.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИНАГРО_НачислениеЗарплатыРаботникамОрганизацийНачисления.Ссылка КАК Ссылка,
		|			ИНАГРО_НачислениеЗарплатыРаботникамОрганизацийНачисления.ВидРасчета КАК ВидРасчета,
		|			ИНАГРО_НачислениеЗарплатыРаботникамОрганизацийНачисления.Сотрудник КАК Сотрудник,
		|			ИНАГРО_НачислениеЗарплатыРаботникамОрганизацийНачисления.Результат КАК Результат
		|		ИЗ
		|			Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК ИНАГРО_НачислениеЗарплатыРаботникамОрганизацийНачисления
		|		ГДЕ
		|			ИНАГРО_НачислениеЗарплатыРаботникамОрганизацийНачисления.Результат <> 0
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			&ДокументСсылка,
		|			ИНАГРО_Начисления.ВидРасчета,
		|			ИНАГРО_Начисления.Сотрудник,
		|			ИНАГРО_Начисления.Результат
		|		ИЗ
		|			РегистрРасчета.ИНАГРО_Начисления КАК ИНАГРО_Начисления
		|		ГДЕ
		|			ИНАГРО_Начисления.Регистратор <> &ДокументСсылка
		|			И ИНАГРО_Начисления.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
		|			И ИНАГРО_Начисления.Результат <> 0) КАК НачисленияПоСотруднику
		|		ПО (ВсеНачисления.Ссылка = НачисленияПоСотруднику.Ссылка)
		|			И ВсеРаботники.Сотрудник = НачисленияПоСотруднику.Сотрудник
		|			И (ВсеНачисления.ВидРасчета = НачисленияПоСотруднику.ВидРасчета)
		|ГДЕ
		|	ВсеРаботники.Ссылка = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсеРаботники.Сотрудник,
		|	ВсеНачисления.ВидРасчета,
		|	ВсеРаботники.Сотрудник.Наименование,
		|	ВсеНачисления.ВидРасчета.Наименование
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВсеРаботники.Сотрудник,
		|	ВсеРаботники.Сотрудник.Наименование,
		|	ВсеВзносы.Налог,
		|	ВсеВзносы.Налог.Наименование,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	СУММА(Взносы.Результат)
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Работники.Ссылка КАК Ссылка,
		|		Работники.Сотрудник КАК Сотрудник
		|	ИЗ
		|		Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.РаботникиОрганизации КАК Работники) КАК ВсеРаботники
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Взносы.Ссылка КАК Ссылка,
		|			Взносы.Налог КАК Налог,
		|			Взносы.ВидРасчета КАК ВидРасчета
		|		ИЗ
		|			Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.Взносы КАК Взносы) КАК ВсеВзносы
		|		ПО ВсеРаботники.Ссылка = ВсеВзносы.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.Взносы КАК Взносы
		|		ПО (ВсеВзносы.Ссылка = Взносы.Ссылка)
		|			И ВсеРаботники.Сотрудник = Взносы.Сотрудник
		|			И (ВсеВзносы.ВидРасчета = Взносы.ВидРасчета)
		|ГДЕ
		|	ВсеРаботники.Ссылка = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсеРаботники.Сотрудник,
		|	ВсеВзносы.Налог,
		|	ВсеРаботники.Сотрудник.Наименование,
		|	ВсеВзносы.Налог.Наименование
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВсеРаботники.Сотрудник,
		|	ВсеРаботники.Сотрудник.Наименование,
		|	ВсеУдержания.ВидРасчета,
		|	ВсеУдержания.ВидРасчета.Наименование,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	СУММА(Удержания.Результат)
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Работники.Ссылка КАК Ссылка,
		|		Работники.Сотрудник КАК Сотрудник
		|	ИЗ
		|		Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.РаботникиОрганизации КАК Работники) КАК ВсеРаботники
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Удержания.Ссылка КАК Ссылка,
		|			Удержания.ВидРасчета КАК ВидРасчета
		|		ИЗ
		|			Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.Удержания КАК Удержания) КАК ВсеУдержания
		|		ПО ВсеРаботники.Ссылка = ВсеУдержания.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.Удержания КАК Удержания
		|		ПО (ВсеУдержания.Ссылка = Удержания.Ссылка)
		|			И ВсеРаботники.Сотрудник = Удержания.Сотрудник
		|			И (ВсеУдержания.ВидРасчета = Удержания.ВидРасчета)
		|ГДЕ
		|	ВсеРаботники.Ссылка = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсеРаботники.Сотрудник,
		|	ВсеУдержания.ВидРасчета,
		|	ВсеРаботники.Сотрудник.Наименование,
		|	ВсеУдержания.ВидРасчета.Наименование
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВсеРаботники.Сотрудник,
		|	ВсеРаботники.Сотрудник.Наименование,
		|	""НДФЛ"",
		|	""НДФЛ"",
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	СУММА(Налоги.Налог)
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Работники.Ссылка КАК Ссылка,
		|		Работники.Сотрудник КАК Сотрудник
		|	ИЗ
		|		Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.РаботникиОрганизации КАК Работники) КАК ВсеРаботники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.НДФЛ КАК Налоги
		|		ПО (Налоги.Ссылка = ВсеРаботники.Ссылка)
		|			И ВсеРаботники.Сотрудник = Налоги.Сотрудник
		|			И (Налоги.ДоходНДФЛ.ВидСтавкиРезидента <> Значение(Перечисление.ВидыСтавокНДФЛ.ВоенныйСбор))
		|ГДЕ
		|	ВсеРаботники.Ссылка = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсеРаботники.Сотрудник,
		|	ВсеРаботники.Сотрудник.Наименование
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВсеРаботники.Сотрудник,
		|	ВсеРаботники.Сотрудник.Наименование,
		|	""Военный сбор"",
		|	""Военный сбор"",
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	СУММА(Налоги.Налог)
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Работники.Ссылка КАК Ссылка,
		|		Работники.Сотрудник КАК Сотрудник
		|	ИЗ
		|		Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.РаботникиОрганизации КАК Работники) КАК ВсеРаботники
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.НДФЛ КАК Налоги
		|		ПО (Налоги.Ссылка = ВсеРаботники.Ссылка)
		|			И ВсеРаботники.Сотрудник = Налоги.Сотрудник
		|			И (Налоги.ДоходНДФЛ.ВидСтавкиРезидента = Значение(Перечисление.ВидыСтавокНДФЛ.ВоенныйСбор))
		|ГДЕ
		|	ВсеРаботники.Ссылка = &ДокументСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсеРаботники.Сотрудник,
		|	ВсеРаботники.Сотрудник.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникНаименование,
		|	Начисление УБЫВ,
		|	Удержание УБЫВ,
		|	Взнос УБЫВ,
		|	Налог УБЫВ,
		|	ВидРасчетаНаименование";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, """НДФЛ""",         НСтр("ru='""НДФЛ""';uk='""ПДФО""'"));
		Запрос.Текст = СтрЗаменить(Запрос.Текст, """Военный сбор""", НСтр("ru='""Военный сбор""';uk='""Військовий збір""'"));
		
		Возврат Запрос.Выполнить();
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросДляПечати()

// Функция формирует табличный документ с печатной формой "П6",
//
// Возвращаемое значение:
//  Табличный документ - печатная форма.
//
Функция ПечатьИтоги(МассивОбъектов,ОбъектыПечати,ПараметрыВывода) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПФ_MXL_Итоги");
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;

	
	ПервыйДокумент = Истина;
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
				
		// получаем данные для печати
		Выборка = СформироватьЗапросДляПечати("Итоги",Ссылка).Выбрать();
		
		// ВЫВОД ДАННЫХ В ОТЧЕТ
		Макет = ПолучитьМакет("ПФ_MXL_Итоги");
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;  
		Шапка = Макет.ПолучитьОбласть("Шапка");
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата);
		Шапка.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование;
		Шапка.Параметры.Подразделение = Ссылка.ПодразделениеОрганизации.Наименование;
		Шапка.Параметры.Месяц = Формат(Ссылка.ПериодРегистрации, "ДФ='MMMM yyyy';Л=" + КодЯзыкаПечать);
		Шапка.Параметры.Дата = Формат(Ссылка.Дата, "ДФ=dd.MM.yyyy");
		Шапка.Параметры.Номер = Ссылка.Номер;
		ТабДокумент.Вывести(Шапка);
		
		Если Выборка.Количество() = 0 Тогда
			Возврат ТабДокумент;
		КонецЕсли;
		
		Сотрудник = "";
		Итог = 0;
		Вид = 0;
		Пока Выборка.Следующий() Цикл
			Если Сотрудник = "" Тогда
				Сотрудник = Выборка.СотрудникНаименование;
				Вид = 1;
				ТабДокумент.Вывести(Макет.ПолучитьОбласть("СтрокаЗаголовок|Работник"));
				ТабДокумент.Присоединить(Макет.ПолучитьОбласть("СтрокаЗаголовок|Разделитель"));
			ИначеЕсли Сотрудник <> Выборка.СотрудникНаименование Тогда
				Прервать;
			КонецЕсли;
			
			Если (Вид = 1 И Выборка.Начисление)
				Или (Вид = 2 И Выборка.Удержание)
				Или (Вид = 3 И Выборка.Взнос)
				Или (Вид = 4 И Выборка.Налог) Тогда
				Область = Макет.ПолучитьОбласть("СтрокаЗаголовок|ВидРасчета");
				Область.Параметры.ВидРасчета = Выборка.ВидРасчетаНаименование;
				ТабДокумент.Присоединить(Область);
			Иначе
				Область = Макет.ПолучитьОбласть("СтрокаЗаголовок|Итог");
				Если Вид = 1 Тогда
					Область.Параметры.Итог = НСтр("ru='Всего начислено';uk='Всього нараховано'",КодЯзыкаПечать);
				ИначеЕсли Вид = 2 Тогда
					Область.Параметры.Итог = НСтр("ru='Всего удержано';uk='Всього утримано'",КодЯзыкаПечать);
				ИначеЕсли Вид = 3 Тогда
					Область.Параметры.Итог = НСтр("ru='Всего удержано взносов';uk='Всього утримано внесків'",КодЯзыкаПечать);
				ИначеЕсли Вид = 4 Тогда
					Область.Параметры.Итог = НСтр("ru='НДФЛ';uk='ПДФО'",КодЯзыкаПечать);
				КонецЕсли;	
				ТабДокумент.Присоединить(Макет.ПолучитьОбласть("СтрокаЗаголовок|Разделитель"));
				ТабДокумент.Присоединить(Область);
				ТабДокумент.Присоединить(Макет.ПолучитьОбласть("СтрокаЗаголовок|Разделитель"));
				
				Если Выборка.Удержание Тогда
					Вид = 2;
				ИначеЕсли Выборка.Взнос Тогда
					Вид = 3;
				Иначе
					Вид = 4;
				КонецЕсли;
				Если ЗначениеЗаполнено(Выборка.ВидРасчета) Тогда
					Область = Макет.ПолучитьОбласть("СтрокаЗаголовок|ВидРасчета");
					Область.Параметры.ВидРасчета = Выборка.ВидРасчетаНаименование;
					ТабДокумент.Присоединить(Область);
				КонецЕсли;	
			КонецЕсли;	
			
			
		КонецЦикла;
		
		Выборка.Сбросить();
		Сотрудник = "";
		Итог = 0;
		Вид = 0;
		
		Пока Выборка.Следующий() Цикл
			
			Если Сотрудник <> Выборка.СотрудникНаименование Тогда
				Итог = 0;
				Сотрудник = Выборка.СотрудникНаименование;
				Вид = 1;
				Область = Макет.ПолучитьОбласть("Строка|Работник");
				Область.Параметры.Работник = Сотрудник;
				ТабДокумент.Вывести(Область);
				ТабДокумент.Присоединить(Макет.ПолучитьОбласть("Строка|Разделитель"));
			КонецЕсли;
			
			Если (Вид = 1 И Выборка.Начисление)
				Или (Вид = 2 И Выборка.Удержание)
				Или (Вид = 3 И Выборка.Взнос)
				Или (Вид = 4 И Выборка.Налог) Тогда
				Область = Макет.ПолучитьОбласть("Строка|ВидРасчета");
				Если Выборка.Результат = NULL Тогда
					Результат = 0;
				Иначе
					Результат = Выборка.Результат;
				КонецЕсли;	
				Область.Параметры.Результат = Результат;
				ТабДокумент.Присоединить(Область);
				Итог = Итог + Результат;
			Иначе
				Область = Макет.ПолучитьОбласть("Строка|Итог");
				Область.Параметры.Итог = Итог;
				ТабДокумент.Присоединить(Макет.ПолучитьОбласть("Строка|Разделитель"));
				ТабДокумент.Присоединить(Область);
				ТабДокумент.Присоединить(Макет.ПолучитьОбласть("Строка|Разделитель"));
				
				Если Выборка.Удержание Тогда
					Вид = 2;
				ИначеЕсли Выборка.Взнос Тогда
					Вид = 3;
				Иначе
					Вид = 4;
				КонецЕсли;
				
				
				
				Область = Макет.ПолучитьОбласть("Строка|ВидРасчета");
				Если Выборка.Результат = NULL Тогда
					Результат = 0;
				Иначе
					Результат = Выборка.Результат;
				КонецЕсли;
				Область.Параметры.Результат = Результат;
				
				Итог = Результат;
				
				Если ЗначениеЗаполнено(Выборка.ВидРасчета) Тогда
					ТабДокумент.Присоединить(Область);
				КонецЕсли;	
				
			КонецЕсли;	
			
		КонецЦикла;
	КонецЦикла;
	
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Возврат ТабДокумент;
	
КонецФункции // ПечатьИтоги

Функция ПечатьНДФЛ(МассивОбъектов,ОбъектыПечати,ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗарплатаКВыплатеОрганизаций_Ведомость";
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	
	Макет 		= УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПФ_MXL_ПечатнаяФормаНДФЛ");
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// получаем данные для печати
		ВыборкаДляШапки   = СформироватьЗапросДляПечати("ПоРеквизитамДокумента",Ссылка).Выбрать();
		ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиНДФЛ",Ссылка).Выбрать();
		
		// Подсчитываем количество страниц документа - для корректного разбиения на страницы.
		ВсегоСтрокДокумента = ВыборкаРаботники.Количество();
		
		ОбластьМакетаШапка			= Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаКолонтитул		= Макет.ПолучитьОбласть("Колонтитул");
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакетаШапка.Параметры.Заполнить(Ссылка);
		ОбластьМакетаШапка.Параметры.ИмяОрганизации = Ссылка.Организация.Наименование;
		ОбластьМакетаШапка.Параметры.Дата = Формат(Ссылка.Дата, "ДФ=dd.MM.yyyy");
		ОбластьМакетаШапка.Параметры.ПериодРегистрации = Формат(Ссылка.ПериодРегистрации, "ДФ='MMMM yyyy';Л=" + КодЯзыкаПечать);
		
		СписокПоказателей = Новый СписокЗначений;
		СписокПоказателей.Добавить("","КодПоЕДРПОУ");
		КодЕДРПОУ = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация, КонецМесяца(Ссылка.ПериодРегистрации)).КодПоЕДРПОУ;
		Для Инд = 1 По 8 Цикл
			ОбластьМакетаШапка.Параметры["ЕДРПОУ" + Инд] = Сред(КодЕДРПОУ, Инд, 1);
		КонецЦикла; 
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		ТабДокумент.Вывести(ОбластьМакетаКолонтитул);
		
		ВыведеноСтраниц = 0; ВыведеноСтрок = 0; ИтогоНаСтранице = 0; ИтогНалог = 0;
		// выводим данные по строкам документа.
		Пока ВыборкаРаботники.Следующий() Цикл
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаРаботники);
			ОбластьМакетаСтрока.Параметры.НалоговыйПериод = Формат(ВыборкаРаботники.НалоговыйПериод, "Л="+КодЯзыкаПечать+"; ДФ='MMMM гггг'");
			
			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			ОбластьМакетаСтрока.Параметры.НомерПП = ВыведеноСтрок;
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не ТабДокумент.ПроверитьВывод(ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
				ВывестиПодвалЛиста = Не ТабДокумент.ПроверитьВывод(ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				
				ТабДокумент.Вывести(ОбластьМакетаПодвал);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ОбластьМакетаКолонтитул);
				ВыведеноСтраниц = ВыведеноСтраниц + 1;
				ИтогоНаСтранице = 0;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаСтрока);
			ИтогНалог = ИтогНалог + ОбластьМакетаСтрока.Параметры.Налог;
			
		КонецЦикла;
		
		ОбластьМакетаПодвал.Параметры.ИтогНалог = ИтогНалог;
		ОбластьМакетаПодвал.Параметры.Ответственный = Ссылка.Ответственный;
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
	КонецЦикла;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;

	Возврат ТабДокумент;
	
КонецФункции // ПечатьТабельБланк()

Функция ПечатьВС(МассивОбъектов,ОбъектыПечати,ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗарплатаКВыплатеОрганизаций_Ведомость";
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	Макет 		= УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПФ_MXL_ПечатнаяФормаВС");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// получаем данные для печати
		ВыборкаДляШапки   = СформироватьЗапросДляПечати("ПоРеквизитамДокумента",Ссылка).Выбрать();
		ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиВС",Ссылка).Выбрать();
		
		// Подсчитываем количество страниц документа - для корректного разбиения на страницы.
		ВсегоСтрокДокумента = ВыборкаРаботники.Количество();
		
		ОбластьМакетаШапка			= Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаКолонтитул		= Макет.ПолучитьОбласть("Колонтитул");
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакетаШапка.Параметры.Заполнить(Ссылка);
		ОбластьМакетаШапка.Параметры.ИмяОрганизации = Ссылка.Организация.Наименование;
		ОбластьМакетаШапка.Параметры.ПериодРегистрации = Формат(Ссылка.ПериодРегистрации, "Л="+Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать)+"; ДФ='MMMM yyyy'");
		
		СписокПоказателей = Новый СписокЗначений;
		СписокПоказателей.Добавить("","КодПоЕДРПОУ");
		КодЕДРПОУ = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация, КонецМесяца(Ссылка.ПериодРегистрации)).КодПоЕДРПОУ;
		Для Инд = 1 По 8 Цикл
			ОбластьМакетаШапка.Параметры["ЕДРПОУ" + Инд] = Сред(КодЕДРПОУ, Инд, 1);
		КонецЦикла; 
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		ТабДокумент.Вывести(ОбластьМакетаКолонтитул);
		
		ВыведеноСтраниц = 0; ВыведеноСтрок = 0; ИтогоНаСтранице = 0; ИтогНалог = 0;
		// выводим данные по строкам документа.
		Пока ВыборкаРаботники.Следующий() Цикл
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаРаботники);
			ОбластьМакетаСтрока.Параметры.НалоговыйПериод = Формат(ВыборкаРаботники.НалоговыйПериод, "Л="+Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать)+"; ДФ='MMMM гггг'");
			
			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			ОбластьМакетаСтрока.Параметры.НомерПП = ВыведеноСтрок;
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не ТабДокумент.ПроверитьВывод(ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
				ВывестиПодвалЛиста = Не ТабДокумент.ПроверитьВывод(ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				
				ТабДокумент.Вывести(ОбластьМакетаПодвал);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ОбластьМакетаКолонтитул);
				ВыведеноСтраниц = ВыведеноСтраниц + 1;
				ИтогоНаСтранице = 0;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаСтрока);
			ИтогНалог = ИтогНалог + ОбластьМакетаСтрока.Параметры.Налог;
			
		КонецЦикла;
		
		ОбластьМакетаПодвал.Параметры.ИтогНалог = ИтогНалог;
		ОбластьМакетаПодвал.Параметры.Ответственный = Ссылка.Ответственный;
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
	КонецЦикла;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Возврат ТабДокумент;
	
КонецФункции // ПечатьВС()

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#КонецЕсли