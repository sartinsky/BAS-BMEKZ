#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
					
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 

	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Месяц, Организация, Ответственный", 
		"Объект.ПериодРегистрации",
		"Объект.Организация",
		"Объект.Ответственный");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		УстановитьФункциональныеОпцииФормы();
		
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока");
		
		ПодготовитьФормуНаСервере();
		
	КонецЕсли;
	
	// Уведомим о появлении функционала рабочей даты
	НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях("РабочаяДатаИзДокумента");
	
	УстановитьОтображениеПредупрежденийПриИзмененииКлючевыхРеквизитов();
	
	// Показываем, если это новый документ и сама рабочая дата еще не установлена.
	НастройкиПредупреждений.РабочаяДатаИзДокумента = НастройкиПредупреждений.РабочаяДатаИзДокумента
		И Параметры.Ключ.Пустая()
		И НЕ ЗначениеЗаполнено(БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("РабочаяДата"));
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов 	

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	РассчитатьИтогиПоДокументу();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ГрупповоеЗаполнение" И ТипЗнч(Параметр) = Тип("Структура") 
		И Параметр.Свойство("ИдентификаторВызывающейФормы")
		И Параметр.ИдентификаторВызывающейФормы = УникальныйИдентификатор Тогда
		
		ВыполнитьГрупповоеЗаполнение(Параметр);
		Объект.КраткийСоставДокумента = "";
		Модифицированность = Истина;
		
	КонецЕсли;

	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока");
	
	УстановитьОтображениеПредупрежденийПриИзмененииКлючевыхРеквизитов();
	
	ПодготовитьФормуНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();
	
	УправлениеВидимостьюПоказателей();
	
	ЗаполнитьДобавленныеКолонкиТаблиц("НачисленияПроводки");
		
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МесяцСтрокаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцНачисленияСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока", , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока", Направление, Модифицированность);
	ПриИзмененииМесяцаНачисления();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	
	ПриИзмененииМесяцаНачисления();
	
КонецПроцедуры

&НаСервере
Процедура МесяцСтрокаПриИзмененииНаСервере()
	ОчиститьТабличныеЧасти(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаПриИзменении()
	МесяцСтрокаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииМесяцаНачисления()
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока", Модифицированность);
	МесяцСтрокаПриИзменении();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	ОчиститьТабличныеЧасти();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЭтоПересчетНДФЛПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйРасчетПриИзменении(Элемент)
	
	Если Объект.Начисления.Количество() > 0 ИЛИ Объект.НачисленияПроводки.Количество() > 0
		ИЛИ Объект.Взносы.Количество() > 0 ИЛИ Объект.ВзносыПроводки.Количество()> 0
		ИЛИ Объект.НДФЛ.Количество() > 0 ИЛИ Объект.НДФЛПроводки.Количество()> 0
		ИЛИ Объект.Удержания.Количество() > 0 ИЛИ Объект.УдержанияПроводки.Количество()> 0
		ИЛИ Объект.ВзносыФОТ.Количество() > 0 ИЛИ Объект.ВзносыФОТПроводки.Количество()> 0
		ИЛИ Объект.ОтражениеВРеглУчете.Количество()> 0 Тогда
		
		ТекстВопроса = НСтр("ru='Табличные части будут очищены. Продолжить?';uk='Табличні частині будуть очищені. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("ОчиститьТЧПослеОтветаНаВопрос", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПризнакВидимостиПриИзменении(Элемент)
	УстановитьВидимостьКолонок(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоНачислениямСотрудникуПриИзменении(Элемент)
	
	ОтобразитьОтборОтражениеВУчете(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРаботникиОрганизаций

&НаКлиенте
Процедура РаботникиОрганизацииПриАктивизацииСтроки(Элемент)
	
	ТекСтрокаРаботник = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекСтрокаРаботник = Неопределено Тогда
		Возврат;
	КонецЕсли;           
	Если НЕ РаботникТекущейСтроки = ТекСтрокаРаботник.Сотрудник Тогда
		
		ОтобразитьОтборСтрок();
		ОтобразитьОтборОтражениеВУчете(ЭтаФорма);
		
		Если Элементы.Страницы.ТекущаяСтраница.Имя = "ГруппаРасчетныйЛисток"  Тогда	
			ЗаполнитьРасчетныйЛисток(ТекСтрокаРаботник.Сотрудник);
		КонецЕсли;
		РаботникТекущейСтроки = ТекСтрокаРаботник.Сотрудник;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииПередУдалением(Элемент, Отказ)
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "Начисления");
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "НачисленияПроводки");
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "Взносы");
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "ВзносыПроводки");
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "ВзносыФОТ");
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "ВзносыФОТПроводки");
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "Удержания");
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "УдержанияПроводки");
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "НДФЛ");
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "НДФЛПроводки");
	
	ТекСтрокаРаботник = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если Не ТекСтрокаРаботник = Неопределено Тогда
		РаботникТекущейСтроки = ТекСтрокаРаботник.Сотрудник;
	КонецЕсли;
	Объект.КраткийСоставДокумента = "";
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекСтрокаРаботник = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекСтрокаРаботник = Неопределено Тогда
		Возврат;
	КонецЕсли;           
	
	ОтобразитьОтборСтрок();
	ОтобразитьОтборОтражениеВУчете(ЭтаФорма);
	ТекущийСотрудник = ТекСтрокаРаботник.Сотрудник;
	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "ГруппаРасчетныйЛисток"  Тогда	
		ЗаполнитьРасчетныйЛисток(ТекущийСотрудник);
	КонецЕсли;
	//ТЧПриАктивизацииСтроки("РаботникиОрганизации", Элемент);
	УстановитьОтображениеПредупрежденийПриИзмененииКлючевыхРеквизитов();

	Объект.КраткийСоставДокумента = "";

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНачисления

&НаКлиенте
Процедура НачисленияПриИзменении(Элемент)
	НачисленияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НачисленияПриИзмененииНаСервере()
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Начисления", "ВидРасчета", "Результат", "ИтогиНачислено");
КонецПроцедуры

&НаКлиенте
Процедура НачисленияПослеУдаления(Элемент)
	НачисленияПослеУдаленияНаСервере();
КонецПроцедуры

&НаСервере
Процедура НачисленияПослеУдаленияНаСервере()
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Начисления", "ВидРасчета", "Результат", "ИтогиНачислено");
КонецПроцедуры

&НаКлиенте
Процедура НачисленияПередНачаломИзменения(Элемент, Отказ)
	ТЧПриАктивизацииСтроки(Элемент.Имя, Элемент)
КонецПроцедуры

&НаКлиенте
Процедура НачисленияНазначениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Начисления.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Назначение) Тогда
		ТекущиеДанные.ВидЗанятости = ПолучитьВидЗанятости(ТекущиеДанные.Назначение);
		Если ПолучитьДанныеОЗамене(ТекущиеДанные.ДокументОснование) Тогда
			ТекущиеДанные.ВидЗанятости = "Замена";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияВидРасчетаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Начисления.ТекущиеДанные;
	
	УстановитьВидимостьПоказателей(ТекущиеДанные);
	
	Для СчПоказателей = 1 По 6 Цикл
		ТекущиеДанные["Показатель" + СчПоказателей] = 0;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НачисленияРезультатПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Начисления.ТекущиеДанные;
	Если ТекущиеДанные.Результат <> РезультатТекущейСтроки Тогда
		ТекущиеДанные.Авторасчет = Ложь;
		РезультатТекущейСтроки = ТекущиеДанные.Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияДокументОснованиеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Начисления.ТекущиеДанные;
	ДокументОснование = ТекущиеДанные.ДокументОснование;
	
	ЭтоЗамена = ПолучитьДанныеОЗамене(ДокументОснование);
	Если ЭтоЗамена Тогда
		ТекущиеДанные.ВидЗанятости = "Замена";
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНачисленияПроводки

&НаКлиенте
Процедура НачисленияПроводкиПередНачаломИзменения(Элемент, Отказ)
	
	ОбработатьНачалоИзмененияСтроки("НачисленияПроводки");
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияПроводкиСчетДтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета("Дт", "НачисленияПроводки");
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияПроводкиСчетКтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета("Кт", "НачисленияПроводки");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНачисленияПР

&НаКлиенте
Процедура НачисленияПРВидРасчетаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НачисленияПР.ТекущиеДанные;
	
	УстановитьВидимостьПоказателей(ТекущиеДанные);
	
	Для СчПоказателей = 1 По 6 Цикл
		ТекущиеДанные["Показатель" + СчПоказателей] = 0;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НачисленияПРНазначениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НачисленияПР.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Назначение) Тогда
		ТекущиеДанные.ВидЗанятости = ПолучитьВидЗанятости(ТекущиеДанные.Назначение);
		Если ПолучитьДанныеОЗамене(ТекущиеДанные.ДокументОснование) Тогда
			ТекущиеДанные.ВидЗанятости = "Замена";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВзносы

&НаКлиенте
Процедура ВзносыПриИзменении(Элемент)
	ВзносыПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВзносыПриИзмененииНаСервере()
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Взносы", "Налог", "Результат", "ИтогиВзносы");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Взносы", "Налог", "База", "ИтогиВзносыБаза");
КонецПроцедуры

&НаКлиенте
Процедура ВзносыПослеУдаления(Элемент)
	ВзносыПослеУдаленияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВзносыПослеУдаленияНаСервере()
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Взносы", "Налог", "Результат", "ИтогиВзносы");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Взносы", "Налог", "База", "ИтогиВзносыБаза");
КонецПроцедуры

&НаКлиенте
Процедура ВзносыРезультатПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Взносы.ТекущиеДанные;
	Если ТекущиеДанные.Результат <> РезультатТекущейСтроки Тогда
		ТекущиеДанные.Авторасчет = Ложь;
		РезультатТекущейСтроки = ТекущиеДанные.Результат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВзносыПроводки

&НаКлиенте
Процедура ВзносыПроводкиПередНачаломИзменения(Элемент, Отказ)
	
	ОбработатьНачалоИзмененияСтроки("ВзносыПроводки");

КонецПроцедуры

&НаКлиенте
Процедура ВзносыПроводкиСчетДтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета("Дт", "ВзносыПроводки");
	
КонецПроцедуры

&НаКлиенте
Процедура ВзносыПроводкиСчетКтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета("Кт", "ВзносыПроводки");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНДФЛ

&НаКлиенте
Процедура НДФЛПриИзменении(Элемент)
	НДФЛПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НДФЛПриИзмененииНаСервере()
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "НДФЛ", "ДоходНДФЛ", "Доход", "ИтогиНДФЛДоход");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "НДФЛ", "ДоходНДФЛ", "Налог", "ИтогиНДФЛ");
КонецПроцедуры

&НаКлиенте
Процедура НДФЛПослеУдаления(Элемент)
	НДФЛПослеУдаленияНаСервере();
КонецПроцедуры

&НаСервере
Процедура НДФЛПослеУдаленияНаСервере()
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "НДФЛ", "ДоходНДФЛ", "Доход", "ИтогиНДФЛДоход");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "НДФЛ", "ДоходНДФЛ", "Налог", "ИтогиНДФЛ");
КонецПроцедуры

&НаКлиенте
Процедура НДФЛНалогПриИзменении(Элемент)
	ТекущиеДанные = Элементы.НДФЛ.ТекущиеДанные;
	Если ТекущиеДанные.Налог <> РезультатТекущейСтроки Тогда
		ТекущиеДанные.Авторасчет = Ложь;
		РезультатТекущейСтроки = ТекущиеДанные.Налог;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНДФЛ

&НаКлиенте
Процедура НДФЛПроводкиПередНачаломИзменения(Элемент, Отказ)
	
	ОбработатьНачалоИзмененияСтроки("НДФЛПроводки");

КонецПроцедуры

&НаКлиенте
Процедура НДФЛПроводкиСчетДтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета("Дт", "НДФЛПроводки");
	
КонецПроцедуры

&НаКлиенте
Процедура НДФЛПроводкиСчетКтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета("Кт", "НДФЛПроводки");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВзносыФОТ

&НаКлиенте
Процедура ВзносыФОТПриИзменении(Элемент)
	ВзносыФОТПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВзносыФОТПриИзмененииНаСервере()
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "ВзносыФОТ", "Налог", "Результат", "ИтогиВзносыФОТ");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "ВзносыФОТ", "Налог", "База", "ИтогиВзносыБазаФОТ");
КонецПроцедуры

&НаКлиенте
Процедура ВзносыФОТПослеУдаления(Элемент)
	ВзносыФОТПослеУдаленияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВзносыФОТПослеУдаленияНаСервере()
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "ВзносыФОТ", "Налог", "Результат", "ИтогиВзносыФОТ");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "ВзносыФОТ", "Налог", "База", "ИтогиВзносыБазаФОТ");
КонецПроцедуры

&НаКлиенте
Процедура ВзносыФОТРезультатПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ВзносыФОТ.ТекущиеДанные;
	Если ТекущиеДанные.Результат <> РезультатТекущейСтроки Тогда
		ТекущиеДанные.Авторасчет = Ложь;
		РезультатТекущейСтроки = ТекущиеДанные.Результат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВзносыФОТПроводки

&НаКлиенте
Процедура ВзносыФОТПроводкиСчетДтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета("Дт", "ВзносыФОТПроводки");
	
КонецПроцедуры

&НаКлиенте
Процедура ВзносыФОТПроводкиСчетКтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета("Кт", "ВзносыФОТПроводки");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУдержания

&НаКлиенте
Процедура УдержанияПриИзменении(Элемент)
	УдержанияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура УдержанияПриИзмененииНаСервере()
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Удержания", "ВидРасчета", "Результат", "ИтогиУдержано");
КонецПроцедуры

&НаКлиенте
Процедура УдержанияПослеУдаления(Элемент)
	УдержанияПослеУдаленияНаСервере();
КонецПроцедуры

&НаСервере
Процедура УдержанияПослеУдаленияНаСервере()
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Удержания", "ВидРасчета", "Результат", "ИтогиУдержано");
КонецПроцедуры

&НаКлиенте
Процедура УдержанияВидРасчетаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Удержания.ТекущиеДанные;
	
	УстановитьВидимостьПоказателей(ТекущиеДанные);
	
	Для СчПоказателей = 1 По 6 Цикл
		ТекущиеДанные["Показатель" + СчПоказателей] = 0;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УдержанияРезультатПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Удержания.ТекущиеДанные;
	Если ТекущиеДанные.Результат <> РезультатТекущейСтроки Тогда
		ТекущиеДанные.Авторасчет = Ложь;
		РезультатТекущейСтроки = ТекущиеДанные.Результат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУдержанияПроводки

&НаКлиенте
Процедура УдержанияПроводкиПередНачаломИзменения(Элемент, Отказ)
	
	ОбработатьНачалоИзмененияСтроки("УдержанияПроводки");

КонецПроцедуры

&НаКлиенте
Процедура УдержанияПроводкиСчетДтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета("Дт", "УдержанияПроводки");
	
КонецПроцедуры

&НаКлиенте
Процедура УдержанияПроводкиСчетКтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета("Кт", "УдержанияПроводки");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтражениеВРеглУчете

&НаКлиенте
Процедура ОтражениеВРеглУчетеПриИзменении(Элемент)
	ОтражениеВРеглУчетеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтражениеВРеглУчетеПриИзмененииНаСервере()
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиПроводок(ЭтаФорма, Объект, "ОтражениеВРеглУчете", "СчетДт", "СчетКт", "Сумма", "ИтогиОтражениеВРеглУчете");
КонецПроцедуры

&НаКлиенте
Процедура ОтражениеВРеглУчетеПередНачаломИзменения(Элемент, Отказ)
	
	ОбработатьНачалоИзмененияСтроки("ОтражениеВРеглУчете");

КонецПроцедуры

&НаКлиенте
Процедура ОтражениеВРеглУчетеПослеУдаления(Элемент)
	ОтражениеВРеглУчетеПослеУдаленияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтражениеВРеглУчетеПослеУдаленияНаСервере()
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиПроводок(ЭтаФорма, Объект, "ОтражениеВРеглУчете", "СчетДт", "СчетКт", "Сумма", "ИтогиОтражениеВРеглУчете");
КонецПроцедуры

&НаКлиенте
Процедура ОтражениеВРеглУчетеСчетДтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета("Дт", "ОтражениеВРеглУчете");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтражениеВРеглУчетеСчетКтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета("Кт", "ОтражениеВРеглУчете");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРасчетныйЛисток

&НаКлиенте
Процедура ТабличноеПолеРасчетногоЛисткаПриАктивизацииОбласти(Элемент)
	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "ГруппаРасчетныйЛисток"  Тогда	
		ТекСтрокаРаботник = Элементы.РаботникиОрганизации.ТекущиеДанные;
		Если ТекСтрокаРаботник = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ТекущийСотрудник = ТекСтрокаРаботник.Сотрудник;
		ЗаполнитьРасчетныйЛисток(ТекущийСотрудник);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РаботникиОрганизацииЗаполнить(Команда)
	
	Если Объект.РаботникиОрганизации.Количество()>0 Тогда
		
		ТекстВопроса =НСтр("ru='Перед заполнением табличная часть ""Работники"" будет очищена. Продолжить?';uk='Перед заповненням таблична частина ""Працівники"" буде очищена. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеРаботникиПослеОтветаНаВопрос", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ОткрытьФормуОтбораСпискаРаботников(ЭтаФорма, Истина, , , Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияЗаполнитьПоРаботнику(Команда)
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "Начисления");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	СтруктураЗаполнения.Вставить("ОчищатьПроводки", Истина);

			
	ТекстВопроса = НСтр("ru='Перед заполнением из табличной части ""Начисления"" будут удалены данные по сотруднику: ';uk='Перед заповненням з табличної частини ""Нарахування"" будуть вилучені дані по співробітнику: '") + ТекущаяСтрока.Сотрудник + НСтр("ru='. Продолжить?';uk='. Продовжити?'");
	Обработчик = Новый ОписаниеОповещения("АвтозаполнениеНачисленийПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
	ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияЗаполнитьПоВсемРаботникам(Команда)
	
	// по всем сотрудникам ТЧ РаботникиОрганизации
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "Начисления");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	СтруктураЗаполнения.Вставить("ОчищатьПроводки", Истина);
	
	Если Объект.Начисления.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть ""Начисления"" будет очищена. Продолжить?';uk='Перед заповненням таблична частина ""Нарахування"" буде очищена. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеНачисленийПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
				
	КонецЕсли;
	
	НачисленияЗаполнитьНаСервере(СписокСотрудников);
	ЗаполнитьВидыЗанятостиПоСтрокам();

КонецПроцедуры

&НаКлиенте
Процедура НачисленияРассчитатьПоРаботнику(Команда)
	
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Ложь);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНачисленияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНачисленияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.Начисления, СписокСотрудников); 
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НачисленияПроводки, СписокСотрудников ); 
	Записать();
	
	НачисленияРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияРассчитатьПоВсемРаботникам(Команда)
	
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Ложь);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНачисленияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНачисленияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.Начисления, СписокСотрудников); 
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НачисленияПроводки, СписокСотрудников ); 
	Записать();
	
	НачисленияРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияПроводкиРассчитатьПоРаботнику(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Истина);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНачисленияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНачисленияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НачисленияПроводки, СписокСотрудников ); 
	НачисленияПроводкиРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияПроводкиРассчитатьПоВсемРаботникам(Команда)
	
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Истина);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНачисленияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНачисленияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НачисленияПроводки, СписокСотрудников ); 
	НачисленияПроводкиРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура ВзносыЗаполнитьПоРаботнику(Команда)
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "Взносы");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	СтруктураЗаполнения.Вставить("ОчищатьПроводки", Истина);

			
	ТекстВопроса = НСтр("ru='Перед заполнением из табличной части ""Взносы"" будут удалены данные по сотруднику: ';uk='Перед заповненням з табличної частини ""Внески"" будуть вилучені дані по співробітнику: '") + ТекущаяСтрока.Сотрудник + НСтр("ru='. Продолжить?';uk='. Продовжити?'");
	Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВзносыПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
	ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Возврат;

КонецПроцедуры

&НаКлиенте
Процедура ВзносыЗаполнитьПоВсемРаботникам(Команда)
	
	// по всем сотрудникам ТЧ РаботникиОрганизации
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "Взносы");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	СтруктураЗаполнения.Вставить("ОчищатьПроводки", Истина);
	
	Если Объект.Взносы.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть ""Взносы"" будет очищена. Продолжить?';uk='Перед заповненням таблична частина ""Взносы"" буде очищена. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВзносыПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
				
	КонецЕсли;
	
	ВзносыЗаполнитьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура ВзносыРассчитатьПоРаботнику(Команда)
	
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Ложь);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.Взносы, СписокСотрудников); 
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыПроводки, СписокСотрудников ); 
	Записать();
	
	ВзносыРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура ВзносыРассчитатьПоВсемРаботникам(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Ложь);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.Взносы, СписокСотрудников); 
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыПроводки, СписокСотрудников ); 
	Записать();
	
	ВзносыРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура ВзносыПроводкиРассчитатьПоРаботнику(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Истина);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыПроводки, СписокСотрудников); 
	
	ВзносыПроводкиРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура ВзносыПроводкиРассчитатьПоВсемРаботникам(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Истина);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыПроводки, СписокСотрудников); 
	
	ВзносыПроводкиРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура НДФЛЗаполнитьПоРаботнику(Команда)
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "НДФЛ");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	СтруктураЗаполнения.Вставить("ОчищатьПроводки", Истина);

			
	ТекстВопроса = НСтр("ru='Перед заполнением из табличной части ""НДФЛ"" будут удалены данные по сотруднику: ';uk='Перед заповненням з табличної частини ""ПДФО"" будуть вилучені дані по співробітнику: '") + ТекущаяСтрока.Сотрудник + НСтр("ru='. Продолжить?';uk='. Продовжити?'");
	Обработчик = Новый ОписаниеОповещения("АвтозаполнениеНДФЛПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
	ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура НДФЛЗаполнитьПоВсемРаботникам(Команда)
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "НДФЛ");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	СтруктураЗаполнения.Вставить("ОчищатьПроводки", Истина);

	Если Объект.НДФЛ.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть ""НДФЛ"" будет очищена. Продолжить?';uk='Перед заповненням таблична частина ""ПДФО"" буде очищена. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеНДФЛПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
				
	КонецЕсли;
	Если Найти(Команда.Имя,"СНачалаГода") > 0 Тогда
		
		ГодЗаполнения = Год(Объект.ПериодРегистрации);	
		Оповещение = Новый ОписаниеОповещения("УстановитьГодЗавершение", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВводЧисла(Оповещение, ГодЗаполнения, НСтр("ru='Введите год заполнения';uk='Введіть рік заповнення'"), 4, 0);  
		
		Возврат;
	Иначе
		Записать();
		НДФЛЗаполнитьНаСервере(СтруктураЗаполнения.СписокСотрудников);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НДФЛРассчитатьПоРаботнику(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Ложь);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНДФЛПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНДФЛПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.НДФЛ, СписокСотрудников); 
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НДФЛПроводки, СписокСотрудников ); 
	Записать();
	
	НДФЛРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура НДФЛРассчитатьПоВсемРаботникам(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Ложь);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНачисленияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНачисленияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.НДФЛ, СписокСотрудников); 
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НДФЛПроводки, СписокСотрудников ); 
	Записать();
	
	НДФЛРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура НДФЛПроводкиРассчитатьПоРаботнику(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Истина);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНДФЛПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНДФЛПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НДФЛПроводки, СписокСотрудников); 
	
	НДФЛПроводкиРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура НДФЛПроводкиРассчитатьПоВсемРаботникам(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Истина);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНачисленияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНачисленияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НДФЛПроводки, СписокСотрудников); 
	
	НДФЛПроводкиРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура УдержанияЗаполнитьПоРаботнику(Команда)
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "Удержания");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	СтруктураЗаполнения.Вставить("ОчищатьПроводки", Истина);

			
	ТекстВопроса = НСтр("ru='Перед заполнением из табличной части ""Удержания"" будут удалены данные по сотруднику: ';uk='Перед заповненням з табличної частини ""Утримання"" будуть вилучені дані по співробітнику: '") + ТекущаяСтрока.Сотрудник + НСтр("ru='. Продолжить?';uk='. Продовжити?'");
	Обработчик = Новый ОписаниеОповещения("АвтозаполнениеУдержанияПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
	ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Возврат;
КонецПроцедуры

&НаКлиенте
Процедура УдержанияЗаполнитьПоВсемРаботникам(Команда)
	
	// по всем сотрудникам ТЧ РаботникиОрганизации
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "Удержания");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	СтруктураЗаполнения.Вставить("ОчищатьПроводки", Истина);
	
	Если Объект.Удержания.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть ""Удержания"" будет очищена. Продолжить?';uk='Перед заповненням таблична частина ""Утримання"" буде очищена. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеУдержанияПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
				
	КонецЕсли;
	
	УдержанияЗаполнитьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура УдержанияРассчитатьПоРаботнику(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Ложь);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетУдержанияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетУдержанияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.Удержания, СписокСотрудников); 
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.УдержанияПроводки, СписокСотрудников ); 
	Записать();
	
	УдержанияРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура УдержанияРассчитатьПоВсемРаботникам(Команда)
	
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Ложь);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетУдержанияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетУдержанияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.Удержания, СписокСотрудников); 
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.УдержанияПроводки, СписокСотрудников); 
	Записать();
	
	УдержанияРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура УдержанияПроводкиРассчитатьПоРаботнику(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Истина);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетУдержанияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетУдержанияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.УдержанияПроводки, СписокСотрудников); 
	
	УдержанияПроводкиРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура УдержанияПроводкиРассчитатьПоВсемРаботникам(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Истина);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетУдержанияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетУдержанияПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.УдержанияПроводки, СписокСотрудников); 
	
	УдержанияПроводкиРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура ВзносыФОТЗаполнитьПоРаботнику(Команда)
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "ВзносыФОТ");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	СтруктураЗаполнения.Вставить("ОчищатьПроводки", Истина);

			
	ТекстВопроса = НСтр("ru='Перед заполнением из табличной части ""Взносы ФОТ"" будут удалены данные по сотруднику: ';uk='Перед заповненням з табличної частини ""Внески ФОП"" будуть вилучені дані по співробітнику: '") + ТекущаяСтрока.Сотрудник + НСтр("ru='. Продолжить?';uk='. Продовжити?'");
	Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВзносыФОТПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
	ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Возврат;
КонецПроцедуры

&НаКлиенте
Процедура ВзносыФОТЗаполнитьПоВсемРаботникам(Команда)
	
	// по всем сотрудникам ТЧ РаботникиОрганизации
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "ВзносыФОТ");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	СтруктураЗаполнения.Вставить("ОчищатьПроводки", Истина);
	
	Если Объект.ВзносыФОТ.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть ""Взносы ФОТ"" будет очищена. Продолжить?';uk='Перед заповненням таблична частина ""Внески ФОП"" буде очищена. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВзносыФОТПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
				
	КонецЕсли;
	
	ВзносыФОТЗаполнитьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура ВзносыФОТРассчитатьПоРаботнику(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Ложь);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.ВзносыФОТ, СписокСотрудников); 
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыФОТПроводки, СписокСотрудников ); 
	Записать();
	
	ВзносыФОТРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура ВзносыФОТРассчитатьПоВсемРаботникам(Команда)
	
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Ложь);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.ВзносыФОТ, СписокСотрудников); 
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыФОТПроводки, СписокСотрудников); 
	Записать();
	
	ВзносыФОТРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура ВзносыФОТПроводкиРассчитатьПоРаботнику(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Истина);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыФОТПроводки, СписокСотрудников); 
	
	ВзносыФОТПроводкиРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура ВзносыФОТПроводкиРассчитатьПоВсемРаботникам(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Истина);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыФОТПроводки, СписокСотрудников); 
	
	ВзносыФОТПроводкиРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура ФормаЗаполнитьПоРаботнику(Команда)
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	СтруктураЗаполнения.Вставить("ОчищатьПроводки", Истина);

			
	ТекстВопроса = НСтр("ru='Перед заполнением из табличных частей будут удалены данные по сотруднику: ';uk='Перед заповненням з табличних частин будуть вилучені дані по співробітнику: '") + ТекущаяСтрока.Сотрудник + НСтр("ru='. Продолжить?';uk='. Продовжити?'");
	Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВсеПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
	ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Возврат;
		
КонецПроцедуры

&НаКлиенте
Процедура ФормаЗаполнитьПоВсемРаботникам(Команда)
	
	// по всем сотрудникам ТЧ РаботникиОрганизации
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	СтруктураЗаполнения.Вставить("ОчищатьПроводки", Истина);
	
	Если Объект.Начисления.Количество() > 0 ИЛИ Объект.НачисленияПроводки.Количество()
		ИЛИ Объект.Взносы.Количество() > 0 ИЛИ Объект.ВзносыПроводки.Количество()
		ИЛИ Объект.НДФЛ.Количество() > 0 ИЛИ Объект.НДФЛПроводки.Количество()
		ИЛИ Объект.Удержания.Количество() > 0 ИЛИ Объект.УдержанияПроводки.Количество()
		ИЛИ Объект.ВзносыФОТ.Количество() > 0 ИЛИ Объект.ВзносыФОТПроводки.Количество() Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличные части будут очищены. Продолжить?';uk='Перед заповненням табличні частині будуть очищені. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВсеПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
				
	КонецЕсли;
	
	ВсеЗаполнитьНаСервере(СписокСотрудников);
	ЗаполнитьВидыЗанятостиПоСтрокам();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаРассчитатьПоРаботнику(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Ложь);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВсеПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВсеПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	СписокТабличныхЧастей = СписокТабличныхЧастейДокументаДляУдаленияПоУсловию();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект[ИмяТабличнойЧасти], СписокСотрудников);
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ИмяТабличнойЧасти + "Проводки"], СписокСотрудников);
	КонецЦикла;
	
	Записать();
	
	ВсеРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура ФормаРассчитатьПоВсемРаботникам(Команда)
	
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Ложь);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличные части можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличні частини можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВсеПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличные части можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличні частини можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВсеПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	СписокТабличныхЧастей = СписокТабличныхЧастейДокументаДляУдаленияПоУсловию();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект[ИмяТабличнойЧасти], СписокСотрудников);
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ИмяТабличнойЧасти + "Проводки"], СписокСотрудников);
	КонецЦикла;
	
	Записать();
	
	ВсеРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура ФормаЗаполнитьРассчитатьВсе(Команда)
	
	Перем НеобходимыеДанные;
	
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
		
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличные части можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличні частини можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("ЗаполнитьРассчитатьВсеВсеПослеОтветаНаВопросЗаписать", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда     
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличные части можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличні частини можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("ЗаполнитьРассчитатьВсеВсеПослеОтветаНаВопросЗаписать", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	Если Объект.Начисления.Количество() > 0 ИЛИ Объект.НачисленияПроводки.Количество() > 0
		ИЛИ Объект.Взносы.Количество() > 0 ИЛИ Объект.ВзносыПроводки.Количество()> 0
		ИЛИ Объект.НДФЛ.Количество() > 0 ИЛИ Объект.НДФЛПроводки.Количество()> 0
		ИЛИ Объект.Удержания.Количество() > 0 ИЛИ Объект.УдержанияПроводки.Количество()> 0
		ИЛИ Объект.ВзносыФОТ.Количество() > 0 ИЛИ Объект.ВзносыФОТПроводки.Количество()> 0
		ИЛИ Объект.РаботникиОрганизации.Количество() > 0 
		ИЛИ Объект.ОтражениеВРеглУчете.Количество()> 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличные части будут очищены. Продолжить?';uk='Перед заповненням табличні частині будуть очищені. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("ЗаполнитьРассчитатьВсеВсеПослеОтветаНаВопросОчистить", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьРассчитатьВсеНаСервере();
	ЗаполнитьВидыЗанятостиПоСтрокам();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаПроводкиРассчитатьПоВсемРаботникам(Команда)
	Если Не РасчетДокументаРазрешен() Тогда
		Возврат
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ТолькоПроводки", Истина);
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличные части можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличні частини можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетПроводкиПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличные части можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличні частини можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетПроводкиПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	СписокТабличныхЧастей = СписокТабличныхЧастейДокументаДляУдаленияПоУсловию();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ИмяТабличнойЧасти + "Проводки"], СписокСотрудников);
	КонецЦикла;
	
	Записать();
	
	ВсеПроводкиРассчитатьНаСервере(СписокСотрудников);
КонецПроцедуры

&НаКлиенте
Процедура ОтражениеВУчетеСформироватьПроводки(Команда)
		
	Если Объект.ОтражениеВРеглУчете.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Текущие проводки будут удалены. Продолжить?';uk='Поточні проводки будуть видалені. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеПроводкиПослеОтветаНаВопрос", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	КонецЕсли;
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетПроводкиПослеОтветаНаВопросЗаписать", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетПроводкиПослеОтветаНаВопросЗаписать", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
		
	АвтозаполнениеПроводокНаСервере();
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	Если Объект.Начисления.Количество() > 0 ИЛИ Объект.НачисленияПроводки.Количество() > 0
		ИЛИ Объект.Взносы.Количество() > 0 ИЛИ Объект.ВзносыПроводки.Количество()> 0
		ИЛИ Объект.НДФЛ.Количество() > 0 ИЛИ Объект.НДФЛПроводки.Количество()> 0
		ИЛИ Объект.Удержания.Количество() > 0 ИЛИ Объект.УдержанияПроводки.Количество()> 0
		ИЛИ Объект.ВзносыФОТ.Количество() > 0 ИЛИ Объект.ВзносыФОТПроводки.Количество()> 0
		ИЛИ Объект.РаботникиОрганизации.Количество() > 0 
		ИЛИ Объект.ОтражениеВРеглУчете.Количество()> 0 Тогда
		
		ТекстВопроса = НСтр("ru='Табличные части будут очищены. Продолжить?';uk='Табличні частині будуть очищені. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("ОчиститьТаблицыЗавершениеБезДействий", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсе(Команда)
	
	Объект.ПоказатьБазовыйПериод            	= Истина;
	Объект.ПоказатьВидУчетаВремениДляСредней	= Истина;
	Объект.ПоказатьГрафикРаботы					= Истина;
	Объект.ПоказатьДополнительныеДанные        	= Истина;
	Объект.ПоказатьНормуВремени				 	= Истина;
	Объект.ПоказатьОтработанноеВремя		 	= Истина;
	Объект.ПоказатьПериодДействия			 	= Истина;
	
	УстановитьВидимостьКолонок(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьВсе(Команда)
	
	Объект.ПоказатьБазовыйПериод            	= Ложь;
	Объект.ПоказатьВидУчетаВремениДляСредней	= Ложь;
	Объект.ПоказатьГрафикРаботы					= Ложь;
	Объект.ПоказатьДополнительныеДанные        	= Ложь;
	Объект.ПоказатьНормуВремени				 	= Ложь;
	Объект.ПоказатьОтработанноеВремя		 	= Ложь;
	Объект.ПоказатьПериодДействия			 	= Ложь;
	
	УстановитьВидимостьКолонок(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтбор(Команда)
	Объект.ОтборПоНачислениямСотруднику = Не Объект.ОтборПоНачислениямСотруднику;
	Если Объект.ОтборПоНачислениямСотруднику Тогда
		Элементы.УстановитьОтбор.Картинка = БиблиотекаКартинок.СостояниеПользователя02;
	Иначе
		Элементы.УстановитьОтбор.Картинка = БиблиотекаКартинок.ЗначокФизическиеЛица32;
	КонецЕсли;
	
	ОтобразитьОтборСтрок();
	ОтобразитьОтборОтражениеВУчете(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	УправлениеФормой(ЭтаФорма);
	
	УправлениеВидимостьюПоказателей();
	УстановитьВидимостьКолонок(ЭтаФорма);
	ЗаполнитьДобавленныеКолонкиТаблицФормы();
	
	УстановитьСостояниеДокумента();

КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма); 	
			
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект	 = Форма.Объект; 
	
	Элементы.НДФЛНДФЛЗаполнитьПоВсемРаботникамСНачалаГода.Доступность = Объект.ЭтоПересчетНДФЛ;
	Элементы.НДФЛНДФЛЗаполнитьПоРаботникуСНачалаГода.Доступность 		= Объект.ЭтоПересчетНДФЛ;
	
	Если Объект.ПредварительныйРасчет Тогда
		Элементы.ГруппаСтраницыОбщая.ТекущаяСтраница 	= Элементы.ГруппаСтраницаПредварительныйРасчет;
	Иначе
		Элементы.ГруппаСтраницыОбщая.ТекущаяСтраница 	= Элементы.ГруппаСтраницаВсеЗакладки;
	КонецЕсли;
	
	Если Объект.ОтборПоНачислениямСотруднику Тогда
		Элементы.УстановитьОтбор.Картинка = БиблиотекаКартинок.СостояниеПользователя02;
	Иначе
		Элементы.УстановитьОтбор.Картинка = БиблиотекаКартинок.ЗначокФизическиеЛица32;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьКолонок(Форма)

	Элементы = Форма.Элементы;
	Объект	 = Форма.Объект; 
	
	Элементы.НачисленияГруппаПериод.Видимость 				= Объект.ПоказатьПериодДействия;
	Элементы.НачисленияГруппаБазовийПериод.Видимость 		= Объект.ПоказатьБазовыйПериод;
	Элементы.НачисленияГруппаОтработано.Видимость 			= Объект.ПоказатьОтработанноеВремя;
	Элементы.НачисленияГруппаНорма.Видимость 				= Объект.ПоказатьНормуВремени;
	Элементы.НачисленияКалендарныеДни.Видимость 			= Объект.ПоказатьНормуВремени;
	Элементы.НачисленияГруппаНормаЗаМесяц.Видимость 		= Объект.ПоказатьНормуВремени;	
	Элементы.НачисленияГрафикРаботы.Видимость 				= Объект.ПоказатьГрафикРаботы;
	Элементы.НачисленияВидУчетаВремениДляСредней.Видимость 	= Объект.ПоказатьВидУчетаВремениДляСредней;
	Элементы.НачисленияДополнительныеДанные.Видимость 		= Объект.ПоказатьДополнительныеДанные;
	
	Элементы.НачисленияГруппаПериодПР.Видимость 			= Объект.ПоказатьПериодДействия;
	Элементы.НачисленияГруппаБазовийПериодПР.Видимость 		= Объект.ПоказатьБазовыйПериод;
	Элементы.НачисленияГруппаОтработаноПР.Видимость 		= Объект.ПоказатьОтработанноеВремя;
	Элементы.НачисленияГруппаНормаПР.Видимость 				= Объект.ПоказатьНормуВремени;
	Элементы.НачисленияКалендарныеДниПР.Видимость 			= Объект.ПоказатьНормуВремени;
	Элементы.НачисленияГруппаНормаЗаМесяцПР.Видимость 		= Объект.ПоказатьНормуВремени;	
	Элементы.НачисленияГрафикРаботыПР.Видимость 			= Объект.ПоказатьГрафикРаботы;
	Элементы.НачисленияВидУчетаВремениДляСреднейПР.Видимость= Объект.ПоказатьВидУчетаВремениДляСредней;
	Элементы.НачисленияДополнительныеДанныеПР.Видимость 	= Объект.ПоказатьДополнительныеДанные;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблицФормы()
	
	ЗаполнитьДобавленныеКолонкиТаблиц("НачисленияПроводки");
	ЗаполнитьДобавленныеКолонкиТаблиц("ВзносыПроводки");
	ЗаполнитьДобавленныеКолонкиТаблиц("ВзносыФОТПроводки");
	ЗаполнитьДобавленныеКолонкиТаблиц("НДФЛПроводки");
	ЗаполнитьДобавленныеКолонкиТаблиц("УдержанияПроводки");
	ЗаполнитьДобавленныеКолонкиТаблиц("ОтражениеВРеглУчете");
	
КонецПроцедуры

&НаКлиенте
Функция РасчетДокументаРазрешен()
	
	Возврат ПолучитьДокументыРасчетаЗаВесьМесяц();

КонецФункции

// Выполняет ПолучитьДокументыРасчетаЗаВесьМесяц
//
&НаСервере
Функция ПолучитьДокументыРасчетаЗаВесьМесяц()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("Сотрудники", Объект.РаботникиОрганизации.Выгрузить(, "Сотрудник"));
	Запрос.УстановитьПараметр("ЭтоПересчетНДФЛ", Объект.ЭтоПересчетНДФЛ);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ДокументНачисление.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.РаботникиОрганизации КАК ДокументНачисление
		|ГДЕ
		|	ДокументНачисление.Ссылка.ПериодРегистрации = &ПериодРегистрации
		|	И ДокументНачисление.Ссылка <> &Ссылка
		|	И ДокументНачисление.Ссылка.Проведен
		|	И ДокументНачисление.Сотрудник В(&Сотрудники)
		|	И НЕ ДокументНачисление.Ссылка.ЭтоПересчетНДФЛ <> &ЭтоПересчетНДФЛ
		|	И НЕ ДокументНачисление.Ссылка.ПредварительныйРасчет
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументНачисление.Ссылка";
	
	КонфликтныеДокументы = Запрос.Выполнить().Выбрать();
	Если КонфликтныеДокументы.Количество() = 0 Тогда
		Возврат Истина;
	Иначе
		СтрокаЗаголовок = НСтр("ru='Расчет невозможен, так как выполнено начисление зарплаты за ';uk='Розрахунок неможливий, тому що виконане нарахування зарплати за '") 
			+ Формат(Объект.ПериодРегистрации,"ДФ=ММММ") + "." + НСтр("ru=' Для расчета можно отменить проведение следующих документов:';uk=' Для розрахунку можливо скасувати проведення наступних документів:'");
		ОбщегоНазначенияБПКлиентСервер.СообщитьОбОшибке(СтрокаЗаголовок);
		
		Пока КонфликтныеДокументы.Следующий() Цикл
		    ОбщегоНазначенияБПКлиентСервер.СообщитьОбОшибке(КонфликтныеДокументы.Ссылка)
		КонецЦикла;
		Возврат Ложь;
	КонецЕсли;
		
КонецФункции

&НаСервере
Процедура УстановитьОтображениеПредупрежденийПриИзмененииКлючевыхРеквизитов()
	
	Если Объект.РаботникиОрганизации.Количество() > 0 
		ИЛИ Объект.Начисления.Количество() > 0 ИЛИ Объект.НачисленияПроводки.Количество() > 0 
		ИЛИ Объект.Взносы.Количество() > 0 ИЛИ Объект.ВзносыПроводки.Количество() > 0 
		ИЛИ Объект.ВзносыФОТ.Количество() > 0 ИЛИ Объект.ВзносыФОТПроводки.Количество() > 0 
		ИЛИ Объект.Удержания.Количество() > 0 ИЛИ Объект.УдержанияПроводки.Количество() > 0 
		ИЛИ Объект.НДФЛ.Количество() > 0 ИЛИ Объект.НДФЛПроводки.Количество() > 0 Тогда
		
		ОтображениеПредупреждения = ОтображениеПредупрежденияПриРедактировании.Отображать;
	Иначе
		ОтображениеПредупреждения = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	КонецЕсли;
	
	Элементы.Организация.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупреждения;
	Элементы.МесяцСтрока.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупреждения;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьОтборСтрок()
	
	Если Объект.ОтборПоНачислениямСотруднику И Элементы.РаботникиОрганизации.ТекущиеДанные <> Неопределено Тогда 
		Если Не Объект.ПредварительныйРасчет Тогда
		    Элементы.Начисления.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
		    Элементы.НачисленияПроводки.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
		    Элементы.Взносы.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
		    Элементы.ВзносыПроводки.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
		    Элементы.ВзносыФОТ.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
		    Элементы.ВзносыФОТПроводки.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
		    Элементы.Удержания.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
		    Элементы.УдержанияПроводки.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
		    Элементы.НДФЛ.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
		    Элементы.НДФЛПроводки.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
		Иначе
	    	Элементы.НачисленияПР.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
		КонецЕсли;
	Иначе
		Если Не Объект.ПредварительныйРасчет Тогда
		    Элементы.Начисления.ОтборСтрок = Неопределено;
		    Элементы.НачисленияПроводки.ОтборСтрок = Неопределено;
		    Элементы.Взносы.ОтборСтрок = Неопределено;
		    Элементы.ВзносыПроводки.ОтборСтрок = Неопределено;
		    Элементы.ВзносыФОТ.ОтборСтрок = Неопределено;
		    Элементы.ВзносыФОТПроводки.ОтборСтрок = Неопределено;
		    Элементы.Удержания.ОтборСтрок = Неопределено;
		    Элементы.УдержанияПроводки.ОтборСтрок = Неопределено;
		    Элементы.НДФЛ.ОтборСтрок = Неопределено;
		    Элементы.НДФЛПроводки.ОтборСтрок = Неопределено;
		Иначе
		    Элементы.НачисленияПР.ОтборСтрок = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьГодЗавершение(ГодЗаполнения, ДополнительныеПараметры) Экспорт
	
	Если ГодЗаполнения = 0 ИЛИ ГодЗаполнения = Неопределено Тогда
		Возврат
	КонецЕсли; 	
	Записать();
	НДФЛЗаполнитьНаСервере(ДополнительныеПараметры.СписокСотрудников, Истина, ГодЗаполнения);

КонецПроцедуры

// Удаляет начисления по работнику, все или автоматически заполняемые
// Параметры:
//   Сотрудник - СправочникСсылка.Физлица
//   УдалятьВсе - булево, если Истина - удаляются все начисления по физлицу,
//				например, при его удалении из списка.
//				Если Ложь - удаляются только те, которые вводятся "автоматически",
//				например, при редактировании данных по строке табличной части 
//				со списком работников
&НаСервере
Процедура УдалитьПараметрыРасчетаПоРаботнику(Сотрудник, ИмяТабЧасти)
	
	ИНАГРО_ЗарплатаКадрыРасширенный.УдалитьПараметрыРасчетаПоРаботнику(Сотрудник, ИмяТабЧасти, Объект)
	
КонецПроцедуры  // УдалитьПараметрыРасчетаПоРаботнику

&НаСервере
Функция ПолучитьСведенияОВидеРасчета(ВидРасчета)
	
	Возврат ИНАГРО_ЗарплатаКадрыРасширенныйПовтИсп.ПолучитьСведенияОВидеРасчетаСхемыМотивации(ВидРасчета);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВидЗанятости(Назначение)
	
	Возврат Назначение.ИНАГРО_ВидЗанятости;
	
КонецФункции

&НаКлиенте
Функция ПолучитьДанныеОЗамене(ДокументОснование)
	
	ЭтоЗамена = Ложь;
	Если ЗначениеЗаполнено(ДокументОснование) 
		И ТипЗнч(ДокументОснование) = ПредопределенноеЗначение("Документ.ИНАГРО_ЗаменыРаботниковОрганизаций.ПустаяСсылка") Тогда
		ЭтоЗамена = Истина;
	КонецЕсли;
	
	Возврат ЭтоЗамена;	
КонецФункции

&НаСервере
Процедура УстановитьВидимостьПоказателейНаСервере(ТекСтрока)
	
	СведенияОВидеРасчета = ПолучитьСведенияОВидеРасчета(ТекСтрока.ВидРасчета);
	ЕстьПоказатели = Ложь;
	Для СчПоказателей = 1 По 6 Цикл
		ТекСтрока["Показатель" + СчПоказателей + "Видимость"] = Ложь;
		Если СчПоказателей <= СведенияОВидеРасчета["КоличествоПоказателей"] Тогда
			Если СведенияОВидеРасчета["Показатель" + СчПоказателей + "Видимость"] Тогда
				ТекСтрока.ЕстьПоказатели = Истина;
				ТекСтрока["Показатель" + СчПоказателей + "Видимость"] = Истина;
				ТекСтрока["ИмяПоказатель" + СчПоказателей] = СведенияОВидеРасчета["Показатель" + СчПоказателей + "Наименование"];
			Иначе
				ТекСтрока["Показатель" + СчПоказателей + "Видимость"] = Ложь;

			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьПоказателей(ТекСтрока)
	
	СведенияОВидеРасчета = ПолучитьСведенияОВидеРасчета(ТекСтрока.ВидРасчета);
	ЕстьПоказатели = Ложь;
	Для СчПоказателей = 1 По 6 Цикл
		ТекСтрока["Показатель" + СчПоказателей + "Видимость"] = Ложь;
		Если СчПоказателей <= СведенияОВидеРасчета["КоличествоПоказателей"] Тогда
			Если СведенияОВидеРасчета["Показатель" + СчПоказателей + "Видимость"] Тогда
				ТекСтрока.ЕстьПоказатели = Истина;
				ТекСтрока["Показатель" + СчПоказателей + "Видимость"] = Истина;
				ТекСтрока["ИмяПоказатель" + СчПоказателей] = СведенияОВидеРасчета["Показатель" + СчПоказателей + "Наименование"];
			Иначе
				ТекСтрока["Показатель" + СчПоказателей + "Видимость"] = Ложь;

			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостьюПоказателей()
	
	Для Каждого ТекСтрока Из Объект.Начисления Цикл
		УстановитьВидимостьПоказателейНаСервере(ТекСтрока);
	КонецЦикла;
	
	Для Каждого ТекСтрока Из Объект.Удержания Цикл
		УстановитьВидимостьПоказателейНаСервере(ТекСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасчетныйЛисток(ТекущийСотрудник = Неопределено, Редактирование = Ложь)
	
	Если ТекущийСотрудник = Неопределено Тогда
		ТабличноеПолеРасчетногоЛистка = Элементы.ТабличноеПолеРасчетногоЛистка;
		ТабличноеПолеРасчетногоЛистка.Очистить();
		Возврат;
	КонецЕсли; 
	
	Документ = РеквизитФормыВЗначение("Объект");
	Если ТекущийСотрудник <> РаботникТекущейСтроки Или Редактирование Тогда
		ВременныйТабличныйДокумент = Документ.ЗаполнитьТаблицуРасчетногоЛистка(ТекущийСотрудник);
		ТабличноеПолеРасчетногоЛистка = Элементы.ТабличноеПолеРасчетногоЛистка;
		ТабличноеПолеРасчетногоЛистка.Очистить();
		ТабличноеПолеРасчетногоЛистка.Вывести(ВременныйТабличныйДокумент);
	КонецЕсли;
	ЗначениеВРеквизитФормы(Документ, "Объект");	

КонецПроцедуры // ЗаполнитьРасчетныйЛисток()

&НаКлиенте
Процедура ЗаполнитьВидыЗанятостиПоСтрокам()
	
	Для Каждого ТекСтрока Из Объект.Начисления Цикл
		ТекСтрока.ВидЗанятости = ПолучитьВидЗанятости(ТекСтрока.Назначение);
		Если ПолучитьДанныеОЗамене(ТекСтрока.ДокументОснование) Тогда
			ТекСтрока.ВидЗанятости = "Замена";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьГрупповоеЗаполнение(Параметр)
	
	ТаблицаСотрудников = ПолучитьИзВременногоХранилища(Параметр.АдресТЗ);
	
	Для Каждого Строка Из ТаблицаСотрудников Цикл
		Если Не Строка.ВидЗанятости = Перечисления.ВидыЗанятости.ВнутреннееСовместительство Тогда
			СтрокаРаботники = Объект.РаботникиОрганизации.Добавить();
			СтрокаРаботники.Сотрудник = Строка.Сотрудник;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьОтборОтражениеВУчете(Форма)

	Элементы = Форма.Элементы;
	Объект	 = Форма.Объект; 
	
	Если Объект.ОтборПоНачислениямСотруднику Тогда
		СчетОтбора = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате");
		Если Объект.ОтборПоНачислениямСотруднику И Элементы.РаботникиОрганизации.ТекущиеДанные <> Неопределено Тогда 
			Элементы.ОтражениеВРеглУчете.ОтборСтрок = Новый ФиксированнаяСтруктура("СубконтоКт1", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
		Иначе
			Элементы.ОтражениеВРеглУчете.ОтборСтрок = Новый ФиксированнаяСтруктура("СчетКт", СчетОтбора);
		КонецЕсли;
	Иначе
		Элементы.ОтражениеВРеглУчете.ОтборСтрок = Неопределено;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеСчета(ДтКт, ИмяТЧ)

	ТекущиеДанные = Элементы[ИмяТЧ].ТекущиеДанные;
	
	ПоляФормы = Новый Структура("Субконто1,Субконто2,Субконто3");
	ПоляФормы.Субконто1 = ИмяТЧ + "Субконто" + ДтКт + "1";
	ПоляФормы.Субконто2 = ИмяТЧ + "Субконто" + ДтКт + "2";
	ПоляФормы.Субконто3 = ИмяТЧ + "Субконто" + ДтКт + "3";
	БухгалтерскийУчетКлиентСервер.ПриВыбореСчета(ТекущиеДанные["Счет" + ДтКт], ЭтаФорма, ПоляФормы, Неопределено, Истина);
	
	ПоляОбъекта = Новый Структура("Субконто1,Субконто2,Субконто3");
	ПоляОбъекта.Субконто1      = "Субконто" + ДтКт + "1";
	ПоляОбъекта.Субконто2      = "Субконто" + ДтКт + "2";
	ПоляОбъекта.Субконто3      = "Субконто" + ДтКт + "3";
	//ПоляОбъекта.Подразделение  = "Подразделение" + ДтКт;
	//ПоляОбъекта.Организация    = Объект.Организация;
	БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(ТекущиеДанные["Счет" + ДтКт], ТекущиеДанные, ПоляОбъекта, Истина);
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, ДтКт, ИмяТЧ);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконто(Форма, ДтКт, ИмяТЧ)

	ИдСтроки = Форма.Элементы[ИмяТЧ].ТекущаяСтрока;
	Если ИдСтроки <> Неопределено Тогда
		СтрокаТаблицы = Форма.Объект[ИмяТЧ].НайтиПоИдентификатору(ИдСтроки);
		ПараметрыДокумента = ПолучитьСписокПараметров(Форма, СтрокаТаблицы, "Субконто" + ДтКт + "%Индекс%", "Счет" + ДтКт);
		БухгалтерскийУчетКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(
			Форма, СтрокаТаблицы, "Субконто" + ДтКт + "%Индекс%", ИмяТЧ + "Субконто" + ДтКт + "%Индекс%", ПараметрыДокумента);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиИДоступностьСубконто(Форма, Счет, ИмяТЧ, ДтКт = "", ЭтоТаблица = Ложь)

	ПоляФормы = Новый Структура("Субконто1,Субконто2,Субконто3");
	ПоляФормы.Субконто1 = ИмяТЧ + "Субконто" + ДтКт + "1";
	ПоляФормы.Субконто2 = ИмяТЧ + "Субконто" + ДтКт + "2";
	ПоляФормы.Субконто3 = ИмяТЧ + "Субконто" + ДтКт + "3";
	
	БухгалтерскийУчетКлиентСервер.ПриВыбореСчета(Счет, Форма, ПоляФормы, Неопределено, ЭтоТаблица);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСписокПараметров(Форма, Объект, ШаблонИмяПоляОбъекта, ИмяПоляСчетУчета)

	СписокПараметров = Новый Структура;
	СписокПараметров.Вставить("Организация"   , Форма.Объект.Организация);
	СписокПараметров.Вставить("СчетУчета",      Объект[ИмяПоляСчетУчета]);

	Возврат СписокПараметров;

КонецФункции

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц(ИмяТаблицы)
	
	Для Каждого СтрокаТаблицы Из Объект[ИмяТаблицы] Цикл
		УстановитьДоступностьСубконто(СтрокаТаблицы);
	КонецЦикла;
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьДоступностьСубконто(СтрокаТаблицы)
	
	ПоляОбъекта = Новый Структура("Субконто1,Субконто2,Субконто3");
	ПоляОбъекта.Субконто1      = "СубконтоДт1";
	ПоляОбъекта.Субконто2      = "СубконтоДт2";
	ПоляОбъекта.Субконто3      = "СубконтоДт3";

	БухгалтерскийУчетКлиентСервер.УстановитьДоступностьСубконто(СтрокаТаблицы.СчетДт, СтрокаТаблицы, ПоляОбъекта);
	
	ПоляОбъекта = Новый Структура("Субконто1,Субконто2,Субконто3");
	ПоляОбъекта.Субконто1      = "СубконтоКт1";
	ПоляОбъекта.Субконто2      = "СубконтоКт2";
	ПоляОбъекта.Субконто3      = "СубконтоКт3";

	БухгалтерскийУчетКлиентСервер.УстановитьДоступностьСубконто(СтрокаТаблицы.СчетКт, СтрокаТаблицы, ПоляОбъекта);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНачалоИзмененияСтроки(ИмяТЧ)
	
	СтрокаТаблицы = Элементы[ИмяТЧ].ТекущиеДанные;

	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, СтрокаТаблицы.СчетДт, ИмяТЧ, "Дт", Истина);
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, СтрокаТаблицы.СчетКт, ИмяТЧ, "Кт", Истина);
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьИтогиПоДокументу()

	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Начисления", "ВидРасчета", "Результат", "ИтогиНачислено");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Удержания", "ВидРасчета", "Результат", "ИтогиУдержано");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Взносы", "Налог", "Результат", "ИтогиВзносы");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Взносы", "Налог", "База", "ИтогиВзносыБаза");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "ВзносыФОТ", "Налог", "Результат", "ИтогиВзносыФОТ");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "ВзносыФОТ", "Налог", "База", "ИтогиВзносыБазаФОТ");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "НДФЛ", "ДоходНДФЛ", "Доход", "ИтогиНДФЛДоход");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "НДФЛ", "ДоходНДФЛ", "Налог", "ИтогиНДФЛ");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиПроводок(ЭтаФорма, Объект, "ОтражениеВРеглУчете", "СчетДт", "СчетКт", "Сумма", "ИтогиОтражениеВРеглУчете");
	
КонецПроцедуры

#Область ПроцедурыИФункцииОбработкаВопросов

&НаКлиенте
Процедура АвтозаполнениеРаботникиПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Объект[ИмяТабличнойЧасти].Очистить();
	КонецЦикла;
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ОткрытьФормуОтбораСпискаРаботников(ЭтаФорма, Истина, , , Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеНачисленийПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Найти(ПараметрыВыполнения.Команда.Имя,"ПоРаботнику") > 0 Тогда

		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ], ПараметрыВыполнения.СписокСотрудников);
		Если ПараметрыВыполнения.ОчищатьПроводки Тогда
			ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ + "Проводки"], ПараметрыВыполнения.СписокСотрудников);
		КонецЕсли;
	Иначе
		Объект[ПараметрыВыполнения.ИмяТЧ].Очистить();
		Если ПараметрыВыполнения.ОчищатьПроводки Тогда
			Объект[ПараметрыВыполнения.ИмяТЧ + "Проводки"].Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	НачисленияЗаполнитьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	ЗаполнитьВидыЗанятостиПоСтрокам();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АвторасчетНачисленияПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ПараметрыВыполнения.ТолькоПроводки Тогда
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НачисленияПроводки, ПараметрыВыполнения.СписокСотрудников ); 
		Записать();
		
		НачисленияПроводкиРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников)
	Иначе
	 	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.Начисления, ПараметрыВыполнения.СписокСотрудников); 
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НачисленияПроводки, ПараметрыВыполнения.СписокСотрудников ); 
		Записать();
		
		НачисленияРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	КонецЕсли;
	Модифицированность = Истина;
		
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеВзносыПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Найти(ПараметрыВыполнения.Команда.Имя,"ПоРаботнику") > 0 Тогда

		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ], ПараметрыВыполнения.СписокСотрудников);
		Если ПараметрыВыполнения.ОчищатьПроводки Тогда
			ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ + "Проводки"], ПараметрыВыполнения.СписокСотрудников);
		КонецЕсли;
	Иначе
		Объект[ПараметрыВыполнения.ИмяТЧ].Очистить();
		Если ПараметрыВыполнения.ОчищатьПроводки Тогда
			Объект[ПараметрыВыполнения.ИмяТЧ + "Проводки"].Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	ВзносыЗаполнитьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеНДФЛПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Найти(ПараметрыВыполнения.Команда.Имя,"ПоРаботнику") > 0 Тогда

		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ], ПараметрыВыполнения.СписокСотрудников);
		Если ПараметрыВыполнения.ОчищатьПроводки Тогда
			ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ + "Проводки"], ПараметрыВыполнения.СписокСотрудников);
		КонецЕсли;
	Иначе
		Объект[ПараметрыВыполнения.ИмяТЧ].Очистить();
		Если ПараметрыВыполнения.ОчищатьПроводки Тогда
			Объект[ПараметрыВыполнения.ИмяТЧ + "Проводки"].Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	Если Найти(ПараметрыВыполнения.Команда.Имя,"СНачалаГода") > 0 Тогда
		
		ГодЗаполнения = Год(Объект.ПериодРегистрации);	
		Оповещение = Новый ОписаниеОповещения("УстановитьГодЗавершение", ЭтотОбъект, ПараметрыВыполнения);
		ПоказатьВводЧисла(Оповещение, ГодЗаполнения, НСтр("ru='Введите год заполнения';uk='Введіть рік заповнення'"), 4, 0);  
		
		Возврат;
	Иначе
		Записать();
		НДФЛЗаполнитьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	КонецЕсли;
	Модифицированность = Истина;
		
КонецПроцедуры

&НаКлиенте
Процедура АвторасчетНДФЛПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ПараметрыВыполнения.ТолькоПроводки Тогда
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НДФЛПроводки, ПараметрыВыполнения.СписокСотрудников ); 
		Записать();
		
		НДФЛПроводкиРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников)		
	Иначе
	 	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.НДФЛ, ПараметрыВыполнения.СписокСотрудников); 
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НДФЛПроводки, ПараметрыВыполнения.СписокСотрудников); 
		Записать();
		
		НДФЛРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	КонецЕсли;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АвторасчетВзносыПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ПараметрыВыполнения.ТолькоПроводки Тогда
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыПроводки, ПараметрыВыполнения.СписокСотрудников ); 
		Записать();
		
		ВзносыПроводкиРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников)		
	Иначе
	 	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.Взносы, ПараметрыВыполнения.СписокСотрудников); 
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыПроводки, ПараметрыВыполнения.СписокСотрудников ); 
		Записать();
		
		ВзносыРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	КонецЕсли;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеУдержанияПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Найти(ПараметрыВыполнения.Команда.Имя,"ПоРаботнику") > 0 Тогда

		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ], ПараметрыВыполнения.СписокСотрудников);
		Если ПараметрыВыполнения.ОчищатьПроводки Тогда
			ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ + "Проводки"], ПараметрыВыполнения.СписокСотрудников);
		КонецЕсли;
	Иначе
		Объект[ПараметрыВыполнения.ИмяТЧ].Очистить();
		Если ПараметрыВыполнения.ОчищатьПроводки Тогда
			Объект[ПараметрыВыполнения.ИмяТЧ + "Проводки"].Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	УдержанияЗаполнитьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АвторасчетУдержанияПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ПараметрыВыполнения.ТолькоПроводки Тогда
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.УдержанияПроводки, ПараметрыВыполнения.СписокСотрудников ); 
		Записать();
		
		УдержанияПроводкиРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников)		
	Иначе
	 	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.Удержания, ПараметрыВыполнения.СписокСотрудников); 
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.УдержанияПроводки, ПараметрыВыполнения.СписокСотрудников ); 
		Записать();
		
		УдержанияРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	КонецЕсли;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеВзносыФОТПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Найти(ПараметрыВыполнения.Команда.Имя,"ПоРаботнику") > 0 Тогда

		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ], ПараметрыВыполнения.СписокСотрудников);
		Если ПараметрыВыполнения.ОчищатьПроводки Тогда
			ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ + "Проводки"], ПараметрыВыполнения.СписокСотрудников);
		КонецЕсли;
	Иначе
		Объект[ПараметрыВыполнения.ИмяТЧ].Очистить();
		Если ПараметрыВыполнения.ОчищатьПроводки Тогда
			Объект[ПараметрыВыполнения.ИмяТЧ + "Проводки"].Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	ВзносыФОТЗаполнитьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ПараметрыВыполнения.ТолькоПроводки Тогда
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыФОТПроводки, ПараметрыВыполнения.СписокСотрудников ); 
		Записать();
		
		ВзносыФОТПроводкиРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников)		
	Иначе
	 	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.ВзносыФОТ, ПараметрыВыполнения.СписокСотрудников); 
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыФОТПроводки, ПараметрыВыполнения.СписокСотрудников ); 
		Записать();
		
		ВзносыФОТРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	КонецЕсли;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеПроводкиПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетПроводкиПослеОтветаНаВопросЗаписать", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетПроводкиПослеОтветаНаВопросЗаписать", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
		
	АвтозаполнениеПроводокНаСервере();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеВсеПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	СписокТабличныхЧастей = СписокТабличныхЧастейДокументаДляУдаленияПоУсловию();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Если Найти(ПараметрыВыполнения.Команда.Имя,"ПоРаботнику") > 0 Тогда

			ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ИмяТабличнойЧасти], ПараметрыВыполнения.СписокСотрудников);
			Если ПараметрыВыполнения.ОчищатьПроводки Тогда
				ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ИмяТабличнойЧасти + "Проводки"], ПараметрыВыполнения.СписокСотрудников);
			КонецЕсли;
		Иначе
			Объект[ИмяТабличнойЧасти].Очистить();
			Если ПараметрыВыполнения.ОчищатьПроводки Тогда
				Объект[ИмяТабличнойЧасти + "Проводки"].Очистить();
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	ВсеЗаполнитьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	ЗаполнитьВидыЗанятостиПоСтрокам();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АвторасчетВсеПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	
	СписокТабличныхЧастей = СписокТабличныхЧастейДокументаДляУдаленияПоУсловию();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
	
		Если ПараметрыВыполнения.ТолькоПроводки Тогда
			ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ИмяТабличнойЧасти], ПараметрыВыполнения.СписокСотрудников ); 
			Записать();
			
		Иначе
		 	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект[ИмяТабличнойЧасти], ПараметрыВыполнения.СписокСотрудников); 
			ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ИмяТабличнойЧасти + "Проводки"] , ПараметрыВыполнения.СписокСотрудников ); 
			Записать();
			
		КонецЕсли;
	КонецЦикла;
	
	ВсеРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АвторасчетПроводкиПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
		
	Записать();
	
	АвтозаполнениеПроводокНаСервере();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРассчитатьВсеВсеПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Начисления.Количество() > 0 ИЛИ Объект.НачисленияПроводки.Количество() > 0
		ИЛИ Объект.Взносы.Количество() > 0 ИЛИ Объект.ВзносыПроводки.Количество()> 0
		ИЛИ Объект.НДФЛ.Количество() > 0 ИЛИ Объект.НДФЛПроводки.Количество()> 0
		ИЛИ Объект.Удержания.Количество() > 0 ИЛИ Объект.УдержанияПроводки.Количество()> 0
		ИЛИ Объект.ВзносыФОТ.Количество() > 0 ИЛИ Объект.ВзносыФОТПроводки.Количество()> 0
		ИЛИ Объект.РаботникиОрганизации.Количество() > 0 
		ИЛИ Объект.ОтражениеВРеглУчете.Количество()> 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличные части будут очищены. Продолжить?';uk='Перед заповненням табличні частині будуть очищені. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("ЗаполнитьРассчитатьВсеВсеПослеОтветаНаВопросОчистить", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	КонецЕсли;
	ЗаполнитьРассчитатьВсеНаСервере();
	ЗаполнитьВидыЗанятостиПоСтрокам();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРассчитатьВсеВсеПослеОтветаНаВопросОчистить(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
		
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Объект[ИмяТабличнойЧасти].Очистить();
	КонецЦикла;
	
	Записать();
	
	ЗаполнитьРассчитатьВсеНаСервере();
	ЗаполнитьВидыЗанятостиПоСтрокам();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТЧПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Объект.ПредварительныйРасчет = Не Объект.ПредварительныйРасчет;
		Возврат;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
		
	ОчиститьТабличныеЧасти(Ложь);	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТаблицыЗавершениеБезДействий(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
		
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Объект[ИмяТабличнойЧасти].Очистить();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#Область ПроцедурыИФункцииАвтозаполнение

&НаСервере
Процедура НачисленияЗаполнитьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
  	Документ.АвтозаполнениеНачисления(СписокСотрудников);
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
	УстановитьВидимостьКолонок(ЭтаФорма);
	УправлениеВидимостьюПоказателей();
	УстановитьОтображениеПредупрежденийПриИзмененииКлючевыхРеквизитов();
	
КонецПроцедуры

&НаСервере
Процедура НачисленияРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  	Документ.РассчитатьНачисления(СписокСотрудников);
	Если НЕ Объект.ПредварительныйРасчет Тогда
		Документ.РассчитатьНачисленияПроводки(СписокСотрудников);
	КонецЕсли;

  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	УправлениеВидимостьюПоказателей();
	УстановитьВидимостьКолонок(ЭтаФорма);
	ЗаполнитьДобавленныеКолонкиТаблиц("НачисленияПроводки");	
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Начисления", "ВидРасчета", "Результат", "ИтогиНачислено");
	
КонецПроцедуры

&НаСервере
Процедура НачисленияПроводкиРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Документ.РассчитатьНачисленияПроводки(СписокСотрудников);
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	УстановитьВидимостьКолонок(ЭтаФорма);
	УправлениеВидимостьюПоказателей();
	ЗаполнитьДобавленныеКолонкиТаблиц("НачисленияПроводки");	
	
КонецПроцедуры

&НаСервере
Процедура ВзносыЗаполнитьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
  	Документ.АвтозаполнениеВзносы(СписокСотрудников, "Взносы");
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
	УправлениеВидимостьюПоказателей();
	УстановитьОтображениеПредупрежденийПриИзмененииКлючевыхРеквизитов();
	
КонецПроцедуры

&НаСервере
Процедура ВзносыРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  	Документ.РассчитатьВзносы(СписокСотрудников, "Взносы");
	Если НЕ Объект.ПредварительныйРасчет Тогда
		Документ.РассчитатьВзносыПроводки(СписокСотрудников);
	КонецЕсли;

  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	УправлениеВидимостьюПоказателей();
	ЗаполнитьДобавленныеКолонкиТаблиц("ВзносыПроводки");
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Взносы", "Налог", "Результат", "ИтогиВзносы");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Взносы", "Налог", "База", "ИтогиВзносыБаза");
	
КонецПроцедуры

&НаСервере
Процедура ВзносыПроводкиРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Документ.РассчитатьВзносыПроводки(СписокСотрудников);
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	УправлениеВидимостьюПоказателей();
	ЗаполнитьДобавленныеКолонкиТаблиц("ВзносыПроводки");	
	
КонецПроцедуры

&НаСервере
Процедура НДФЛЗаполнитьНаСервере(СписокСотрудников, СНачалаГода = Ложь, ГодЗаполнения = 0)
	
	Документ = РеквизитФормыВЗначение("Объект");
  	Документ.АвтозаполнениеНДФЛ(СписокСотрудников, СНачалаГода, ГодЗаполнения);
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	УстановитьОтображениеПредупрежденийПриИзмененииКлючевыхРеквизитов();
	УправлениеВидимостьюПоказателей();
	
КонецПроцедуры

&НаСервере
Процедура НДФЛРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  	Документ.РассчитатьНДФЛ(СписокСотрудников);
	Если НЕ Объект.ПредварительныйРасчет Тогда
		Документ.РассчитатьНДФЛПроводки(СписокСотрудников);
	КонецЕсли;

  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	УправлениеВидимостьюПоказателей();
	ЗаполнитьДобавленныеКолонкиТаблиц("НДФЛПроводки");	
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "НДФЛ", "ДоходНДФЛ", "Доход", "ИтогиНДФЛДоход");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "НДФЛ", "ДоходНДФЛ", "Налог", "ИтогиНДФЛ");
	
КонецПроцедуры

&НаСервере
Процедура НДФЛПроводкиРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Документ.РассчитатьНДФЛПроводки(СписокСотрудников);
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	УправлениеВидимостьюПоказателей();
	ЗаполнитьДобавленныеКолонкиТаблиц("НДФЛПроводки");		
	
КонецПроцедуры

&НаСервере
Процедура УдержанияЗаполнитьНаСервере(СписокСотрудников, СНачалаГода = Ложь, ГодЗаполнения = 0)
	
	Документ = РеквизитФормыВЗначение("Объект");
  	Документ.АвтозаполнениеУдержания(СписокСотрудников);
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
	УправлениеВидимостьюПоказателей();
	УстановитьОтображениеПредупрежденийПриИзмененииКлючевыхРеквизитов();
	
КонецПроцедуры

&НаСервере
Процедура УдержанияРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  	Документ.РассчитатьУдержания(СписокСотрудников);
	Если НЕ Объект.ПредварительныйРасчет Тогда
		Документ.РассчитатьУдержанияПроводки(СписокСотрудников);
	КонецЕсли;

  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	УправлениеВидимостьюПоказателей();
	ЗаполнитьДобавленныеКолонкиТаблиц("УдержанияПроводки");
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "Удержания", "ВидРасчета", "Результат", "ИтогиУдержано");
	
КонецПроцедуры

&НаСервере
Процедура УдержанияПроводкиРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Документ.РассчитатьУдержанияПроводки(СписокСотрудников);
  	ЗначениеВРеквизитФормы(Документ, "Объект");
	ЗаполнитьДобавленныеКолонкиТаблиц("УдержанияПроводки");		
	
КонецПроцедуры

&НаСервере
Процедура ВзносыФОТЗаполнитьНаСервере(СписокСотрудников, СНачалаГода = Ложь, ГодЗаполнения = 0)
	
	Документ = РеквизитФормыВЗначение("Объект");
  	Документ.АвтозаполнениеВзносы(СписокСотрудников, "ВзносыФОТ");
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	УстановитьОтображениеПредупрежденийПриИзмененииКлючевыхРеквизитов();
	УправлениеВидимостьюПоказателей();
	
КонецПроцедуры

&НаСервере
Процедура ВзносыФОТРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  	Документ.РассчитатьВзносы(СписокСотрудников, "ВзносыФОТ");
	Если НЕ Объект.ПредварительныйРасчет Тогда
		Документ.РассчитатьВзносыФОТПроводки(СписокСотрудников);
	КонецЕсли;

  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	ЗаполнитьДобавленныеКолонкиТаблиц("ВзносыФОТПроводки");
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "ВзносыФОТ", "Налог", "Результат", "ИтогиВзносыФОТ");
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиТабличнойЧасти(ЭтаФорма, Объект, "ВзносыФОТ", "Налог", "База", "ИтогиВзносыБазаФОТ");
	
КонецПроцедуры

&НаСервере
Процедура ВзносыФОТПроводкиРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Документ.РассчитатьВзносыФОТПроводки(СписокСотрудников);
  	ЗначениеВРеквизитФормы(Документ, "Объект");
	ЗаполнитьДобавленныеКолонкиТаблиц("ВзносыФОТПроводки");		
	
КонецПроцедуры

&НаСервере
Процедура АвтозаполнениеПроводокНаСервере()
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  	Документ.АвтозаполнениеПроводок();
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	УстановитьВидимостьКолонок(ЭтаФорма);
	ЗаполнитьДобавленныеКолонкиТаблиц("ОтражениеВРеглУчете");	
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиПроводок(ЭтаФорма, Объект, "ОтражениеВРеглУчете", "СчетДт", "СчетКт", "Сумма", "ИтогиОтражениеВРеглУчете");
	
КонецПроцедуры

&НаСервере
Процедура ВсеЗаполнитьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
  	Документ.ЗаполнитьВсе(СписокСотрудников);
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
	УстановитьВидимостьКолонок(ЭтаФорма);
	УправлениеВидимостьюПоказателей();
	УстановитьОтображениеПредупрежденийПриИзмененииКлючевыхРеквизитов();
	
КонецПроцедуры

&НаСервере
Процедура ВсеРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  	Документ.РассчитатьВсе(СписокСотрудников);
	Если Не Объект.ПредварительныйРасчет Тогда
		Документ.АвтозаполнениеПроводок();
	КонецЕсли;
	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
	УстановитьВидимостьКолонок(ЭтаФорма);
	УправлениеВидимостьюПоказателей();
	ЗаполнитьДобавленныеКолонкиТаблицФормы();
	
	РассчитатьИтогиПоДокументу();
	
КонецПроцедуры

&НаСервере
Процедура ВсеПроводкиРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  	Документ.ПерезаполнитьПроводкиВсе(СписокСотрудников);
	Документ.АвтозаполнениеПроводок();
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	УстановитьВидимостьКолонок(ЭтаФорма);
	УправлениеВидимостьюПоказателей();
	ЗаполнитьДобавленныеКолонкиТаблицФормы();
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ИтогиПроводок(ЭтаФорма, Объект, "ОтражениеВРеглУчете", "СчетДт", "СчетКт", "Сумма", "ИтогиОтражениеВРеглУчете");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРассчитатьВсеНаСервере()
	Объект.КраткийСоставДокумента = "";
	Записать();
	Документ = РеквизитФормыВЗначение("Объект");
	
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Документ.ЗаполнитьРассчитатьВсе();
	
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	УстановитьВидимостьКолонок(ЭтаФорма);
	УправлениеВидимостьюПоказателей();
	ЗаполнитьДобавленныеКолонкиТаблицФормы();
	
	РассчитатьИтогиПоДокументу();
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииОбработкиТабличныхЧастей

&НаКлиенте
Процедура ТЧПриАктивизацииСтроки(ИмяТЧ, Элемент)
	
	ТекущиеДанные = Элементы[ИмяТЧ].ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда
		ТекущиеДанныеРаботник = ТекущиеДанные.Сотрудник;
		РаботникТекущейСтроки = ТекущиеДанные.Сотрудник;
	Иначе
		ТекущиеДанныеРаботник = Неопределено;
		РезультатТекущейСтроки = 0;
		Возврат;
	КонецЕсли;
	
	Если ИмяТЧ = "НДФЛ" Тогда
		РезультатТекущейСтроки = ТекущиеДанные.Налог;
	Иначе
		РезультатТекущейСтроки = ТекущиеДанные.Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "ГруппаРасчетныйЛисток"  Тогда	
		ТекСтрокаРаботник = Элементы.РаботникиОрганизации.ТекущиеДанные;
		Если ТекСтрокаРаботник = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ТекущийСотрудник = ТекСтрокаРаботник.Сотрудник;
		ЗаполнитьРасчетныйЛисток(ТекущийСотрудник, Истина);
		УправлениеВидимостьюПоказателей();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТабличныеЧасти(ОчищатьРаботников = Истина)
	
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Если ОчищатьРаботников ИЛИ Не ИмяТабличнойЧасти = "РаботникиОрганизации" Тогда
			Объект[ИмяТабличнойЧасти].Очистить();
		КонецЕсли;
	КонецЦикла;
	
	УстановитьОтображениеПредупрежденийПриИзмененииКлючевыхРеквизитов();
	РассчитатьИтогиПоДокументу();
	
КонецПроцедуры

&НаСервере
Функция СписокТабличныхЧастейДокумента()
	
	СписокТабличныхЧастей = Новый Массив;
	
	СписокТабличныхЧастей.Добавить("РаботникиОрганизации");
	
	СписокТабличныхЧастей.Добавить("Взносы");
	СписокТабличныхЧастей.Добавить("ВзносыПроводки");
	
	СписокТабличныхЧастей.Добавить("ВзносыФОТ");
	СписокТабличныхЧастей.Добавить("ВзносыФОТПроводки");
	
	СписокТабличныхЧастей.Добавить("Начисления");
	СписокТабличныхЧастей.Добавить("НачисленияПроводки");
	
	СписокТабличныхЧастей.Добавить("НДФЛ");
	СписокТабличныхЧастей.Добавить("НДФЛПроводки");
	
	СписокТабличныхЧастей.Добавить("ОтражениеВРеглУчете");
	
	СписокТабличныхЧастей.Добавить("Удержания");
	СписокТабличныхЧастей.Добавить("УдержанияПроводки");
	
	СписокТабличныхЧастей.Добавить("ОтражениеВРеглУчете");
	
	Возврат СписокТабличныхЧастей;
	
КонецФункции

&НаСервере
Функция СписокТабличныхЧастейДокументаДляУдаленияПоУсловию()
	
	СписокТабличныхЧастей = Новый Массив;
	
	СписокТабличныхЧастей.Добавить("Взносы");
	СписокТабличныхЧастей.Добавить("ВзносыФОТ");
	СписокТабличныхЧастей.Добавить("Начисления");
	СписокТабличныхЧастей.Добавить("НДФЛ");
	СписокТабличныхЧастей.Добавить("Удержания");
	
	Возврат СписокТабличныхЧастей;
	
КонецФункции

&НаКлиенте
Процедура ПриАктивизацииСтроки(Элемент)
	
	ТЧПриАктивизацииСтроки(Элемент.Имя, Элемент)
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти 

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти



























