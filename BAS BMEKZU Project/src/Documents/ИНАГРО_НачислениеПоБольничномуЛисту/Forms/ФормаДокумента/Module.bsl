#Область ОбработчикиСобытийФормы 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 

	КадровыйУчетФормы.ФормаКадровогоДокументаПриСозданииНаСервере(ЭтаФорма);
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Месяц, Организация, Ответственный", 
		"Объект.ПериодРегистрации",
		"Объект.Организация",
		"Объект.Ответственный");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		УстановитьФункциональныеОпцииФормы();
		
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока");
		
		УправлениеФормой(ЭтаФорма);
		УстановитьВидимостьКолонок(ЭтаФорма);
	КонецЕсли;
	
	ПричинаНетрудоспособностиСтарая = Объект.ПричинаНетрудоспособности;
		
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьФункциональныеОпцииФормы();
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока");
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	ПодготовитьФормуНаСервере(); 
	УстановитьВидимостьКолонок(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();	
	УправлениеФормой(ЭтаФорма);
	ОбновитьСтрокиНачислений();
	УстановитьВидимостьКолонок(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МесяцСтрокаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцНачисленияСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока", , Оповещение);
	
КонецПроцедуры
	
&НаКлиенте
Процедура МесяцСтрокаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаРегулирование(Элемент, Направление, СтандартнаяОбработка)
		
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()

	УстановитьФункциональныеОпцииФормы();
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ПричинаНетрудоспособностиПриИзменении(Элемент)
 	
	Если ПричинаНетрудоспособностиСтарая <> Объект.ПричинаНетрудоспособности
		И (ПричинаНетрудоспособностиСтарая   = ПредопределенноеЗначение("Справочник.ИНАГРО_ПричиныНетрудоспособности.ПоБеременностиИРодам")
		ИЛИ Объект.ПричинаНетрудоспособности = ПредопределенноеЗначение("Справочник.ИНАГРО_ПричиныНетрудоспособности.ПоБеременностиИРодам")
		ИЛИ ПричинаНетрудоспособностиСтарая  = ПредопределенноеЗначение("Справочник.ИНАГРО_ПричиныНетрудоспособности.ТравмаНаПроизводстве")
		ИЛИ Объект.ПричинаНетрудоспособности = ПредопределенноеЗначение("Справочник.ИНАГРО_ПричиныНетрудоспособности.ТравмаНаПроизводстве")
		ИЛИ ПричинаНетрудоспособностиСтарая  = ПредопределенноеЗначение("Справочник.ИНАГРО_ПричиныНетрудоспособности.COVID_19")
		ИЛИ Объект.ПричинаНетрудоспособности = ПредопределенноеЗначение("Справочник.ИНАГРО_ПричиныНетрудоспособности.COVID_19")) Тогда
		
		ТекстВопроса =НСтр("ru='Дополнительные параметры для расчета средней будут пересчитаны! Принять изменения?';uk='Додаткові параметри для розрахунку середньої будуть перераховані Прийняти зміни?'");
		Обработчик = Новый ОписаниеОповещения("ПересчитатьПараметрыРасчетаСреднейПослеОтветаНаВопрос", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	Иначе
		
		Объект.Начисления.Очистить(); 
		ПодготовитьФормуНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Объект.ПервичныйБольничныйЛист = "";
	Объект.Стаж = "";
	Объект.ОплачивалВзносыМеньше6Месяцев = Ложь;
	
	Если ЗначениеЗаполнено(Объект.ДатаОкончания) И ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		ПересчитатьПараметрыРасчетаСредней();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		Возврат;
	КонецЕсли;
	
	Стаж = "";
	
	Если Объект.ДатаОкончания <> Дата("00010101") Тогда
		
		Объект.ДатаОкончания = Макс(Объект.ДатаОкончания, Объект.ДатаНачала);
		
		ТекстВопроса =НСтр("ru='Дополнительные параметры для расчета средней будут пересчитаны! Принять изменения?';uk='Додаткові параметри для розрахунку середньої будуть перераховані Прийняти зміни?'");
		Обработчик = Новый ОписаниеОповещения("ПересчитатьПараметрыРасчетаСреднейПослеОтветаНаВопрос", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	Иначе
		
		Объект.ДатаОкончания = Объект.ДатаНачала;
		
		РассчитатьПараметрыСредней();
		
	КонецЕсли;
	
	ПодготовитьФормуНаСервере(); 

КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	Если Объект.ДатаНачала <> Дата("00010101") И Объект.ДатаОкончания > Объект.ДатаНачала Тогда
		ТекстВопроса =НСтр("ru='Дополнительные параметры для расчета средней будут пересчитаны! Принять изменения?';uk='Додаткові параметри для розрахунку середньої будуть перераховані Прийняти зміни?'");
		Обработчик = Новый ОписаниеОповещения("ПересчитатьПараметрыРасчетаСреднейПослеОтветаНаВопрос", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПервичныйБольничныйЛистПриИзменении(Элемент)
	
	ЗаполнитьПоДаннымПервичногоБЛ();
	
	ПодготовитьФормуНаСервере(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПервичныйБольничныйЛистНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокБольничных = Новый СписокЗначений;
	ПолучитьСписокБольничныхНаСервере(СписокБольничных);
	фиксНастройки = Новый НастройкиКомпоновкиДанных;
	эОтбор = фиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	эОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	эОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	эОтбор.ПравоеЗначение = СписокБольничных;
	эОтбор.Использование = Истина;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФиксированныеНастройки", фиксНастройки);
	ОткрытьФорму("Документ.ИНАГРО_НачислениеПоБольничномуЛисту.Форма.ФормаВыбора", ПараметрыФормы, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОплачивалВзносыМеньше6МесяцевПриИзменении(Элемент)
	
	Если Объект.ДатаНачала <> Дата("00010101") Тогда
		
		РассчитатьПараметрыСредней();
		РассчитатьСреднююНаСервере();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыФормыНачисления

&НаКлиенте
Процедура НачисленияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ТекущаяСтрока = Элементы.Начисления.ТекущиеДанные;
		ТекущаяСтрока.Сторно = Ложь;
		ТекущаяСтрока.Размер = Объект.ПроцентОплаты;
		
		ИндексСтроки = Объект.Начисления.Индекс(ТекущаяСтрока);
		Если ИндексСтроки > 0  Тогда
			ТекущаяСтрока.ДатаНачала = Объект.Начисления[ИндексСтроки-1].ДатаОкончания + 86400;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
			
			ДанныеСотрудника = Новый Структура ("Сотрудник, ФизическоеЛицо, 
			|ВидРасчета, ПодразделениеОрганизации, Должность, СпособОтраженияВБухучете, 
			|ПринятНаНовоеРабочееМесто, ГрафикРаботы, ЗанимаемыхСтавок");
			
					
			ЗаполнитьЗначенияСвойств(ДанныеСотрудника, ТекущаяСтрока);
			ДанныеСотрудника.Сотрудник = Объект.Сотрудник;
			ПодучитьДанныеПоСотрудникуНаСервере(ДанныеСотрудника);
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ДанныеСотрудника);
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли; 
	
	ТекущаяСтрока = Элементы.Начисления.ТекущиеДанные;
	Если ТекущаяСтрока.Сторно Тогда
		Возврат;
	КонецЕсли; 
	
		
	ДатаНачалаСобытия = ПолучитьДатуНачалаСобытия();
	
	ДанныеСтроки = Новый Структура("Сотрудник, ПодразделениеОрганизации, ГрафикРаботы, ДатаНачалаСобытия") ;
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, ТекущаяСтрока);
	ДанныеСтроки.ДатаНачалаСобытия = ДатаНачалаСобытия;
	
	// Авторасчет незаполненных реквизитов строки
	ВыполнитьАвторасчетРеквизитовСтрокиНачислений(ДанныеСтроки);
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ДанныеСтроки);
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.ВидУчетаВремениДляСредней) Тогда
		ТекущаяСтрока.ВидУчетаВремениДляСредней = Объект.ВидУчетаВремениДляСредней; 
	КонецЕсли;

	
	// Разбивка строк на помесячные
	РазницаВМесяцах = (Год(ТекущаяСтрока.ДатаОкончания)*12 + Месяц(ТекущаяСтрока.ДатаОкончания)) - (Год(ТекущаяСтрока.ДатаНачала)*12 + Месяц(ТекущаяСтрока.ДатаНачала));
	Если РазницаВМесяцах > 0 Тогда
		
		ТекстВопроса =НСтр("ru='Разбить строку начислений на помесячные записи?';uk='Розбити рядок нарахувань на помісячні записи?'");
		Обработчик = Новый ОписаниеОповещения("РазбитьСтрокуНачисленийПослеОтветаНаВопрос", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура НачисленияВидРасчетаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Начисления.ТекущиеДанные;
	
	УстановитьВидимостьПоказателей(ТекущиеДанные);
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура НачисленияНазначениеПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Начисления.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Назначение) Тогда
		ТекущиеДанные.ВидЗанятости = ПолучитьВидЗанятости(ТекущиеДанные.Назначение);
		ТекущиеДанные.Сотрудник = ТекущиеДанные.Назначение;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовТаблицыФормыРасчетСредней

&НаКлиенте
Процедура РасчетСреднегоПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элементы.РасчетСреднего.ТекущиеДанные.КоэффициентПовышенияОкладов = 1;
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура РасчетСреднегоПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		ТекстСообщения = НСтр("ru='Перед началом заполнения табличной части необходимо выбрать работника';uk='Перед початком заповнення табличної частини необхідно обрати працівника'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетСреднегоРезультатПриИзменении(Элемент)
	ТекСтрока = Элементы.РасчетСреднего.ТекущиеДанные;
	Если ТекСтрока.Результат <> РасчетСреднегоРезультат Тогда
		ТекСтрока.Авторасчет = Ложь;
		РасчетСреднегоРезультат = ТекСтрока.Результат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РассчитатьСреднюю(Команда)
	
	РассчитатьСреднююНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСреднююНаСервере()
	
	Документ = РеквизитФормыВЗначение("Объект");
  	Документ.РассчитатьСреднюю();
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
	УстановитьВидимостьКолонок(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРасчетСреднего(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		ТекстСообщения = НСтр("ru='Перед началом заполнения табличной части необходимо выбрать работника';uk='Перед початком заповнення табличної частини необхідно обрати працівника'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		ТекстСообщения = НСтр("ru='Перед началом заполнения табличной части необходимо выбрать период больничного';uk='Перед початком заповнення табличної частини необхідно обрати період лікарняного'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;

	Если Объект.РасчетСреднего.Количество()>0 Тогда
		
		ТекстВопроса =НСтр("ru='Перед заполнением табличная часть ""Расчет среднего"" будет очищена. Продолжить?';uk='Перед заповненням таблична частина ""Розрахунок середнього"" буде очищена. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеПослеОтветаНаВопрос", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРасчетСреднегоНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасчетСреднегоНаСервере()
	
	Документ = РеквизитФормыВЗначение("Объект");
  	Документ.РассчитатьПараметрыСреднейДокумента();
	Документ.АвтозаполнениеРасчетСреднего();
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
	ОбновитьСтрокиНачислений();	
	УстановитьВидимостьКолонок(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьРасчетСреднего(Команда)
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически рассчитать документ можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично розрахувати документ можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетПослеОтветаНаВопросЗаписать", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	РассчитатьРасчетСреднегоНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьРасчетСреднегоНаСервере()
	
	Документ = РеквизитФормыВЗначение("Объект");
  	Документ.РассчитатьРасчетСреднего();
  	ЗначениеВРеквизитФормы(Документ, "Объект");
	
	ОбновитьСтрокиНачислений();	
	УстановитьВидимостьКолонок(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНачисления(Команда)
	Если Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		ТекстСообщения = НСтр("ru='Перед началом заполнения табличной части необходимо выбрать работника';uk='Перед початком заповнення табличної частини необхідно обрати працівника'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;

	Если Объект.Начисления.Количество()>0 Тогда
		
		ТекстВопроса =НСтр("ru='Перед заполнением табличная часть ""Начисления"" будет очищена. Продолжить?';uk='Перед заповненням таблична частина ""Нарахування"" буде очищена. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеНачисленийПослеОтветаНаВопрос", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	//
	ЗаполнитьНачисленияНаСервере();
	ЗаполнитьВидыЗанятостиПоСтрокам();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачисленияНаСервере()
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать();
  	Документ.АвтозаполнениеНачисления();
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
	ОбновитьСтрокиНачислений();	
	УстановитьВидимостьКолонок(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьНачисления(Команда)
			
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически рассчитать документ можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично розрахувати документ можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНачисленияПослеОтветаНаВопросЗаписать", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;

	РассчитатьНачисленияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьНачисленияНаСервере()
	
	Документ = РеквизитФормыВЗначение("Объект");
  	Документ.РассчитатьНачисления(Объект.Сотрудник);
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
	ОбновитьСтрокиНачислений();	
	УстановитьВидимостьКолонок(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИРассчитатьВсе(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		ТекстСообщения = НСтр("ru='Перед началом заполнения табличной части необходимо выбрать работника';uk='Перед початком заповнення табличної частини необхідно обрати працівника'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) ИЛИ НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		ТекстСообщения = НСтр("ru='Перед началом заполнения табличной части необходимо выбрать период';uk='Перед початком заповнення табличної частини необхідно обрати період'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если Объект.РасчетСреднего.Количество()>0 ИЛИ Объект.Начисления.Количество()>0 Тогда
		
		ТекстВопроса =НСтр("ru='Перед заполнением табличные части будут очищены. Продолжить?';uk='Перед заповненням табличні частини будуть очищені. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("ЗаполнитьВсеПослеОтветаНаВопрос", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьИРассчитатьВсеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИРассчитатьВсеНаСервере()
	
	Документ = РеквизитФормыВЗначение("Объект");
	
  	Документ.РассчитатьПараметрыСреднейДокумента();
	Документ.АвтозаполнениеРасчетСреднего();
  	Документ.РассчитатьРасчетСреднего();
  	Документ.АвтозаполнениеНачисления();
  	Документ.РассчитатьНачисления(Объект.Сотрудник);
	
  	ЗначениеВРеквизитФормы(Документ, "Объект");
	
	ОбновитьСтрокиНачислений();	
	УправлениеФормой(ЭтаФорма);	
	УстановитьВидимостьКолонок(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсе(Команда)
	
	Объект.ПоказатьБазовыйПериод            	= Истина;
	Объект.ПоказатьВидУчетаВремениДляСредней    = Истина;
	Объект.ПоказатьГрафикРаботы			      	= Истина;
	Объект.ПоказатьДополнительныеДанные		 	= Истина;
	Объект.ПоказатьЗамены		 				= Истина;
	Объект.ПоказатьНормуВремени		 			= Истина;
	Объект.ПоказатьОтработанноеВремя		 	= Истина;
	Объект.ПоказатьПериодДействия		 		= Истина;
	УстановитьВидимостьКолонок(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СкрытьВсе(Команда)
	
	Объект.ПоказатьБазовыйПериод            	= Ложь;
	Объект.ПоказатьВидУчетаВремениДляСредней    = Ложь;
	Объект.ПоказатьГрафикРаботы			      	= Ложь;
	Объект.ПоказатьДополнительныеДанные		 	= Ложь;
	Объект.ПоказатьЗамены		 				= Ложь;
	Объект.ПоказатьНормуВремени		 			= Ложь;
	Объект.ПоказатьОтработанноеВремя		 	= Ложь;
	Объект.ПоказатьПериодДействия		 		= Ложь;
	УстановитьВидимостьКолонок(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
		
	УстановитьСостояниеДокумента();
	УправлениеФормой(ЭтаФорма);
	ИзменитьЗаголовокОграничения();
	ОбновитьСтрокиНачислений();
			
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ПараметрыФО = Новый Структура("Организация, Период", Объект.Организация, Объект.Дата);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	УстановитьВидимостьЭлементовФормы(Форма);	

КонецПроцедуры 

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииМесяцаНачисления()
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока", Модифицированность);
	ОбработатьИзменениеМесяцНачисленияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеМесяцНачисленияНаСервере()

	УстановитьФункциональныеОпцииФормы();
		
	Если ЕстьЗаполненныеТабличныеЧасти() Тогда
		ОчиститьТабличныеЧасти();
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ЕстьЗаполненныеТабличныеЧасти()
	
	ДанныеВТЧЕсть = Ложь;
	
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Если Объект[ИмяТабличнойЧасти].Количество() > 0 Тогда
			ДанныеВТЧЕсть = Истина;
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	
	Возврат ДанныеВТЧЕсть;
	
КонецФункции

&НаСервере
Функция СписокТабличныхЧастейДокумента()
	
	СписокТабличныхЧастей = Новый Массив;
	
	СписокТабличныхЧастей.Добавить("Начисления");
	СписокТабличныхЧастей.Добавить("РасчетСреднего");
	
	Возврат СписокТабличныхЧастей;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьЭлементовФормы(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ДокументЕстьПродолжениемБЛ = ЗначениеЗаполнено(Объект.ПервичныйБольничныйЛист);
	
	Элементы.ПроцентОплаты.Доступность = НЕ ДокументЕстьПродолжениемБЛ;
	Элементы.ГруппаРасчетСреднего.ТолькоПросмотр = ДокументЕстьПродолжениемБЛ;
	
	Если Объект.ПричинаНетрудоспособности = ПредопределенноеЗначение("Справочник.ИНАГРО_ПричиныНетрудоспособности.ПоБеременностиИРодам") Тогда
		Элементы.СуммаНижнейГраницыСредней.Видимость = Истина;
	Иначе
		Элементы.ОплачивалВзносыМеньше6Месяцев.Видимость = Истина;
		Элементы.СуммаНижнейГраницыСредней.Видимость = Ложь;
	КонецЕсли;
		
	Элементы.РасчетСреднегоОтработаноДней.Видимость = (Объект.ВидУчетаВремениДляСредней = ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыУчетаВремениДляСредней.ПоРабочимДням"));
	Элементы.РасчетСреднегоОтработаноЧасов.Видимость = (Объект.ВидУчетаВремениДляСредней = ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыУчетаВремениДляСредней.ПоРабочимЧасам"));
	Элементы.РасчетСреднегоКалендарныеДни.Видимость = (Объект.ВидУчетаВремениДляСредней = ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыУчетаВремениДляСредней.ПоКалендарнымДнямСПраздниками"));
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьВидимостьПоказателейНаСервере(ТекСтрока)
	
	СведенияОВидеРасчета = ПолучитьСведенияОВидеРасчета(ТекСтрока.ВидРасчета);
	
	Для СчПоказателей = 1 По 3 Цикл
		Если СчПоказателей <= СведенияОВидеРасчета["КоличествоПоказателей"] Тогда
			Если СведенияОВидеРасчета["Показатель" + СчПоказателей + "Видимость"] Тогда
				ТекСтрока["ИмяПоказатель" + СчПоказателей] = СведенияОВидеРасчета["Показатель" + СчПоказателей + "Наименование"];
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьСведенияОВидеРасчета(ВидРасчета)
	
	Возврат ИНАГРО_ЗарплатаКадрыРасширенныйПовтИсп.ПолучитьСведенияОВидеРасчетаСхемыМотивации(ВидРасчета);
	
КонецФункции

&НаСервере
Процедура ОчиститьТабличныеЧасти()
	
	Объект.Начисления.Очистить();
	Объект.РасчетСреднего.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьПараметрыРасчетаСредней();
	
	Объект.Стаж = "";
	РассчитатьПараметрыСредней();
	ПодготовитьФормуНаСервере();
	Объект.РасчетСреднего.Очистить();
	Объект.Начисления.Очистить();
	Объект.СуммаСредней = 0;
	Объект.ПроцентОплаты = ?(Объект.ПричинаНетрудоспособности = ПредопределенноеЗначение("Справочник.ИНАГРО_ПричиныНетрудоспособности.ПоБеременностиИРодам"), 100, Объект.ПроцентОплаты);
	ПричинаНетрудоспособностиСтарая = Объект.ПричинаНетрудоспособности;
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДаннымПервичногоБЛ();
	
	// Скопируем данные из первичного-листа 
	Если ЗначениеЗаполнено(Объект.ПервичныйБольничныйЛист) Тогда
		
		Объект.СуммаСредней					= Объект.ПервичныйБольничныйЛист.СуммаСредней;
		Объект.ЭлектронныйБольничный        = Объект.ПервичныйБольничныйЛист.ЭлектронныйБольничный;
		Объект.ПериодРасчетаСреднегоНачало	= Объект.ПервичныйБольничныйЛист.ПериодРасчетаСреднегоНачало;
		Объект.ПериодРасчетаСреднегоКонец	= Объект.ПервичныйБольничныйЛист.ПериодРасчетаСреднегоКонец;
    	Объект.ВидУчетаВремениДляСредней	= Объект.ПервичныйБольничныйЛист.ВидУчетаВремениДляСредней;
		Объект.ПроцентОплаты				= Объект.ПервичныйБольничныйЛист.ПроцентОплаты;
		Объект.СуммаПределаСредней			= Объект.ПервичныйБольничныйЛист.СуммаПределаСредней;
		Объект.ЧислоМесяцев					= Объект.ПервичныйБольничныйЛист.ЧислоМесяцев;		
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьЗаголовокОграничения()
	
	Если НЕ ЗначениеЗаполнено(Объект.ПервичныйБольничныйЛист) Тогда 
		ОграниченияПоМинимальнойЗарплате = РегистрыСведений.МинимальнаяОплатаТруда.СрезПоследних(Объект.ДатаНачала);
		Если ОграниченияПоМинимальнойЗарплате.Количество() > 0 Тогда 
			Объект.ОграничениеПоМинимальнойЗарплате = ОграниченияПоМинимальнойЗарплате[0].Размер;
		Иначе	
			Объект.ОграничениеПоМинимальнойЗарплате = 0;
		КонецЕсли;	
		Если Объект.ПричинаНетрудоспособности = ПредопределенноеЗначение("Справочник.ИНАГРО_ПричиныНетрудоспособности.ПоБеременностиИРодам") Тогда
			Элементы.ОплачивалВзносыМеньше6Месяцев.Заголовок = НСтр("ru='Применять ограничение размером мин. зарплаты ( ';uk='Застосовувати обмеження розміром мін. зарплати ('") + Объект.ОграничениеПоМинимальнойЗарплате*2 + " грн.)";
		Иначе
			Элементы.ОплачивалВзносыМеньше6Месяцев.Заголовок = НСтр("ru='Применять ограничение размером мин. зарплаты ( ';uk='Застосовувати обмеження розміром мін. зарплати ('") + Объект.ОграничениеПоМинимальнойЗарплате + " грн.)";
		КонецЕсли;
	Иначе  
		Объект.ОграничениеПоМинимальнойЗарплате = Объект.ПервичныйБольничныйЛист.ОграничениеПоМинимальнойЗарплате;
		Объект.ОплачивалВзносыМеньше6Месяцев = Объект.ПервичныйБольничныйЛист.ОплачивалВзносыМеньше6Месяцев;
		Если Объект.ПервичныйБольничныйЛист.ПричинаНетрудоспособности = ПредопределенноеЗначение("Справочник.ИНАГРО_ПричиныНетрудоспособности.ПоБеременностиИРодам") Тогда
			Элементы.ОплачивалВзносыМеньше6Месяцев.Заголовок = НСтр("ru='Применять ограничение размером мин. зарплаты ( ';uk='Застосовувати обмеження розміром мін. зарплати ('") + Объект.ОграничениеПоМинимальнойЗарплате*2 + " грн.)";
		Иначе
			Элементы.ОплачивалВзносыМеньше6Месяцев.Заголовок = НСтр("ru='Применять ограничение размером мин. зарплаты ( ';uk='Застосовувати обмеження розміром мін. зарплати ('") + Объект.ОграничениеПоМинимальнойЗарплате + " грн.)";
		КонецЕсли
	КонецЕсли
	
КонецПроцедуры	

&НаСервере
Процедура РассчитатьПараметрыСредней()
	
	Документ = РеквизитФормыВЗначение("Объект");
  	Документ.РассчитатьПараметрыСреднейДокумента();
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьОтменуПроведенияДокументаНаСервере()
	
	Документ = РеквизитФормыВЗначение("Объект");
  	Документ.ВыполнитьОтменуПроведенияДокумента();
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияРезультатПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Начисления.ТекущиеДанные;
	Если ТекСтрока.Результат <> СтарыйРезультат Тогда
		ТекСтрока.Авторасчет = Ложь;
		СтарыйРезультат = ТекСтрока.Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтрокиНачислений();
	
	СведенияОВидахРасчета = Новый Соответствие;
	Для Каждого ТекСтрока Из Объект.Начисления Цикл
		УстановитьВидимостьПоказателейНаСервере(ТекСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыполнитьАвторасчетРеквизитовСтрокиНачислений(ТекущаяСтрока)

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Сотрудник",ТекущаяСтрока.Сотрудник);
	Запрос.УстановитьПараметр("ДатаАктуальности", ТекущаяСтрока.ДатаНачалаСобытия);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	               |	РаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы
	               |ИЗ
	               |	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Сотрудник = &Сотрудник) КАК РаботникиОрганизации";
	
	// подразделение, график и вид учета времени
	ПрежниеДанные = Запрос.Выполнить().Выбрать();
	Если ПрежниеДанные.Следующий() Тогда
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.ПодразделениеОрганизации) Тогда
			ТекущаяСтрока.ПодразделениеОрганизации = ПрежниеДанные.ПодразделениеОрганизации; 
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.ГрафикРаботы) Тогда
			ТекущаяСтрока.ГрафикРаботы = ПрежниеДанные.ГрафикРаботы; 
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция	ПолучитьДатуНачалаСобытия()
	
	Возврат Объект.ПериодРегистрации;
	
КонецФункции

&НаСервере
Процедура ПодучитьДанныеПоСотрудникуНаСервере(ДанныеСотрудника)
	
	ИНАГРО_ПроведениеРасчетов.ПолучитьДанныеСотрудника(Объект.Дата, ДанныеСотрудника);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьКолонок(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.Начисления.ПодчиненныеЭлементы.НачисленияГруппаПериод.Видимость  		= Объект.ПоказатьПериодДействия;
	Элементы.Начисления.ПодчиненныеЭлементы.НачисленияГруппаБазовыйПериод.Видимость = Объект.ПоказатьБазовыйПериод;
	Элементы.Начисления.ПодчиненныеЭлементы.НачисленияГруппаОтработано.Видимость  	= Объект.ПоказатьОтработанноеВремя;
	Элементы.Начисления.ПодчиненныеЭлементы.НачисленияГруппаНорма.Видимость 		= Объект.ПоказатьНормуВремени;
	Элементы.Начисления.ПодчиненныеЭлементы.НачисленияГруппаНормаЗаМесяц.Видимость 	= Объект.ПоказатьНормуВремени;
	Элементы.Начисления.ПодчиненныеЭлементы.НачисленияГруппаЗамены.Видимость 		= Объект.ПоказатьЗамены;
			
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьПоказателей(ТекСтрока)
	
	СведенияОВидеРасчета = ПолучитьСведенияОВидеРасчета(ТекСтрока.ВидРасчета);
	Для СчПоказателей = 1 По 3 Цикл
		Если СчПоказателей <= СведенияОВидеРасчета["КоличествоПоказателей"] Тогда
			Если СведенияОВидеРасчета["Показатель" + СчПоказателей + "Видимость"] Тогда
				ТекСтрока["ИмяПоказатель" + СчПоказателей] = СведенияОВидеРасчета["Показатель" + СчПоказателей + "Наименование"];
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВидЗанятости(Назначение)
	
	Возврат Назначение.ИНАГРО_ВидЗанятости;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьВидыЗанятостиПоСтрокам()
	
	Для Каждого ТекСтрока Из Объект.Начисления Цикл
		ТекСтрока.ВидЗанятости = ПолучитьВидЗанятости(ТекСтрока.Назначение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокБольничныхНаСервере(СписокБольничных)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Больничный.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ИНАГРО_НачислениеПоБольничномуЛисту КАК Больничный
	|ГДЕ
	|	Больничный.Сотрудник = &Сотрудник
	|	И НАЧАЛОПЕРИОДА(Больничный.ПериодРегистрации, МЕСЯЦ) <= &ПериодРегистрации
	|	И Больничный.Проведен
	|	И Больничный.ПервичныйБольничныйЛист = ЗНАЧЕНИЕ(Документ.ИНАГРО_НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|	И НЕ Больничный.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Сотрудник", Объект.Сотрудник);
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	ТЗБольничные = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	СписокБольничных.ЗагрузитьЗначения(ТЗБольничные);
КонецПроцедуры

#Область ПроцедурыИФункцииОбработкаВопросов

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	
	ПриИзмененииМесяцаНачисления();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Объект.РасчетСреднего.Очистить();
		//
	ЗаполнитьРасчетСреднегоНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеНачисленийПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Начисления.Очистить();
		//
	ЗаполнитьНачисленияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РазбитьСтрокуНачисленийПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Начисления.ТекущиеДанные;
		
	ИНАГРО_ПроведениеРасчетовКлиент.РазбитьСтрокуНачисленийНаПомесячныеЗаписи(ТекущиеДанные, Объект.Начисления);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьПараметрыРасчетаСреднейПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Объект.ПричинаНетрудоспособности = ПричинаНетрудоспособностиСтарая;
		Возврат;
	КонецЕсли;
	
	//Если    НЕ ЗначениеЗаполнено(Объект.ДатаНачала)
	//	ИЛИ НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда		
	//	ТекстСообщения = НСтр("ru='Необходимо заполнить даты нахождения на больничном!';uk='Необхідно заповнити дати перебування на лікарняному!'");
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , "Объект.ДатаНачала");
	//	Возврат;		
	//КонецЕсли;	
	
	ПересчитатьПараметрыРасчетаСредней();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВсеПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически рассчитать документ можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично розрахувати документ можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("РассчитатьВсеПослеОтветаНаВопросЗаписать", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	Объект.РасчетСреднего.Очистить();
	Объект.Начисления.Очистить();
		//
	ЗаполнитьИРассчитатьВсеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АвторасчетПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт 
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьОтменуПроведенияДокументаНаСервере();
	РассчитатьРасчетСреднегоНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АвторасчетНачисленияПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьНачисленияНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьВсеПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт 
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьОтменуПроведенияДокументаНаСервере();
	
	Объект.РасчетСреднего.Очистить();
	Объект.Начисления.Очистить();
	
	ЗаполнитьИРассчитатьВсеНаСервере();
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти 

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти