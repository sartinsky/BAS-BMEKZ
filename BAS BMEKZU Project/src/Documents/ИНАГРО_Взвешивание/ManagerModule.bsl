#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Квитанция
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Квитанция";
	КомандаПечати.Представление = НСтр("ru = 'Квитанция на взвешивание';uk = 'Квитанція на зважування'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Квитанция на взвешивание""';uk='Реєстр документів ""Квитанція на зважування""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
			
КонецПроцедуры		

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Квитанция") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Квитанция", НСтр("ru = 'Квитанция на взвешивание';uk = 'Квитанція на зважування'"), 
		ПечатьКвитанция(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_Взвешивание.ПФ_MXL_Квитанция", ,Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьКвитанция(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_Взвешивание_ПФ_MXL_Квитанция";
	
	Макет = ПолучитьМакет("ПФ_MXL_Квитанция");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_Взвешивание.Ссылка,
		|	ИНАГРО_Взвешивание.ВерсияДанных,
		|	ИНАГРО_Взвешивание.ПометкаУдаления,
		|	ИНАГРО_Взвешивание.Номер,
		|	ИНАГРО_Взвешивание.Дата,
		|	ИНАГРО_Взвешивание.Проведен,
		|	ИНАГРО_Взвешивание.Организация,
		|	ИНАГРО_Взвешивание.Владелец,
		|	ИНАГРО_Взвешивание.Весовщик,
		|	ИНАГРО_Взвешивание.ДоговорКонтрагента,
		|	ИНАГРО_Взвешивание.Водитель,
		|	ИНАГРО_Взвешивание.НомерПрицепа,
		|	ИНАГРО_Взвешивание.НомерТранспорта,
		|	ИНАГРО_Взвешивание.Номенклатура,
		|	ИНАГРО_Взвешивание.ВремяПрибытия,
		|	ИНАГРО_Взвешивание.ВремяВыбытия,
		|	ИНАГРО_Взвешивание.ВесБрутто,
		|	ИНАГРО_Взвешивание.Примечание,
		|	ИНАГРО_Взвешивание.ВесБрутто1,
		|	ИНАГРО_Взвешивание.ВесНетто,
		|	ИНАГРО_Взвешивание.ВесНетто1,
		|	ИНАГРО_Взвешивание.ВесТары,
		|	ИНАГРО_Взвешивание.ВесТары1,
		|	ИНАГРО_Взвешивание.Вес,
		|	ИНАГРО_Взвешивание.ОписаниеДвиженияФормы36,
		|	ИНАГРО_Взвешивание.Комментарий,
		|	ИНАГРО_Взвешивание.Ответственный,
		|	ИНАГРО_Взвешивание.Организация.НаименованиеПолное
		|ИЗ
		|	Документ.ИНАГРО_Взвешивание КАК ИНАГРО_Взвешивание
		|ГДЕ
		|	ИНАГРО_Взвешивание.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ВыборкаШапка = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаШапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		//Шапка
		ОблШапка = Макет.ПолучитьОбласть("Шапка");
		ОблШапка.Параметры.Заполнить(ВыборкаШапка);
		ОблШапка.Параметры.Организация = ВыборкаШапка.ОрганизацияНаименованиеПолное;
		ОблШапка.Параметры.Дата = Формат(ВыборкаШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		ОблШапка.Параметры.ВесПрописью = ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,ВыборкаШапка.Вес);
		ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(ОблШапка.Параметры.Владелец);
		ТабДокумент.Вывести(ОблШапка);
		
		//Дно
		ОблДно = Макет.ПолучитьОбласть("Дно");
		ТабДокумент.Вывести(ОблДно);
		//Разделитель
		ОблРазделитель = Макет.ПолучитьОбласть("Разделитель");
		ТабДокумент.Вывести(ОблРазделитель);
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#КонецЕсли