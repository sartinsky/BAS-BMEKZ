#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();		
	КонецЕсли;
	
	// Уведомим о появлении функционала рабочей даты
	ЭтаФорма.НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях("РабочаяДатаИзДокумента");
	 
	// Показываем, если это новый документ и сама рабочая дата еще не установлена.
	ЭтаФорма.НастройкиПредупреждений.РабочаяДатаИзДокумента = ЭтаФорма.НастройкиПредупреждений.РабочаяДатаИзДокумента
	 	И ЭтаФорма.Параметры.Ключ.Пустая()
	  	И НЕ ЗначениеЗаполнено(БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("РабочаяДата"));	  
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// ПодключаемоеОборудование
	ИНАГРО_ПодключаемоеОборудованиеОбщегоНазначения.НастроитьПодключаемоеОборудование(ЭтаФорма);
	// ПодключаемоеОборудование

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
		Если Источник = "ПодключаемоеОборудование" Тогда
		Если ИмяСобытия = "WP89" Тогда
			
			ЗавершениеПолученияВеса(Параметр, Неопределено);	
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;		
	
	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ИНАГРО_ЭлеваторКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, ТекущаяДатаДокумента);

	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		ДатаПриИзмененииНаСервере();
	КонецЕсли;
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;	
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()

	УстановитьФункциональныеОпцииФормы();
	
	УправлениеФормойНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли;	
		
КонецПроцедуры
	
&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
			
	УстановитьФункциональныеОпцииФормы();	
	
	УправлениеФормойНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
				
		ИНАГРО_ЭлеваторЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(Объект.Дата, Объект.Организация, Объект.Владелец, Объект.ДоговорКонтрагента);		
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВодительПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Водитель) Тогда
		
		ДанныеОбъекта = Новый Структура("Водитель, НомерТранспорта, НомерПрицепа");
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
		
		ДанныеОбъекта.Вставить("ВестиСправочникВодителей", 	 ВестиСправочникВодителей);
		ДанныеОбъекта.Вставить("ВестиСправочникАвтомобилей", ВестиСправочникАвтомобилей);
		
		ВодительПриИзмененииНаСервере(ДанныеОбъекта);
		
		ЗаполнитьЗначенияСвойств(Объект, ДанныеОбъекта);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВодительПриИзмененииНаСервере(ДанныеОбъекта)
			
	Водитель = ДанныеОбъекта.Водитель;
	
	Если ДанныеОбъекта.ВестиСправочникВодителей Тогда
		
		Если ДанныеОбъекта.ВестиСправочникАвтомобилей Тогда
			
			Если ЗначениеЗаполнено(Водитель.НомерТранспорта) Тогда
				ДанныеОбъекта.НомерТранспорта = Водитель.НомерТранспорта;
			КонецЕсли;
			Если ЗначениеЗаполнено(Водитель.НомерПрицепа) Тогда
				ДанныеОбъекта.НомерПрицепа	  = Водитель.НомерПрицепа;
			КонецЕсли;
						
		Иначе
			
			ДанныеОбъекта.НомерТранспорта = Строка(Водитель.НомерТранспорта);
			ДанныеОбъекта.НомерПрицепа	  = Строка(Водитель.НомерПрицепа);
			
		КонецЕсли;		
		
	КонецЕсли; 		
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовПанелиВесовая

&НаКлиенте
Процедура ВесБруттоПриИзменении(Элемент)
	
	РасчетВеса();
	
КонецПроцедуры

&НаКлиенте
Процедура ВесТарыПриИзменении(Элемент)

	РасчетВеса();
	
КонецПроцедуры

&НаКлиенте
Процедура ВесБрутто1ПриИзменении(Элемент)

	РасчетВеса();
	
КонецПроцедуры

&НаКлиенте
Процедура ВесТары1ПриИзменении(Элемент)

	РасчетВеса();
	
КонецПроцедуры

&НаКлиенте
Процедура ВесНеттоПриИзменении(Элемент)
	
	РасчетВеса();

КонецПроцедуры

&НаКлиенте
Процедура ВесНетто1ПриИзменении(Элемент)

	РасчетВеса();
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПримечаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Примечание",
		НСтр("ru='Примечание';uk='Примітка'"));
		
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеДвиженияФормы36НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.ОписаниеДвиженияФормы36",
		НСтр("ru='Описание движения формы 36';uk='Опис руху форми 36'"));

КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КнопкаF5(Команда)
					
	ИмяНажатойКомандыПолученияВеса = Команда.Имя;
	ОповещениеПолученияВеса = Новый ОписаниеОповещения("ЗавершениеПолученияВеса", ЭтаФорма);
	
	ИНАГРО_МенеджерОборудованияКлиент.НачатьПолученияВесаСЭлектронныхВесов(ОповещениеПолученияВеса, ЭтаФорма.УникальныйИдентификатор);		
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаF6(Команда)
		
	ИмяНажатойКомандыПолученияВеса = Команда.Имя;
	ОповещениеПолученияВеса = Новый ОписаниеОповещения("ЗавершениеПолученияВеса", ЭтаФорма);
	
	ИНАГРО_МенеджерОборудованияКлиент.НачатьПолученияВесаСЭлектронныхВесов(ОповещениеПолученияВеса, ЭтаФорма.УникальныйИдентификатор);		
							
КонецПроцедуры

&НаКлиенте
Процедура КнопкаF7(Команда)
	
	ИмяНажатойКомандыПолученияВеса = Команда.Имя;
	ОповещениеПолученияВеса = Новый ОписаниеОповещения("ЗавершениеПолученияВеса", ЭтаФорма);
	
	ИНАГРО_МенеджерОборудованияКлиент.НачатьПолученияВесаСЭлектронныхВесов(ОповещениеПолученияВеса, ЭтаФорма.УникальныйИдентификатор);		
						
КонецПроцедуры

&НаКлиенте
Процедура КнопкаF8(Команда)
	
	ИмяНажатойКомандыПолученияВеса = Команда.Имя;
	ОповещениеПолученияВеса = Новый ОписаниеОповещения("ЗавершениеПолученияВеса", ЭтаФорма);
	
	ИНАГРО_МенеджерОборудованияКлиент.НачатьПолученияВесаСЭлектронныхВесов(ОповещениеПолученияВеса, ЭтаФорма.УникальныйИдентификатор);		
				
КонецПроцедуры

&НаКлиенте
Процедура Выезд(Команда)
	
	Объект.ВремяВыбытия = ТекущаяДата();
	
	Элементы.Выезд.Доступность        = Ложь;
	Элементы.ВремяВыбытия.Доступность = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	УстановитьФункциональныеОпцииФормы();
	
	ТекущаяДатаДокумента = Объект.Дата;			
		
	УстановитьТипыДанныхРеквизитов();
	
	УправлениеФормойНаСервере();
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма);	
	
	ПараметрыУчетаЭлеватора                     = ИНАГРО_Элеватор.ПолучитьПараметрыУчетаЭлеватора(Объект.Дата);
	ИспользоватьДополнительныйКонтрольДоговоров = ПараметрыУчетаЭлеватора.ДополнительныйКонтрольДоговоров;
	ВестиСправочникВодителей          			= ПараметрыУчетаЭлеватора.ВестиСправочникВодителей;
	ВестиСправочникАвтомобилей                  = ПараметрыУчетаЭлеватора.ВестиСправочникАвтомобилей; 
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;		
	
	Элементы.ДоговорКонтрагента.Доступность = НЕ Форма.ИспользоватьДополнительныйКонтрольДоговоров
					
КонецПроцедуры

&НаСервере
Процедура УправлениеФормойНаСервере()
	
	ИНАГРО_ЭлеваторЗаполнениеДокументов.ЗаполнитьДополнительныеРеквизиты(ЭтаФорма);	
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТипыДанныхРеквизитов()
	
	// Водитель 
	
	Если ВестиСправочникВодителей Тогда
		
		ТипДанных = "СправочникСсылка.ИНАГРО_Водители";

		Элементы.Водитель.КнопкаВыпадающегоСписка        = Неопределено;
		Элементы.Водитель.КнопкаВыбора                   = Неопределено;
		Элементы.Водитель.КнопкаОчистки                  = Неопределено;
		Элементы.Водитель.КнопкаСоздания                 = Неопределено;
		Элементы.Водитель.ИсторияВыбораПриВводе          = ИсторияВыбораПриВводе.Авто;

						
	Иначе
		
		ТипДанных = "Строка";

		Элементы.Водитель.КнопкаВыпадающегоСписка        = Ложь;
		Элементы.Водитель.КнопкаВыбора                   = Ложь;
		Элементы.Водитель.КнопкаОчистки                  = Истина;
		Элементы.Водитель.КнопкаСоздания                 = Ложь;
		Элементы.Водитель.ИсторияВыбораПриВводе          = ИсторияВыбораПриВводе.НеИспользовать;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Водитель) Тогда
		Элементы.Водитель.ОграничениеТипа        = Новый ОписаниеТипов(ТипДанных);					
		Элементы.Водитель.ВыбиратьТип            = Ложь;
	КонецЕсли;

	// Автомобиль
	
	Если ВестиСправочникАвтомобилей Тогда
		
		ТипДанных = "СправочникСсылка.ИНАГРО_ТранспортныеСредства";
		
		Элементы.НомерТранспорта.КнопкаВыпадающегоСписка = Неопределено;
		Элементы.НомерТранспорта.КнопкаВыбора            = Неопределено;		
		Элементы.НомерТранспорта.КнопкаОчистки           = Неопределено;
		Элементы.НомерТранспорта.КнопкаСоздания          = Неопределено;
		Элементы.НомерТранспорта.ИсторияВыбораПриВводе   = ИсторияВыбораПриВводе.Авто;
		
		Элементы.НомерПрицепа.КнопкаВыпадающегоСписка    = Неопределено;
		Элементы.НомерПрицепа.КнопкаВыбора               = Неопределено;
		Элементы.НомерПрицепа.КнопкаОчистки              = Неопределено;						
		Элементы.НомерПрицепа.КнопкаСоздания             = Неопределено;
		Элементы.НомерПрицепа.ИсторияВыбораПриВводе      = ИсторияВыбораПриВводе.Авто;
		
	Иначе
		
		ТипДанных = "Строка";
		
		Элементы.НомерТранспорта.КнопкаВыпадающегоСписка = Ложь;
		Элементы.НомерТранспорта.КнопкаВыбора            = Ложь;		
		Элементы.НомерТранспорта.КнопкаОчистки           = Истина;
		Элементы.НомерТранспорта.КнопкаСоздания          = Ложь;
		Элементы.НомерТранспорта.ИсторияВыбораПриВводе   = ИсторияВыбораПриВводе.НеИспользовать;
		
		Элементы.НомерПрицепа.КнопкаВыпадающегоСписка    = Ложь;
		Элементы.НомерПрицепа.КнопкаВыбора               = Ложь;
		Элементы.НомерПрицепа.КнопкаОчистки              = Истина;						
		Элементы.НомерПрицепа.КнопкаСоздания             = Ложь;
		Элементы.НомерПрицепа.ИсторияВыбораПриВводе      = ИсторияВыбораПриВводе.НеИспользовать; 		
				
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.НомерТранспорта) Тогда
		Элементы.НомерТранспорта.ОграничениеТипа = Новый ОписаниеТипов(ТипДанных);				
		Элементы.НомерТранспорта.ВыбиратьТип     = Ложь;			 				
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.НомерПрицепа) Тогда				
		Элементы.НомерПрицепа.ОграничениеТипа    = Новый ОписаниеТипов(ТипДанных);
		Элементы.НомерПрицепа.ВыбиратьТип        = Ложь					
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеПолученияВеса(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если ИмяНажатойКомандыПолученияВеса = "КнопкаF5" Тогда		
			Объект.ВесБрутто = Результат;			
		ИначеЕсли ИмяНажатойКомандыПолученияВеса = "КнопкаF6" Тогда			
			Объект.ВесТары = Результат;			
		ИначеЕсли ИмяНажатойКомандыПолученияВеса = "КнопкаF7" Тогда			
			Объект.ВесБрутто1 = Результат;			
		ИначеЕсли ИмяНажатойКомандыПолученияВеса = "КнопкаF8" Тогда			
			Объект.ВесТары1 = Результат;
		КонецЕсли;	
	КонецЕсли;
	
	Объект.ВремяВыбытия = ТекущаяДата();
	
	РасчетВеса();
	
	ИмяНажатойКомандыПолученияВеса = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура РасчетВеса()
	
	Объект.ВесНетто  = Объект.ВесБрутто - Объект.ВесТары;
	Объект.ВесНетто1 = Объект.ВесБрутто1 - Объект.ВесТары1;
	
	Объект.Вес       = Объект.ВесНетто + Объект.ВесНетто1;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти