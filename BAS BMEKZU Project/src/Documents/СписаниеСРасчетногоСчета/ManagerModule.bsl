#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция НайтиДокументПлатежноеПоручение(ДокументСсылка, ДокументОснование, НаименованиеДокумента = "") Экспорт
	
	Если ЗначениеЗаполнено(ДокументОснование) И
		ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПлатежноеПоручение") Тогда
		
		ПараметрыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, "Номер,Дата,Проведен");
		СтрокаДокумент = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ПараметрыДокумента.Номер);
		НаименованиеДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Платежное поручение № %1 от %2 г.';uk='Платіжне доручення № %1 від %2 р.'"), СтрокаДокумент, Формат(ПараметрыДокумента.Дата,"ДФ=dd.MM.yyyy"));
		Возврат ДокументОснование;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ДокПП.Ссылка
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ДокПП
	|ГДЕ
	|	ДокПП.ДокументОснование = &ДокументСсылка";
	
	ВыборкаИзЗапроса = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаИзЗапроса.Следующий() Тогда
		НайденныйДокумент = ВыборкаИзЗапроса.Ссылка;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НайденныйДокумент) Тогда
		ПараметрыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НайденныйДокумент, "Номер,Дата,Проведен");
		СтрокаДокумент = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ПараметрыДокумента.Номер);
		НаименованиеДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Платежное поручение № %1 от %2 г.';uk='Платіжне доручення № %1 від %2 р.'"), СтрокаДокумент, Формат(ПараметрыДокумента.Дата,"ДФ=dd.MM.yyyy"));
	Иначе
		НаименованиеДокумента = НСтр("ru='Ввести платежное поручение';uk='Ввести платіжне доручення'");
	КонецЕсли;
	
	Возврат НайденныйДокумент;
	
КонецФункции

Функция ПолучитьНазначениеПлатежа(Объект, ТолькоСумму = Ложь) Экспорт
	ЭтоПеречислениеНалога = Ложь;
	ТекстНазначение       = Объект.НазначениеПлатежа;
	
	Если Объект.ВидОперации    = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПереводНаДругойСчет
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеЗП
//++ БУ ЗИК
//~		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ВыплатаЗарплатыНаЛицевыеСчета
//-- БУ ЗИК		
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеДенежныхСредствПодотчетнику
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочееСписаниеБезналичныхДенежныхСредств
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПокупкаПродажаВалюты Тогда
		
		Возврат "";
	КонецЕсли;
	
	ТекстНазначенияИзСчетаКонтрагента = "";
	Если НЕ Объект.СчетКонтрагента.Пустая() Тогда
		ТекстНазначенияИзСчетаКонтрагента = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Объект.СчетКонтрагента, "ТекстНазначения"));
	КонецЕсли;
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога Тогда
		Если ПустаяСтрока(ТекстНазначение) И ТекстНазначенияИзСчетаКонтрагента <> "" Тогда
			ТекстНазначение = ТекстНазначенияИзСчетаКонтрагента;
		КонецЕсли;
		
		ЭтоПеречислениеНалога = Истина;
	КонецЕсли; 
	
	Если НЕ ТолькоСумму Тогда
		Если ТекстНазначенияИзСчетаКонтрагента <> "" Тогда
			ТекстНазначение = ТекстНазначенияИзСчетаКонтрагента;
		Иначе
			Если ЭтоПеречислениеНалога Тогда
				ТекстНазначение = "Сплата податку ";
			Иначе
				МассивДоговоров = Новый Массив;
				Для каждого СтрокаРасшифровки Из Объект.РасшифровкаПлатежа Цикл
					Если ЗначениеЗаполнено(СтрокаРасшифровки.ДоговорКонтрагента)
						И МассивДоговоров.Найти(СтрокаРасшифровки.ДоговорКонтрагента) = Неопределено Тогда
						
						МассивДоговоров.Добавить(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаРасшифровки.ДоговорКонтрагента, "НаименованиеДляПечати"));
					КонецЕсли;
				КонецЦикла;
				
				Если Объект.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ВозвратДенежныхСредствПокупателю Тогда
					ТекстОплата = "Повернення оплати ";
				Иначе
					ТекстОплата = "Оплата ";
				КонецЕсли;
				
				Если МассивДоговоров.Количество() = 0 Тогда
					ТекстНазначение = ТекстОплата + "за договором ";
				ИначеЕсли МассивДоговоров.Количество() = 1 Тогда
					ТекстНазначение = ТекстОплата + "за договором " + МассивДоговоров[0];
				Иначе
					ТекстНазначение = ТекстОплата + "за договорами: ";
					Для каждого ЭлементМассива Из МассивДоговоров Цикл
						ТекстНазначение = ТекстНазначение + ЭлементМассива + ", ";
					КонецЦикла;
					
					ТекстНазначение = Лев(ТекстНазначение, СтрДлина(ТекстНазначение) - 2);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ПозицияСуммы = Найти(Объект.НазначениеПлатежа, "Сума ");
		Если ПозицияСуммы = 0 Тогда
			ТекстНазначение = Объект.НазначениеПлатежа;
		Иначе
			ТекстНазначение = Лев(Объект.НазначениеПлатежа, ПозицияСуммы - 1);
		КонецЕсли;
		
		Если Прав(ТекстНазначение, 1) = Символы.ПС Тогда
			ТекстНазначение = Лев(ТекстНазначение, СтрДлина(ТекстНазначение) - 1);
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтоПеречислениеНалога Тогда
		Возврат ТекстНазначение;
	КонецЕсли;
	
	ТекстСумма = "Сума " + Формат(Объект.СуммаДокумента, "ЧЦ=15; ЧДЦ=2; ЧРД=,; ЧН=0,00; ЧГ=");
	ТекстНДС   = "";
	Если Объект.ВидОперации <> Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога Тогда
		
		ТабНДС = Объект.РасшифровкаПлатежа.Выгрузить();
		ТабНДС.Свернуть("СтавкаНДС", "СуммаНДС");
		
		Для каждого СтрокаНДС Из ТабНДС цикл
			ТекстНДС = ТекстНДС + ?(ПустаяСтрока(ТекстНДС), "", ", ");
			Если СтрокаНДС.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
				ТекстНДС = ТекстНДС + "Без податку (ПДВ)";
			ИначеЕсли НЕ ЗначениеЗаполнено(СтрокаНДС.СтавкаНДС) Тогда
				ТекстНДС = "";
			Иначе
				ТекстНДС = ТекстНДС + "ПДВ(" + СтрокаНДС.СтавкаНДС + ") " + Формат(СтрокаНДС.СуммаНДС, "ЧЦ=15; ЧДЦ=2; ЧРД=,; ЧН=0,00; ЧГ=");
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТекстНазначение + Символы.ПС 
						+ ТекстСумма + Символы.ПС 
						+ ?(ПустаяСтрока(ТекстНДС), "", "В т.ч. ") + ТекстНДС;
	
КонецФункции

Функция ПолучитьСписокВидовОперацийСРасшифровкойПлатежа() Экспорт
	
	СписокОпераций = Новый СписокЗначений();
	СписокОпераций.Добавить(Перечисления.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику);
	СписокОпераций.Добавить(Перечисления.ВидыОперацийСписаниеДенежныхСредств.ВозвратДенежныхСредствПокупателю);
	СписокОпераций.Добавить(Перечисления.ВидыОперацийСписаниеДенежныхСредств.РасчетыПоКредитамИЗаймамСКонтрагентами);
	СписокОпераций.Добавить(Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочиеРасчетыСКонтрагентами);
	
	Возврат(СписокОпераций);
	
КонецФункции

Функция ЕстьРасшифровкаПлатежа(ВидОперации) Экспорт
	
	СписокВидовСРасшифровкойПлатежа = ПолучитьСписокВидовОперацийСРасшифровкойПлатежа();
	
	Возврат СписокВидовСРасшифровкойПлатежа.НайтиПоЗначению(ВидОперации) <> Неопределено;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Списание с банковского счета""';uk='Реєстр документів ""Списання з банківського рахунку""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
