#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Анализная карточка
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АнализнаяКарточка";
	КомандаПечати.Представление = НСтр("ru='Анализная карточка (Форма 47)';uk='Аналізна картка (Форма 47)'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";

    // Анализная карточка на отгрузку
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АнализнаяКарточкаНаОтгрузку";
	КомандаПечати.Представление = НСтр("ru='Анализная карточка на отгрузку (Форма 47)';uk='Аналізна картка на відвантаження (Форма 47)'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";

    // Анализ муки и манной крупы
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АнализМукиИМаннойКрупы";
	КомандаПечати.Представление = НСтр("ru='Анализ муки и манной крупы (Форма 45)';uk='Аналіз муки і манной каші(Форма 45)'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	
	// Анализ муки и манной крупы 2021
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АнализМукиИМаннойКрупы2021";
	КомандаПечати.Представление = НСтр("ru='Анализ муки и манной крупы (Форма 45) (2021)';uk='Аналіз муки і манной каші(Форма 45) (2021)'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	
	// Карточка лабораторного анализа зерна
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_UK_КарточкаЛабораторногоАнализаЗерна";
	КомандаПечати.Представление = НСтр("ru='Карточка лабораторного анализа зерна (Форма 47)';uk='Карточка лабораторного дослідження зерна (Форма 47)'");
   	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Лабораторный анализ""';uk='Реєстр документів ""Лабораторний аналіз""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АнализнаяКарточка") Тогда
        
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АнализнаяКарточка", НСтр("ru='Анализная карточка';uk='Аналізна картка'"), 
            ПечатьАнализнаяКарточка(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ЛабораторныйАнализ.ПФ_MXL_АнализнаяКарточка", , Истина);
             
    ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АнализнаяКарточкаНаОтгрузку") Тогда
        
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АнализнаяКарточкаНаОтгрузку", НСтр("ru='Анализная карточка на отгрузку';uk='Аналізна картка на відвантаження'"), 
            ПечатьАнализнаяКарточкаНаОтгрузку(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ЛабораторныйАнализ.ПФ_MXL_АнализнаяКарточкаНаОтгрузку", , Истина);
        
    ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АнализМукиИМаннойКрупы") Тогда
        
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АнализМукиИМаннойКрупы", НСтр("ru='Анализ муки и манной крупы';uk='Аналіз муки і манной каші'"), 
            ПечатьАнализМукиИМаннойКрупы(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ЛабораторныйАнализ.ПФ_MXL_АнализМукиМаннойКрупы", , Истина);
			
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АнализМукиИМаннойКрупы2021") Тогда
        
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АнализМукиИМаннойКрупы2021", НСтр("ru='Анализ муки и манной крупы (2021)';uk='Аналіз муки і манной каші (2021)'"), 
            ПечатьАнализМукиИМаннойКрупы_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ЛабораторныйАнализ.ПФ_MXL_UK_АнализМукиМаннойКрупы_2021", , Ложь);

	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_UK_КарточкаЛабораторногоАнализаЗерна") Тогда
        
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_UK_КарточкаЛабораторногоАнализаЗерна", НСтр("ru='Карточка лабораторного анализа зерна';uk='Карточка лабораторного дослідження зерна'"), 
            ПечатьКарточкаЛабораторногоАнализаЗерна(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ЛабораторныйАнализ.ПФ_MXL_UK_КарточкаЛабораторногоАнализаЗерна", , Ложь);

    КонецЕсли;
	
	
КонецПроцедуры

Функция ПечатьАнализнаяКарточка(МассивОбъектов, ОбъектыПечати,ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);

    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализ.Организация КАК Организация,
		|	ИНАГРО_ЛабораторныйАнализ.Номер КАК Номер,
		|	ИНАГРО_ЛабораторныйАнализ.Владелец КАК Владелец,
		|	ИНАГРО_ЛабораторныйАнализ.Номенклатура КАК Номенклатура,
		|	ИНАГРО_ЛабораторныйАнализ.СтанцияНазначения КАК СтанцияНазначения,
		|	ИНАГРО_ЛабораторныйАнализ.СтанцияОтправления КАК СтанцияОтправления,
		|	ИНАГРО_ЛабораторныйАнализ.Получатель КАК Получатель,
		|	ИНАГРО_ЛабораторныйАнализ.Дата КАК Дата,
		|	ИНАГРО_ЛабораторныйАнализ.ВладелецЛабАнализа КАК ВладелецЛабАнализа,
		|	ИНАГРО_ЛабораторныйАнализ.МассаПартии КАК МассаПартии,
		|	ИНАГРО_ЛабораторныйАнализ.Класс КАК Класс,
		|	ИНАГРО_ЛабораторныйАнализ.НомерТранспорта КАК НомерТранспорта,
		|	ИНАГРО_ЛабораторныйАнализ.МетодОпределенияСтекловидности КАК МетодОпределенияСтекловидности,
		|	ИНАГРО_ЛабораторныйАнализ.Комментарий КАК Примечание,
		|	ИНАГРО_ЛабораторныйАнализ.Силос КАК Силос,
		|	ИНАГРО_ЛабораторныйАнализ.Ответственный КАК Ответственный
		|ИЗ
		|	Документ.ИНАГРО_ЛабораторныйАнализ КАК ИНАГРО_ЛабораторныйАнализ
		|ГДЕ
		|	ИНАГРО_ЛабораторныйАнализ.Ссылка = &ТекущийДокумент";
    
    ЗапросРезультат = Новый Запрос;
    ЗапросРезультат.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка КАК Ссылка,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|ГДЕ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка = &ТекущийДокумент";
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ЛабораторныйАнализ_АнализнаяКарточка_";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЛабораторныйАнализ.ПФ_MXL_АнализнаяКарточка");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;

    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;

        // Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент",Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
		ЗапросРезультат.УстановитьПараметр("ТекущийДокумент",Ссылка); 
        Результаты = ЗапросРезультат.Выполнить().Выгрузить();
             
        СтруктураШапкиДокумента   = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(Ссылка);	
        Шапка = Макет.ПолучитьОбласть("Шапка");
        ИндексЗерновойПримеси = 1;
        ИндексСорнойПримеси = 1;
        СтрДругие = "";
        ПроходСита = "";
        
        
        Для Каждого Стр Из Результаты Цикл
            
            ИмяХарактеристики      = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПолучитьИмяПредопределенного(Стр.Характеристика);
            ЗначениеХарактеристики = Стр.Значение;
            ВесХарактеристики      = Стр.Вес;
            ДопИнфХарактеристики   = Стр.ДопИнформация;
            
            Если Стр.Характеристика.ТипХарактеристики = Перечисления.ИНАГРО_ТипыХарактеристик.ВидЗерновойПримеси  Тогда
                Если ИндексЗерновойПримеси > 9 Тогда
                    Продолжить;
                КонецЕсли;			
                ИмяХарактеристики = "ВидЗерновойПримеси" + ИндексЗерновойПримеси;
                ИндексЗерновойПримеси = ИндексЗерновойПримеси + 1;
                Если ВесХарактеристики=0 Тогда 
                    ЗначениеХарактеристики = "" + Стр.Характеристика +"  "+ДопИнфХарактеристики +"  -  " + СокрЛП(Формат(Стр.Значение,"ЧДЦ=2")) + " "+Стр.ЕдиницаИзмерения;
                Иначе
                    ЗначениеХарактеристики = "" + Стр.Характеристика +"  "+ДопИнфХарактеристики +"  -  " + "  вес- "+ВесХарактеристики+"гр -"+ Стр.Значение + " "+Стр.ЕдиницаИзмерения;
                КонецЕсли;
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(ЗначениеХарактеристики));
            ИначеЕсли Стр.Характеристика.ТипХарактеристики = Перечисления.ИНАГРО_ТипыХарактеристик.ВидСорнойПримеси или Стр.Характеристика.ТипХарактеристики = Перечисления.ИНАГРО_ТипыХарактеристик.ПроходСита Тогда
                Если ИндексСорнойПримеси > 9 Тогда
                    Продолжить;
                КонецЕсли;			
                ИмяХарактеристики = "ВидСорнойПримеси" + ИндексСорнойПримеси;
                ИндексСорнойПримеси = ИндексСорнойПримеси + 1;
                Если  ВесХарактеристики=0 Тогда 
                    ЗначениеХарактеристики = "" + Стр.Характеристика +"  "+ДопИнфХарактеристики +"  -  " + СокрЛП(Формат(Стр.Значение,"ЧДЦ=2")) + " "+Стр.ЕдиницаИзмерения;
                Иначе
                    ЗначениеХарактеристики = "" + Стр.Характеристика +"  "+ДопИнфХарактеристики +"  -  "+"  вес- "+ВесХарактеристики+"гр -" + Стр.Значение + " "+Стр.ЕдиницаИзмерения;
                КонецЕсли;
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(ЗначениеХарактеристики));	
            ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Белок Тогда 
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(Формат(ЗначениеХарактеристики,"ЧДЦ=2")));
            ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЧислоПадения Тогда 
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(Формат(ЗначениеХарактеристики,"ЧДЦ=2")));
            ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлопЧерепашки Тогда 
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(Формат(ЗначениеХарактеристики,"ЧДЦ=2")));
            ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.СажковоеЗерно Тогда 
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(Формат(ЗначениеХарактеристики,"ЧДЦ=2")));
            ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Тип Тогда
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(ЗначениеХарактеристики));
            ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПодТип Тогда
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(ЗначениеХарактеристики));
            ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Влажность Тогда
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(Формат(ЗначениеХарактеристики,"ЧДЦ=2")));
            ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда 
                
                Если КодЯзыкаПечать = "uk" Тогда 
                    Если ЗначениеХарактеристики = Перечисления.ИНАГРО_Цвета.Желтый Тогда				
                        СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП("Жовтий"));
                    ИначеЕсли ЗначениеХарактеристики = Перечисления.ИНАГРО_Цвета.Нормальный Тогда
                        СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП("Нормальний"));
                    ИначеЕсли ЗначениеХарактеристики = Перечисления.ИНАГРО_Цвета.Обесцвеченный Тогда
                        СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП("Знебарвлений"));
                    ИначеЕсли ЗначениеХарактеристики = Перечисления.ИНАГРО_Цвета.Потемневший Тогда
                        СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП("Потемнілий"));
                    ИначеЕсли ЗначениеХарактеристики = Перечисления.ИНАГРО_Цвета.Свойственный Тогда
                        СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП("Властивий"));
                    КонецЕсли;
                Иначе 
                    СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(ЗначениеХарактеристики));
                КонецЕсли;
                
            ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда
                Если КодЯзыкаПечать = "uk" Тогда 
                    Если ЗначениеХарактеристики = Перечисления.ИНАГРО_Запахи.Несвойственный Тогда				
                        СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП("Невластивий"));
                    ИначеЕсли ЗначениеХарактеристики = Перечисления.ИНАГРО_Запахи.Нормальный Тогда
                        СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП("Нормальний"));
                    ИначеЕсли ЗначениеХарактеристики = Перечисления.ИНАГРО_Запахи.Свойственный Тогда
                        СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП("Властивий"));
                    ИначеЕсли ЗначениеХарактеристики = Перечисления.ИНАГРО_Запахи.Солодовый Тогда
                        СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП("Солодовий"));
                    КонецЕсли;
                Иначе 
                    СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(ЗначениеХарактеристики));
                КонецЕсли;
                
            ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Натура Тогда 
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(ЗначениеХарактеристики));
                
            ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Стекловидность Тогда 
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(Формат(ЗначениеХарактеристики,"ЧДЦ=2")));
            ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКоличество Тогда 
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(Формат(ЗначениеХарактеристики,"ЧДЦ=2")));
            ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКачество Тогда
                Если (Число(ЗначениеХарактеристики) >= 45) и (Число(ЗначениеХарактеристики) <= 75) Тогда
                    Група = "I";
                ИначеЕсли (Число(ЗначениеХарактеристики) >= 80) и (Число(ЗначениеХарактеристики) <= 100) Тогда
                    Група = "II";
                ИначеЕсли (Число(ЗначениеХарактеристики) >= 105) и (Число(ЗначениеХарактеристики) <= 120) Тогда
                    Група = "III";
                КонецЕсли;
                СтруктураШапкиДокумента.Вставить("Група", Група);
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(Формат(ЗначениеХарактеристики,"ЧДЦ=2")));
            ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.СорнаяПримесь Тогда
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(Формат(ЗначениеХарактеристики,"ЧДЦ=2")));
            ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЗерноваяПримесь Тогда
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(Формат(ЗначениеХарактеристики,"ЧДЦ=2")));			
            ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда 
                СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(Формат(ЗначениеХарактеристики,"ЧДЦ=2")));
            Иначе
                СтрДругие = СтрДругие + Стр.Характеристика +" "+ДопИнфХарактеристики +" - " + Стр.Значение + " "+Стр.ЕдиницаИзмерения +"; ";
            КонецЕсли;		
            
        КонецЦикла;
        
        Шапка.Параметры.Заполнить(СтруктураШапкиДокумента);	
        Шапка.Параметры.СтрДругие               = СтрДругие;
        Шапка.Параметры.ДатаДок                 = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
        Шапка.Параметры.НомерДок                = ИНАГРО_Общий.ВернутьКодБезПрефикса(РезультатШапка.Номер);
        Шапка.Параметры.НомерВагона             = РезультатШапка.НомерТранспорта;
        Шапка.Параметры.Организация             = РезультатШапка.Организация.НаименованиеПолное; 
        Шапка.Параметры.ПунктПогрузкиРазгрузки  = РезультатШапка.Организация.НаименованиеПолное;
        Шапка.Параметры.Отправитель             = РезультатШапка.Владелец;
        ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Отправитель);  
        Шапка.Параметры.Номенклатура            = РезультатШапка.Номенклатура.НаименованиеПолное;
        ВидКультуры                             = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
        Шапка.Параметры.ГОСТ                    = ВидКультуры.ГОСТ;		
        Шапка.Параметры.Лаборант                = РезультатШапка.Ответственный;
        Шапка.Параметры.МасаПартии              = РезультатШапка.МассаПартии;
        Шапка.Параметры.Клас                    = РезультатШапка.Класс;
        Шапка.Параметры.МетодОпределения        = РезультатШапка.МетодОпределенияСтекловидности;
        Шапка.Параметры.Примечание              = РезультатШапка.Примечание;
        Шапка.Параметры.Силос                   = РезультатШапка.Силос;
        
        Если  РезультатШапка.ВладелецЛабАнализа  =  "Переоформление" тогда
            Шапка.Параметры.переоформление  = " НА ПЕРЕОФОРМЛЕНИЕ "   ;
            Шапка.Параметры.Получатель      = РезультатШапка.СтанцияНазначения;
        Иначе 
            Шапка.Параметры.переоформление  = "";
            Шапка.Параметры.Получатель      = РезультатШапка.Получатель;
            ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Получатель);
        КонецЕсли;
        
        ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
        ТабДокумент.Вывести(Шапка);
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка);

    КонецЦикла; 
   
	Возврат ТабДокумент;

КонецФункции

Функция ПечатьАнализнаяКарточкаНаОтгрузку(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)

	УстановитьПривилегированныйРежим(Истина);
    
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализ.Номер КАК Номер,
		|	ИНАГРО_ЛабораторныйАнализ.Дата КАК Дата,
		|	ИНАГРО_ЛабораторныйАнализ.Организация КАК Организация,
		|	ИНАГРО_ЛабораторныйАнализ.НомерУдостоверения КАК НомерУдостоверения,
		|	ИНАГРО_ЛабораторныйАнализ.СтанцияОтправления КАК СтанцияОтправления,
		|	ИНАГРО_ЛабораторныйАнализ.Владелец КАК Владелец,
		|	ИНАГРО_ЛабораторныйАнализ.НомерТранспорта КАК НомерВагона,
		|	ИНАГРО_ЛабораторныйАнализ.Получатель КАК Получатель,
		|	ИНАГРО_ЛабораторныйАнализ.СтанцияНазначения КАК СтанцияНазначения,
		|	ИНАГРО_ЛабораторныйАнализ.Номенклатура КАК Номенклатура,
		|	ИНАГРО_ЛабораторныйАнализ.ЧислоМест КАК ЧислоМест,
		|	ИНАГРО_ЛабораторныйАнализ.МассаПартии КАК МассаПартии,
		|	ИНАГРО_ЛабораторныйАнализ.Класс КАК Класс,
		|	ИНАГРО_ЛабораторныйАнализ.Комментарий КАК Примечание,
		|	ИНАГРО_ЛабораторныйАнализ.Силос КАК Силос
		|ИЗ
		|	Документ.ИНАГРО_ЛабораторныйАнализ КАК ИНАГРО_ЛабораторныйАнализ
		|ГДЕ
		|	ИНАГРО_ЛабораторныйАнализ.Ссылка = &ТекущийДокумент";
    
    ЗапросРезультат = Новый Запрос;
    ЗапросРезультат.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка КАК Ссылка,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК Ед,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|ГДЕ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка = &ТекущийДокумент";
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ЛабораторныйАнализ_АнализнаяКарточкаНаОтгрузку_";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЛабораторныйАнализ.ПФ_MXL_АнализнаяКарточкаНаОтгрузку");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;

    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросРезультат.УстановитьПараметр("ТекущийДокумент", Ссылка);
        Результаты = ЗапросРезультат.Выполнить().Выгрузить();
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        СтруктураШапкиДокумента   = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(Ссылка);	
        Шапка = Макет.ПолучитьОбласть("Шапка");
        ИндексЗерновойПримеси = 1;
        ИндексСорнойПримеси = 1;
        СтрДругие = "";
        ПроходСита = "";
        Для Каждого Стр Из Результаты Цикл
			
            ИмяХарактеристики = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПолучитьИмяПредопределенного(Стр.Характеристика);
            ЗначениеХарактеристики = Стр.Значение;
            
            Если Стр.Характеристика.ТипХарактеристики = Перечисления.ИНАГРО_ТипыХарактеристик.ПроходСита Тогда
                ПроходСита = "" + ПроходСита + "" + Стр.Характеристика + " - " + Стр.Значение + " "+Стр.Ед + "; ";
                Продолжить;
            ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКачество Тогда
                Если (Число(ЗначениеХарактеристики) >= 45) и (Число(ЗначениеХарактеристики) <= 75) Тогда
                    Група = "I";
                ИначеЕсли (Число(ЗначениеХарактеристики) >= 80) и (Число(ЗначениеХарактеристики) <= 100) Тогда
                    Група = "II";
                ИначеЕсли (Число(ЗначениеХарактеристики) >= 105) и (Число(ЗначениеХарактеристики) <= 120) Тогда
                    Група = "III";
                КонецЕсли;
                СтруктураШапкиДокумента.Вставить("Група", Група);
            ИначеЕсли ПустаяСтрока(ИмяХарактеристики) Тогда
                СтрДругие = "" + СтрДругие + "" + Стр.Характеристика + " - " + Стр.Значение + " "+Стр.Ед + "; ";
                Продолжить;
            ИначеЕсли Стр.Характеристика.ТипХарактеристики = Перечисления.ИНАГРО_ТипыХарактеристик.ВидЗерновойПримеси 
                И Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.БитоеЗерно Тогда
                БитеЗерно = "" + БитеЗерно + "" + Стр.Значение + "";
            КонецЕсли;
            
            СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(Формат(ЗначениеХарактеристики,"ЧДЦ=2")));
            
        КонецЦикла;
        
        СтруктураШапкиДокумента.Вставить("СтрДругие", СтрДругие);
        СтруктураШапкиДокумента.Вставить("ПроходСита", ПроходСита);
        СтруктураШапкиДокумента.Вставить("БитеЗерно", БитеЗерно);
        
        Шапка.Параметры.Заполнить(СтруктураШапкиДокумента);	
        Шапка.Параметры.ДатаДок             = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
        Шапка.Параметры.НомерДок            = ИНАГРО_Общий.ВернутьКодБезПрефикса(РезультатШапка.Номер);
        Шапка.Параметры.НомерДок            = РезультатШапка.Номер;
        Шапка.Параметры.Организация         = РезультатШапка.Организация.НаименованиеПолное; 
        Шапка.Параметры.НомерУдостоверения  = РезультатШапка.НомерУдостоверения;
        Шапка.Параметры.СтанцияОтправления  = РезультатШапка.СтанцияОтправления;
        Шапка.Параметры.Отправитель         = РезультатШапка.Владелец;
        Шапка.Параметры.Силос               = РезультатШапка.Силос;
        ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Отправитель);
        Шапка.Параметры.НомерВагона         = РезультатШапка.НомерВагона;
        Шапка.Параметры.Получатель          = РезультатШапка.Получатель;
        ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Получатель);
        Шапка.Параметры.СтанцияНазначения   = РезультатШапка.СтанцияНазначения;
        Шапка.Параметры.Номенклатура        = РезультатШапка.Номенклатура.НаименованиеПолное;
        Шапка.Параметры.Клас                = РезультатШапка.Класс;
        Шапка.Параметры.МасаПартии          = РезультатШапка.МассаПартии;
        ВидКультуры = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
        Шапка.Параметры.ЧислоМест           = РезультатШапка.ЧислоМест;
        Шапка.Параметры.Примечание          = РезультатШапка.Примечание;
        ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
        ТабДокумент.ИмяПараметровПечати     = "ИНАГРО_ЛабораторныйАнализ_АнализнаяКарточкаНаОтгрузку";
        
        ТабДокумент.Вывести(Шапка);
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка);

	КонецЦикла;
	
    Возврат ТабДокумент;

КонецФункции

Функция ПечатьАнализМукиИМаннойКрупы(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализ.Номер КАК Номер,
		|	ИНАГРО_ЛабораторныйАнализ.Дата КАК Дата,
		|	ИНАГРО_ЛабораторныйАнализ.Организация КАК Организация,
		|	ИНАГРО_ЛабораторныйАнализ.НомерУдостоверения КАК НомерУдостоверения,
		|	ИНАГРО_ЛабораторныйАнализ.СтанцияОтправления КАК СтанцияОтправления,
		|	ИНАГРО_ЛабораторныйАнализ.Владелец КАК Владелец,
		|	ИНАГРО_ЛабораторныйАнализ.НомерТранспорта КАК НомерВагона,
		|	ИНАГРО_ЛабораторныйАнализ.Получатель КАК Получатель,
		|	ИНАГРО_ЛабораторныйАнализ.СтанцияНазначения КАК СтанцияНазначения,
		|	ИНАГРО_ЛабораторныйАнализ.Номенклатура КАК Номенклатура,
		|	ИНАГРО_ЛабораторныйАнализ.ЧислоМест КАК ЧислоМест,
		|	ИНАГРО_ЛабораторныйАнализ.НомерПробы КАК НомерПробы,
		|	ИНАГРО_ЛабораторныйАнализ.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_ЛабораторныйАнализ.МассаПартии КАК МассаПартии,
		|	ИНАГРО_ЛабораторныйАнализ.Склад КАК Склад,
		|	ИНАГРО_ЛабораторныйАнализ.Сорт КАК Сорт,
		|	ИНАГРО_ЛабораторныйАнализ.Комментарий КАК Примечание
		|ИЗ
		|	Документ.ИНАГРО_ЛабораторныйАнализ КАК ИНАГРО_ЛабораторныйАнализ
		|ГДЕ
		|	ИНАГРО_ЛабораторныйАнализ.Ссылка = &ТекущийДокумент";
    
    ЗапросРезультат = Новый Запрос;
    ЗапросРезультат.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка КАК Ссылка,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|ГДЕ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка = &ТекущийДокумент";
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ЛабораторныйАнализ_АнализМукиМаннойКрупы_";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЛабораторныйАнализ.ПФ_MXL_АнализМукиМаннойКрупы");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;

    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросРезультат.УстановитьПараметр("ТекущийДокумент", Ссылка);
        Результаты = ЗапросРезультат.Выполнить().Выгрузить();
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        СтруктураШапкиДокумента = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(Ссылка);	
        СведенияООтправителе    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(РезультатШапка.Организация, РезультатШапка.Дата);
        СведенияОВладельце      = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(РезультатШапка.Владелец, РезультатШапка.Дата);
        СведенияОПолучателе     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(РезультатШапка.Получатель, РезультатШапка.Дата);
        
        Шапка = Макет.ПолучитьОбласть("Шапка");
        Шапка.Параметры.Номер           = ИНАГРО_Общий.ВернутьКодБезПрефикса(РезультатШапка.Номер); 
        Шапка.Параметры.День            = Формат(РезультатШапка.Дата, "ДФ=дд");
        Шапка.Параметры.Месяц           = Формат(РезультатШапка.Дата, "ДФ=ММММ");
        Шапка.Параметры.Год             = Формат(РезультатШапка.Дата, "ДФ=гг");
        Шапка.Параметры.ЄДРПОУ          = СведенияООтправителе.КодПоЕДРПОУ; 
        Шапка.Параметры.Организация     = РезультатШапка.Организация.НаименованиеПолное;
        Шапка.Параметры.удостоверения   = РезультатШапка.НомерУдостоверения;
        Шапка.Параметры.Номенклатура    = РезультатШапка.Номенклатура;  
        Шапка.Параметры.ПробаНомер      = РезультатШапка.НомерПробы; 
        Шапка.Параметры.МассаПробы      = РезультатШапка.ВесОбразцов;
        Шапка.Параметры.ПунктНагрузки   = РезультатШапка.СтанцияОтправления;
        Шапка.Параметры.Отправитель     = РезультатШапка.Владелец; 
        Шапка.Параметры.ЄДРПОУ1         = СведенияОВладельце.КодПоЕДРПОУ;
        Шапка.Параметры.Вагон           = РезультатШапка.НомерВагона;
        Шапка.Параметры.Масса           = РезультатШапка.МассаПартии;
        Шапка.Параметры.ЧислоМест       = РезультатШапка.ЧислоМест;
        Шапка.Параметры.СкладНомер      = РезультатШапка.Склад;
        Шапка.Параметры.ПунктРазгрузки  = РезультатШапка.СтанцияНазначения;
        Шапка.Параметры.Получатель      = РезультатШапка.Получатель;
        Шапка.Параметры.ЄДРПОУ2         = СведенияОПолучателе.КодПоЕДРПОУ;
        Шапка.Параметры.ВидМукиКруп     = РезультатШапка.Номенклатура;  
        Шапка.Параметры.СортНомер       = РезультатШапка.Сорт;
        Шапка.Параметры.Примечание      = РезультатШапка.Примечание;
        
        Для каждого СтрокаТЧ из Результаты Цикл
            Значение = СтрокаТЧ.Значение;
            Если ТипЗнч(Значение) = Тип("Строка") Тогда
                Значение = СокрЛП(СтрокаТЧ.Значение)
            КонецЕсли;
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда
                Если КодЯзыкаПечать = "uk" Тогда 
                    Если Значение = Перечисления.ИНАГРО_Цвета.Желтый Тогда				
                        Шапка.Параметры.Цвет = "Жовтий";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Цвета.Нормальный Тогда
                        Шапка.Параметры.Цвет = "Нормальний";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Цвета.Обесцвеченный Тогда
                        Шапка.Параметры.Цвет = "Знебарвлений";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Цвета.Потемневший Тогда
                        Шапка.Параметры.Цвет = "Потемнілий";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Цвета.Свойственный Тогда
                        Шапка.Параметры.Цвет = "Властивий";
                    КонецЕсли;
                Иначе 
                    Шапка.Параметры.Цвет = Значение;
                КонецЕсли;
            КонецЕсли;	
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда
                Если КодЯзыкаПечать = "uk" Тогда 
                    Если Значение = Перечисления.ИНАГРО_Запахи.Несвойственный Тогда				
                        Шапка.Параметры.Запах = "Невластивий";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Запахи.Нормальный Тогда
                        Шапка.Параметры.Запах = "Нормальний";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Запахи.Свойственный Тогда
                        Шапка.Параметры.Запах = "Властивий";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Запахи.Солодовый Тогда
                        Шапка.Параметры.Запах = "Солодовий";
                    КонецЕсли;
                Иначе 
                    Шапка.Параметры.Запах = Значение;
                КонецЕсли;
            КонецЕсли;
            
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Вкус Тогда   
                Шапка.Параметры.Вкус = Значение;
            КонецЕсли;
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Влажность
                Тогда   
                Шапка.Параметры.Влажность = Значение;
            КонецЕсли;
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зольность
                Тогда   
                Шапка.Параметры.Зольность = Значение;
            КонецЕсли;
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПроходСита
                Тогда   	
                Шапка.Параметры.ПрСита = Значение;
            КонецЕсли;
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКоличество
                Тогда   	
                Шапка.Параметры.Количество = Значение;
            КонецЕсли;
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКачество
                Тогда   	
                Шапка.Параметры.Качество = Значение;
            КонецЕсли;
        КонецЦикла;
        
        ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
        ТабДокумент.ИмяПараметровПечати     = "ИНАГРО_ЛабораторныйАнализ_АнализМукиМаннойКрупы";
        ТабДокумент.Вывести(Шапка);
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка);

    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьАнализМукиИМаннойКрупы_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
    
    УстановитьПривилегированныйРежим(Истина);
    
    ЗапросШапка = Новый Запрос;
    ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализ.Номер КАК Номер,
		|	ИНАГРО_ЛабораторныйАнализ.Дата КАК Дата,
		|	ИНАГРО_ЛабораторныйАнализ.Организация КАК Организация,
		|	ИНАГРО_ЛабораторныйАнализ.НомерУдостоверения КАК НомерУдостоверения,
		|	ИНАГРО_ЛабораторныйАнализ.СтанцияОтправления КАК СтанцияОтправления,
		|	ИНАГРО_ЛабораторныйАнализ.Владелец КАК Владелец,
		|	ИНАГРО_ЛабораторныйАнализ.НомерТранспорта КАК НомерВагона,
		|	ИНАГРО_ЛабораторныйАнализ.Получатель КАК Получатель,
		|	ИНАГРО_ЛабораторныйАнализ.СтанцияНазначения КАК СтанцияНазначения,
		|	ИНАГРО_ЛабораторныйАнализ.Номенклатура КАК Номенклатура,
		|	ИНАГРО_ЛабораторныйАнализ.ЧислоМест КАК ЧислоМест,
		|	ИНАГРО_ЛабораторныйАнализ.НомерПробы КАК НомерПробы,
		|	ИНАГРО_ЛабораторныйАнализ.ВесОбразцов КАК ВесОбразцов,
		|	ИНАГРО_ЛабораторныйАнализ.МассаПартии КАК МассаПартии,
		|	ИНАГРО_ЛабораторныйАнализ.Склад КАК Склад,
		|	ИНАГРО_ЛабораторныйАнализ.Сорт КАК Сорт,
		|	ИНАГРО_ЛабораторныйАнализ.Комментарий КАК Примечание
		|ИЗ
		|	Документ.ИНАГРО_ЛабораторныйАнализ КАК ИНАГРО_ЛабораторныйАнализ
		|ГДЕ
		|	ИНАГРО_ЛабораторныйАнализ.Ссылка = &ТекущийДокумент";
    
    ЗапросРезультат = Новый Запрос;
    ЗапросРезультат.Текст =  
		"ВЫБРАТЬ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка КАК Ссылка,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
		|ИЗ
		|	Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
		|ГДЕ
		|	ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка = &ТекущийДокумент";
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ЛабораторныйАнализ_АнализМукиМаннойКрупы2021";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЛабораторныйАнализ.ПФ_MXL_UK_АнализМукиМаннойКрупы_2021");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;

    Для каждого Ссылка Из МассивОбъектов Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        ЗапросРезультат.УстановитьПараметр("ТекущийДокумент", Ссылка);
        Результаты = ЗапросРезультат.Выполнить().Выгрузить();
        
        ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
        РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
        РезультатШапка.Следующий();
        
        СтруктураШапкиДокумента = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(Ссылка);	
        СведенияООтправителе    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(РезультатШапка.Организация, РезультатШапка.Дата);
        СведенияОВладельце      = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(РезультатШапка.Владелец, РезультатШапка.Дата);
        СведенияОПолучателе     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(РезультатШапка.Получатель, РезультатШапка.Дата);
        
        Шапка = Макет.ПолучитьОбласть("Шапка");
        Шапка.Параметры.Номер           = ИНАГРО_Общий.ВернутьКодБезПрефикса(РезультатШапка.Номер); 
        Шапка.Параметры.День            = Формат(РезультатШапка.Дата, "ДФ=дд");
        Шапка.Параметры.Месяц           = Формат(РезультатШапка.Дата, "ДФ=ММММ");
        Шапка.Параметры.Год             = Формат(РезультатШапка.Дата, "ДФ=гг");
        Шапка.Параметры.ЄДРПОУ          = СведенияООтправителе.КодПоЕДРПОУ; 
        Шапка.Параметры.Организация     = РезультатШапка.Организация.НаименованиеПолное;
        Шапка.Параметры.удостоверения   = РезультатШапка.НомерУдостоверения;
        Шапка.Параметры.Номенклатура    = РезультатШапка.Номенклатура;  
        Шапка.Параметры.ПробаНомер      = РезультатШапка.НомерПробы; 
        Шапка.Параметры.МассаПробы      = РезультатШапка.ВесОбразцов;
        Шапка.Параметры.ПунктНагрузки   = РезультатШапка.СтанцияОтправления;
        Шапка.Параметры.Отправитель     = РезультатШапка.Владелец; 
        Шапка.Параметры.ЄДРПОУ1         = СведенияОВладельце.КодПоЕДРПОУ;
        Шапка.Параметры.Вагон           = РезультатШапка.НомерВагона;
        Шапка.Параметры.Масса           = РезультатШапка.МассаПартии;
        Шапка.Параметры.ЧислоМест       = РезультатШапка.ЧислоМест;
        Шапка.Параметры.СкладНомер      = РезультатШапка.Склад;
        Шапка.Параметры.ПунктРазгрузки  = РезультатШапка.СтанцияНазначения;
        Шапка.Параметры.Получатель      = РезультатШапка.Получатель;
        Шапка.Параметры.ЄДРПОУ2         = СведенияОПолучателе.КодПоЕДРПОУ;
        Шапка.Параметры.ВидМукиКруп     = РезультатШапка.Номенклатура;  
        Шапка.Параметры.СортНомер       = РезультатШапка.Сорт;
        Шапка.Параметры.Примечание      = РезультатШапка.Примечание;
        
        Для каждого СтрокаТЧ из Результаты Цикл
            Значение = СтрокаТЧ.Значение;
            Если ТипЗнч(Значение) = Тип("Строка") Тогда
                Значение = СокрЛП(СтрокаТЧ.Значение)
            КонецЕсли;
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда
                Если КодЯзыкаПечать = "uk" Тогда 
                    Если Значение = Перечисления.ИНАГРО_Цвета.Желтый Тогда				
                        Шапка.Параметры.Цвет = "Жовтий";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Цвета.Нормальный Тогда
                        Шапка.Параметры.Цвет = "Нормальний";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Цвета.Обесцвеченный Тогда
                        Шапка.Параметры.Цвет = "Знебарвлений";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Цвета.Потемневший Тогда
                        Шапка.Параметры.Цвет = "Потемнілий";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Цвета.Свойственный Тогда
                        Шапка.Параметры.Цвет = "Властивий";
                    КонецЕсли;
                Иначе 
                    Шапка.Параметры.Цвет = Значение;
                КонецЕсли;
            КонецЕсли;	
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда
                Если КодЯзыкаПечать = "uk" Тогда 
                    Если Значение = Перечисления.ИНАГРО_Запахи.Несвойственный Тогда				
                        Шапка.Параметры.Запах = "Невластивий";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Запахи.Нормальный Тогда
                        Шапка.Параметры.Запах = "Нормальний";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Запахи.Свойственный Тогда
                        Шапка.Параметры.Запах = "Властивий";
                    ИначеЕсли Значение = Перечисления.ИНАГРО_Запахи.Солодовый Тогда
                        Шапка.Параметры.Запах = "Солодовий";
                    КонецЕсли;
                Иначе 
                    Шапка.Параметры.Запах = Значение;
                КонецЕсли;
            КонецЕсли;
            
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Вкус Тогда   
                Шапка.Параметры.Вкус = Значение;
            КонецЕсли;
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Влажность
                Тогда   
                Шапка.Параметры.Влажность = Значение;
            КонецЕсли;
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зольность
                Тогда   
                Шапка.Параметры.Зольность = Значение;
            КонецЕсли;
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПроходСита
                Тогда   	
                Шапка.Параметры.ПрСита = Значение;
            КонецЕсли;
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКоличество
                Тогда   	
                Шапка.Параметры.Количество = Значение;
            КонецЕсли;
            Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКачество
                Тогда   	
                Шапка.Параметры.Качество = Значение;
            КонецЕсли;
        КонецЦикла;
        
        ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
        ТабДокумент.ИмяПараметровПечати     = "ИНАГРО_ЛабораторныйАнализ_АнализМукиМаннойКрупы2021";
        ТабДокумент.Вывести(Шапка);
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка);

    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьКарточкаЛабораторногоАнализаЗерна(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)

	УстановитьПривилегированныйРежим(Истина);
    
	//ЗапросШапка = Новый Запрос;
	//
	//ЗапросШапка.Текст = 
	//	"ВЫБРАТЬ
	//	|	ИНАГРО_ЛабораторныйАнализ.Номер КАК Номер,
	//	|	ИНАГРО_ЛабораторныйАнализ.Дата КАК Дата,
	//	|	ИНАГРО_ЛабораторныйАнализ.Организация КАК Организация,
	//	|	ИНАГРО_ЛабораторныйАнализ.НомерУдостоверения КАК НомерУдостоверения,
	//	|	ИНАГРО_ЛабораторныйАнализ.СтанцияОтправления КАК СтанцияОтправления,
	//	|	ИНАГРО_ЛабораторныйАнализ.Владелец КАК Владелец,
	//	|	ИНАГРО_ЛабораторныйАнализ.НомерТранспорта КАК НомерВагона,
	//	|	ИНАГРО_ЛабораторныйАнализ.Получатель КАК Получатель,
	//	|	ИНАГРО_ЛабораторныйАнализ.СтанцияНазначения КАК СтанцияНазначения,
	//	|	ИНАГРО_ЛабораторныйАнализ.Номенклатура КАК Номенклатура,
	//	|	ИНАГРО_ЛабораторныйАнализ.ЧислоМест КАК ЧислоМест,
	//	|	ИНАГРО_ЛабораторныйАнализ.МассаПартии КАК МассаПартии,
	//	|	ИНАГРО_ЛабораторныйАнализ.Класс КАК Класс,
	//	|	ИНАГРО_ЛабораторныйАнализ.Комментарий КАК Примечание,
	//	|	ИНАГРО_ЛабораторныйАнализ.Силос КАК Силос
	//	|ИЗ
	//	|	Документ.ИНАГРО_ЛабораторныйАнализ КАК ИНАГРО_ЛабораторныйАнализ
	//	|ГДЕ
	//	|	ИНАГРО_ЛабораторныйАнализ.Ссылка = &ТекущийДокумент";
	//
	//ЗапросРезультат = Новый Запрос;
	//
	//ЗапросРезультат.Текст = 
	//	"ВЫБРАТЬ
	//	|	ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка КАК Ссылка,
	//	|	ИНАГРО_ЛабораторныйАнализРезультаты.НомерСтроки КАК НомерСтроки,
	//	|	ИНАГРО_ЛабораторныйАнализРезультаты.Характеристика КАК Характеристика,
	//	|	ИНАГРО_ЛабораторныйАнализРезультаты.ЕдиницаИзмерения КАК Ед,
	//	|	ИНАГРО_ЛабораторныйАнализРезультаты.Значение КАК Значение,
	//	|	ИНАГРО_ЛабораторныйАнализРезультаты.Вес КАК Вес,
	//	|	ИНАГРО_ЛабораторныйАнализРезультаты.ДопИнформация КАК ДопИнформация,
	//	|	ИНАГРО_ЛабораторныйАнализРезультаты.Удалить КАК Удалить
	//	|ИЗ
	//	|	Документ.ИНАГРО_ЛабораторныйАнализ.Результаты КАК ИНАГРО_ЛабораторныйАнализРезультаты
	//	|ГДЕ
	//	|	ИНАГРО_ЛабораторныйАнализРезультаты.Ссылка = &ТекущийДокумент";
    
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_ЛабораторныйАнализ_арточкаЛабораторногоАнализаЗерна";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЛабораторныйАнализ.ПФ_MXL_UK_КарточкаЛабораторногоАнализаЗерна");
    
    // печать производится на языке, указанном в настройках пользователя
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
    
    ПервыйДокумент = Истина;

    Для Каждого Ссылка Из МассивОбъектов Цикл
		
		СведенияОбОрганизации   = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата);
        СведенияОВладельце      = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Владелец, Ссылка.Дата);
        СведенияОПолучателе     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Получатель, Ссылка.Дата);
		ВидКультуры  = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(Ссылка.Номенклатура, "ВидКультуры");

        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
		
		ПервыйДокумент = Ложь;
        
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
		//ЗапросРезультат.УстановитьПараметр("ТекущийДокумент", Ссылка);
		//Результаты = ЗапросРезультат.Выполнить().Выгрузить();
        
		//ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
		//РезультатШапка = ЗапросШапка.Выполнить().Выбрать();
		//РезультатШапка.Следующий();
        
        СтруктураШапкиДокумента   = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(Ссылка);	
		
		Шапка = Макет.ПолучитьОбласть("Шапка");		
		Шапка.Параметры.Заполнить(Ссылка);		
		Шапка.Параметры.Организация  = ?(ЗначениеЗаполнено(Ссылка.Организация.НаименованиеПолное), Ссылка.Организация.НаименованиеПолное, Ссылка.Организация.Наименование);
		Шапка.Параметры.ЄДРПОУ       = СведенияОбОрганизации.КодПоЕДРПОУ;
		Шапка.Параметры.День         = Формат(Ссылка.Дата, "ДФ=дд");
		Шапка.Параметры.Месяц        = Формат(Ссылка.Дата, "ДФ=ММММ");
		Шапка.Параметры.Год          = Формат(Ссылка.Дата, "ДФ=гг");
		//Шапка.Параметры.Номенклатура = РезультатШапка.Номенклатура.НаименованиеПолное;
 		Шапка.Параметры.Отправитель   = ?(ЗначениеЗаполнено(Ссылка.Владелец.НаименованиеПолное), Ссылка.Владелец.НаименованиеПолное, Ссылка.Владелец.Наименование);
		Шапка.Параметры.ЄДРПОУВладелец       = СведенияОВладельце.КодПоЕДРПОУ;
		Шапка.Параметры.Получатель   = ?(ЗначениеЗаполнено(Ссылка.Получатель.НаименованиеПолное), Ссылка.Получатель.НаименованиеПолное, Ссылка.Получатель.Наименование);
		Шапка.Параметры.ЄДРПОУПолучатель       = СведенияОПолучателе.КодПоЕДРПОУ;
		Шапка.Параметры.ПунктПогрузкиРазгрузки  = ?(ЗначениеЗаполнено(Ссылка.Организация.НаименованиеПолное), Ссылка.Организация.НаименованиеПолное, Ссылка.Организация.Наименование);

		Шапка.Параметры.НормативныйДокумент      = ВидКультуры.ГОСТ;
		//Шапка.Параметры.ДиаметрСита   = ВидКультуры.ДиаметрСита;

		
		//ИндексЗерновойПримеси = 1;
		//ИндексСорнойПримеси = 1;
		//СтрДругие = "";
		//ПроходСита = "";
		
		Для Каждого Стр Из Ссылка.Результаты Цикл
		
				Если Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Тип Тогда
					Шапка.Параметры.Тип = Стр.Значение;
				ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПодТип Тогда
					Шапка.Параметры.ПодТип = Стр.Значение;					
				ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Цвет Тогда
					Шапка.Параметры.Цвет = Стр.Значение;					
					ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Запах Тогда
					Шапка.Параметры.Запах = Стр.Значение;
				ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Натура Тогда
					Шапка.Параметры.Натура = Стр.Значение; 	
				ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Стекловидность Тогда
					Шапка.Параметры.Стекловидность = Стр.Значение;
	            ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Белок Тогда
					Шапка.Параметры.Белок = Стр.Значение;
				ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКоличество Тогда
					Шапка.Параметры.КлейковинаКоличество = Стр.Значение;
				ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКачество Тогда
					Если (Число(Стр.Значение) >= 45) И (Число(Стр.Значение) <= 75) Тогда
						Группа = "I";
					ИначеЕсли (Число(Стр.Значение) >= 80) И (Число(Стр.Значение) <= 100) Тогда
						Группа = "II";
					ИначеЕсли (Число(Стр.Значение) >= 105) И (Число(Стр.Значение) <= 120) Тогда
						Группа = "III";
					КонецЕсли;
					Шапка.Параметры.КлейковинаГруппа = Группа;
					Шапка.Параметры.КлейковинаКачество = Стр.Значение;
				ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЧислоПадения Тогда
					Шапка.Параметры.ЧислоПадения = Стр.Значение;
				ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.СажковоеЗерно Тогда 
               		Шапка.Параметры.СажковоеЗерно = Стр.Значение;
				ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлопЧерепашки Тогда	
					Шапка.Параметры.КлопЧерепашки = Стр.Значение;
				ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ОбрушеныхЗерен Тогда	
					Шапка.Параметры.ОбрушеныхЗерен = Стр.Значение;
				ИначеЕсли Стр.Характеристика=ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПроходСита Тогда	
					Шапка.Параметры.ПроходСита = Стр.Значение;
	            ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Зараженность Тогда   	
					Шапка.Параметры.Зараженность = Стр.Значение;
				ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Крупность Тогда   	
					Шапка.Параметры.Крупность = Стр.Значение;
				КонецЕсли;
				
			КонецЦикла; 

			
			
			//ИмяХарактеристики = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ПолучитьИмяПредопределенного(Стр.Характеристика);
			//ЗначениеХарактеристики = Стр.Значение;
			//
			//Если Стр.Характеристика.ТипХарактеристики = Перечисления.ИНАГРО_ТипыХарактеристик.ПроходСита Тогда
			//    ПроходСита = "" + ПроходСита + "" + Стр.Характеристика + " - " + Стр.Значение + " "+Стр.Ед + "; ";
			//    Продолжить;
			//ИначеЕсли Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.КлейковинаКачество Тогда
			//    Если (Число(ЗначениеХарактеристики) >= 45) и (Число(ЗначениеХарактеристики) <= 75) Тогда
			//        Група = "I";
			//    ИначеЕсли (Число(ЗначениеХарактеристики) >= 80) и (Число(ЗначениеХарактеристики) <= 100) Тогда
			//        Група = "II";
			//    ИначеЕсли (Число(ЗначениеХарактеристики) >= 105) и (Число(ЗначениеХарактеристики) <= 120) Тогда
			//        Група = "III";
			//    КонецЕсли;
			//    СтруктураШапкиДокумента.Вставить("Група", Група);
			//ИначеЕсли ПустаяСтрока(ИмяХарактеристики) Тогда
			//    СтрДругие = "" + СтрДругие + "" + Стр.Характеристика + " - " + Стр.Значение + " "+Стр.Ед + "; ";
			//    Продолжить;
			//ИначеЕсли Стр.Характеристика.ТипХарактеристики = Перечисления.ИНАГРО_ТипыХарактеристик.ВидЗерновойПримеси 
			//    И Стр.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.БитоеЗерно Тогда
			//    БитеЗерно = "" + БитеЗерно + "" + Стр.Значение + "";
			//КонецЕсли;
			//
			//СтруктураШапкиДокумента.Вставить(ИмяХарактеристики, СокрЛП(Формат(ЗначениеХарактеристики,"ЧДЦ=2")));
            
        
		//СтруктураШапкиДокумента.Вставить("СтрДругие", СтрДругие);
		//СтруктураШапкиДокумента.Вставить("ПроходСита", ПроходСита);
		//СтруктураШапкиДокумента.Вставить("БитеЗерно", БитеЗерно);
		//
		//Шапка.Параметры.Заполнить(СтруктураШапкиДокумента);	
		////Шапка.Параметры.ДатаДок             = Формат(РезультатШапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		////Шапка.Параметры.НомерДок            = ИНАГРО_Общий.ВернутьКодБезПрефикса(РезультатШапка.Номер);
		////Шапка.Параметры.НомерДок            = РезультатШапка.Номер;
		////Шапка.Параметры.Организация         = РезультатШапка.Организация.НаименованиеПолное; 
		//Шапка.Параметры.НомерУдостоверения  = РезультатШапка.НомерУдостоверения;
		//Шапка.Параметры.СтанцияОтправления  = РезультатШапка.СтанцияОтправления;
		////Шапка.Параметры.Отправитель         = РезультатШапка.Владелец;
		//Шапка.Параметры.Силос               = РезультатШапка.Силос;
		//ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Отправитель);
		////Шапка.Параметры.НомерВагона         = РезультатШапка.НомерВагона;
		////Шапка.Параметры.Получатель          = РезультатШапка.Получатель;
		//ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(Шапка.Параметры.Получатель);
		//Шапка.Параметры.СтанцияНазначения   = РезультатШапка.СтанцияНазначения;
		////Шапка.Параметры.Номенклатура        = РезультатШапка.Номенклатура.НаименованиеПолное;
		//Шапка.Параметры.Клас                = РезультатШапка.Класс;
		//Шапка.Параметры.МасаПартии          = РезультатШапка.МассаПартии;
		//ВидКультуры = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(РезультатШапка.Номенклатура,"ВидКультуры");
		//Шапка.Параметры.ЧислоМест           = РезультатШапка.ЧислоМест;
		//Шапка.Параметры.Примечание          = РезультатШапка.Примечание;
		//ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
		////ТабДокумент.ИмяПараметровПечати     = "ИНАГРО_ЛабораторныйАнализ_АнализнаяКарточкаНаОтгрузку";
        
        ТабДокумент.Вывести(Шапка);
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);

	КонецЦикла;
	
    Возврат ТабДокумент;

КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 
	
#Область ПрограммныйИнтерфейс

// Процедура заполняет табличную часть результатов
//
// Параметры:
// Объект - СправочникСсылка - объект контактной информации
// ЗаполнятьЛабАнализ - Булево - заполнять лабораторный анализ или нет.
//
Процедура ЗаполнитьТабличнуюЧастьРезультаты(Объект, ЗаполнятьЛабАнализ = Ложь) Экспорт
				
		НовыеВидыХарактеристик = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(Объект.Номенклатура, "ВидКультуры").ВидыХарактеристик.ВыгрузитьКолонку("ВидХарактеристики");
		
		Для Каждого НоваяХарактеристика Из НовыеВидыХарактеристик Цикл
			
			НоваяСтрока = Объект.Результаты.Добавить();
			НоваяСтрока.Удалить          = Истина;
			НоваяСтрока.Характеристика   = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.НайтиПоНаименованию(НоваяХарактеристика);
			НоваяСтрока.ЕдиницаИзмерения = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.НайтиПоНаименованию(НоваяХарактеристика).ЕдиницаИзмерения;
			ДанныеВидСвойства            = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.НайтиПоНаименованию(НоваяХарактеристика);
			НоваяСтрока.Значение         = ДанныеВидСвойства.ТипЗначения.ПривестиЗначение(НоваяСтрока.Значение);
			
			Если НоваяСтрока.Характеристика.ТипХарактеристики = Перечисления.ИНАГРО_ТипыХарактеристик.ПроходСита Тогда
				НоваяСтрока.ДопИнформация = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(Объект.Номенклатура, "ВидКультуры").ДиаметрСита;
			КонецЕсли;			
			
			Если ЗаполнятьЛабАнализ Тогда
				
				Если НоваяСтрока.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Влажность Тогда
					НоваяСтрока.Значение = Объект.Влажность;
					НоваяСтрока.Удалить  = Ложь;
				КонецЕсли;
				
				Если НоваяСтрока.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.СорнаяПримесь Тогда
					НоваяСтрока.Значение = Объект.СорнаяПримесь;
					НоваяСтрока.Удалить  = Ложь;
				КонецЕсли;
				
				Если НоваяСтрока.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЗерноваяПримесь Тогда
					НоваяСтрока.Значение = Объект.ЗерноваяПримесь;
					НоваяСтрока.Удалить  = Ложь;
				КонецЕсли;
				
				// Масличность
				Если НоваяСтрока.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Масличность Тогда
					НоваяСтрока.Значение = Объект.Масличность;
					НоваяСтрока.Удалить  = Ложь;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла; 		
		
КонецПроцедуры

// Функция возвращает номер анализа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
// Возвращаемое значение: 
// НомерАнализа - Строка - возвращается номер анализа 
Функция ЗаполнитьНомерАнализа(ДанныеОбъекта) Экспорт
	
	Если ДанныеОбъекта.НомерПробы <> 0 Тогда		
		НомерАнализа = СтрЗаменить(ДанныеОбъекта.НомерПробы, Символы.НПП, "");		
	ИначеЕсли ЗначениеЗаполнено(ДанныеОбъекта.ТипЖурнала) Тогда		
		Отбор = Новый Структура("ВидЖурнала, ТипЖурнала", ДанныеОбъекта.ВидЖурнала, ДанныеОбъекта.ТипЖурнала);		
		НомерАнализа = СтрЗаменить(СокрЛП(РегистрыСведений.ИНАГРО_НумерацияЖурналовЭлеватора.Получить(Отбор).ТекущийНомерЖурнала + 1), Символы.НПП, "");		
	КонецЕсли;
	
	Возврат НомерАнализа;
		
КонецФункции

#КонецОбласти

#КонецЕсли