#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Форма118
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_Форма118";
	КомандаПечати.Представление = НСтр("ru='Форма118';uk='Форма118'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая";

	// Форма118 2021
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_Форма118_2021";
	КомандаПечати.Представление = НСтр("ru='Форма118 (2021)';uk='Форма118 (2021)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОбщая";

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Рецепт""';uk='Реєстр документів ""Рецепт""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Форма118") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_Форма118", НСтр("ru='Форма118';uk='Форма118'"), 
            ПечатьФорма118(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_Рецепт.ПФ_MXL_Форма118", , Ложь);
    КонецЕсли;	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Форма118_2021") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_Форма118_2021", НСтр("ru='Форма118(2021)';uk='Форма118(2021)'"), 
            ПечатьФорма118_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_Рецепт.ПФ_MXL_Форма118_2021", , Ложь);
	КонецЕсли;
		
КонецПроцедуры

Функция ПечатьФорма118(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_Рецепт_Форма118";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_Рецепт.ПФ_MXL_Форма118");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;	
	
	Для каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.Заполнить(Ссылка);
		
		Шапка.Параметры.Организация = Ссылка.Организация.НаименованиеПолное;
		Шапка.Параметры.НомерДок = Ссылка.Номер;
		Шапка.Параметры.Дата = Формат(Ссылка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		
		ТабДокумент.Вывести(Шапка);
		
		Для Каждого ТабСтр Из Ссылка.СписокНоменклатуры Цикл
			СтрокаТаб = Макет.ПолучитьОбласть("Строка");
			СтрокаТаб.Параметры.Ном = ТабСтр.НомерСтроки;
			СтрокаТаб.Параметры.Заполнить(ТабСтр);
			ТабДокумент.Вывести(СтрокаТаб);
		КонецЦикла;
		
		Дно = Макет.ПолучитьОбласть("Дно");
		ТабДокумент.Вывести(Дно);
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
	КонецЦикла;
	
	Возврат ТабДокумент;	
	
КонецФункции 

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

Функция ПечатьФорма118_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_Рецепт_Форма118_2021";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_Рецепт.ПФ_MXL_Форма118_2021");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;	
	
	Для каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.Заполнить(Ссылка);
		
		Шапка.Параметры.Организация = Ссылка.Организация.НаименованиеПолное;
		Шапка.Параметры.ЕДРПОУ = Ссылка.Организация.КодПоЕДРПОУ;

		Шапка.Параметры.НомерДок = Ссылка.Номер;
		Дата  = Формат(Ссылка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.Число = Лев(Дата, 2);
		Шапка.Параметры.Дата = Сред(Дата, 3, СтрДлина(Дата)); 
		
		ТабДокумент.Вывести(Шапка);
		
		Для Каждого ТабСтр Из Ссылка.СписокНоменклатуры Цикл
			СтрокаТаб = Макет.ПолучитьОбласть("Строка");
			СтрокаТаб.Параметры.Заполнить(ТабСтр);
			ТабДокумент.Вывести(СтрокаТаб);
		КонецЦикла;
		
		Дно = Макет.ПолучитьОбласть("Дно");
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизацииИмяФамилия(Ссылка.Организация, Ссылка.Дата);
		Дно.Параметры.ЗавЛаб = Руководители.НачальникВТЛ;
		Дата  = Формат(Ссылка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Дно.Параметры.Число = Лев(Дата, 2);
		Дно.Параметры.Дата = Сред(Дата, 3, СтрДлина(Дата)); 
		ТабДокумент.Вывести(Дно);
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
			
	КонецЦикла;
	
	Возврат ТабДокумент;	
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;
	
	ВидОперации = Неопределено; 
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидОперации");
	КонецЕсли;
	
	// Если документ копируется, то вид формы получаем из копируемого документа.
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначениеКопирования")
			И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Параметры.ЗначениеКопирования, "ВидОперации");
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
			Если Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда
				ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("Основание")
			И ЗначениеЗаполнено(Параметры.Основание) Тогда
			ВидОперации = ОпределитьВидОперацииПоДокументуОснованию(Параметры.Основание);
		КонецЕсли;
	КонецЕсли;  
	
	СтандартнаяОбработка = Ложь;
	ФормыИНАГРО_Рецепт = ПолучитьСоответствиеВидовОперацийФормам();
	ВыбраннаяФорма = ФормыИНАГРО_Рецепт[ВидОперации];
	Если ВыбраннаяФорма = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСоответствиеВидовОперацийФормам() Экспорт

	ФормыИНАГРО_Рецепт = Новый Соответствие;
	
	ФормыИНАГРО_Рецепт.Вставить(Перечисления.ИНАГРО_ВидыОперацийРецепт.РецептПоОднойГотовойПродукции, 		"ФормаДокументаОбщая");
	ФормыИНАГРО_Рецепт.Вставить(Перечисления.ИНАГРО_ВидыОперацийРецепт.РецептПоНесколькимГотовымПродукциям, "ФормаДокументаОбщая");
	
	Возврат ФормыИНАГРО_Рецепт;

КонецФункции 

Функция ОпределитьВидОперацииПоДокументуОснованию(Основание) Экспорт

	Результат = Перечисления.ИНАГРО_ВидыОперацийРецепт.РецептПоОднойГотовойПродукции;
	
	Возврат Результат;

КонецФункции

Функция ПолучитьФиксированныйМассивВидовОпераций() Экспорт

	МассивВидовОпераций = Новый Массив;
	СписокВидовОпераций = Новый СписокЗначений;
	
	ЗначенияПеречисления = Метаданные.Перечисления.ИНАГРО_ВидыОперацийРецепт.ЗначенияПеречисления;
	Для Каждого ЗначениеПеречисления Из ЗначенияПеречисления Цикл
		ТекущийВидОперации = Перечисления.ИНАГРО_ВидыОперацийРецепт[ЗначениеПеречисления.Имя];
		МассивВидовОпераций.Добавить(ТекущийВидОперации);
	КонецЦикла;
	
	Возврат Новый ФиксированныйМассив(МассивВидовОпераций);

КонецФункции

#КонецОбласти

#КонецЕсли