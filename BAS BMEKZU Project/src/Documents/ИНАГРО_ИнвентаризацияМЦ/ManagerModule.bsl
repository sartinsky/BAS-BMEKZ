#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
	// Печать Инвентаризационной описи М-21 
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М21";
	КомандаПечати.Представление = НСтр("ru='Инвентаризационная опись (М-21)';uk='Інвентаризаційний опис (М-21)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Инвентаризация малоценных активов в эксплуатации""';uk='Реєстр документів ""Інвентаризація малоцінних активів в експлуатації""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Функция ПечатьМ21(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗапросДокумент = Новый Запрос;
	
	ЗапросДокумент.Текст = "ВЫБРАТЬ
	                       |	ИнвентаризацияТоваровНаСкладе.Номер,
	                       |	ИнвентаризацияТоваровНаСкладе.Дата,
	                       |	ИнвентаризацияТоваровНаСкладе.Организация,
	                       |	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеДата,
	                       |	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеНомер,
	                       |	ИНАГРО_РаботникиОрганизацийСрезПоследних.Должность КАК ДолжностьМатериальноОтветственного
	                       |ИЗ
	                       |	Документ.ИНАГРО_ИнвентаризацияМЦ КАК ИнвентаризацияТоваровНаСкладе
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&КонецПериода, ) КАК ИНАГРО_РаботникиОрганизацийСрезПоследних
	                       |		ПО ИнвентаризацияТоваровНаСкладе.Организация = ИНАГРО_РаботникиОрганизацийСрезПоследних.Организация
	                       |			И ИнвентаризацияТоваровНаСкладе.ОтветственноеЛицо = ИНАГРО_РаботникиОрганизацийСрезПоследних.Сотрудник.ФизическоеЛицо
	                       |			И ИнвентаризацияТоваровНаСкладе.ОтветственноеЛицо.КодПоДРФО = ИНАГРО_РаботникиОрганизацийСрезПоследних.Сотрудник.ФизическоеЛицо.КодПоДРФО
	                       |ГДЕ
	                       |	ИнвентаризацияТоваровНаСкладе.Ссылка = &ТекущийДокумент";
	
	ЗапросТовары = Новый Запрос;
	
	ЗапросТовары.Текст = "ВЫБРАТЬ
	                     |	ИнвентаризацияТоваровНаСкладе.НомерСтроки,
	                     |	ИнвентаризацияТоваровНаСкладе.Номенклатура,
	                     |	ИнвентаризацияТоваровНаСкладе.Номенклатура.Код КАК НоменклатурныйНомер,
	                     |	ИнвентаризацияТоваровНаСкладе.Номенклатура.НаименованиеПолное КАК Товар,
	                     |	ИнвентаризацияТоваровНаСкладе.Количество КАК Количество,
	                     |	ИнвентаризацияТоваровНаСкладе.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	                     |	ВЫБОР
	                     |		КОГДА ИнвентаризацияТоваровНаСкладе.Количество = 0
	                     |			ТОГДА ИнвентаризацияТоваровНаСкладе.Сумма
	                     |		ИНАЧЕ ИнвентаризацияТоваровНаСкладе.Сумма / ИнвентаризацияТоваровНаСкладе.Количество
	                     |	КОНЕЦ КАК ЦенаРегл,
	                     |	ИнвентаризацияТоваровНаСкладе.Сумма
	                     |ИЗ
	                     |	Документ.ИНАГРО_ИнвентаризацияМЦ.Товары КАК ИнвентаризацияТоваровНаСкладе
	                     |ГДЕ
	                     |	ИнвентаризацияТоваровНаСкладе.Ссылка = &ТекущийДокумент
	                     |
	                     |УПОРЯДОЧИТЬ ПО
	                     |	ИнвентаризацияТоваровНаСкладе.НомерСтроки";
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_ИнвентаризационнаяОпись_М21";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ИнвентаризацияМЦ.ПФ_MXL_ИнвентаризационнаяОпись_М21");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;

	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ЗапросДокумент.УстановитьПараметр("ТекущийДокумент", Ссылка);
		ЗапросДокумент.УстановитьПараметр("НаименованиеСлужебное", Ссылка);
		ЗапросДокумент.УстановитьПараметр("КонецПериода", Ссылка.Дата);

				
		Шапка = ЗапросДокумент.Выполнить().Выбрать();

		Шапка.Следующий();
		
		ЗапросТовары.УстановитьПараметр("ТекущийДокумент", Ссылка);
				  		
		ВыборкаСтрокТовары = ЗапросТовары.Выполнить().Выбрать();
		
		// Выводим данные об организации и складе 
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеМЦ = НСтр("ru='Рахунок - МЦ /Малоцінні активи в експлуатації/';uk='Рахунок - МЦ /Малоцінні активи в експлуатації/'");
		ОбластьМакета.Параметры.МатериальноОтветственный = Ссылка.ОтветственноеЛицо;
		
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата,,, КодЯзыкаПечать);
		ОбластьМакета.Параметры.НазваниеОрганизации 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,",,КодЯзыкаПечать);
		ОбластьМакета.Параметры.ЕДРПОУОрганизации  	 			= БухгалтерскийУчетПереопределяемый.ПолучитьКодОрганизации(СведенияОбОрганизации);
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку таблицы
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ОбластьМакета);

		КоличествоНаименований = 0;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				ТекстСообщения = НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Продолжить;
			КонецЕсли;

			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакета.Параметры.Товар = СокрП(ВыборкаСтрокТовары.Товар);
	        							
			ТабДокумент.Вывести(ОбластьМакета);

			КоличествоНаименований = КоличествоНаименований + 1;
			
		КонецЦикла;

		// Вывести строку Итого и подписи (подвал)
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ВыборкаПоКомиссии = ОбщегоНазначенияБПВызовСервера.ПолучитьСведенияОКомиссии(Ссылка);
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Заполнить(ВыборкаПоКомиссии);
		ОбластьМакета.Параметры.КоличествоНаименований = КоличествоНаименований;
		
		// число прописью без десятичных знаков
		ОбластьМакета.Параметры.КоличествоНаименованийПрописью = ОбщегоНазначенияБПВызовСервера.КоличествоПрописью(КоличествоНаименований, КодЯзыкаПечать);
		
		ТабДокумент.Вывести(ОбластьМакета);
			
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;
	
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабДокумент;

КонецФункции // ПечатьМ21()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М21") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М21", НСтр("ru='Инвентаризационная опись (М-21)';uk='Інвентаризаційний опис (М-21)'"), 
			ПечатьМ21(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,"Документ.ИНАГРО_ИнвентаризацияМЦ.ПФ_MXL_ИнвентаризационнаяОпись_М21", , Истина);
		
	КонецЕсли;
 	
КонецПроцедуры // Печать

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область ПрограммныйИнтерфейс

// Заполняет счета учета номенклатуры в табличной части документа
//
// Параметры:
//
// Объект - СправочникСсылка - объект контактной информации
// ИмяТабличнойЧасти - имя табличной части.
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СоответствиеСчетовУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаСпискаНоменклатуры(
		ДанныеОбъекта.Организация, ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "Номенклатура", Истина), ДанныеОбъекта.Склад, ДанныеОбъекта.Дата);
	
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		СчетаУчета = СоответствиеСчетовУчета.Получить(СтрокаТабличнойЧасти.Номенклатура);
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СчетаУчета, ИмяТабличнойЧасти);
	КонецЦикла;

КонецПроцедуры // ЗаполнитьСчетаУчетаВТабличнойЧасти

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо структура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре, ИмяТабличнойЧасти = "") Экспорт

	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчетаБУ") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСчетаБУ(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СчетаУчета);
	ЗаполнитьСчетаНУ(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СчетаУчета);

КонецПроцедуры // ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

// Заполняет счета БУ в строке табличной части.
Процедура ЗаполнитьСчетаБУ(Объект, СтрокаТЧ, ИмяТабЧасти, СчетаУчета)

	СтрокаТЧ.СчетУчетаБУ = СчетаУчета.СчетУчетаБУ;

КонецПроцедуры // ЗаполнитьСчетаБУ()

// Заполняет счета НУ в строке табличной части.
Процедура ЗаполнитьСчетаНУ(Объект, СтрокаТЧ, ИмяТабЧасти, СчетаУчета)
	

КонецПроцедуры // ЗаполнитьСчетаНУ()

#КонецОбласти  

#КонецЕсли	
