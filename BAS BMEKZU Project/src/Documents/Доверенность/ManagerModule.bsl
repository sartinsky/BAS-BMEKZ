#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Доверенность 
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Доверенность";
	КомандаПечати.Представление = НСтр("ru='Доверенность';uk='Довіреність'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Доверенность на одну страницу
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ДоверенностьСтраница";
	КомандаПечати.Представление = НСтр("ru='Доверенность на одну страницу';uk='Доручення на одну сторінку'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Доверенность на бланке
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ДоверенностьБланк";
	КомандаПечати.Представление = НСтр("ru='Доверенность (на бланк)';uk='Доручення (на бланк)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок       = 99;

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Доверенность""';uk='Реєстр документів ""Довіреність""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Функция ПечатьДоверенности(МассивОбъектов, ОбъектыПечати, НазваниеМакета)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("Дата", МассивОбъектов[0].Дата);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доверенность.Ссылка КАК Ссылка,
	|	Доверенность.Дата КАК ДатаДокумента,
	|	Доверенность.Организация КАК Организация,
	|	Доверенность.ФизЛицо КАК ФизЛицо,
	|	Доверенность.ФизЛицо.Представление КАК КомуВыдана,
	|	Доверенность.Контрагент КАК Поставщик,
	|	Доверенность.НаПолучениеОт КАК ПоставщикПредставление,
	|	Доверенность.ДатаДействия КАК ДатаДействия,
	|	Доверенность.ПоДокументу КАК ПоДокументу,
	|	Доверенность.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	Доверенность.Товары.(
	|		НомерСтроки КАК Номер,
	|		НаименованиеТовара КАК Ценности,
	|		ЕдиницаПоКлассификатору.Представление КАК ЕдиницаИзмерения,
	|		Количество КАК Количество
	|	) КАК Товары,
	|	Доверенность.ВидОперации КАК ВидОперации,
	|	Доверенность.Номер КАК Номер,
	|	РаботникиОрганизаций.Должность КАК Должность
	|ИЗ
	|	Документ.Доверенность КАК Доверенность
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ИНАГРО_РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|			ИНАГРО_РаботникиОрганизацийСрезПоследних.Организация КАК Организация,
	|			ИНАГРО_РаботникиОрганизацийСрезПоследних.Должность КАК Должность,
	|			ИНАГРО_РаботникиОрганизацийСрезПоследних.Период КАК Период
	|		ИЗ
	|			РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&Дата, ) КАК ИНАГРО_РаботникиОрганизацийСрезПоследних
	|		ГДЕ
	|			ИНАГРО_РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК РаботникиОрганизаций
	|		ПО Доверенность.Организация = РаботникиОрганизаций.Организация
	|			И Доверенность.ФизЛицо = РаботникиОрганизаций.Сотрудник.ФизическоеЛицо
	|ГДЕ
	|	Доверенность.Ссылка В(&МассивОбъектов)";	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Доверенность_Бланк";
	
	КодЯзыкаПечать = "uk"; // всегда на украинском
	
	Если НазваниеМакета = "ДоверенностьБланк" Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Доверенность.ПФ_MXL_UK_ДоверенностьБланк");
	Иначе
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Доверенность.ПФ_MXL_UK_Доверенность");
	КонецЕсли;
	
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ДанныеСотрудника     = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Шапка.Организация, Шапка.ФизЛицо, Шапка.ДатаДокумента);
		
		ФамилияИмяОтчествоДоверенного = ?(ДанныеСотрудника.Фамилия = Неопределено,"",ДанныеСотрудника.Фамилия + " ") + 
		?(ДанныеСотрудника.Имя = Неопределено,"",ДанныеСотрудника.Имя + " ") +
		?(ДанныеСотрудника.Отчество = Неопределено,"",ДанныеСотрудника.Отчество);
		ДолжностьДоверенного = СокрЛП(Шапка.Должность);  // << >> ИН-АГРО 
		
		
		ПаспортФизЛица = УчетЗарплаты.ДанныеФизическихЛиц(Шапка.Организация,Шапка.ФизЛицо, Шапка.ДатаДокумента);
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента,,Шапка.СтруктурнаяЕдиница);
		
				
		ОбластьМакета = Макет.ПолучитьОбласть("ЛицеваяСторона");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийДоверенность.Доверенность Тогда
			
			Если НазваниеМакета = "Доверенность" ИЛИ НазваниеМакета = "ДоверенностьСтраница" Тогда
				ОбластьМакета.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер,Истина,Истина);
			ИначеЕсли НазваниеМакета = "ДоверенностьБланк" Тогда
				ОбластьМакета.Параметры.Номер = "/" + ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер,Истина,Истина); 
			КонецЕсли;
			
		КонецЕсли;
		КомуВыдана = ?(ЗначениеЗаполнено(ДолжностьДоверенного),ДолжностьДоверенного + " ","");
		ОбластьМакета.Параметры.КомуВыдана = КомуВыдана + ФамилияИмяОтчествоДоверенного;
		ОбластьМакета.Параметры.НазваниеОрганизации		 		 = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,", Ложь);
		ОбластьМакета.Параметры.ЕДРПОУОрганизации	     		 = БухгалтерскийУчетПереопределяемый.ПолучитьКодОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.ЮридическийАдрес         		 = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "ЮридическийАдрес,", Ложь);
		ОбластьМакета.Параметры.НомерРасчетногоСчетаОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета,", Ложь,КодЯзыкаПечать);
		ОбластьМакета.Параметры.МФОБанкаОрганизации	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "МФО,", Ложь,КодЯзыкаПечать);
		ОбластьМакета.Параметры.БанкОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "Банк,", Ложь,КодЯзыкаПечать);
		ОбластьМакета.Параметры.ПодтверждающийДокументВид     	 = ПаспортФизЛица.ВидДокумента;
		ОбластьМакета.Параметры.ПодтверждающийДокументСерия      = ПаспортФизЛица.Серия;
		ОбластьМакета.Параметры.ПодтверждающийДокументНомер      = ПаспортФизЛица.Номер;
		ОбластьМакета.Параметры.ПодтверждающийДокументКемВыдан   = ПаспортФизЛица.КемВыдан;
		ОбластьМакета.Параметры.ПодтверждающийДокументДатаВыдачи = ПаспортФизЛица.ДатаВыдачи;
		ТабДокумент.Вывести(ОбластьМакета);

		Если (НазваниеМакета = "ДоверенностьСтраница") ТОгда
			ОбластьМакета = Макет.ПолучитьОбласть("Отступ");
			ТабДокумент.Вывести(ОбластьМакета);
		Иначе
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ОбластьМакета = Макет.ПолучитьОбласть("ОбратнаяСторонаШапка");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		Если (НазваниеМакета = "ДоверенностьБланк") Тогда
			Если (ВыборкаСтрокТовары.Количество() > 6) Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
				Сообщить(НСтр("ru='Количество строк в табличной части больше шести.Типовая форма М-2 ""Доверенность"" рассчитана на шесть строк!';uk='Кількість рядків у табличній частині більше шести.Типова форма М-2 ""Довіреність"" розрахована на шість рядків!'"), СтатусСообщения.Важное);
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("СтрокаВысокая");
			КонецЕсли;
		Иначе 
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСПереносом");
		КонецЕсли;		
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакета.Параметры.КоличествоПрописью = ОбщегоНазначенияБПВызовСервера.КоличествоПрописью(ВыборкаСтрокТовары.Количество, КодЯзыкаПечать);
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		Если (НазваниеМакета = "Доверенность") или (НазваниеМакета = "ДоверенностьСтраница") Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("ОбратнаяСторонаПодвал");
			
			Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Шапка.ДатаДокумента);
			
			Если ЗначениеЗаполнено(Руководители.РуководительФИО) Тогда
				ОбластьМакета.Параметры.ФИОРуководителя = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(Руководители.РуководительФИО.Фамилия, Руководители.РуководительФИО.Имя, Руководители.РуководительФИО.Отчество, Истина); // Кратко
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтерФИО) Тогда
				ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = ОбщегоНазначенияБПВызовСервера.ПолучитьФамилиюИмяОтчество(Руководители.ГлавныйБухгалтерФИО.Фамилия, Руководители.ГлавныйБухгалтерФИО.Имя, Руководители.ГлавныйБухгалтерФИО.Отчество, Истина); // Кратко
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			// В табличном документе зададим имя области, в которую был 
			// выведен объект. Нужно для возможности печати покомплектно.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат ТабДокумент;

КонецФункции // ПечатьДоверенности()

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для доверенности формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Доверенность") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Доверенность", НСтр("ru='Доверенность';uk='Довіреність'"), ПечатьДоверенности(МассивОбъектов, ОбъектыПечати, "Доверенность"));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоверенностьСтраница") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ДоверенностьСтраница", НСтр("ru='Доверенность на одну страницу';uk='Доручення на одну сторінку'"), ПечатьДоверенности(МассивОбъектов, ОбъектыПечати, "ДоверенностьСтраница"));
	КонецЕсли;
	
	// Проверяем, нужно ли для макета формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДоверенностьБланк") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ДоверенностьБланк", НСтр("ru='Доверенность (на бланк)';uk='Доручення (на бланк)'"), ПечатьДоверенности(МассивОбъектов, ОбъектыПечати, "ДоверенностьБланк"));
	КонецЕсли;
	
	//ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьТекстПоДокументу(Сделка) Экспорт
	
	КодЯзыка = "uk"; 
	ТекстПоДокументу = "";
	
	Если Не ЗначениеЗаполнено(Сделка) Тогда
		Возврат ТекстПоДокументу;	
	КонецЕсли; 
	
	
	ПредставлениеДокумента = НСтр("ru='Счет';uk='Рахунок'", КодЯзыка);
	
	ЗначенияРеквизитов = Новый Структура("НомерВходящегоДокумента, ДатаВходящегоДокумента");
	
	МетаданныеДокумента = Сделка.Метаданные();
	Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента("НомерВходящегоДокумента", МетаданныеДокумента) Тогда
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Сделка, ЗначенияРеквизитов);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначенияРеквизитов.НомерВходящегоДокумента) И ЗначениеЗаполнено(ЗначенияРеквизитов.ДатаВходящегоДокумента) Тогда
		ТекстПоДокументу = ПредставлениеДокумента + " № " + ЗначенияРеквизитов.НомерВходящегоДокумента
		+ НСтр("ru=' от ';uk=' від '",КодЯзыка) + Формат(ЗначенияРеквизитов.ДатаВходящегоДокумента, "ДЛФ=Д;Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыка))+ НСтр("ru=' г.';uk=' р.'",КодЯзыка);
	Иначе
		ТекстПоДокументу = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Сделка,ПредставлениеДокумента,КодЯзыка);		
	КонецЕсли;
	
	Возврат ТекстПоДокументу;
	
КонецФункции

#КонецОбласти

#КонецЕсли