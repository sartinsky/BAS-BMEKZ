#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура УстановитьТипПричиныНевыдачиПокупателюПоУмолчанию(Объект) Экспорт
	
	ДатаВступленияВСилуПриказа1379 = НалоговыйУчетПовтИсп.ДатаВступленияВСилуПриказа1379();
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		Если ДатаВступленияВСилуПриказа1379 >= Объект.Дата  Тогда
			Объект.ТипПричиныНевыдачиПокупателю = 2;
		Иначе	
			Объект.ТипПричиныНевыдачиПокупателю = 14;
		КонецЕсли;
		
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
		
		Объект.ТипПричиныНевыдачиПокупателю = 15;	
	
	ИначеЕсли  НЕ Объект.ВалютаДокумента = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета()
		    И НЕ  Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		Объект.ТипПричиныНевыдачиПокупателю = 7;
		
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа Тогда
		
		Если ДатаВступленияВСилуПриказа1379 >= Объект.Дата  Тогда
			Объект.ТипПричиныНевыдачиПокупателю = 4;
		Иначе	
			Объект.ТипПричиныНевыдачиПокупателю = 13;
		КонецЕсли;
		
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС Тогда
		
	    Объект.ТипПричиныНевыдачиПокупателю = 5;
		
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОблагаемыеОперации 
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
		
	    Объект.ТипПричиныНевыдачиПокупателю = 11;
		
	Иначе
		
		ИНН = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "ИНН");
		
		Если НЕ ЗначениеЗаполнено(ИНН)
   		    ИЛИ Найти("0123456789",Лев(СокрЛ(ИНН),1)) = 0 Тогда		
		
			// ИНАГРО 
			Если Объект.ДокументОснование <> Неопределено 
				И Объект.ДокументОснование.Метаданные().Реквизиты.Найти("ВидОперации") <> Неопределено 
				И (Объект.ДокументОснование.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийРеализации.ВСчетЗарплаты ИЛИ Объект.ДокументОснование.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийРеализации.ВСчетЗарплатыРаст) Тогда 
				Объект.ТипПричиныНевыдачиПокупателю = 3;
			Иначе
				Объект.ТипПричиныНевыдачиПокупателю = 2;
			КонецЕсли;
			
		Иначе	
		
			Объект.ТипПричиныНевыдачиПокупателю = 0;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.ТипПричиныНевыдачиПокупателю > 0 Тогда
		Если Объект.Дата < '2015-01-01' Тогда
			Объект.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Ложь;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Обновляет значение реквизита ЛьготаНДС И ОписаниеЛьготы при изменении номенклатуры или вида операции
Процедура ОбновитьЗначениеЛьготыНДС(Объект, СтрокаТабличнойЧасти = Неопределено) Экспорт
	
	Если Не (    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
		     ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации) Тогда
		Возврат;
	КонецЕсли; 
	
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		
		Для каждого СтрокаТЧ Из Объект.Товары Цикл
		
			ОбновитьЗначениеЛьготыНДС(Объект, СтрокаТЧ);
		
		КонецЦикла;
		
		Для каждого СтрокаТЧ Из Объект.Услуги Цикл
		
			ОбновитьЗначениеЛьготыНДС(Объект, СтрокаТЧ);
		
		КонецЦикла;
		
	Иначе
		
		Объект.ЛьготаНДС = СокрЛП(Объект.ЛьготаНДС);

		// ИНАГРО++
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура)
			И НЕ ТипЗнч(СтрокаТабличнойЧасти.Номенклатура) = Тип("СправочникСсылка.БиологическиеАктивы") Тогда
		
			ЛьготаТовара = СокрЛП(СтрокаТабличнойЧасти.Номенклатура.ЛьготаНДС);
			Если СтрДлина(ЛьготаТовара) = 0 Тогда
				Возврат;
			КонецЕсли; 
		
		КонецЕсли;
		// ИНАГРО--	
		
		Если Найти(Объект.ЛьготаНДС, ЛьготаТовара) = 0 Тогда
			
			Если СтрДлина(Объект.ЛьготаНДС) = 0 Тогда
			    Объект.ЛьготаНДС = ЛьготаТовара;
			Иначе	
			    Объект.ЛьготаНДС = Объект.ЛьготаНДС + ", " + ЛьготаТовара;
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Объект.ЛьготаНДС) Тогда
		Объект.ЛьготаНДСОписание = "Постачання за " + Объект.ЛьготаНДС + " Кодексу";
	Иначе
		Объект.ЛьготаНДСОписание = "";	
	КонецЕсли;
	
КонецПроцедуры

// копия общей процедуры НалоговыйУчет.ОпределитьСделкуНалоговыйУчет(). С одним отличием - Упрощ. нал. учет по расчетным документом в 
// качестве сделки всегда возвращает указанную в документе сделку
// 
Функция ОпределитьСделкуЛокально(Объект) Экспорт
	
	Если 	  Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОблагаемыеОперации
		  ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
		  ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОблагаемыеОперации
		  ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации
		  ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
		  ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		  
		  ИЛИ Объект.ДоговорКонтрагента.ВедениеВзаиморасчетовНУ = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом Тогда
		
		Возврат Неопределено;
		
	Иначе

		Возврат Объект.Сделка;

	КонецЕсли;
   
КонецФункции // ОпределитьДокументРасчетовСКонтрагентом()

Процедура ЗаполнитьРеквизитыНалоговогоУчетаНДСРегл(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабЧасти, СчетаУчета) Экспорт
	
	Возврат;
	
КонецПроцедуры

Процедура ЗаполнитьСтатьюДекларацииНДСНалоговыеОбязательства(ДанныеОбъекта, СтрокаТЧ, ИмяТабЧасти, СчетаУчета) Экспорт
	
	Если Врег(ИмяТабЧасти) = Врег("ВозвратнаяТара") Тогда
		Возврат
	КонецЕсли;

	Если  ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа 
		ИЛИ ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС Тогда
		
		Если ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС Тогда
			СтрокаТЧ.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НОПоСтавке20ПоставкаОФ;
		Иначе	
			СтрокаТЧ.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НОПоСтавке20;
		КонецЕсли;
		
	ИначеЕсли ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		СтрокаТЧ.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НОНерезидентУслуги;	
		
	ИначеЕсли СтрокаТЧ.СтавкаНДС = Перечисления.СтавкиНДС.НДС20
		  ИЛИ СтрокаТЧ.СтавкаНДС = Перечисления.СтавкиНДС.НДС14
		  ИЛИ СтрокаТЧ.СтавкаНДС = Перечисления.СтавкиНДС.НДС7
		  ИЛИ СтрокаТЧ.СтавкаНДС = Перечисления.СтавкиНДС.СпецСт8 Тогда // ИНАГРО
			
		// 20%
		Если (ИмяТабЧасти = "ОС" ИЛИ ИмяТабЧасти = "НМА") Тогда
		
			СтрокаТЧ.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НОПоСтавке20ПоставкаОФ;	
		
		Иначе		
			
			СтрокаТЧ.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НОПоСтавке20;
			
		КонецЕсли;
		
	ИначеЕсли СтрокаТЧ.СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
		
		// 0%
		Если ЗначениеЗаполнено(ДанныеОбъекта.ДоговорКонтрагента) 
			   И ДанныеОбъекта.ВалютаВзаиморасчетов <> ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета() Тогда
			
			// договор - внешнеэкономический
			СтрокаТЧ.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НОПоСтавке0Экспорт;	
			
		ИначеЕсли ДанныеОбъекта.НеЯвляетсяРезидентом = Истина Тогда
			// хоть документ и в гривне, но считаем это поставкой на экспорт
			СтрокаТЧ.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НОПоСтавке0Экспорт;
			
		Иначе
			
			// на терриории Украины
			СтрокаТЧ.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НОПоСтавке0Другие;
			
		КонецЕсли;
		
	ИначеЕсли СтрокаТЧ.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
		
		// освобожденные операции (п.5 Закона)
		Если ДанныеОбъекта.ТипПричиныНевыдачиПокупателю = 7 И ДанныеОбъекта.Дата >= '2020-01-01' Тогда
			СтрокаТЧ.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НОНеОблагЭкспорт;
		Иначе
			СтрокаТЧ.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НООсвобожден;
		КонецЕсли;
		
	ИначеЕсли СтрокаТЧ.СтавкаНДС = Перечисления.СтавкиНДС.НеНДС Тогда
		
		// операция не является объектом налогообложения (п.3 Закона)
		СтрокаТЧ.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НОНеОбъектНалог;
		
	Иначе
		
		//в строке ТЧ не указаны ставка НДС
		СтрокаТЧ.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.ПустаяСсылка();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабЧасти, СчетаУчета) Экспорт

	ЗаполнитьРеквизитыНалоговогоУчетаНДСРегл(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабЧасти, СчетаУчета);
    ЗаполнитьСтатьюДекларацииНДСНалоговыеОбязательства(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабЧасти, СчетаУчета);
	
КонецПроцедуры // ЗаполнитьСчетаУчетаВСтрокеТабЧасти()

Процедура ЗаполнитьСчетаУчетаВТабЧасти(Объект, ИмяТабЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабЧасти];
	
	ДанныеОбъекта = Новый Структура("Контрагент, ВидОперации, ДоговорКонтрагента, ВалютаВзаиморасчетов, НеЯвляетсяРезидентом, ТипПричиныНевыдачиПокупателю, Дата");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	ДанныеОбъекта.ДоговорКонтрагента   = Объект.ДоговорКонтрагента;
	ДанныеОбъекта.ВалютаВзаиморасчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДоговорКонтрагента, "ВалютаВзаиморасчетов");
	ДанныеОбъекта.НеЯвляетсяРезидентом = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	
	СчетаУчета = Неопределено;
	
	Для каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабЧасти, СчетаУчета);
	КонецЦикла;

КонецПроцедуры // ЗаполнитьСчетаУчетаВТабЧасти()

Процедура ЗаполнитьВидДоговора(Объект) Экспорт
	
	Объект.ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДоговорКонтрагента, "ВидДоговораПоГК");
	
КонецПроцедуры

// Процедура выполняет заполнение текста условий продажи.
//
// Параметры:
//   Нет.
//
Процедура ЗаполнитьУсловиеПродажи(Объект, Основание = Неопределено) Экспорт
	
	Если Основание = Неопределено Тогда
		Основание = Объект.ДокументОснование;
	КонецЕсли;
	
	УсловиеПродажи = Объект.ДоговорКонтрагента.НаименованиеДляПечати;
	
	Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации	Тогда
		
		НаименованиеДоговора = "";
		
		Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента.Номер) Тогда
		
			НаименованиеДоговора = "№ " + Объект.ДоговорКонтрагента.Номер;
		
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента.Дата) Тогда
		
			НаименованиеДоговора = НаименованиеДоговора +" від " + Формат(Объект.ДоговорКонтрагента.Дата, "ДФ='дд.ММ.гггг'");
		
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НаименованиеДоговора) Тогда
			УсловиеПродажи = "Договiр " + СокрЛП(НаименованиеДоговора);
		КонецЕсли;
		
	КонецЕсли; 
	
	ТекстСделки = "";
	
	Если ЗначениеЗаполнено(Объект.Сделка) Тогда
		Если   ТипЗнч(Объект.Сделка) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") Тогда
			ТекстСделки = "рахунок № "+ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Сделка.Номер,Истина,Истина)+" вiд "+Формат(Объект.Сделка.Дата, "ДФ='дд.ММ.гггг'");
		КонецЕсли;
	КонецЕсли;
	
	УсловиеПродажи = ?(ЗначениеЗаполнено(УсловиеПродажи),УсловиеПродажи + ", ","") + ТекстСделки; 
	
	// заполним текстовые реквизиты по-украински
	Если    ТипЗнч(Основание) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг")
		ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияУслугПоПереработке")Тогда
		
		УсловиеПродажи = ?(ЗначениеЗаполнено(УсловиеПродажи),УсловиеПродажи + ", ","") + "акт № "+ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Основание.Номер,Истина,Истина)+" вiд "+Формат(Основание.Дата, "ДФ='дд.ММ.гггг'");
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ЕстьТовары = (Основание.Товары.Количество() > 0);
		ЕстьУслуги = (Основание.Услуги.Количество() > 0);
		
		Если ЕстьУслуги И НЕ ЕстьТовары Тогда
			УсловиеПродажи = ?(ЗначениеЗаполнено(УсловиеПродажи),УсловиеПродажи + ", ","") + "акт № "+ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Основание.Номер,Истина,Истина)+" вiд "+Формат(Основание.Дата, "ДФ='дд.ММ.гггг'");
		//ИначеЕсли НЕ ЕстьУслуги И ЕстьТовары Тогда
	 	Иначе	
			УсловиеПродажи = ?(ЗначениеЗаполнено(УсловиеПродажи),УсловиеПродажи + ", ","") + "накладна № "+ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Основание.Номер,Истина,Истина)+" вiд "+Формат(Основание.Дата, "ДФ='дд.ММ.гггг'");
		//Иначе
		//	УсловиеПродажи = ?(ЗначениеЗаполнено(УсловиеПродажи),УсловиеПродажи + ", ","") + "накладна(акт) № "+ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Основание,Истина,Истина)+" вiд "+Формат(Основание.Дата, "ДФ='дд.ММ.гггг'");
		КонецЕсли;
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияУслугПоПереработке")
		ИЛИ   ТипЗнч(Основание) = Тип("ДокументСсылка.ПередачаОС")
		ИЛИ   ТипЗнч(Основание) = Тип("ДокументСсылка.ПередачаНМА") 
		ИЛИ   ТипЗнч(Основание) = Тип("ДокументСсылка.ИНАГРО_ВедомостьРеализация")
		ИЛИ   ИНАГРО_ОбщийВызовСервераПовтИсп.ЕстьБСПУ() И Не Основание = Неопределено И 
		    ( (Основание.Метаданные().Имя = "ИНАГРО_РеализацияБиологическихАктивов"
		  ИЛИ Основание.Метаданные().Имя = "ИНАГРО_ВедомостьРеализацияБиологическихАктивов")) Тогда // ИНАГРО
		
		УсловиеПродажи = ?(ЗначениеЗаполнено(УсловиеПродажи),УсловиеПродажи + ", ","") + "накладна № "+ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Основание.Номер,Истина,Истина)+" вiд "+Формат(Основание.Дата, "ДФ='дд.ММ.гггг'");
		
	ИначеЕсли  ТипЗнч(Основание) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") Тогда
		Если НЕ Объект.Сделка = Основание Тогда
			УсловиеПродажи = ?(ЗначениеЗаполнено(УсловиеПродажи),УсловиеПродажи + ", ","") + "рахунок № "+ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Основание.Номер,Истина,Истина)+" вiд "+Формат(Основание.Дата, "ДФ='дд.ММ.гггг'");
		КонецЕсли;
	ИначеЕсли  ТипЗнч(Основание) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
		
		УсловиеПродажи = ?(ЗначениеЗаполнено(УсловиеПродажи),УсловиеПродажи + ", ","") + "звіт комісіонера № "+ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Основание.Номер,Истина,Истина)+" вiд "+Формат(Основание.Дата, "ДФ='дд.ММ.гггг'");
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ИзменениеНалоговогоНазначенияЗапасов")
		  ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.ИзменениеНалоговогоНазначенияТЗР") Тогда	
		
		УсловиеПродажи = "Умовний продаж ";
		
	КонецЕсли;	

	Объект.УсловиеПродажи = УсловиеПродажи;
	
КонецПроцедуры // ЗаполнитьУсловиеПродажи()

Функция ОпределитьДопустимыеСтавкиНДС(Объект) Экспорт
	СписокСтавокНДС = Новый СписокЗначений();
	
	Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОблагаемыеОперации 
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОблагаемыеОперации Тогда
				
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС20);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС14);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС7);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС0);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.СпецСт8); // ИНАГРО
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
		  ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС Тогда
		
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС20);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС14);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС7);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.СпецСт8); // ИНАГРО
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
		
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НеНДС);
		
	ИначеЕсли  Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации 
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации Тогда
		
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.БезНДС);
		
	ИначеЕсли  Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС20);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС14);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС7);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.СпецСт8); // ИНАГРО
		
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
		
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС20);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС14);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС7);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС0);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.БезНДС);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НеНДС);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.СпецСт8); // ИНАГРО
		
	КонецЕсли;
		
	Возврат СписокСтавокНДС;
	
КонецФункции

Процедура УстановитьКодУКТВЭДВстрокеТоваров(СтрокаТЧ) Экспорт
	
	Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
		ЗначениеНоменклатураГТД = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.Номенклатура, "НоменклатураГТД");
		Если ТипЗнч(ЗначениеНоменклатураГТД) = Тип("СправочникСсылка.НоменклатураГТД") Тогда
			СтрокаТЧ.КодУКТВЭД = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначениеНоменклатураГТД, "КодУКТВЭД");
		ИначеЕсли ТипЗнч(ЗначениеНоменклатураГТД) = Тип("СправочникСсылка.КлассификаторУКТВЭД") Тогда
			СтрокаТЧ.КодУКТВЭД = ЗначениеНоменклатураГТД;
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьРеквизитыНомерСтрокиННАктуальны(Объект, СообщатьОбОшибках = Ложь) Экспорт
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры;
	Перем ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
	Объект.ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	Результат = Ложь;
	
	НаборРекизитовСвертки = "КодВид, КодСХ, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаБезНДСРегл, СтавкаНДС, КодЛьготы";
	ТаблицаНоменклатуры.Свернуть("НомерСтрокиНН, " + НаборРекизитовСвертки); 
	ТаблицаНоменклатуры.Сортировать("НомерСтрокиНН");
	КолВоСтрок = ТаблицаНоменклатуры.Количество();
	Если КолВоСтрок = 0 Тогда
		// фиг с ним, считаем что без строк нормально
		Результат = Истина;
	ИначеЕсли ТаблицаНоменклатуры[0].НомерСтрокиНН = 0 Тогда
		// Есть пустые номера
		Если СообщатьОбОшибках Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='В документе есть незаполненные реквизиты ""Номер строки НН""!';uk= 'У документі є незаповнені реквізити ""Номер рядка ПН""!'"));
		КонецЕсли; 
		Результат = Ложь;
	ИначеЕсли ТаблицаНоменклатуры[0].НомерСтрокиНН <> 1 Тогда
		// Нумерация не начинается с 1
		Если СообщатьОбОшибках Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='В документе нумерация реквизов ""Номер строки НН"" начинается не с 1!';uk= 'У документі нумерація реквізитів ""Номер рядка ПН"" починається не з 1!'"));
		КонецЕсли; 
		Результат = Ложь;
	ИначеЕсли ТаблицаНоменклатуры[КолВоСтрок-1].НомерСтрокиНН > КолВоСтрок Тогда
		// Есть пропуски в нумерации 
		Если СообщатьОбОшибках Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='В документе есть пропуски в нумерации реквизов ""Номер строки НН""!';uk= 'У документі є пропуски в нумерації реквізитів ""Номер рядка ПН""!'"));
		КонецЕсли; 
		Результат = Ложь;
	ИначеЕсли ТаблицаНоменклатуры[КолВоСтрок-1].НомерСтрокиНН < КолВоСтрок Тогда
		// Есть строки с одинаковым номером, но разными ключевыми полями 
		Если СообщатьОбОшибках Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='В документе есть строки з одинаковыми реквизитами ""Номер строки НН"", но разными ключевыми полями!';uk= 'У документі є рядки з однаковими реквізитами ""Номер рядка ПН"", але різними ключовими полями!'"));
		КонецЕсли; 
		Результат = Ложь;
	ИначеЕсли ТаблицаНоменклатуры[КолВоСтрок-1].НомерСтрокиНН = КолВоСтрок Тогда
		// Все почти ок!
		Результат = Истина;
		// Теперь проверяем все внутри
		Для ИндСтроки = 1 По КолВоСтрок Цикл
			ТекущийНомерСтрокиНН = ТаблицаНоменклатуры[ИндСтроки-1].НомерСтрокиНН;
			Если НЕ ТекущийНомерСтрокиНН = ИндСтроки Тогда
				Если СообщатьОбОшибках Тогда
					ТекстСооющенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='В документе для строки печатной формы %1 указан некорректный ""Номер строки НН"" %2!';uk= 'У документі для рядка друкованої форми %1 вказано некоректний ""Номер строки НН"" %2!'"), ИндСтроки, ТекущийНомерСтрокиНН);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСооющенияОбОшибке);
				КонецЕсли; 
				Результат = Ложь;
			КонецЕсли; 
		КонецЦикла; 
		
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат; 
	
КонецФункции // ()

Процедура ПроизвестиУстановкуНомерСтрокиНН(Объект) Экспорт
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	УстановитьПривилегированныйРежим(Истина);

	Если Объект.РеквизитыНомерСтрокиННАктуальны Тогда 
		Возврат;
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
	Объект.ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	Если ТаблицаНоменклатуры.Количество() = 0 Тогда
		Объект.РеквизитыНомерСтрокиННАктуальны = Истина;
		Возврат;
	КонецЕсли;
	
	ТаблицаНоменклатурыУстановкаНомерСтрокиНН = ТаблицаНоменклатуры.Скопировать();
	
	НаборРекизитовСвертки = "КодВид, КодСХ, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаБезНДСРегл, СтавкаНДС, КодЛьготы";
	ТаблицаНоменклатуры.Свернуть(НаборРекизитовСвертки); 
	
	ПараметрыПоиска = Новый Структура(НаборРекизитовСвертки);
	Для каждого СтрокаТаблицы из ТаблицаНоменклатуры Цикл
		НовыйНомерСтрокиНН = ТаблицаНоменклатуры.Индекс(СтрокаТаблицы) + 1;
		Для каждого ЭлементСтруктуры Из ПараметрыПоиска Цикл
			ИмяПоляЗначения = ЭлементСтруктуры.Ключ;
			ПараметрыПоиска.Вставить(ЭлементСтруктуры.Ключ, СтрокаТаблицы[ИмяПоляЗначения]);
		КонецЦикла;
		МассивСтрокНомерСтрокиНН = ТаблицаНоменклатурыУстановкаНомерСтрокиНН.НайтиСтроки(ПараметрыПоиска);
		Если МассивСтрокНомерСтрокиНН.Количество()> 0 Тогда
			Для каждого НайденнаяСтрока Из МассивСтрокНомерСтрокиНН Цикл
				Объект[НайденнаяСтрока.ИмяТЧ][НайденнаяСтрока.НомерСтрокиТЧ-1].НомерСтрокиНН =  НовыйНомерСтрокиНН;
			КонецЦикла; 
		КонецЕсли;
	КонецЦикла;
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Нумерация реквизитов ""Номер строки НН"" восстановлена автоматически!';uk= 'Нумерація реквізитів ""Номер рядка ПН"" відновлена автоматично!'"));
	Объект.РеквизитыНомерСтрокиННАктуальны = Истина;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ()

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НалоговаяНакладная";
	КомандаПечати.Представление = НСтр("ru='Налоговая накладная';uk='Податкова накладна'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НалоговаяНакладнаяАльбом";
	КомандаПечати.Представление = НСтр("ru='Налоговая накладная (альбом. ориент.)';uk='Податкова накладна (альбом. орієнт.)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Налоговая накладная""';uk='Реєстр документів ""Податкова накладна""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры
 
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	ИмяМакета = Неопределено;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НалоговаяНакладная") Тогда
		ИмяМакета = "НалоговаяНакладная" 
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НалоговаяНакладнаяАльбом") Тогда
		ИмяМакета = "НалоговаяНакладнаяАльбом" 
	КонецЕсли;
	
	Если ИмяМакета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Ложь;
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура")
		И ПараметрыПечати.Свойство("ТолькоФормироватьСтруктуруПоказателейПечатнойФормы") Тогда
		ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина;
	КонецЕсли;
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
														 ИмяМакета, 
														 НСтр("ru='Налоговая накладная';uk='Податкова накладна'"), 
														 ПечатьДокумента(МассивОбъектов, 
														  				 ОбъектыПечати, 
																		 ПараметрыВывода,
																		 ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, 
																		 ИмяМакета),
														 ,
														 )
														 
КонецПроцедуры // Печать

// Функция формирует табличный документ с регламентированной печатной формой 
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьДокумента(МассивОбъектов, ОбъектыПечати, ПараметрыВывода, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Ложь, ИмяМакета = "НалоговаяНакладнаяАльбом") Экспорт	
	УстановитьПривилегированныйРежим(Истина);
	
	ПервыйДокумент = Истина;
	ТабДокумент = Новый ТабличныйДокумент;

	Для Каждого Объект Из МассивОбъектов  Цикл
		
		Объект = Объект.Ссылка.ПолучитьОбъект();
		Если Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			// такие операции не предусматривают выписки налоговых накладных
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Документ ""%1"" отражает операцию, не являющуюся объектом налогообложения. %2 такой документ не требуется.';uk= 'Документ ""%1"" відображає операцію, що не є об''єктом оподаткування. %2 такий документ не потрібно.'"),
				Объект.Ссылка, 
				?(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, НСтр("ru='Выгружать';uk= 'Вивантажувати'"), НСтр("ru='Печатать';uk= 'Друкувати'"))
			);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				Объект.Ссылка
			);
			
			Продолжить;	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ УчетНДС.РазрешенаВыгрузкаПечатьНалоговогоДокумента(Объект) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ТекРабочаяДата = ТекущаяДата();
		
		ТабДокументСформирован = Ложь;
		Если ТекРабочаяДата >= '2016-04-01' Тогда
			
			// начиная с 04.2016 выгрузка в ЕРНН должна осуществляется по форме НА ДАТУ РЕГИСТРАЦИИ??!!
			// проверим соответствующую настройку (возможно данное положение со временем будет отменено)
			НастройкаПечати = НалоговыйУчетПовтИсп.НастройкаПечатиНалоговыхДокументов(Объект.Организация, ТекРабочаяДата);
			ВыгрузкаПечатьНН_ПоФормеНаДатуДокумента = НастройкаПечати.ВыгрузкаПечатьНН_ПоФормеНаДатуДокумента; 
			
			Если НЕ ВыгрузкаПечатьНН_ПоФормеНаДатуДокумента = Истина Тогда
				
				// печатную форму выбираем в зависимости не от даты док, а от рабочей даты
				Если ТекРабочаяДата >= '2021-03-01' Тогда
					
					НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2021Мес3(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета, Объект);
		            ТабДокументСформирован = Истина;
				
				ИначеЕсли ТекРабочаяДата >= '2018-12-01' Тогда
			
					НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2018(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета, Объект);
		            ТабДокументСформирован = Истина;
					
				ИначеЕсли ТекРабочаяДата >= '2017-03-16' Тогда
			
					НовТабДокумент = ПечатьДокументаНалоговыйКодекс2017(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета, Объект);
					ТабДокументСформирован = Истина;
					
				ИначеЕсли ТекРабочаяДата >= '2016-04-01' Тогда
					
					НовТабДокумент = ПечатьДокументаНалоговыйКодекс2016(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета, Объект);
					ТабДокументСформирован = Истина;
					
				КонецЕсли;	
				
			КонецЕсли;
			
		КонецЕсли;	
	
		Если НЕ ТабДокументСформирован Тогда
			
			Если Объект.Дата >= '2021-03-01' Тогда
				
				НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2021Мес3(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета, Объект);
			
			ИначеЕсли Объект.Дата >= '2018-12-01' Тогда
		
				НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2018(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета, Объект);
	
			ИначеЕсли Объект.Дата >= '2017-03-16' Тогда
		
				НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2017(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета, Объект);
	
			ИначеЕсли (Объект.Дата >= '2016-04-01') Тогда
				
				НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2016(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета, Объект);
				
			ИначеЕсли Объект.Дата >= '2015-01-01' Тогда
			
				НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2015(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета, Объект);
			
			ИначеЕсли Объект.Дата >= '2014-12-01' Тогда
			
				НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2014Мес12(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета, Объект);
				
			ИначеЕсли Объект.Дата >= '2014-03-01' Тогда
				
				НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2014(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета, Объект);
				
			ИначеЕсли Объект.Дата >= НалоговыйУчетПовтИсп.ДатаВступленияВСилуПриказа1379()   Тогда
				
				НовТабДокумент = ПечатьДокументаНалоговыйКодекс2012(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета, Объект);
				
			Иначе	
				
				НовТабДокумент =  ПечатьДокументаНалоговыйКодекс(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, , Объект);
				
			КонецЕсли;		
		
		КонецЕсли; 
		
		
		Если НЕ ТолькоФормироватьСтруктуруПоказателейПечатнойФормы Тогда
		
			ТабДокумент.Вывести(НовТабДокумент);
			
			// В табличном документе зададим имя области, в которую был 
			// выведен объект. Нужно для возможности печати покомплектно.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Объект.Ссылка);
	
		Иначе
			
			Возврат НовТабДокумент;
			
		КонецЕсли;

	КонецЦикла;
	Если НЕ ТолькоФормироватьСтруктуруПоказателейПечатнойФормы Тогда
		Если НовТабДокумент <> Неопределено Тогда
			ТабДокумент.КлючПараметровПечати = НовТабДокумент.КлючПараметровПечати;
			Если НовТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет Тогда
				ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
			Иначе 
				ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			КонецЕсли;
			ТабДокумент.АвтоМасштаб = Истина;
		КонецЕсли; 
		Возврат ТабДокумент;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции // ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "", Объект)
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;

	КонтрагентНеРезидент = Неопределено;// старая форма при печати этот показатель не учитывался
	ВалютаДокумента = Объект.ВалютаДокумента;
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5_");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		
		СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
		СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		
		Если Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	ВключенаВЕдиныйРеестрНалоговыхНакладных,
	|	ТипПричиныНевыдачиПокупателю,
	|	СпецРежимНалогообложения,
	|	ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	|	ДоговорКонтрагента.Номер КАК НомерДоговора,
	|	Дата,
	|	Контрагент,
	|	Организация,
	|	ЛьготаНДС,
	|	УсловиеПродажи,
	|	ВидДоговора,
	|	ФормаРасчетов,
	|	Контрагент,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	КтоВыписалНалоговуюНакладную.Представление КАК КтоВыписалНалоговуюНакладную
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	НастройкаПечати = НалоговыйУчетПовтИсп.НастройкаПечатиНалоговыхДокументов(Объект.Организация, НачалоМесяца(Объект.Дата));
	СимволДляПустыхПоказателей    	 = НастройкаПечати.СимволПустыхПоказателейВНалоговойНакладной; 
	ВыводитьНомерДоговораБезКлеточек = НастройкаПечати.ВыводитьНомерДоговораБезКлеточек; 
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_НалоговаяНакладная";

	Макет = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2011");
	
	Объект.ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("ДатаОтгрузкиОплаты, Номенклатура, ТекстДляПечатиВКолонкеКоличество, ЕдиницаИзмерения, ЦенаБезНДСРегл, СтавкаНДС", "Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл");   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	Для Страница = 1 По 2 Цикл
	
		// Выводим область оригинал/копия
		Если Страница = 1 Тогда
			
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных = Шапка.ВключенаВЕдиныйРеестрНалоговыхНакладных;
			
			Если Шапка.ТипПричиныНевыдачиПокупателю = 0  Тогда
				
				ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
			ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 1  Тогда	
				
				// т.к. причина лишь превышение над обычной ценой, то первый экземпляр таки должен быть выдан покупателю
				ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
			Иначе
				
				// накладная остается у поставщика
				ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца = "Х";
				ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
				ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
			
		ИначеЕсли Страница = 2 Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ПерваяКопия");
			ТабДокумент.Вывести(ОбластьМакета);
			ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		КонецЕсли;
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Объект.Дата
		ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		ТекНомер = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим
		ТекНомерФилиал = "";
		Если ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения) Тогда
			ТекНомерФилиал	= "" + Шапка.СпецРежимНалогообложения + ТекНомерФилиал; 
		КонецЕсли;
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
		КонецЦикла; 
				
		Если  Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			// налоговые реквизиты не указыватюся
			СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
			ИННОрганизации					= "0";
			НомерСвидетельстваОрганизации	= "0"	
		Иначе	
			СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
			ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
			НомерСвидетельстваОрганизации 	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "НомерСвидетельства,",Ложь);	
		КонецЕсли;
		ОбластьМакета.Параметры.НазваниеОрганизации           = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		ОбластьМакета.Параметры.АдресОрганизации              = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		
		// телефон
		ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "Телефоны,",          Ложь);
		ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
		ДлинаСтрокиТелефонов = СтрДлина(ТекТелефоныОрганизации);
		Для НомерСимвола = 1 По ДлинаСтрокиТелефонов ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;
		
		ИННОрганизации = Прав("            " + ИННОрганизации, 12);
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		НомерСвидетельстваОрганизации = Прав("            " + НомерСвидетельстваОрганизации, 10);
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["НомерСвидетельстваОрганизации_"+Инд] = Сред(НомерСвидетельстваОрганизации, Инд, 1);
		КонецЦикла; 
		
		Если    Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   			ИЛИ Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
			ИЛИ Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			// в этом случае контрагентом выступает организация
			СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		Иначе
			СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		КонецЕсли; 
		
		ОбластьМакета.Параметры.НазваниеКонтрагента           = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,",Ложь);
		ОбластьМакета.Параметры.АдресКонтрагента              = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ЮридическийАдрес,",  Ложь);
		// телефон
		ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
		ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
		ДлинаСтрокиТелефонов = СтрДлина(ТекТелефоныКонтрагента);
		Для НомерСимвола = 1 По ДлинаСтрокиТелефонов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		
		НомерСвидетельстваКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "НомерСвидетельства,",Ложь);
		Если    Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   			ИЛИ Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
			ИЛИ НЕ ЗначениеЗаполнено(НомерСвидетельстваКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(НомерСвидетельстваКонтрагента),1)) = 0 Тогда
			НомерСвидетельстваКонтрагента = "0";
		КонецЕсли; 
		НомерСвидетельстваКонтрагента = Прав("            " + НомерСвидетельстваКонтрагента, 10);
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["НомерСвидетельстваКонтрагента_"+Инд] = Сред(НомерСвидетельстваКонтрагента, Инд, 1);
		КонецЦикла; 

		ИННКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Если    Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   			ИЛИ Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
			ИЛИ НЕ ЗначениеЗаполнено(ИННКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "0";
		КонецЕсли; 
		ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
		Если ЗначениеЗаполнено(ТекНомерДоговора) Тогда
			Для Инд = 1 По 6 Цикл
				ОбластьМакета.Параметры["НомерДоговора_"+Инд]    = Сред(ТекНомерДоговора, Инд, 1);
			КонецЦикла; 
		КонецЕсли;
		Если ВыводитьНомерДоговораБезКлеточек = Истина Тогда
			ОбластьНомера = ОбластьМакета.Область("НомерДоговора");	
		    ОбластьНомера.Объединить();
			ОбластьМакета.Параметры.НомерДоговора_1 = ТекНомерДоговора;
		КонецЕсли;
		
		ТекДатаДоговора = Шапка.ДатаДоговора;
		Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
			ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
			КонецЦикла; 
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	""+ОбластьМакетаЗаголовок.Параметры.ТипПричины1+ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HCOPY",	"");
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2,3));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNSPDVSEL",НомерСвидетельстваОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNSPDVBUY",НомерСвидетельстваКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G3S",	ТекНомерДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1S",	Шапка.КтоВыписалНалоговуюНакладную);
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	Шапка.ЛьготаНДС);	
			Иначе
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	"");	
			КонецЕсли;

			Если Объект.ПродажаНижеОбычнойЦены Тогда
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG",		СтруктураПоказателей.НалоговыйДокумент.HORIG);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG1",		СтруктураПоказателей.НалоговыйДокумент.HORIG1);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HERPN",		СтруктураПоказателей.НалоговыйДокумент.HERPN);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTYPR",		1);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HCOPY",		СтруктураПоказателей.НалоговыйДокумент.HCOPY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HFILL",		СтруктураПоказателей.НалоговыйДокумент.HFILL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM",		СтруктураПоказателей.НалоговыйДокумент.HNUM);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM1",		СтруктураПоказателей.НалоговыйДокумент.HNUM1);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM2",		СтруктураПоказателей.НалоговыйДокумент.HNUM2);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMESEL",	СтруктураПоказателей.НалоговыйДокумент.HNAMESEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMEBUY",	СтруктураПоказателей.НалоговыйДокумент.HNAMEBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKSEL",		СтруктураПоказателей.НалоговыйДокумент.HKSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKBUY",		СтруктураПоказателей.НалоговыйДокумент.HKBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNSPDVSEL",	СтруктураПоказателей.НалоговыйДокумент.HNSPDVSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNSPDVBUY",	СтруктураПоказателей.НалоговыйДокумент.HNSPDVBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCSEL",	СтруктураПоказателей.НалоговыйДокумент.HLOCSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCBUY",	СтруктураПоказателей.НалоговыйДокумент.HLOCBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELSEL",	СтруктураПоказателей.НалоговыйДокумент.HTELSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELBUY",	СтруктураПоказателей.НалоговыйДокумент.HTELBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G1S",		СтруктураПоказателей.НалоговыйДокумент.H01G1S);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G2D",		СтруктураПоказателей.НалоговыйДокумент.H01G2D);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G3S",		СтруктураПоказателей.НалоговыйДокумент.H01G3S);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H02G1S",		СтруктураПоказателей.НалоговыйДокумент.H02G1S);
                СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H10G1S",		СтруктураПоказателей.НалоговыйДокумент.H10G1S);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R003G10S",	СтруктураПоказателей.НалоговыйДокумент.R003G10S);
			
			КонецЕсли;
			
		КонецЕсли;
				
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим табличную часть
		ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
		ЭтоПерваяСтрока = Истина;
		// Выведем на печать все строки таблицы в раздел I
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если ЭтоПерваяСтрока Тогда	
				// в первой строке раздела укажем номер раздела
				ОбластьМакета.Параметры.НомерРаздела = "I";
				ЭтоПерваяСтрока = Ложь;
			Иначе
				ОбластьМакета.Параметры.НомерРаздела = "";
			КонецЕсли;	
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество) Тогда
				ОбластьМакета.Параметры.Количество = СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество;
			КонецЕсли;
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Объект.Дата;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) И Страница = 1 Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
			
			ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.СуммаБезНДС = СимволДляПустыхПоказателей;
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			Колонка = "Сумма" + ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G5_ = ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G5  = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),0,ОбластьМакета.Параметры.Количество);
				СтрокаСтруктуры.G5S = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество,"_");
				СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
					СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
				КонецЕсли;
				
			КонецЕсли;
							
		КонецЦикла;
		
	
		// Выводми итог по I разделу и раздел II
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
		ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.СуммаБезНДС	= СимволДляПустыхПоказателей;
		
		Сумма1разд = 0;
		
		// Получим итоговые суммы по товарам
		ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
			
			Сумма = СтрокаТаблицы.Сумма; 
			
			Колонка = "Сумма"; 
			Сумма1разд = Сумма1разд + Сумма;
			
			ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма, ,"0,00");
			
		КонецЦикла;	
		
		// колонка 11 по товарам (раздел I)
		ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма1разд, ,"0,00");
		ТабДокумент.Вывести(ОбластьМакета);

		
		// Выводим раздел II (тара)
		ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		
		СуммаВозвратнойТары = 0;
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары, ,"0,00");
		
		ТабДокумент.Вывести(ОбластьМакета);		
		
		Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11",	СуммаВозвратнойТары);
			
		КонецЕсли;
		
		// Выводим разделы III - IV (итоги)
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ИтогНДС = 0;
		Всего = СуммаВозвратнойТары;
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
					
			// Итоги
			ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
			Если СуффиксКолонки = "БезНДС" Тогда
				// п.10 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
			ИначеЕсли СуффиксКолонки = "0Укр"
				  ИЛИ СуффиксКолонки = "0Эксп" Тогда
				// п.11 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС0Укр"]  = "0";
				ОбластьМакета.Параметры["ИтогНДС0Эксп"] = "0";
			КонецЕсли;
			ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
			
			Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				Если СуффиксКолонки = "20" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "0Укр" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G8",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "0Эксп" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G9",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			КонецЕсли;
				
		КонецЦикла;
		
		// Итоги в 11 колонке
		ТаблицаНоменклатуры.Свернуть("","Сумма,СуммаНДС");
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			//в таблице не более одной строки
			ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
			Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
		ОбластьМакета.Параметры.Всего 			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего, ,"0,00");
		
		ТабДокумент.Вывести(ОбластьМакета);	
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = Шапка.КтоВыписалНалоговуюНакладную;	
		
		Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если Страница <> 2 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	КонецЦикла; 

	Если Объект.ПродажаНижеОбычнойЦены Тогда
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
		ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 2 Цикл
		
			// Выводим область оригинал/копия
			Если Страница = 1 Тогда
				
				ОбластьМакета = Макет.ПолучитьОбласть("Оригинал");
				
				ОбластьМакета.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных = Шапка.ВключенаВЕдиныйРеестрНалоговыхНакладных;
				
				// накладная остается у поставщика
				ОбластьМакета.Параметры.ОстаетсяУПродавца = "Х";
				ОбластьМакета.Параметры.ТипПричины1 = "0";
				ОбластьМакета.Параметры.ТипПричины2 = "1";
				
				ТабДокумент.Вывести(ОбластьМакета);
				
			ИначеЕсли Страница = 2 Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("ПерваяКопия");
				ТабДокумент.Вывести(ОбластьМакета);
				ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
			КонецЕсли;

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Объект.Дата
			ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Если ЗначениеЗаполнено(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
			    ТекНомер = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены.Номер,Истина,Истина)), 7);
			Иначе	
				ТекНомер = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
			КонецЕсли;
			
			Для Инд = 1 По 7 Цикл                                                                 
				ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
			КонецЦикла; 
			
			// филиал/спецрежим
			ТекНомерФилиал = "";
			Если ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения) Тогда
				ТекНомерФилиал	= "" + Шапка.СпецРежимНалогообложения + ТекНомерФилиал; 
			КонецЕсли;
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
			КонецЦикла; 
					
			Если  Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
				// налоговые реквизиты не указыватюся
				СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
				ИННОрганизации					= "0";
				НомерСвидетельстваОрганизации	= "0"	
			Иначе	
				СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
				ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
				НомерСвидетельстваОрганизации 	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "НомерСвидетельства,",Ложь);	
			КонецЕсли;
			ОбластьМакета.Параметры.НазваниеОрганизации           = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
			ОбластьМакета.Параметры.АдресКонтрагента              = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ЮридическийАдрес,",  Ложь);
			
			// телефон
			ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "Телефоны,",          Ложь);
			ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
			ДлинаСтрокиТелефонов = СтрДлина(ТекТелефоныОрганизации);
			Для НомерСимвола = 1 По ДлинаСтрокиТелефонов ЦИкл
				ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;
			ИННОрганизации = Прав("            " + ИННОрганизации, 12);
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			НомерСвидетельстваОрганизации = Прав("            " + НомерСвидетельстваОрганизации, 10);
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["НомерСвидетельстваОрганизации_"+Инд] = Сред(НомерСвидетельстваОрганизации, Инд, 1);
			КонецЦикла; 
			
			Если    Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
	   			ИЛИ Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
				ИЛИ Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
				// в этом случае контрагентом выступает организация
				СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
			Иначе
				СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
			КонецЕсли; 
			
			ОбластьМакета.Параметры.НазваниеКонтрагента           = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,",Ложь);
			ОбластьМакета.Параметры.АдресКонтрагента              = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ЮридическийАдрес,",  Ложь);
			// телефон
			ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
			ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
			ДлинаСтрокиТелефонов = СтрДлина(ТекТелефоныКонтрагента);
			Для НомерСимвола = 1 По ДлинаСтрокиТелефонов ЦИкл
				ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
			КонецЦикла;
			
			НомерСвидетельстваКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "НомерСвидетельства,",Ложь);
			Если    Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
				ИЛИ Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
	   			ИЛИ НЕ ЗначениеЗаполнено(НомерСвидетельстваКонтрагента)
			    ИЛИ Найти("0123456789",Лев(СокрЛ(НомерСвидетельстваКонтрагента),1)) = 0 Тогда
				НомерСвидетельстваКонтрагента = "0";
			КонецЕсли; 
			НомерСвидетельстваКонтрагента = Прав("            " + НомерСвидетельстваКонтрагента, 10);
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["НомерСвидетельстваКонтрагента_"+Инд] = Сред(НомерСвидетельстваКонтрагента, Инд, 1);
			КонецЦикла; 

			ИННКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
			Если    Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
				ИЛИ Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
	   			ИЛИ НЕ ЗначениеЗаполнено(ИННКонтрагента)
			    ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
				ИННКонтрагента = "0";
			КонецЕсли; 
			ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
			КонецЦикла; 
			
			ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
			Если ЗначениеЗаполнено(ТекНомерДоговора) Тогда
				Для Инд = 1 По 6 Цикл
					ОбластьМакета.Параметры["НомерДоговора_"+Инд]    = Сред(ТекНомерДоговора, Инд, 1);
				КонецЦикла; 
			КонецЕсли;
			Если ВыводитьНомерДоговораБезКлеточек = Истина Тогда
				ОбластьНомера = ОбластьМакета.Область("НомерДоговора");	
			    ОбластьНомера.Объединить();
				ОбластьМакета.Параметры.НомерДоговора_1 = ТекНомерДоговора;
			КонецЕсли;
			
			ТекДатаДоговора = Шапка.ДатаДоговора;
			Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
				ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
				Для Инд = 1 По 8 Цикл
					ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
				КонецЦикла; 
			КонецЕсли;

			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим шапку накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			ЭтоПерваяСтрока = Истина;
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если ЭтоПерваяСтрока Тогда	
					// в первой строке раздела укажем номер раздела
					ОбластьМакета.Параметры.НомерРаздела = "I";
					ЭтоПерваяСтрока = Ложь;
				Иначе
					ОбластьМакета.Параметры.НомерРаздела = "";
				КонецЕсли;	
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				
				Если ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество) Тогда
					ОбластьМакета.Параметры.Количество = СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество;
				КонецЕсли;
			
				// дата отгрузки/оплаты
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
					// укажем дату выписки накладной
					ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Объект.Дата;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				// номенклатура с учетом текста дополнения
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура +" "+ Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены);
				
				ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.СуммаБезНДС = СимволДляПустыхПоказателей;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				Колонка = "Сумма"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокументЗЦ.R.Добавить();
					СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G5_ = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G5  = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),0,ОбластьМакета.Параметры.Количество);
					СтрокаСтруктуры.G5S = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество,"");
					СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
					Если КолонкаДляСуммы = "20" Тогда
						СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
						СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
						СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
						СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
					КонецЕсли;
					
				КонецЕсли;
					
			КонецЦикла;
			
		
			// Выводми итог по I разделу и раздел II
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
			ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.СуммаБезНДС	= СимволДляПустыхПоказателей;
			
			Сумма1разд = 0;
			
			// Получим итоговые суммы по товарам и товаротранспортным затратам
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				
				Сумма = СтрокаТаблицы.Сумма; 
			
				Колонка = "Сумма"; 
				Сумма1разд = Сумма1разд + Сумма;
				
				ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма, ,"0,00");
				
			КонецЦикла;	
			
			// колонка 11 по товарам (раздел I)
			ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма1разд, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);

			
			// Выводим раздел II (тара)
			ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);		
			
			// Выводим разделы III..IV
			ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			
			ИтогНДС = 0;
			Всего = СуммаВозвратнойТары;
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
						
				// Итоги
				ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				Если СуффиксКолонки = "БезНДС" Тогда
					// п.10 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ ";
				ИначеЕсли СуффиксКолонки = "0Укр"
					  ИЛИ СуффиксКолонки = "0Эксп" Тогда
					// п.11 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС0Укр"]  = "0";
					ОбластьМакета.Параметры["ИтогНДС0Эксп"] = "0";
				КонецЕсли;
				ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					Если СуффиксКолонки = "20" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "0Укр" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G8",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "0Эксп" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G9",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10",	СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				КонецЕсли;
							
			КонецЦикла;
			
			// Итоги в 11 колонке
			ТаблицаНоменклатуры.Свернуть("","Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				//в таблице не более одной строки
				ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
				Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
			КонецЦикла;
			ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
			ОбластьМакета.Параметры.Всего 			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);	
			
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = Шапка.КтоВыписалНалоговуюНакладную;	
			
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);

			Если Страница <> 2 Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЦикла; 
		
	КонецЕсли;	
	
	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;
	
КонецФункции // ()

Функция ПечатьДокументаНалоговыйКодекс2012(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "НалоговаяНакладнаяАльбом", Объект)
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	ВалютаДокумента = Объект.ВалютаДокумента;	
	
	Если НЕ ТолькоФормироватьСтруктуруПоказателейПечатнойФормы 	= Истина
		  И Объект.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных 	= Истина
		  И Объект.ВключенаВЕдиныйРеестрНалоговыхНакладных 			= Ложь Тогда
	
		Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 должна быть зарегистрирована в Едином реестре!
|Нельзя выдавать покупателю печатный документ до регистрации в Едином реестре!';uk='%1 має бути зареєстрована у Єдиному реєстрі податкових накладних!
|Не можна видавати покупцю друкований документ до реєстрації у Єдиному реєстрі!'")
									   , Объект.Ссылка)
			   , СтатусСообщения.ОченьВажное);			
	
	КонецЕсли;

	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5_");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		
		СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
		СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		
		Если Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	ВключенаВЕдиныйРеестрНалоговыхНакладных,
	|	ТипПричиныНевыдачиПокупателю,
	|	СпецРежимНалогообложения,
	|	ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	|	ДоговорКонтрагента.Номер КАК НомерДоговора,
	|	Дата,
	|	Контрагент,
	
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ЛьготаНДС,
	|	УсловиеПродажи,
	|	ВидДоговора,
	|	ФормаРасчетов,
	|	Контрагент,
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|	УслугиНерезидентаДляНехозДеят КАК УслугиНерезидентаДляНехозДеят,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	КтоВыписалНалоговуюНакладную.Представление КАК КтоВыписалНалоговуюНакладную
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	НастройкаПечати = НалоговыйУчетПовтИсп.НастройкаПечатиНалоговыхДокументов(Объект.Организация, НачалоМесяца(Объект.Дата));
	СимволДляПустыхПоказателей    	 = НастройкаПечати.СимволПустыхПоказателейВНалоговойНакладной; 
	ПечататьКодУКТВЭДБезПробелов     = НастройкаПечати.ПечататьКодУКТВЭДБезПробелов; 
	ПечататьДатыБезРазделителей    	 = НЕ НастройкаПечати.ПечататьДатыВНалоговыхНакладныхСРазделителями; 
	ДополнитьНазваниеНомеромГТД    	 = НЕ НастройкаПечати.НеДополнятьНаименованиеНомеромГТДВНалоговыхДокументах; 
	ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = НастройкаПечати.ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН;
	
	ДополнениеКНаименованиюОрганизации = "";
	ДополнениеКАдресуОрганизации = "";
	Если  ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Истина
		И Шапка.ОбособленноеПодразделение = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ " - " ;
		ДополнениеКАдресуОрганизации       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ЮридическийАдрес,",  Ложь)  + " - " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_НалоговаяНакладная";
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_" + ИмяМакета;

	МакетПромежуточный = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2012");
	Если ИмяМакета = "НалоговаяНакладнаяАльбом" Тогда
		МакетПромежуточный = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2012Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	МакетПромежуточный.КодЯзыкаМакета = "ru";
	
	Макет = Новый ТабличныйДокумент;
	Макет.ВставитьОбласть(МакетПромежуточный.Область(), , , Ложь);
	
	Объект.ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("ДатаОтгрузкиОплаты, Номенклатура, КодУКТВЭД, НомерГТД, ДатаГТД, ТекстДляПечатиВКолонкеКоличество, ЕдиницаИзмерения, ЦенаБезНДСРегл, СтавкаНДС", "Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл");   	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	
	// определим параметры шапки документа
	//Объект.Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
	Если ЗначениеЗаполнено(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены.Номер,Истина,Истина)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("0000" + СокрЛП(Шапка.Префикс), 4), "");  //число, сведущими нулями, 4 символа 
	Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
		ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
	КонецЕсли;
	
	// номер договора
	ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
	
	// дата договора
	ТекДатаДоговора = Шапка.ДатаДоговора;
	Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
		ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
	Иначе
		ТекДатаДоговора = "";
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= ?(Шапка.УслугиНерезидентаДляНехозДеят = Истина, "200000000000", "300000000000");
		НомерСвидетельстваОрганизации	= "0";
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + " - " + НазваниеОрганизации;
			АдресОрганизации 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдрес,",  Ложь)	
										  + " - " + АдресОрганизации;
		КонецЕсли;
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НомерСвидетельстваОрганизации 	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "НомерСвидетельства,",Ложь);	
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	НомерСвидетельстваОрганизации = Прав("            " + НомерСвидетельстваОрганизации, 10);
	
	// телефон
	ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "Телефоны,",          Ложь);
	ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
	ДлинаСтрокиТелефоновОрганизации = СтрДлина(ТекТелефоныОрганизации);
	
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			НомерСвидетельстваКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "НомерСвидетельства,",Ложь);
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
		    НомерСвидетельстваКонтрагента = "0";
			ИННКонтрагента 				  = "0";
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
	Иначе
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + " - " + НазваниеКонтрагента;
			АдресКонтрагента 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдрес,",  Ложь)	
										  + " - " + АдресКонтрагента;
		КонецЕсли;
		
		НомерСвидетельстваКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "НомерСвидетельства,",Ложь);
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		Если НЕ ЗначениеЗаполнено(НомерСвидетельстваКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(НомерСвидетельстваКонтрагента),1)) = 0 Тогда
			НомерСвидетельстваКонтрагента = "0";
		КонецЕсли;		
		
		Если НЕ ЗначениеЗаполнено(ИННКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "0";
		КонецЕсли; 
		
	КонецЕсли; 
	НомерСвидетельстваКонтрагента = Прав("            " + НомерСвидетельстваКонтрагента, 10);
	ИННКонтрагента 				  = Прав("            " + ИННКонтрагента, 12);
	
	Если  Объект.Дата >= '2014-01-01'
		И СокрЛП(НомерСвидетельстваКонтрагента) = "0"
		И НЕ СокрЛП(ИННКонтрагента) = "0" Тогда
		НомерСвидетельстваКонтрагента = "";	
	КонецЕсли;
	
	// телефон
	ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
	ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
	ДлинаСтрокиТелефоновКонтрагентов = СтрДлина(ТекТелефоныКонтрагента);
	
	Для Страница = 1 По 2 Цикл
		
		Если  Страница = 2
			И Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			// печатаем в одном экземпляре
			Продолжить;
		КонецЕсли;
		
		// Выводим область оригинал/копия
		Если Страница = 1 Тогда
			
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных = Шапка.ВключенаВЕдиныйРеестрНалоговыхНакладных;
			
			Если Шапка.ТипПричиныНевыдачиПокупателю = 0  Тогда
				
				ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
			ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 1  Тогда	
				
				// т.к. причина лишь превышение над обычной ценой, то первый экземпляр таки должен быть выдан покупателю
				ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
			Иначе
				
				// накладная остается у поставщика
				ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца = "Х";
				ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
				ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
			
		ИначеЕсли Страница = 2 Тогда
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("ПерваяКопия");
			ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных = Шапка.ВключенаВЕдиныйРеестрНалоговыхНакладных;
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
			ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		КонецЕсли;
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Объект.Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим 
		Для Инд = 1 По 5 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
		КонецЦикла; 
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// адрес продавца
		ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
		
		// телефон продавца
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// Номер свидетельства продавца
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["НомерСвидетельстваОрганизации_"+Инд] = Сред(НомерСвидетельстваОрганизации, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// адрес покупателя
		ОбластьМакета.Параметры.АдресКонтрагента    = АдресКонтрагента;
		
		// телефон покупателя
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		
		// Номер свидетельства покупателя
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["НомерСвидетельстваКонтрагента_"+Инд] = Сред(НомерСвидетельстваКонтрагента, Инд, 1);
		КонецЦикла; 

		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// номер договора
		ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
		
		// дата договора
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	""+ОбластьМакетаЗаголовок.Параметры.ТипПричины1+ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HCOPY",	"");
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNSPDVSEL",НомерСвидетельстваОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNSPDVBUY",НомерСвидетельстваКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G3S",	ТекНомерДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1S",	Шапка.КтоВыписалНалоговуюНакладную);
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	Шапка.ЛьготаНДС);	
			Иначе
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	"");	
			КонецЕсли;

			Если Объект.ПродажаНижеОбычнойЦены Тогда
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG",		СтруктураПоказателей.НалоговыйДокумент.HORIG);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG1",		СтруктураПоказателей.НалоговыйДокумент.HORIG1);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HERPN",		СтруктураПоказателей.НалоговыйДокумент.HERPN);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTYPR",		1);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HCOPY",		СтруктураПоказателей.НалоговыйДокумент.HCOPY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HFILL",		СтруктураПоказателей.НалоговыйДокумент.HFILL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM",		СтруктураПоказателей.НалоговыйДокумент.HNUM);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM1",		СтруктураПоказателей.НалоговыйДокумент.HNUM1);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM2",		СтруктураПоказателей.НалоговыйДокумент.HNUM2);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMESEL",	СтруктураПоказателей.НалоговыйДокумент.HNAMESEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMEBUY",	СтруктураПоказателей.НалоговыйДокумент.HNAMEBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKSEL",		СтруктураПоказателей.НалоговыйДокумент.HKSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKBUY",		СтруктураПоказателей.НалоговыйДокумент.HKBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNSPDVSEL",	СтруктураПоказателей.НалоговыйДокумент.HNSPDVSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNSPDVBUY",	СтруктураПоказателей.НалоговыйДокумент.HNSPDVBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCSEL",	СтруктураПоказателей.НалоговыйДокумент.HLOCSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCBUY",	СтруктураПоказателей.НалоговыйДокумент.HLOCBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELSEL",	СтруктураПоказателей.НалоговыйДокумент.HTELSEL);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELBUY",	СтруктураПоказателей.НалоговыйДокумент.HTELBUY);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G1S",		СтруктураПоказателей.НалоговыйДокумент.H01G1S);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G2D",		СтруктураПоказателей.НалоговыйДокумент.H01G2D);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G3S",		СтруктураПоказателей.НалоговыйДокумент.H01G3S);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H02G1S",		СтруктураПоказателей.НалоговыйДокумент.H02G1S);
                СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H10G1S",		СтруктураПоказателей.НалоговыйДокумент.H10G1S);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R003G10S",	СтруктураПоказателей.НалоговыйДокумент.R003G10S);
			
			КонецЕсли;
			
		КонецЕсли;
				
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим табличную часть
		ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
		Если ПечататьДатыБезРазделителей Тогда
			ОбластьМакета.Области.ДатаОтгрузкиОплаты.Формат = "ДФ=ddMMyyyy";	
		КонецЕсли;
		
		ЭтоПерваяСтрока = Истина;
		// Выведем на печать все строки таблицы в раздел I
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если ЭтоПерваяСтрока Тогда	
				// в первой строке раздела укажем номер раздела
				ОбластьМакета.Параметры.НомерРаздела = "I";
				ЭтоПерваяСтрока = Ложь;
			Иначе
				ОбластьМакета.Параметры.НомерРаздела = "";
			КонецЕсли;	
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			Если ПечататьКодУКТВЭДБезПробелов Тогда
				ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество) Тогда
				ОбластьМакета.Параметры.Количество = СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество;
			КонецЕсли;
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Объект.Дата;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) И Страница = 1 Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура) 
												 + ?(ДополнитьНазваниеНомеромГТД И ЗначениеЗаполнено(СтрокаТаблицы.НомерГТД), ". ВМД №: " + СтрокаТаблицы.НомерГТД + ", дата ВМД: " + Формат(СтрокаТаблицы.ДатаГТД, ?(ПечататьДатыБезРазделителей,"ДФ=ddMMyyyy","ДФ=dd.MM.yyyy")), "");
												 ;
			ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.СуммаБезНДС = СимволДляПустыхПоказателей;
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			Колонка = "Сумма" + ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				
				СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G5_ = ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G5  = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),0,ОбластьМакета.Параметры.Количество);
				СтрокаСтруктуры.G5S = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество,"");
				СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
					СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
				КонецЕсли;
				
			КонецЕсли;
							
		КонецЦикла;
		
	
		// Выводми итог по I разделу и раздел II
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
		ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.СуммаБезНДС	= СимволДляПустыхПоказателей;
		
		Сумма1разд = 0;
		
		// Получим итоговые суммы по товарам
		ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
			
			Сумма = СтрокаТаблицы.Сумма; 
			
			Колонка = "Сумма"; 
			Сумма1разд = Сумма1разд + Сумма;
			
			ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма, ,"0,00");
			
		КонецЦикла;	
		
		// колонка 11 по товарам (раздел I)
		ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма1разд, ,"0,00");
		ТабДокумент.Вывести(ОбластьМакета);

		
		// Выводим раздел II (тара)
		ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		
		СуммаВозвратнойТары = 0;
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары, ,СимволДляПустыхПоказателей);
		
		ТабДокумент.Вывести(ОбластьМакета);		
		
		Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11",	СуммаВозвратнойТары);
			
		КонецЕсли;
		
		// Выводим разделы III - IV (итоги)
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ИтогНДС = 0;
		Всего = СуммаВозвратнойТары;
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
					
			// Итоги
			ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
			Если СуффиксКолонки = "БезНДС" Тогда
				// п.10 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
			ИначеЕсли СуффиксКолонки = "0Укр"
				  ИЛИ СуффиксКолонки = "0Эксп" Тогда
				// п.11 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС0Укр"]  = "0";
				ОбластьМакета.Параметры["ИтогНДС0Эксп"] = "0";
			КонецЕсли;
			ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
			
			Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				Если СуффиксКолонки = "20" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "0Укр" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G8",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "0Эксп" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G9",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	"Без ПДВ");
				КонецЕсли;
				
			КонецЕсли;
				
		КонецЦикла;
		
		// Итоги в 11 колонке
		ТаблицаНоменклатуры.Свернуть("","Сумма,СуммаНДС");
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			//в таблице не более одной строки
			ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
			Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
		ОбластьМакета.Параметры.Всего 			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего, ,"0,00");
		
		ТабДокумент.Вывести(ОбластьМакета);	
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = Шапка.КтоВыписалНалоговуюНакладную;	
		
		Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если Страница <> 2 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
	КонецЦикла; 

	Если Объект.ПродажаНижеОбычнойЦены Тогда
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
		ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 2 Цикл
			
			Если  Страница = 2
				И Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
				// печатаем в одном экземпляре
				Продолжить;
			КонецЕсли;
		
			// Выводим область оригинал/копия
			Если Страница = 1 Тогда
				
				ОбластьМакета = Макет.ПолучитьОбласть("Оригинал");
				
				//ОбластьМакета.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных = Шапка.ВключенаВЕдиныйРеестрНалоговыхНакладных;
				
				// накладная остается у поставщика
				ОбластьМакета.Параметры.ОстаетсяУПродавца = "Х";
				ОбластьМакета.Параметры.ТипПричины1 = "0";
				ОбластьМакета.Параметры.ТипПричины2 = "1";
				
				// безоплатная поставка тип причины - "12"
				Если Объект.СуммаДокумента = 0 Тогда
					ОбластьМакета.Параметры.ТипПричины1 = "1";
					ОбластьМакета.Параметры.ТипПричины2 = "2";
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьМакета);
				
			ИначеЕсли Страница = 2 Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("ПерваяКопия");
				ТабДокумент.Вывести(ОбластьМакета);
				ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
			КонецЕсли;

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Объект.Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл                                  
				ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
			КонецЦикла; 
			
			// спецрежим/филиал
			Для Инд = 1 По 5 Цикл                                                                 
				ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
			КонецЦикла; 
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// адрес продавца
			ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
			
			// телефон продавца
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
				ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// Номер свидетельства продавца
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["НомерСвидетельстваОрганизации_"+Инд] = Сред(НомерСвидетельстваОрганизации, Инд, 1);
			КонецЦикла; 
			
			// название покупателя
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
			
			// адрес покупателя
			ОбластьМакета.Параметры.АдресКонтрагента    = АдресКонтрагента;
			
			// телефон покупателя
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
				ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
			КонецЦикла;
			
			// Номер свидетельства покупателя
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["НомерСвидетельстваКонтрагента_"+Инд] = Сред(НомерСвидетельстваКонтрагента, Инд, 1);
			КонецЦикла; 

			// ИНН покупателя
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
			КонецЦикла; 
			
			// номер договора
			ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
			
			// дата договора
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
			КонецЦикла;

			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим шапку накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			Если ПечататьДатыБезРазделителей Тогда
				ОбластьМакета.Области.ДатаОтгрузкиОплаты.Формат = "ДФ=ddMMyyyy";	
			КонецЕсли;
			
			ЭтоПерваяСтрока = Истина;
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если ЭтоПерваяСтрока Тогда	
					// в первой строке раздела укажем номер раздела
					ОбластьМакета.Параметры.НомерРаздела = "I";
					ЭтоПерваяСтрока = Ложь;
				Иначе
					ОбластьМакета.Параметры.НомерРаздела = "";
				КонецЕсли;	
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				Если ПечататьКодУКТВЭДБезПробелов Тогда
					ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество) Тогда
					ОбластьМакета.Параметры.Количество = СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество;
				КонецЕсли;
			
				// дата отгрузки/оплаты
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
					
					// укажем дату выписки накладной
					ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Объект.Дата;
					
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				// номенклатура с учетом текста дополнения
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура) 
													 + ?(ДополнитьНазваниеНомеромГТД И ЗначениеЗаполнено(СтрокаТаблицы.НомерГТД), ". ВМД №: " + СтрокаТаблицы.НомерГТД + ", дата ВМД: " + Формат(СтрокаТаблицы.ДатаГТД, ?(ПечататьДатыБезРазделителей,"ДФ=ddMMyyyy","ДФ=dd.MM.yyyy")), "")
													 +" "+ Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены
													 ;
				ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.СуммаБезНДС = СимволДляПустыхПоказателей;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				Колонка = "Сумма"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокументЗЦ.R.Добавить();
					СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					
					СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
					
					СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G5_ = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G5  = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),0,ОбластьМакета.Параметры.Количество);
					СтрокаСтруктуры.G5S = ?(ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество),СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество,"");
					СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
					Если КолонкаДляСуммы = "20" Тогда
						СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
						СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
						СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
						СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
					КонецЕсли;
					
				КонецЕсли;
					
			КонецЦикла;
			
		
			// Выводми итог по I разделу и раздел II
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
			ОбластьМакета.Параметры.Сумма20 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Укр 	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.Сумма0Эксп	= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.СуммаБезНДС	= СимволДляПустыхПоказателей;
			
			Сумма1разд = 0;
			
			// Получим итоговые суммы по товарам и товаротранспортным затратам
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				
				Сумма = СтрокаТаблицы.Сумма; 
			
				Колонка = "Сумма"; 
				Сумма1разд = Сумма1разд + Сумма;
				
				ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма, ,"0,00");
				
			КонецЦикла;	
			
			// колонка 11 по товарам (раздел I)
			ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма1разд, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);

			
			// Выводим раздел II (тара)
			ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары, ,СимволДляПустыхПоказателей);
			
			ТабДокумент.Вывести(ОбластьМакета);		
			
			// Выводим разделы III..IV
			ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			
			ИтогНДС = 0;
			Всего = СуммаВозвратнойТары;
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
						
				// Итоги
				ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				Если СуффиксКолонки = "БезНДС" Тогда
					// п.10 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
				ИначеЕсли СуффиксКолонки = "0Укр"
					  ИЛИ СуффиксКолонки = "0Эксп" Тогда
					// п.11 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС0Укр"]  = "0";
					ОбластьМакета.Параметры["ИтогНДС0Эксп"] = "0";
				КонецЕсли;
				ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					Если СуффиксКолонки = "20" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "0Укр" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G8",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "0Эксп" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G9",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10",	"Без ПДВ");
					КонецЕсли;
					
				КонецЕсли;
							
			КонецЦикла;
			
			// Итоги в 11 колонке
			ТаблицаНоменклатуры.Свернуть("","Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				//в таблице не более одной строки
				ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
				Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
			КонецЦикла;
			ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
			ОбластьМакета.Параметры.Всего 			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);	
			
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = Шапка.КтоВыписалНалоговуюНакладную;	
			
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);

			Если Страница <> 2 Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЦикла; 
		
	КонецЕсли;	
	
	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;
	
КонецФункции // ()

Функция ПечатьДокументаНалоговыйКодекс2014(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "НалоговаяНакладнаяАльбом", Объект)
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	ВалютаДокумента = Объект.ВалютаДокумента;
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		
		Если Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных,
	|	ЭлектронныйДокумент,
	|	ТипПричиныНевыдачиПокупателю,
	|	СпецРежимНалогообложения,
	|	ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	|	ДоговорКонтрагента.Номер КАК НомерДоговора,
	|	Дата,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Организация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ЛьготаНДС,
	|	УсловиеПродажи,
	|	ВидДоговора,
	|	ФормаРасчетов,
	|	Контрагент,
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|	УслугиНерезидентаДляНехозДеят КАК УслугиНерезидентаДляНехозДеят,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	ПодтверждаетсяГТД,
	|	КтоВыписалНалоговуюНакладную КАК КтоВыписалНалоговуюНакладную
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	НастройкаПечати = НалоговыйУчетПовтИсп.НастройкаПечатиНалоговыхДокументов(Объект.Организация, НачалоМесяца(Объект.Дата));
	ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = НастройкаПечати.ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН; 
	
	ДополнениеКНаименованиюОрганизации = "";
	ДополнениеКАдресуОрганизации = "";
	Если  ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Истина
		И Шапка.ОбособленноеПодразделение = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ " - " ;
		ДополнениеКАдресуОрганизации       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ЮридическийАдрес,",  Ложь)  + " - " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_" + ИмяМакета;

	Макет = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2014");
	Если ИмяМакета = "НалоговаяНакладнаяАльбом" Тогда
		Макет = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2014Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	Макет.КодЯзыкаМакета = "ru";
	
	Объект.ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("ДатаОтгрузкиОплаты, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЦенаБезНДСРегл, СтавкаНДС", "Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл");   	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Объект.Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
	Если ЗначениеЗаполнено(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены.Номер,Истина,Истина)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
		ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
	КонецЕсли;
	
	// номер договора
	ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
	
	// дата договора
	ТекДатаДоговора = Шапка.ДатаДоговора;
	Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
		ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
	Иначе
		ТекДатаДоговора = "";
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= ?(Шапка.УслугиНерезидентаДляНехозДеят = Истина, "200000000000", "300000000000");
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + " - " + НазваниеОрганизации;
			АдресОрганизации 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдрес,",  Ложь)	
										  + " - " + АдресОрганизации;
		КонецЕсли;
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	
	// телефон
	ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце, "Телефоны,", Ложь);
	ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
	ДлинаСтрокиТелефоновОрганизации = СтрДлина(ТекТелефоныОрганизации);
	
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.Контрагент = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			ИННКонтрагента 				  = "400000000000";
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
	Иначе
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + " - " + НазваниеКонтрагента;
			АдресКонтрагента 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдрес,",  Ложь)	
										  + " - " + АдресКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		Если НЕ ЗначениеЗаполнено(ИННКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "400000000000";
		КонецЕсли; 
		
	КонецЕсли; 
	ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
	
	// телефон
	ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
	ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
	ДлинаСтрокиТелефоновКонтрагентов = СтрДлина(ТекТелефоныКонтрагента);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 2 Цикл
		
		Если  Страница = 2 Тогда
			Если     Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента 
				ИЛИ (Шапка.ЭлектронныйДокумент И НЕ Шапка.ПодтверждаетсяГТД) Тогда
				// печатаем в одном экземпляре
				Продолжить;
			КонецЕсли;
			
			ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
			
		КонецЕсли;
		
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Шапка.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных;
		ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент 							 = Шапка.ЭлектронныйДокумент И НЕ Шапка.ПодтверждаетсяГТД;
		Если Шапка.ЭлектронныйДокумент = Ложь ИЛИ Шапка.ПодтверждаетсяГТД = Истина Тогда
			Если Страница = 2 Тогда
				// копия - всегда остается у продавца
				ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца  = "Х";
				
			Иначе
				
				// оргинал
				Если  Шапка.ТипПричиныНевыдачиПокупателю = 0 ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
					
					// НН, для которой тип причины невыдачи - продажа ниже обычных цен выдается покупателю, вторая пара накладных (собстенно на превышение) - нет
					ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
				Иначе
					
					// накладная остается у поставщика
					ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
					ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
					ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Объект.Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим 
		Для Инд = 1 По 5 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
		КонецЦикла; 
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// адрес продавца
		ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
		
		// телефон продавца
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// адрес покупателя
		ОбластьМакета.Параметры.АдресКонтрагента    = АдресКонтрагента;
		
		// телефон покупателя
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// номер договора
		ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
		
		// дата договора
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HEL",	Формат(ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент, "БЛ=; БИ=Х"));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G3S",	ТекНомерДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1S",	ПечКтоВыписалНалоговуюНакладную);
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	Шапка.ЛьготаНДС);	
			Иначе
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	"");	
			КонецЕсли;
 			
		КонецЕсли;
				
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);
		
				
		
		ЭтоПерваяСтрока = Истина;
		// Выведем на печать все строки таблицы в раздел I
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			Если ЭтоПерваяСтрока Тогда	
				// в первой строке раздела укажем номер раздела
				ОбластьМакета.Параметры.НомерРаздела = "I";
				ЭтоПерваяСтрока = Ложь;
			Иначе
				ОбластьМакета.Параметры.НомерРаздела = "";
			КонецЕсли;	
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Объект.Дата;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) И Страница = 1 Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			Колонка = "Сумма" + ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				
				СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
					СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
				КонецЕсли;
				
			КонецЕсли;
							
		КонецЦикла;
		
	
		// Выводми итог по I разделу и раздел II
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
		
		Сумма1разд = 0;
		
		// Получим итоговые суммы по товарам
		ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
			
			Сумма = СтрокаТаблицы.Сумма; 
			
			Колонка = "Сумма"; 
			Сумма1разд = Сумма1разд + Сумма;
			
			ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма, ,"0,00");
			
		КонецЦикла;	
		
		// колонка 11 по товарам (раздел I)
		ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма1разд, ,"0,00");
		ТабДокумент.Вывести(ОбластьМакета);

		
		// Выводим раздел II (тара)
		ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		
		СуммаВозвратнойТары = 0;
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
		
		ТабДокумент.Вывести(ОбластьМакета);		
		
		Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11",	СуммаВозвратнойТары);
			
		КонецЕсли;
		
		// Выводим разделы III - IV (итоги)
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ИтогНДС = 0;
		Всего = СуммаВозвратнойТары;
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
			
			// Итоги
			ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
			
			Если СуффиксКолонки = "БезНДС" Тогда
				// п.10 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
			ИначеЕсли СуффиксКолонки = "0Укр"
				  ИЛИ СуффиксКолонки = "0Эксп" Тогда
				// п.11 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				Если НЕ Объект.СпецРежимНалогообложения = 7 Тогда
					ОбластьМакета.Параметры["ИтогНДС0Укр"]  = "0";
				КонецЕсли;
				ОбластьМакета.Параметры["ИтогНДС0Эксп"] = "0";
			КонецЕсли;
			ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
			
			Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				Если СуффиксКолонки = "20" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "0Укр" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G8",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "0Эксп" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G9",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	"Без ПДВ");
				КонецЕсли;
				
			КонецЕсли;
				
		КонецЦикла;
		
		// Итоги в 11 колонке
		ТаблицаНоменклатуры.Свернуть("","Сумма,СуммаНДС");
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			//в таблице не более одной строки
			ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
			Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
		ОбластьМакета.Параметры.Всего 			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего, ,"0,00");
		
		ТабДокумент.Вывести(ОбластьМакета);	
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации
			ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации Тогда
			ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если Страница <> 2 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
	КонецЦикла; 

	Если Объект.ПродажаНижеОбычнойЦены И НЕ ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
		ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 2 Цикл
			
			Если  Страница = 2 Тогда
				
				ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
				
			КонецЕсли;
		
			ОбластьМакета = Макет.ПолучитьОбласть("Оригинал");
			Если  Страница = 2 Тогда
				// копия - накладная остается у поставщика 
				ОбластьМакета.Параметры.ОстаетсяУПродавца = "Х";
			Иначе	
				// оригинал, но все копии остаются у поставщика
				ОбластьМакета.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
				ОбластьМакета.Параметры.ТипПричины1 = "0";
				ОбластьМакета.Параметры.ТипПричины2 = "1";
				// безоплатная поставка тип причины - "12"
				Если Объект.СуммаДокумента = 0 Тогда
					ОбластьМакета.Параметры.ТипПричины1 = "1";
					ОбластьМакета.Параметры.ТипПричины2 = "2";
				КонецЕсли;
			КонецЕсли;	
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Объект.Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл                                  
				ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
			КонецЦикла; 
			
			// спецрежим/филиал
			Для Инд = 1 По 5 Цикл                                                                 
				ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
			КонецЦикла; 
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// адрес продавца
			ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
			
			// телефон продавца
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
				ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// название покупателя
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
			
			// адрес покупателя
			ОбластьМакета.Параметры.АдресКонтрагента    = АдресКонтрагента;
			
			// телефон покупателя
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
				ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
			КонецЦикла;

			// ИНН покупателя
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
			КонецЦикла; 
			
			// номер договора
			ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
			
			// дата договора
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
			КонецЦикла;

			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим шапку накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			ЭтоПерваяСтрока = Истина;
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если ЭтоПерваяСтрока Тогда	
					// в первой строке раздела укажем номер раздела
					ОбластьМакета.Параметры.НомерРаздела = "I";
					ЭтоПерваяСтрока = Ложь;
				Иначе
					ОбластьМакета.Параметры.НомерРаздела = "";
				КонецЕсли;	
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
				
				// дата отгрузки/оплаты
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
					
					// укажем дату выписки накладной
					ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Объект.Дата;
					
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				// номенклатура с учетом текста дополнения
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
													 +" "+ Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				Колонка = "Сумма"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				ТабДокумент.Вывести(ОбластьМакета);
					
			КонецЦикла;
			
		
			// Выводми итог по I разделу и раздел II
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
			
			Сумма1разд = 0;
			
			// Получим итоговые суммы по товарам и товаротранспортным затратам
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				
				Сумма = СтрокаТаблицы.Сумма; 
			
				Колонка = "Сумма"; 
				Сумма1разд = Сумма1разд + Сумма;
				
				ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма, ,"0,00");
				
			КонецЦикла;	
			
			// колонка 11 по товарам (раздел I)
			ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма1разд, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим раздел II (тара)
			ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
			
			ТабДокумент.Вывести(ОбластьМакета);		
			
			// Выводим разделы III..IV
			ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			
			ИтогНДС = 0;
			Всего = СуммаВозвратнойТары;
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
						
				// Итоги
				ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				Если СуффиксКолонки = "БезНДС" Тогда
					// п.10 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
				ИначеЕсли СуффиксКолонки = "0Укр"
					  ИЛИ СуффиксКолонки = "0Эксп" Тогда
					// п.11 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					Если НЕ Объект.СпецРежимНалогообложения = 7 Тогда
						ОбластьМакета.Параметры["ИтогНДС0Укр"]  = "0";
					КонецЕсли;
					ОбластьМакета.Параметры["ИтогНДС0Эксп"] = "0";
				КонецЕсли;
				ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					Если СуффиксКолонки = "20" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "0Укр" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G8",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "0Эксп" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G9",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10",	"Без ПДВ");
					КонецЕсли;
					
				КонецЕсли;
							
			КонецЦикла;
			
			// Итоги в 11 колонке
			ТаблицаНоменклатуры.Свернуть("","Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				//в таблице не более одной строки
				ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
				Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
			КонецЦикла;
			ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
			ОбластьМакета.Параметры.Всего 			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);	
			
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);

			Если Страница <> 2 Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЦикла; 
		
	КонецЕсли;	
	
	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;
	
КонецФункции 

Функция ПечатьДокументаНалоговыйКодекс2014Мес12(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "НалоговаяНакладнаяАльбом", Объект)
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	ВалютаДокумента = Объект.ВалютаДокумента;
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G109");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		
		Если Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
		Если Объект.ПродажаНижеОбычнойЦены Тогда
			СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
			СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
			СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		КонецЕсли;
		

	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных,
	|	ЭлектронныйДокумент,
	|	ТипПричиныНевыдачиПокупателю,
	|	СпецРежимНалогообложения,
	|	ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	|	ДоговорКонтрагента.Номер КАК НомерДоговора,
	|	Дата,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ЛьготаНДС,
	|	УсловиеПродажи,
	|	ВидДоговора,
	|	ФормаРасчетов,
	|	ВидОперации,
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|	УслугиНерезидентаДляНехозДеят КАК УслугиНерезидентаДляНехозДеят,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	ПодтверждаетсяГТД,
	|	ПоставкаДипПредставительству,
	|	КтоВыписалНалоговуюНакладную КАК КтоВыписалНалоговуюНакладную
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	НастройкаПечати = НалоговыйУчетПовтИсп.НастройкаПечатиНалоговыхДокументов(Объект.Организация, НачалоМесяца(Объект.Дата));
	ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = НастройкаПечати.ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН; 
	
	ДополнениеКНаименованиюОрганизации = "";
	ДополнениеКАдресуОрганизации = "";
	Если  ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Истина
		И Шапка.ОбособленноеПодразделение = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ " - " ;
		ДополнениеКАдресуОрганизации       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ЮридическийАдрес,",  Ложь)  + " - " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_2014_Мес12" + ИмяМакета;

	Макет = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2014Мес12");
	Если ИмяМакета = "НалоговаяНакладнаяАльбом" Тогда
		Макет = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2014Мес12Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	Макет.КодЯзыкаМакета = "ru";
	
	Объект.ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("ДатаОтгрузкиОплаты, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЦенаБезНДСРегл, СтавкаНДС", "Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл");   	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
	Если ЗначениеЗаполнено(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены.Номер,Истина,Истина)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
		ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
	КонецЕсли;
	
	// номер договора
	ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
	
	// дата договора
	ТекДатаДоговора = Шапка.ДатаДоговора;
	Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
		ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
	Иначе
		ТекДатаДоговора = "";
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= ?(Шапка.УслугиНерезидентаДляНехозДеят = Истина, "200000000000", "300000000000");
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + " - " + НазваниеОрганизации;
		КонецЕсли;
		
		// вместо адреса - просто страна нерезидента
		АдресОрганизации = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
		Если НЕ ЗначениеЗаполнено(АдресОрганизации) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		КонецЕсли;
		
		// остальные данные (телефон) не заполняется
		ТекТелефоныОрганизации = "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце, "Телефоны,", Ложь);
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	
	// телефон
	ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
	ДлинаСтрокиТелефоновОрганизации = СтрДлина(ТекТелефоныОрганизации);
	
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			ИННКонтрагента 				  = "400000000000";
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);

	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + " - " + НазваниеКонтрагента;
			АдресКонтрагента 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдрес,",  Ложь)	
										  + " - " + АдресКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
		
		Если  Шапка.ПоставкаДипПредставительству = Истина 
			И Шапка.ТипПричиныНевыдачиПокупателю <=2 Тогда
			
			ИННКонтрагента = "400000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			АдресКонтрагента = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");			
			Если НЕ ЗначениеЗаполнено(АдресКонтрагента) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			КонецЕсли;
							
			ТекТелефоныКонтрагента = "";

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
				 ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "400000000000";
			НазваниеКонтрагента = "Неплатник";
			АдресКонтрагента = "";
			ТекТелефоныКонтрагента = "";
			
		КонецЕсли;
		
	КонецЕсли; 
	
	ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
	
	// телефон
	ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
	ДлинаСтрокиТелефоновКонтрагентов = СтрДлина(ТекТелефоныКонтрагента);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 2 Цикл
		
		Если  Страница = 2 Тогда
			Если     Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента 
				ИЛИ (Шапка.ЭлектронныйДокумент И НЕ Шапка.ПодтверждаетсяГТД) Тогда
				// печатаем в одном экземпляре
				Продолжить;
			КонецЕсли;
			
			ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
			
		КонецЕсли;
		
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Шапка.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных;
		ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент 							 = Шапка.ЭлектронныйДокумент И НЕ Шапка.ПодтверждаетсяГТД;
		Если Шапка.ЭлектронныйДокумент = Ложь ИЛИ Шапка.ПодтверждаетсяГТД = Истина Тогда
			Если Страница = 2 Тогда
				// копия - всегда остается у продавца
				ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца  = "Х";
				
			Иначе
				
				// оргинал
				Если  Шапка.ТипПричиныНевыдачиПокупателю = 0 ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
					
					// НН, для которой тип причины невыдачи - продажа ниже обычных цен выдается покупателю, вторая пара накладных (собстенно на превышение) - нет
					ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
				Иначе
					
					// накладная остается у поставщика
					ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
					ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
					ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим 
		Для Инд = 1 По 5 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
		КонецЦикла; 
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// адрес продавца
		ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
		
		// телефон продавца
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// адрес покупателя
		ОбластьМакета.Параметры.АдресКонтрагента    = АдресКонтрагента;
		
		// телефон покупателя
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// номер договора
		ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
		
		// дата договора
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HEL",	    Формат(ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент, "БЛ=; БИ=Х"));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HCOPY",	ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G3S",	ТекНомерДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1S",	ПечКтоВыписалНалоговуюНакладную);
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	Шапка.ЛьготаНДС);	
			Иначе
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	"");	
			КонецЕсли;
 			
		КонецЕсли;
				
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);
		
				
		
		ЭтоПерваяСтрока = Истина;
		// Выведем на печать все строки таблицы в раздел I
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			Если ЭтоПерваяСтрока Тогда	
				// в первой строке раздела укажем номер раздела
				ОбластьМакета.Параметры.НомерРаздела = "I";
				ЭтоПерваяСтрока = Ложь;
			Иначе
				ОбластьМакета.Параметры.НомерРаздела = "";
			КонецЕсли;	
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Объект.Дата;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) И Страница = 1 Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			Колонка = "Сумма" + ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				
				СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "7" Тогда
					СтрокаСтруктуры.G109  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
					СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
				КонецЕсли;
				
			КонецЕсли;
							
		КонецЦикла;
		
	
		// Выводми итог по I разделу и раздел II
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
		
		Сумма1разд = 0;
		
		// Получим итоговые суммы по товарам
		ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
			
			Сумма = СтрокаТаблицы.Сумма; 
			
			Колонка = "Сумма"; 
			Сумма1разд = Сумма1разд + Сумма;
			
			ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма, ,"0,00");
			
		КонецЦикла;	
		
		// колонка 11 по товарам (раздел I)
		ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма1разд, ,"0,00");
		ТабДокумент.Вывести(ОбластьМакета);

		
		// Выводим раздел II (тара)
		ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		
		СуммаВозвратнойТары = 0;
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
		
		ТабДокумент.Вывести(ОбластьМакета);		
		
		Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11",	СуммаВозвратнойТары);
			
		КонецЕсли;
		
		// Выводим разделы III - IV (итоги)
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ИтогНДС = 0;
		Всего = СуммаВозвратнойТары;
		
		// в макете жестко прописан крестик, но п. 13 говорит иногда делать в этом поле пометку...
		ОбластьМакета.Параметры["ИтогНДСБезНДС"] = "Х";
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
			
			// Итоги
			Если СуффиксКолонки = "20" ИЛИ СуффиксКолонки = "7" Тогда
				ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
			ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
				// п.13 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
			КонецЕсли;
			ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
			
			Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S", "Х");
				Если СуффиксКолонки = "20" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "7" Тогда               
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G109",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда           
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	"Без ПДВ");
				КонецЕсли;
				
			КонецЕсли;
				
		КонецЦикла;
		
		// Итоги в 11 колонке
		ТаблицаНоменклатуры.Свернуть("","Сумма,СуммаНДС");
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			//в таблице не более одной строки
			ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
			Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
		ОбластьМакета.Параметры.Всего 			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего, ,"0,00");
		
		ТабДокумент.Вывести(ОбластьМакета);	
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если Страница <> 2 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
	КонецЦикла; 

	Если Объект.ПродажаНижеОбычнойЦены И НЕ ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
		ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 2 Цикл
			
			Если  Страница = 2 Тогда
				
				ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
				
			КонецЕсли;
		
			ОбластьМакета = Макет.ПолучитьОбласть("Оригинал");
			Если  Страница = 2 Тогда
				// копия - накладная остается у поставщика 
				ОбластьМакета.Параметры.ОстаетсяУПродавца = "Х";
			Иначе	
				// оригинал, но все копии остаются у поставщика
				ОбластьМакета.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
				ОбластьМакета.Параметры.ТипПричины1 = "0";
				ОбластьМакета.Параметры.ТипПричины2 = "1";
				// безоплатная поставка тип причины - "12"
				Если Объект.СуммаДокумента = 0 Тогда
					ОбластьМакета.Параметры.ТипПричины1 = "1";
					ОбластьМакета.Параметры.ТипПричины2 = "2";
				КонецЕсли;
			КонецЕсли;	
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл                                  
				ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
			КонецЦикла; 
			
			// спецрежим/филиал
			Для Инд = 1 По 5 Цикл                                                                 
				ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
			КонецЦикла; 
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// адрес продавца
			ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
			
			// телефон продавца
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
				ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// данные покупателя равны данным поставщика
			
			// название покупателя                        
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеОрганизации;
			
			// адрес покупателя                           
			ОбластьМакета.Параметры.АдресКонтрагента    = АдресОрганизации;
			
			// телефон покупателя                       
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл                      
				ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;

			// ИНН покупателя
			Для Инд = 1 По 12 Цикл                                       
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// номер договора
			ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
			
			// дата договора
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
			КонецЦикла;

			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим шапку накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ТабДокумент.Вывести(ОбластьМакета);

			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HEL",	Формат(ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент, "БЛ=; БИ=Х"));
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HCOPY",	ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HFILL",	Шапка.Дата);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM",	Прав(ТекНомерОЦ,7));
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMESEL",	НазваниеОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMEBUY",	НазваниеОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKSEL",		ИННОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKBUY",		ИННОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCSEL",	АдресОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCBUY",	АдресКонтрагента);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELSEL",	ТекТелефоныОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELBUY",	ТекТелефоныОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G2D",	Шапка.ДатаДоговора);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G3S",	ТекНомерДоговора);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H10G1S",	ПечКтоВыписалНалоговуюНакладную);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R003G10S",	"");	
	 			
			КонецЕсли;
			
			
			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			ЭтоПерваяСтрока = Истина;
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если ЭтоПерваяСтрока Тогда	
					// в первой строке раздела укажем номер раздела
					ОбластьМакета.Параметры.НомерРаздела = "I";
					ЭтоПерваяСтрока = Ложь;
				Иначе
					ОбластьМакета.Параметры.НомерРаздела = "";
				КонецЕсли;	
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
				
				// дата отгрузки/оплаты
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
					
					// укажем дату выписки накладной
					ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Объект.Дата;
					
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				// номенклатура с учетом текста дополнения
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
													 +" "+ Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				Колонка = "Сумма"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокументЗЦ.R.Добавить();
					СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					
					СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
					
					СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
					Если КолонкаДляСуммы = "20" Тогда
						СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "7" Тогда
						СтрокаСтруктуры.G109  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
						СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
						СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
						СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		
			// Выводми итог по I разделу и раздел II
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
			
			Сумма1разд = 0;
			
			// Получим итоговые суммы по товарам и товаротранспортным затратам
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				
				Сумма = СтрокаТаблицы.Сумма; 
			
				Колонка = "Сумма"; 
				Сумма1разд = Сумма1разд + Сумма;
				
				ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма, ,"0,00");
				
			КонецЦикла;	
			
			// колонка 11 по товарам (раздел I)
			ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма1разд, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим раздел II (тара)
			ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
			
			ТабДокумент.Вывести(ОбластьМакета);		
			
			// Выводим разделы III..IV
			ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			
			ИтогНДС = 0;
			Всего = СуммаВозвратнойТары;
			
			ОбластьМакета.Параметры["ИтогНДСБезНДС"] = "Х";
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				
				// Итоги
				Если СуффиксКолонки = "20" ИЛИ СуффиксКолонки = "7" Тогда
					ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
					// п.13 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
				КонецЕсли;
				ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10S", "Х");
					Если СуффиксКолонки = "20" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "7" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G109",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10S",	"Без ПДВ");
					КонецЕсли;
					
				КонецЕсли;
							
			КонецЦикла;
			
			// Итоги в 11 колонке
			ТаблицаНоменклатуры.Свернуть("","Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				//в таблице не более одной строки
				ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
				Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
			КонецЦикла;
			ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
			ОбластьМакета.Параметры.Всего 			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);	
			
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);

			Если Страница <> 2 Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЦикла; 
		
	КонецЕсли;	
	
	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;
	
КонецФункции 

Функция ПечатьДокументаНалоговыйКодекс2015(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "НалоговаяНакладнаяАльбом", Объект)
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	ВалютаДокумента = Объект.ВалютаДокумента;
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G42");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G109");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		
		Если Объект.ПродажаНижеОбычнойЦены Тогда
			СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
			СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
			СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		КонецЕсли;
		
		Если Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных,
	|	ЭлектронныйДокумент,
	|	ТипПричиныНевыдачиПокупателю,
	|	ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены,
	|	СпецРежимНалогообложения,
	|	ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	|	ДоговорКонтрагента.Номер КАК НомерДоговора,
	|	Дата,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ЛьготаНДС,
	|	УсловиеПродажи,
	|	ВидДоговора,
	|	ФормаРасчетов,
	|	ВидОперации,
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|	УслугиНерезидентаДляНехозДеят КАК УслугиНерезидентаДляНехозДеят,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	ПодтверждаетсяГТД,
	|	ПоставкаДипПредставительству,
	|	КтоВыписалНалоговуюНакладную КАК КтоВыписалНалоговуюНакладную
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	НастройкаПечати = НалоговыйУчетПовтИсп.НастройкаПечатиНалоговыхДокументов(Объект.Организация, НачалоМесяца(Объект.Дата));
	ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = НастройкаПечати.ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН; 
	
	ДополнениеКНаименованиюОрганизации = "";
	ДополнениеКАдресуОрганизации = "";
	Если  ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Истина
		И Шапка.ОбособленноеПодразделение = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ " - " ;
		ДополнениеКАдресуОрганизации       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ЮридическийАдрес,",  Ложь)  + " - " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_2015" + ИмяМакета;

	Макет = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2015");
	Если ИмяМакета = "НалоговаяНакладнаяАльбом" Тогда
		Макет = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2015Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	Макет.КодЯзыкаМакета = "ru";
	
	Объект.ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки                                                                   
	ТаблицаНоменклатуры.Свернуть("ДатаОтгрузкиОплаты, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаБезНДСРегл, СтавкаНДС", "Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл");   	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
	Если ЗначениеЗаполнено(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены.Номер,Истина,Истина)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
		ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
	КонецЕсли;
	
	// номер договора
	ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
	
	// дата договора
	ТекДатаДоговора = Шапка.ДатаДоговора;
	Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
		ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
	Иначе
		ТекДатаДоговора = "";
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= ?(Шапка.УслугиНерезидентаДляНехозДеят = Истина, "200000000000", "500000000000");
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце, "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + " - " + НазваниеОрганизации;
		КонецЕсли;
		
		// вместо адреса - просто страна нерезидента
		АдресОрганизации = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");			
		Если НЕ ЗначениеЗаполнено(АдресОрганизации) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		КонецЕсли;
		
		// остальные данные (телефон) не заполняется
		ТекТелефоныОрганизации = "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце, "Телефоны,", Ложь);
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	
	// телефон
	ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
	ДлинаСтрокиТелефоновОрганизации = СтрДлина(ТекТелефоныОрганизации);
	
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			ИННКонтрагента 				  = "400000000000";
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);

	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + " - " + НазваниеКонтрагента;
			АдресКонтрагента 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдрес,",  Ложь)	
										  + " - " + АдресКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
		
		Если  Шапка.ПоставкаДипПредставительству = Истина 
			И Шапка.ТипПричиныНевыдачиПокупателю <= 2 Тогда
			
			ИННКонтрагента = "400000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			АдресКонтрагента = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");			
			Если НЕ ЗначениеЗаполнено(АдресКонтрагента) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			КонецЕсли;
							
			ТекТелефоныКонтрагента = "";

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
				 ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			АдресКонтрагента = "";
			ТекТелефоныКонтрагента = "";
			
		КонецЕсли;
		
	КонецЕсли; 
	
	ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
	
	// телефон
	ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
	ДлинаСтрокиТелефоновКонтрагентов = СтрДлина(ТекТелефоныКонтрагента);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
		
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		ОбластьМакетаЗаголовок.Параметры.СоглашениеОРазделеПродукции = ?(Шапка.СоглашениеОРазделеПродукции = Истина, "Х", "");
		
		Если  НЕ Шапка.ТипПричиныНевыдачиПокупателю = 0 Тогда
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим 
		Для Инд = 1 По 5 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
		КонецЦикла; 
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// адрес продавца
		ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
		
		// телефон продавца
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// адрес покупателя
		ОбластьМакета.Параметры.АдресКонтрагента    = АдресКонтрагента;
		
		// телефон покупателя
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// номер договора
		ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
		
		// дата договора
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H_1", ОбластьМакетаЗаголовок.Параметры.СоглашениеОРазделеПродукции);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G3S",	ТекНомерДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1S",	ПечКтоВыписалНалоговуюНакладную);
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	Шапка.ЛьготаНДС);	
			Иначе
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	"");	
			КонецЕсли;
 			
		КонецЕсли;
				
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ЭтоПерваяСтрока = Истина;
		// Выведем на печать все строки таблицы в раздел I
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			Если ЭтоПерваяСтрока Тогда	
				// в первой строке раздела укажем номер раздела
				ОбластьМакета.Параметры.НомерРаздела = "I";
				ЭтоПерваяСтрока = Ложь;
			Иначе
				ОбластьМакета.Параметры.НомерРаздела = "";
			КонецЕсли;	
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Объект.Дата;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) И Страница = 1 Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			Колонка = "Сумма" + ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				
				СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G42 = ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "7" Тогда
					СтрокаСтруктуры.G109  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
					СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
				КонецЕсли;
				
			КонецЕсли;
							
		КонецЦикла;
		
	
		// Выводми итог по I разделу и раздел II
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
		
		Сумма1разд = 0;
		
		// Получим итоговые суммы по товарам
		ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
			
			Сумма = СтрокаТаблицы.Сумма; 
			
			Колонка = "Сумма"; 
			Сумма1разд = Сумма1разд + Сумма;
			
			ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма, ,"0,00");
			
		КонецЦикла;	
		
		// колонка 11 по товарам (раздел I)
		ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма1разд, ,"0,00");
		ТабДокумент.Вывести(ОбластьМакета);

		
		// Выводим раздел II (тара)
		ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		
		СуммаВозвратнойТары = 0;
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
		
		ТабДокумент.Вывести(ОбластьМакета);		
		
		Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11",	СуммаВозвратнойТары);
			
		КонецЕсли;
		
		// Выводим разделы III - IV (итоги)
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ИтогНДС = 0;
		Всего = СуммаВозвратнойТары;
		
		// в макете жестко прописан крестик, но п. 13 говорит иногда делать в этом поле пометку...
		ОбластьМакета.Параметры["ИтогНДСБезНДС"] = "";
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
			
			// Итоги
			Если СуффиксКолонки = "20" ИЛИ СуффиксКолонки = "7" Тогда
				ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
			ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
				// п.13 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
				ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
			КонецЕсли;
			ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
			
			Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				Если СуффиксКолонки = "20" Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "7" Тогда               
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G109",	СтрокаТаблицы.СуммаНДС);
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда           
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	"Без ПДВ");
				КонецЕсли;
				
			КонецЕсли;
				
		КонецЦикла;
		
		// Итоги в 11 колонке
		ТаблицаНоменклатуры.Свернуть("","Сумма,СуммаНДС");
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			//в таблице не более одной строки
			ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
			Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
		ОбластьМакета.Параметры.Всего 			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего, ,"0,00");
		
		ТабДокумент.Вывести(ОбластьМакета);	
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла; 

	Если Объект.ПродажаНижеОбычнойЦены Тогда
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		// Для печати второго экземпляра накладной понадобится исходная таблица, которая в процессе печати первого экземпляра будет свернута
		ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 1 Цикл
		
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			
			ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены, "ЧЦ=2; ЧВН=");
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Лев(ТипПричиныСтр, 1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Прав(ТипПричиныСтр, 1);
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл                                  
				ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
			КонецЦикла; 
			
			// спецрежим/филиал
			Для Инд = 1 По 5 Цикл                                                                 
				ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
			КонецЦикла; 
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// адрес продавца
			ОбластьМакета.Параметры.АдресОрганизации    = АдресОрганизации;
			
			// телефон продавца
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
				ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// данные покупателя равны данным поставщика
			
			// название покупателя                        
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеОрганизации;
			
			// адрес покупателя                           
			ОбластьМакета.Параметры.АдресКонтрагента    = АдресОрганизации;
			
			// телефон покупателя                       
			Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл                      
				ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
			КонецЦикла;

			// ИНН покупателя
			Для Инд = 1 По 12 Цикл                                       
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// номер договора
			ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
			
			// дата договора
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
			КонецЦикла;

			ТабДокумент.Вывести(ОбластьМакета);
 
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HFILL",	Шапка.Дата);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM",	Прав(ТекНомерОЦ,7));
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMESEL",	НазваниеОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMEBUY",	НазваниеОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKSEL",		ИННОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKBUY",		ИННОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCSEL",	АдресОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HLOCBUY",	АдресОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELSEL",	ТекТелефоныОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTELBUY",	ТекТелефоныОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G1S",	ОбластьМакета.Параметры.ВидДоговора);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G2D",	Шапка.ДатаДоговора);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H01G3S",	ТекНомерДоговора);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H02G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("H10G1S",	ПечКтоВыписалНалоговуюНакладную);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R003G10S",	"");	
	 			
			КонецЕсли;
			
			// Выводим шапку накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			ЭтоПерваяСтрока = Истина;
			
			Если ЗначениеЗаполнено(НомерФилиала) Тогда
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер) + "/" + СокрЛ(КодСпецРежима) + "/" + СокрЛ(НомерФилиала);
			ИначеЕсли ЗначениеЗаполнено(КодСпецРежима) Тогда
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер) + "/" + СокрЛ(КодСпецРежима);
			Иначе
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер);	
			КонецЕсли;
			
			ДопТекст = Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
			ДопТекст = СтрЗаменить(ДопТекст,
								   "<визначається автоматично>",
								   ПолныйНомерОсновнойНакладной);
			
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
				
				Если ЭтоПерваяСтрока Тогда	
					// в первой строке раздела укажем номер раздела
					ОбластьМакета.Параметры.НомерРаздела = "I";
					ЭтоПерваяСтрока = Ложь;
				Иначе
					ОбластьМакета.Параметры.НомерРаздела = "";
				КонецЕсли;	
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
				
				// дата отгрузки/оплаты
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОтгрузкиОплаты) Тогда
					
					// укажем дату выписки накладной
					ОбластьМакета.Параметры.ДатаОтгрузкиОплаты = Объект.Дата;
					
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				// номенклатура с учетом текста дополнения
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
													 +" "+ ДопТекст;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				Колонка = "Сумма"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				
				ОбластьМакета.Параметры["ЦенаБезНДС"] = Окр(?(СтрокаТаблицы.Количество = 0, 0, СтрокаТаблицы.Сумма / СтрокаТаблицы.Количество), 2);
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокументЗЦ.R.Добавить();
					СтрокаСтруктуры.G2D = ОбластьМакета.Параметры.ДатаОтгрузкиОплаты;
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					
					СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
					
					СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G42 = ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
					
					СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
					Если КолонкаДляСуммы = "20" Тогда
						СтрокаСтруктуры.G7  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "7" Тогда
						СтрокаСтруктуры.G109  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Укр" Тогда
						СтрокаСтруктуры.G8  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "0Эксп" Тогда
						СтрокаСтруктуры.G9  = СтрокаТаблицы.Сумма;	
					ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
						СтрокаСтруктуры.G10 = СтрокаТаблицы.Сумма;	
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
		
			// Выводми итог по I разделу и раздел II
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогРазделI");
			
			Сумма1разд = 0;
			
			// Получим итоговые суммы по товарам и товаротранспортным затратам
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", " Сумма, СуммаНДС");
			
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				
				Сумма = СтрокаТаблицы.Сумма; 
			
				Колонка = "Сумма"; 
				Сумма1разд = Сумма1разд + Сумма;
				
				ОбластьМакета.Параметры[Колонка + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма, ,"0,00");
				
			КонецЦикла;	
			
			// колонка 11 по товарам (раздел I)
			ОбластьМакета.Параметры.Сумма1разд = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма1разд, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);

			// Выводим раздел II (тара)
			ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
			
			ТабДокумент.Вывести(ОбластьМакета);		
			
			// Выводим разделы III..IV
			ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
			ТаблицаНоменклатуры.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			
			ИтогНДС = 0;
			Всего = СуммаВозвратнойТары;
			ОбластьМакета.Параметры["ИтогНДСБезНДС"] = "";
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				СуффиксКолонки = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата);
				
				// Итоги
				Если СуффиксКолонки = "20" ИЛИ СуффиксКолонки = "7" Тогда
					ОбластьМакета.Параметры["ИтогНДС" 		  + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
					// п.13 Порядка заполнения налоговой накладной устанавливает особые правила заполнения этой ячейки:
					ОбластьМакета.Параметры["ИтогНДС" 	  + СуффиксКолонки] = "Без ПДВ";
				КонецЕсли;
				ОбластьМакета.Параметры["ИтогСуммаСНДС"   + СуффиксКолонки] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
					
					Если СуффиксКолонки = "20" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G7",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "7" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G109",	СтрокаТаблицы.СуммаНДС);
					ИначеЕсли СуффиксКолонки = "БезНДС" Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10S",	"Без ПДВ");
					КонецЕсли;
					
				КонецЕсли;
							
			КонецЦикла;
			
			// Итоги в 11 колонке
			ТаблицаНоменклатуры.Свернуть("","Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				//в таблице не более одной строки
				ИтогНДС 		= СтрокаТаблицы.СуммаНДС;
				Всего 			= Всего + СтрокаТаблицы.Сумма + ИтогНДС;
			КонецЦикла;
			ОбластьМакета.Параметры.ИтогНДС			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
			ОбластьМакета.Параметры.Всего 			= ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего, ,"0,00");
			
			ТабДокумент.Вывести(ОбластьМакета);	
			
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				ОбластьМакета.Параметры.ЛьготаНДС = Шапка.ЛьготаНДС;	
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);

		КонецЦикла; 
		
	КонецЕсли;	
	
	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;
	
КонецФункции 

Функция ПечатьДокументаНалоговыйКодекс2016(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "НалоговаяНакладнаяАльбом", Объект)
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	ВалютаДокумента = Объект.ВалютаДокумента;
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		
		Если Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
		Если Объект.ПродажаНижеОбычнойЦены Тогда
			СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
			СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
			СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Дата,
	|	Номер,
	|	СпецРежимНалогообложения,
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|	ТипПричиныНевыдачиПокупателю,
	|	ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ЛьготаНДС,
	|	ВидОперации,
	|	Сводная,
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ДополнениеКНаименованиюОрганизации = "";
	Если Шапка.ОбособленноеПодразделение = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
	
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ ", " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_2016" + ИмяМакета;

	Макет = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2016");
	Если ИмяМакета = "НалоговаяНакладнаяАльбом" Тогда
		Макет = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2016Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	Макет.КодЯзыкаМакета = "ru";
	
	Объект.ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки                                                                   
	ТаблицаНоменклатуры.Свернуть("Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаБезНДСРегл, СтавкаНДС, КодЛьготы", "Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл");   	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для служебныех целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
	Если ЗначениеЗаполнено(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены.Номер,Истина,Истина)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		                                                                                  				   
		ИННОрганизации					= "500000000000";
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце, "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + ", " + НазваниеОрганизации;
		КонецЕсли;
		
		// вместо адреса - просто страна нерезидента
		Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");			
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли;
		
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			
			ФилиалПокупателя = "";			
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + ", " + НазваниеКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда

			
			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");			
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли;

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
				 ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
	КонецЕсли; 
	
	ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
		
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		Если (    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
			  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
			  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
			  
			  ОбластьМакетаЗаголовок.Параметры.Сводная = ?(Шапка.Сводная = Истина, "X", "");	
			  
		КонецЕсли;
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		Если  НЕ Шапка.ТипПричиныНевыдачиПокупателю = 0 Тогда
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим шапку накладной вместе с итогами
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G7", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G109", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G8", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G10", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ВсегоСумма = 0; ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ВсегоСумма = СтрокаТаблицы.Сумма;
			ИтогНДС    = СтрокаТаблицы.СуммаНДС;
		КонецЦикла;
		
		СуммаВозвратнойТары = 0;
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		
		//ОбластьМакета.Параметры.Всего    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС + ВсегоСумма + СуммаВозвратнойТары, ,"0,00");
		ОбластьМакета.Параметры.Всего    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС + ВсегоСумма, ,"0,00");
		ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары, ,"0,00");
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			//СтруктураПоказателей.НалоговыйДокумент.Вставить("R04G11", ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R04G11", ИтогНДС + ВсегоСумма);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G11", ИтогНДС);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11", СуммаВозвратнойТары);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H03",		ОбластьМакетаЗаголовок.Параметры.Сводная);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
 			
		КонецЕсли;
				
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ОбластьМакета.Параметры.НомерСтроки = ТаблицаНоменклатуры.Индекс(СтрокаТаблицы) + 1;
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
			
			ОбластьМакета.Параметры.Сумма     = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			ДанныеОСумме = СтрокаТаблицы.Сумма;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.Сумма = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
					
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "грн";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				СтрокаСтруктуры.G5 			= ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G6 			= ОбластьМакета.Параметры.ЦенаБезНДС;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				
			КонецЕсли;
							
		КонецЦикла;
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла; 

	Если Объект.ПродажаНижеОбычнойЦены Тогда
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 1 Цикл
		
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
				ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
			
			КонецЕсли;			
			
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			
			ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены, "ЧЦ=2; ЧВН=");
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Лев(ТипПричиныСтр, 1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Прав(ТипПричиныСтр, 1);
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл                                                                     
				ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
			КонецЦикла; 
			
			// код спец. режима
			ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// филиал
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла; 
			
			// название покупателя = продавца
			
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеОрганизации;
			
			// ИНН покупателя
			Для Инд = 1 По 12 Цикл                                      
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// Филиал = продавца
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла;

			ТабДокумент.Вывести(ОбластьМакета);
 
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G10S",ОбластьМакетаЗаголовок.Параметры.Освобожденная);
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HFILL",	Шапка.Дата);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM",	Прав(ТекНомерОЦ,7));
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM1",	КодСпецРежима);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNUM2",	ФилиалПродавца);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HFBUY",	ФилиалПродавца);
				
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKSEL",		ИННОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKBUY",		ИННОрганизации);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HBOS",	ПечКтоВыписалНалоговуюНакладную);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("HKBOS",	ИННКтоВыписалНН);
	 			
			КонецЕсли;
			
			// Выводим шапку накладной вместе с итогами
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			
			ВремТаблица = ТаблицаНоменклатуры.Скопировать();
			ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				
				КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
				
				Если КолонкаДляСуммы = "20" Тогда
					
					ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R01G7", СтрокаТаблицы.Сумма);
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "7" Тогда
					
					ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R01G109", СтрокаТаблицы.Сумма);
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "902" Тогда
					
					ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R01G8", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "901" Тогда
					
					ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R01G9", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "903" Тогда
					
					ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R01G10", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ВсегоСумма = 0; ИтогНДС   = 0;
			ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы из ВремТаблица Цикл
				ВсегоСумма = СтрокаТаблицы.Сумма;
				ИтогНДС    = СтрокаТаблицы.СуммаНДС;
			КонецЦикла;
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары, ,"0,00");
			ОбластьМакета.Параметры.Всего    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС + ВсегоСумма + СуммаВозвратнойТары, ,"0,00");
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R04G11", ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R03G11", ИтогНДС);
				СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R02G11", СуммаВозвратнойТары);
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);			
			
			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			Если ЗначениеЗаполнено(КодСпецРежима) Тогда
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер) + "/" + СокрЛ(КодСпецРежима);
			Иначе
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер);	
			КонецЕсли;
			
			ДопТекст = Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
			ДопТекст = СтрЗаменить(ДопТекст,
								   "<визначається автоматично>",
								   ПолныйНомерОсновнойНакладной);
			
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				
				Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
				    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
					ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
					Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
						ОбластьМакета.Параметры.КодЛьготы = "99999999";
					КонецЕсли;
				Иначе
					ОбластьМакета.Параметры.КодЛьготы = "";	
				КонецЕсли;
				
				ОбластьМакета.Параметры.НомерСтроки = ТаблицаНоменклатуры.Индекс(СтрокаТаблицы) + 1;
				
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
				
				ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
				
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
																 +" "+ ДопТекст;
				Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				    ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції"
														  +" "+ ДопТекст;
				КонецЕсли;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
				
				ОбластьМакета.Параметры.Сумма     = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры["ЦенаБезНДС"] = Окр(?(СтрокаТаблицы.Количество = 0, 0, СтрокаТаблицы.Сумма / СтрокаТаблицы.Количество), 2);
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					
					СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокументЗЦ.R.Добавить();
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					
					СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
					
					СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G105_2S = ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
					
					СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					СтрокаСтруктуры.G008  = ОбластьМакета.Параметры.КодСтавки;
					СтрокаСтруктуры.G010  = СтрокаТаблицы.Сумма;
					
				КонецЕсли;
				
			КонецЦикла;
		
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			// ДРФО того, кто выписал НН
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
			КонецЦикла;	
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			ТабДокумент.Вывести(ОбластьМакета);

		КонецЦикла; 
		
	КонецЕсли;	
	
	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;
	
КонецФункции 

Функция ПечатьДокументаНалоговыйКодекс2017(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "НалоговаяНакладнаяАльбом", Объект)
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	ВалютаДокумента = Объект.ВалютаДокумента;
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G32");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G33");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G011");
		
		Если Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
		Если Объект.ПродажаНижеОбычнойЦены Тогда
			СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
			СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
			СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Дата,
	|	Номер,
	|	СпецРежимНалогообложения,
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|	ТипПричиныНевыдачиПокупателю,
	|	ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ЛьготаНДС,
	|	ВидОперации,
	|	Сводная,
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ДополнениеКНаименованиюОрганизации = "";
	Если Шапка.ОбособленноеПодразделение = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
	
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ ", " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_2017" + ИмяМакета;

	Макет = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2017Альбом");	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет.КодЯзыкаМакета = "ru";
	
	Объект.ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки    
	ТаблицаНоменклатуры.Свернуть("КодВид, КодСХ, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаБезНДСРегл, СтавкаНДС, КодЛьготы", "Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл");   	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для служебныех целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
	Если ЗначениеЗаполнено(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены.Номер,Истина,Истина)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		                                                                                  				   
		ИННОрганизации					= "500000000000";
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце, "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + ", " + НазваниеОрганизации;
		КонецЕсли;
		
		// вместо адреса - просто страна нерезидента
		Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");			
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли;
		
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			
			ФилиалПокупателя = "";			
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + ", " + НазваниеКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда

			
			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");			
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли;

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
				 ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
	КонецЕсли; 
	
	ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
		
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		Если (    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
			  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
			  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
			  
			  ОбластьМакетаЗаголовок.Параметры.Сводная = ?(Шапка.Сводная = Истина, "X", "");	
			  
		КонецЕсли;
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		Если  НЕ Шапка.ТипПричиныНевыдачиПокупателю = 0 Тогда
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим шапку накладной вместе с итогами
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G7", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G109", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G8", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G10", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ВсегоСумма = 0; ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ВсегоСумма = СтрокаТаблицы.Сумма;
			ИтогНДС    = СтрокаТаблицы.СуммаНДС;
		КонецЦикла;
		
		СуммаВозвратнойТары = 0;
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		
		ОбластьМакета.Параметры.Всего    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС + ВсегоСумма);
		ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС);
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R04G11", ИтогНДС + ВсегоСумма);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G11", ИтогНДС);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11", СуммаВозвратнойТары);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H03",		ОбластьМакетаЗаголовок.Параметры.Сводная);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
 			
		КонецЕсли;
				
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ОбластьМакета.Параметры.НомерСтроки = ТаблицаНоменклатуры.Индекс(СтрокаТаблицы) + 1;
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			Если СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодУслуги Тогда
				ОбластьМакета.Параметры.КодДКПП   = ОбластьМакета.Параметры.КодУКТВЭД;	
				ОбластьМакета.Параметры.КодУКТВЭД = "";
			ИначеЕсли СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодТовараИмпортированного Тогда
				ОбластьМакета.Параметры.Импортированный = "X";
			КонецЕсли;
			Если НЕ КодСпецРежима = "2" Тогда
			    ОбластьМакета.Параметры.КодСХ = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
			
			ОбластьМакета.Параметры.Сумма     = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			ДанныеОСумме = СтрокаТаблицы.Сумма;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.Сумма = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
					
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "грн";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
						
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				СтрокаСтруктуры.G32  		= ОбластьМакета.Параметры.Импортированный;
				СтрокаСтруктуры.G33  		= ОбластьМакета.Параметры.КодДКПП;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				СтрокаСтруктуры.G5 			= ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G6 			= ОбластьМакета.Параметры.ЦенаБезНДС;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				СтрокаСтруктуры.G011  		= ОбластьМакета.Параметры.КодСХ;
				
			КонецЕсли;
							
		КонецЦикла;
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла; 

	Если Объект.ПродажаНижеОбычнойЦены 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки
		Тогда
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
			// все что мы напечатали по обычной НН не имеет смысла для этого вида операции
			// нужна только "вторая НН" как если бы это была не сводная накладная на превыешение базы над ценой продажи
			ТабДокумент.Очистить();	
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				Таблица = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
				Таблица.Очистить();
				СтруктураПоказателей.НалоговыйДокумент.Очистить();
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R", Таблица);
				
				СтруктураПоказателйПечатнойФормы = СтруктураПоказателей.НалоговыйДокумент;	
			КонецЕсли;
		Иначе
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				СтруктураПоказателйПечатнойФормы = СтруктураПоказателей.НалоговыйДокументЗЦ;
			КонецЕсли;
		КонецЕсли;
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 1 Цикл
		
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			Если (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки) Тогда
				  
				  ОбластьМакетаЗаголовок.Параметры.Сводная = ?(Шапка.Сводная = Истина, "X", "");	
				  
			КонецЕсли;
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
				ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
			
			КонецЕсли;			
			
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			
			ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены, "ЧЦ=2; ЧВН=");
			Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2; ЧВН=");
			КонецЕсли;
			
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Лев(ТипПричиныСтр, 1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Прав(ТипПричиныСтр, 1);
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл
				Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
					ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
				Иначе
					ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
				КонецЕсли;
			КонецЦикла; 
			
			// код спец. режима
			ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// филиал
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла; 
			
			// название покупателя = продавца
			
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеОрганизации;
			
			// ИНН покупателя
			Для Инд = 1 По 12 Цикл                                      
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// Филиал = продавца
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла;

			ТабДокумент.Вывести(ОбластьМакета);
 
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				
				СтруктураПоказателйПечатнойФормы.Вставить("H03", ОбластьМакетаЗаголовок.Параметры.Сводная);
			
				СтруктураПоказателйПечатнойФормы.Вставить("R03G10S",ОбластьМакетаЗаголовок.Параметры.Освобожденная);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
				СтруктураПоказателйПечатнойФормы.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HFILL",	Шапка.Дата);
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM",	Прав(ТекНомерОЦ,7));
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM1",	КодСпецРежима);
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM2",	ФилиалПродавца);
				СтруктураПоказателйПечатнойФормы.Вставить("HFBUY",	ФилиалПродавца);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HKSEL",		ИННОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HKBUY",		ИННОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HBOS",	ПечКтоВыписалНалоговуюНакладную);
				СтруктураПоказателйПечатнойФормы.Вставить("HKBOS",	ИННКтоВыписалНН);
	 			
			КонецЕсли;
			
			// Выводим шапку накладной вместе с итогами
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			
			ВремТаблица = ТаблицаНоменклатуры.Скопировать();
			ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				
				КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
				
				Если КолонкаДляСуммы = "20" Тогда
					
					ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G7", СтрокаТаблицы.Сумма);
						СтруктураПоказателйПечатнойФормы.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "7" Тогда
					
					ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G109", СтрокаТаблицы.Сумма);
						СтруктураПоказателйПечатнойФормы.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "902" Тогда
					
					ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G8", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "901" Тогда
					
					ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G9", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "903" Тогда
					
					ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G10", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ВсегоСумма = 0; ИтогНДС   = 0;
			ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы из ВремТаблица Цикл
				ВсегоСумма = СтрокаТаблицы.Сумма;
				ИтогНДС    = СтрокаТаблицы.СуммаНДС;
			КонецЦикла;
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС);
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
			ОбластьМакета.Параметры.Всего    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				СтруктураПоказателйПечатнойФормы.Вставить("R04G11", ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
				СтруктураПоказателйПечатнойФормы.Вставить("R03G11", ИтогНДС);
				СтруктураПоказателйПечатнойФормы.Вставить("R02G11", СуммаВозвратнойТары);
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);			
			
			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			Если ЗначениеЗаполнено(КодСпецРежима) Тогда
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер) + "/" + СокрЛ(КодСпецРежима);
			Иначе
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер);	
			КонецЕсли;
			
			ДопТекст = Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
			ДопТекст = СтрЗаменить(ДопТекст,
								   "<визначається автоматично>",
								   ПолныйНомерОсновнойНакладной);
								   
			Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				ДопТекст = " (перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання)";	
			КонецЕсли;
			
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				
				Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
				    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
					ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
					Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
						ОбластьМакета.Параметры.КодЛьготы = "99999999";
					КонецЕсли;
				Иначе
					ОбластьМакета.Параметры.КодЛьготы = "";	
				КонецЕсли;
				
				ОбластьМакета.Параметры.НомерСтроки = ТаблицаНоменклатуры.Индекс(СтрокаТаблицы) + 1;
				
				// п 16. 9) не заполняются данные по номенклатуре:
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
																 +" "+ ДопТекст;
				Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				    ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції"
														  +" "+ ДопТекст;
				КонецЕсли;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
				
				ОбластьМакета.Параметры.Сумма     = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры["ЦенаБезНДС"] = Окр(?(СтрокаТаблицы.Количество = 0, 0, СтрокаТаблицы.Сумма / СтрокаТаблицы.Количество), 2);
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					
					СтрокаСтруктуры = СтруктураПоказателйПечатнойФормы.R.Добавить();
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					
					СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
					СтрокаСтруктуры.G32  = ОбластьМакета.Параметры.Импортированный;
					СтрокаСтруктуры.G33  = ОбластьМакета.Параметры.КодДКПП;
					
					СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G105_2S = ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
					
					СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					СтрокаСтруктуры.G008  = ОбластьМакета.Параметры.КодСтавки;
					СтрокаСтруктуры.G010  = СтрокаТаблицы.Сумма;
					СтрокаСтруктуры.G011  = ОбластьМакета.Параметры.КодСХ;
					
				КонецЕсли;
				
			КонецЦикла;
		
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			// ДРФО того, кто выписал НН
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
			КонецЦикла;	
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			ТабДокумент.Вывести(ОбластьМакета);

		КонецЦикла; 
		
	КонецЕсли;	
	
	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;
	
КонецФункции 

Функция ПечатьДокументаНалоговыйКодекс2018(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "НалоговаяНакладнаяАльбом", Объект)
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	ВалютаДокумента = Объект.ВалютаДокумента;		
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G32");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G33");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G011");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G11_10");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("ROWNUM");

		
		Если Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
		
		Если Объект.ПродажаНижеОбычнойЦены Тогда
			СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
			СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
			СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Дата,
	|	Номер,
	|	СпецРежимНалогообложения,
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|	ТипПричиныНевыдачиПокупателю,
	|	ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ЛьготаНДС,
	|	ВидОперации,
	|	Сводная,
	|	КодПризнакаСводной,
	|	РеквизитыНомерСтрокиННАктуальны, 
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ДополнениеКНаименованиюОрганизации = "";
	Если Шапка.ОбособленноеПодразделение = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
	
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ ", " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_2018" + ИмяМакета;

	Макет = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2018Альбом");
	Если ИмяМакета = "НалоговаяНакладная"Тогда
		   ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Иначе	
		   ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;

	//ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет.КодЯзыкаМакета = "ru";
		
	Объект.ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки    
	НаборРекизитовСвертки = "КодВид, КодСХ, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаБезНДСРегл, СтавкаНДС, КодЛьготы";
	ТаблицаНоменклатуры.Свернуть("НомерСтрокиНН, " + НаборРекизитовСвертки, "Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл"); 
	ТаблицаНоменклатуры.Сортировать("НомерСтрокиНН");
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для служебныех целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
	Если ЗначениеЗаполнено(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены.Номер,Истина,Истина)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	ФилиалПокупателяКодПоЕДРПОУ = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
			ФилиалПокупателяКодПоЕДРПОУ = Сред(Шапка.ФилиалПокупателя, ПозицияСобачки + 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
		ФилиалПокупателяКодПоЕДРПОУ = Прав("          " + СокрЛП(ФилиалПокупателяКодПоЕДРПОУ), 10);
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес 	
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		                                                                                  				   
		ИННОрганизации					= "500000000000";
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце, "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + ", " + НазваниеОрганизации;
		КонецЕсли;
		
		// вместо адреса - просто страна нерезидента
		Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");			
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли;
		
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		ЕДРПОУОрганизации					= "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		ЕДРПОУОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоЕДРПОУ,"               ,Ложь);
		Если НЕ ЗначениеЗаполнено(ЕДРПОУОрганизации) Тогда 
			ЕДРПОУОрганизации	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоДРФО,"             ,Ложь);
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	ЕДРПОУОрганизации	= Прав("            " + СокрЛП(ЕДРПОУОрганизации), 10);
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			
			ФилиалПокупателя = "";
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ЕДРПОУКонтрагента = "";
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + ", " + НазваниеКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 0  ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда
			Если ПустаяСтрока(ФилиалПокупателяКодПоЕДРПОУ) Тогда 
				ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоЕДРПОУ," ,Ложь);
				Если НЕ ЗначениеЗаполнено(ЕДРПОУКонтрагента) Тогда
					ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоДРФО," ,Ложь);
				КонецЕсли;
			Иначе
				ЕДРПОУКонтрагента = ФилиалПокупателяКодПоЕДРПОУ;
			КонецЕсли;
		Иначе
			ЕДРПОУКонтрагента = "";
		КонецЕсли;
		
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда

			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");			
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли;

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
				 ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
	КонецЕсли; 
	
	ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
	ЕДРПОУКонтрагента	= Прав("            " + СокрЛП(ЕДРПОУКонтрагента), 10);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
		
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		КодПризнакаСводнойНаПечать = "";
		Если НЕ (Шапка.КодПризнакаСводной = 0)Тогда 
			КодПризнакаСводнойНаПечать = Строка(Шапка.КодПризнакаСводной);
		ИначеЕсли  (Шапка.Сводная = Истина) Тогда 
			Если ( Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
				  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
				  
				  КодПризнакаСводнойНаПечать =  "1";
				  
			ИначеЕсли (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
				  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации) Тогда
				  
				  КодПризнакаСводнойНаПечать =  "4";
				  
		    КонецЕсли;
		КонецЕсли;
		ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной = КодПризнакаСводнойНаПечать;

		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		Если  НЕ Шапка.ТипПричиныНевыдачиПокупателю = 0 Тогда
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ продавца
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУОрганизации_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ покупателя
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУКонтрагента_"+Инд] = Сред(ЕДРПОУКонтрагента, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим шапку накладной вместе с итогами
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G7", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G109", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G8", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G10", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ВсегоСумма = 0; ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ВсегоСумма = СтрокаТаблицы.Сумма;
			ИтогНДС    = СтрокаТаблицы.СуммаНДС;
		КонецЦикла;
		
		СуммаВозвратнойТары = 0;
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		
		ОбластьМакета.Параметры.Всего    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС + ВсегоСумма);
		ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС);
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R04G11", ИтогНДС + ВсегоСумма);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G11", ИтогНДС);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11", СуммаВозвратнойТары);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G1", ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной);			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINSEL",	ЕДРПОУОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINBUY",	ЕДРПОУКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
 			
		КонецЕсли;
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			Если Шапка.РеквизитыНомерСтрокиННАктуальны Тогда 
				ОбластьМакета.Параметры.НомерСтроки = СтрокаТаблицы.НомерСтрокиНН;
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			Если СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодУслуги Тогда
				ОбластьМакета.Параметры.КодДКПП   = ОбластьМакета.Параметры.КодУКТВЭД;	
				ОбластьМакета.Параметры.КодУКТВЭД = "";
			ИначеЕсли СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодТовараИмпортированного Тогда
				ОбластьМакета.Параметры.Импортированный = "X";
			КонецЕсли;
			Если НЕ КодСпецРежима = "2" Тогда
			    ОбластьМакета.Параметры.КодСХ = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
			
			ОбластьМакета.Параметры.Сумма     = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			РасчСуммаНДС6Зн = Окр(УчетНДСКлиентСервер.РассчитатьСуммуНДС(СтрокаТаблицы.Сумма, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС)), 6 );
			ФорматНДС6Зн = ?(Окр(РасчСуммаНДС6Зн,2) = РасчСуммаНДС6Зн, "ЧЦ=15; ЧДЦ=2; ЧН=' '", "ЧЦ=19; ЧДЦ=6; ЧН=' '");
			ОбластьМакета.Параметры.СуммаНДС6зн     = СокрЛ(Формат(РасчСуммаНДС6Зн, ФорматНДС6Зн));
			
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			ДанныеОСумме = СтрокаТаблицы.Сумма;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.Сумма = "";
				ОбластьМакета.Параметры.СуммаНДС6зн = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
					
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "грн";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
						
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				СтрокаСтруктуры.G32  		= ОбластьМакета.Параметры.Импортированный;
				СтрокаСтруктуры.G33  		= ОбластьМакета.Параметры.КодДКПП;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				СтрокаСтруктуры.G5 			= ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G6 			= ОбластьМакета.Параметры.ЦенаБезНДС;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				СтрокаСтруктуры.G011  		= ОбластьМакета.Параметры.КодСХ;
				СтрокаСтруктуры.G11_10  	= ОбластьМакета.Параметры.СуммаНДС6зн;
				СтрокаСтруктуры.ROWNUM		= ОбластьМакета.Параметры.НомерСтроки;
				
			КонецЕсли;
							
		КонецЦикла;
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла; 

	Если Объект.ПродажаНижеОбычнойЦены 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки
		Тогда
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
			// все что мы напечатали по обычной НН не имеет смысла для этого вида операции
			// нужна только "вторая НН" как если бы это была не сводная накладная на превыешение базы над ценой продажи
			ТабДокумент.Очистить();	
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				Таблица = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
				Таблица.Очистить();
				СтруктураПоказателей.НалоговыйДокумент.Очистить();
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R", Таблица);
				
				СтруктураПоказателйПечатнойФормы = СтруктураПоказателей.НалоговыйДокумент;	
			КонецЕсли;
		Иначе
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				СтруктураПоказателйПечатнойФормы = СтруктураПоказателей.НалоговыйДокументЗЦ;
			КонецЕсли;
		КонецЕсли;
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";

		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 1 Цикл
		
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			КодПризнакаСводнойНаПечать = "";
			Если НЕ (Шапка.КодПризнакаСводной = 0)Тогда 
				КодПризнакаСводнойНаПечать = Строка(Шапка.КодПризнакаСводной);
			ИначеЕсли (Шапка.Сводная = Истина) Тогда 
				Если (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки) Тогда
					
					КодПризнакаСводнойНаПечать =  "3";
					  
				КонецЕсли;
			КонецЕсли;
			ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной = КодПризнакаСводнойНаПечать;
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
				ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
			
			КонецЕсли;			
			
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			
			ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены, "ЧЦ=2; ЧВН=");
			Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2; ЧВН=");
			КонецЕсли;
			
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Лев(ТипПричиныСтр, 1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Прав(ТипПричиныСтр, 1);
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл
				Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
					ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
				Иначе
					ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
				КонецЕсли;
			КонецЦикла; 
			
			// код спец. режима
			ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// филиал
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла; 
			
			// ЕДРПОУ продавца
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["ЕДРПОУОрганизации_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
			КонецЦикла; 
			
			// название покупателя = продавца
			
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеОрганизации;
			
			// ИНН покупателя
			Для Инд = 1 По 12 Цикл                                      
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// Филиал = продавца
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла;
			
			// ЕДРПОУ покупателя
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["ЕДРПОУКонтрагента_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
			КонецЦикла; 

			
			ТабДокумент.Вывести(ОбластьМакета);
 
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				
				СтруктураПоказателйПечатнойФормы.Вставить("R01G1", ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной);
				
				СтруктураПоказателйПечатнойФормы.Вставить("R03G10S",ОбластьМакетаЗаголовок.Параметры.Освобожденная);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
				СтруктураПоказателйПечатнойФормы.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HFILL",	Шапка.Дата);
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM",	Прав(ТекНомерОЦ,7));
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM1",	КодСпецРежима);
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM2",	ФилиалПродавца);
				СтруктураПоказателйПечатнойФормы.Вставить("HFBUY",	ФилиалПродавца);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HKSEL",		ИННОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HKBUY",		ИННОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HBOS",	ПечКтоВыписалНалоговуюНакладную);
				СтруктураПоказателйПечатнойФормы.Вставить("HKBOS",	ИННКтоВыписалНН);
				СтруктураПоказателйПечатнойФормы.Вставить("HTINSEL",	ЕДРПОУОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HTINBUY",	ЕДРПОУОрганизации);
	 			
			КонецЕсли;
			
			// Выводим шапку накладной вместе с итогами
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			
			ВремТаблица = ТаблицаНоменклатуры.Скопировать();
			ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				
				КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
				
				Если КолонкаДляСуммы = "20" Тогда
					
					ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G7", СтрокаТаблицы.Сумма);
						СтруктураПоказателйПечатнойФормы.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "7" Тогда
					
					ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G109", СтрокаТаблицы.Сумма);
						СтруктураПоказателйПечатнойФормы.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "902" Тогда
					
					ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G8", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "901" Тогда
					
					ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G9", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "903" Тогда
					
					ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G10", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ВсегоСумма = 0; ИтогНДС   = 0;
			ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы из ВремТаблица Цикл
				ВсегоСумма = СтрокаТаблицы.Сумма;
				ИтогНДС    = СтрокаТаблицы.СуммаНДС;
			КонецЦикла;
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС);
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
			ОбластьМакета.Параметры.Всего    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				СтруктураПоказателйПечатнойФормы.Вставить("R04G11", ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
				СтруктураПоказателйПечатнойФормы.Вставить("R03G11", ИтогНДС);
				СтруктураПоказателйПечатнойФормы.Вставить("R02G11", СуммаВозвратнойТары);
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);			
			
			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			Если ЗначениеЗаполнено(КодСпецРежима) Тогда
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер) + "/" + СокрЛ(КодСпецРежима);
			Иначе
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер);	
			КонецЕсли;
			
			ДопТекст = Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
			ДопТекст = СтрЗаменить(ДопТекст,
								   "<визначається автоматично>",
								   ПолныйНомерОсновнойНакладной);
								   
			Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				ДопТекст = " (перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання)";	
			КонецЕсли;
			
			ТекущийНомерСтрокиНН = 0;			
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				
				Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
				    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
					ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
					Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
						ОбластьМакета.Параметры.КодЛьготы = "99999999";
					КонецЕсли;
				Иначе
					ОбластьМакета.Параметры.КодЛьготы = "";	
				КонецЕсли;
				
				Если Шапка.РеквизитыНомерСтрокиННАктуальны Тогда 
					ТекущийНомерСтрокиНН = ТекущийНомерСтрокиНН + 1;			
					ОбластьМакета.Параметры.НомерСтроки = ТекущийНомерСтрокиНН;
				КонецЕсли;
				
				// п 16. 9) не заполняются данные по номенклатуре:
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
																 +" "+ ДопТекст;
				Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				    ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції"
														  +" "+ ДопТекст;
				КонецЕсли;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
				
				ОбластьМакета.Параметры.Сумма     = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры["ЦенаБезНДС"] = Окр(?(СтрокаТаблицы.Количество = 0, 0, СтрокаТаблицы.Сумма / СтрокаТаблицы.Количество), 2);
				РасчСуммаНДС6Зн = Окр(УчетНДСКлиентСервер.РассчитатьСуммуНДС(СтрокаТаблицы.Сумма, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС)), 6 );
				ФорматНДС6Зн = ?(Окр(РасчСуммаНДС6Зн,2) = РасчСуммаНДС6Зн, "ЧЦ=15; ЧДЦ=2; ЧН=' '", "ЧЦ=19; ЧДЦ=6; ЧН=' '");
				ОбластьМакета.Параметры.СуммаНДС6зн     = СокрЛ(Формат(РасчСуммаНДС6Зн,ФорматНДС6Зн));
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					
					СтрокаСтруктуры = СтруктураПоказателйПечатнойФормы.R.Добавить();
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					
					СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
					СтрокаСтруктуры.G32  = ОбластьМакета.Параметры.Импортированный;
					СтрокаСтруктуры.G33  = ОбластьМакета.Параметры.КодДКПП;
					
					СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G105_2S = ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
					
					СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					СтрокаСтруктуры.G008  = ОбластьМакета.Параметры.КодСтавки;
					СтрокаСтруктуры.G010  = СтрокаТаблицы.Сумма;
					СтрокаСтруктуры.G011  = ОбластьМакета.Параметры.КодСХ;
					СтрокаСтруктуры.G11_10  		= ОбластьМакета.Параметры.СуммаНДС6зн;
					СтрокаСтруктуры.ROWNUM		= ОбластьМакета.Параметры.НомерСтроки;
					
				КонецЕсли;
				
			КонецЦикла;
		
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			// ДРФО того, кто выписал НН
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
			КонецЦикла;	
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			ТабДокумент.Вывести(ОбластьМакета);

		КонецЦикла; 
		
	КонецЕсли;	
	
	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;
	
КонецФункции 

Функция ПечатьДокументаНалоговыйКодекс2021(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "НалоговаяНакладнаяАльбом", Объект)
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	ВалютаДокумента = Объект.ВалютаДокумента;		
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G32");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G33");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G011");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G11_10");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("ROWNUM");

		
		Если Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
		
		Если Объект.ПродажаНижеОбычнойЦены Тогда
			СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
			СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
			СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Дата,
	|	Номер,
	|	СпецРежимНалогообложения,
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|	ТипПричиныНевыдачиПокупателю,
	|	ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ЛьготаНДС,
	|	ВидОперации,
	|	Сводная,
	|	КодПризнакаСводной,
	|	РеквизитыНомерСтрокиННАктуальны, 
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ДополнениеКНаименованиюОрганизации = "";
	Если Шапка.ОбособленноеПодразделение = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
	
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ ", " ;
	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_2021" + ИмяМакета;

	Макет = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2021");
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Макет.КодЯзыкаМакета = "ru";
		
	Объект.ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки    
	НаборРекизитовСвертки = "КодВид, КодСХ, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаБезНДСРегл, СтавкаНДС, КодЛьготы";
	ТаблицаНоменклатуры.Свернуть("НомерСтрокиНН, " + НаборРекизитовСвертки, "Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл"); 
	ТаблицаНоменклатуры.Сортировать("НомерСтрокиНН");
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для служебныех целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
	Если ЗначениеЗаполнено(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены.Номер,Истина,Истина)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	ФилиалПокупателяКодПоЕДРПОУ = "";
	ДополнениеКНаименованиюКонтрагента = "";
	КодЕДРПОУГоловногоКонтрагента = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
			ФилиалПокупателяКодПоЕДРПОУ = Сред(Шапка.ФилиалПокупателя, ПозицияСобачки + 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина Тогда
			СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);
			КодЕДРПОУГоловногоКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя, "КодПоЕДРПОУ,", Ложь);
			Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда 
				ДополнениеКНаименованиюКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) + ", ";
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ФилиалПокупателяКодПоЕДРПОУ) И ЗначениеЗаполнено(КодЕДРПОУГоловногоКонтрагента) Тогда
			ФилиалПокупателяКодПоЕДРПОУ = КодЕДРПОУГоловногоКонтрагента;
		КонецЕсли;
		ФилиалПокупателяКодПоЕДРПОУ = Прав("          " + СокрЛП(ФилиалПокупателяКодПоЕДРПОУ), 10);
	КонецЕсли;
	
	ПродавецЮрлицо = Истина;
	ПокупательЮрлицо = Истина;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес 	
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		                                                                                  				   
		ИННОрганизации					= "500000000000";
		НазваниеОрганизации				= ДополнениеКНаименованиюКонтрагента + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце, "ПолноеНаименование,",Ложь);
		
		// вместо адреса - просто страна нерезидента
		Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");			
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли;
		
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		ЕДРПОУОрганизации					= "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		ЕДРПОУОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоЕДРПОУ,"               ,Ложь);
		Если НЕ ЗначениеЗаполнено(ЕДРПОУОрганизации) Тогда 
			ЕДРПОУОрганизации	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоДРФО,"             ,Ложь);
			ПродавецЮрлицо = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	ЕДРПОУОрганизации	= Прав("            " + СокрЛП(ЕДРПОУОрганизации), 10);
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			
			ФилиалПокупателя = "";
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ЕДРПОУКонтрагента = "";
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ДополнениеКНаименованиюКонтрагента + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 0  ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда
			Если ПустаяСтрока(ФилиалПокупателяКодПоЕДРПОУ) Тогда 
				ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоЕДРПОУ," ,Ложь);
				Если НЕ ЗначениеЗаполнено(ЕДРПОУКонтрагента) Тогда
					ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоДРФО," ,Ложь);
					ПокупательЮрлицо = Ложь;
				КонецЕсли;
			Иначе
				ЕДРПОУКонтрагента = ФилиалПокупателяКодПоЕДРПОУ;
			КонецЕсли;
		Иначе
			ЕДРПОУКонтрагента = "";
		КонецЕсли;
		
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда

			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");			
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли;

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
				 ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
	КонецЕсли; 
	
	ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
	ЕДРПОУКонтрагента	= Прав("            " + СокрЛП(ЕДРПОУКонтрагента), 10);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную = СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Имя)
										 + " "
										 + ВРег(СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия)); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
		
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		КодПризнакаСводнойНаПечать = "";
		Если НЕ (Шапка.КодПризнакаСводной = 0)Тогда 
			КодПризнакаСводнойНаПечать = Строка(Шапка.КодПризнакаСводной);
		ИначеЕсли  (Шапка.Сводная = Истина) Тогда 
			Если ( Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
				  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
				  
				  КодПризнакаСводнойНаПечать =  "1";
				  
			ИначеЕсли (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
				  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации) Тогда
				  
				  КодПризнакаСводнойНаПечать =  "4";
				  
		    КонецЕсли;
		КонецЕсли;
		ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной = КодПризнакаСводнойНаПечать;

		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		Если  НЕ Шапка.ТипПричиныНевыдачиПокупателю = 0 Тогда
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ продавца
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУОрганизации_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
		КонецЦикла; 
		
		//источник кода продавца
		ИсточникКодаПродавца = КодИсточникаНалоговогоНомера(ЕДРПОУОрганизации, ПродавецЮрлицо);
		ОбластьМакета.Параметры.ИсточникКодаОрганизации = ИсточникКодаПродавца;
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ покупателя
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУКонтрагента_"+Инд] = Сред(ЕДРПОУКонтрагента, Инд, 1);
		КонецЦикла; 
		
		//источник кода покупателя
		ИсточникКодаПокупателя = КодИсточникаНалоговогоНомера(ЕДРПОУКонтрагента, ПокупательЮрлицо);
		ОбластьМакета.Параметры.ИсточникКодаКонтрагента = ИсточникКодаПокупателя;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим шапку накладной вместе с итогами
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G7", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G109", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G8", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G10", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ВсегоСумма = 0; ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ВсегоСумма = СтрокаТаблицы.Сумма;
			ИтогНДС    = СтрокаТаблицы.СуммаНДС;
		КонецЦикла;
		
		СуммаВозвратнойТары = 0;
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		
		ОбластьМакета.Параметры.Всего    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС + ВсегоСумма);
		ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС);
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R04G11", ИтогНДС + ВсегоСумма);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G11", ИтогНДС);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11", СуммаВозвратнойТары);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G1", ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной);			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINSEL",	ЕДРПОУОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINBUY",	ЕДРПОУКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKS",		ИсточникКодаПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKB",		ИсточникКодаПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
 			
		КонецЕсли;
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			Если Шапка.РеквизитыНомерСтрокиННАктуальны Тогда 
				ОбластьМакета.Параметры.НомерСтроки = СтрокаТаблицы.НомерСтрокиНН;
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			Если СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодУслуги Тогда
				ОбластьМакета.Параметры.КодДКПП   = ОбластьМакета.Параметры.КодУКТВЭД;	
				ОбластьМакета.Параметры.КодУКТВЭД = "";
			ИначеЕсли СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодТовараИмпортированного Тогда
				ОбластьМакета.Параметры.Импортированный = "X";
			КонецЕсли;
			Если НЕ КодСпецРежима = "2" Тогда
			    ОбластьМакета.Параметры.КодСХ = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
			
			ОбластьМакета.Параметры.Сумма     = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			РасчСуммаНДС6Зн = Окр(УчетНДСКлиентСервер.РассчитатьСуммуНДС(СтрокаТаблицы.Сумма, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС)), 6 );
			ФорматНДС6Зн = ?(Окр(РасчСуммаНДС6Зн,2) = РасчСуммаНДС6Зн, "ЧЦ=15; ЧДЦ=2; ЧН=' '", "ЧЦ=19; ЧДЦ=6; ЧН=' '");
			ОбластьМакета.Параметры.СуммаНДС6зн     = СокрЛ(Формат(РасчСуммаНДС6Зн, ФорматНДС6Зн));
			
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			ДанныеОСумме = СтрокаТаблицы.Сумма;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.Сумма = "";
				ОбластьМакета.Параметры.СуммаНДС6зн = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
					
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "грн";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
						
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				СтрокаСтруктуры.G32  		= ОбластьМакета.Параметры.Импортированный;
				СтрокаСтруктуры.G33  		= ОбластьМакета.Параметры.КодДКПП;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				СтрокаСтруктуры.G5 			= ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G6 			= ОбластьМакета.Параметры.ЦенаБезНДС;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				СтрокаСтруктуры.G011  		= ОбластьМакета.Параметры.КодСХ;
				СтрокаСтруктуры.G11_10  	= ОбластьМакета.Параметры.СуммаНДС6зн;
				СтрокаСтруктуры.ROWNUM		= ОбластьМакета.Параметры.НомерСтроки;
				
			КонецЕсли;
							
		КонецЦикла;
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла; 

	Если Объект.ПродажаНижеОбычнойЦены 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки
		Тогда
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
			// все что мы напечатали по обычной НН не имеет смысла для этого вида операции
			// нужна только "вторая НН" как если бы это была не сводная накладная на превыешение базы над ценой продажи
			ТабДокумент.Очистить();	
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				Таблица = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
				Таблица.Очистить();
				СтруктураПоказателей.НалоговыйДокумент.Очистить();
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R", Таблица);
				
				СтруктураПоказателйПечатнойФормы = СтруктураПоказателей.НалоговыйДокумент;	
			КонецЕсли;
		Иначе
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				СтруктураПоказателйПечатнойФормы = СтруктураПоказателей.НалоговыйДокументЗЦ;
			КонецЕсли;
		КонецЕсли;
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";

		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 1 Цикл
		
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			КодПризнакаСводнойНаПечать = "";
			Если НЕ (Шапка.КодПризнакаСводной = 0)Тогда 
				КодПризнакаСводнойНаПечать = Строка(Шапка.КодПризнакаСводной);
			ИначеЕсли (Шапка.Сводная = Истина) Тогда 
				Если (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки) Тогда
					
					КодПризнакаСводнойНаПечать =  "3";
					  
				КонецЕсли;
			КонецЕсли;
			ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной = КодПризнакаСводнойНаПечать;
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
				ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
			
			КонецЕсли;			
			
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			
			ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены, "ЧЦ=2; ЧВН=");
			Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2; ЧВН=");
			КонецЕсли;
			
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Лев(ТипПричиныСтр, 1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Прав(ТипПричиныСтр, 1);
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл
				Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
					ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
				Иначе
					ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
				КонецЕсли;
			КонецЦикла; 
			
			// код спец. режима
			ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// филиал
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла; 
			
			// ЕДРПОУ продавца
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["ЕДРПОУОрганизации_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
			КонецЦикла; 
			
			//источник кода продавца
			ОбластьМакета.Параметры.ИсточникКодаОрганизации = ИсточникКодаПродавца;
		
			// название покупателя = продавца
			
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеОрганизации;
			
			// ИНН покупателя
			Для Инд = 1 По 12 Цикл                                      
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// Филиал = продавца
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла;
			
			// ЕДРПОУ покупателя
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["ЕДРПОУКонтрагента_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
			КонецЦикла; 

			//источник кода покупателя = коду продавца
			ОбластьМакета.Параметры.ИсточникКодаКонтрагента = ИсточникКодаПродавца;
			
			ТабДокумент.Вывести(ОбластьМакета);
 
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				
				СтруктураПоказателйПечатнойФормы.Вставить("R01G1", ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной);
				
				СтруктураПоказателйПечатнойФормы.Вставить("R03G10S",ОбластьМакетаЗаголовок.Параметры.Освобожденная);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
				СтруктураПоказателйПечатнойФормы.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HFILL",	Шапка.Дата);
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM",	Прав(ТекНомерОЦ,7));
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM1",	КодСпецРежима);
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM2",	ФилиалПродавца);
				СтруктураПоказателйПечатнойФормы.Вставить("HFBUY",	ФилиалПродавца);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HKSEL",		ИННОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HKBUY",		ИННОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HBOS",	ПечКтоВыписалНалоговуюНакладную);
				СтруктураПоказателйПечатнойФормы.Вставить("HKBOS",	ИННКтоВыписалНН);
				СтруктураПоказателйПечатнойФормы.Вставить("HTINSEL",	ЕДРПОУОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HTINBUY",	ЕДРПОУОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HKS",		ИсточникКодаПродавца);
				СтруктураПоказателйПечатнойФормы.Вставить("HKB",		ИсточникКодаПродавца);
 			
			КонецЕсли;
			
			// Выводим шапку накладной вместе с итогами
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			
			ВремТаблица = ТаблицаНоменклатуры.Скопировать();
			ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				
				КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
				
				Если КолонкаДляСуммы = "20" Тогда
					
					ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G7", СтрокаТаблицы.Сумма);
						СтруктураПоказателйПечатнойФормы.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "7" Тогда
					
					ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G109", СтрокаТаблицы.Сумма);
						СтруктураПоказателйПечатнойФормы.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "902" Тогда
					
					ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G8", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "901" Тогда
					
					ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G9", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "903" Тогда
					
					ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G10", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ВсегоСумма = 0; ИтогНДС   = 0;
			ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы из ВремТаблица Цикл
				ВсегоСумма = СтрокаТаблицы.Сумма;
				ИтогНДС    = СтрокаТаблицы.СуммаНДС;
			КонецЦикла;
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС);
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
			ОбластьМакета.Параметры.Всего    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				СтруктураПоказателйПечатнойФормы.Вставить("R04G11", ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
				СтруктураПоказателйПечатнойФормы.Вставить("R03G11", ИтогНДС);
				СтруктураПоказателйПечатнойФормы.Вставить("R02G11", СуммаВозвратнойТары);
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);			
			
			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			Если ЗначениеЗаполнено(КодСпецРежима) Тогда
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер) + "/" + СокрЛ(КодСпецРежима);
			Иначе
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер);	
			КонецЕсли;
			
			ДопТекст = Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
			ДопТекст = СтрЗаменить(ДопТекст,
								   "<визначається автоматично>",
								   ПолныйНомерОсновнойНакладной);
								   
			Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				ДопТекст = " (перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання)";	
			КонецЕсли;
			
			ТекущийНомерСтрокиНН = 0;			
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				
				Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
				    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
					ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
					Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
						ОбластьМакета.Параметры.КодЛьготы = "99999999";
					КонецЕсли;
				Иначе
					ОбластьМакета.Параметры.КодЛьготы = "";	
				КонецЕсли;
				
				Если Шапка.РеквизитыНомерСтрокиННАктуальны Тогда 
					ТекущийНомерСтрокиНН = ТекущийНомерСтрокиНН + 1;			
					ОбластьМакета.Параметры.НомерСтроки = ТекущийНомерСтрокиНН;
				КонецЕсли;
				
				// п 16. 9) не заполняются данные по номенклатуре:
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
																 +" "+ ДопТекст;
				Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				    ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції"
														  +" "+ ДопТекст;
				КонецЕсли;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
				
				ОбластьМакета.Параметры.Сумма     = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры["ЦенаБезНДС"] = Окр(?(СтрокаТаблицы.Количество = 0, 0, СтрокаТаблицы.Сумма / СтрокаТаблицы.Количество), 2);
				РасчСуммаНДС6Зн = Окр(УчетНДСКлиентСервер.РассчитатьСуммуНДС(СтрокаТаблицы.Сумма, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС)), 6 );
				ФорматНДС6Зн = ?(Окр(РасчСуммаНДС6Зн,2) = РасчСуммаНДС6Зн, "ЧЦ=15; ЧДЦ=2; ЧН=' '", "ЧЦ=19; ЧДЦ=6; ЧН=' '");
				ОбластьМакета.Параметры.СуммаНДС6зн     = СокрЛ(Формат(РасчСуммаНДС6Зн,ФорматНДС6Зн));
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					
					СтрокаСтруктуры = СтруктураПоказателйПечатнойФормы.R.Добавить();
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					
					СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
					СтрокаСтруктуры.G32  = ОбластьМакета.Параметры.Импортированный;
					СтрокаСтруктуры.G33  = ОбластьМакета.Параметры.КодДКПП;
					
					СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G105_2S = ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
					
					СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					СтрокаСтруктуры.G008  = ОбластьМакета.Параметры.КодСтавки;
					СтрокаСтруктуры.G010  = СтрокаТаблицы.Сумма;
					СтрокаСтруктуры.G011  = ОбластьМакета.Параметры.КодСХ;
					СтрокаСтруктуры.G11_10  		= ОбластьМакета.Параметры.СуммаНДС6зн;
					СтрокаСтруктуры.ROWNUM		= ОбластьМакета.Параметры.НомерСтроки;
					
				КонецЕсли;
				
			КонецЦикла;
		
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			// ДРФО того, кто выписал НН
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
			КонецЦикла;	
			
			ТабДокумент.Вывести(ОбластьМакета);

		КонецЦикла; 
		
	КонецЕсли;	
	
	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;
	
КонецФункции 

Функция ПечатьДокументаНалоговыйКодекс2021Мес3(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "НалоговаяНакладнаяАльбом", Объект)
	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	ВалютаДокумента = Объект.ВалютаДокумента;		
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G32");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G33");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G011");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G11_10");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("ROWNUM");

		
		Если Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.НеНДСОперации Тогда
			
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
		КонецЕсли;
		
		
		Если Объект.ПродажаНижеОбычнойЦены Тогда
			СтруктураПоказателей.Вставить("НалоговыйДокументЗЦ", 	Новый Структура());	// данные табличной части по накладной по "обычным ценам"
			СтруктураПоказателей.НалоговыйДокументЗЦ.Вставить("R",  Новый ТаблицаЗначений());  // данные табличной части
			СтруктураПоказателей.НалоговыйДокументЗЦ.R = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Дата,
	|	Номер,
	|	СпецРежимНалогообложения,
	|	ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	ОбособленноеПодразделение.Префикс КАК Префикс,
	|	ТипПричиныНевыдачиПокупателю,
	|	ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены,
	|	ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ЛьготаНДС,
	|	ВидОперации,
	|	Сводная,
	|	КодПризнакаСводной,
	|	РеквизитыНомерСтрокиННАктуальны, 
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН
	|ИЗ
	|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
	|
	|ГДЕ
	|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ДополнениеКНаименованиюОрганизации = "";
	Если Шапка.ОбособленноеПодразделение = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
	
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ ", " ;
	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
		
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.КлючПараметровПечати  = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_2021Мес3" + ИмяМакета;

	Макет = ПолучитьМакет("ПФ_MXL_UK_НалоговаяНакладная2021Мес3");
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Макет.КодЯзыкаМакета = "ru";
		
	Объект.ПодготовитьТаблицы(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки    
	НаборРекизитовСвертки = "КодВид, КодСХ, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаБезНДСРегл, СтавкаНДС, КодЛьготы";
	ТаблицаНоменклатуры.Свернуть("НомерСтрокиНН, " + НаборРекизитовСвертки, "Количество, СуммаБезНДСРегл, СуммаНДСРегл, СуммаБезНДСПревышенияРегл, СуммаНДСПревышенияРегл"); 
	ТаблицаНоменклатуры.Сортировать("НомерСтрокиНН");
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаБезНДСРегл.Имя 				 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.СуммаБезНДСРегл.Имя 			 = "Сумма";
	ТаблицаНоменклатуры.Колонки.СуммаНДСРегл.Имя				 = "СуммаНДС";
	
	// Для служебныех целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	// определим параметры шапки документа
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
	
	// Номер
	ТекНомер = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
	Если ЗначениеЗаполнено(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены) Тогда
	    ТекНомерОЦ = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.НалоговаяДляРезерваНомераПриПродажаНижеОбычнойЦены.Номер,Истина,Истина)), 7);
	Иначе	
		ТекНомерОЦ = ТекНомер;
	КонецЕсли;
	
	// филиал/спецрежим
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	ФилиалПокупателяКодПоЕДРПОУ = "";
	ДополнениеКНаименованиюКонтрагента = "";
	КодЕДРПОУГоловногоКонтрагента = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
			ФилиалПокупателяКодПоЕДРПОУ = Сред(Шапка.ФилиалПокупателя, ПозицияСобачки + 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина Тогда
			СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);
			КодЕДРПОУГоловногоКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя, "КодПоЕДРПОУ,", Ложь);
			Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда 
				ДополнениеКНаименованиюКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) + ", ";
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ФилиалПокупателяКодПоЕДРПОУ) И ЗначениеЗаполнено(КодЕДРПОУГоловногоКонтрагента) Тогда
			ФилиалПокупателяКодПоЕДРПОУ = КодЕДРПОУГоловногоКонтрагента;
		КонецЕсли;
		ФилиалПокупателяКодПоЕДРПОУ = Прав("          " + СокрЛП(ФилиалПокупателяКодПоЕДРПОУ), 10);
	КонецЕсли;
	
	ПродавецЮрлицо = Истина;
	ПокупательЮрлицо = Истина;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес 	
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		                                                                                  				   
		ИННОрганизации					= "500000000000";
		НазваниеОрганизации				= ДополнениеКНаименованиюКонтрагента + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце, "ПолноеНаименование,",Ложь);
		
		// вместо адреса - просто страна нерезидента
		Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");			
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли;
		
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		ЕДРПОУОрганизации					= "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		ЕДРПОУОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоЕДРПОУ,"               ,Ложь);
		Если НЕ ЗначениеЗаполнено(ЕДРПОУОрганизации) Тогда 
			ЕДРПОУОрганизации	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоДРФО,"             ,Ложь);
			ПродавецЮрлицо = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	ЕДРПОУОрганизации	= Прав("            " + СокрЛП(ЕДРПОУОрганизации), 10);
	
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
   		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
		
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РаботыОтНерезидента Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			
			ФилиалПокупателя = "";
		КонецЕсли;
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ЕДРПОУКонтрагента = "";
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ДополнениеКНаименованиюКонтрагента + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 0  ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда
			Если ПустаяСтрока(ФилиалПокупателяКодПоЕДРПОУ) Тогда 
				ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоЕДРПОУ," ,Ложь);
				Если НЕ ЗначениеЗаполнено(ЕДРПОУКонтрагента) Тогда
					ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоДРФО," ,Ложь);
					ПокупательЮрлицо = Ложь;
				КонецЕсли;
			Иначе
				ЕДРПОУКонтрагента = ФилиалПокупателяКодПоЕДРПОУ;
			КонецЕсли;
		Иначе
			ЕДРПОУКонтрагента = "";
		КонецЕсли;
		
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда

			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");			
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли;

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
				 ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
	КонецЕсли; 
	
	ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);
	ЕДРПОУКонтрагента	= Прав("            " + СокрЛП(ЕДРПОУКонтрагента), 10);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную = СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Имя)
										 + " "
										 + ВРег(СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия)); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
		
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		КодПризнакаСводнойНаПечать = "";
		Если НЕ (Шапка.КодПризнакаСводной = 0)Тогда 
			КодПризнакаСводнойНаПечать = Строка(Шапка.КодПризнакаСводной);
		ИначеЕсли  (Шапка.Сводная = Истина) Тогда 
			Если ( Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
				  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
				  
				  КодПризнакаСводнойНаПечать =  "1";
				  
			ИначеЕсли (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
				  ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации) Тогда
				  
				  КодПризнакаСводнойНаПечать =  "4";
				  
		    КонецЕсли;
		КонецЕсли;
		ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной = КодПризнакаСводнойНаПечать;

		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		Если  НЕ Шапка.ТипПричиныНевыдачиПокупателю = 0 Тогда
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим отступ
		ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		// наименование продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ продавца
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУОрганизации_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
		КонецЦикла; 
		
		//источник кода продавца
		ИсточникКодаПродавца = КодИсточникаНалоговогоНомера(ЕДРПОУОрганизации, ПродавецЮрлицо);
		ОбластьМакета.Параметры.ИсточникКодаОрганизации = ИсточникКодаПродавца;
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеКонтрагента;
		
		// ИНН покупателя
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ покупателя
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУКонтрагента_"+Инд] = Сред(ЕДРПОУКонтрагента, Инд, 1);
		КонецЦикла; 
		
		//источник кода покупателя
		ИсточникКодаПокупателя = КодИсточникаНалоговогоНомера(ЕДРПОУКонтрагента, ПокупательЮрлицо);
		ОбластьМакета.Параметры.ИсточникКодаКонтрагента = ИсточникКодаПокупателя;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим шапку накладной вместе с итогами
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G7", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "14" Тогда
				
				ОбластьМакета.Параметры.Сумма14   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры.ИтогНДС14 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G14", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G14", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G109", СтрокаТаблицы.Сумма);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G8", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G10", СтрокаТаблицы.Сумма);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ВсегоСумма = 0; ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ВсегоСумма = СтрокаТаблицы.Сумма;
			ИтогНДС    = СтрокаТаблицы.СуммаНДС;
		КонецЦикла;
		
		СуммаВозвратнойТары = 0;
		ТаблицаПоТаре.Свернуть("", "СуммаСНДСРегл");
		Для каждого СтрокаТаблицы из ТаблицаПоТаре Цикл
			//В таблице не более одной строки
			СуммаВозвратнойТары = СтрокаТаблицы.СуммаСНДСРегл;
		КонецЦикла;
		
		ОбластьМакета.Параметры.Всего    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС + ВсегоСумма);
		ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС);
		ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R04G11", ИтогНДС + ВсегоСумма);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G11", ИтогНДС);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G11", СуммаВозвратнойТары);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
		    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G1", ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной);			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",	ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINSEL",	ЕДРПОУОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINBUY",	ЕДРПОУКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKS",		ИсточникКодаПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKB",		ИсточникКодаПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
 			
		КонецЕсли;
		
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			Если Шапка.РеквизитыНомерСтрокиННАктуальны Тогда 
				ОбластьМакета.Параметры.НомерСтроки = СтрокаТаблицы.НомерСтрокиНН;
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			Если СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодУслуги Тогда
				ОбластьМакета.Параметры.КодДКПП   = ОбластьМакета.Параметры.КодУКТВЭД;	
				ОбластьМакета.Параметры.КодУКТВЭД = "";
			ИначеЕсли СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодТовараИмпортированного Тогда
				ОбластьМакета.Параметры.Импортированный = "X";
			КонецЕсли;
			Если НЕ КодСпецРежима = "2" Тогда
			    ОбластьМакета.Параметры.КодСХ = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
			
			ОбластьМакета.Параметры.Сумма     = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
			РасчСуммаНДС6Зн = Окр(УчетНДСКлиентСервер.РассчитатьСуммуНДС(СтрокаТаблицы.Сумма, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС)), 6 );
			ФорматНДС6Зн = ?(Окр(РасчСуммаНДС6Зн,2) = РасчСуммаНДС6Зн, "ЧЦ=15; ЧДЦ=2; ЧН=' '", "ЧЦ=19; ЧДЦ=6; ЧН=' '");
			ОбластьМакета.Параметры.СуммаНДС6зн     = СокрЛ(Формат(РасчСуммаНДС6Зн, ФорматНДС6Зн));
			
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			    ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			ДанныеОСумме = СтрокаТаблицы.Сумма;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.Сумма = "";
				ОбластьМакета.Параметры.СуммаНДС6зн = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
					
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "грн";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
						
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				СтрокаСтруктуры.G32  		= ОбластьМакета.Параметры.Импортированный;
				СтрокаСтруктуры.G33  		= ОбластьМакета.Параметры.КодДКПП;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				СтрокаСтруктуры.G5 			= ОбластьМакета.Параметры.Количество;
				СтрокаСтруктуры.G6 			= ОбластьМакета.Параметры.ЦенаБезНДС;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				СтрокаСтруктуры.G011  		= ОбластьМакета.Параметры.КодСХ;
				СтрокаСтруктуры.G11_10  	= ОбластьМакета.Параметры.СуммаНДС6зн;
				СтрокаСтруктуры.ROWNUM		= ОбластьМакета.Параметры.НомерСтроки;
				
			КонецЕсли;
							
		КонецЦикла;
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла; 

	Если Объект.ПродажаНижеОбычнойЦены 
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки
		Тогда
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
			// все что мы напечатали по обычной НН не имеет смысла для этого вида операции
			// нужна только "вторая НН" как если бы это была не сводная накладная на превыешение базы над ценой продажи
			ТабДокумент.Очистить();	
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				Таблица = СтруктураПоказателей.НалоговыйДокумент.R.Скопировать();
				Таблица.Очистить();
				СтруктураПоказателей.НалоговыйДокумент.Очистить();
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R", Таблица);
				
				СтруктураПоказателйПечатнойФормы = СтруктураПоказателей.НалоговыйДокумент;	
			КонецЕсли;
		Иначе
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				СтруктураПоказателйПечатнойФормы = СтруктураПоказателей.НалоговыйДокументЗЦ;
			КонецЕсли;
		КонецЕсли;
		
		ТаблицаНоменклатуры = ТаблицаНоменклатурыКопия.Скопировать();
		
		//удалим лишние колонки
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.ЦенаБезНДС);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.Сумма);
		ТаблицаНоменклатуры.Колонки.Удалить(ТаблицаНоменклатуры.Колонки.СуммаНДС);
		
		// переименуем колонки
		ТаблицаНоменклатуры.Колонки.СуммаБезНДСПревышенияРегл.Имя 	 = "Сумма";
		ТаблицаНоменклатуры.Колонки.СуммаНДСПревышенияРегл.Имя		 = "СуммаНДС";

		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	    Для Страница = 1 По 1 Цикл
		
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			КодПризнакаСводнойНаПечать = "";
			Если НЕ (Шапка.КодПризнакаСводной = 0)Тогда 
				КодПризнакаСводнойНаПечать = Строка(Шапка.КодПризнакаСводной);
			ИначеЕсли (Шапка.Сводная = Истина) Тогда 
				Если (Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки) Тогда
					
					КодПризнакаСводнойНаПечать =  "3";
					  
				КонецЕсли;
			КонецЕсли;
			ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной = КодПризнакаСводнойНаПечать;
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации 
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
			
				ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
			
			КонецЕсли;			
			
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			
			ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены, "ЧЦ=2; ЧВН=");
			Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				ТипПричиныСтр = Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2; ЧВН=");
			КонецЕсли;
			
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Лев(ТипПричиныСтр, 1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Прав(ТипПричиныСтр, 1);
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);

			// Выводим отступ
			ОбластьМакета = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Выводим заголовок накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			
			//Дата
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
			КонецЦикла; 
			
			// Номер
			Для Инд = 1 По 7 Цикл
				Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
					ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
				Иначе
					ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомерОЦ, Инд, 1);
				КонецЕсли;
			КонецЦикла; 
			
			// код спец. режима
			ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
						
			// наименование продавца
			ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
			
			// ИНН продавца
			Для Инд = 1 По 12 Цикл
				ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// филиал
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла; 
			
			// ЕДРПОУ продавца
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["ЕДРПОУОрганизации_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
			КонецЦикла; 
			
			//источник кода продавца
			ОбластьМакета.Параметры.ИсточникКодаОрганизации = ИсточникКодаПродавца;
		
			// название покупателя = продавца
			
			ОбластьМакета.Параметры.НазваниеКонтрагента = НазваниеОрганизации;
			
			// ИНН покупателя
			Для Инд = 1 По 12 Цикл                                      
				ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННОрганизации, Инд, 1);
			КонецЦикла; 
			
			// Филиал = продавца
			Для Инд = 1 По 4 Цикл                                                                 
				ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
			КонецЦикла;
			
			// ЕДРПОУ покупателя
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["ЕДРПОУКонтрагента_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
			КонецЦикла; 

			//источник кода покупателя = коду продавца
			ОбластьМакета.Параметры.ИсточникКодаКонтрагента = ИсточникКодаПродавца;
			
			ТабДокумент.Вывести(ОбластьМакета);
 
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				
				СтруктураПоказателйПечатнойФормы.Вставить("R01G1", ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной);
				
				СтруктураПоказателйПечатнойФормы.Вставить("R03G10S",ОбластьМакетаЗаголовок.Параметры.Освобожденная);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
				СтруктураПоказателйПечатнойФормы.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HFILL",	Шапка.Дата);
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM",	Прав(ТекНомерОЦ,7));
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM1",	КодСпецРежима);
				СтруктураПоказателйПечатнойФормы.Вставить("HNUM2",	ФилиалПродавца);
				СтруктураПоказателйПечатнойФормы.Вставить("HFBUY",	ФилиалПродавца);
				
				СтруктураПоказателйПечатнойФормы.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HKSEL",		ИННОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HKBUY",		ИННОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HBOS",	ПечКтоВыписалНалоговуюНакладную);
				СтруктураПоказателйПечатнойФормы.Вставить("HKBOS",	ИННКтоВыписалНН);
				СтруктураПоказателйПечатнойФормы.Вставить("HTINSEL",	ЕДРПОУОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HTINBUY",	ЕДРПОУОрганизации);
				СтруктураПоказателйПечатнойФормы.Вставить("HKS",		ИсточникКодаПродавца);
				СтруктураПоказателйПечатнойФормы.Вставить("HKB",		ИсточникКодаПродавца);
 			
			КонецЕсли;
			
			// Выводим шапку накладной вместе с итогами
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			
			ВремТаблица = ТаблицаНоменклатуры.Скопировать();
			ВремТаблица.Свернуть("СтавкаНДС", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				
				КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
				
				Если КолонкаДляСуммы = "20" Тогда
					
					ОбластьМакета.Параметры.Сумма20   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					ОбластьМакета.Параметры.ИтогНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G7", СтрокаТаблицы.Сумма);
						СтруктураПоказателйПечатнойФормы.Вставить("R03G7", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "14" Тогда
					
					ОбластьМакета.Параметры.Сумма14   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					ОбластьМакета.Параметры.ИтогНДС14 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G14", СтрокаТаблицы.Сумма);
						СтруктураПоказателйПечатнойФормы.Вставить("R03G14", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "7" Тогда
					
					ОбластьМакета.Параметры.Сумма7   = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					ОбластьМакета.Параметры.ИтогНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.СуммаНДС, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G109", СтрокаТаблицы.Сумма);
						СтруктураПоказателйПечатнойФормы.Вставить("R03G109", СтрокаТаблицы.СуммаНДС);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "902" Тогда
					
					ОбластьМакета.Параметры.Сумма0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G8", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "901" Тогда
					
					ОбластьМакета.Параметры.Сумма0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G9", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				ИначеЕсли КолонкаДляСуммы = "903" Тогда
					
					ОбластьМакета.Параметры.СуммаБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
					
					Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
						СтруктураПоказателйПечатнойФормы.Вставить("R01G10", СтрокаТаблицы.Сумма);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ВсегоСумма = 0; ИтогНДС   = 0;
			ВремТаблица.Свернуть("", "Сумма, СуммаНДС");
			Для каждого СтрокаТаблицы из ВремТаблица Цикл
				ВсегоСумма = СтрокаТаблицы.Сумма;
				ИтогНДС    = СтрокаТаблицы.СуммаНДС;
			КонецЦикла;
			
			СуммаВозвратнойТары = 0;
			
			ОбластьМакета.Параметры.ИтогНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС);
			ОбластьМакета.Параметры.ВозвТара = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаВозвратнойТары);
			ОбластьМакета.Параметры.Всего    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				СтруктураПоказателйПечатнойФормы.Вставить("R04G11", ИтогНДС + ВсегоСумма + СуммаВозвратнойТары);
				СтруктураПоказателйПечатнойФормы.Вставить("R03G11", ИтогНДС);
				СтруктураПоказателйПечатнойФормы.Вставить("R02G11", СуммаВозвратнойТары);
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);			
			
			// Выводим табличную часть
			ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
			
			Если ЗначениеЗаполнено(КодСпецРежима) Тогда
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер) + "/" + СокрЛ(КодСпецРежима);
			Иначе
				ПолныйНомерОсновнойНакладной = СокрЛ(ТекНомер);	
			КонецЕсли;
			
			ДопТекст = Шапка.ТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены;
			ДопТекст = СтрЗаменить(ДопТекст,
								   "<визначається автоматично>",
								   ПолныйНомерОсновнойНакладной);
								   
			Если Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				ДопТекст = " (перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання)";	
			КонецЕсли;
			
			ТекущийНомерСтрокиНН = 0;			
			// Выведем на печать все строки таблицы в раздел I
			Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
				
				Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНДС = 0 Тогда
					Продолжить
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
				КонецЕсли;
				
				ОбластьМакета = Макет.ПолучитьОбласть("РазделI");
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
				
				Если    Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
				    ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.ИтоговаяРозницаОсвобожденныеОперации
					ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийНалоговаяНакладная.РозницаКонрагентуОсвобожденныеОперации Тогда
					Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
						ОбластьМакета.Параметры.КодЛьготы = "99999999";
					КонецЕсли;
				Иначе
					ОбластьМакета.Параметры.КодЛьготы = "";	
				КонецЕсли;
				
				Если Шапка.РеквизитыНомерСтрокиННАктуальны Тогда 
					ТекущийНомерСтрокиНН = ТекущийНомерСтрокиНН + 1;			
					ОбластьМакета.Параметры.НомерСтроки = ТекущийНомерСтрокиНН;
				КонецЕсли;
				
				// п 16. 9) не заполняются данные по номенклатуре:
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
				ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
																 +" "+ ДопТекст;
				Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				    ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції"
														  +" "+ ДопТекст;
				КонецЕсли;
				
				// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
				ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС, ВалютаДокумента, КонтрагентНеРезидент, Объект.Дата));
				
				ОбластьМакета.Параметры.Сумма     = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.Сумма, ,"0,00");
				ОбластьМакета.Параметры["ЦенаБезНДС"] = Окр(?(СтрокаТаблицы.Количество = 0, 0, СтрокаТаблицы.Сумма / СтрокаТаблицы.Количество), 2);
				РасчСуммаНДС6Зн = Окр(УчетНДСКлиентСервер.РассчитатьСуммуНДС(СтрокаТаблицы.Сумма, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС)), 6 );
				ФорматНДС6Зн = ?(Окр(РасчСуммаНДС6Зн,2) = РасчСуммаНДС6Зн, "ЧЦ=15; ЧДЦ=2; ЧН=' '", "ЧЦ=19; ЧДЦ=6; ЧН=' '");
				ОбластьМакета.Параметры.СуммаНДС6зн     = СокрЛ(Формат(РасчСуммаНДС6Зн,ФорматНДС6Зн));
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					
					СтрокаСтруктуры = СтруктураПоказателйПечатнойФормы.R.Добавить();
					СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
					
					СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
					СтрокаСтруктуры.G32  = ОбластьМакета.Параметры.Импортированный;
					СтрокаСтруктуры.G33  = ОбластьМакета.Параметры.КодДКПП;
					
					СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
					СтрокаСтруктуры.G105_2S = ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
					
					СтрокаСтруктуры.G5  = ОбластьМакета.Параметры.Количество;
					СтрокаСтруктуры.G6  = ОбластьМакета.Параметры.ЦенаБезНДС;
					
					СтрокаСтруктуры.G008  = ОбластьМакета.Параметры.КодСтавки;
					СтрокаСтруктуры.G010  = СтрокаТаблицы.Сумма;
					СтрокаСтруктуры.G011  = ОбластьМакета.Параметры.КодСХ;
					СтрокаСтруктуры.G11_10  		= ОбластьМакета.Параметры.СуммаНДС6зн;
					СтрокаСтруктуры.ROWNUM		= ОбластьМакета.Параметры.НомерСтроки;
					
				КонецЕсли;
				
			КонецЦикла;
		
			// Выводим подвал накладной
			ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
			
			ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
			
			// ДРФО того, кто выписал НН
			Для Инд = 1 По 10 Цикл
				ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
			КонецЦикла;	
			
			ТабДокумент.Вывести(ОбластьМакета);

		КонецЦикла; 
		
	КонецЕсли;	
	
	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;
	
КонецФункции 

Функция ОпределитьКодСтавки(ИмяКолонки)

	Если ИмяКолонки = "0Эксп" Тогда
		Возврат "901";	
	ИначеЕсли ИмяКолонки = "0Укр" Тогда
		Возврат "902";		
	ИначеЕсли ИмяКолонки = "БезНДС" Тогда
		Возврат "903";		
	ИначеЕсли ИмяКолонки = "7" Тогда
		Возврат "7";	
	ИначеЕсли ИмяКолонки = "14" Тогда
		Возврат "14";	
	Иначе
		Возврат "20";	
	КонецЕсли;	

КонецФункции // ОпределитьКодСтавки()

// Функция по СтавкеНДС определяет суффикс имени параметра табличного документа:
// фактически колонкку таблицы налоговой накладной 20%, 0%... где должна отображаться соответствующая сумма
//
Функция ОпределитьКолонкуТаблицы(СтавкаНДС=Неопределено, ВалютаДокумента, КонтрагентНеРезидент, Дата)
	
	Если СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
		Если ВалютаДокумента = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета()
			// если это поставка на экспорт в гривнях - определим это по признаку нерезидентности контрагента
			ИЛИ НЕ КонтрагентНеРезидент = Истина 
			Тогда
			Возврат "0Укр";
		Иначе
			Возврат "0Эксп";
		КонецЕсли;
	ИначеЕсли  СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
		Возврат "БезНДС";
	ИначеЕсли  СтавкаНДС = Перечисления.СтавкиНДС.НДС7 Тогда
		Если НалоговыйУчетПовтИсп.ДатаНачалаИспользованияФормыННПоЛекарствам() <= Дата  Тогда
			Возврат "7";	
		Иначе	
			Возврат "0Укр";	
		КонецЕсли;
	ИначеЕсли  СтавкаНДС = Перечисления.СтавкиНДС.НДС14 Тогда
		Возврат "14";
	Иначе
		Возврат "20";	
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

Функция КодИсточникаНалоговогоНомера(ЗНАЧ НалоговыйНомер, ПлательщикЮрлицо) Экспорт
	
	НалоговыйНомер = СокрЛП(НалоговыйНомер);
	ДлинаНомера = СтрДлина(НалоговыйНомер);
	
	Результат = "";
	
	Если ДлинаНомера > 0 Тогда
		
		Если ПлательщикЮрлицо Тогда
			
			Если ДлинаНомера = 9 Тогда
				//спецплательщик
				Результат = 3;
			ИначеЕсли ДлинаНомера = 8 Тогда
				//ЕДРПОУ
				Результат = 1;
			КонецЕсли;
			
		Иначе
			
			Если ДлинаНомера = 10 Тогда
				//ДРФО
				Результат = 2;
			Иначе
				//паспорт
				Результат = 4;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
