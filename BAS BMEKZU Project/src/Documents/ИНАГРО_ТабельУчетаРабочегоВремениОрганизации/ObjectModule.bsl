#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИНАГРО_ПроведениеРасчетов.СформироватьКраткийСоставСотрудников(ЭтотОбъект, "ОтработанноеВремя");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Заголовок = ОбщегоНазначенияБПВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		// Надо позвать проверку заполнения реквизитов шапки
		ПроверкаПравомерностиЗаписиПоПодразделению(Отказ);
		ПроверкаУникальностиЗаписи(Отказ);
		
		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда
			
			Если ВыборкаПоШапкеДокумента.СпособВводаДанных = Перечисления.ИНАГРО_СпособыВводаДанныхОВремени.ВЦеломЗаПериод Тогда
				// Данные введены в целом за период.
				////////////////////////////////////////////////////////////////////////
				// Отработанное время в целом за период
				
				// получим реквизиты табличной части
				ВыборкаПоОтработанноеВремяВЦеломЗаПериод = СформироватьЗапросПоОтработанноеВремяВЦеломЗаПериод(ВыборкаПоШапкеДокумента).Выбрать();
				
				Пока ВыборкаПоОтработанноеВремяВЦеломЗаПериод.Следующий() Цикл
					
					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуРабочееВремяРаботниковОрганизацийВЦеломЗаПериод(ВыборкаПоОтработанноеВремяВЦеломЗаПериод, ВыборкаПоШапкеДокумента);
				КонецЦикла;
			Иначе
				// Данные введены с разбивкой по дням.
				////////////////////////////////////////////////////////////////////////
				// Отработанное время
				
				// получим реквизиты табличной части
				ВыборкаПоОтработанноеВремя = СформироватьЗапросПоОтработанноеВремя(ВыборкаПоШапкеДокумента).Выбрать();
				
				ПроведениеСУдалениемГрафикиРаботыПоВидамВремени(ВыборкаПоШапкеДокумента, ВыборкаПоОтработанноеВремя, Заголовок);
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ОбработкаУдаленияПроведения(Отказ)
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
		
КонецПроцедуры

#КонецОбласти

#Область Проведение

// Формирует запрос по шапке документа
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	Результат запроса
//
Функция СформироватьЗапросПоШапке()
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			Ссылка);
	Запрос.УстановитьПараметр("парамПустаяОрганизация",	Справочники.Организации.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизации.Дата,
	|	ТабельУчетаРабочегоВремениОрганизации.ПериодРегистрации,
	|	ТабельУчетаРабочегоВремениОрганизации.СпособВводаДанных,
	|	ВЫБОР
	|		КОГДА ТабельУчетаРабочегоВремениОрганизации.Организация.ГоловнаяОрганизация = &парамПустаяОрганизация
	|			ТОГДА ТабельУчетаРабочегоВремениОрганизации.Организация
	|		ИНАЧЕ ТабельУчетаРабочегоВремениОрганизации.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ТабельУчетаРабочегоВремениОрганизации.Ссылка КАК Документ,
	|	ТабельУчетаРабочегоВремениОрганизации.ДатаНачалаПериода,
	|	ТабельУчетаРабочегоВремениОрганизации.ДатаОкончанияПериода
	|ИЗ
	|	Документ.ИНАГРО_ТабельУчетаРабочегоВремениОрганизации КАК ТабельУчетаРабочегоВремениОрганизации
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизации.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "ОтработанноеВремя" документа
//
// Параметры:
//	ВыборкаПоШапкеДокумента
//
// Возвращаемое значение:
//	Результат запроса.
//
Функция СформироватьЗапросПоОтработанноеВремя(ВыборкаПоШапкеДокумента)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДокументСсылка",			Ссылка);
	Запрос.УстановитьПараметр("ПустойВидВремени",		Справочники.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ПустаяСсылка());
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("НачПериода",				ДатаНачалаПериода);
	Запрос.УстановитьПараметр("конПериода",				КонецДня(ДатаОкончанияПериода));
	                                                    
	ТекстЗапроса = "ВЫБРАТЬ                             
	|	подневные.Сотрудник КАК Сотрудник,
	|	подневные.Назначение КАК Назначение,
	|	подневные.НачалоПериода КАК НачалоПериода,
	|	подневные.КонецПериода КАК КонецПериода,
	|	подневные.ВидВремени,
	|	подневные.Часов,
	|	подневные.День КАК День,
	|	подневные.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ЗарегистрированоеВремя.НеПроводить, ЛОЖЬ) КАК НеПроводить
	|ИЗ(";
	Для ИндексДня = День(ДатаНачалаПериода) По День(ДатаОкончанияПериода) Цикл
		СтрИндексДня = Строка(ИндексДня);
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ   РАЗЛИЧНЫЕ
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.НомерСтроки КАК НомерСтроки,		
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник КАК Сотрудник,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Назначение КАК Назначение,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.НачалоПериода КАК НачалоПериода,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.КонецПериода КАК КонецПериода,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ПервыйВидВремени"+СтрИндексДня+" КАК ВидВремени,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ПервыйЧасов"+СтрИндексДня+" КАК Часов,
		|		"+СтрИндексДня+" КАК День
		|	ИЗ
		|		Документ.ИНАГРО_ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
		|	ГДЕ
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.НомерСтроки КАК НомерСтроки,		
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Назначение,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.НачалоПериода,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.КонецПериода,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ВторойВидВремени"+СтрИндексДня+",
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ВторойЧасов"+СтрИндексДня+",
		|		"+СтрИндексДня+"
		|	ИЗ
		|		Документ.ИНАГРО_ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
		|	ГДЕ
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
		|		И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ВторойВидВремени"+СтрИндексДня+"  <> &ПустойВидВремени)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.НомерСтроки КАК НомерСтроки,		
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Назначение,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.НачалоПериода,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.КонецПериода,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ТретийВидВремени"+СтрИндексДня+",
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ТретийЧасов"+СтрИндексДня+",
		|		"+СтрИндексДня+"
		|	ИЗ
		|		Документ.ИНАГРО_ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
		|	ГДЕ
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
		|		И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ТретийВидВремени"+СтрИндексДня+"  <> &ПустойВидВремени)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.НомерСтроки КАК НомерСтроки,		
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Назначение,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.НачалоПериода,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.КонецПериода,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ЧетвертыйВидВремени"+СтрИндексДня+",
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ЧетвертыйЧасов"+СтрИндексДня+",
		|		"+СтрИндексДня+"
		|	ИЗ
		|		Документ.ИНАГРО_ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
		|	ГДЕ
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
		|		И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ЧетвертыйВидВремени"+СтрИндексДня+"  <> &ПустойВидВремени)
		|	"+?(ИндексДня < День(ДатаОкончанияПериода),"ОБЪЕДИНИТЬ ВСЕ ","");
		
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + ") КАК подневные
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		ИНАГРО_РабочееВремяРаботниковОрганизаций.Активность КАК НеПроводить,
	|		ИНАГРО_РабочееВремяРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	|		ИНАГРО_РабочееВремяРаботниковОрганизаций.Период КАК Период
	|	ИЗ
	|		РегистрНакопления.ИНАГРО_РабочееВремяРаботниковОрганизаций КАК ИНАГРО_РабочееВремяРаботниковОрганизаций
	|	ГДЕ
	|		(НЕ ИНАГРО_РабочееВремяРаботниковОрганизаций.ВЦеломЗаПериод)
	|		И ИНАГРО_РабочееВремяРаботниковОрганизаций.Организация = &ГоловнаяОрганизация
	|		И ИНАГРО_РабочееВремяРаботниковОрганизаций.Период МЕЖДУ &НачПериода И &конПериода
	|		И ИНАГРО_РабочееВремяРаботниковОрганизаций.Регистратор <> &ДокументСсылка) КАК ЗарегистрированоеВремя
	|	ПО подневные.Сотрудник = ЗарегистрированоеВремя.Сотрудник
	|		И (подневные.День = ДЕНЬ(ЗарегистрированоеВремя.Период))
	|ГДЕ
	|	подневные.День <= ВЫБОР
	|		КОГДА подневные.КонецПериода = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА 31
	|		ИНАЧЕ ДЕНЬ(подневные.КонецПериода)
	|	КОНЕЦ
	|И подневные.День >= ВЫБОР
	|		КОГДА подневные.НачалоПериода = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА 1
	|		ИНАЧЕ ДЕНЬ(подневные.НачалоПериода)
	|	КОНЕЦ
	|
	|	УПОРЯДОЧИТЬ ПО
	|		Сотрудник, День";
	Запрос.Текст = ТекстЗапроса;
	Возврат Запрос.Выполнить();
	
КонецФункции // СформирвоатьЗапросПоОтработанноеВремя()

// Формирует запрос по таблице "ОтработанноеВремяВЦеломЗаПериод" документа
//
// Параметры:
//	ВыборкаПоШапкеДокумента
//
// Возвращаемое значение:
//	Результат запроса.
//
Функция СформироватьЗапросПоОтработанноеВремяВЦеломЗаПериод(ВыборкаПоШапкеДокумента)
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("НачПериода",				НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации));
	Запрос.УстановитьПараметр("КонПериода",				КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации));
	Запрос.УстановитьПараметр("ПустаяСсылкаКлассификатор",Справочники.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустоеПодразделение", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтработанноеВремя.Сотрудник,
	|	ОтработанноеВремя.Назначение,
	|	ОтработанноеВремя.ВидИспользованияРабочегоВремени КАК ВидИспользованияРабочегоВремени,
	|	СУММА(ОтработанноеВремя.Дней) КАК Дней,
	|	СУММА(ОтработанноеВремя.Часов) КАК Часов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник КАК Сотрудник,
	|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Назначение КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Работа) КАК ВидИспользованияРабочегоВремени,
	|		0 КАК Дней,
	|		0 КАК Часов
	|	ИЗ
	|		Документ.ИНАГРО_ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|	ГДЕ
	|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|		И НЕ(ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ВидВремени = &ПустаяСсылкаКлассификатор
	|					ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка ЕСТЬ NULL)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Назначение,
	|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ВидВремени,
	|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней - ВЫБОР
	|			КОГДА ЗаегистрированоеВремя.ПодразделениеОрганизации = &ПустоеПодразделение
	|				ТОГДА ЕСТЬNULL(ЗаегистрированоеВремя.Дней, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов - ВЫБОР
	|			КОГДА ЗаегистрированоеВремя.ПодразделениеОрганизации = &ПустоеПодразделение
	|				ТОГДА ЕСТЬNULL(ЗаегистрированоеВремя.Часов, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ИНАГРО_ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ИНАГРО_РабочееВремяРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	|				ИНАГРО_РабочееВремяРаботниковОрганизаций.Назначение КАК Назначение,
	|				ИНАГРО_РабочееВремяРаботниковОрганизаций.Регистратор.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|				СУММА(ИНАГРО_РабочееВремяРаботниковОрганизаций.Дней) КАК Дней,
	|				СУММА(ИНАГРО_РабочееВремяРаботниковОрганизаций.Часов) КАК Часов,
	|				ИНАГРО_РабочееВремяРаботниковОрганизаций.ВидИспользованияРабочегоВремени КАК ВидИспользованияРабочегоВремени
	|			ИЗ
	|				РегистрНакопления.ИНАГРО_РабочееВремяРаботниковОрганизаций КАК ИНАГРО_РабочееВремяРаботниковОрганизаций
	|			ГДЕ
	|				ИНАГРО_РабочееВремяРаботниковОрганизаций.Организация = &ГоловнаяОрганизация
	|				И ИНАГРО_РабочееВремяРаботниковОрганизаций.Регистратор <> &ДокументСсылка
	|				И ИНАГРО_РабочееВремяРаботниковОрганизаций.Период МЕЖДУ &НачПериода И &КонПериода
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ИНАГРО_РабочееВремяРаботниковОрганизаций.Сотрудник,
	|				ИНАГРО_РабочееВремяРаботниковОрганизаций.Назначение,
	|				ИНАГРО_РабочееВремяРаботниковОрганизаций.Регистратор.ПодразделениеОрганизации,
	|				ИНАГРО_РабочееВремяРаботниковОрганизаций.ВидИспользованияРабочегоВремени) КАК ЗаегистрированоеВремя
	|			ПО ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник = ЗаегистрированоеВремя.Сотрудник
	|				И ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Назначение = ЗаегистрированоеВремя.Назначение
	|				И ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ВидВремени = ЗаегистрированоеВремя.ВидИспользованияРабочегоВремени
	|	ГДЕ
	|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|		И НЕ(ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ВидВремени = &ПустаяСсылкаКлассификатор
	|					ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка ЕСТЬ NULL)) КАК ОтработанноеВремя
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтработанноеВремя.Назначение,
	|	ОтработанноеВремя.ВидИспользованияРабочегоВремени,
	|	ОтработанноеВремя.Сотрудник";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоОтработанноеВремяВЦеломЗаПериод()

// По строке выборок из результатов запроса по документу формируем движения по регистрам.
//
// Параметры:
//	ВыборкаПоСтрокамДокумента				- спозиционированная на определеной строке выборка 
//											  из результата запроса к ТЧ документа, 
//	НаборЗаписей							- набор записей для РабочееВремяРаботниковОрганизаций. 
//
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуРабочееВремяРаботниковОрганизацийВЦеломЗаПериод(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента)
	
	Движения.ИНАГРО_РабочееВремяРаботниковОрганизаций.Записывать = Истина;	
	Движение = Движения.ИНАГРО_РабочееВремяРаботниковОрганизаций.Добавить();
	
	// Свойства
	Движение.Период								= ВыборкаПоШапкеДокумента.ПериодРегистрации;
	
	// Измерения
	Движение.Сотрудник							= ВыборкаПоСтрокамДокумента.Сотрудник;
	Движение.Назначение							= ВыборкаПоСтрокамДокумента.Назначение;
	Движение.Организация						= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.ВидИспользованияРабочеговремени	= ВыборкаПоСтрокамДокумента.ВидИспользованияРабочегоВремени;
	
	// Ресурсы
	Движение.Дней								= ВыборкаПоСтрокамДокумента.Дней;
	Движение.Часов								= ВыборкаПоСтрокамДокумента.Часов;
	
	// Реквизиты
	Движение.ВЦеломЗаПериод						= Истина;
	
КонецПроцедуры // ДобавитьСтрокуРабочееВремяРаботниковОрганизацийВЦеломЗаПериод()

// По строке выборок из результатов запроса по документу формируем движения по регистрам.
//
// Параметры:
//	ВыборкаПоСтрокамДокумента				- спозиционированная на определеной строке выборка 
//											  из результата запроса к ТЧ документа, 
//	НаборЗаписей							- набор записей для РабочееВремяРаботниковОрганизаций. 
//
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуРабочееВремяРаботниковОрганизацийПоДням(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента)
	
	Движения.ИНАГРО_РабочееВремяРаботниковОрганизаций.Записывать = Истина;	
	Движение = Движения.ИНАГРО_РабочееВремяРаботниковОрганизаций.Добавить();
	
	// Свойства
	Движение.Период			= Дата(Год(ВыборкаПоШапкеДокумента.ПериодРегистрации), Месяц(ВыборкаПоШапкеДокумента.ПериодРегистрации), ВыборкаПоСтрокамДокумента.День);
	
	// Измерения
	Движение.Сотрудник		= ВыборкаПоСтрокамДокумента.Сотрудник;
	Движение.Назначение		= ВыборкаПоСтрокамДокумента.Назначение;
	Движение.Организация	= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.ВидИспользованияРабочегоВремени	= ВыборкаПоСтрокамДокумента.ВидВремени;
	
	// Ресурсы
	Движение.Дней			= ?(ВыборкаПоСтрокамДокумента.Часов = 0, 0, 1);
	Движение.Часов			= ВыборкаПоСтрокамДокумента.Часов;
	
	// Реквизиты
	Движение.ВЦеломЗаПериод	= Ложь;
	
КонецПроцедуры // ДобавитьСтрокуРабочееВремяРаботниковОрганизацийПоДням()

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции	

// Функция предназначена для автозаполнения документа
// если заполнен параметр сотрудники, то в табличную часть будут добавлены
// строки по данным сотрудникам.
Функция Автозаполнение(Форма, ПостроительЗапроса = Неопределено, Сотрудники = Неопределено, ТекущаяСтрока = Неопределено) Экспорт
	
	УсловиеПодразделение 	= "";
	УсловиеПоРаботникам 	= "";
	УсловиеНаОрганизации 	= "";
	ОтборПодразделения 		= Ложь;
	
	Если Сотрудники = Неопределено Тогда
		ОтработанноеВремя.Очистить();
		ОтработанноеВремяВЦеломЗаПериод.Очистить();
		КолонкиСводногоТабеля.Очистить();
		УсловиеНаОрганизации = " Организация = &Организация";
	Иначе
		УсловиеПоРаботникам	= " Сотрудник В (&Сотрудники)";

	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
	    ОтборПодразделения = Истина;
		УсловиеПодразделение = " (ДолжностиРаботников.ПодразделениеОрганизации = &ПодразделениеОрганизации ИЛИ ДолжностиРаботниковНач.ПодразделениеОрганизации = &ПодразделениеОрганизации)";
	КонецЕсли;
	
	ЗапросТабель = Новый Запрос();
	
	ЗапросТабель.УстановитьПараметр("Сотрудники",Сотрудники);
	ЗапросТабель.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	ЗапросТабель.УстановитьПараметр("Праздник",	Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник);
	ЗапросТабель.УстановитьПараметр("Месяц", НачалоМесяца(ПериодРегистрации));
	ЗапросТабель.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДатаНачалаПериода));
	ЗапросТабель.УстановитьПараметр("КонецПериода", КонецМесяца(ДатаОкончанияПериода));
	
	ЗапросТабель.УстановитьПараметр("Организация", Организация);  
	ЗапросТабель.УстановитьПараметр("ПодразделениеОрганизации", ПодразделениеОрганизации); 
	ЗапросТабель.УстановитьПараметр("ПустойКлассификатор", Справочники.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ПустаяСсылка());

			
	ЗапросТабель.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Запрос сотрудников
	ЗапросТабель.Текст = "ВЫБРАТЬ  РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ 
		 |	РаботникиОрганизаций.Сотрудник КАК Назначение,
		 |	ВЫБОР КОГДА РаботникиОрганизаций.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) 
		 |		ТОГДА РаботникиОрганизаций.Сотрудник
		 |		ИНАЧЕ РаботникиОрганизаций.Сотрудник.ОсновноеНазначение
		 |	КОНЕЦ КАК Сотрудник,
		 |	ДолжностиРаботников.Организация КАК Организация,
		 |		" +?(ОтборПодразделения,"ВЫБОР КОГДА ДолжностиРаботников.ПодразделениеОрганизации = &ПодразделениеОрганизации ТОГДА ДолжностиРаботников.ПодразделениеОрганизации ИНАЧЕ ДолжностиРаботниковНач.ПодразделениеОрганизации КОНЕЦ КАК ПодразделениеОрганизации,","ДолжностиРаботников.ПодразделениеОрганизации,")+"
		 |	ДолжностиРаботников.Должность
		 |ПОМЕСТИТЬ ВТСотрудники
		 |ИЗ
		 |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		 |		РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
		 |		РаботникиОрганизацийСрезПоследних.Организация КАК Организация,
		 |		РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
		 |	ИЗ
		 |		РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&НачалоПериода, " + ?(ПустаяСтрока(УсловиеПоРаботникам),УсловиеНаОрганизации,УсловиеПоРаботникам) + ") КАК РаботникиОрганизацийСрезПоследних
		 |	ГДЕ
		 |		РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		 |	
		 |	ОБЪЕДИНИТЬ 
		 |	
		 |	ВЫБРАТЬ
		 |		РаботникиОрганизаций.Сотрудник,
		 |		РаботникиОрганизаций.Организация,
		 |		РаботникиОрганизаций.ПодразделениеОрганизации
		 |	ИЗ
		 |		РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК РаботникиОрганизаций
		 |	ГДЕ
		 |		РаботникиОрганизаций.Период > &НачалоПериода
		 |		И РаботникиОрганизаций.Период < &КонецПериода
		 |		" + ?(ПустаяСтрока(УсловиеПоРаботникам),?(ПустаяСтрока(УсловиеНаОрганизации), "", " И " + УсловиеНаОрганизации), " И " + УсловиеПоРаботникам) + "
	 	 |		И РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК РаботникиОрганизаций
	 	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&КонецПериода, " + ?(ПустаяСтрока(УсловиеПоРаботникам),УсловиеНаОрганизации,УсловиеПоРаботникам) + ") Как ДолжностиРаботников
		 |		ПО ДолжностиРаботников.Сотрудник = РаботникиОрганизаций.Сотрудник
		 |		" +?(ОтборПодразделения,"ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&НачалоПериода," + ?(ПустаяСтрока(УсловиеПоРаботникам),УсловиеНаОрганизации,УсловиеПоРаботникам) + ") КАК ДолжностиРаботниковНач ПО ДолжностиРаботников.Сотрудник = РаботникиОрганизаций.Сотрудник ","")+"
		 |ГДЕ
		 |	ИСТИНА 
		 |	" +?(ОтборПодразделения," И РаботникиОрганизаций.ПодразделениеОрганизации = &ПодразделениеОрганизации И " + УсловиеПодразделение,"")+"
		 |ИНДЕКСИРОВАТЬ ПО
		 |	РаботникиОрганизаций.Сотрудник";
	
	ЗапросТабель.Выполнить();
					
	ЗапросТабель.Текст = "ВЫБРАТЬ
         |	Работники.Сотрудник КАК Назначение,
         |	ВЫБОР
         |		КОГДА Работники.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
         |			ТОГДА Работники.Сотрудник
         |		ИНАЧЕ Работники.Сотрудник.ОсновноеНазначение
         |	КОНЕЦ КАК Сотрудник,
         |	Работники.Период,
         |	Работники.ГрафикРаботы,
         |	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодЗавершения,
         |	NULL КАК ГрафикРаботыЗавершения,
         |	Работники.ПодразделениеОрганизации
         |ПОМЕСТИТЬ ВТГрафикиРаботниковСрез
         |ИЗ
         |	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(
         |			&НачалоПериода,
         |			Сотрудник В
         |					(ВЫБРАТЬ
         |						ВТСотрудники.Назначение
         |					ИЗ
         |						ВТСотрудники)
         |				И Организация = &Организация) КАК Работники
         |
         |ИНДЕКСИРОВАТЬ ПО
         |	Назначение,
         |	Работники.Период";
	ЗапросТабель.Выполнить();
		
	ЗапросТабель.Текст = "ВЫБРАТЬ
         |	Работники.Сотрудник КАК Сотрудник,
         |	Работники.Назначение КАК Назначение,
         |	&НачалоПериода КАК Период,
         |	ВЫБОР
         |		КОГДА Работники.ПериодЗавершения <= &НачалоПериода
         |				И Работники.ПериодЗавершения > &НачалоПериода
         |			ТОГДА Работники.ГрафикРаботыЗавершения
         |		ИНАЧЕ Работники.ГрафикРаботы
         |	КОНЕЦ КАК ГрафикРаботы,
         |	Работники.ПодразделениеОрганизации КАК ПодразделениеОрганизации
         |ПОМЕСТИТЬ ВТГрафикиРаботников
         |ИЗ
         |	ВТГрафикиРаботниковСрез КАК Работники
         |
         |ОБЪЕДИНИТЬ ВСЕ
         |
         |ВЫБРАТЬ
         |	ВЫБОР
         |		КОГДА РаботникиОрганизаций.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
         |			ТОГДА РаботникиОрганизаций.Сотрудник
         |		ИНАЧЕ РаботникиОрганизаций.Сотрудник.ОсновноеНазначение
         |	КОНЕЦ,
         |	РаботникиОрганизаций.Сотрудник,
         |	РаботникиОрганизаций.Период,
         |	РаботникиОрганизаций.ГрафикРаботы,
         |	РаботникиОрганизаций.ПодразделениеОрганизации
         |ИЗ
         |	РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК РаботникиОрганизаций
         |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК ВТСотрудники
         |		ПО РаботникиОрганизаций.Сотрудник = ВТСотрудники.Назначение
         |ГДЕ
         |	РаботникиОрганизаций.Период > &НачалоПериода
         |	И РаботникиОрганизаций.Период <= &КонецПериода
         |
         |ИНДЕКСИРОВАТЬ ПО
         |	Сотрудник,
         |	Назначение,
         |	Период";
	ЗапросТабель.Выполнить();
				
	ЗапросТабель.Текст = "ВЫБРАТЬ
         |	Основной.Сотрудник,
         |	Основной.ГрафикРаботы,
         |	Основной.Период КАК ПериодНачало,
         |	ВЫБОР
         |		КОГДА МИНИМУМ(Вспомогательный.Период) ЕСТЬ NULL
         |			ТОГДА &КонецПериода
         |		ИНАЧЕ ДОБАВИТЬКДАТЕ(МИНИМУМ(Вспомогательный.Период), СЕКУНДА, -1)
         |	КОНЕЦ КАК ПериодКонец,
         |	Основной.Назначение КАК Назначение,
         |	Основной.ПодразделениеОрганизации
		 |ПОМЕСТИТЬ ВТГрафикиПоПериодам
         |ИЗ
         |	ВТГрафикиРаботников КАК Основной
         |		ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиРаботников КАК Вспомогательный
         |		ПО (Вспомогательный.Сотрудник = Основной.Сотрудник)
         |			И (Вспомогательный.Период > Основной.Период)
         |			И Основной.Назначение = Вспомогательный.Назначение
         |
         |СГРУППИРОВАТЬ ПО
         |	Основной.Сотрудник,
         |	Основной.ГрафикРаботы,
         |	Основной.Период,
         |	Основной.Назначение,
         |	Основной.ПодразделениеОрганизации
		 |
		 |ИНДЕКСИРОВАТЬ ПО
		 |	Основной.Сотрудник,
		 |	Назначение,
		 |	Основной.Период";
	ЗапросТабель.Выполнить();
	
	ЗапросТабель.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
         |	СостояниеРаботников.Сотрудник КАК Сотрудник,
         |	СостояниеРаботников.Период КАК Период,
         |	СостояниеРаботников.Состояние
         |ПОМЕСТИТЬ ВТСостояниеРаботниковСрез
         |ИЗ
         |	РегистрСведений.ИНАГРО_СостояниеРаботниковОрганизаций.СрезПоследних(
         |			&НачалоПериода, Сотрудник В
         |				(&Сотрудники)) КАК СостояниеРаботников
         |
         |ИНДЕКСИРОВАТЬ ПО
         |	Сотрудник,
         |	Период";
	ЗапросТабель.Выполнить();
	ЗапросТабель.Текст = "ВЫБРАТЬ * Из ВТСостояниеРаботниковСрез"; 
	
	ЗапросТабель.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостояниеРаботников.Сотрудник КАК Сотрудник,
	|	НАЧАЛОПЕРИОДА(СостояниеРаботников.Период, ДЕНЬ) КАК ПериодГруппа,
	|	МАКСИМУМ(СостояниеРаботников.Период) КАК Период
	|ПОМЕСТИТЬ ВТСостояниеРаботниковПериоды
	|ИЗ
	|	РегистрСведений.ИНАГРО_СостояниеРаботниковОрганизаций КАК СостояниеРаботников
	|ГДЕ
	|	СостояниеРаботников.Период > &НачалоПериода
	|	И СостояниеРаботников.Период <= &КонецПериода
	|	И СостояниеРаботников.Сотрудник В(&Сотрудники)
	|
	|СГРУППИРОВАТЬ ПО
	|	СостояниеРаботников.Сотрудник,
	|	НАЧАЛОПЕРИОДА(СостояниеРаботников.Период, ДЕНЬ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПериодГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостояниеРаботников.Сотрудник КАК Сотрудник,
	|	&НачалоПериода КАК Период,
	|	СостояниеРаботников.Состояние КАК Состояние
	|ПОМЕСТИТЬ ВТСостояниеРаботниковПред
	|ИЗ
	|	ВТСостояниеРаботниковСрез КАК СостояниеРаботников
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СостояниеРаботников.Сотрудник,
	|	СостояниеРаботников.Период,
	|	СостояниеРаботников.Состояние
	|ИЗ
	|	РегистрСведений.ИНАГРО_СостояниеРаботниковОрганизаций КАК СостояниеРаботников
	|ГДЕ
	|	СостояниеРаботников.Период > &НачалоПериода
	|	И СостояниеРаботников.Период <= &КонецПериода
	|	И СостояниеРаботников.Сотрудник В(&Сотрудники)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСостояниеРаботников.Сотрудник КАК Сотрудник,
	|	НАЧАЛОПЕРИОДА(ВТСостояниеРаботников.Период, ДЕНЬ) КАК Период,
	|	ВТСостояниеРаботников.Состояние КАК Состояние
	|ПОМЕСТИТЬ ВТСостояниеРаботников
	|ИЗ
	|	ВТСостояниеРаботниковПред КАК ВТСостояниеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСостояниеРаботниковПериоды КАК ВТСостояниеРаботниковПериоды
	|		ПО ВТСостояниеРаботников.Сотрудник = ВТСостояниеРаботниковПериоды.Сотрудник
	|			И ВТСостояниеРаботников.Период = ВТСостояниеРаботниковПериоды.Период";
	ЗапросТабель.Выполнить();
	ЗапросТабель.Текст = "ВЫБРАТЬ * Из ВТСостояниеРаботников";
	
	ЗапросТабель.Текст = "ВЫБРАТЬ
         |	Основной.Сотрудник КАК Сотрудник,
		 |	ВЫБОР
	     |		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.Заболевание)
		 |			ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Болезнь)
	     |		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.Командировка)
	     |			ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Командировка)
	     |		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускЕжегодный)
	     |			ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОсновнойОтпуск)
	     |		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускУчебныйОплачиваемый)
	     |			ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучение)
	     |		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый)
	     |			ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучениеНеоплачиваемый)
	     |		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускБезСохраненияЗарплаты)
	     |			ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоРазрешениюРаботодателя)
	     |		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам)
	     |			ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам)
	     |		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенкомДо3Лет)
	     |			ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам)
	     |		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтсутствуетПоНевыясненнойПричине)
	     |			ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.НеявкиПоНевыясненнымПричинам)
	     |		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ПриостановкаТрудовогоДоговора)
	     |			ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Простой)   
	     |		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.Прогулы)
	     |			ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Прогул)
		 |		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.Мобилизован)
		 |			ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.НеотработанноеВремяПоЗаконодательству)
	     |	КОНЕЦ КАК ВидВремени,
         |	Основной.Период КАК ПериодНачало,
         |	ВЫБОР
         |		КОГДА МИНИМУМ(Вспомогательный.Период) ЕСТЬ NULL 
         |			ТОГДА &КонецПериода
         |		ИНАЧЕ ДОБАВИТЬКДАТЕ(МИНИМУМ(Вспомогательный.Период), СЕКУНДА, -1)
         |	КОНЕЦ КАК ПериодКонец
		 |ПОМЕСТИТЬ ВТСостояниеСотрудников
         |ИЗ
         |	ВТСостояниеРаботников КАК Основной
         |		ЛЕВОЕ СОЕДИНЕНИЕ ВТСостояниеРаботников КАК Вспомогательный
         |		ПО (Вспомогательный.Сотрудник = Основной.Сотрудник)
         |			И (Вспомогательный.Период > Основной.Период)
         |
         |СГРУППИРОВАТЬ ПО
         |	Основной.Сотрудник,
         |	Основной.Состояние,
         |	Основной.Период
         |
		 |ИНДЕКСИРОВАТЬ ПО
		 |	Сотрудник,
		 |	ПериодНачало
		 |";
	ЗапросТабель.Выполнить();
	ЗапросТабель.Текст = "ВЫБРАТЬ * Из ВТСостояниеСотрудников";
		
	ЗапросТабель.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
		|	РаботникиОрганизацийСрезПоследних.Назначение КАК Назначение,
		|	ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК Буква,
		|	ДЕНЬ(ГрафикиРаботыПоВидамВремени.Дата) КАК День,
		|	ВЫБОР
		|		КОГДА НЕ ВТСостояниеСотрудников.ВидВремени ЕСТЬ NULL
		|			ТОГДА ВТСостояниеСотрудников.ВидВремени
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремени.ПоЧасам)
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Работа)
		|				КОГДА ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремени.ПоВечернимЧасам)
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Вечерние)
		|				КОГДА ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремени.ПоНочнымЧасам)
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Ночные)
		|			КОНЕЦ
		|	КОНЕЦ КАК БукваВидаВремени,
		|	ВЫБОР
		|		КОГДА ГрафикиРаботыПоВидамВремени.ОсновноеЗначение = 0
		|			ТОГДА ФактическийПериодДействия.ОтработаноЧасов
		|		ИНАЧЕ ГрафикиРаботыПоВидамВремени.ОсновноеЗначение
		|	КОНЕЦ КАК ОсновноеЗначение,
		|	ВЫБОР
		|		КОГДА НЕ УчтенноеВремяРаботниковОрганизацийПоДням.ВЦеломЗаПериод
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(УчтенноеВремяРаботниковОрганизацийПоДням.Регистратор)
		|	КОНЕЦ КАК ВведенныйДокументПоДням,
		|	ВЫБОР
		|		КОГДА УчтенноеВремяРаботниковОрганизацийПоДням.ВЦеломЗаПериод
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(УчтенноеВремяРаботниковОрганизацийПоДням.Регистратор)
		|	КОНЕЦ КАК ВведенныйДокументВЦеломЗаПериод,
		|	ВТГрафикиПоПериодам.ПериодНачало КАК НачалоПериода,
		|	ВТГрафикиПоПериодам.ПериодКонец КАК КонецПериода,
		|	ВТГрафикиПоПериодам.ПодразделениеОрганизации КАК ПодразделениеОрганизации
		|ИЗ
		|	(ВЫБРАТЬ
		|		Работники.Сотрудник КАК Сотрудник,
		|		Работники.Назначение КАК Назначение,
		|		Работники.Период КАК Период
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ВЫБОР
		|				КОГДА РаботникиОрганизаций.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|					ТОГДА РаботникиОрганизаций.Сотрудник
		|				ИНАЧЕ РаботникиОрганизаций.Сотрудник.ОсновноеНазначение
		|			КОНЕЦ КАК Сотрудник,
		|			РаботникиОрганизаций.Сотрудник КАК Назначение,
		|			МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
		|			РаботникиОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации
		|		ИЗ
		|			РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК РаботникиОрганизаций
		|		ГДЕ
		|			РаботникиОрганизаций.Период <= &КонецПериода
		|			И РаботникиОрганизаций.Организация = &Организация
		|			И РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВЫБОР
		|				КОГДА РаботникиОрганизаций.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|					ТОГДА РаботникиОрганизаций.Сотрудник
		|				ИНАЧЕ РаботникиОрганизаций.Сотрудник.ОсновноеНазначение
		|			КОНЕЦ,
		|			РаботникиОрганизаций.Сотрудник,
		|			РаботникиОрганизаций.ПодразделениеОрганизации) КАК Работники
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&НачалоПериода, ) КАК Работники1
		|			ПО (Работники1.Сотрудник = Работники.Назначение)
		|	ГДЕ
		|		(Работники1.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|				ИЛИ Работники1.ПричинаИзмененияСостояния ЕСТЬ NULL)) КАК РаботникиОрганизацийСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК РаботникиПрием
		|		ПО (РаботникиПрием.Сотрудник = РаботникиОрганизацийСрезПоследних.Назначение)
		|			И (РаботникиПрием.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу))
		|			И (РаботникиПрием.Период МЕЖДУ &НачалоПериода И &КонецПериода)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК РаботникиУвольнение
		|		ПО (РаботникиУвольнение.Сотрудник = РаботникиОрганизацийСрезПоследних.Назначение)
		|			И (РаботникиУвольнение.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
		|			И (РаботникиУвольнение.Период МЕЖДУ &НачалоПериода И &КонецПериода)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК ГрафикНазначения
		|		ПО (ГрафикНазначения.Организация = &Организация)
		|			И (ГрафикНазначения.Сотрудник = РаботникиОрганизацийСрезПоследних.Назначение)
		|			И (ГрафикНазначения.Период = РаботникиОрганизацийСрезПоследних.Период)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ГрафикиРаботыПоВидамВремени.ГрафикРаботы КАК ГрафикРаботы,
		|			ГрафикиРаботыПоВидамВремени.Дата КАК Дата,
		|			ГрафикиРаботыПоВидамВремени.ВидУчетаВремени КАК ВидУчетаВремени,
		|			ГрафикиРаботыПоВидамВремени.ОсновноеЗначение КАК ОсновноеЗначение
		|		ИЗ
		|			РегистрСведений.ИНАГРО_ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
		|		ГДЕ
		|			ГрафикиРаботыПоВидамВремени.ВидУчетаВремени <> ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремени.ПоДням)
		|			И ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|			И ГрафикиРаботыПоВидамВремени.ГрафикРаботы ССЫЛКА Справочник.ИНАГРО_ГрафикиРаботы) КАК ГрафикиРаботыПоВидамВремени
		|		ПО (ГрафикиРаботыПоВидамВремени.ГрафикРаботы = ГрафикНазначения.ГрафикРаботы)
		|			И (ЕСТЬNULL(РаботникиПрием.Период, &НачалоПериода) <= ГрафикиРаботыПоВидамВремени.Дата)
		|			И (ЕСТЬNULL(РаботникиУвольнение.Период, &КонецПериода) >= ГрафикиРаботыПоВидамВремени.Дата)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИНАГРО_РабочееВремяРаботниковОрганизаций.Период КАК Период,
		|			ИНАГРО_РабочееВремяРаботниковОрганизаций.Регистратор КАК Регистратор,
		|			ИНАГРО_РабочееВремяРаботниковОрганизаций.НомерСтроки КАК НомерСтроки,
		|			ИНАГРО_РабочееВремяРаботниковОрганизаций.Активность КАК Активность,
		|			ИНАГРО_РабочееВремяРаботниковОрганизаций.Организация КАК Организация,
		|			ИНАГРО_РабочееВремяРаботниковОрганизаций.ВидИспользованияРабочегоВремени КАК ВидИспользованияРабочегоВремени,
		|			ИНАГРО_РабочееВремяРаботниковОрганизаций.Сотрудник КАК Сотрудник,
		|			ИНАГРО_РабочееВремяРаботниковОрганизаций.Назначение КАК Назначение,
		|			ИНАГРО_РабочееВремяРаботниковОрганизаций.Дней КАК Дней,
		|			ИНАГРО_РабочееВремяРаботниковОрганизаций.Часов КАК Часов,
		|			ИНАГРО_РабочееВремяРаботниковОрганизаций.СводнаяЗапись КАК СводнаяЗапись,
		|			ИНАГРО_РабочееВремяРаботниковОрганизаций.ВЦеломЗаПериод КАК ВЦеломЗаПериод
		|		ИЗ
		|			РегистрНакопления.ИНАГРО_РабочееВремяРаботниковОрганизаций КАК ИНАГРО_РабочееВремяРаботниковОрганизаций
		|		ГДЕ
		|			ИНАГРО_РабочееВремяРаботниковОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода) КАК УчтенноеВремяРаботниковОрганизацийПоДням
		|		ПО (УчтенноеВремяРаботниковОрганизацийПоДням.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник)
		|			И (УчтенноеВремяРаботниковОрганизацийПоДням.Назначение = РаботникиОрганизацийСрезПоследних.Назначение)
		|			И (УчтенноеВремяРаботниковОрганизацийПоДням.Регистратор <> &ДокументСсылка)
		|			И (УчтенноеВремяРаботниковОрганизацийПоДням.Период = ГрафикиРаботыПоВидамВремени.Дата
		|					И НЕ УчтенноеВремяРаботниковОрганизацийПоДням.ВЦеломЗаПериод
		|				ИЛИ УчтенноеВремяРаботниковОрганизацийПоДням.Период = НАЧАЛОПЕРИОДА(ГрафикиРаботыПоВидамВремени.Дата, МЕСЯЦ)
		|					И УчтенноеВремяРаботниковОрганизацийПоДням.ВЦеломЗаПериод)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиПоПериодам КАК ВТГрафикиПоПериодам
		|		ПО РаботникиОрганизацийСрезПоследних.Назначение = ВТГрафикиПоПериодам.Назначение
		|			И (ГрафикиРаботыПоВидамВремени.Дата <= ВТГрафикиПоПериодам.ПериодКонец)
		|			И (ГрафикиРаботыПоВидамВремени.Дата >= ВТГрафикиПоПериодам.ПериодНачало)
		|			И (ВЫБОР
		|				КОГДА ГрафикиРаботыПоВидамВремени.ГрафикРаботы = ВТГрафикиПоПериодам.ГрафикРаботы
		|					ТОГДА ГрафикиРаботыПоВидамВремени.ГрафикРаботы = ВТГрафикиПоПериодам.ГрафикРаботы
		|				ИНАЧЕ ВТГрафикиПоПериодам.ПодразделениеОрганизации = ГрафикНазначения.ПодразделениеОрганизации
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ПериодыТабеля.ДатаТабеля КАК ДатаТабеля,
		|			Начисления.Сотрудник КАК Сотрудник,
		|			Начисления.Назначение КАК Назначение,
		|			Начисления.ВидРасчета КАК ВидРасчета,
		|			Начисления.ВидУчетаВремени КАК ВидУчетаВремени,
		|			Начисления.ВидРасчета.ВидИспользованияРабочегоВремени КАК ВидВремени,
		|			Начисления.ПериодДействияНачало КАК ПериодДействияНачало,
		|			Начисления.ПериодДействияКонец КАК ПериодДействияКонец,
		|			ДЕНЬ(ПериодыТабеля.ДатаТабеля) КАК Поле1,
		|			Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ВидРасчетаОбозначениеВТабелеУчетаРабочегоВремени,
		|			Начисления.ОтработаноЧасов КАК ОтработаноЧасов
		|		ИЗ
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				ГрафикиРаботыПоВидамВремени.Дата КАК ДатаТабеля
		|			ИЗ
		|				РегистрСведений.ИНАГРО_ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
		|			ГДЕ
		|				ГрафикиРаботыПоВидамВремени.ВидУчетаВремени <> ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремени.ПоДням)
		|				И ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|				И ГрафикиРаботыПоВидамВремени.ГрафикРаботы ССЫЛКА Справочник.ИНАГРО_ГрафикиРаботы) КАК ПериодыТабеля
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ИНАГРО_Начисления.ФактическийПериодДействия() КАК Начисления
		|				ПО (ПериодыТабеля.ДатаТабеля МЕЖДУ Начисления.ПериодДействияНачало И Начисления.ПериодДействияКонец)
		|					И (НЕ Начисления.Сторно)
		|					И (Начисления.ПериодДействия = &НачалоПериода)
		|					И (Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени <> &ПустойКлассификатор)
		|					И (НЕ Начисления.ВидРасчета.ВидИспользованияРабочегоВремени В (ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыВремени.ДополнительноОплачиваемоеВПределахНормы))
		|						ИЛИ Начисления.ВидРасчета.ВидИспользованияРабочегоВремени В (ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыВремени.ДополнительноОплачиваемоеВПределахНормы))
		|							И Начисления.ВидРасчета.ЗачетОтработанногоВремени)
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ИНАГРО_Начисления.ФактическийПериодДействия() КАК СторноНачисления
		|				ПО (ПериодыТабеля.ДатаТабеля МЕЖДУ СторноНачисления.ПериодДействияНачало И СторноНачисления.ПериодДействияКонец)
		|					И (СторноНачисления.Сторно)
		|					И (Начисления.Сотрудник = СторноНачисления.Сотрудник)
		|					И (Начисления.ВидРасчета = СторноНачисления.ВидРасчета)
		|					И (СторноНачисления.ПериодРегистрации > Начисления.ПериодРегистрации)
		|					И (СторноНачисления.ПериодДействия = &НачалоПериода)
		|					И (СторноНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени <> &ПустойКлассификатор)
		|		ГДЕ
		|			СторноНачисления.Сотрудник ЕСТЬ NULL
		|			И НЕ Начисления.ДокументОснование ССЫЛКА Документ.ИНАГРО_ЗаменыРаботниковОрганизаций) КАК ФактическийПериодДействия
		|		ПО РаботникиОрганизацийСрезПоследних.Сотрудник = ФактическийПериодДействия.Сотрудник
		|			И РаботникиОрганизацийСрезПоследних.Назначение = ФактическийПериодДействия.Назначение
		|			И (ГрафикиРаботыПоВидамВремени.Дата = ФактическийПериодДействия.ДатаТабеля)
		|			И (НЕ ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени В (ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Работа), ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Вечерние), ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Ночные)))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСостояниеСотрудников КАК ВТСостояниеСотрудников
		|		ПО РаботникиОрганизацийСрезПоследних.Сотрудник = ВТСостояниеСотрудников.Сотрудник
		|			И (ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ ВТСостояниеСотрудников.ПериодНачало И ВТСостояниеСотрудников.ПериодКонец)
		|ГДЕ
		|	(ГрафикиРаботыПоВидамВремени.ОсновноеЗначение <> 0
		|			ИЛИ ГрафикиРаботыПоВидамВремени.ОсновноеЗначение = 0
		|				И ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Болезнь)
		|			ИЛИ ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОсновнойОтпуск)
		|			ИЛИ ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ДополнительныйОтпуск)
		|			ИЛИ ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОтпускДополнительныйНаДетей)
		|			ИЛИ ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам)
		|			ИЛИ ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком)
		|			ИЛИ ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоРазрешениюРаботодателя)
		|			ИЛИ ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоЗаконодательству)
		|			ИЛИ ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОтпускЧернобыльский)
		|			ИЛИ ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.РаботаВыходныеИПраздничные)
		|				И ФактическийПериодДействия.ВидРасчета.ЗачетОтработанногоВремени)
		|	И НЕ ВТГрафикиПоПериодам.ПодразделениеОрганизации ЕСТЬ NULL" +?(ОтборПодразделения," И ВТГрафикиПоПериодам.ПодразделениеОрганизации = &ПодразделениеОрганизации","")+"
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Назначение,
		|	День,
		|	БукваВидаВремени";
	
		
	РезультатЗапроса = ЗапросТабель.Выполнить();
		
	МассивПриставок = Новый Массив(4);
	МассивПриставок[0] = "Первый";
	МассивПриставок[1] = "Второй";
	МассивПриставок[2] = "Третий";
	МассивПриставок[3] = "Четвертый";
	
	// по дням.
	Выборка = РезультатЗапроса.Выбрать();
	ВведенныеТабеляПоДнямПоСотруднику = Новый Соответствие;
	Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
		Пока Выборка.СледующийПоЗначениюПоля("Назначение") Цикл
			
			ВведенныеТабеляПоДнямПоСотруднику.Очистить();
			Если ТекущаяСтрока <> Неопределено Тогда
				СтрокаРасшифровкиПоДням = ТекущаяСтрока;
			Иначе
				СтрокаРасшифровкиПоДням = ОтработанноеВремя.Найти(Выборка.Назначение, "Назначение");
				Если СтрокаРасшифровкиПоДням = Неопределено Тогда 
					СтрокаРасшифровкиПоДням = ОтработанноеВремя.Добавить();
				КонецЕсли;
			КонецЕсли;	
			СтрокаРасшифровкиПоДням.Сотрудник 		= Выборка.Сотрудник;
			СтрокаРасшифровкиПоДням.Назначение 		= Выборка.Назначение;
			СтрокаРасшифровкиПоДням.НачалоПериода 	= Выборка.НачалоПериода;
			
			Если НЕ Выборка.ВведенныйДокументВЦеломЗаПериод = NULL Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сотруднику - "+Выборка.Назначение+" введен табель "+ Выборка.ВведенныйДокументВЦеломЗаПериод +" в целом за период, поэтому невозможно заполнить табель по дням.");
				Продолжить;
			КонецЕсли;
			
			Пока Выборка.СледующийПоЗначениюПоля("День") Цикл
				ИндексЯчейкиВТаблице = Выборка.День;
				ИндексМассиваПриставок = 0;
				Пока Выборка.Следующий() Цикл 
						
					Если Выборка.Буква <> NULL Тогда
						
						НазваниеЯчейкиВБазе = МассивПриставок[ИндексМассиваПриставок]+"ВидВремени"+Строка(ИндексЯчейкиВТаблице);
						СтрокаРасшифровкиПоДням[НазваниеЯчейкиВБазе] = Выборка.Буква;
						НазваниеЯчейкиВБазе = МассивПриставок[ИндексМассиваПриставок]+"Часов"+Строка(ИндексЯчейкиВТаблице);
						СтрокаРасшифровкиПоДням[НазваниеЯчейкиВБазе] = Выборка.ОсновноеЗначение;
						
						ИндексМассиваПриставок = ИндексМассиваПриставок + 1;
						
						Прервать; 
					КонецЕсли;
					
					Если Выборка.День <> NULL Тогда
						НазваниеЯчейкиВБазе = МассивПриставок[ИндексМассиваПриставок]+"ВидВремени"+Строка(ИндексЯчейкиВТаблице);
						СтрокаРасшифровкиПоДням[НазваниеЯчейкиВБазе] = Выборка.БукваВидаВремени;
						НазваниеЯчейкиВБазе = МассивПриставок[ИндексМассиваПриставок]+"Часов"+Строка(ИндексЯчейкиВТаблице);
						СтрокаРасшифровкиПоДням[НазваниеЯчейкиВБазе] = Выборка.ОсновноеЗначение;
					КонецЕсли;	
					
					ИндексМассиваПриставок = ИндексМассиваПриставок + 1;
					Если ИндексМассиваПриставок > 2 Тогда
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
			КонецЦикла;
			СтрокаРасшифровкиПоДням.КонецПериода	= Выборка.КонецПериода;
			
			
			Если СпособВводаДанных = Перечисления.ИНАГРО_СпособыВводаДанныхОВремени.ВЦеломЗаПериод Тогда
				
				Для ИндексЯчейки = 1 По 31 Цикл
					Для Каждого ТекущаяПриставка Из МассивПриставок Цикл
						Часов = СтрокаРасшифровкиПоДням[ТекущаяПриставка+"Часов"+ИндексЯчейки];
						Если Часов > 0 Тогда
							СтрокаЗаПериод = ОтработанноеВремяВЦеломЗаПериод.Добавить();
							СтрокаЗаПериод.Сотрудник = СтрокаРасшифровкиПоДням.Сотрудник;
							СтрокаЗаПериод.Назначение = СтрокаРасшифровкиПоДням.Назначение;
							СтрокаЗаПериод.Часов = Часов;
							СтрокаЗаПериод.Дней = 1;
							СтрокаЗаПериод.ВидВремени = СтрокаРасшифровкиПоДням[ТекущаяПриставка+"ВидВремени"+ИндексЯчейки];
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				ОтработанноеВремяВЦеломЗаПериод.Свернуть("Сотрудник, Назначение, ВидВремени", "Часов, Дней");
			
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
	Стоп = Истина
	
КонецФункции // Автозаполнение()

// Функция проверяет, нет ли уже аналогичных записей с ключевыми полями в регистре сведений
// ГрафикиРаботыПоВидамВремени.
// Возвращает Истина если проведение возможно, иначе Ложь.
Функция ПроверкаУникальностиЗаписи(Отказ)
	
	ЗапросПроверкаУникальности = Новый Запрос;
	
	ЗапросПроверкаУникальности.УстановитьПараметр("ДокументСсылка", Ссылка);
	ЗапросПроверкаУникальности.УстановитьПараметр("Месяц", ПериодРегистрации);
	ЗапросПроверкаУникальности.УстановитьПараметр("НачалоМесяца", ДатаНачалаПериода);
	ЗапросПроверкаУникальности.УстановитьПараметр("КонецМесяца", КонецДня(ДатаОкончанияПериода));
	
	ЗапросПроверкаУникальности.УстановитьПараметр("ПустоеПодразделение", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	ЗапросПроверкаУникальности.УстановитьПараметр("Подразделение", ПодразделениеОрганизации);
	
	ЗапросПроверкаУникальности.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ  
	|	ПРЕДСТАВЛЕНИЕ(РабочееВремяРаботниковОрганизаций.Регистратор) КАК ДокументПредставление,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник.Наименование
	|
	|ИЗ	Документ.ИНАГРО_ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИНАГРО_РабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботниковОрганизаций
	|ПО РабочееВремяРаботниковОрганизаций.Сотрудник = ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник
	|И (РабочееВремяРаботниковОрганизаций.Регистратор <> &ДокументСсылка)
	|
	|	И НЕ(РабочееВремяРаботниковОрганизаций.Регистратор.ПодразделениеОрганизации <> &Подразделение
	|			И &Подразделение <> &ПустоеПодразделение И РабочееВремяРаботниковОрганизаций.Регистратор.ПодразделениеОрганизации <> &ПустоеПодразделение)
	|
	|И (РабочееВремяРаботниковОрганизаций.ВЦеломЗаПериод
	|					И РабочееВремяРаботниковОрганизаций.Период = &Месяц
	|				ИЛИ (НЕ РабочееВремяРаботниковОрганизаций.ВЦеломЗаПериод)
	|					И (РабочееВремяРаботниковОрганизаций.Период МЕЖДУ &НачалоМесяца И &КонецМесяца))
	|ГДЕ
	|	(НЕ РабочееВремяРаботниковОрганизаций.НомерСтроки ЕСТЬ NULL )
	|	И ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
	|	И (РабочееВремяРаботниковОрганизаций.Регистратор ССЫЛКА Документ.ИНАГРО_ТабельУчетаРабочегоВремениОрганизации)";
	
	ВыборкаРезультата = ЗапросПроверкаУникальности.Выполнить().Выбрать();
	Если ВыборкаРезультата.Количество() > 0 Тогда
		СтрокаСотрудников = "";
		
		Пока ВыборкаРезультата.Следующий() Цикл
			СтрокаСотрудников = СтрокаСотрудников + Символы.ПС + ВыборкаРезультата.СотрудникНаименование+ " ("+ВыборкаРезультата.ДокументПредставление+")";
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Проведение документа невозможно, так как следующие сотрудники уже введены данные в этом периоде!';uk='Проведення документу немождиве, так як наступні працівники вже введені в заданому періоді!'") + СтрокаСотрудников, ЭтотОбъект,,,Отказ);
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции // ПроверкаУникальностиЗаписи()	

// Функция проверяет, работают ли сотрудники в выбранном подразделении в заданном периоде. 
Функция ПроверкаПравомерностиЗаписиПоПодразделению(Отказ)
	
	Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("НачалоМесяца", ДатаНачалаПериода);
		Запрос.УстановитьПараметр("КонецМесяца", КонецДня(ДатаОкончанияПериода));
		Запрос.УстановитьПараметр("Подразделение", ПодразделениеОрганизации);
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник.Наименование КАК Сотрудник,
		|	РаботникиОрганизацийНач.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизацииНач,
		|	РаботникиОрганизацийКон.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизацииКон
		|ИЗ
		|	Документ.ИНАГРО_ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ИНАГРО_ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&НачалоМесяца, Организация = &Организация) КАК РаботникиОрганизацийНач
		|		ПО (ИНАГРО_ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник = РаботникиОрганизацийНач.Сотрудник
		|				И ИНАГРО_ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Назначение = РаботникиОрганизацийНач.Сотрудник)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&КонецМесяца, Организация = &Организация) КАК РаботникиОрганизацийКон
		|		ПО (ИНАГРО_ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник = РаботникиОрганизацийКон.Сотрудник
		|				И ИНАГРО_ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Назначение = РаботникиОрганизацийКон.Сотрудник)
		|ГДЕ
		|	ИНАГРО_ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
		|	И РаботникиОрганизацийНач.ПодразделениеОрганизации <> &Подразделение
		|	И РаботникиОрганизацийКон.ПодразделениеОрганизации <> &Подразделение";
		
		ВыборкаРезультата = Запрос.Выполнить().Выбрать();
		Если ВыборкаРезультата.Количество() > 0 Тогда
			СтрокаСотрудников = "";
			
			Пока ВыборкаРезультата.Следующий() Цикл
				СтрокаСотрудников = СтрокаСотрудников + Символы.ПС + ВыборкаРезультата.Сотрудник+ " (на начало периода: "+ВыборкаРезультата.ПодразделениеОрганизацииНач+", на конец периода: " + ВыборкаРезультата.ПодразделениеОрганизацииКон + ")";
				СтрокаСотрудников = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 %2 %3 (на начало периода: %4, на конец периода: %5) ';uk='%1 %2 %3 (на початок періоду: %4, на кінець періоду: %5) '"), СтрокаСотрудников, Символы.ПС, ВыборкаРезультата.Сотрудник, ВыборкаРезультата.ПодразделениеОрганизацииНач, ВыборкаРезультата.ПодразделениеОрганизацииКон) ;
				
			КонецЦикла;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Проведение документа невозможно, так как следующие сотрудники не числятся в выбранном подразделении в заданном периоде!';uk='Проведення документу немождиве, так як наступні працівники не числяться в обраному підрозділі в заданому періоді!'"),ЭтотОбъект,,,Отказ);
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции // ПроверкаУникальностиЗаписи()	

// Процедура вводит записи в регистр сведений Графики работы по видам времени и удаляет старые записи
// при перепроведении документа. Операция выполняется за месяц по определенному сотруднику.
Процедура ПроведениеСУдалениемГрафикиРаботыПоВидамВремени(ВыборкаПоШапкеДокумента, ВыборкаПоОтработанноеВремя, Заголовок)
	Перем Отказ;	
	
	Пока ВыборкаПоОтработанноеВремя.Следующий() Цикл	
		
		// Чтобы было возможно проводить другие табеля в этом периоде по перемещенным в другое подразделение.
		Если ВыборкаПоОтработанноеВремя.НеПроводить И ВыборкаПоОтработанноеВремя.Часов = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ДобавитьСтрокуРабочееВремяРаботниковОрганизацийПоДням(ВыборкаПоОтработанноеВремя, ВыборкаПоШапкеДокумента);
		
	КонецЦикла;
	
КонецПроцедуры // ПроведениеСУдалениемГрафикиРаботыПоВидамВремени()

// Процедура заполняет таблицу Отработанное время в целом за период
// по данным отаблицы отработанное время.
//
Процедура ЗаполнитьТаблицуОтработанноеВремяВЦеломЗаПериод()
	
	МассивПриставок = Новый Массив(4);
	МассивПриставок[0] = "Первый";
	МассивПриставок[1] = "Второй";
	МассивПриставок[2] = "Третий";
	МассивПриставок[3] = "Четвертый";
		
	ОтработанноеВремяВЦеломЗаПериод.Очистить();
	Для Каждого СтрокаОтработанногоВремени Из ОтработанноеВремя Цикл
		Для ИндексЯчейки = 1 По 31 Цикл
			Для Каждого ТекущаяПриставка Из МассивПриставок Цикл
				Часов = СтрокаОтработанногоВремени[ТекущаяПриставка+"Часов"+ИндексЯчейки];
				Если Часов > 0 Тогда
					СтрокаТаблицы = ОтработанноеВремяВЦеломЗаПериод.Добавить();
					СтрокаТаблицы.Сотрудник = СтрокаОтработанногоВремени.Сотрудник;
					СтрокаТаблицы.Назначение = СтрокаОтработанногоВремени.Назначение;
					СтрокаТаблицы.Часов = Часов;
					СтрокаТаблицы.Дней = 1;
					СтрокаТаблицы.ВидВремени = СтрокаОтработанногоВремени[ТекущаяПриставка+"ВидВремени"+ИндексЯчейки];
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	ОтработанноеВремяВЦеломЗаПериод.Свернуть("Сотрудник, Назначение, ВидВремени", "Часов, Дней");
	
КонецПроцедуры

#КонецОбласти 
	
#КонецЕсли

