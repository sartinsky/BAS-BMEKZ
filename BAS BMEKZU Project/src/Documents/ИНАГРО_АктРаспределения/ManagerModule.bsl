#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// ПФ_MXL_АктУничтожения
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_АктУничтожения";
	КомандаПечати.Представление = НСтр("ru='Акт на уничтожение непригодных отходов';uk='Акт на знищення непридатних відходів'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокументаОбщая,ФормаДокумента";
	
	// ПФ_MXL_АктРаспределенияОтходов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_АктРаспределенияОтходов";
	КомандаПечати.Представление = НСтр("ru='Акт распределения непригодных отходов';uk='Акт розподілення непридатних відходів'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокументаОбщая,ФормаДокумента";
	
	// ПФ_MXL_АктВозникновения
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_АктВозникновения";
	КомандаПечати.Представление = НСтр("ru='Акт возникновения непригодных отходов';uk='Акт виникнення непридатних відходів'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокументаОбщая,ФормаДокумента";
		
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Акт распределения отходов""';uk='Реєстр документів ""Акт розподілу відходів""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_АктУничтожения") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_АктУничтожения", НСтр("ru='Акт уничтожения отходов';uk='Акт знищення відходів'"), 
		ПечатьАктУничтожения(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,"Документы.ИНАГРО_АктРаспределения.ПФ_MXL_АктУничтожения",, Ложь);
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_АктРаспределенияОтходов") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_АктРаспределенияОтходов", НСтр("ru='Акт распределения отходов';uk='Акт розподілення відходів'"), 
		ПечатьАктРаспределенияОтходов(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,"Документы.ИНАГРО_АктРаспределения.ПФ_MXL_АктРаспределенияОтходов",, Ложь);
		ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_АктВозникновения") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_АктВозникновения", НСтр("ru='Акт возникновения отходов';uk='Акт виникнення відходів'"), 
		ПечатьАктВозникновения(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,"Документы.ИНАГРО_АктРаспределения.ПФ_MXL_АктВозникновения",, Ложь); 
		
    КонецЕсли;	
	
КонецПроцедуры

Функция ОтветственныеЛицаОрганизации(Организация, ДатаСреза) 
	
	Результат = Новый Структура("Руководитель, НачальникОхраны, ИНАГРО_НачальникВТЛ, ИНАГРО_БухгалтерККУ");
	
	Если Организация <> Неопределено тогда
		
		ЗапросПоЛицам = Новый Запрос();
		ЗапросПоЛицам.УстановитьПараметр("ДатаСреза",   ДатаСреза);
		ЗапросПоЛицам.УстановитьПараметр("Организация", Организация);
		ЗапросПоЛицам.Текст = "
		|	ВЫБРАТЬ
		|	ОтветственноеЛицо,
		|	ФизическоеЛицо
		|ИЗ
		|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &Организация)";
		Руководители = ЗапросПоЛицам.Выполнить().Выбрать();
		Пока Руководители.Следующий() Цикл
			
			Если Руководители.ОтветственноеЛицо      	= Перечисления.ОтветственныеЛицаОрганизаций.Руководитель Тогда
				Результат.Руководитель               	= Руководители.ФизическоеЛицо;
				
			ИначеЕсли Руководители.ОтветственноеЛицо 	= Перечисления.ОтветственныеЛицаОрганизаций.ИНАГРО_НачальникОхраны Тогда
				Результат.НачальникОхраны				= Руководители.ФизическоеЛицо;
				
			ИНачеЕсли Руководители.ОтветственноеЛицо	= Перечисления.ОтветственныеЛицаОрганизаций.ИНАГРО_НачальникВТЛ Тогда
				Результат.ИНАГРО_НачальникВТЛ			= Руководители.ФизическоеЛицо;
				
			ИНачеЕсли Руководители.ОтветственноеЛицо	= Перечисления.ОтветственныеЛицаОрганизаций.ИНАГРО_БухгалтерККУ Тогда
				Результат.ИНАГРО_БухгалтерККУ			= Руководители.ФизическоеЛицо;			
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПечатьАктУничтожения(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати =  "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_АктРаспределения_АктУничтожения";
		
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_АктРаспределения.ПФ_MXL_АктУничтожения");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	Для каждого Ссылка Из МассивОбъектов Цикл
		
		Руководители = ОтветственныеЛицаОрганизации(Ссылка.Организация,Ссылка.Дата);	 
		
		//Шапка
		ОблШапка = Макет.ПолучитьОбласть("Шапка");
		ОблШапка.Параметры.Заполнить(Ссылка);
		ОблШапка.Параметры.Организация			= Ссылка.Организация.НаименованиеПолное; 
		ОблШапка.Параметры.Номер				= Ссылка.Номер;
		ОблШапка.Параметры.Дата		 			= Формат(Ссылка.Дата,"ДЛФ = Д");
		ОблШапка.Параметры.Директор				= Руководители.Руководитель;
		ОблШапка.Параметры.НачальникВТЛ 		= Руководители.ИНАГРО_НачальникВТЛ;
		ОблШапка.Параметры.ЗавСкладом 			= РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(,Новый Структура("СтруктурнаяЕдиница",Ссылка.Склад)).ФизическоеЛицо;
		ОблШапка.Параметры.НачальникОхраны		= Ссылка.НачальникОхраны;
		ОблШапка.Параметры.Приказ 				= Ссылка.ПриказНаУничтожение;
		ОблШапка.Параметры.Склад				= Ссылка.Склад;
		ОблШапка.Параметры.Причина				= Ссылка.Примечание;
		ОблШапка.Параметры.Анализ				= Ссылка.ЛабораторныйАнализ;
		ОблШапка.Параметры.Сор					= 100-Ссылка.СорнаяПримесьОтходов;
		ОблШапка.Параметры.Вес 					= Ссылка.ФизическийВес;
		ОблШапка.Параметры.НомерПропуска 		= Ссылка.НомерПропуска;
		ОблШапка.Параметры.ДатаПропуска			= Формат(Ссылка.ДатаПропуска, "ДЛФ=D");
		ТабДокумент.Вывести(ОблШапка);
		
		Возврат ТабДокумент;
		
	КонецЦикла;
	
КонецФункции

Функция ПечатьАктВозникновения(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати =  "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_АктРаспределения_АктВозникновения";
		
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_АктРаспределения.ПФ_MXL_АктВозникновения");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	Для каждого Ссылка Из МассивОбъектов Цикл
		
		Руководители = ОтветственныеЛицаОрганизации(Ссылка.Организация,Ссылка.Дата);	 
		
		//Шапка
		ОблШапка = Макет.ПолучитьОбласть("Шапка");
		ОблШапка.Параметры.Заполнить(Ссылка);
		ОблШапка.Параметры.Организация			= Ссылка.Организация.НаименованиеПолное;
		ОблШапка.Параметры.Директор				= Руководители.Руководитель;
		
		ТабДокумент.Вывести(ОблШапка);
		
		//Тело
		
		Тело 								= Макет.ПолучитьОбласть("Тело");
		Культуры 							= Макет.ПолучитьОбласть("Культуры");
		Тело.параметры.НачальникВТЛ 		= Руководители.ИНАГРО_НачальникВТЛ;
		Тело.параметры.НачальникЕлеватора 	= РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(,Новый Структура("СтруктурнаяЕдиница",Ссылка.Склад)).ФизическоеЛицо;
		Тело.параметры.НачальникОхраны 		= Руководители.НачальникОхраны;
		Тело.Параметры.НомерДок 			= Ссылка.Номер;
		Тело.Параметры.ДатаДок 				= Формат(Ссылка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат("uk"));	
		Тело.Параметры.ВидОперацииДляРаспределенияОтходов = Ссылка.Примечание;
		
		ТабДокумент.Вывести(Тело);
		
		//Культуры
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИНАГРО_АктРаспределенияРасчетПоВладельцам.Номенклатура КАК Номенклатура
		|ИЗ
		|	Документ.ИНАГРО_АктРаспределения.РасчетПоВладельцам КАК ИНАГРО_АктРаспределенияРасчетПоВладельцам
		|ГДЕ
		|	ИНАГРО_АктРаспределенияРасчетПоВладельцам.Ссылка = &Ссылка";
		;
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл		
			Культуры.Параметры.Номенклатура = Выборка.Номенклатура;
			ТабДокумент.Вывести(Культуры);	
		КонецЦикла;
		
		// Тело1
		
		Тело1	 								= Макет.ПолучитьОбласть("Тело1");
		Тело1.Параметры.НомерАнализаОтходов 	= Ссылка.ЛабораторныйАнализ;
		Тело1.Параметры.ВлажностьОтходов 		= Ссылка.ВлажностьОтходов;			 
		Тело1.Параметры.СорнаяПримесьОтходов 	= 100-Ссылка.СорнаяПримесьОтходов;
		Тело1.Параметры.влажностьОтходов 		= Ссылка.ВлажностьОтходов;
		Тело1.Параметры.ФизическийВесОтходов 	= Ссылка.ФизическийВес;
		Тело1.Параметры.Отходы 					= Ссылка.Отходы;
		
		ТабДокумент.Вывести(Тело1);
		
		//Дно
		
		Дно = Макет.ПолучитьОбласть("Дно");
		Дно.параметры.НачальникВТЛ 				= Руководители.ИНАГРО_НачальникВТЛ;
		Дно.параметры.НачальникЕлеватора 		= РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(,Новый Структура("СтруктурнаяЕдиница",Ссылка.Склад)).ФизическоеЛицо;
		Дно.параметры.НачальникОхраны 			= Руководители.НачальникОхраны;
		
		
		ТабДокумент.Вывести(Дно);
	
		Возврат ТабДокумент;	
	КонецЦикла;
	
	
	
КонецФункции // ПечатьДокумента()

Функция ПечатьАктРаспределенияОтходов(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	 
	 УстановитьПривилегированныйРежим(Истина);
	 ТабДокумент = Новый ТабличныйДокумент;
	 ТабДокумент.ИмяПараметровПечати =  "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_АктРаспределения_АктРаспределенияОтходов";
	 
	 Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_АктРаспределения.ПФ_MXL_АктРаспределенияОтходов");
	 
	 // печать производится на языке, указанном в настройках пользователя
	 КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	 Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	 
	 Для каждого Ссылка Из МассивОбъектов Цикл
		 
		 Руководители = ОтветственныеЛицаОрганизации(Ссылка.Организация,Ссылка.Дата);	 
		 РукСклад = ИНАГРО_Элеватор.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата, Ссылка.Склад);
		 
		 //Шапка
		 ОблШапка = Макет.ПолучитьОбласть("Шапка");
		 ОблШапка.Параметры.Заполнить(Ссылка);
		 ОблШапка.Параметры.Организация			= Ссылка.Организация.НаименованиеПолное;
		 ОблШапка.Параметры.Директор				= Руководители.Руководитель;
		 ОблШапка.Параметры.Дата		 			= Формат(Ссылка.Дата,"ДЛФ = Д");
		 ОблШапка.Параметры.Номер				= Ссылка.Номер;
		 ОблШапка.Параметры.Склад				= Ссылка.Склад;
		 ОблШапка.Параметры.Отходы 				= Ссылка.Отходы;
		 
		 ТабДокумент.Вывести(ОблШапка);
		 
		 //ШапкаТаблицы
		 ШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		 ТабДокумент.Вывести(ШапкаТаблицы);
		 
		 //Таблица
		 ОблСтрокаНоменклатура = Макет.ПолучитьОбласть("СтрокаНоменклатура");
		 ОблСтрокаВладелец = Макет.ПолучитьОбласть("СтрокаВладелец");
		 Запрос = Новый Запрос;
		 Запрос.Текст = "ВЫБРАТЬ
		 |	ИНАГРО_АктРаспределенияРасчетПоВладельцам.Номенклатура КАК Номенклатура,
		 |	ИНАГРО_АктРаспределенияРасчетПоВладельцам.ФизическийВес КАК ФизическийВес,
		 |	ИНАГРО_АктРаспределенияРасчетПоВладельцам.Владелец КАК Владелец
		 |ИЗ
		 |	Документ.ИНАГРО_АктРаспределения.РасчетПоВладельцам КАК ИНАГРО_АктРаспределенияРасчетПоВладельцам
		 |ГДЕ
		 |	ИНАГРО_АктРаспределенияРасчетПоВладельцам.Ссылка = &Ссылка
		 |ИТОГИ
		 |	СУММА(ФизическийВес)
		 |ПО	
		 |	Номенклатура";
		 Запрос.УстановитьПараметр("Ссылка",Ссылка);
		 Выборка = Запрос.Выполнить().Выбрать();
		 
		 НомНоменклатура = 1;
		 НомВладелец = 1;
		 Пока Выборка.Следующий() Цикл		
			 Пока Выборка.Группировка() = "Номенклатура" Цикл
				 
				 ОблСтрокаНоменклатура.Параметры.Номер 			= НомНоменклатура;
				 ОблСтрокаНоменклатура.Параметры.Номенклатура 	= Выборка.Номенклатура;
				 ОблСтрокаНоменклатура.Параметры.Владелец 		= ""; 
				 ОблСтрокаНоменклатура.Параметры.ВесОтходов 		= Выборка.ФизическийВес;
				 ОблСтрокаНоменклатура.Параметры.Влажность 		= Ссылка.ВлажностьОтходов;
				 ОблСтрокаНоменклатура.Параметры.СорнаяПримесь 	= Ссылка.СорнаяПримесьОтходов;
				 ТабДокумент.Вывести(ОблСтрокаНоменклатура);
				 НомВладелец = 1;
				 Выборка.Следующий();
				 ТабДокумент.НачатьГруппуСтрок();			
				 Пока Выборка.Группировка() = "" Цикл
					 ОблСтрокаВладелец.Параметры.номер 			= ""+НомНоменклатура+"."+НомВладелец;
					 ОблСтрокаВладелец.Параметры.Владелец  		= Выборка.Владелец;
					 ОблСтрокаВладелец.Параметры.ВесОтходов 		= Выборка.ФизическийВес;
					 ОблСтрокаВладелец.Параметры.Влажность 		= Ссылка.ВлажностьОтходов;
					 ОблСтрокаВладелец.Параметры.СорнаяПримесь 	= Ссылка.СорнаяПримесьОтходов;				
					 ТабДокумент.Вывести(ОблСтрокаВладелец);
					 Выборка.Следующий();
					 НомВладелец = НомВладелец + 1;
				 КонецЦикла;
				 ТабДокумент.ЗакончитьГруппуСтрок();
				 НомНоменклатура = НомНоменклатура + 1;
			 КонецЦикла;
		 КонецЦикла;
		 
		 //Дно
		 
		 ОблИтог 							= Макет.ПолучитьОбласть("Итог");
		 ОблИтог.Параметры.ИтогВесОтходов 	= Ссылка.ФизическийВес;
		 ОблИтог.Параметры.Влажность 		= "";
		 ОблИтог.Параметры.СорнаяПримесь 	= "";
		 
		 Дно = Макет.ПолучитьОбласть("Дно");
		 Дно.Параметры.НачальникВТЛ  = Руководители.ИНАГРО_НачальникВТЛ;
		 Дно.Параметры.НачальникЦеха = РукСклад;
		 Дно.Параметры.Бухгалтер     = Руководители.ИНАГРО_БухгалтерККУ;
		 ТабДокумент.Вывести(Дно);
		 
		 ТабДокумент.АвтоМасштаб = Истина;
		 
		 
		 Возврат ТабДокумент;	
	 КонецЦикла;
	 
 КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область ПрограммныйИнтерфейс

// Заполняет счета учета номенклатуры в табличной части документа
//
// Параметры:
//  Объект - СправочникСсылка - объект контактной информации.
// ИмяТабличнойЧасти - Строка- имя для табличной части документа.
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад, ОтражатьВБухгалтерскомУчете");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
		ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "Номенклатура", Истина), ДанныеОбъекта);
	
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		СведенияОНоменклатуре = СоответствиеСведенийОНоменклатуре.Получить(СтрокаТабличнойЧасти.Номенклатура);
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре);
	КонецЦикла;

КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - Строка - строка табличной части документа
//  СведенияОНоменклатуре - Структура - структура сведений о номенклатуре, либо структура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре) Экспорт
	
	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчетаБУ") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;

	Если ДанныеОбъекта.ОтражатьВБухгалтерскомУчете Тогда
		
		Если ИНАГРО_Элеватор.ОпределитьПринадлежностьКонтрагента(СтрокаТабличнойЧасти.Владелец) Тогда
			СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаБУ;				
		Иначе
			СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаДоп;				
		КонецЕсли;		
		
	Иначе
		
		СтрокаТабличнойЧасти.СчетУчетаБУ     = ПланыСчетов.Хозрасчетный.ПустаяСсылка();			
		
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;

	ВидОперации = Неопределено; 

	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидОперации");
	КонецЕсли;

	// Если документ копируется, то вид формы получаем из копируемого документа.
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначениеКопирования")
			И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Параметры.ЗначениеКопирования, "ВидОперации");
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
			Если Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда
				ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
		
	СтандартнаяОбработка = Ложь;
	ФормаИНАГРО_АктРаспределения = ПолучитьСоответствиеВидовОперацийФормам();
	ВыбраннаяФорма = ФормаИНАГРО_АктРаспределения[ВидОперации];
	Если ВыбраннаяФорма = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСоответствиеВидовОперацийФормам() Экспорт

	ФормаИНАГРО_АктРаспределения = Новый Соответствие;
	
	ФормаИНАГРО_АктРаспределения.Вставить(Перечисления.ИНАГРО_ВидыОперацийАктРаспределения.ПоВладельцам, "ФормаДокументаОбщая");
	ФормаИНАГРО_АктРаспределения.Вставить(Перечисления.ИНАГРО_ВидыОперацийАктРаспределения.Сводный,      "ФормаДокументаОбщая");
	
	Возврат ФормаИНАГРО_АктРаспределения;

КонецФункции 

Функция ПолучитьФиксированныйМассивВидовОпераций() Экспорт

	МассивВидовОпераций = Новый Массив;
	СписокВидовОпераций = Новый СписокЗначений;
	
	ЗначенияПеречисления = Метаданные.Перечисления.ИНАГРО_ВидыОперацийАктРаспределения.ЗначенияПеречисления;
	Для Каждого ЗначениеПеречисления Из ЗначенияПеречисления Цикл
		ТекущийВидОперации = Перечисления.ИНАГРО_ВидыОперацийАктРаспределения[ЗначениеПеречисления.Имя];
		МассивВидовОпераций.Добавить(ТекущийВидОперации);
	КонецЦикла;
		
	Возврат Новый ФиксированныйМассив(МассивВидовОпераций);

КонецФункции

#КонецОбласти 

#КонецЕсли