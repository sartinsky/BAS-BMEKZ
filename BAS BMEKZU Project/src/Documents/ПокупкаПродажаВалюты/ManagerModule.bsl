#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура УстановитьСчетаУчета(Объект) Экспорт 
	
	ИспользуемыеКлассыСчетовРасходов = УчетнаяПолитика.ИспользуемыеКлассыСчетовРасходов(Объект.Организация, Объект.Дата);
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийПокупкаПродажаВалюты.ПродажаВалюты Тогда 
		
		СчетУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетУчетаПрочий(Объект.Организация, Перечисления.ВидыПрочихСчетовУчета.СчетЗатратКурсоваяРазницаПокупкаПродажаВалюты);
		Объект.СчетЗатратКурсоваяРазница	= СчетУчета.СчетУчетаБУ;
		Объект.Субконто1ЗатратКурсоваяРазница 		= СчетУчета.Субконто1;
		Объект.Субконто2ЗатратКурсоваяРазница 		= СчетУчета.Субконто2;
		Объект.Субконто3ЗатратКурсоваяРазница 		= СчетУчета.Субконто3;
		Если НЕ ЗначениеЗаполнено(Объект.СчетЗатратКурсоваяРазница) Тогда
			Если ИспользуемыеКлассыСчетовРасходов = Перечисления.КлассыСчетовРасходов.Класс8 Тогда
				Объект.СчетЗатратКурсоваяРазница = ПланыСчетов.Хозрасчетный.ДругиеОперационныеЗатраты;
			Иначе
				Объект.СчетЗатратКурсоваяРазница = ПланыСчетов.Хозрасчетный.ЗатратыОтОперационнойКурсовойРазницы;
			КонецЕсли;
		КонецЕсли;
		
		СчетУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетУчетаПрочий(Объект.Организация, Перечисления.ВидыПрочихСчетовУчета.СчетДоходовКурсоваяРазницаПокупкаПродажаВалюты);
		Объект.СчетДоходовКурсоваяРазница			= СчетУчета.СчетУчетаБУ;
		Объект.Субконто1ДоходовКурсоваяРазница 	= СчетУчета.Субконто1;
		Объект.Субконто2ДоходовКурсоваяРазница 	= СчетУчета.Субконто2;
		Объект.Субконто3ДоходовКурсоваяРазница 	= СчетУчета.Субконто3;
		Если НЕ ЗначениеЗаполнено(Объект.СчетДоходовКурсоваяРазница) Тогда
			Объект.СчетДоходовКурсоваяРазница = ПланыСчетов.Хозрасчетный.ДоходОтОперационнойКурсовойРазницы;
		КонецЕсли;
		
		СчетУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетУчетаПрочий(Объект.Организация, Перечисления.ВидыПрочихСчетовУчета.СчетЗатратСебестоимостьПродажаВалюты);
		Объект.СчетЗатратСебестоимость			= СчетУчета.СчетУчетаБУ;
		Объект.Субконто1ЗатратСебестоимость 	= СчетУчета.Субконто1;
		Объект.Субконто2ЗатратСебестоимость 	= СчетУчета.Субконто2;
		Объект.Субконто3ЗатратСебестоимость 	= СчетУчета.Субконто3;
		Если НЕ ЗначениеЗаполнено(Объект.СчетЗатратСебестоимость) Тогда
			Если ИспользуемыеКлассыСчетовРасходов = Перечисления.КлассыСчетовРасходов.Класс8 Тогда
				Объект.СчетЗатратСебестоимость = ПланыСчетов.Хозрасчетный.ДругиеОперационныеЗатраты;
			Иначе
				Объект.СчетЗатратСебестоимость = ПланыСчетов.Хозрасчетный.СебестоимостьРеализованнойИностраннойВалюты;
			КонецЕсли;
		КонецЕсли;
		
		СчетУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетУчетаПрочий(Объект.Организация, Перечисления.ВидыПрочихСчетовУчета.СчетДоходовСебестоимостьПродажаВалюты);
		Объект.СчетДоходовСебестоимость		= СчетУчета.СчетУчетаБУ;
		Объект.Субконто1ДоходовСебестоимость 	= СчетУчета.Субконто1;
		Объект.Субконто2ДоходовСебестоимость 	= СчетУчета.Субконто2;
		Объект.Субконто3ДоходовСебестоимость 	= СчетУчета.Субконто3;
		Если НЕ ЗначениеЗаполнено(Объект.СчетДоходовСебестоимость) Тогда
			Объект.СчетДоходовСебестоимость = ПланыСчетов.Хозрасчетный.ДоходОтРеализацииИностраннойВалюты;
		КонецЕсли;
		
	Иначе //Если ВидОперации = Перечисления.ВидыОперацийПокупкаПродажаВалюты.ПокупкаВалюты Тогда 
		
		// Исторически используются реквизиты Счет...КурсоваяРазница, но по смыслу это счета доходов и затрат от продажи, так и заполняем
		СчетУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетУчетаПрочий(Объект.Организация, Перечисления.ВидыПрочихСчетовУчета.СчетЗатратСебестоимостьПродажаВалюты);
		Объект.СчетЗатратКурсоваяРазница	= СчетУчета.СчетУчетаБУ;
		Объект.Субконто1ЗатратКурсоваяРазница 		= СчетУчета.Субконто1;
		Объект.Субконто2ЗатратКурсоваяРазница 		= СчетУчета.Субконто2;
		Объект.Субконто3ЗатратКурсоваяРазница 		= СчетУчета.Субконто3;
		Если НЕ ЗначениеЗаполнено(Объект.СчетЗатратКурсоваяРазница) Тогда
			Если ИспользуемыеКлассыСчетовРасходов = Перечисления.КлассыСчетовРасходов.Класс8 Тогда
				Объект.СчетЗатратКурсоваяРазница = ПланыСчетов.Хозрасчетный.ДругиеОперационныеЗатраты;
			Иначе
				Объект.СчетЗатратКурсоваяРазница = ПланыСчетов.Хозрасчетный.СебестоимостьРеализованнойИностраннойВалюты;
			КонецЕсли;
		КонецЕсли;
		
		СчетУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетУчетаПрочий(Объект.Организация, Перечисления.ВидыПрочихСчетовУчета.СчетДоходовСебестоимостьПродажаВалюты);
		Объект.СчетДоходовКурсоваяРазница			= СчетУчета.СчетУчетаБУ;
		Объект.Субконто1ДоходовКурсоваяРазница 	= СчетУчета.Субконто1;
		Объект.Субконто2ДоходовКурсоваяРазница 	= СчетУчета.Субконто2;
		Объект.Субконто3ДоходовКурсоваяРазница 	= СчетУчета.Субконто3;
		Если НЕ ЗначениеЗаполнено(Объект.СчетДоходовКурсоваяРазница) Тогда
			Объект.СчетДоходовКурсоваяРазница = ПланыСчетов.Хозрасчетный.ДоходОтРеализацииИностраннойВалюты;
		КонецЕсли;

	КонецЕсли;
	
	СчетУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетУчетаПрочий(Объект.Организация, Перечисления.ВидыПрочихСчетовУчета.СчетЗатратКомиссионныеПокупкаПродажаВалюты);
	Объект.СчетЗатратКомиссионные			= СчетУчета.СчетУчетаБУ;
	Объект.Субконто1ЗатратКомиссионные 	= СчетУчета.Субконто1;
	Объект.Субконто2ЗатратКомиссионные 	= СчетУчета.Субконто2;
	Объект.Субконто3ЗатратКомиссионные 	= СчетУчета.Субконто3;
	
	Если НЕ ЗначениеЗаполнено(Объект.СчетЗатратКомиссионные) Тогда
		Если ИспользуемыеКлассыСчетовРасходов = Перечисления.КлассыСчетовРасходов.Класс8 Тогда
			Объект.СчетЗатратКомиссионные = ПланыСчетов.Хозрасчетный.ДругиеОперационныеЗатраты;
		Иначе
			Объект.СчетЗатратКомиссионные = ПланыСчетов.Хозрасчетный.АдминистративныеРасходы;
		КонецЕсли;
	КонецЕсли;
	
	СчетУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетУчетаПрочий(Объект.Организация, Перечисления.ВидыПрочихСчетовУчета.СчетЗатратПенсионныйПродажаВалюты);
	Объект.СчетЗатратПенсионный			= СчетУчета.СчетУчетаБУ;
	Объект.Субконто1ЗатратПенсионный 		= СчетУчета.Субконто1;
	Объект.Субконто2ЗатратПенсионный 		= СчетУчета.Субконто2;
	Объект.Субконто3ЗатратПенсионный 		= СчетУчета.Субконто3;
	Если НЕ ЗначениеЗаполнено(Объект.СчетЗатратПенсионный) Тогда
		Если ИспользуемыеКлассыСчетовРасходов = Перечисления.КлассыСчетовРасходов.Класс8 Тогда
			Объект.СчетЗатратПенсионный = ПланыСчетов.Хозрасчетный.ДругиеОперационныеЗатраты;
		Иначе
			Объект.СчетЗатратПенсионный = ПланыСчетов.Хозрасчетный.АдминистративныеРасходы;
		КонецЕсли;
	КонецЕсли;

	
КонецПроцедуры

Процедура ПересчитатьСуммы(Объект) Экспорт
	
	СрезНалогов = РегистрыСведений.ШкалаСтавокНалогов.ПолучитьПоследнее(Объект.Дата, Новый Структура("Налог", Справочники.Налоги.ПенсионныйВалюта));
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийПокупкаПродажаВалюты.ПокупкаВалюты Тогда
		СуммаПенсионныйНовый = Объект.СуммаГривневая*СрезНалогов.Ставка;
		Если СуммаПенсионныйНовый <> Объект.СуммаПенсионный Тогда
			Объект.СуммаПенсионный = СуммаПенсионныйНовый;
		КонецЕсли;
		СуммаДокументаНовая = Объект.СуммаГривневая + Объект.СуммаКомиссионные + Объект.СуммаПенсионный;
		Если Объект.СуммаДокумента <> СуммаДокументаНовая Тогда
			Объект.СуммаДокумента = СуммаДокументаНовая;
		КонецЕсли; 
	Иначе	
		Если Объект.СуммаПенсионный <> 0 Тогда
			Объект.СуммаПенсионный = 0;
		КонецЕсли;
		СуммаДокументаНовая = Объект.СуммаГривневая - Объект.СуммаКомиссионные;
		Если Объект.СуммаДокумента <> СуммаДокументаНовая Тогда
			Объект.СуммаДокумента = СуммаДокументаНовая;
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры	

Процедура ЗаполнитьПоЗаявке(Объект) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Объект.Заявка) Тогда
		Возврат;
	КонецЕсли; 
	
	ДанныеЗаявки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Заявка, "ВидОперации,
			|Банк, Валюта, СуммаГривневая, СуммаВалютная, Комиссионные");
	
	Объект.ВидОперации 	= ДанныеЗаявки.ВидОперации;
	Объект.Банк 		= ДанныеЗаявки.Банк;
	Объект.Валюта 		= ДанныеЗаявки.Валюта;
	Объект.СуммаГривневая 	 = ДанныеЗаявки.СуммаГривневая;
	Объект.СуммаВалютная 	 = ДанныеЗаявки.СуммаВалютная;
	Объект.СуммаКомиссионные = ДанныеЗаявки.СуммаГривневая * ДанныеЗаявки.Комиссионные/100;
	ПересчитатьСуммы(Объект);
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Покупка/продажа валюты""';uk='Реєстр документів ""Купівля/продаж валюти""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли