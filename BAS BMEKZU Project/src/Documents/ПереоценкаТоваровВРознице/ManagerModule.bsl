#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет реквизиты НалоговоеНазначение в строке табличной части.
Процедура ЗаполнитьНалоговыеРеквизитыВСтрокеТабЧасти(ДанныеОбъекта, СтрокаДанных, ЗаполнятьНУ = Истина, СведенияОНоменклатуре = Неопределено) Экспорт
	
	Если ЗаполнятьНУ  = Истина Тогда
		
		Если СведенияОНоменклатуре = Неопределено Тогда
			СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре( 
			СтрокаДанных.Номенклатура, ДанныеОбъекта);
		КонецЕсли;
		
		Если ДанныеОбъекта.ЕстьНДС Тогда
			СтрокаДанных.НалоговоеНазначение = СведенияОНоменклатуре.СчетаУчета.НалоговоеНазначение;		 
		КонецЕсли; 
		Если ДанныеОбъекта.РазделятьПоСтавкамНДС Тогда
			СтрокаДанных.СтавкаНДСВРознице = СведенияОНоменклатуре.СтавкаНДСВРознице;
		КонецЕсли; 
		
	ИначеЕсли ЗаполнятьНУ = Ложь Тогда
		
		СтрокаДанных.НалоговоеНазначение  = Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка();
		СтрокаДанных.СтавкаНДСВРознице 	  = Неопределено;
		
	КонецЕсли;

КонецПроцедуры // ЗаполнитьНалоговыеРеквизитыВСтрокеТабЧасти()

Процедура ЗаполнитьНалоговыеРеквизитыВТабЧастиТовары(Объект, ЗаполнятьНУ=Истина) Экспорт
	
	ДанныеОбъекта = Новый Структура("Дата,Организация,Склад,ЕстьНДС,РазделятьПоСтавкамНДС");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта,Объект);
	ДанныеОбъекта.ЕстьНДС = УчетнаяПолитика.ПлательщикНДС(Объект.Организация, НачалоМесяца(Объект.Дата));

	БУ = ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ.ПолучитьОбъект();
	ДанныеОбъекта.РазделятьПоСтавкамНДС  = ?(БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС, "ВидСубконто") = Неопределено, Ложь, Истина);
	
	ТабличнаяЧасть = Объект.Товары;
	
	СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
		ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "Номенклатура", Истина), ДанныеОбъекта);
	
	Для каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		СведенияОНоменклатуре = СоответствиеСведенийОНоменклатуре.Получить(СтрокаТабличнойЧасти.Номенклатура);
		ЗаполнитьНалоговыеРеквизитыВСтрокеТабЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ЗаполнятьНУ, СведенияОНоменклатуре);
	КонецЦикла;
		
КонецПроцедуры // ЗаполнитьНалоговыеРеквизитыВТабЧастиТовары()

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти 

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Переоценка товаров в рознице
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПереоценкаТоваровВНТТ";
	КомандаПечати.Представление = НСтр("ru='Переоценка товаров в рознице';uk='Переоцінка товарів у роздробі'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Переоценка товаров в рознице""';uk='Реєстр документів ""Переоцінка товарів у роздробі""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры //ДобавитьКомандыПечати()

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьПереоценкиТоваровВРознице(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПереоценкаТоваровВРознице_ПереоценкаТоваровВРознице";

	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
 	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", ДополнительнаяКолонкаПечатныхФормДокументов);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПереоценкаТоваровВНТТ.Ссылка,
	|	ПереоценкаТоваровВНТТ.Номер,
	|	ПереоценкаТоваровВНТТ.Дата,
	|	ПереоценкаТоваровВНТТ.Организация,
	|	ПереоценкаТоваровВНТТ.Организация КАК Поставщик,
	|	ПереоценкаТоваровВНТТ.Склад КАК Получатель,
	|	ПереоценкаТоваровВНТТ.Склад.Представление КАК ПредставлениеПолучателя,
	|	ПереоценкаТоваровВНТТ.Ответственный.ФизическоеЛицо.Наименование КАК Отпустил,
	|	ПереоценкаТоваровВНТТ.Товары.(
	|		НомерСтроки,
	|		Количество,
	|		Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		ВЫБОР
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|				ТОГДА ПереоценкаТоваровВНТТ.Товары.Номенклатура.Артикул
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|				ТОГДА ПереоценкаТоваровВНТТ.Товары.Номенклатура.Код
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|				ТОГДА """"
	|		КОНЕЦ КАК КодАртикул,
	|		Номенклатура.БазоваяЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|		ЦенаВРозницеСтарая,
	|		ЦенаВРознице
	|	)
	|ИЗ
	|	Документ.ПереоценкаТоваровВРознице КАК ПереоценкаТоваровВНТТ
	|ГДЕ
	|	ПереоценкаТоваровВНТТ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПереоценкаТоваровВНТТ.Дата,
	|	ПереоценкаТоваровВНТТ.Ссылка,
	|	ПереоценкаТоваровВНТТ.Товары.НомерСтроки";

	Шапка = Запрос.Выполнить().Выбрать();

	ПервыйДокумент = Истина;

	Пока Шапка.Следующий() Цикл

		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

  		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПереоценкаТоваровВРознице.ПФ_MXL_ПереоценкаТоваровВРознице");

		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка,
																					НСтр("ru='Переоценка товаров в рознице';uk='Переоцінка товарів у роздробі'",КодЯзыкаПечать),КодЯзыкаПечать);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(Шапка);

		СведенияОПоставщике 	 = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата,,,КодЯзыкаПечать);

		ОбластьМакета.Параметры.ПредставлениеПоставщика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,",,КодЯзыкаПечать);	
		ОбластьМакета.Параметры.РеквизитыПоставщика =     ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПоставщике, "НомерСчета,Банк,МФО,/,ЮридическийАдрес,Телефоны,/,КодПоЕДРПОУ,КодПоДРФО,",,КодЯзыкаПечать);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьШапки = ?(ВыводитьКоды, "ШапкаСКодом", "ШапкаТаблицы");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ОбластьМакета.Параметры.ИмяКодАртикул = "Артикул";
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ОбластьМакета.Параметры.ИмяКодАртикул = "Код";
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьСтроки = ?(ВыводитьКоды,	"СтрокаСКодом", "Строка");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);

		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
				Продолжить;
			КонецЕсли;

			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакета.Параметры.Товар = ВыборкаСтрокТовары.Товар;
			ТабличныйДокумент.Вывести(ОбластьМакета);

		КонецЦикла;

		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьПереоценкиТоваровВРознице()

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт

	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета ПереоценкаТоваровВНТТ формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПереоценкаТоваровВНТТ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПереоценкаТоваровВНТТ", НСтр("ru='Переоценка товаров в рознице';uk='Переоцінка товарів у роздробі'"),
			ПечатьПереоценкиТоваровВРознице(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ПереоценкаТоваровВРознице.ПФ_MXL_ПереоценкаТоваровВРознице", , Истина);
	КонецЕсли;
	
	//ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	

КонецПроцедуры  //Печать

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Склад");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#КонецЕсли