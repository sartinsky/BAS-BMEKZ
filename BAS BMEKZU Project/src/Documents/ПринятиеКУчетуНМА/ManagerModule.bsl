#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Форма НА-1
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НА1";
	КомандаПечати.Представление = НСтр("ru='Форма НА-1';uk='Форма НА-1'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Принятие к учету НМА""';uk='Реєстр документів ""Прийняття до обліку НМА""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

// Функция формирует табличный документ с типовой печатной формой НА-1
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьНА1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета)
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент   = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПринятиеКУчетуНМА_НА1";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПринятиеКУчетуНМА.ПФ_MXL_UK_НА1");
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка"      , Ссылка);
		Запрос.УстановитьПараметр("НаДату"      , Ссылка.Дата);
		Запрос.УстановитьПараметр("Организация" , Ссылка.Организация);
		Запрос.УстановитьПараметр("Руководитель", Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
		Запрос.УстановитьПараметр("Бухгалтер"   , Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПринятиеКУчетуНМА.Организация                            КАК Организация,
		|	ПринятиеКУчетуНМА.Организация.НаименованиеПолное         КАК НаименованиеПолноеОрганизации,
		|	ПринятиеКУчетуНМА.Организация.КодПоЕДРПОУ                КАК КодПоЕДРПОУ,
		|	Руководитель.ФизическоеЛицо                              КАК ФИОРук,
		|	Бухгалтер.ФизическоеЛицо                                 КАК ФИОБух,
		|	ПринятиеКУчетуНМА.Дата                                   КАК ДатаДок,
		|	ПринятиеКУчетуНМА.Номер                                  КАК НомерДок,
		|	ПринятиеКУчетуНМА.НематериальныйАктив.НаименованиеПолное КАК НаименованиеПолное,
		|	ПринятиеКУчетуНМА.НематериальныйАктив.ПрочиеСведения     КАК ПрочиеСведения,
		|	ПринятиеКУчетуНМА.НематериальныйАктив.Код                КАК ИнвентарныйНомер,
		|	ПринятиеКУчетуНМА.СчетУчетаБУ                            КАК СчетУчетаБУ,
		|	ПринятиеКУчетуНМА.СчетУчетаБУВнеоборотногоАктива         КАК СчетУчетаБУВнеоборотногоАктива,
		|	ПринятиеКУчетуНМА.СтоимостьБУ                            КАК ПервоначальнаяСтоимость,
		|	ПринятиеКУчетуНМА.СрокПолезногоИспользованияБУ           КАК СрокИспользования,
		|	ПринятиеКУчетуНМА.ЛиквидационнаяСтоимостьБУ              КАК ЛиквидационнаяСтоимость
		|ИЗ
		|	Документ.ПринятиеКУчетуНМА КАК ПринятиеКУчетуНМА
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
		|		                    &НаДату,
		|		                    СтруктурнаяЕдиница = &Организация
		|			                И ОтветственноеЛицо = &Бухгалтер) КАК Бухгалтер
		|		ПО ПринятиеКУчетуНМА.Организация = Бухгалтер.СтруктурнаяЕдиница
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
		|		                    &НаДату,
		|		                    СтруктурнаяЕдиница = &Организация
		|			                И ОтветственноеЛицо = &Руководитель) КАК Руководитель
		|		ПО ПринятиеКУчетуНМА.Организация = Руководитель.СтруктурнаяЕдиница
		|ГДЕ
		|	ПринятиеКУчетуНМА.Ссылка = &Ссылка";
		Выборка = Запрос.Выполнить().Выбрать();
		
		ВыборкаПоКомиссии = ОбщегоНазначенияБПВызовСервера.ПолучитьСведенияОКомиссии(Ссылка);
		
		ОбластьМакета = Макет.ПолучитьОбласть("НА1");
		Параметры     = ОбластьМакета.Параметры;
		
		Если Выборка.Следующий() Тогда
			
			Если Выборка.СрокИспользования <> 0 Тогда
				
				Параметры.ГодичнаяСуммаАмортизации = 12 * (Выборка.ПервоначальнаяСтоимость 
														   - Выборка.ЛиквидационнаяСтоимость)
													 / Выборка.СрокИспользования;
				
			КонецЕсли;
			
			Параметры.Заполнить(Выборка);
			Параметры.Заполнить(ВыборкаПоКомиссии);
			
			
			Параметры.КодПоЕДРПОУ = Выборка.КодПоЕДРПОУ;
			Параметры.ФИОРук      = ФизическиеЛицаБП.ФамилияИнициалыФизЛица(Выборка.ФИОРук);
			Параметры.ФИОБух      = ФизическиеЛицаБП.ФамилияИнициалыФизЛица(Выборка.ФИОБух);
			
			ДанныеФизЛица = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Ссылка.Организация, Ссылка.МОЛБУ, Ссылка.Дата);
			ДанныеМОЛ = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(
										Ссылка.Организация, 
										Ссылка.МОЛБУ, 
										Ссылка.Дата, 
										Истина // ФИОКратко 
									 );
			Параметры.МОЛДолжность	= ДанныеФизЛица.Должность;
			Параметры.МОЛФИО 		= ДанныеМОЛ.Представление;

			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;	
		
	Возврат ТабДокумент;

КонецФункции // ПечатьНА1()

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НА1") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		ИмяМакета = "";
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "НА1",
			НСтр("ru='Форма НА-1';uk='Форма НА-1'"), ПечатьНА1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета),, ИмяМакета);
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "ВидОперации");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли