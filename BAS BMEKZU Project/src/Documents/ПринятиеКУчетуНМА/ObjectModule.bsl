#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА
 
// Процедура определяет параметры учетной политики
//
Процедура ПодготовитьПараметрыУчетнойПолитики(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	СтруктураШапкиДокумента.Вставить("ЕстьНалогНаПрибыль"             , УчетнаяПолитика.ПлательщикНалогаНаПрибыль(СтруктураШапкиДокумента.Организация, КонецМесяца(СтруктураШапкиДокумента.Дата)));
	СтруктураШапкиДокумента.Вставить("ЕстьНалогНаПрибыльДо2015"		  , УчетнаяПолитика.ПлательщикНалогаНаПрибыльДо2015(СтруктураШапкиДокумента.Организация, КонецМесяца(СтруктураШапкиДокумента.Дата)));
	СтруктураШапкиДокумента.Вставить("ЕстьНДС"                        , УчетнаяПолитика.ПлательщикНДС(СтруктураШапкиДокумента.Организация, КонецМесяца(СтруктураШапкиДокумента.Дата)));
	
КонецПроцедуры // ПодготовитьПараметрыУчетнойПолитики()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Процедура формирования движений регистров
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок)

	ДвиженияПоРегистрамРегл(СтруктураШапкиДокумента, Отказ, Заголовок);
	
КонецПроцедуры // ФормированиеДвижений()

// Процедура формирования движений регл. регистров
Процедура ДвиженияПоРегистрамРегл(СтруктураШапкиДокумента,Отказ,Заголовок)
	
	// Движения по регистру Состояние
	Движение = Движения.СостоянияНМАОрганизаций.Добавить();
	Движение.Период                      = СтруктураШапкиДокумента.Дата;
	Движение.НематериальныйАктив         = СтруктураШапкиДокумента.НематериальныйАктив;
	Движение.Организация                 = СтруктураШапкиДокумента.Организация;
	Движение.Состояние                   = Перечисления.ВидыСостоянийНМА.ПринятКУчету;
	
	СостояниеНМА            = Движения.СостоянияНМАОрганизаций;
	УправлениеНеоборотнымиАктивами.ПроверкаДублированияЗаписейСостоянийНМА(СтруктураШапкиДокумента.Организация,
	                                        СтруктураШапкиДокумента.Дата,
											СостояниеНМА, Отказ, Заголовок);
	
	Если Отказ Тогда
		
		// НМА уже было принято к учету ранее.
		// Повторное принятие к учету НМА недопустимо.
		Возврат;
		
	КонецЕсли;
	
	// Проверим наличие остатка на счете НМА 
	Если ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуНМА.НематериальныеАктивы Тогда										
		
		СтруктураОтбора = Новый Структура("Счет, Субконто1, Организация, НалоговоеНазначение");
		СтруктураОтбора.Счет 		= СтруктураШапкиДокумента.СчетУчетаБУВнеоборотногоАктива;
		СтруктураОтбора.Субконто1 	= СтруктураШапкиДокумента.НематериальныйАктив;
		СтруктураОтбора.Организация	= СтруктураШапкиДокумента.Организация;
		СтруктураОтбора.НалоговоеНазначение	= СтруктураШапкиДокумента.НалоговоеНазначение;
		
		ТаблицаОстатков	= РегистрыБухгалтерии.Хозрасчетный.Остатки(Дата, 
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы,
		СтруктураОтбора);
		
		ОстатокБУ 	= 0;
		ОстатокНУ 	= 0;
		
		Если ТаблицаОстатков.Количество() > 0 Тогда
			
			ОстатокБУ = ТаблицаОстатков[0].СуммаОстатокДт;
			ОстатокНУ = ТаблицаОстатков[0].СуммаНУОстатокДт;
			
		КонецЕсли;
		
		Если СтруктураШапкиДокумента.СтоимостьБУ > ОстатокБУ Тогда
			
			ТекстСообщения = НСтр("ru='По бухгалтерскому учету остатка на счете инвестиций (';uk='По бухгалтерському обліку залишку на рахунку інвестицій ('",Локализация.КодЯзыкаИнформационнойБазы()) + Формат(ОстатокБУ,"ЧЦ=15; ЧДЦ=2; ЧН=0.00")
					+ НСтр("ru=') не достаточно для проведения операции!';uk=') недостатньо для проведення операції!'",Локализация.КодЯзыкаИнформационнойБазы());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			
		КонецЕсли; 								
		
		Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыльДо2015 И СтруктураШапкиДокумента.СтоимостьНУ > ОстатокНУ Тогда
			
			ТекстСообщения = НСтр("ru='По налоговому учету остатка на счете непринятых к учету НМА (';uk='По податковому обліку залишку на рахунку неприйнятих до обліку НМА ('",Локализация.КодЯзыкаИнформационнойБазы()) + Формат(ОстатокНУ,"ЧЦ=15; ЧДЦ=2; ЧН=0.00")
					+ НСтр("ru=') не достаточно для проведения операции!';uk=') недостатньо для проведення операції!'",Локализация.КодЯзыкаИнформационнойБазы());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);

		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуНМА.ОбъектыСтроительства Тогда
		
		СтруктураСтоимости =  УправлениеНеоборотнымиАктивами.РасчитатьСтоимостьОбъектаСтроительства(СтруктураШапкиДокумента.СчетУчетаБУВнеоборотногоАктива, 
																СтруктураШапкиДокумента.ОбъектСтроительства, 
																СтруктураШапкиДокумента.Организация,
																СтруктураШапкиДокумента.Дата);
		
		ВыборкаСтоимостьБУ = СтруктураСтоимости.СтоимостьБУ;
		ВыборкаСтоимостьНУ = СтруктураСтоимости.СтоимостьНУ;
		
		Если СтоимостьБУ > ВыборкаСтоимостьБУ Тогда     
			
			ТекстСообщения = НСтр("ru='Стоимость (БУ) для нематериального актива (';uk='Вартість (БО) для нематеріального активу ('",Локализация.КодЯзыкаИнформационнойБазы()) + Строка(НематериальныйАктив)  
						+ НСтр("ru=') превышает стоимость объекта строительства = ';uk="") перевищує вартість об'єкту будівництва = """,Локализация.КодЯзыкаИнформационнойБазы()) + Формат(ВыборкаСтоимостьБУ,"ЧЦ=15; ЧДЦ=2; ЧН=0.00");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
            
		КонецЕсли;	
		
		Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыльДо2015 И СтоимостьНУ > ВыборкаСтоимостьНУ Тогда

			ТекстСообщения = НСтр("ru='Стоимость (НУ) для нематериального актива ""';uk='Вартість (ПО) для нематеріального активу ('",Локализация.КодЯзыкаИнформационнойБазы()) + Строка(НематериальныйАктив) 
						+ НСтр("ru=') превышает стоимость объекта строительства = ';uk="") перевищує вартість об'єкту будівництва = """,Локализация.КодЯзыкаИнформационнойБазы()) + Формат(ВыборкаСтоимостьНУ,"ЧЦ=15; ЧДЦ=2; ЧН=0.00");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);

		КонецЕсли;	
		
	КонецЕсли;
	
	Проводки = Движения.Хозрасчетный;
	
	Проводка = Проводки.Добавить();
	Проводка.Активность = Истина;
	Проводка.Период     = СтруктураШапкиДокумента.Дата;
	
	Проводка.Организация  = СтруктураШапкиДокумента.Организация;
	
	Если ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуНМА.ВводНачальныхОстатков Тогда
		Проводка.Содержание = НСтр("ru='Ввод начальных остатков НМА';uk='Введення початкових залишків НМА'",Локализация.КодЯзыкаИнформационнойБазы());
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуНМА.НематериальныеАктивы Тогда
		Проводка.Содержание = НСтр("ru='Принят к учету НМА';uk='Прийнятий до обліку НМА'",Локализация.КодЯзыкаИнформационнойБазы());
	Иначе
		Проводка.Содержание = НСтр("ru='Списана стоим. объекта строительства';uk=""Списана варт. об'єкта будівництва""",Локализация.КодЯзыкаИнформационнойБазы());
	КонецЕсли;	
	
	Проводка.НомерЖурнала = НСтр("ru='НА';uk='НА'",Локализация.КодЯзыкаИнформационнойБазы());
	Проводка.Сумма        = СтруктураШапкиДокумента.СтоимостьБУ;

	Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыль ИЛИ СтруктураШапкиДокумента.ЕстьНДС  Тогда
		
		Проводка.НалоговоеНазначениеДт  = СтруктураШапкиДокумента.НалоговоеНазначение;
		Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыль Тогда
			Если СтруктураШапкиДокумента.НалоговоеНазначение <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда 
				Проводка.СуммаНУДт 			= СтруктураШапкиДокумента.СтоимостьНУ;
			КонецЕсли;	
		КонецЕсли;	
		
		Проводка.НалоговоеНазначениеКт  = СтруктураШапкиДокумента.НалоговоеНазначение;
		Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыльДо2015 Тогда
			Проводка.СуммаНУКт 				= СтруктураШапкиДокумента.СтоимостьНУ;
		КонецЕсли;	
		
	КонецЕсли;
	
	НеОблНДСДеятельность = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность;
	НепроизводственноеНМА = (СтруктураШапкиДокумента.НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность);
	
	Если НЕ СтруктураШапкиДокумента.ЕстьНДС Тогда
		// организация - не плательщик НДС. 
		Если НепроизводственноеНМА Тогда
			// Непроизводственное
			Проводка.НалоговоеНазначениеДт = СтруктураШапкиДокумента.НалоговоеНазначение;
		Иначе	
			Проводка.НалоговоеНазначениеДт = НеОблНДСДеятельность;
		КонецЕсли;	
		
		Проводка.НалоговоеНазначениеКт = НеОблНДСДеятельность;
	КонецЕсли;	
	
	Проводка.СчетДт = СтруктураШапкиДокумента.СчетУчетаБУ;
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", СтруктураШапкиДокумента.НематериальныйАктив);

	Проводка.СчетКт = СтруктураШапкиДокумента.СчетУчетаБУВнеоборотногоАктива;
		
	Если СчетУчетаБУВнеоборотногоАктива.ВидыСубконто.Количество() > 0 Тогда
		
		Если ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуНМА.ОбъектыСтроительства Тогда
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОбъектыСтроительства", СтруктураШапкиДокумента.ОбъектСтроительства);
		Иначе
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", СтруктураШапкиДокумента.НематериальныйАктив);
		КонецЕсли;	
			
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуНМА.ВводНачальныхОстатков И (СтруктураШапкиДокумента.НакопленнаяАмортизацияБУ <> 0 ИЛИ СтруктураШапкиДокумента.НакопленнаяАмортизацияНУ <> 0) Тогда
			
		Проводка = Проводки.Добавить();
		Проводка.Активность = Истина;
		Проводка.Период     = СтруктураШапкиДокумента.Дата;

		Проводка.Организация  = СтруктураШапкиДокумента.Организация;
		Проводка.Содержание   = НСтр("ru='Накопленная амортизация НМА';uk='Накопичена амортизація НМА'",Локализация.КодЯзыкаИнформационнойБазы());                           
		Проводка.НомерЖурнала = НСтр("ru='НА';uk='НА'",Локализация.КодЯзыкаИнформационнойБазы());
		Проводка.Сумма        = СтруктураШапкиДокумента.НакопленнаяАмортизацияБУ;

		Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыль ИЛИ СтруктураШапкиДокумента.ЕстьНДС Тогда
			
			Проводка.НалоговоеНазначениеДт  = СтруктураШапкиДокумента.НалоговоеНазначение;
			
			Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыль Тогда
				Проводка.СуммаНУДт 			= СтруктураШапкиДокумента.НакопленнаяАмортизацияНУ;
			КонецЕсли;	
			
			Проводка.НалоговоеНазначениеКт  = СтруктураШапкиДокумента.НалоговоеНазначение;
			Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыль Тогда
				Если СтруктураШапкиДокумента.НалоговоеНазначение <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда 
					Проводка.СуммаНУКт 			= СтруктураШапкиДокумента.НакопленнаяАмортизацияНУ;
				КонецЕсли;	
			КонецЕсли;	
			
		КонецЕсли;
		
		Если НЕ СтруктураШапкиДокумента.ЕстьНДС Тогда
			// организация - не плательщик НДС. 
			Если НепроизводственноеНМА Тогда
				// Непроизводственное
				Проводка.НалоговоеНазначениеДт = СтруктураШапкиДокумента.НалоговоеНазначение;
				Проводка.НалоговоеНазначениеКт = СтруктураШапкиДокумента.НалоговоеНазначение;
			Иначе	
				Проводка.НалоговоеНазначениеДт = НеОблНДСДеятельность;
				Проводка.НалоговоеНазначениеКт = НеОблНДСДеятельность;
			КонецЕсли;	
		КонецЕсли;	
		
		Проводка.СчетДт = СтруктураШапкиДокумента.СчетУчетаБУВнеоборотногоАктива;
			
		Проводка.СчетКт = СтруктураШапкиДокумента.СчетНачисленияАмортизацииБУ;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", СтруктураШапкиДокумента.НематериальныйАктив);
			
	КонецЕсли;
		
	// Движения по регистру СпособыОтраженияРасходов
	Движение = Движения.СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет.Добавить();
	Движение.Период                  = СтруктураШапкиДокумента.Дата;
	Движение.НематериальныйАктив     = СтруктураШапкиДокумента.НематериальныйАктив;
	Движение.Организация             = СтруктураШапкиДокумента.Организация;
	Движение.СпособОтраженияРасходов = СтруктураШапкиДокумента.СпособОтраженияРасходов;

	// Движения по регистру ПервоначальныеСведения
	Движение = Движения.ПервоначальныеСведенияНМАБухгалтерскийУчет.Добавить();
	Движение.Период                                      = СтруктураШапкиДокумента.Дата;
	Движение.НематериальныйАктив                         = СтруктураШапкиДокумента.НематериальныйАктив;
	Движение.Организация                                 = СтруктураШапкиДокумента.Организация;
	Движение.НачислятьАмортизацию 		                 = СтруктураШапкиДокумента.НачислятьАмортизациюБУ;
	Движение.ПервоначальнаяСтоимость                     = СтруктураШапкиДокумента.СтоимостьБУ;
	Движение.ЛиквидационнаяСтоимость                     = СтруктураШапкиДокумента.ЛиквидационнаяСтоимостьБУ;
	Движение.СпособНачисленияАмортизации                 = СтруктураШапкиДокумента.СпособНачисленияАмортизацииБУ;
	Движение.СрокПолезногоИспользования                  = СтруктураШапкиДокумента.СрокПолезногоИспользованияБУ;
	Движение.ОбъемПродукцииРаботДляВычисленияАмортизации = СтруктураШапкиДокумента.ОбъемПродукцииРаботДляВычисленияАмортизации;

	// Движения по регистру СчетаБухгалтерскогоУчета
	Движение = Движения.СчетаБухгалтерскогоУчетаНМА.Добавить();
	Движение.Период                      = СтруктураШапкиДокумента.Дата;
	Движение.НематериальныйАктив         = СтруктураШапкиДокумента.НематериальныйАктив;
	Движение.Организация                 = СтруктураШапкиДокумента.Организация;
	Движение.СчетУчета                   = СтруктураШапкиДокумента.СчетУчетаБУ;
	Движение.СчетНачисленияАмортизации   = СтруктураШапкиДокумента.СчетНачисленияАмортизацииБУ;

	// Движения по регистру МестонахождениеНМАБухгалтерскийУчет
	Движение = Движения.МестонахождениеНМАБухгалтерскийУчет.Добавить();
	Движение.Период 				= СтруктураШапкиДокумента.Дата;
	Движение.Организация 			= СтруктураШапкиДокумента.Организация;
	Движение.НематериальныйАктив 	= СтруктураШапкиДокумента.НематериальныйАктив;
	Движение.Местонахождение 		= СтруктураШапкиДокумента.ПодразделениеОрганизации;
	Движение.МОЛ 					= СтруктураШапкиДокумента.МОЛБУ;
	
	ДатаНКУ2015 = '2015 01 01';
	ЭтоДокументДо2015 = (Дата < ДатаНКУ2015);
	
	Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыль Тогда
		
		Движение = Движения.ПервоначальныеСведенияНМАНалоговыйУчет.Добавить();
		Движение.НематериальныйАктив        = СтруктураШапкиДокумента.НематериальныйАктив;
		Движение.Организация                = СтруктураШапкиДокумента.Организация;
		Движение.Период                     = СтруктураШапкиДокумента.Дата;
		Движение.НачислятьАмортизацию 	    = СтруктураШапкиДокумента.НачислятьАмортизациюНУ;
		Если СтруктураШапкиДокумента.НалоговоеНазначение <> Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда 
			Движение.ПервоначальнаяСтоимостьНУ  = СтруктураШапкиДокумента.СтоимостьНУ;
		Иначе
			Движение.ПервоначальнаяСтоимостьНУ  = 0;
		КонецЕсли;	
		Движение.СрокПолезногоИспользования = СтруктураШапкиДокумента.СрокПолезногоИспользованияНУ;
		Движение.НалоговоеНазначение        = СтруктураШапкиДокумента.НалоговоеНазначение;
		Движение.НалоговаяГруппаОС          = СтруктураШапкиДокумента.НалоговаяГруппаОС;
		
		Если НЕ ЭтоДокументДо2015 Тогда
			Движение.СпособНачисленияАмортизации = СтруктураШапкиДокумента.СпособНачисленияАмортизацииНУ;
		КонецЕсли;	
		
	Иначе
		
		Движение = Движения.ПервоначальныеСведенияНМАНалоговыйУчет.Добавить();
		Движение.НематериальныйАктив        = СтруктураШапкиДокумента.НематериальныйАктив;
		Движение.Организация                = СтруктураШапкиДокумента.Организация;
		Движение.Период                     = СтруктураШапкиДокумента.Дата;
		Движение.НачислятьАмортизацию 	    = Ложь;
		Движение.ПервоначальнаяСтоимостьНУ  = 0;
		Движение.СрокПолезногоИспользования = 0;
		Движение.НалоговоеНазначение        = СтруктураШапкиДокумента.НалоговоеНазначение;
		Если НЕ СтруктураШапкиДокумента.ЕстьНДС И НЕ НепроизводственноеНМА Тогда
			// организация - не плательщик НДС. 
			Движение.НалоговоеНазначение = НеОблНДСДеятельность;
		КонецЕсли;	
		Движение.НалоговаяГруппаОС          = Справочники.НалоговыеГруппыОсновныхСредств.ПустаяСсылка();
		Если НЕ ЭтоДокументДо2015 Тогда
			Движение.СпособНачисленияАмортизации = СтруктураШапкиДокумента.СпособНачисленияАмортизацииНУ;
		КонецЕсли;	
		
	КонецЕсли;

КонецПроцедуры // ФормированиеДвиженийРегл()

// Процедура формирует структуру шапки документа и дополнительных полей.
//
Процедура ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента) Экспорт

	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	СтруктураШапкиДокумента.Вставить("НалоговоеНазначение", 
	                                 СтруктураШапкиДокумента.НематериальныйАктив.НалоговоеНазначение);
	СтруктураШапкиДокумента.Вставить("ВидНалоговойДеятельности", 
	                                 СтруктураШапкиДокумента.НалоговоеНазначение.ВидНалоговойДеятельности);
	
КонецПроцедуры // ПодготовитьСтруктуруШапкиДокумента()

Процедура ЗаполнитьПоДокументуОснованию(Основание)

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеНМА") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание, Истина); // Копировать подразделение = Истина
		
		ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуНМА.НематериальныеАктивы;
		
		НематериальныеАктивы           = Основание.НМА;
		НематериальныеАктивыКоличество = НематериальныеАктивы.Количество();
		
		ДатаНКУ2015 = '2015 01 01';
		
		Если НематериальныеАктивыКоличество > 0 Тогда
			
			Если НематериальныеАктивыКоличество > 1 Тогда
				
				ТаблицаНематериальныеАктивы = НематериальныеАктивы.Выгрузить();
				СтрокаТЧ = ТаблицаНематериальныеАктивы.ВыбратьСтроку(НСтр("ru='Выберите строку документа.';uk='Виберіть строку документу.'"));
				
			Иначе
				
				СтрокаТЧ = НематериальныеАктивы[0];
				
			КонецЕсли;
			
			Если СтрокаТЧ <> Неопределено Тогда
				
				НематериальныйАктив 			= СтрокаТЧ.НематериальныйАктив;
				СчетУчетаБУВнеоборотногоАктива 	= СтрокаТЧ.СчетУчетаБУ;
				
				
				НаДату = Неопределено;
				МассивСубконто = Новый Массив(1);
				МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы;
				
				//БУ
				СтруктураОтбора = Новый Структура("Счет, Субконто1, Организация");
				СтруктураОтбора.Счет 		= СчетУчетаБУВнеоборотногоАктива;
				СтруктураОтбора.Субконто1 	= НематериальныйАктив;
				СтруктураОтбора.Организация	= Организация;
				ТаблицаОстатков	= РегистрыБухгалтерии.Хозрасчетный.Остатки(НаДату, МассивСубконто, СтруктураОтбора);
				СтоимостьБУ = ТаблицаОстатков.Итог("СуммаОстатокДт");
				СтоимостьНУ = ТаблицаОстатков.Итог("СуммаНУОстатокДт");
				
				Если Дата >= ДатаНКУ2015 Тогда
					СтоимостьНУ = СтоимостьБУ;
				КонецЕсли;	
				
			КонецЕсли;
			
		КонецЕсли;
			
		СчетУчетаБУВнеоборотногоАктива = ПланыСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов;		
		СчетУчетаБУ                    = ПланыСчетов.Хозрасчетный.ДругиеНематериальныеАктивы;
		СчетНачисленияАмортизацииБУ    = ПланыСчетов.Хозрасчетный.НакопленнаяАмортизацияНематериальныхАктивов;
	
	КонецЕсли;

	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура")
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ОбработкаПроведения(Отказ,РежимПроведения)

	Перем Заголовок, СтруктураШапкиДокумента;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияБПВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);

	// Получим данные учетной политики
	ПодготовитьПараметрыУчетнойПолитики(СтруктураШапкиДокумента, Отказ, Заголовок);

	Если НЕ Отказ Тогда
		
		// Формирование движений регистров, бухгалтерских и налоговых проводок.
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок);
		
	КонецЕсли;
	
	Движения.Хозрасчетный.ВыполнитьДействияПередЗаписьюДвижений();

	ПроведениеСервер.ПодготовитьНаборыЗаписейКЗаписиДвижений(ЭтотОбъект);
	
КонецПроцедуры
                                                                       
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНКУ2015 = '2015 01 01';
	Если Дата >= ДатаНКУ2015 Тогда
		СтоимостьНУ = СтоимостьБУ;
	КонецЕсли;	
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Дата);
	
	Если НЕ Отказ Тогда
		Если НЕ ПлательщикНалогаНаПрибыль Тогда
			СтоимостьНУ = 0;
		КонецЕсли; 
	КонецЕсли;	
	
	// Очистка неиспользуемых реквизитов
	
	СпособыНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииНМА;
	
	Если СпособНачисленияАмортизацииБУ = СпособыНачисленияАмортизации.Производственный Тогда
		
		ЛиквидационнаяСтоимостьБУ    = 0;
		СрокПолезногоИспользованияБУ = 0;	
		
	Иначе
				
		ОбъемПродукцииРаботДляВычисленияАмортизации = 0;
		
	КонецЕсли;
	 
	 Если СпособНачисленияАмортизацииБУ = СпособыНачисленияАмортизации.УскоренногоУменьшенияОстатка Тогда
			
		Если СрокПолезногоИспользованияБУ <= 24 Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Для нематериального актива при расчете по способу %1 указан срок полезного использования <%2> мес.!
|Для корректного начисления амортизации срок использования должен быть более 24 месяца.';uk='Для нематеріального активу при розрахунку способом %1 зазначений строк корисного використання <%2> міс.!
|Для коректного нарахування амортизації строк використання повинен бути більше 24 місяців.'"),
											СпособНачисленияАмортизацииБУ, СрокПолезногоИспользованияБУ),);
				
		КонецЕсли; 
	 	
	 КонецЕсли;
	
	Если НематериальныйАктив.НалоговоеНазначение.ВидНалоговойДеятельности = Справочники.ВидыНалоговойДеятельности.НеОблагаемая Тогда
		
		 //УчитываетсяКакОСНУ       = Ложь;
		 НачислятьАмортизациюНУ   = Ложь;
		 НакопленнаяАмортизацияНУ = 0;
		 
	Иначе	 
		
		 НачислятьАмортизациюНУ   = НачислятьАмортизациюБУ;
		
	КонецЕсли;	
	
	Если Дата >= ДатаНКУ2015 Тогда
		Если НЕ ЗначениеЗаполнено(СпособНачисленияАмортизацииНУ) Тогда
			СпособНачисленияАмортизацииНУ = СпособНачисленияАмортизацииБУ;	
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(СрокПолезногоИспользованияНУ) Тогда
			Если  (СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииНМА.Прямолинейный)
				ИЛИ (СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииНМА.Кумулятивный)
				ИЛИ (СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииНМА.УменьшенияОстатка)
				ИЛИ (СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииНМА.УскоренногоУменьшенияОстатка) Тогда
				
				СрокПолезногоИспользованияНУ = СрокПолезногоИспользованияБУ;	
			КонецЕсли;
		КонецЕсли;	
		
	КонецЕсли;	
	
	//Если НЕ НачислятьАмортизациюНУ Тогда
	//	
	//	СрокПолезногоИспользованияНУ = 0;
	//	
	//КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидОперации) Тогда
		
		ВидОперации =  Перечисления.ВидыОперацийПринятияКУчетуНМА.НематериальныеАктивы;
		
	КонецЕсли;

	Если ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуНМА.ВводНачальныхОстатков Тогда
		
		СчетУчетаБУВнеоборотногоАктива = ПланыСчетов.Хозрасчетный.Вспомогательный
		
	Иначе
		
		НакопленнаяАмортизацияБУ = 0;
		НакопленнаяАмортизацияНУ = 0;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;

	ПлательщикНалогаНаПрибыль 	= УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Дата);
	ПлательщикНалогаНаПрибыльС2015	= УчетнаяПолитика.ПлательщикНалогаНаПрибыльС2015(Организация, Дата);
	ПлательщикНДС 				= УчетнаяПолитика.ПлательщикНДС(Организация, Дата);
	
	ДатаНКУ2015 = '2015 01 01';
	
	Если Дата <= Дата(2008,1,1) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеОрганизации");
		МассивНепроверяемыхРеквизитов.Добавить("МОЛБУ");
	КонецЕсли;	
	
	Если НЕ НачислятьАмортизациюБУ Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СпособНачисленияАмортизацииБУ");
		МассивНепроверяемыхРеквизитов.Добавить("СчетНачисленияАмортизацииБУ");
		МассивНепроверяемыхРеквизитов.Добавить("СпособОтраженияРасходов");
	КонецЕсли;
	
	Если НЕ НачислятьАмортизациюБУ ИЛИ НЕ ПлательщикНалогаНаПрибыль Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НалоговаяГруппаОС");
	КонецЕсли;	
	
	Если ПлательщикНалогаНаПрибыль ИЛИ ПлательщикНДС Тогда
		Если НЕ ЗначениеЗаполнено(НематериальныйАктив.НалоговоеНазначение) Тогда
			ТекстСообщения = НСтр("ru='Не заполнено налоговое назначение нематериального актива <%1>';uk='Не заповнене податкове призначення нематеріального активу <%1>'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, НематериальныйАктив);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "НематериальныйАктив", "Объект", Отказ);
		КонецЕсли;	
	КонецЕсли;	
	
	Если НЕ НачислятьАмортизациюБУ ИЛИ СпособНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииНМА.Производственный Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СрокПолезногоИспользованияБУ");
	КонецЕсли;	
	
	Если НачислятьАмортизациюБУ И СпособНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииНМА.Производственный Тогда
		ПроверяемыеРеквизиты.Добавить("ОбъемПродукцииРаботДляВычисленияАмортизации");
	КонецЕсли;	
	
	Если НачислятьАмортизациюБУ И ПлательщикНалогаНаПрибыльС2015 Тогда
		ПроверяемыеРеквизиты.Добавить("СпособНачисленияАмортизацииНУ");
		Если НЕ СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииНМА.Производственный Тогда
			ПроверяемыеРеквизиты.Добавить("СрокПолезногоИспользованияНУ");
		КонецЕсли;
	КонецЕсли;	
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если СпособНачисленияАмортизацииНУ = Перечисления.СпособыНачисленияАмортизацииНМА.Производственный И Дата < Дата('20200401') Тогда
		СтрокаСообщения = НСтр("ru='Бух. учет: Указан Производственный способ аморт. в НУ, амотртизация возможна с 01.04.2020!';uk='Бух. облік: Вказано Виробничий метод аморт. в ПО, амотртізація можлива з 01.04.2020!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначенияБП.ПолучитьРабочуюДату());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

#КонецЕсли