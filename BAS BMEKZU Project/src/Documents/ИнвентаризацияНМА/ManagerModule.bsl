#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Форма НА-4
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НА4";
	КомандаПечати.Представление = НСтр("ru='Форма НА-4';uk='Форма НА-4'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Инвентаризация НМА""';uk='Реєстр документів ""Інвентаризація НМА""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой "НА-4"
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма сличительной ведомости.
//
Функция ПечатьНА4(МассивОбъектов, ОбъектыПечати, ПараметрыВывода) Экспорт
	УстановитьПривилегированныйРежим(Истина);

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияНМА_НА4";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияНМА.ПФ_MXL_UK_НА4");
	КодЯзыкаПечать = "uk";
	
	// Получаем области макета для вывода в табличный документ
	Шапка 				= Макет.ПолучитьОбласть("Шапка");
	ЗаголовокТаблицы 	= Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	СтрокаТаблицы 		= Макет.ПолучитьОбласть("СтрокаТаблицы");
	Подвал 				= Макет.ПолучитьОбласть("Подвал");
	Расписка			= Макет.ПолучитьОбласть("Расписка");
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.ПолеСверху              = 10;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 10;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	//ТабДокумент.АвтоМасштаб             = Истина;
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
	
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацияНМА.Дата КАК Дата,
		|	ИнвентаризацияНМА.Номер КАК Номер,
		|	ИнвентаризацияНМА.Организация КАК Организация,
		|	ИнвентаризацияНМА.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	ИнвентаризацияНМА.ПодразделениеОрганизации.Представление КАК ПодразделениеПредставление,
		|	ИнвентаризацияНМА.ПодразделениеОрганизации.Код КАК ПодразделениеКод,
		|	ИнвентаризацияНМА.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
		|	ИнвентаризацияНМА.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
		|	ИнвентаризацияНМА.ДокументОснованиеВид КАК ДокументОснованиеВид,
		|	ИнвентаризацияНМА.ДокументОснованиеДата КАК ДокументОснованиеДата,
		|	ИнвентаризацияНМА.ДокументОснованиеНомер КАК ДокументОснованиеНомер
		|ИЗ
		|	Документ.ИнвентаризацияНМА КАК ИнвентаризацияНМА
		|ГДЕ
		|	ИнвентаризацияНМА.Ссылка = &Ссылка";
		
		Док = Запрос.Выполнить().Выбрать();
		Док.Следующий();
		
		ВыборкаПоКомиссии = ОбщегоНазначенияБПВызовСервера.ПолучитьСведенияОКомиссии(Ссылка);

		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",      Ссылка);
		Запрос.УстановитьПараметр("Организация", Док.Организация);
		Запрос.УстановитьПараметр("Дата",        Док.Дата);
		Запрос.УстановитьПараметр("СубконтоНМА", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацияНМАНМА.НомерСтроки КАК НомерСтроки,
		|	ИнвентаризацияНМАНМА.НематериальныйАктив КАК НематериальныйАктив,
		|	ИнвентаризацияНМАНМА.НематериальныйАктив.НаименованиеПолное КАК НематериальныйАктивНаименованиеПолное,
		|	ИнвентаризацияНМАНМА.СтоимостьПоДаннымУчета КАК Стоимость,
		|	ИнвентаризацияНМАНМА.СтоимостьФактическая КАК СтоимостьФактическая,
		|	ВЫБОР
		|		КОГДА ИнвентаризацияНМАНМА.НаличиеПоДаннымУчета = ИСТИНА
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Количество,
		|	ВЫБОР
		|		КОГДА ИнвентаризацияНМАНМА.НаличиеФактическое = ИСТИНА
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ФактКоличество,
		|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	ПервоначальныеСведенияНМА.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
		|	АмортизацияБУ.СуммаОстатокКт КАК НакопленнаяАмортизация
		|ИЗ
		|	Документ.ИнвентаризацияНМА.НематериальныеАктивы КАК ИнвентаризацияНМАНМА
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
		|				&Дата,
		|				Организация = &Организация
		|					И НематериальныйАктив В
		|						(ВЫБРАТЬ
		|							ИнвентаризацияНМАНМА.НематериальныйАктив
		|						ИЗ
		|							Документ.ИнвентаризацияНМА.НематериальныеАктивы КАК ИнвентаризацияНМАНМА
		|						ГДЕ
		|							ИнвентаризацияНМАНМА.Ссылка = &Ссылка)) КАК ПервоначальныеСведенияНМА
		|		ПО ИнвентаризацияНМАНМА.НематериальныйАктив = ПервоначальныеСведенияНМА.НематериальныйАктив
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&Дата,
		|				Счет В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации
		|					ИЗ
		|						РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(&Дата, Организация = &Организация
		|							И НематериальныйАктив В
		|								(ВЫБРАТЬ
		|									ИнвентаризацияНМАНМА.НематериальныйАктив
		|								ИЗ
		|									Документ.ИнвентаризацияНМА.НематериальныеАктивы КАК ИнвентаризацияНМАНМА
		|								ГДЕ
		|									ИнвентаризацияНМАНМА.Ссылка = &Ссылка)) КАК СчетаБухгалтерскогоУчета),
		|				&СубконтоНМА,
		|				Организация = &Организация
		|					И Субконто1 В
		|						(ВЫБРАТЬ
		|							ИнвентаризацияНМАНМА.НематериальныйАктив
		|						ИЗ
		|							Документ.ИнвентаризацияНМА.НематериальныеАктивы КАК ИнвентаризацияНМАНМА
		|						ГДЕ
		|							ИнвентаризацияНМАНМА.Ссылка = &Ссылка)) КАК АмортизацияБУ
		|		ПО ИнвентаризацияНМАНМА.НематериальныйАктив = АмортизацияБУ.Субконто1
		|ГДЕ
		|	ИнвентаризацияНМАНМА.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		ТаблицаНМА = Запрос.Выполнить().Выгрузить();
		
		
		// Выведем шапку документа
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Док.Организация, Док.Дата);
		
		Шапка.Параметры.Заполнить(Док);
		Шапка.Параметры.НаименованиеПолноеОрганизации 	= Док.ОрганизацияНаименованиеПолное;
		Шапка.Параметры.ЕДРПОУ 							= БухгалтерскийУчетПереопределяемый.ПолучитьКодОрганизации(СведенияОбОрганизации);
		// краткий формат дат
		Шапка.Параметры.ДокументОснованиеДата 			= Формат(Док.ДокументОснованиеДата, 		"ДЛФ=DD;Л =" + Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.ДатаНачалаИнвентаризации 		= Формат(Док.ДатаНачалаИнвентаризации, 		"ДЛФ=DD;Л =" + Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.ДатаОкончанияИнвентаризации 	= Формат(Док.ДатаОкончанияИнвентаризации, 	"ДЛФ=DD;Л =" + Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		
		//Шапка.Параметры.ДатаДокумента  = Док.Дата;
		
		ТабДокумент.Вывести(Шапка);
		
		
		// Проверим, помещаются ли строка над таблицей, заголовок и первая строка.
		ШапкаТаблицы = Новый Массив;
		ШапкаТаблицы.Добавить(ЗаголовокТаблицы);
		ШапкаТаблицы.Добавить(СтрокаТаблицы);
		
		Если НЕ ТабДокумент.ПроверитьВывод(ШапкаТаблицы) Тогда
				
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		КонецЕсли;
		
		// Сама таблица
		// Выведем заголовок таблицы	
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		
		// Выведем строки таблицы
		Для Каждого СтрокаНМА Из ТаблицаНМА Цикл
			
			СтрокаТаблицы.Параметры.Заполнить(СтрокаНМА);
			
			ТабДокумент.Вывести(СтрокаТаблицы);
			
		КонецЦикла;
		
		
		// Подвал - члены комиссии
		НаименованиеЧленовКомиссии = Новый Массив;
		НаименованиеЧленовКомиссии.Добавить("ПредседательКомиссии");
		НаименованиеЧленовКомиссии.Добавить("ПервыйЧленКомиссии");
		НаименованиеЧленовКомиссии.Добавить("ВторойЧленКомиссии");
		НаименованиеЧленовКомиссии.Добавить("ТретийЧленКомиссии");
		
		// Сначала выведем членов комиссии из выборки
		Для Каждого ЧленКомиссии Из НаименованиеЧленовКомиссии Цикл
			
			Подвал.Параметры[ЧленКомиссии + "Должность"] 	= ВыборкаПоКомиссии[ЧленКомиссии + "Должность"];
			Подвал.Параметры[ЧленКомиссии + "ФИО"] 			= ВыборкаПоКомиссии[ЧленКомиссии + "ФИО"];
			
		КонецЦикла;
		
		
		// Проверим, помещаются ли шапка подписей и одна подпись
		ПодвалРасписка = Новый Массив;
		ПодвалРасписка.Добавить(Подвал);
		ПодвалРасписка.Добавить(Расписка);
		
		Если НЕ ТабДокумент.ПроверитьВывод(ПодвалРасписка) Тогда
				
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		КонецЕсли;
		
		ТабДокумент.Вывести(Подвал);
		
		
		ТабДокумент.Вывести(Расписка);
	
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;	
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьНА4()

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НА4") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "НА4", НСтр("ru='Форма НА-4';uk='Форма НА-4'"), 
			ПечатьНА4(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИнвентаризацияНМА.ПФ_MXL_UK_НА4", , Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "ПодразделениеОрганизации");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли