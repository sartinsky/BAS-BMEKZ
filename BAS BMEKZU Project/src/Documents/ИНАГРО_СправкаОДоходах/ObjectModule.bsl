#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом"

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "Сотрудник");
	
КонецПроцедуры

// Подсистема "Управление доступом"

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
		
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);		
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура Автозаполнение() Экспорт
	
	Отказ = Ложь;
	
    Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указан сотрудник';uk='Не вказаний співробітник'"), ЭтотОбъект, "Сотрудник", "Объект", Отказ);
			
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указана организация';uk='Не зазначена організація'"), ЭтотОбъект, "Организация", "Объект", Отказ);
			
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаНач) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указана дата начала периода';uk='Не вказана дата початку періоду'"), ЭтотОбъект, "ДатаНач", "Объект", Отказ);
			
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаКон) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указана дата окончания периода';uk='Не вказана дата закінчення періоду'"), ЭтотОбъект, "ДатаКон", "Объект", Отказ);
			
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	
	
	Если ВидСправки      = Перечисления.ВидыСправокОДоходах.Произвольная Тогда
		АвтозаполнениеПроизвольная();
	ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Пенсия Тогда	
		АвтозаполнениеПенсия();	
	ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.ДоходыИНалоги Тогда	
		АвтозаполнениеДоходыИНалоги();
	ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Субсидия2015 Тогда	
		АвтозаполнениеСубсидия2015();
	ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Соцстрах2015 Тогда	
		АвтозаполнениеСоцстрах2015();
	ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Соцстрах2023 Тогда	
		АвтозаполнениеСоцстрах2023();
	ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Пенсия2015 Тогда	
		АвтозаполнениеПенсия2015();	
	КонецЕсли;	

	Если Доходы.Количество() = 0 Тогда
		
		ТекстСообщения = НСтр("ru='Не обнаружены данные для записи в табличную часть документа.';uk='Не виявлені дані для запису в табличну частину документа.'");		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	
	// Дозаполним периоды
	ДатаТек = НачалоМесяца(ДатаНач);
	Пока ДатаТек <= ДатаКон Цикл
		СтрокаТЧ = Доходы.Найти(ДатаТек, "Период");
		Если СтрокаТЧ = Неопределено Тогда
			Доходы.Добавить().Период = ДатаТек;			
		КонецЕсли;
		ДатаТек = ДобавитьМесяц(ДатаТек, 1);
	КонецЦикла;
	Доходы.Сортировать("Период");

КонецПроцедуры

Процедура АвтозаполнениеПроизвольная()
	
	Доходы.Очистить();
	
	ДоходыТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Период КАК Период,
		|	СУММА(ВложенныйЗапрос.Начисления) КАК СовокупныйДоход,
		|	СУММА(ВложенныйЗапрос.Удержания) КАК Удержания,
		|	СУММА(ВложенныйЗапрос.СуммаКВыплате) КАК СуммаКВыплате
		|ИЗ
		|	(ВЫБРАТЬ
		|		Начисления.ПериодРегистрации КАК Период,
		|		СУММА(Начисления.Результат) КАК Начисления,
		|		NULL КАК Удержания,
		|		СУММА(Начисления.Результат) КАК СуммаКВыплате
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК Результат,
		|			НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации
		|		ИЗ
		|			РегистрРасчета.ИНАГРО_Начисления КАК ОсновныеНачисленияРаботниковОрганизаций
		|		ГДЕ
		|			ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &Сотрудник
		|			И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
		|			И ОсновныеНачисленияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
		|			И ОсновныеНачисленияРаботниковОрганизаций.Результат <> 0
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации) КАК Начисления
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Начисления.ПериодРегистрации
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Удержания.ПериодРегистрации,
		|		NULL,
		|		СУММА(Удержания.Результат),
		|		СУММА(-Удержания.Результат)
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НАЧАЛОПЕРИОДА(ВзносыВФонды.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|			СУММА(ВзносыВФонды.Результат) КАК Результат
		|		ИЗ
		|			РегистрРасчета.ИНАГРО_ВзносыВФонды КАК ВзносыВФонды
		|		ГДЕ
		|			ВзносыВФонды.Сотрудник = &Сотрудник
		|			И ВзносыВФонды.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
		|			И ВзносыВФонды.Организация.Ссылка = &парамОрганизация
		|			И ВзносыВФонды.Результат <> 0
		|			И НЕ ВзносыВФонды.Налог В ИЕРАРХИИ (&ГруппаНалоговФОТ)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НАЧАЛОПЕРИОДА(ВзносыВФонды.ПериодРегистрации, МЕСЯЦ)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ),
		|			СУММА(УдержанияРаботниковОрганизаций.Результат)
		|		ИЗ
		|			РегистрРасчета.ИНАГРО_Удержания КАК УдержанияРаботниковОрганизаций
		|		ГДЕ
		|			УдержанияРаботниковОрганизаций.Сотрудник = &Сотрудник
		|			И УдержанияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
		|			И УдержанияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
		|			И УдержанияРаботниковОрганизаций.Результат <> 0
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ),
		|			СУММА(ВзаиморасчетыПоНДФЛОбороты.НалогПриход)
		|		ИЗ
		|			РегистрНакопления.ВзаиморасчетыПоНДФЛ.Обороты(, , Месяц, ) КАК ВзаиморасчетыПоНДФЛОбороты
		|		ГДЕ
		|			ВзаиморасчетыПоНДФЛОбороты.Контрагент = &Сотрудник
		|			И ВзаиморасчетыПоНДФЛОбороты.Период МЕЖДУ &парамДатаНач И &парамДатаКон
		|			И ВзаиморасчетыПоНДФЛОбороты.Организация.Ссылка = &парамОрганизация
		|			И ВзаиморасчетыПоНДФЛОбороты.НалогПриход <> 0
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ)) КАК Удержания
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Удержания.ПериодРегистрации) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Период";
	
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("Сотрудник",        Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач",     ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон",     ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);	
	Запрос.УстановитьПараметр("ГруппаНалоговФОТ", Справочники.Налоги.ВзносыФОТ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Строка = Доходы.Добавить(); 		
		Строка.Период		   = Выборка.Период;
		Строка.СовокупныйДоход = Выборка.СовокупныйДоход;
		Строка.Удержания	   = Выборка.Удержания;
		Строка.СуммаКВыплате   = Выборка.СуммаКВыплате;
		
	КонецЦикла; 	
		
КонецПроцедуры 

Процедура АвтозаполнениеПенсия()
	
	Доходы.Очистить();
	
	ДоходыТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РезультатыБезОграничения.ПериодРегистрации КАК Период,
		|	РезультатыБезОграничения.Дней КАК Дней,
		|	РезультатыБезОграничения.ВсегоОблагоемое КАК ВсегоОблагаемое,
		|	ВЫБОР
		|		КОГДА РезультатыБезОграничения.ВсегоОблагоемое <= РезультатыБезОграничения.Предел
		|			ТОГДА РезультатыБезОграничения.ВсегоОблагоемое
		|		ИНАЧЕ РезультатыБезОграничения.Предел
		|	КОНЕЦ КАК РезультатВсего,
		|	ВЫБОР
		|		КОГДА РезультатыБезОграничения.РезультатОсновное <= РезультатыБезОграничения.Предел
		|			ТОГДА РезультатыБезОграничения.РезультатОсновное
		|		ИНАЧЕ РезультатыБезОграничения.Предел
		|	КОНЕЦ КАК РезультатОсновное,
		|	ВЫБОР
		|		КОГДА РезультатыБезОграничения.РезультатОсновное + РезультатыБезОграничения.РезультатСовместительство <= РезультатыБезОграничения.Предел
		|			ТОГДА РезультатыБезОграничения.РезультатСовместительство
		|		КОГДА РезультатыБезОграничения.РезультатОсновное >= РезультатыБезОграничения.Предел
		|			ТОГДА 0
		|		ИНАЧЕ РезультатыБезОграничения.Предел - РезультатыБезОграничения.РезультатОсновное
		|	КОНЕЦ КАК РезультатСовместительство,
		|	РезультатыБезОграничения.Предел КАК Предел
		|ИЗ
		|	(ВЫБРАТЬ
		|		СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК ВсегоОблагоемое,
		|		СУММА(ВЫБОР
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.ИНАГРО_ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство)
		|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.ОтработаноДней
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК Дней,
		|		СУММА(ВЫБОР
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.ИНАГРО_ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство)
		|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК РезультатОсновное,
		|		СУММА(ВЫБОР
		|				КОГДА ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.ИНАГРО_ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство)
		|					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Результат
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК РезультатСовместительство,
		|		НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|		СведенияОВзносахВФонды.Предел КАК Предел
		|	ИЗ
		|		РегистрРасчета.ИНАГРО_Начисления КАК ОсновныеНачисленияРаботниковОрганизаций
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				МАКСИМУМ(ВзносыВФондыРаботниковОрганизаций.Период) КАК Период,
		|				ВзносыВФондыРаботниковОрганизаций.Налог КАК Налог,
		|				ВзносыВФондыРаботниковОрганизаций.Сотрудник КАК Сотрудник,
		|				КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации
		|			ИЗ
		|				РегистрРасчета.ИНАГРО_Начисления КАК Начисления
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_ВзносыВФондыРаботниковОрганизаций КАК ВзносыВФондыРаботниковОрганизаций
		|					ПО (КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации, МЕСЯЦ) >= ВзносыВФондыРаботниковОрганизаций.Период)
		|						И Начисления.Сотрудник = ВзносыВФондыРаботниковОрганизаций.Сотрудник
		|			ГДЕ
		|				ВзносыВФондыРаботниковОрганизаций.Налог В(&СписокПенсия)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ВзносыВФондыРаботниковОрганизаций.Сотрудник,
		|				ВзносыВФондыРаботниковОрганизаций.Налог,
		|				КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации, МЕСЯЦ)) КАК ВзносыВФондыРаботниковОрганизацийДаты
		|			ПО (КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) = ВзносыВФондыРаботниковОрганизацийДаты.ПериодРегистрации)
		|				И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = ВзносыВФондыРаботниковОрганизацийДаты.Сотрудник
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_ВзносыВФондыРаботниковОрганизаций КАК ВзносыВФондыРаботниковОрганизаций
		|			ПО (ВзносыВФондыРаботниковОрганизаций.Налог = ВзносыВФондыРаботниковОрганизацийДаты.Налог)
		|				И (ВзносыВФондыРаботниковОрганизаций.Период = ВзносыВФондыРаботниковОрганизацийДаты.Период)
		|				И (ВзносыВФондыРаботниковОрганизаций.Сотрудник = ВзносыВФондыРаботниковОрганизацийДаты.Сотрудник)
		|				И (ВзносыВФондыРаботниковОрганизаций.Действует)
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				МАКСИМУМ(ВидыРасчетовВзносовВФонды.Период) КАК Период,
		|				ВидыРасчетовВзносовВФонды.Налог КАК Налог,
		|				КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации
		|			ИЗ
		|				РегистрРасчета.ИНАГРО_Начисления КАК Начисления
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
		|					ПО (КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации, МЕСЯЦ) >= ВидыРасчетовВзносовВФонды.Период)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ВидыРасчетовВзносовВФонды.Налог,
		|				КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации, МЕСЯЦ)) КАК ВидыРасчетовВзносовВФондыДаты
		|			ПО (КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) = ВидыРасчетовВзносовВФондыДаты.ПериодРегистрации)
		|				И (ВзносыВФондыРаботниковОрганизаций.Налог = ВидыРасчетовВзносовВФондыДаты.Налог)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
		|			ПО (ВидыРасчетовВзносовВФонды.Период = ВидыРасчетовВзносовВФондыДаты.Период)
		|				И (ВидыРасчетовВзносовВФонды.Налог = ВидыРасчетовВзносовВФондыДаты.Налог)
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				МАКСИМУМ(СведенияОВзносахВФонды.Период) КАК Период,
		|				СведенияОВзносахВФонды.ВидЕСВ КАК Налог,
		|				Начисления.ПериодРегистрации КАК ПериодРегистрации
		|			ИЗ
		|				РегистрРасчета.ИНАГРО_Начисления КАК Начисления
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПределыСтраховыхВзносов КАК СведенияОВзносахВФонды
		|					ПО (Начисления.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон)
		|						И Начисления.ПериодРегистрации >= СведенияОВзносахВФонды.Период
		|			
		|			СГРУППИРОВАТЬ ПО
		|				СведенияОВзносахВФонды.ВидЕСВ,
		|				Начисления.ПериодРегистрации) КАК СведенияОВзносахВФондыДаты
		|			ПО ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации = СведенияОВзносахВФондыДаты.ПериодРегистрации
		|				И (СведенияОВзносахВФондыДаты.Налог = ВидыРасчетовВзносовВФонды.Налог)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПределыСтраховыхВзносов КАК СведенияОВзносахВФонды
		|			ПО (СведенияОВзносахВФонды.Период = СведенияОВзносахВФондыДаты.Период)
		|				И (СведенияОВзносахВФонды.ВидЕСВ = СведенияОВзносахВФондыДаты.Налог)
		|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ИНАГРО_ВзносыВФонды.БазовыеВидыРасчета КАК ИНАГРО_ВзносыВФондыБазовыеВидыРасчета
		|			ПО (ИНАГРО_ВзносыВФондыБазовыеВидыРасчета.Ссылка = ВидыРасчетовВзносовВФонды.ВидРасчета)
		|				И (ИНАГРО_ВзносыВФондыБазовыеВидыРасчета.ВидРасчета = ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета)
		|	ГДЕ
		|		ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &парамСотрудник
		|		И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
		|		И ОсновныеНачисленияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
		|		И ОсновныеНачисленияРаботниковОрганизаций.Результат <> 0
		|		И НЕ ИНАГРО_ВзносыВФондыБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
		|		СведенияОВзносахВФонды.Предел) КАК РезультатыБезОграничения
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("парамСотрудник",     Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач",       ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон",       ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация",   Организация);
	Запрос.УстановитьПараметр("парамПриемНаРаботу", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	
	СписокПенсия = Новый Массив(8);
	СписокПенсия[0]=(Справочники.Налоги.Пенсионный1_5);
	СписокПенсия[1]=(Справочники.Налоги.Пенсионный);
	СписокПенсия[2]=(Справочники.Налоги.ЕСВБольничные);
	СписокПенсия[3]=(Справочники.Налоги.ЕСВГПХ);
	СписокПенсия[4]=(Справочники.Налоги.ЕСВИнвалидыУТОГУТОС);
	СписокПенсия[5]=(Справочники.Налоги.ЕСВЛетчики);
	СписокПенсия[6]=(Справочники.Налоги.ЕСВРаботники);
	СписокПенсия[7]=(Справочники.Налоги.ЕСВРаботникиСР);
	
	Запрос.УстановитьПараметр("СписокПенсия",       СписокПенсия);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Доходы.Загрузить(ТЗ);  	
		
КонецПроцедуры

Процедура АвтозаполнениеДоходыИНалоги()
	
	Доходы.Очистить();
	
	ДоходыТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.ПериодРегистрации КАК Период,
		|	СУММА(ВложенныйЗапрос.РезультатВзносы) КАК РезультатВзносы,
		|	СУММА(ВложенныйЗапрос.ОблагаемоеЕСВ) КАК ОблагаемоеЕСВ,
		|	СУММА(ВложенныйЗапрос.ОблагаемоеЕСВПредел) КАК ОблагаемоеЕСВПредел,
		|	СУММА(ВложенныйЗапрос.ДоходНДФЛ) КАК ДоходНДФЛ,
		|	СУММА(ВложенныйЗапрос.НДФЛ) КАК НДФЛ,
		|	СУММА(ВложенныйЗапрос.СуммаКВыплате) КАК Выплачено,
		|	СУММА(ВложенныйЗапрос.ДоходВоенныйСбор) КАК ДоходВоенныйСбор,
		|	СУММА(ВложенныйЗапрос.ВоенныйСбор) КАК ВоенныйСбор,
		|	СУММА(ВложенныйЗапрос.ДоходЗаВычетомНДФЛ) КАК ДоходЗаВычетомНДФЛ
		|ИЗ
		|	(ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ВзносыВФонды.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|		СУММА(ВзносыВФонды.Результат) КАК РезультатВзносы,
		|		ВзносыВФонды.База КАК ОблагаемоеЕСВ,
		|		ВзносыВФонды.БазаВзноса КАК ОблагаемоеЕСВПредел,
		|		NULL КАК ДоходНДФЛ,
		|		NULL КАК НДФЛ,
		|		NULL КАК СуммаКВыплате,
		|		NULL КАК ДоходВоенныйСбор,
		|		NULL КАК ВоенныйСбор,
		|		NULL КАК ДоходЗаВычетомНДФЛ
		|	ИЗ
		|		РегистрРасчета.ИНАГРО_ВзносыВФонды КАК ВзносыВФонды
		|	ГДЕ
		|		ВзносыВФонды.Сотрудник = &Сотрудник
		|		И ВзносыВФонды.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
		|		И ВзносыВФонды.Организация.Ссылка = &парамОрганизация
		|		И ВзносыВФонды.Результат <> 0
		|		И НЕ ВзносыВФонды.Налог В ИЕРАРХИИ (&ГруппаНалоговФОТ)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ВзносыВФонды.ПериодРегистрации, МЕСЯЦ),
		|		ВзносыВФонды.База,
		|		ВзносыВФонды.БазаВзноса
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ),
		|		NULL,
		|		NULL,
		|		NULL,
		|		ВзаиморасчетыПоНДФЛОбороты.ДоходПриход,
		|		СУММА(ВзаиморасчетыПоНДФЛОбороты.НалогПриход),
		|		NULL,
		|		NULL,
		|		NULL,
		|		СУММА(ВзаиморасчетыПоНДФЛОбороты.ДоходПриход) - СУММА(ВзаиморасчетыПоНДФЛОбороты.НалогПриход)
		|	ИЗ
		|		РегистрНакопления.ВзаиморасчетыПоНДФЛ.Обороты(
		|				,
		|				,
		|				Месяц,
		|				Контрагент = &Сотрудник
		|					И Организация = &парамОрганизация
		|					И (ПериодВзаиморасчетов МЕЖДУ &парамДатаНач И &парамДатаКон)
		|					И ДоходНДФЛ <> 0
		|					И ДоходНДФЛ.ВидСтавкиВоенныйСбор <> ДоходНДФЛ.ВидСтавкиРезидента) КАК ВзаиморасчетыПоНДФЛОбороты
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ),
		|		ВзаиморасчетыПоНДФЛОбороты.ДоходПриход
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ),
		|		NULL,
		|		NULL,
		|		NULL,
		|		NULL,
		|		NULL,
		|		NULL,
		|		ВзаиморасчетыПоНДФЛОбороты.ДоходПриход,
		|		СУММА(ВзаиморасчетыПоНДФЛОбороты.НалогПриход),
		|		NULL
		|	ИЗ
		|		РегистрНакопления.ВзаиморасчетыПоНДФЛ.Обороты(
		|				,
		|				,
		|				Месяц,
		|				Контрагент = &Сотрудник
		|					И Организация = &парамОрганизация
		|					И (ПериодВзаиморасчетов МЕЖДУ &парамДатаНач И &парамДатаКон)
		|					И ДоходНДФЛ <> 0
		|					И ДоходНДФЛ.ВидСтавкиВоенныйСбор = ДоходНДФЛ.ВидСтавкиРезидента) КАК ВзаиморасчетыПоНДФЛОбороты
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВзаиморасчетыПоНДФЛОбороты.ДоходПриход,
		|		НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ВзаиморасчетыССотрудниками.ПериодВзаиморасчетов, МЕСЯЦ),
		|		NULL,
		|		NULL,
		|		NULL,
		|		NULL,
		|		NULL,
		|		СУММА(ВзаиморасчетыССотрудниками.СуммаВзаиморасчетов),
		|		NULL,
		|		NULL,
		|		NULL
		|	ИЗ
		|		РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
		|	ГДЕ
		|		ВзаиморасчетыССотрудниками.Сотрудник = &Сотрудник
		|		И ВзаиморасчетыССотрудниками.Организация = &парамОрганизация
		|		И ВзаиморасчетыССотрудниками.ПериодВзаиморасчетов МЕЖДУ &парамДатаНач И &парамДатаКон
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ВзаиморасчетыССотрудниками.ПериодВзаиморасчетов, МЕСЯЦ)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("Сотрудник",        Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач",     ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон",     ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);	
	Запрос.УстановитьПараметр("ГруппаНалоговФОТ", Справочники.Налоги.ВзносыФОТ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Строка = Доходы.Добавить();
		Строка.Период			   = Выборка.Период;
		Строка.РезультатВзносы	   = Выборка.РезультатВзносы;
		Строка.ОблагаемоеЕСВ	   = Выборка.ОблагаемоеЕСВ;
		Строка.ОблагаемоеЕСВПредел = Выборка.ОблагаемоеЕСВПредел;
		Строка.ДоходНДФЛ		   = Выборка.ДоходНДФЛ;
		Строка.НДФЛ				   = Выборка.НДФЛ;
		Строка.ДоходВоенныйСбор    = Выборка.ДоходВоенныйСбор;
		Строка.ВоенныйСбор         = Выборка.ВоенныйСбор;
		Строка.Выплачено	       = Выборка.Выплачено;
		Строка.ДоходЗаВычетомНДФЛ  = Выборка.ДоходЗаВычетомНДФЛ
		
	КонецЦикла;	
		
		
КонецПроцедуры 

Процедура АвтозаполнениеСубсидия2015()
	
	Доходы.Очистить();
	
	ДоходыТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НДФЛ.ПериодВзаиморасчетов КАК Период,
		|	ВЫБОР
		|		КОГДА НДФЛ.ДоходНДФЛ В (&парамВидыДоходовЗП)
		|			ТОГДА НДФЛ.Доход
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НачисленоЗП,
		|	ВЫБОР
		|		КОГДА НДФЛ.ДоходНДФЛ В (&парамВидыДоходовЗП)
		|				ИЛИ НДФЛ.ДоходНДФЛ В (&парамВидыДоходовВС)
		|			ТОГДА 0
		|		ИНАЧЕ НДФЛ.Доход
		|	КОНЕЦ КАК НачисленоПрочее,
		|	ВЫБОР
		|		КОГДА НДФЛ.ДоходНДФЛ В (&парамВидыДоходовЗП)
		|			ТОГДА НДФЛ.Налог
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НДФЛ,
		|	ВЫБОР
		|		КОГДА НДФЛ.ДоходНДФЛ В (&парамВидыДоходовЗП)
		|				ИЛИ НДФЛ.ДоходНДФЛ В (&парамВидыДоходовВС)
		|			ТОГДА 0
		|		ИНАЧЕ НДФЛ.Налог
		|	КОНЕЦ КАК НДФЛПрочее
		|ПОМЕСТИТЬ ВТНДФЛ
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыПоНДФЛ КАК НДФЛ
		|ГДЕ
		|	НДФЛ.Контрагент = &Сотрудник
		|	И НДФЛ.ПериодВзаиморасчетов МЕЖДУ &парамДатаНач И &парамДатаКон
		|	И НДФЛ.Организация = &парамОрганизация
		|	И НДФЛ.ВидДвижения = &парамПриход
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Удержания.ПериодРегистрации КАК Период,
		|	Удержания.Результат КАК Алименты
		|ПОМЕСТИТЬ ВТАлименты
		|ИЗ
		|	РегистрРасчета.ИНАГРО_Удержания КАК Удержания
		|ГДЕ
		|	Удержания.Сотрудник = &Сотрудник
		|	И Удержания.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
		|	И Удержания.Организация = &парамОрганизация
		|	И Удержания.ВидРасчета.СпособРасчета В(&парамВидыАлиментов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Период КАК Период,
		|	СУММА(ВложенныйЗапрос.НачисленоЗП + ВложенныйЗапрос.НачисленоПрочее) КАК СовокупныйДоход,
		|	СУММА(ВложенныйЗапрос.НачисленоЗП) КАК НачисленоЗП,
		|	СУММА(ВложенныйЗапрос.НачисленоПрочее) КАК НачисленоПрочее,
		|	СУММА(ВложенныйЗапрос.НДФЛ) КАК НДФЛ,
		|	СУММА(ВложенныйЗапрос.НДФЛПрочее) КАК НДФЛПрочее,
		|	СУММА(ВложенныйЗапрос.Алименты) КАК Алименты
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаНДФЛ.Период КАК Период,
		|		ТаблицаНДФЛ.НачисленоЗП КАК НачисленоЗП,
		|		ТаблицаНДФЛ.НачисленоПрочее КАК НачисленоПрочее,
		|		ТаблицаНДФЛ.НДФЛ КАК НДФЛ,
		|		ТаблицаНДФЛ.НДФЛПрочее КАК НДФЛПрочее,
		|		0 КАК Алименты
		|	ИЗ
		|		ВТНДФЛ КАК ТаблицаНДФЛ
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаАлименты.Период,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ТаблицаАлименты.Алименты
		|	ИЗ
		|		ВТАлименты КАК ТаблицаАлименты) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Период";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("Сотрудник",          Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач",       ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон",       ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация",   Организация);
	Запрос.УстановитьПараметр("парамПриход",        ВидДвиженияНакопления.Приход);
	
    ВидыДоходовЗП = Новый Массив();
	ВидыДоходовЗП.Добавить(Справочники.ВидыДоходовНДФЛ.Код01);
	
	Запрос.УстановитьПараметр("парамВидыДоходовЗП", ВидыДоходовЗП);
	Запрос.УстановитьПараметр("парамВидыДоходовВС", УчетНДФЛ.ЗначенияВоенныйСбор().ВидДоходаСписок);
	
	ВидыАлиментов = Новый Массив();
	ВидыАлиментов.Добавить(Перечисления.СпособыРасчетаНачислений.АлиментыПроцентом);
	ВидыАлиментов.Добавить(Перечисления.СпособыРасчетаНачислений.АлиментыПроцентомДоПредела);
	ВидыАлиментов.Добавить(Перечисления.СпособыРасчетаНачислений.АлиментыФиксСуммой);
	ВидыАлиментов.Добавить(Перечисления.СпособыРасчетаНачислений.АлиментыФиксСуммойДоПредела);
	ВидыАлиментов.Добавить(Перечисления.СпособыРасчетаНачислений.ИндексацияАлиментов);
	
	Запрос.УстановитьПараметр("парамВидыАлиментов", ВидыАлиментов);	
		
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Доходы.Загрузить(ТЗ);
		
КонецПроцедуры

Процедура АвтозаполнениеСоцстрах2015()
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(ЕСВ.БазовыйПериодНачало, МЕСЯЦ) КАК Период,
		|	СУММА(ВЫБОР
		|			КОГДА ЕСВ.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы)
		|				ТОГДА 0
		|			ИНАЧЕ ЕСВ.БазаВзноса - ЕСВ.БазаДоначисление
		|		КОНЕЦ) КАК РезультатВсего,
		|	СУММА(ВЫБОР
		|			КОГДА ЕСВ.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы)
		|				ТОГДА ЕСВ.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РезультатВзносы,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ЕСВ.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы)
		|				ТОГДА ЕСВ.Ставка
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтавкаВзносов,
		|	ЕСВ.ВидРасчета.КатегорияРасчета КАК КатегорияРасчета
		|ПОМЕСТИТЬ ВТЕСВ
		|ИЗ
		|	РегистрРасчета.ИНАГРО_ВзносыВФонды КАК ЕСВ
		|ГДЕ
		|	ЕСВ.Сотрудник = &Сотрудник
		|	И ЕСВ.БазовыйПериодНачало МЕЖДУ &парамДатаНач И &парамДатаКон
		|	И ЕСВ.Организация = &парамОрганизация
		|	И НЕ ЕСВ.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ЕСВБольничные), ЗНАЧЕНИЕ(ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ЕСВФОТБольничные), ЗНАЧЕНИЕ(ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ЕСВДекретные), ЗНАЧЕНИЕ(ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ЕСВФОТДекретные), ЗНАЧЕНИЕ(ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ЕСВМобилизованные))
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЕСВ.БазовыйПериодНачало, МЕСЯЦ),
		|	ЕСВ.ВидРасчета.КатегорияРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
		|				ТОГДА РаботникиОрганизаций.Период
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ДатаПриема,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|				ТОГДА РаботникиОрганизаций.Период
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ДатаУвольнения
		|ПОМЕСТИТЬ ВТПриемУвольнение
		|ИЗ
		|	РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.Сотрудник = &Сотрудник
		|	И РаботникиОрганизаций.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу), ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(Календарь.ДатаКалендаря, МЕСЯЦ) КАК Период,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Календарь.ДатаКалендаря) КАК КалендарныеДниВсего
		|ПОМЕСТИТЬ ВТКалендарныеДни
		|ИЗ
		|	РегистрСведений.ИНАГРО_РегламентированныйПроизводственныйКалендарь КАК Календарь
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриемУвольнение КАК ПриемУвольнение
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Календарь.ДатаКалендаря МЕЖДУ &парамДатаНач И &парамДатаКон
		|	И Календарь.ДатаКалендаря >= ПриемУвольнение.ДатаПриема
		|	И (Календарь.ДатаКалендаря <= ПриемУвольнение.ДатаУвольнения
		|			ИЛИ ПриемУвольнение.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1))
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(Календарь.ДатаКалендаря, МЕСЯЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало, МЕСЯЦ) КАК Период,
		|	СУММА(РАЗНОСТЬДАТ(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало, ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияКонец, ДЕНЬ) + 1) КАК Календарные
		|ПОМЕСТИТЬ ВТКалендарныеДниНеявки
		|ИЗ
		|	РегистрРасчета.ИНАГРО_Начисления.ФактическийПериодДействия КАК ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия
		|ГДЕ
		|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сотрудник = &Сотрудник
		|	И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Организация = &парамОрганизация
		|	И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.УважительнаяПричинаДляБольничных = ИСТИНА
		|	И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало МЕЖДУ &парамДатаНач И &парамДатаКон
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало, МЕСЯЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КалендарныеДни.Период,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЕСВ.КатегорияРасчета, ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.Первичное)) = ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.Первичное)
		|			ТОГДА ЕСТЬNULL(КалендарныеДни.КалендарныеДниВсего, 0) - ЕСТЬNULL(КалендарныеДниНеявки.Календарные, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КалендарныеДни,
		|	ЕСТЬNULL(ЕСВ.РезультатВсего, 0) КАК РезультатВсего,
		|	ЕСТЬNULL(ЕСВ.РезультатВзносы, 0) КАК РезультатВзносы,
		|	ЕСТЬNULL(ЕСВ.СтавкаВзносов, 0) * 100 КАК СтавкаВзносов
		|ИЗ
		|	ВТКалендарныеДни КАК КалендарныеДни
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЕСВ КАК ЕСВ
		|		ПО КалендарныеДни.Период = ЕСВ.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКалендарныеДниНеявки КАК КалендарныеДниНеявки
		|		ПО КалендарныеДни.Период = КалендарныеДниНеявки.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	КалендарныеДни.Период,
		|	ЕСВ.КатегорияРасчета";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("Сотрудник",        Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач",     ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон",     ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация); 	
		
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Доходы.Загрузить(ТЗ);	

КонецПроцедуры

Процедура АвтозаполнениеСоцстрах2023()
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(ЕСВ.БазовыйПериодНачало, МЕСЯЦ) КАК Период,
		|	СУММА(ВЫБОР
		|			КОГДА ЕСВ.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы)
		|				ТОГДА 0
		|			ИНАЧЕ ЕСВ.БазаВзноса - ЕСВ.БазаДоначисление
		|		КОНЕЦ) КАК РезультатВсего,
		|	СУММА(ВЫБОР
		|			КОГДА ЕСВ.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы)
		|				ТОГДА ЕСВ.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РезультатВзносы,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ЕСВ.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы)
		|				ТОГДА ЕСВ.Ставка
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтавкаВзносов,
		|	ЕСВ.ВидРасчета.КатегорияРасчета КАК КатегорияРасчета
		|ПОМЕСТИТЬ ВТЕСВ
		|ИЗ
		|	РегистрРасчета.ИНАГРО_ВзносыВФонды КАК ЕСВ
		|ГДЕ
		|	ЕСВ.Сотрудник = &Сотрудник
		|	И ЕСВ.БазовыйПериодНачало МЕЖДУ &парамДатаНач И &парамДатаКон
		|	И ЕСВ.Организация = &парамОрганизация
		|	И НЕ ЕСВ.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ЕСВБольничные), ЗНАЧЕНИЕ(ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ЕСВФОТБольничные), ЗНАЧЕНИЕ(ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ЕСВДекретные), ЗНАЧЕНИЕ(ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ЕСВФОТДекретные), ЗНАЧЕНИЕ(ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ЕСВМобилизованные))
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЕСВ.БазовыйПериодНачало, МЕСЯЦ),
		|	ЕСВ.ВидРасчета.КатегорияРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
		|				ТОГДА РаботникиОрганизаций.Период
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ДатаПриема,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|				ТОГДА РаботникиОрганизаций.Период
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ДатаУвольнения
		|ПОМЕСТИТЬ ВТПриемУвольнение
		|ИЗ
		|	РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.Сотрудник = &Сотрудник
		|	И РаботникиОрганизаций.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу), ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(Календарь.ДатаКалендаря, МЕСЯЦ) КАК Период,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Календарь.ДатаКалендаря) КАК КалендарныеДниВсего
		|ПОМЕСТИТЬ ВТКалендарныеДни
		|ИЗ
		|	РегистрСведений.ИНАГРО_РегламентированныйПроизводственныйКалендарь КАК Календарь
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриемУвольнение КАК ПриемУвольнение
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Календарь.ДатаКалендаря МЕЖДУ &парамДатаНач И &парамДатаКон
		|	И Календарь.ДатаКалендаря >= ПриемУвольнение.ДатаПриема
		|	И (Календарь.ДатаКалендаря <= ПриемУвольнение.ДатаУвольнения
		|			ИЛИ ПриемУвольнение.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1))
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(Календарь.ДатаКалендаря, МЕСЯЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало, МЕСЯЦ) КАК Период,
		|	СУММА(РАЗНОСТЬДАТ(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало, ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияКонец, ДЕНЬ) + 1) КАК Календарные
		|ПОМЕСТИТЬ ВТКалендарныеДниНеявки
		|ИЗ
		|	РегистрРасчета.ИНАГРО_Начисления.ФактическийПериодДействия КАК ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия
		|ГДЕ
		|	ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сотрудник = &Сотрудник
		|	И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Организация = &парамОрганизация
		|	И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.УважительнаяПричинаДляБольничных = ИСТИНА
		|	И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало МЕЖДУ &парамДатаНач И &парамДатаКон
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало, МЕСЯЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КалендарныеДни.Период,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЕСВ.КатегорияРасчета, ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.Первичное)) = ЗНАЧЕНИЕ(Перечисление.КатегорииРасчетов.Первичное)
		|			ТОГДА ЕСТЬNULL(КалендарныеДни.КалендарныеДниВсего, 0) - ЕСТЬNULL(КалендарныеДниНеявки.Календарные, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КалендарныеДни,
		|	ЕСТЬNULL(ЕСВ.РезультатВсего, 0) КАК РезультатВсего,
		|	ЕСТЬNULL(ЕСВ.РезультатВзносы, 0) КАК РезультатВзносы,
		|	ЕСТЬNULL(ЕСВ.СтавкаВзносов, 0) * 100 КАК СтавкаВзносов
		|ИЗ
		|	ВТКалендарныеДни КАК КалендарныеДни
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЕСВ КАК ЕСВ
		|		ПО КалендарныеДни.Период = ЕСВ.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКалендарныеДниНеявки КАК КалендарныеДниНеявки
		|		ПО КалендарныеДни.Период = КалендарныеДниНеявки.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	КалендарныеДни.Период,
		|	ЕСВ.КатегорияРасчета";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("Сотрудник",        Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач",     ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон",     ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация); 	
		
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Доходы.Загрузить(ТЗ);	

КонецПроцедуры

Процедура АвтозаполнениеПенсия2015()
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(ЕСВ.БазовыйПериодНачало, МЕСЯЦ) КАК Период,
		|	СУММА(ЕСВ.БазаВзноса - ЕСВ.БазаДоначисление) КАК РезультатВсего
		|ИЗ
		|	РегистрРасчета.ИНАГРО_ВзносыВФонды КАК ЕСВ
		|ГДЕ
		|	ЕСВ.Сотрудник = &Сотрудник
		|	И ЕСВ.БазовыйПериодНачало МЕЖДУ &парамДатаНач И &парамДатаКон
		|	И ЕСВ.Организация = &парамОрганизация
		|	И ЕСВ.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.ВзносыФОТ)
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЕСВ.БазовыйПериодНачало, МЕСЯЦ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("Сотрудник",        Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач",     ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон",     ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Доходы.Загрузить(ТЗ);
	
КонецПроцедуры 

#КонецОбласти

#КонецЕсли