#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПроцедурыИФункцииПечати
	
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Справка
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СправкаОДоходах";
	КомандаПечати.Представление = НСтр("ru='Справка о доходах';uk='Довідка про доходи'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
		
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru='Реестр документов ""Справка о доходах""';uk='Реєстр документів ""Довідка про доходи""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если МассивОбъектов[0].ВидСправки = Перечисления.ВидыСправокОДоходах.Произвольная Тогда
		КоллекцияПечатныхФорм[0].ИмяМакета = "МакетПроизвольная"; 
		КоллекцияПечатныхФорм[0].ИмяВРЕГ = "МАКЕТПРОИЗВОЛЬНАЯ";
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МакетПроизвольная") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МакетПроизвольная", НСтр("ru='Справка о доходах';uk='Довідка про доходи'"), 
				ПечатьСправка(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,"Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_Макет",,Истина);
		КонецЕсли;
	ИначеЕсли МассивОбъектов[0].ВидСправки = Перечисления.ВидыСправокОДоходах.ДоходыИНалоги Тогда
		КоллекцияПечатныхФорм[0].ИмяМакета = "МакетДоходыИНалоги"; 
		КоллекцияПечатныхФорм[0].ИмяВРЕГ = "МАКЕТДОХОДЫИНАЛОГИ";
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МакетДоходыИНалоги") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МакетДоходыИНалоги", НСтр("ru='Справка о доходах';uk='Довідка про доходи'"), 
			ПечатьДоходыИНалоги(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,"Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетНалоги",,Истина);
		КонецЕсли;	
	ИначеЕсли МассивОбъектов[0].ВидСправки = Перечисления.ВидыСправокОДоходах.Безработица Тогда
		КоллекцияПечатныхФорм[0].ИмяМакета = "МакетБезработица"; 
		КоллекцияПечатныхФорм[0].ИмяВРЕГ = "МАКЕТБЕЗРАБОТИЦА";	
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МакетБезработица") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МакетБезработица", НСтр("ru='Справка о доходах';uk='Довідка про доходи'"), 
			ПечатьБезработица(МассивОбъектов, ОбъектыПечати, ПараметрыВывода, "Форма4"),,"Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетБезработица",,Истина);
		КонецЕсли;	
	ИначеЕсли МассивОбъектов[0].ВидСправки = Перечисления.ВидыСправокОДоходах.Пенсия Тогда
		КоллекцияПечатныхФорм[0].ИмяМакета = "МакетПенсия"; 
		КоллекцияПечатныхФорм[0].ИмяВРЕГ = "МАКЕТПЕНСИЯ";
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МакетПенсия") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МакетПенсия", НСтр("ru='Справка о доходах';uk='Довідка про доходи'"), 
			ПечатьПенсия(МассивОбъектов, ОбъектыПечати, ПараметрыВывода, "ПенсияСтарая"),,"Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетПенсия",,Истина);
		КонецЕсли;
	ИначеЕсли МассивОбъектов[0].ВидСправки = Перечисления.ВидыСправокОДоходах.Соцстрах Тогда
		КоллекцияПечатныхФорм[0].ИмяМакета = "МакетСоцстрах"; 
		КоллекцияПечатныхФорм[0].ИмяВРЕГ = "МАКЕТСОЦСТРАХ";
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МакетСоцстрах") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МакетСоцстрах", НСтр("ru='Справка о доходах';uk='Довідка про доходи'"), 
			ПечатьСоцСтрах(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,"Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетСоцстрах",,Истина);
		КонецЕсли;
	ИначеЕсли МассивОбъектов[0].ВидСправки = Перечисления.ВидыСправокОДоходах.Субсидия Тогда
		КоллекцияПечатныхФорм[0].ИмяМакета = "МакетСубсидия"; 
		КоллекцияПечатныхФорм[0].ИмяВРЕГ = "МАКЕТСУБСИДИЯ";
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МакетСубсидия") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МакетСубсидия", НСтр("ru='Справка о доходах';uk='Довідка про доходи'"), 
			ПечатьСубсидия(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,"Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетСубсидия",,Истина);
		КонецЕсли;
	ИначеЕсли МассивОбъектов[0].ВидСправки = Перечисления.ВидыСправокОДоходах.Субсидия2015 Тогда
		КоллекцияПечатныхФорм[0].ИмяМакета = "МакетСубсидия2015"; 
		КоллекцияПечатныхФорм[0].ИмяВРЕГ = "МАКЕТСУБСИДИЯ2015";
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МакетСубсидия2015") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МакетСубсидия2015", НСтр("ru='Справка о доходах';uk='Довідка про доходи'"), 
			ПечатьСубсидия2015(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,"Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетСубсидия2015",,Истина);
		КонецЕсли;	
	ИначеЕсли МассивОбъектов[0].ВидСправки = Перечисления.ВидыСправокОДоходах.Соцстрах2015 Тогда
		КоллекцияПечатныхФорм[0].ИмяМакета = "МакетСоцстрах2015"; 
		КоллекцияПечатныхФорм[0].ИмяВРЕГ = "МАКЕТСОЦСТРАХ2015";
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МакетСоцстрах2015") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МакетСоцстрах2015", НСтр("ru='Справка о доходах';uk='Довідка про доходи'"), 
			ПечатьСоцстрах2015(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,"Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетСоцстрах2015",,Истина);
		КонецЕсли;	
	ИначеЕсли МассивОбъектов[0].ВидСправки = Перечисления.ВидыСправокОДоходах.Пенсия2015 Тогда
		КоллекцияПечатныхФорм[0].ИмяМакета = "МакетПенсия2015"; 
		КоллекцияПечатныхФорм[0].ИмяВРЕГ = "МАКЕТПЕНСИЯ2015";
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МакетПенсия2015") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МакетПенсия2015", НСтр("ru='Справка о доходах';uk='Довідка про доходи'"), 
			ПечатьПенсия(МассивОбъектов, ОбъектыПечати, ПараметрыВывода, "ПенсияНовая"),,"Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетПенсия2015",,Истина);
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

Функция ПечатьСправка(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СПРАВКА_О_ДОХОДАХ_СПРАВКА";
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если ПроверкаНаЗаполнениеТЧДоходыПередПечатью(Ссылка) Тогда
			Продолжить;
		КонецЕсли;
				
		// запоминаем области макета
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_Макет");
		
		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		ЗапросФИО = Новый Запрос;
		ЗапросФИО.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
		|ГДЕ
		|	ФИОФизЛицСрезПоследних.ФизическоеЛицо = &ФизЛицо";
		
		ЗапросФИО.УстановитьПараметр("ФизЛицо", Ссылка.Сотрудник.ФизическоеЛицо);
		ЗапросФИО.УстановитьПараметр("Дата", ССылка.Дата);
		
		РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
		РезультатФИО.Следующий();
		
		ЗапросДолжность = Новый Запрос;
		ЗапросДолжность.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Работники.Должность
		|ИЗ
		|	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(
		|			&Дата,
		|			Организация = &Организация
		|				И ЗанимаемыхСтавок > 0) КАК Работники
		|ГДЕ
		|	Работники.Сотрудник = &Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	Работники.Период УБЫВ";
		
		ЗапросДолжность.УстановитьПараметр("Дата", Ссылка.Дата);
		ЗапросДолжность.УстановитьПараметр("Сотрудник", ССылка.Сотрудник);
		ЗапросДолжность.УстановитьПараметр("Организация", Ссылка.Организация);
		ЗапросДолжность.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятости.ВнутреннееСовместительство);
		
		РезультатДолжность = ЗапросДолжность.Выполнить().Выбрать();
		РезультатДолжность.Следующий();
		
		ЗапросДатаПриема = Новый Запрос;
		ЗапросДатаПриема.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ЕСТЬNULL(Работники.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПриема
		|ИЗ
		|	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПервых(
		|			,
		|			Организация = &Организация
		|				И ЗанимаемыхСтавок > 0) КАК Работники
		|ГДЕ
		|	Работники.Сотрудник = &Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	Работники.Период";
		
		ЗапросДатаПриема.УстановитьПараметр("Сотрудник", Ссылка.Сотрудник);
		ЗапросДатаПриема.УстановитьПараметр("Организация", Ссылка.Организация);
		
		РезультатДатаПриема = ЗапросДатаПриема.Выполнить().Выбрать();
		РезультатДатаПриема.Следующий();
		
		ЗапросДатаУвольнения = Новый Запрос;
		ЗапросДатаУвольнения.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ЕСТЬNULL(Работники.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаУвольнения,
		|	Работники.ЗанимаемыхСтавок
		|ИЗ
		|	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(, Организация = &Организация) КАК Работники
		|ГДЕ
		|	Работники.Сотрудник = &Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	Работники.Период УБЫВ,
		|	Работники.ЗанимаемыхСтавок УБЫВ";
		
		ЗапросДатаУвольнения.УстановитьПараметр("Сотрудник", Ссылка.Сотрудник);
		ЗапросДатаУвольнения.УстановитьПараметр("Организация", Ссылка.Организация);
		ЗапросДатаУвольнения.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятости.ВнутреннееСовместительство);
		
		РезультатДатаУвольнения = ЗапросДатаУвольнения.Выполнить().Выбрать();
		РезультатДатаУвольнения.Следующий();
		
		ЗапросПериодДоходов = Новый Запрос;
		ЗапросПериодДоходов.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ЕСТЬNULL(МИНИМУМ(Доходы.Период), ДАТАВРЕМЯ(1, 1, 1)) КАК НачалоПериодаДоходов,
				|	МАКСИМУМ(КОНЕЦПЕРИОДА(Доходы.Период, МЕСЯЦ)) КАК ОкончаниеПериодаДоходов
				|ИЗ
				|	Документ.ИНАГРО_СправкаОДоходах.Доходы КАК Доходы
				|ГДЕ
				|	Доходы.Ссылка = &Ссылка";
		
		ЗапросПериодДоходов.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатПериодДоходов = ЗапросПериодДоходов.Выполнить().Выбрать();
		РезультатПериодДоходов.Следующий();
		
		// Выводим шапку
		ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
		
		Если Ссылка.Сотрудник.ФизическоеЛицо.Пол = Перечисления.ПолФизическогоЛица.Женский Тогда
			ОбластьМакетаШапка.Параметры.он = НСтр("ru='она';uk='вона'",КодЯзыкаПечать);
			ОкончаниеРаботал = НСтр("ru='а';uk='ла'",КодЯзыкаПечать);
		Иначе
			ОбластьМакетаШапка.Параметры.он = НСтр("ru='он';uk='він'",КодЯзыкаПечать);
			ОкончаниеРаботал = НСтр("ru='';uk='в'",КодЯзыкаПечать);
		КонецЕсли;	
	
		ТекстДоговор = "";		
		НаимОрганизации = Ссылка.Организация.НаименованиеПолное;
			Если Ссылка.Сотрудник.ИНАГРО_ДоговорПодряда Тогда
				ТекстРаботает = НСтр("ru='работал';uk='працюва'",КодЯзыкаПечать)+ОкончаниеРаботал+" в  "+ НаимОрганизации +
				ТекстДоговор + НСтр("ru=' по гражданско-правовому договору';uk=' за цивільно-правовим договором'",КодЯзыкаПечать);
			Иначе		
				Если РезультатДатаУвольнения.ЗанимаемыхСтавок > 0 Тогда
					ТекстРаботает = НСтр("ru='работает в ';uk='працює в '",КодЯзыкаПечать) + НаимОрганизации +НСтр("ru=' с ';uk=' з '",КодЯзыкаПечать) +
					Формат(РезультатДатаПриема.ДатаПриема, "ДЛФ=Д")+НСтр("ru='г.';uk='р.'",КодЯзыкаПечать) + ТекстДоговор + НСтр("ru='. В настоящий момент занимает должность ';uk='. На даний момент займає посаду '",КодЯзыкаПечать) + РезультатДолжность.Должность.Наименование;
				Иначе
					ТекстРаботает = НСтр("ru='работал';uk='працюва'",КодЯзыкаПечать)+ОкончаниеРаботал+" в  "+НаимОрганизации +НСтр("ru=' с ';uk=' з '",КодЯзыкаПечать) +
					Формат(РезультатДатаПриема.ДатаПриема, "ДЛФ=Д")+ НСтр("ru='г.';uk='р.'", КодЯзыкаПечать) + " по " + Формат(РезультатДатаУвольнения.ДатаУвольнения, "ДЛФ=Д")+ НСтр("ru='г.';uk='р.'",КодЯзыкаПечать)  + ТекстДоговор + НСтр("ru=' на должности ';uk=' на посаді '",КодЯзыкаПечать) + РезультатДолжность.Должность.Наименование;
				КонецЕсли
			КонецЕсли;
		
		ОбластьМакетаШапка.Параметры.Номер						= Ссылка.Номер;
		ОбластьМакетаШапка.Параметры.Дата						= Формат(Ссылка.Дата, "ДЛФ=Д""; Л="+КодЯзыкаПечать+"");
		ОбластьМакетаШапка.Параметры.ДатаНач					= Формат(Ссылка.ДатаНач, "ДЛФ=Д""; Л="+КодЯзыкаПечать+"");
		ОбластьМакетаШапка.Параметры.ДатаКон					= Формат(Ссылка.ДатаКон, "ДЛФ=Д""; Л="+КодЯзыкаПечать+"");
		
		ОбластьМакетаШапка.Параметры.ИдентификационныйКод		= ?(ЗначениеЗаполнено(Ссылка.Сотрудник.ФизическоеЛицо.КодПоДРФО),НСтр("ru='идентификационный номер ';uk='ідентифікаційний код '",КодЯзыкаПечать)+Ссылка.Сотрудник.ФизическоеЛицо.КодПоДРФО+", ","");
		ОбластьМакетаШапка.Параметры.ТекстРаботает				= ТекстРаботает;
		
		ОбластьМакетаШапка.Параметры.СуммаДоход	= Формат(Ссылка.Доходы.Итог("СовокупныйДоход"),	"ЧЦ=10; ЧДЦ=2");
		
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// выводим строки
		Доходы = ССылка.Доходы;
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПериод"); // строка периода
		Для каждого СтрокаТЧ Из Доходы Цикл
			ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,			"ДФ=""ММММ ` гггг""; Л="+КодЯзыкаПечать+"");
			ОбластьМакета.Параметры.СовокупныйДоход	= Формат(СтрокаТЧ.СовокупныйДоход,	"ЧЦ=10; ЧДЦ=2");
			ОбластьМакета.Параметры.Удержания		= Формат(СтрокаТЧ.Удержания,		"ЧЦ=10; ЧДЦ=2");
			ОбластьМакета.Параметры.СуммаКВыплате	= Формат(СтрокаТЧ.СуммаКВыплате,	"ЧЦ=10; ЧДЦ=2");
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;		
		
		// Итоги
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаИтого");
		ОбластьМакета.Параметры.СовокупныйДоход	= Формат(Доходы.Итог("СовокупныйДоход"),	"ЧЦ=10; ЧДЦ=2");
		ОбластьМакета.Параметры.Удержания		= Формат(Доходы.Итог("Удержания"),			"ЧЦ=10; ЧДЦ=2");
		ОбластьМакета.Параметры.СуммаКВыплате	= Формат(Доходы.Итог("СуммаКВыплате"),		"ЧЦ=10; ЧДЦ=2");
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Дно
		ОтвЛицаОрганизации = ОтветственныеЛицаБП.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата); 
		
		ОбластьМакета = Макет.ПолучитьОбласть("Дно");	
		ОбластьМакета.Параметры.Директор			= ОтвЛицаОрганизации.Руководитель;
		ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтвЛицаОрганизации.ГлавныйБухгалтер;
		
		ОбластьМакета.Параметры.НазначениеСправки	= Ссылка.НазначениеСправки;
		ТабДокумент.Вывести(ОбластьМакета);
					
	КонецЦикла;
		
	Возврат ТабДокумент;	
		
КонецФункции

Функция ПечатьДоходыИНалоги(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СПРАВКА_О_ДОХОДАХ_НАЛОГИ";
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если ПроверкаНаЗаполнениеТЧДоходыПередПечатью(Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		// запоминаем области макета
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетНалоги");
		
		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		Сотрудник = Ссылка.Сотрудник;
		Организация = Ссылка.Организация;
		Дата = Ссылка.Дата;
		
		ЗапросФИО = Новый Запрос;
		ЗапросФИО.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
		|ГДЕ
		|	ФИОФизЛицСрезПоследних.ФизическоеЛицо = &ФизЛицо";
		
		ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизическоеЛицо);
		ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
		РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
		РезультатФИО.Следующий();
		
		ЗапросДолжность = Новый Запрос;
		ЗапросДолжность.Текст =		
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Работники.Должность
		|ИЗ
		|	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(
		|			&Дата,
		|			Организация = &Организация
		|				И ЗанимаемыхСтавок > 0) КАК Работники
		|ГДЕ
		|	Работники.Сотрудник = &Сотрудник
		|	И Работники.Сотрудник.ИНАГРО_ВидЗанятости <> &ВидЗанятостиСовмещение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Работники.Период УБЫВ";
		
		ЗапросДолжность.УстановитьПараметр("Дата", Дата);
		ЗапросДолжность.УстановитьПараметр("Сотрудник", Сотрудник);
		ЗапросДолжность.УстановитьПараметр("Организация", Организация);
		ЗапросДолжность.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятости.ВнутреннееСовместительство);
		
		РезультатДолжность = ЗапросДолжность.Выполнить().Выбрать();
		РезультатДолжность.Следующий();
		
		ЗапросДатаПриема = Новый Запрос;
		ЗапросДатаПриема.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ЕСТЬNULL(Работники.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПриема
		|ИЗ
		|	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПервых(
		|			,
		|			Организация = &Организация
		|				И ЗанимаемыхСтавок > 0) КАК Работники
		|ГДЕ
		|	Работники.Сотрудник = &Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	Работники.Период";
		
		ЗапросДатаПриема.УстановитьПараметр("Сотрудник", Сотрудник);
		ЗапросДатаПриема.УстановитьПараметр("Организация", Организация);
		
		РезультатДатаПриема = ЗапросДатаПриема.Выполнить().Выбрать();
		РезультатДатаПриема.Следующий();
		
		ЗапросДатаУвольнения = Новый Запрос;
		ЗапросДатаУвольнения.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ЕСТЬNULL(Работники.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаУвольнения,
		|	Работники.ЗанимаемыхСтавок
		|ИЗ
		|	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(, Организация = &Организация) КАК Работники
		|ГДЕ
		|	Работники.Сотрудник = &Сотрудник
		|	И Работники.Сотрудник.ИНАГРО_ВидЗанятости <> &ВидЗанятостиСовмещение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Работники.Период УБЫВ,
		|	Работники.ЗанимаемыхСтавок УБЫВ";
		
		ЗапросДатаУвольнения.УстановитьПараметр("Сотрудник", Сотрудник);
		ЗапросДатаУвольнения.УстановитьПараметр("Организация", Организация);
		ЗапросДатаУвольнения.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятости.ВнутреннееСовместительство);
		
		РезультатДатаУвольнения = ЗапросДатаУвольнения.Выполнить().Выбрать();
		РезультатДатаУвольнения.Следующий();
		
		ЗапросПериодДоходов = Новый Запрос;
		ЗапросПериодДоходов.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МИНИМУМ(Доходы.Период), ДАТАВРЕМЯ(1,1,1)) КАК НачалоПериодаДоходов,
		|	МАКСИМУМ(КОНЕЦПЕРИОДА(Доходы.Период,МЕСЯЦ)) КАК ОкончаниеПериодаДоходов
		|ИЗ
		|	Документ.ИНАГРО_СправкаОДоходах.Доходы КАК Доходы
		|ГДЕ
		|	Доходы.Ссылка = &Ссылка";
		
		ЗапросПериодДоходов.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатПериодДоходов = ЗапросПериодДоходов.Выполнить().Выбрать();
		РезультатПериодДоходов.Следующий();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ИНАГРО_СправкаОДоходахДоходы.Период КАК Период,
		               |	ИНАГРО_СправкаОДоходахДоходы.РезультатВзносы КАК РезультатВзносы,
		               |	ИНАГРО_СправкаОДоходахДоходы.ДоходНДФЛ КАК ДоходНДФЛ,
		               |	ИНАГРО_СправкаОДоходахДоходы.НДФЛ КАК НДФЛ,
		               |	ИНАГРО_СправкаОДоходахДоходы.ДоходВоенныйСбор КАК ДоходВоенныйСбор,
		               |	ИНАГРО_СправкаОДоходахДоходы.ВоенныйСбор КАК ВоенныйСбор,
		               |	ИНАГРО_СправкаОДоходахДоходы.ДоходЗаВычетомНДФЛ КАК ДоходЗаВычетомНДФЛ
		               |ИЗ
		               |	Документ.ИНАГРО_СправкаОДоходах.Доходы КАК ИНАГРО_СправкаОДоходахДоходы
		               |ГДЕ
		               |	ИНАГРО_СправкаОДоходахДоходы.Ссылка = &Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Период";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);	
		ТабДоходы = Запрос.Выполнить().Выгрузить();
		
		// Выводим шапку
		ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
		
		Если Ссылка.Сотрудник.ФизическоеЛицо.Пол = Перечисления.ПолФизическогоЛица.Женский Тогда
			ОбластьМакетаШапка.Параметры.он = НСтр("ru='она';uk='вона'",КодЯзыкаПечать);
			ОкончаниеРаботал = НСтр("ru='а';uk='ла'",КодЯзыкаПечать);
		Иначе
			ОбластьМакетаШапка.Параметры.он = НСтр("ru='он';uk='він'",КодЯзыкаПечать);
			ОкончаниеРаботал = НСтр("ru='';uk='в'",КодЯзыкаПечать);
		КонецЕсли;
		
		ТекстДоговор = "";		
		НаимОрганизации = Ссылка.Организация.НаименованиеПолное;
			Если Ссылка.Сотрудник.ИНАГРО_ДоговорПодряда Тогда
				ТекстРаботает = НСтр("ru='работал';uk='працюва'",КодЯзыкаПечать)+ОкончаниеРаботал+" в  "+ НаимОрганизации +
				ТекстДоговор + НСтр("ru=' по гражданско-правовому договору';uk=' за цивільно-правовим договором'",КодЯзыкаПечать);
			Иначе		
				Если РезультатДатаУвольнения.ЗанимаемыхСтавок > 0 Тогда
					ТекстРаботает = НСтр("ru='работает в ';uk='працює в '",КодЯзыкаПечать) + НаимОрганизации +НСтр("ru=' с ';uk=' з '",КодЯзыкаПечать) +
					Формат(РезультатДатаПриема.ДатаПриема, "ДЛФ=Д")+НСтр("ru='г.';uk='р.'",КодЯзыкаПечать) + ТекстДоговор + НСтр("ru='. В настоящий момент занимает должность ';uk='. На даний момент займає посаду '",КодЯзыкаПечать) + РезультатДолжность.Должность.Наименование;
				Иначе
					ТекстРаботает = НСтр("ru='работал';uk='працював'",КодЯзыкаПечать)+ОкончаниеРаботал+" в  "+НаимОрганизации +НСтр("ru=' с ';uk=' з '",КодЯзыкаПечать) +
					Формат(РезультатДатаПриема.ДатаПриема, "ДЛФ=Д")+ НСтр("ru='г.';uk='р.'", КодЯзыкаПечать) + " по " + Формат(РезультатДатаУвольнения.ДатаУвольнения, "ДЛФ=Д")+ НСтр("ru='г.';uk='р.'",КодЯзыкаПечать)  + ТекстДоговор + НСтр("ru=' на должности ';uk=' на посаді '",КодЯзыкаПечать) + РезультатДолжность.Должность.Наименование;
				КонецЕсли
			КонецЕсли;
			
		ОбластьМакетаШапка.Параметры.Номер						= Ссылка.Номер;
		ОбластьМакетаШапка.Параметры.Дата						= Формат(Дата, "ДЛФ=Д");
		ОбластьМакетаШапка.Параметры.ИдентификационныйКод		= Сотрудник.ФизическоеЛицо.КодПоДРФО;
		ОбластьМакетаШапка.Параметры.ТекстРаботает				= ТекстРаботает;
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// Вывод шапки таблицы
		ОбластьШапкаТаб = Макет.ПолучитьОбласть("ШапкаТаб");
		ТабДокумент.Вывести(ОбластьШапкаТаб);
		
		ОбластьСтрокиТаб = Макет.ПолучитьОбласть("СтрокаТаб");		
		Для каждого СтрокаТЧ Из ТабДоходы Цикл
			ОбластьСтрокиТаб.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(ОбластьСтрокиТаб);
		КонецЦикла; 
		
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		
		ОбластьИтоги.Параметры.ДатаНач	= Формат(МАКС(?(РезультатДатаПриема.ДатаПриема = Неопределено,'00010101', РезультатДатаПриема.ДатаПриема),РезультатПериодДоходов.НачалоПериодаДоходов), "ДЛФ=Д");
		Если ?(РезультатДатаУвольнения.ЗанимаемыхСтавок = Неопределено, 0, РезультатДатаУвольнения.ЗанимаемыхСтавок) > 0 Тогда
			ОбластьИтоги.Параметры.ДатаКон			= Формат(РезультатПериодДоходов.ОкончаниеПериодаДоходов, "ДЛФ=Д"); 
		Иначе
			ОбластьИтоги.Параметры.ДатаКон			= Формат(?(НЕ ЗначениеЗаполнено(РезультатДатаУвольнения.ДатаУвольнения),РезультатПериодДоходов.ОкончаниеПериодаДоходов,МИН(РезультатДатаУвольнения.ДатаУвольнения-86400,РезультатПериодДоходов.ОкончаниеПериодаДоходов)), "ДЛФ=Д");
		КонецЕсли;	

		ОбластьИтоги.Параметры.ИтогРезультатВзносы		= ТабДоходы.Итог("РезультатВзносы");		
		ОбластьИтоги.Параметры.ИтогДоходНДФЛ			= ТабДоходы.Итог("ДоходНДФЛ");	
		ОбластьИтоги.Параметры.ИтогНДФЛ			 		= ТабДоходы.Итог("НДФЛ");
		ОбластьИтоги.Параметры.ИтогДоходВоенныйСбор		= ТабДоходы.Итог("ДоходВоенныйСбор");			
		ОбластьИтоги.Параметры.ИтогВоенныйСбор			= ТабДоходы.Итог("ВоенныйСбор");		
		ОбластьИтоги.Параметры.ИтогДоходЗаВычетомНДФЛ	= ТабДоходы.Итог("ДоходЗаВычетомНДФЛ");			
		ТабДокумент.Вывести(ОбластьИтоги);
			
		// Дно
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Организация, Дата);

		ОбластьМакета = Макет.ПолучитьОбласть("Дно");
		ОбластьМакета.Параметры.НазначениеСправки	= Ссылка.НазначениеСправки;
		ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
		ОбластьМакета.Параметры.Директор	= ОтветственныеЛица.Руководитель;
		ТабДокумент.Вывести(ОбластьМакета);
	
	КонецЦикла;	
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьБезработица(МассивОбъектов, ОбъектыПечати, ПараметрыВывода, НазваниеМакета)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СПРАВКА_О_ДОХОДАХ_БЕЗРАБОТИЦА";
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если ПроверкаНаЗаполнениеТЧДоходыПередПечатью(Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		// получаем макет документа 
		Если НазваниеМакета = "Форма3" Тогда
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетБезработица");
		ИначеЕсли НазваниеМакета = "Форма4" Тогда
		    Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетБезработицаПр4");
		КонецЕсли; 

		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		// получаем данные для печати
		ЗапросФИО = Новый Запрос;
		ЗапросФИО.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
		|ГДЕ
		|	ФИОФизЛицСрезПоследних.ФизическоеЛицо = &ФизЛицо";
		
		ЗапросФИО.УстановитьПараметр("ФизЛицо", Ссылка.Сотрудник.ФизическоеЛицо);
		ЗапросФИО.УстановитьПараметр("Дата", Ссылка.Дата);
		
		РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
		РезультатФИО.Следующий();
		
		// Выводим шапку
		ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата,,,КодЯзыкаПечать);
		ОбластьМакетаШапка.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование + ", " + СведенияОбОрганизации.ЮридическийАдрес ;
		
		ОбластьМакетаШапка.Параметры.Номер	= Ссылка.Номер;
		ОбластьМакетаШапка.Параметры.Дата	= Формат(Ссылка.Дата, "ДЛФ=Д");
		ОбластьМакетаШапка.Параметры.ДРФО	= Ссылка.Сотрудник.ФизическоеЛицо.КодПоДРФО;
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// выводим строки
		Доходы = Ссылка.Доходы;
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		Для каждого СтрокаТЧ Из Доходы Цикл
			ОбластьМакета.Параметры.Период				= Формат(СтрокаТЧ.Период, "ДФ=""ММММ ` гггг""; Л=""uk""");
			Если СтрокаТЧ.КалендарныеДни > 0 Тогда
				ОбластьМакета.Параметры.Месяц			= Формат(СтрокаТЧ.Период, "ДФ=""ММММ""; Л=""uk""");
			Иначе
				ОбластьМакета.Параметры.Месяц			= "";
			КонецЕсли;	
			ОбластьМакета.Параметры.КалендарныеДни	= СтрокаТЧ.КалендарныеДни;
			ОбластьМакета.Параметры.ВсегоОблагаемое	= СтрокаТЧ.ВсегоОблагаемое;
			ОбластьМакета.Параметры.РезультатВсего	= СтрокаТЧ.РезультатВсего;
			ОбластьМакета.Параметры.РезультатВзносы	= СтрокаТЧ.РезультатВзносы;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;		
		
		// Итоги
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		ОбластьМакета.Параметры.КалендарныеДни	= Доходы.Итог("КалендарныеДни");
		ОбластьМакета.Параметры.ВсегоОблагаемое	= Доходы.Итог("ВсегоОблагаемое");
		ОбластьМакета.Параметры.РезультатВсего	= Доходы.Итог("РезультатВсего");
		ОбластьМакета.Параметры.РезультатВзносы	= Доходы.Итог("РезультатВзносы");
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Дно
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата);
		Если  Доходы.Итог("КалендарныеДни") <> 0 Тогда
			Результат1 = Доходы.Итог("РезультатВсего")/Доходы.Итог("КалендарныеДни");
			Результат2 = СтрокаТЧ.Предел/30.44;
			Если Результат2 = 0 Тогда
				Результат = Результат1;
			Иначе
				Результат = Мин(Результат1,Результат2);
			КонецЕсли;	
		Иначе
			Результат = 0;
		КонецЕсли;	
		
		ОбластьМакета = Макет.ПолучитьОбласть("Дно");
		
		Если Ссылка.Сотрудник.ИНАГРО_ВидЗанятости = Перечисления.ВидыЗанятости.Совместительство Тогда
			ЗапросДатаУвольнения = Новый Запрос;
			ЗапросДатаУвольнения.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	Работники.Период КАК ДатаУвольнения
			|ИЗ
			|	РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК Работники
			|ГДЕ
			|	Работники.Сотрудник = &Сотрудник
			|	И Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Работники.Период УБЫВ";
			
			ЗапросДатаУвольнения.УстановитьПараметр("Сотрудник", Ссылка.Сотрудник);
			ЗапросДатаУвольнения.УстановитьПараметр("Организация", Ссылка.Организация);
			
			РезультатДатаУвольнения = ЗапросДатаУвольнения.Выполнить().Выбрать();
			Пока РезультатДатаУвольнения.Следующий() Цикл
				ОбластьМакета.Параметры.ДатаУвольнения	= РезультатДатаУвольнения.ДатаУвольнения-1;
			КонецЦикла;	
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
		ОбластьМакета.Параметры.Руководитель		= ОтветственныеЛица.Руководитель;
		ОбластьМакета.Параметры.Результат			= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Результат, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать)+"  ( "+Формат(Цел(Результат),"ЧЦ=10; ЧДЦ=0; ЧН=0; ЧГ=")+" грн. "+Формат((Результат-Цел(Результат))*100,"ЧЦ=2; ЧДЦ=0; ЧН=00; ЧВН=")+" коп.)";
		ТабДокумент.Вывести(ОбластьМакета);
			
	КонецЦикла;
		
	Возврат ТабДокумент;	
	
КонецФункции

Функция ПечатьПенсия(МассивОбъектов, ОбъектыПечати, ПараметрыВывода, НазваниеМакета)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СПРАВКА_О_ДОХОДАХ_ПЕНСИЯ";
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если ПроверкаНаЗаполнениеТЧДоходыПередПечатью(Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		// получаем макет документа 
		Если НазваниеМакета = "ПенсияНовая" Тогда
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетПенсия2015");
		ИначеЕсли НазваниеМакета = "ПенсияСтарая" Тогда
		    Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетПенсия");
		КонецЕсли; 
				
		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		ТабДокумент = Новый ТабличныйДокумент;
		
		// получаем данные для печати
		ЗапросФИО = Новый Запрос;
		ЗапросФИО.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
		|ГДЕ
		|	ФИОФизЛицСрезПоследних.ФизическоеЛицо = &ФизЛицо";
		
		ЗапросФИО.УстановитьПараметр("ФизЛицо", Ссылка.Сотрудник.ФизическоеЛицо);
		ЗапросФИО.УстановитьПараметр("Дата", Ссылка.Дата);
		
		РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
		РезультатФИО.Следующий();
		
		// Выводим шапку
		ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
		Результат = Ссылка.Доходы.Итог("РезультатВсего");
		ОбластьМакетаШапка.Параметры.Результат	= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Результат, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
		
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// выводим строки
		ОбластьМакета = Макет.ПолучитьОбласть("Таблица|ПерваяКолонка");
		ТабДокумент.Вывести(ОбластьМакета);
		Год = 0;
		Итог = 0;
		ОбластьКолонка = Макет.ПолучитьОбласть("Таблица|Колонка");
		ТЧДоходы = Ссылка.Доходы.Выгрузить();
		ТЧДоходы.Сортировать("Период");
		Для каждого СтрокаТЧ Из ТЧДоходы Цикл
			Если Год(СтрокаТЧ.Период) <> Год Тогда
				Если Год > 0 Тогда
					ОбластьКолонка.Параметры.Итог = Итог;
					ТабДокумент.Присоединить(ОбластьКолонка);
				КонецЕсли;
				Год = Год(СтрокаТЧ.Период);
				Итог = 0;
				ОбластьКолонка = Макет.ПолучитьОбласть("Таблица|Колонка");
				ОбластьКолонка.Параметры.Год = Строка(Год)+Нстр("ru = ' г. '; uk = ' р. '", КодЯзыкаПечать);
				ОбластьКолонка.Параметры.Январь = 0;
				ОбластьКолонка.Параметры.Февраль = 0;
				ОбластьКолонка.Параметры.Март = 0;
				ОбластьКолонка.Параметры.Апрель = 0;
				ОбластьКолонка.Параметры.Май = 0;
				ОбластьКолонка.Параметры.Июнь = 0;
				ОбластьКолонка.Параметры.Июль = 0;
				ОбластьКолонка.Параметры.Август = 0;
				ОбластьКолонка.Параметры.Сентябрь = 0;
				ОбластьКолонка.Параметры.Октябрь = 0;
				ОбластьКолонка.Параметры.Ноябрь = 0;
				ОбластьКолонка.Параметры.Декабрь = 0;
			КонецЕсли;	
			Если Месяц(СтрокаТЧ.Период) = 1 Тогда
				ОбластьКолонка.Параметры.Январь = СтрокаТЧ.РезультатВсего;
			ИначеЕсли Месяц(СтрокаТЧ.Период) = 2 Тогда
				ОбластьКолонка.Параметры.Февраль = СтрокаТЧ.РезультатВсего;
			ИначеЕсли Месяц(СтрокаТЧ.Период) = 3 Тогда
				ОбластьКолонка.Параметры.Март = СтрокаТЧ.РезультатВсего;
			ИначеЕсли Месяц(СтрокаТЧ.Период) = 4 Тогда
				ОбластьКолонка.Параметры.Апрель = СтрокаТЧ.РезультатВсего;
			ИначеЕсли Месяц(СтрокаТЧ.Период) = 5 Тогда
				ОбластьКолонка.Параметры.Май = СтрокаТЧ.РезультатВсего;
			ИначеЕсли Месяц(СтрокаТЧ.Период) = 6 Тогда
				ОбластьКолонка.Параметры.Июнь = СтрокаТЧ.РезультатВсего;
			ИначеЕсли Месяц(СтрокаТЧ.Период) = 7 Тогда
				ОбластьКолонка.Параметры.Июль = СтрокаТЧ.РезультатВсего;
			ИначеЕсли Месяц(СтрокаТЧ.Период) = 8 Тогда
				ОбластьКолонка.Параметры.Август = СтрокаТЧ.РезультатВсего;
			ИначеЕсли Месяц(СтрокаТЧ.Период) = 9 Тогда
				ОбластьКолонка.Параметры.Сентябрь = СтрокаТЧ.РезультатВсего;
			ИначеЕсли Месяц(СтрокаТЧ.Период) = 10 Тогда
				ОбластьКолонка.Параметры.Октябрь = СтрокаТЧ.РезультатВсего;
			ИначеЕсли Месяц(СтрокаТЧ.Период) = 11 Тогда
				ОбластьКолонка.Параметры.Ноябрь = СтрокаТЧ.РезультатВсего;
			ИначеЕсли Месяц(СтрокаТЧ.Период) = 12 Тогда
				ОбластьКолонка.Параметры.Декабрь = СтрокаТЧ.РезультатВсего;
			КонецЕсли;	
			Итог = Итог + СтрокаТЧ.РезультатВсего;	
		КонецЦикла;
		
		ОбластьКолонка.Параметры.Итог = Итог;
		ТабДокумент.Присоединить(ОбластьКолонка);
		
		// Дно
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата);
		ГодНач = Год(ТЧДоходы[0].Период);
		ГодКон = Год(ТЧДоходы[ТЧДоходы.Количество()-1].Период);
		Если ГодНач = ГодКон Тогда
			Года = Строка(ГодНач);
		Иначе
			Года = Строка(ГодНач)+" - "+Строка(ГодКон);
		КонецЕсли;	
		
		ОбластьМакета = Макет.ПолучитьОбласть("Дно");
		ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
		ОбластьМакета.Параметры.Руководитель	= ОтветственныеЛица.Руководитель;
		
		Если НазваниеМакета = "ПенсияСтарая" Тогда
			ОбластьМакета.Параметры.Года = Года;
		КонецЕсли; 
		
		ТабДокумент.Вывести(ОбластьМакета);
					
	КонецЦикла;
		
	Возврат ТабДокумент;	
	
КонецФункции

Функция ПечатьСоцСтрах(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СПРАВКА_О_ДОХОДАХ_СОЦСТРАХ";
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если ПроверкаНаЗаполнениеТЧДоходыПередПечатью(Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		// запоминаем области макета
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетСоцстрах");
		
		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
				
		// получаем данные для печати
		ЗапросФИО = Новый Запрос;
		ЗапросФИО.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
		|ГДЕ
		|	ФИОФизЛицСрезПоследних.ФизическоеЛицо = &ФизЛицо";
		
		ЗапросФИО.УстановитьПараметр("ФизЛицо", Ссылка.Сотрудник.ФизическоеЛицо);
		ЗапросФИО.УстановитьПараметр("Дата", Ссылка.Дата);
		
		РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
		РезультатФИО.Следующий();
				
		// Выводим шапку
		ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация,Ссылка.Дата,,,КодЯзыкаПечать);
		
		ОбластьМакетаШапка.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование;
		ОбластьМакетаШапка.Параметры.Номер			= Ссылка.Номер;
		ОбластьМакетаШапка.Параметры.Дата			= Формат(Ссылка.Дата, "ДЛФ=Д");
		ОбластьМакетаШапка.Параметры.ДРФО			= Ссылка.Сотрудник.ФизическоеЛицо.КодПоДРФО;
		
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// выводим строки
		Доходы = Ссылка.Доходы;
		ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка периода
		Для каждого СтрокаТЧ Из Доходы Цикл
			ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ ` гггг""; Л="+КодЯзыкаПечать+"");
			ОбластьМакета.Параметры.ОтработаноДней	= СтрокаТЧ.ОтработаноДней;
			ОбластьМакета.Параметры.РезультатОсновное	= СтрокаТЧ.РезультатОсновное;
			ОбластьМакета.Параметры.РезультатСовместительство	= СтрокаТЧ.РезультатСовместительство;
			ОбластьМакета.Параметры.РезультатВсего	= СтрокаТЧ.РезультатВсего;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;		
		
		// Итоги
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		ОбластьМакета.Параметры.ОтработаноДней	= Доходы.Итог("ОтработаноДней");
		ОбластьМакета.Параметры.РезультатОсновное	= Доходы.Итог("РезультатОсновное");
		ОбластьМакета.Параметры.РезультатСовместительство	= Доходы.Итог("РезультатСовместительство");
		ОбластьМакета.Параметры.РезультатВсего	= Доходы.Итог("РезультатВсего");
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Дно
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата);
		
		РезультатВсего = Доходы.Итог("РезультатВсего");
		ОтработаноДней = Доходы.Итог("ОтработаноДней");
		
		Если (РезультатВсего ИЛИ ОтработаноДней) <> 0 Тогда
			Результат = РезультатВсего / ОтработаноДней;
		Иначе
			Результат = 0;
		КонецЕсли; 
				
		ОбластьМакета = Макет.ПолучитьОбласть("Дно");
		ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
		ОбластьМакета.Параметры.Руководитель		= ОтветственныеЛица.Руководитель;
		ОбластьМакета.Параметры.Результат			= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Результат, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
		ТабДокумент.Вывести(ОбластьМакета);
					
	КонецЦикла;
		
	Возврат ТабДокумент;
		
КонецФункции

Функция ПечатьСубсидия(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СПРАВКА_О_ДОХОДАХ_СУБСИДИЯ";
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если ПроверкаНаЗаполнениеТЧДоходыПередПечатью(Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		// запоминаем области макета
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетСубсидия");
		
		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		ЗапросФИО = Новый Запрос;
		ЗапросФИО.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
		|ГДЕ
		|	ФИОФизЛицСрезПоследних.ФизическоеЛицо = &ФизЛицо";
		
		ЗапросФИО.УстановитьПараметр("ФизЛицо", Ссылка.Сотрудник.ФизическоеЛицо);
		ЗапросФИО.УстановитьПараметр("Дата", Ссылка.Дата);
		
		РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
		РезультатФИО.Следующий();
		
		ЗапросДолжность = Новый Запрос;
		ЗапросДолжность.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Работники.Должность
		|ИЗ
		|	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(
		|			&Дата,
		|			Организация = &Организация
		|				И ЗанимаемыхСтавок > 0) КАК Работники
		|ГДЕ
		|	Работники.Сотрудник = &Сотрудник
		|	И Работники.Сотрудник.ИНАГРО_ВидЗанятости <> &ВидЗанятостиСовмещение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Работники.Период УБЫВ";
		
		ЗапросДолжность.УстановитьПараметр("Дата", Ссылка.Дата);
		ЗапросДолжность.УстановитьПараметр("Сотрудник", Ссылка.Сотрудник);
		ЗапросДолжность.УстановитьПараметр("Организация", Ссылка.Организация);
		ЗапросДолжность.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятости.ВнутреннееСовместительство);
		
		РезультатДолжность = ЗапросДолжность.Выполнить().Выбрать();
		РезультатДолжность.Следующий();
				
		// Выводим шапку
		Организация = Ссылка.Организация;
		Дата = Ссылка.Дата;
		ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Физлицо 		  = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
		ОбластьМакетаШапка.Параметры.Должность 		  = РезультатДолжность.Должность;
		Если Ссылка.Сотрудник.ИНАГРО_ВидЗанятости 	  = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы Тогда
			ОбластьМакетаШапка.Параметры.ВидЗанятости = НСтр("ru='основное'; uk='основне'",КодЯзыкаПечать);
		Иначе 
			ОбластьМакетаШапка.Параметры.ВидЗанятости = НСтр("ru='по совместительству'; uk='за сумісництвом'",КодЯзыкаПечать);
		КонецЕсли;	
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Организация, Дата,,,"КодЯзыкаПечать");
		
		ОбластьМакетаШапка.Параметры.ФЛП 			 = ?(Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо, СведенияОбОрганизации.ПолноеНаименование,"");
		ОбластьМакетаШапка.Параметры.Организация	 = ?(Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо,СведенияОбОрганизации.ПолноеНаименование,"");
		ОбластьМакетаШапка.Параметры.Организация_ФЛП = СведенияОбОрганизации.ПолноеНаименование;
		ОбластьМакетаШапка.Параметры.Адрес			 = СведенияОбОрганизации.ЮридическийАдрес;
		ОбластьМакетаШапка.Параметры.Телефон 		 = СведенияОбОрганизации.Телефоны;
		ОбластьМакетаШапка.Параметры.ЕДРПОУ			 = ?(Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо,СведенияОбОрганизации.КодПоЕДРПОУ,СведенияОбОрганизации.КодПоДРФО);
		
		ОбластьМакетаШапка.Параметры.ДРФО = Ссылка.Сотрудник.ФизическоеЛицо.КодПоДРФО;
		
		Срез = РегистрыСведений.КодыОрганизации.СрезПоследних(Дата, Новый Структура("Организация",Организация));
		Если Срез.Количество() > 0 Тогда
			ОбластьМакетаШапка.Параметры.ГНА = Срез[0].НалоговаяИнспекция;
		КонецЕсли;	
		
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		Доходы = Ссылка.Доходы;		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка периода
		Для каждого СтрокаТЧ Из Доходы Цикл
			ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ ` гггг""; Л="+КодЯзыкаПечать+"");
			ОбластьМакета.Параметры.НачисленоЗП		= СтрокаТЧ.НачисленоЗП;
			ОбластьМакета.Параметры.НачисленоПрочее	= СтрокаТЧ.НачисленоПрочее;
			ОбластьМакета.Параметры.Алименты		= СтрокаТЧ.Алименты;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;		
		
		// Итоги
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		ОбластьМакета.Параметры.НачисленоЗП		= Доходы.Итог("НачисленоЗП");
		ОбластьМакета.Параметры.НачисленоПрочее	= Доходы.Итог("НачисленоПрочее");
		ОбластьМакета.Параметры.Алименты		= Доходы.Итог("Алименты");
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Дно
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Организация, Дата);
		Результат = Доходы.Итог("НачисленоЗП")+Доходы.Итог("НачисленоПрочее")-Доходы.Итог("Алименты");
		
		ОбластьМакета = Макет.ПолучитьОбласть("Дно");
		
		ОбластьМакета.Параметры.ПериодС 			  = Формат(Доходы[0].Период,	"ДФ=""ММММ гггг""; Л="+КодЯзыкаПечать+"");
		ОбластьМакета.Параметры.ПериодПо 		      = Формат(СтрокаТЧ.Период,	"ДФ=""ММММ гггг""; Л="+КодЯзыкаПечать+"");

		ОбластьМакета.Параметры.ДолжностьРуководителя = ОтветственныеЛица.РуководительДолжность;
		ОбластьМакета.Параметры.Дата				  = Дата;
		ОбластьМакета.Параметры.Номер				  = Ссылка.Номер;
		ОбластьМакета.Параметры.Результат			  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Результат, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
		ОбластьМакета.Параметры.ГлавныйБухгалтер	  = ОтветственныеЛица.ГлавныйБухгалтер;
		ОбластьМакета.Параметры.Руководитель		  = ОтветственныеЛица.Руководитель;
		ТабДокумент.Вывести(ОбластьМакета);
			
	КонецЦикла;
		
	Возврат ТабДокумент;
		
КонецФункции

Функция ПечатьСубсидия2015(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СПРАВКА_О_ДОХОДАХ_СУБСИДИЯ_2015";
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если ПроверкаНаЗаполнениеТЧДоходыПередПечатью(Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		// запоминаем области макета
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетСубсидия2015");
		
		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		Организация = Ссылка.Организация;
		Дата = Ссылка.Дата;

		ЗапросФИО = Новый Запрос;
		ЗапросФИО.Текст = 
		"ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
		|ГДЕ
		|	ФИОФизЛицСрезПоследних.ФизическоеЛицо = &ФизЛицо";
		
		ЗапросФИО.УстановитьПараметр("ФизЛицо", Ссылка.Сотрудник.ФизическоеЛицо);
		ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
		РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
		РезультатФИО.Следующий();
		
		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Работники.Должность
		|ИЗ
		|	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(
		|			&Дата,
		|			Организация = &Организация
		|				И ЗанимаемыхСтавок > 0) КАК Работники
		|ГДЕ
		|	Работники.Сотрудник = &Сотрудник
		|	И Работники.Сотрудник.ИНАГРО_ВидЗанятости <> &ВидЗанятостиСовмещение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Работники.Период УБЫВ";
		
		ЗапросДолжность = Новый Запрос(ТекстЗапроса);
		ЗапросДолжность.УстановитьПараметр("Дата", Дата);
		ЗапросДолжность.УстановитьПараметр("Сотрудник", Ссылка.Сотрудник);
		ЗапросДолжность.УстановитьПараметр("Организация", Организация);
		ЗапросДолжность.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятости.ВнутреннееСовместительство);
		
		РезультатДолжность = ЗапросДолжность.Выполнить().Выбрать();
		РезультатДолжность.Следующий();
				
		// Выводим шапку
		ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Физлицо 		  = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
		ОбластьМакетаШапка.Параметры.Должность		  = РезультатДолжность.Должность;
		
		Если Ссылка.Сотрудник.ИНАГРО_ВидЗанятости = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы Тогда
			ОбластьМакетаШапка.Параметры.ВидЗанятости = НСтр("ru='основное'; uk='основне'",КодЯзыкаПечать);
		Иначе 
			ОбластьМакетаШапка.Параметры.ВидЗанятости = НСтр("ru='по совместительству'; uk='за сумісництвом'",КодЯзыкаПечать);
		КонецЕсли;	
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Организация, Дата,,,КодЯзыкаПечать);
		ОбластьМакетаШапка.Параметры.ФЛП 			 = ?(Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо,СведенияОбОрганизации.ПолноеНаименование,"");
		ОбластьМакетаШапка.Параметры.Организация 	 = ?(Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо,СведенияОбОрганизации.ПолноеНаименование,"");
		ОбластьМакетаШапка.Параметры.Организация_ФЛП = СведенияОбОрганизации.ПолноеНаименование;
		ОбластьМакетаШапка.Параметры.Адрес 			 = СведенияОбОрганизации.ЮридическийАдрес;
		ОбластьМакетаШапка.Параметры.Телефон		 = СведенияОбОрганизации.Телефоны;
		ОбластьМакетаШапка.Параметры.ЕДРПОУ 		 = ?(Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо,СведенияОбОрганизации.КодПоЕДРПОУ,"");
		ОбластьМакетаШапка.Параметры.ДРФОФЛП 		 = ?(Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо,"",СведенияОбОрганизации.КодПоДРФО);
		ОбластьМакетаШапка.Параметры.ДРФО			 = Ссылка.Сотрудник.ФизическоеЛицо.КодПоДРФО;
		ОбластьМакетаШапка.Параметры.Год			 = Формат(Год(Ссылка.ДатаНач),"ЧЦ=4; ЧГ=");
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// выводим строки
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		Доходы = Ссылка.Доходы;
		Для каждого СтрокаТЧ Из Доходы Цикл
			ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,"ДФ=""ММММ""; Л=""uk""");
			ОбластьМакета.Параметры.НачисленоЗП		= СтрокаТЧ.НачисленоЗП;
			ОбластьМакета.Параметры.НачисленоПрочее	= СтрокаТЧ.НачисленоПрочее;
			ОбластьМакета.Параметры.НДФЛ			= СтрокаТЧ.НДФЛ;
			ОбластьМакета.Параметры.НДФЛПрочее		= СтрокаТЧ.НДФЛПрочее;
			ОбластьМакета.Параметры.Алименты		= СтрокаТЧ.Алименты;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;		
		
		// Итоги
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		ОбластьМакета.Параметры.НачисленоЗП		= Доходы.Итог("НачисленоЗП");
		ОбластьМакета.Параметры.НачисленоПрочее	= Доходы.Итог("НачисленоПрочее");
		ОбластьМакета.Параметры.НДФЛ			= Доходы.Итог("НДФЛ");
		ОбластьМакета.Параметры.НДФЛПрочее		= Доходы.Итог("НДФЛПрочее");
		ОбластьМакета.Параметры.Алименты		= Доходы.Итог("Алименты");
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Дно
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Организация, Дата);
		Результат = Доходы.Итог("НачисленоЗП")+Доходы.Итог("НачисленоПрочее")-Доходы.Итог("НДФЛ")-Доходы.Итог("НДФЛПрочее")-Доходы.Итог("Алименты");
		
		ОбластьМакета = Макет.ПолучитьОбласть("Дно");
		ОбластьМакета.Параметры.ПериодС 				= Формат(Доходы[0].Период,	"ДФ=""ММММ гггг ""; Л=""uk""");
		ОбластьМакета.Параметры.ПериодПо 				= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ гггг ""; Л=""uk""");
		ОбластьМакета.Параметры.ДолжностьРуководителя	= ОтветственныеЛица.РуководительДолжность;
		ОбластьМакета.Параметры.Дата					= Дата;
		ОбластьМакета.Параметры.Номер					= Ссылка.Номер;
		ОбластьМакета.Параметры.Результат				= ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Результат, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
		ОбластьМакета.Параметры.ГлавныйБухгалтер		= ОтветственныеЛица.ГлавныйБухгалтер;
		ОбластьМакета.Параметры.Руководитель			= ОтветственныеЛица.Руководитель;
		
		ТабДокумент.Вывести(ОбластьМакета);
			
	КонецЦикла;
	
	Возврат ТабДокумент;	
	
КонецФункции

Функция ПечатьСоцСтрах2015(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СПРАВКА_О_ДОХОДАХ_СОЦСТРАХ_2015";
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если ПроверкаНаЗаполнениеТЧДоходыПередПечатью(Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		// запоминаем области макета
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СправкаОДоходах.ПФ_MXL_МакетСоцстрах2015");
		
		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		ЗапросФИО = Новый Запрос;
		ЗапросФИО.Текст = 
		"ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
		|ГДЕ
		|	ФИОФизЛицСрезПоследних.ФизическоеЛицо = &ФизЛицо";
		
		ЗапросФИО.УстановитьПараметр("ФизЛицо", Ссылка.Сотрудник.ФизическоеЛицо);
		ЗапросФИО.УстановитьПараметр("Дата", Ссылка.Дата);
		
		РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
		РезультатФИО.Следующий();
		
		// Выводим шапку
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата,,,КодЯзыкаПечать);
		
		ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Физлицо	 	= РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
		ОбластьМакетаШапка.Параметры.Организация 	= СведенияОбОрганизации.ПолноеНаименование;
		ОбластьМакетаШапка.Параметры.Адрес 			= СведенияОбОрганизации.ЮридическийАдрес;		
		ОбластьМакетаШапка.Параметры.Номер			= Ссылка.Номер;
		ОбластьМакетаШапка.Параметры.Дата			= Формат(Ссылка.Дата, "ДЛФ=Д");
		ОбластьМакетаШапка.Параметры.ДРФО			= Ссылка.Сотрудник.ФизическоеЛицо.КодПоДРФО;
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// выводим строки
		ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка периода
		Для каждого СтрокаТЧ Из Ссылка.Доходы Цикл
			ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ ` гггг""; Л="+КодЯзыкаПечать+"");
			ОбластьМакета.Параметры.КалендарныеДни	= СтрокаТЧ.КалендарныеДни;
			ОбластьМакета.Параметры.РезультатВсего	= СтрокаТЧ.РезультатВсего;
			ОбластьМакета.Параметры.РезультатВзносы	= СтрокаТЧ.РезультатВзносы;
			ОбластьМакета.Параметры.СтавкаВзносов	= СтрокаТЧ.СтавкаВзносов;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;		
		
		// Итоги
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		ОбластьМакета.Параметры.КалендарныеДни	= Ссылка.Доходы.Итог("КалендарныеДни");
		ОбластьМакета.Параметры.РезультатВсего	= Ссылка.Доходы.Итог("РезультатВсего");
		ОбластьМакета.Параметры.РезультатВзносы	= Ссылка.Доходы.Итог("РезультатВзносы");
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Дно
		Неявки = СписокНеявокСоцстрах2015(Ссылка, КодЯзыкаПечать);
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Дно");
		
		Инд =1;
		Для Каждого Неявка Из Неявки Цикл
			ОбластьМакета.Параметры["Причина"+Строка(Инд)] = Неявка.Наименование;
			Инд = Инд + 1;
			Если Инд > 4 Тогда
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
		
		ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
		ОбластьМакета.Параметры.Руководитель		= ОтветственныеЛица.Руководитель;
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
		
КонецФункции

Функция СписокНеявокСоцстрах2015(Ссылка, ЯзыкПечати)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ИНАГРО_НачисленияФактическийПериодДействия.ВидРасчета КАК ВидРасчета,
	|	ИНАГРО_НачисленияФактическийПериодДействия.ВидРасчета.Наименование КАК Наименование,
	|	ИНАГРО_НачисленияФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ВидВремени
	|ИЗ
	|	РегистрРасчета.ИНАГРО_Начисления.ФактическийПериодДействия() КАК ИНАГРО_НачисленияФактическийПериодДействия
	|ГДЕ
	|	ИНАГРО_НачисленияФактическийПериодДействия.Сотрудник = &Сотрудник
	|	И ИНАГРО_НачисленияФактическийПериодДействия.ПериодДействияНачало МЕЖДУ &ДатаНач И &ДатаКон
	|	И ИНАГРО_НачисленияФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.УважительнаяПричинаДляБольничных = ИСТИНА";
	
	Запрос.УстановитьПараметр("Сотрудник", Ссылка.Сотрудник);
	Запрос.УстановитьПараметр("ДатаНач", Ссылка.ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", Ссылка.ДатаКон);
	
	Неявки = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Неявка Из Неявки Цикл
		Если Неявка.ВидВремени = Справочники.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Болезнь ИЛИ
			 Неявка.ВидВремени = Справочники.ИНАГРО_КлассификаторИспользованияРабочегоВремени.БолезньБезОплаты Тогда
			 Неявка.Наименование = НСтр("ru='Временная нетрудоспособность';uk='Тимчасова непрацездатність'",ЯзыкПечати);
		ИначеЕсли Неявка.ВидВремени = Справочники.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам Тогда
			Если Неявка.ВидРасчета.НачислениеЗаСчетФСС Тогда
				Неявка.Наименование = НСтр("ru='Отпуск в связи с беременностью и родами';uk='Відпустка у зв’язку з вагітністю та пологами'",ЯзыкПечати);
			Иначе
				Неявка.Наименование = НСтр("ru='Отпуск по уходу за ребенком к достижению его трехлетнего возраста';uk='Відпустка по догляду за дитиною до досягнення нею трирічного віку'",ЯзыкПечати);
			КонецЕсли;
		ИначеЕсли Неявка.ВидВремени = Справочники.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком Тогда	
			Неявка.Наименование = НСтр("ru='Отпуск по уходу за ребенком к достижению ею шестилетнего возраста';uk='Відпустка по догляду за дитиною до досягнення нею шестирічного віку'",ЯзыкПечати);
		Иначе
			Неявка.Наименование = НСтр("ru='Отпуск без сохранения заработной платы';uk='Відпустка без збереження заробітної плати'",ЯзыкПечати);
		КонецЕсли;	 
	КонецЦикла;	
	
	Неявки.Свернуть("Наименование");
	
	Возврат Неявки;
	
КонецФункции

Функция ПроверкаНаЗаполнениеТЧДоходыПередПечатью(Ссылка)

	Если Ссылка.Доходы.Количество() = 0 Тогда
		ОбщегоНазначенияБПКлиентСервер.СообщитьОбОшибке(НСтр("ru='Не предоставлена информация о доходах в документе "+ Ссылка +"';uk='Не надано інформацію про доходи в документі "+ Ссылка +"'"),,,СтатусСообщения.Важное);
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;	
	
КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
