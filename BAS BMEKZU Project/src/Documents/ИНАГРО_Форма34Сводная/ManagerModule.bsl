#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Форма 34
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Форма34";
	КомандаПечати.Представление = "Форма 34";
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
	
	// Форма 34 (сводная)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Форма34Сводная";
	КомандаПечати.Представление = НСтр("ru='Форма 34 (сводная)';uk='Форма 34 (зведена)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
	
	// Акт распределения отходов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктРаспределенияОтходов";
	КомандаПечати.Представление = НСтр("ru='Акт распределения отходов';uk='Акт розподілу відходів'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
	
	// Акт распределения сушки
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктРаспределенияСушки";
	КомандаПечати.Представление = НСтр("ru='Акт распределения сушки';uk='Акт розподілу сушіння'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
	
	// Акт уничтожения
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктУничтожения";
	КомандаПечати.Представление = НСтр("ru='Акт уничтожения';uk='Акт знищення'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
    
    // Акт уничтожения
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктУничтожения_2021";
	КомандаПечати.Представление = НСтр("ru='Акт уничтожения (2021)';uk='Акт знищення (2021)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";

	// Отчет про использование газа
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетПроГаз";
	КомандаПечати.Представление = НСтр("ru='Отчет про использование газа';uk='Звіт про використання газу'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";
	
	// Форма 34 2021
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Форма34_2021";
	КомандаПечати.Представление = "Форма 34 (2021)";
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокументаОбщая,ФормаСписка";

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Акт очистки/сушки""';uk='Реєстр документів ""Акт очищення/сушіння""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры		

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Форма34") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Форма34", "Форма 34", 
		ПечатьАктОчисткиСушки(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_Форма34Сводная.ПФ_MXL_АктОчисткиСушки", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Форма34Сводная") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Форма34Сводная", НСтр("ru='Форма 34 (сводная)';uk='Форма 34 (зведена)'"), 
		ПечатьФорма34Сводная(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_Форма34Сводная.ПФ_MXL_Форма34", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктРаспределенияОтходов") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктРаспределенияОтходов", НСтр("ru='Акт распределения отходов';uk='Акт розподілу відходів'"), 
		ПечатьАктРаспределенияОтходов(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_Форма34Сводная.ПФ_MXL_АктРаспределенияОтходов", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктРаспределенияСушки") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктРаспределенияСушки", НСтр("ru='Акт распределения сушки';uk='Акт розподілу сушіння'"), 
		ПечатьАктРаспределенияСушки(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_Форма34Сводная.ПФ_MXL_АктРаспределенияСушки", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктУничтожения") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктУничтожения", НСтр("ru='Акт уничтожения';uk='Акт знищення'"), 
		ПечатьАктУничтожения(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_Форма34Сводная.ПФ_MXL_АктУничтожения", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктУничтожения_2021") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктУничтожения_2021", НСтр("ru='Акт уничтожения (2021)';uk='Акт знищення (2021)'"), 
		ПечатьАктУничтожения_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_Форма34Сводная.ПФ_MXL_UK_АктУничтожения_2021", ,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетПроГаз") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтчетПроГаз", НСтр("ru='Отчет про использование газа';uk='Звіт про використання газу'"), 
		ПечатьОтчетПроГаз(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_Форма34Сводная.ПФ_MXL_ОтчетПроГаз", ,Истина);	

	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Форма34_2021") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Форма34_2021", "Форма 34 (3021)", 
		ПечатьАктОчисткиСушки_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_Форма34Сводная.ПФ_MXL_UK_Форма34_2021", , Истина);

	КонецЕсли; 	

КонецПроцедуры

// АктОчисткиСушки
Функция ПечатьАктОчисткиСушки(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
			
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_Форма34Сводная_АктОчисткиСушки";
	
	Макет = ПолучитьМакет("ПФ_MXL_АктОчисткиСушки");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Для каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		СтруктураСохранения = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_Форма34Сводная_Форма34");
		
		Если СтруктураСохранения <> Неопределено Тогда
			СтруктураВыбраннойПечатнойФормы = СтруктураСохранения.ВыбраннаяПечатнаяФорма;
			Если СтруктураВыбраннойПечатнойФормы.Владелец = "Сводная" Тогда
				ПечатьАктОчисткиСушкиСводный(Макет,ТабДокумент,Ссылка);
			Иначе
				ПечатьАктОчисткиСушкиПоВладельцам(Макет,ТабДокумент,СтруктураВыбраннойПечатнойФормы,Ссылка);
			КонецЕсли; 
		Иначе
			ПечатьАктОчисткиСушкиСводный(Макет,ТабДокумент,Ссылка);	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

Функция ПечатьАктОчисткиСушкиСводный(Макет, ТабДокумент, Ссылка)
	
	КодЯзыкаПечать = Макет.КодЯзыкаМакета;
	
	Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(Ссылка.Организация, Ссылка.Дата);
	
	СтруктураШапкиДокумента   = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(Ссылка);
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	
	Шапка.Параметры.Заполнить(СтруктураШапкиДокумента);	
	Шапка.Параметры.Фирма = Ссылка.Организация.НаименованиеПолное;
	Структура = Новый Структура("Организация", Ссылка.Организация);
	
	Шапка.Параметры.НомерРаспоряжения = ?(ЗначениеЗаполнено(Ссылка.НомерРаспоряжения), Ссылка.НомерРаспоряжения, Ссылка.Номер);
	Шапка.Параметры.СтаршийМастер = ИНАГРО_Элеватор.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата, Ссылка.Склад);		
	Шапка.Параметры.НомерДок = Ссылка.Номер;
	Шапка.Параметры.ДатаДок = Формат(Ссылка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	
	Шапка.Параметры.ДатаРаспоряжения = Формат(Ссылка.ДатаРаспоряжения, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	Шапка.Параметры.Номенклатура = Ссылка.Номенклатура.НаименованиеПолное;
	Шапка.Параметры.ЦельПодработки = ?(СокрЛП(Ссылка.ЦельПодработки)="", ?(КодЯзыкаПечать = "uk","доведення до стійкого стану","доведение до стойкого состояния"), Ссылка.ЦельПодработки);
	Шапка.Параметры.СпособПодработки = ""+СокрЛП(Ссылка.СпособПодработки) + " " + Ссылка.Агрегат1+" "+Ссылка.Агрегат2 + " " + ?(Ссылка.РазмерСит = "","",?(КодЯзыкаПечать = "uk","розмір сит ","размеры сит ")+Ссылка.РазмерСит);
	ПланируемаяВлажность = ?(Ссылка.Влажность0 = 0, "",""+?(КодЯзыкаПечать = "uk"," вологість "," влажность ")+Ссылка.Влажность0+"% ");
	ПланируемаяСорнаяПримесь = ?(Ссылка.СорнаяПримесь0 = 0, "",""+?(КодЯзыкаПечать = "uk"," смітна домішка "," сорная примесь ")+Ссылка.СорнаяПримесь0+"% ");
	ПланируемаяЗерноваяПримесь = ?(Ссылка.ЗерноваяПримесь0 = 0, "", ""+?(КодЯзыкаПечать = "uk"," зернова домішка "," зерновая примесь ")+Ссылка.ЗерноваяПримесь0+"% ");
	ПланируемыеРезультаты_ = ""+ПланируемаяВлажность+" "+ПланируемаяСорнаяПримесь+" "+ПланируемаяЗерноваяПримесь+" "+Ссылка.ПланируемыеРезультаты;
	Шапка.Параметры.ПланируемыеРезультаты = ПланируемыеРезультаты_;
	Шапка.Параметры.Руководитель = Руководители.Руководитель;
	Шапка.Параметры.НачальникВТЛ = Руководители.НачальникВТЛ;
	Шапка.Параметры.ДолжностьДиректора = Руководители.ДолжностьРуководителя;	
	Шапка.Параметры.ДатаНачалаОчистки = Формат(Ссылка.ДатаНачалаОчистки, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	Шапка.Параметры.ДатаОкончанияОчистки = Формат(Ссылка.ДатаОкончанияОчистки, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));	
	ТабДокумент.Вывести(Шапка);
	ИтогФизВес = 0;
	Чистка1 = Макет.ПолучитьОбласть("Чистка1");
	Если Ссылка.ФизическийВес8 <> 0 или Ссылка.ФизическийВес7 <> 0 или 
		Ссылка.ФизическийВес9 <> 0 или Ссылка.ФизическийВес10 <> 0 Тогда	
		Чистка1.Параметры.Заполнить(СтруктураШапкиДокумента);
		Чистка1.Параметры.ФизВесДоОчистки = СтруктураШапкиДокумента.ФизическийВес3;
		Чистка1.Параметры.ФизВесПослеОчистки = СтруктураШапкиДокумента.ФизическийВес4;		
		Чистка1.Параметры.Зараженность3 = "Не виявл.";
		Чистка1.Параметры.Зараженность4 = "Не виявл.";
	КонецЕсли;
	
	ТабДокумент.Вывести(Чистка1);
	Если Ссылка.ФизическийВес8 <> 0 Тогда			
		ИтогФизВес = ИтогФизВес + Ссылка.ФизическийВес8;
		ТЧ1 = Макет.ПолучитьОбласть("ТЧ1");
		ТЧ1 = ЗаполнитьОбласть(ТЧ1,Ссылка.Отходы3Категории,Ссылка.ФизическийВес8,Ссылка.Влажность8,Ссылка.ЗерноваяПримесь8,Ссылка.СорнаяПримесь8,Ссылка.НомерАнализа8);
		ТабДокумент.Вывести(ТЧ1);
	КонецЕсли;
	Если Ссылка.ФизическийВес7 <> 0 Тогда
		ИтогФизВес = ИтогФизВес + Ссылка.ФизическийВес7;
		ТЧ1 = Макет.ПолучитьОбласть("ТЧ1");
		ТЧ1 = ЗаполнитьОбласть(ТЧ1,Ссылка.ПобочныйПродукт,Ссылка.ФизическийВес7,Ссылка.Влажность7,Ссылка.ЗерноваяПримесь7,Ссылка.СорнаяПримесь7,Ссылка.НомерАнализа7);
		ТабДокумент.Вывести(ТЧ1);		
	КонецЕсли;
	Если Ссылка.ФизическийВес9 <> 0 Тогда
		ИтогФизВес = ИтогФизВес + Ссылка.ФизическийВес9;
		ТЧ1 = Макет.ПолучитьОбласть("ТЧ1");
		ТЧ1 = ЗаполнитьОбласть(ТЧ1,Ссылка.Отходы1Категории,Ссылка.ФизическийВес9,Ссылка.Влажность9,Ссылка.ЗерноваяПримесь9,Ссылка.СорнаяПримесь9,Ссылка.НомерАнализа9);
		ТабДокумент.Вывести(ТЧ1);		
	КонецЕсли;
	Если Ссылка.ФизическийВес10 <> 0 Тогда
		ИтогФизВес = ИтогФизВес + Ссылка.ФизическийВес10;
		ТЧ1 = Макет.ПолучитьОбласть("ТЧ1");
		ТЧ1 = ЗаполнитьОбласть(ТЧ1,Ссылка.Отходы2Категории,Ссылка.ФизическийВес10,Ссылка.Влажность10,Ссылка.ЗерноваяПримесь10,Ссылка.СорнаяПримесь10,Ссылка.НомерАнализа10);
		ТабДокумент.Вывести(ТЧ1);		
	КонецЕсли;		
	
	Итого = Макет.ПолучитьОбласть("Итого");
	Итого.Параметры.ИтогФизВес = ИтогФизВес;
	ТабДокумент.Вывести(Итого);
	
	Пояснение = Макет.ПолучитьОбласть("Пояснение");
	ТабДокумент.Вывести(Пояснение);
	
	Сушка1 = Макет.ПолучитьОбласть("Сушка1");
	Если СтруктураШапкиДокумента.УбыльОтСушки > 0 Тогда
		Сушка1.Параметры.Заполнить(СтруктураШапкиДокумента);
		Сушка1.Параметры.ДатаНачалаСушки = Формат(Ссылка.ДатаНачалаСушки, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Сушка1.Параметры.ДатаОкончанияСушки = Формат(Ссылка.ДатаОкончанияСушки, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	ИначеЕсли Ссылка.ПроводилиСушку И Ссылка.СпособОтбораСушки = 2 Тогда
		Если ЗначениеЗаполнено(Ссылка.Агрегат2) Тогда
			Агрегат2_ = Ссылка.Агрегат2;
		Иначе
			Агрегат2_ = ?(КодЯзыкаПечать = "uk"," активне вентилювання "," активное вентилирование ");
		КонецЕсли;		
		Сушка1.Параметры.Агрегат2 = Ссылка.Агрегат2_;
		Сушка1.Параметры.Влажность5 = Ссылка.Влажность5;
		Сушка1.Параметры.Влажность6 = Ссылка.Влажность6;		
	КонецЕсли;
	ТабДокумент.Вывести(Сушка1);
	
	Расчет = Макет.ПолучитьОбласть("Расчет");
	Расчет.Параметры.Заполнить(СтруктураШапкиДокумента);	
	ТабДокумент.Вывести(Расчет);
	
	Дно = Макет.ПолучитьОбласть("Дно");
	Дно.Параметры.ДолжностьДиректора = Руководители.ДолжностьРуководителя;
	Дно.Параметры.Руководитель = Руководители.Руководитель;
	Дно.Параметры.НачальникВТЛ = Руководители.НачальникВТЛ;
	Дно.Параметры.Бухгалтер = Руководители.БухгалтерККУ;
	
	ДанныеОтветственногоЛица = Неопределено;
	МОЛФизическоеЛицо = ИНАГРО_Элеватор.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата, Ссылка.Склад, ДанныеОтветственногоЛица);
	Если ЗначениеЗаполнено(ДанныеОтветственногоЛица) Тогда
		Дно.Параметры.ЗавСкладом = ДанныеОтветственногоЛица.ФИО;
	Иначе
		Дно.Параметры.ЗавСкладом = МОЛФизическоеЛицо;
	КонецЕсли;

	Дно.Параметры.ДатаДок = Формат(Ссылка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	ТабДокумент.Вывести(Дно);
					
КонецФункции

Функция ПечатьАктОчисткиСушкиПоВладельцам(Макет,ТабДокумент,СтруктураПараметров,Ссылка)
	
	КодЯзыкаПечать = Макет.КодЯзыкаМакета;
	
	Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(Ссылка.Организация,Ссылка.Дата);
	
	СтруктураШапкиДокумента   = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(Ссылка);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Владелец",СтруктураПараметров.Владелец);
	Запрос.УстановитьПараметр("ПроводилиОчистку",СтруктураПараметров.ПроводилиОчистку);
	Запрос.УстановитьПараметр("ПроводилиСушку",СтруктураПараметров.ПроводилиСушку);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)) КАК ВесДо,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2, 0)) КАК ВесПосле,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Влажность1 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)) КАК ВесПоВлажностиДо,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.СорнаяПримесь1 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)) КАК ВесПоСорнойПримесиДо,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ЗерноваяПримесь1 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)) КАК ВесПоЗерновойПримесиДо,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Влажность2 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2, 0)) КАК ВесПоВлажностиПосле,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ЗерноваяПримесь2 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2, 0)) КАК ВесПоЗерновойПримесиПосле,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.СорнаяПримесь2 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2, 0)) КАК ВесПоСорнойПримесиПосле,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтОчистки, 0)) КАК УбыльОтОчистки,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтСушки, 0)) КАК УбыльОтСушки,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.СнижениеВлажности, 0)) КАК СнижениеВлажности,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес3, 0)) КАК ВесОтходов,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес21, 0)) КАК ВесПобочногоПродукта,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес31, 0)) КАК ВесОтходов1Кат,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес32, 0)) КАК ВесОтходов2Кат,
	|	СУММА(ВЫБОР
	|			КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.Порядок = ИСТИНА
	|				ТОГДА ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1 - ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтСушки, 0)
	|			ИНАЧЕ ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)
	|		КОНЕЦ) КАК ФизВесДоОчистки,
	|	СУММА(ВЫБОР
	|			КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.Порядок = ИСТИНА
	|				ТОГДА ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2, 0)
	|			ИНАЧЕ ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2 + ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтСушки, 0)
	|		КОНЕЦ) КАК ФизВесПослеОчистки,
	|	СУММА(ВЫБОР
	|			КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.Порядок = ИСТИНА
	|				ТОГДА ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)
	|			ИНАЧЕ ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2 + ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтСушки, 0)
	|		КОНЕЦ) КАК ФизВесДоСушки,
	|	СУММА(ВЫБОР
	|			КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.Порядок = ИСТИНА
	|				ТОГДА ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1 - ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтСушки, 0)
	|			ИНАЧЕ ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2, 0)
	|		КОНЕЦ) КАК ФизВесПослеСушки,
	|	ВЫБОР
	|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиОчистку
	|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиОчистку
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПроводилиОчистку,
	|	ВЫБОР
	|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиСушку
	|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиСушку
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПроводилиСушку
	|ИЗ
	|	Документ.ИНАГРО_Форма34Сводная.РасчетПоВладельцам КАК ИНАГРО_Форма34СводнаяРасчетПоВладельцам
	|ГДЕ
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка = &Ссылка
	|	И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец = &Владелец
	|	И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиОчистку = &ПроводилиОчистку
	|	И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиСушку = &ПроводилиСушку
	|
	|СГРУППИРОВАТЬ ПО
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец,
	|	ВЫБОР
	|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиОчистку
	|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиОчистку
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиСушку
	|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиСушку
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	
	Шапка.Параметры.Заполнить(СтруктураШапкиДокумента);	
	Шапка.Параметры.Фирма = Ссылка.Организация.НаименованиеПолное;
	Структура = Новый Структура("Организация", Ссылка.Организация);
	
	Шапка.Параметры.НомерДок = Ссылка.Номер + " - " + СтруктураПараметров.НомерСтроки;
	Шапка.Параметры.НомерРаспоряжения = ?(ЗначениеЗаполнено(Ссылка.НомерРаспоряжения), Ссылка.НомерРаспоряжения, Ссылка.Номер);
	Шапка.Параметры.ДатаДок = Формат(Ссылка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	
	Шапка.Параметры.ДатаРаспоряжения = Формат(Ссылка.ДатаРаспоряжения, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	Шапка.Параметры.Номенклатура = Ссылка.Номенклатура.НаименованиеПолное;
	
	Шапка.Параметры.ФизическийВес1 = Выборка.ВесДо; 
	Шапка.Параметры.УточнитьВладельца = Выборка.Владелец.НаименованиеПолное; 
	
	Шапка.Параметры.ЦельПодработки = ?(СокрЛП(Ссылка.ЦельПодработки)="", ?(КодЯзыкаПечать = "uk","доведення до стійкого стану","доведение до стойкого состояния"), Ссылка.ЦельПодработки);
	Шапка.Параметры.СпособПодработки = ""+СокрЛП(Ссылка.СпособПодработки) + " " + Ссылка.Агрегат1 + " " + Ссылка.Агрегат2 + " " + ?(Ссылка.РазмерСит = "","",?(КодЯзыкаПечать = "uk","розмір сит ","размеры сит ")+Ссылка.РазмерСит);
	ПланируемаяВлажность = ?(Ссылка.Влажность0 = 0, "",""+?(КодЯзыкаПечать = "uk"," вологість "," влажность ")+Ссылка.Влажность0+"% ");
	ПланируемаяСорнаяПримесь = ?(Ссылка.СорнаяПримесь0 = 0, "",""+?(КодЯзыкаПечать = "uk"," смітна домішка "," сорная примесь ")+Ссылка.СорнаяПримесь0+"% ");
	ПланируемаяЗерноваяПримесь = ?(Ссылка.ЗерноваяПримесь0 = 0, "", ""+?(КодЯзыкаПечать = "uk"," зернова домішка "," зерновая примесь ")+Ссылка.ЗерноваяПримесь0+"% ");
	ПланируемыеРезультаты_ = ""+ПланируемаяВлажность+" "+ПланируемаяСорнаяПримесь+" "+ПланируемаяЗерноваяПримесь+" "+СокрЛП(Ссылка.ПланируемыеРезультаты);
	Шапка.Параметры.ПланируемыеРезультаты = ПланируемыеРезультаты_;	
	Шапка.Параметры.Руководитель = Руководители.Руководитель;
	Шапка.Параметры.НачальникВТЛ = Руководители.НачальникВТЛ;
	Шапка.Параметры.ДолжностьДиректора = Руководители.ДолжностьРуководителя;	
	Шапка.Параметры.ДатаНачалаОчистки = Формат(Ссылка.ДатаНачалаОчистки, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	Шапка.Параметры.ДатаОкончанияОчистки = Формат(Ссылка.ДатаОкончанияОчистки, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));	
	ТабДокумент.Вывести(Шапка);
	ИтогФизВес = 0;
	Чистка1 = Макет.ПолучитьОбласть("Чистка1");
	Если Выборка.ВесОтходов <> 0 или Выборка.ВесПобочногоПродукта <> 0 или 
		Выборка.ВесОтходов1Кат <> 0 или Выборка.ВесОтходов2Кат <> 0 Тогда		
		Чистка1.Параметры.Натура3 = Ссылка.Натура3;
		Чистка1.Параметры.Натура4 = Ссылка.Натура4;			
		Чистка1.Параметры.Зараженность3 = "Не виявл.";
		Чистка1.Параметры.Зараженность4 = "Не виявл.";
		Чистка1.Параметры.ФизВесДоОчистки = Выборка.ФизВесДоОчистки;
		Чистка1.Параметры.ФизВесПослеОчистки = Выборка.ФизВесПослеОчистки;
		ВлажностьДоЧистки_ = Окр(Выборка.ВесПоВлажностиДо/Выборка.ВесДо,2);
		ВлажностьПослеОчистки_ = Окр(Выборка.ВесПоВлажностиДо/Выборка.ВесДо,2);
		Если СтруктураШапкиДокумента.Порядок Тогда
			Если СтруктураШапкиДокумента.Влажность2 < Выборка.ВесПоВлажностиДо/Выборка.ВесДо И Выборка.ПроводилиСушку Тогда
				ВлажностьДоЧистки_ = СтруктураШапкиДокумента.Влажность2;
				ВлажностьПослеОчистки_ = СтруктураШапкиДокумента.Влажность2;
			КонецЕсли;			
		КонецЕсли;
		Чистка1.Параметры.Влажность3 = ВлажностьДоЧистки_;
		Чистка1.Параметры.Влажность4 = ВлажностьПослеОчистки_;
		Чистка1.Параметры.СорнаяПримесь3 = Окр(Выборка.ВесПоСорнойПримесиДо/Выборка.ВесДо,2);
		Чистка1.Параметры.СорнаяПримесь4 = СтруктураШапкиДокумента.СорнаяПримесь4;
		Чистка1.Параметры.ЗерноваяПримесь3 = Окр(Выборка.ВесПоЗерновойПримесиДо/Выборка.ВесДо,2);
		Чистка1.Параметры.ЗерноваяПримесь4 = СтруктураШапкиДокумента.ЗерноваяПримесь4;
		Чистка1.Параметры.НомерАнализа3 = СтруктураШапкиДокумента.НомерАнализа3;
		Чистка1.Параметры.НомерАнализа4 = СтруктураШапкиДокумента.НомерАнализа4;		
	КонецЕсли;
	ТабДокумент.Вывести(Чистка1);
	Если Выборка.ВесОтходов <> 0 Тогда			
		ИтогФизВес = ИтогФизВес + Выборка.ВесОтходов;
		ТЧ1 = Макет.ПолучитьОбласть("ТЧ1");
		Если Ссылка.Порядок Тогда
			ТЧ1 = ЗаполнитьОбласть(ТЧ1,Ссылка.Отходы3Категории,Выборка.ВесОтходов,Ссылка.Влажность8,Ссылка.ЗерноваяПримесь8,Ссылка.СорнаяПримесь8,Ссылка.НомерАнализа8);
		Иначе
			ТЧ1 = ЗаполнитьОбласть(ТЧ1,Ссылка.Отходы3Категории,Выборка.ВесОтходов,ВлажностьДоЧистки_,Ссылка.ЗерноваяПримесь8,Ссылка.СорнаяПримесь8,Ссылка.НомерАнализа8);
		КонецЕсли;
		ТабДокумент.Вывести(ТЧ1);
	КонецЕсли;
	Если Выборка.ВесПобочногоПродукта <> 0 Тогда
		ИтогФизВес = ИтогФизВес + Выборка.ВесПобочногоПродукта;
		ТЧ1 = Макет.ПолучитьОбласть("ТЧ1");
		Если Ссылка.Порядок Тогда
			ТЧ1 = ЗаполнитьОбласть(ТЧ1,Ссылка.ПобочныйПродукт,Выборка.ВесПобочногоПродукта,Ссылка.Влажность7,Ссылка.ЗерноваяПримесь7,Ссылка.СорнаяПримесь7,Ссылка.НомерАнализа7);
		Иначе
			ТЧ1 = ЗаполнитьОбласть(ТЧ1,Ссылка.ПобочныйПродукт,Выборка.ВесПобочногоПродукта,ВлажностьДоЧистки_,Ссылка.ЗерноваяПримесь7,Ссылка.СорнаяПримесь7,Ссылка.НомерАнализа7);
		КонецЕсли;
		ТабДокумент.Вывести(ТЧ1);		
	КонецЕсли;
	Если Выборка.ВесОтходов1Кат <> 0 Тогда
		ИтогФизВес = ИтогФизВес + Выборка.ВесОтходов1Кат;
		ТЧ1 = Макет.ПолучитьОбласть("ТЧ1");
		Если Ссылка.Порядок Тогда
			ТЧ1 = ЗаполнитьОбласть(ТЧ1,Ссылка.Отходы1Категории,Выборка.ВесОтходов1Кат,Ссылка.Влажность9,Ссылка.ЗерноваяПримесь9,Ссылка.СорнаяПримесь9,Ссылка.НомерАнализа9);
		Иначе
			ТЧ1 = ЗаполнитьОбласть(ТЧ1,Ссылка.Отходы1Категории,Выборка.ВесОтходов1Кат,ВлажностьДоЧистки_,Ссылка.ЗерноваяПримесь9,Ссылка.СорнаяПримесь9,Ссылка.НомерАнализа9);
		КонецЕсли;
		ТабДокумент.Вывести(ТЧ1);		
	КонецЕсли;
	Если Выборка.ВесОтходов2Кат <> 0 Тогда
		ИтогФизВес = ИтогФизВес + Выборка.ВесОтходов2Кат;
		ТЧ1 = Макет.ПолучитьОбласть("ТЧ1");
		Если Ссылка.Порядок Тогда
			ТЧ1 = ЗаполнитьОбласть(ТЧ1,Ссылка.Отходы2Категории,Выборка.ВесОтходов2Кат,Ссылка.Влажность10,Ссылка.ЗерноваяПримесь10,Ссылка.СорнаяПримесь10,Ссылка.НомерАнализа10);
		Иначе
			ТЧ1 = ЗаполнитьОбласть(ТЧ1,Ссылка.Отходы2Категории,Выборка.ВесОтходов2Кат,ВлажностьДоЧистки_,Ссылка.ЗерноваяПримесь10,Ссылка.СорнаяПримесь10,Ссылка.НомерАнализа10);
		КонецЕсли;
		ТабДокумент.Вывести(ТЧ1);		
	КонецЕсли;		
	
	Итого = Макет.ПолучитьОбласть("Итого");
	Итого.Параметры.ИтогФизВес = ИтогФизВес;
	ТабДокумент.Вывести(Итого);
	
	Пояснение = Макет.ПолучитьОбласть("Пояснение");
	ТабДокумент.Вывести(Пояснение);
	
	Сушка1 = Макет.ПолучитьОбласть("Сушка1");
	Если Выборка.УбыльОтСушки > 0 Тогда
		Сушка1.Параметры.ДатаНачалаСушки = Формат(Ссылка.ДатаНачалаСушки, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Сушка1.Параметры.ДатаОкончанияСушки = Формат(Ссылка.ДатаОкончанияСушки, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Сушка1.Параметры.Агрегат2 = Ссылка.Агрегат2;
		Сушка1.Параметры.ФизическийВес5 = Выборка.ФизВесДоСушки;		
		Сушка1.Параметры.НомерАнализа5 = СтруктураШапкиДокумента.НомерАнализа5;		
		Сушка1.Параметры.НомерАнализа6 = СтруктураШапкиДокумента.НомерАнализа6;
		Сушка1.Параметры.СнижениеВлажности = Окр(Выборка.УбыльОтСушки * 100 / Выборка.ФизВесДоСушки, 2);
		Сушка1.Параметры.Влажность5 = Окр(Выборка.ВесПоВлажностиДо/Выборка.ВесДо,2);
		Сушка1.Параметры.Влажность6 = СтруктураШапкиДокумента.Влажность6;
	ИначеЕсли Ссылка.ПроводилиСушку И Ссылка.СпособОтбораСушки = 2 Тогда
		Если ЗначениеЗаполнено(Ссылка.Агрегат2) Тогда
			Агрегат2_ = Ссылка.Агрегат2;
		Иначе
			Агрегат2_ = ?(КодЯзыкаПечать = "uk"," активне вентилювання "," активное вентилирование ");
		КонецЕсли;		
		Сушка1.Параметры.Агрегат2 = Агрегат2_;
		Сушка1.Параметры.Влажность5 = Ссылка.Влажность5;
		Сушка1.Параметры.Влажность6 = Ссылка.Влажность6;			
	КонецЕсли;
	ТабДокумент.Вывести(Сушка1);
	
	Расчет = Макет.ПолучитьОбласть("Расчет");
	
	Расчет.Параметры.УбыльОтСушки = Выборка.УбыльОтСушки;
	Расчет.Параметры.ФизическийВес2 = Выборка.ВесПосле;
	
	ТабДокумент.Вывести(Расчет);
	
	Дно = Макет.ПолучитьОбласть("Дно");
	Дно.Параметры.ДолжностьДиректора = Руководители.ДолжностьРуководителя;
	Дно.Параметры.Руководитель = Руководители.Руководитель;
	Дно.Параметры.НачальникВТЛ = Руководители.НачальникВТЛ;
	
	ДанныеОтветственногоЛица = Неопределено;
	МОЛФизическоеЛицо = ИНАГРО_Элеватор.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата, Ссылка.Склад, ДанныеОтветственногоЛица);
	Если ЗначениеЗаполнено(ДанныеОтветственногоЛица) Тогда
		Дно.Параметры.ЗавСкладом = ДанныеОтветственногоЛица.ФИО;
	Иначе
		Дно.Параметры.ЗавСкладом = МОЛФизическоеЛицо;
	КонецЕсли;
	
	Дно.Параметры.Бухгалтер = Руководители.БухгалтерККУ;
	Дно.Параметры.ДатаДок = Формат(Ссылка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	ТабДокумент.Вывести(Дно);
	
КонецФункции

Функция ЗаполнитьОбласть(Область_,ТМЦ_,ФизическийВес_,Влажность_="",ЗерноваяПримесь_="",СорнаяПримесь_="",НомерАнализа_="")
	
	Область_.Параметры.ТМЦ = ТМЦ_;
	Область_.Параметры.ФизическийВес = ФизическийВес_;	
	Область_.Параметры.Влажность = Влажность_;	
	Область_.Параметры.ОсновноеЗерно = 100 - ЗерноваяПримесь_ - СорнаяПримесь_;
	Область_.Параметры.ЗерноваяПримесь = ЗерноваяПримесь_;
	Область_.Параметры.ВсегоЗерна = 100 - СорнаяПримесь_;
	Область_.Параметры.СорнаяПримесь = СорнаяПримесь_;
	Область_.Параметры.НомерАнализа = НомерАнализа_;
	
	Возврат Область_;
	
КонецФункции

// Форма34Сводная

Функция ПечатьФорма34Сводная(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_Форма34Сводная_Форма34";
	
	Макет = ПолучитьМакет("ПФ_MXL_Форма34");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИНАГРО_Форма34Сводная.Ссылка,
	|	ИНАГРО_Форма34Сводная.Дата,
	|	ИНАГРО_Форма34Сводная.Организация,
	|	ИНАГРО_Форма34Сводная.Номер,
	|	ИНАГРО_Форма34Сводная.Склад,
	|	ИНАГРО_Форма34Сводная.Организация.НаименованиеПолное,
	|	ИНАГРО_Форма34Сводная.ДатаНачалаОчистки,
	|	ИНАГРО_Форма34Сводная.ДатаОкончанияОчистки,
	|	ИНАГРО_Форма34Сводная.ДатаРаспоряжения,
	|	ИНАГРО_Форма34Сводная.Номенклатура,
	|	ИНАГРО_Форма34Сводная.НомерРаспоряжения,
	|	ИНАГРО_Форма34Сводная.НомерСклада,
	|	ИНАГРО_Форма34Сводная.НомерСкладаДо,
	|	ИНАГРО_Форма34Сводная.ПланируемыеРезультаты,
	|	ИНАГРО_Форма34Сводная.РазмерСит,
	|	ИНАГРО_Форма34Сводная.СпособПодработки,
	|	ИНАГРО_Форма34Сводная.ФизическийВес1,
	|	ИНАГРО_Форма34Сводная.ЦельПодработки,
	|	ИНАГРО_Форма34Сводная.Агрегат1,
	|	ИНАГРО_Форма34Сводная.Номенклатура.НаименованиеПолное,
	|	ИНАГРО_Форма34Сводная.Агрегат2,
	|	ИНАГРО_Форма34Сводная.Влажность0,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь0,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь0,
	|	ИНАГРО_Форма34Сводная.ФизическийВес7,
	|	ИНАГРО_Форма34Сводная.ФизическийВес8,
	|	ИНАГРО_Форма34Сводная.ФизическийВес9,
	|	ИНАГРО_Форма34Сводная.ФизическийВес10,
	|	ИНАГРО_Форма34Сводная.ФизическийВес3,
	|	ИНАГРО_Форма34Сводная.ФизическийВес4,
	|	ИНАГРО_Форма34Сводная.ПобочныйПродукт,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь7,
	|	ИНАГРО_Форма34Сводная.Влажность7,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь7,
	|	ИНАГРО_Форма34Сводная.НомерАнализа7,
	|	ИНАГРО_Форма34Сводная.Влажность8,
	|	ИНАГРО_Форма34Сводная.Влажность9,
	|	ИНАГРО_Форма34Сводная.Влажность10,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь8,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь9,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь10,
	|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ8,
	|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ9,
	|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ10,
	|	ИНАГРО_Форма34Сводная.НомерАнализа8,
	|	ИНАГРО_Форма34Сводная.НомерАнализа9,
	|	ИНАГРО_Форма34Сводная.НомерАнализа10,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь8,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь9,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь10,
	|	ИНАГРО_Форма34Сводная.Отходы3Категории,
	|	ИНАГРО_Форма34Сводная.Отходы1Категории,
	|	ИНАГРО_Форма34Сводная.Отходы2Категории,
	|	ИНАГРО_Форма34Сводная.УбыльОтСушки,
	|	ИНАГРО_Форма34Сводная.УбыльОтОчистки,
	|	ИНАГРО_Форма34Сводная.ПроводилиСушку,
	|	ИНАГРО_Форма34Сводная.СпособОтбораСушки,
	|	ИНАГРО_Форма34Сводная.Влажность5,
	|	ИНАГРО_Форма34Сводная.Влажность6,
	|	ИНАГРО_Форма34Сводная.ФизическийВес5,
	|	ИНАГРО_Форма34Сводная.СнижениеВлажности,
	|	ИНАГРО_Форма34Сводная.НомерАнализа5,
	|	ИНАГРО_Форма34Сводная.НомерАнализа6,
	|	ИНАГРО_Форма34Сводная.Влажность3,
	|	ИНАГРО_Форма34Сводная.Влажность4,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь3,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь4,
	|	ИНАГРО_Форма34Сводная.Влажность1,
	|	ИНАГРО_Форма34Сводная.Влажность2,
	|	ИНАГРО_Форма34Сводная.ВлажностьВыше,
	|	ИНАГРО_Форма34Сводная.ВлажностьНиже,
	|	ИНАГРО_Форма34Сводная.ВыставитьУслугиОчисткиСушки,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь1,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь2,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь5,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь6,
	|	ИНАГРО_Форма34Сводная.Крупность1,
	|	ИНАГРО_Форма34Сводная.Крупность2,
	|	ИНАГРО_Форма34Сводная.Крупность3,
	|	ИНАГРО_Форма34Сводная.Крупность4,
	|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ2,
	|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ7,
	|	ИНАГРО_Форма34Сводная.МелкоеЗерно1,
	|	ИНАГРО_Форма34Сводная.МелкоеЗерно2,
	|	ИНАГРО_Форма34Сводная.МелкоеЗерно3,
	|	ИНАГРО_Форма34Сводная.МелкоеЗерно4,
	|	ИНАГРО_Форма34Сводная.Натура1,
	|	ИНАГРО_Форма34Сводная.Натура2,
	|	ИНАГРО_Форма34Сводная.Натура3,
	|	ИНАГРО_Форма34Сводная.Натура4,
	|	ИНАГРО_Форма34Сводная.МестоХранения,
	|	ИНАГРО_Форма34Сводная.МетодОпределенияВеса,
	|	ИНАГРО_Форма34Сводная.НалоговоеНазначениеДоходовИЗатрат,
	|	ИНАГРО_Форма34Сводная.НомерАнализа1,
	|	ИНАГРО_Форма34Сводная.НомерАнализа2,
	|	ИНАГРО_Форма34Сводная.НомерАнализа3,
	|	ИНАГРО_Форма34Сводная.НомерАнализа4,
	|	ИНАГРО_Форма34Сводная.ОздоровлениеЗерна,
	|	ИНАГРО_Форма34Сводная.ОписаниеДвиженияФормы36,
	|	ИНАГРО_Форма34Сводная.ОтражатьВБухгалтерскомУчете,
	|	ИНАГРО_Форма34Сводная.ОтражатьПоЗатратам,
	|	ИНАГРО_Форма34Сводная.ПроцентВлажности1,
	|	ИНАГРО_Форма34Сводная.ПроцентВлажности2,
	|	ИНАГРО_Форма34Сводная.ПроцентОтходов1Категории,
	|	ИНАГРО_Форма34Сводная.ПроцентОтходов2Категории,
	|	ИНАГРО_Форма34Сводная.ПроцентПобочногоПродукта,
	|	ИНАГРО_Форма34Сводная.ПроцентСорнойПримеси1,
	|	ИНАГРО_Форма34Сводная.ПроцентСорнойПримеси2,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь1,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь2,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь3,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь4,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь5,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь6,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесьВыше,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесьНиже,
	|	ИНАГРО_Форма34Сводная.СпособРасчетаУбылиОтОчистки,
	|	ИНАГРО_Форма34Сводная.СубконтоСписания1,
	|	ИНАГРО_Форма34Сводная.СубконтоСписания2,
	|	ИНАГРО_Форма34Сводная.СубконтоСписания3,
	|	ИНАГРО_Форма34Сводная.ФизическийВес2,
	|	ИНАГРО_Форма34Сводная.ФизическийВес6,
	|	ИНАГРО_Форма34Сводная.ДатаНачалаСушки,
	|	ИНАГРО_Форма34Сводная.ДатаОкончанияСушки
	|ИЗ
	|	Документ.ИНАГРО_Форма34Сводная КАК ИНАГРО_Форма34Сводная
	|ГДЕ
	|	ИНАГРО_Форма34Сводная.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(Выборка.Организация, Выборка.Дата);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		
		Шапка.Параметры.Заполнить(Выборка);	
		Шапка.Параметры.Фирма = Выборка.ОрганизацияНаименованиеПолное;
		Структура = Новый Структура("Организация", Выборка.Организация);
		
		Шапка.Параметры.НомерРаспоряжения = ?(ЗначениеЗаполнено(Выборка.НомерРаспоряжения), Выборка.НомерРаспоряжения, Выборка.Номер);
		Шапка.Параметры.СтаршийМастер = ИНАГРО_Элеватор.ОтветственныеЛица(Выборка.Организация, Выборка.Дата, Выборка.Склад);		
		Шапка.Параметры.НомерДок = Выборка.Номер;
		Шапка.Параметры.ДатаДок = Формат(Выборка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		
		Шапка.Параметры.ДатаРаспоряжения = Формат(Выборка.ДатаРаспоряжения, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.Номенклатура = Выборка.НоменклатураНаименованиеПолное;
		Шапка.Параметры.ЦельПодработки = ?(СокрЛП(Выборка.ЦельПодработки)="", ?(КодЯзыкаПечать = "uk","доведення до стійкого стану","доведение до стойкого состояния"), Выборка.ЦельПодработки);
		Шапка.Параметры.СпособПодработки = "" + СокрЛП(Выборка.СпособПодработки) + " " + Выборка.Агрегат1 + " " + Выборка.Агрегат2 + " " + ?(Выборка.РазмерСит = "","",?(КодЯзыкаПечать = "uk","розмір сит ","размеры сит ") + Выборка.РазмерСит);
		ПланируемаяВлажность = ?(Выборка.Влажность0 = 0, "","" + ?(КодЯзыкаПечать = "uk"," вологість "," влажность ") + Выборка.Влажность0 + "% ");
		ПланируемаяСорнаяПримесь = ?(Выборка.СорнаяПримесь0 = 0, "","" + ?(КодЯзыкаПечать = "uk"," смітна домішка "," сорная примесь ") + Выборка.СорнаяПримесь0+"% ");
		ПланируемаяЗерноваяПримесь = ?(Выборка.ЗерноваяПримесь0 = 0, "", ""+?(КодЯзыкаПечать = "uk"," зернова домішка "," зерновая примесь ") + Выборка.ЗерноваяПримесь0+"% ");
		ПланируемыеРезультаты_ = "" + ПланируемаяВлажность + " " + ПланируемаяСорнаяПримесь + " " + ПланируемаяЗерноваяПримесь + " " + Выборка.ПланируемыеРезультаты;
		Шапка.Параметры.ПланируемыеРезультаты = ПланируемыеРезультаты_;
		Шапка.Параметры.Руководитель = Руководители.Руководитель;
		Шапка.Параметры.НачальникВТЛ = Руководители.НачальникВТЛ;
		Шапка.Параметры.ДолжностьДиректора = Руководители.ДолжностьРуководителя;	
		Шапка.Параметры.ДатаНачалаОчистки = Формат(Выборка.ДатаНачалаОчистки, "ДФ='дд ММММ гггг';Л=" + Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.ДатаОкончанияОчистки = Формат(Выборка.ДатаОкончанияОчистки, "ДФ='дд ММММ гггг';Л=" + Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));	
		ТабДокумент.Вывести(Шапка);
		ИтогФизВес = 0;
		Чистка1 = Макет.ПолучитьОбласть("Чистка1");
		Если Выборка.ФизическийВес8 <> 0 или Выборка.ФизическийВес7 <> 0 или 
			Выборка.ФизическийВес9 <> 0 или Выборка.ФизическийВес10 <> 0 Тогда
			
			Чистка1.Параметры.Заполнить(Выборка);
			Чистка1.Параметры.ФизВесДоОчистки = Выборка.ФизическийВес3;
			Чистка1.Параметры.ФизВесПослеОчистки = Выборка.ФизическийВес4;		
			Чистка1.Параметры.Зараженность3 = "Не виявл.";
			Чистка1.Параметры.Зараженность4 = "Не виявл.";
			
		КонецЕсли;	
		
		ТабОтходов = СформироватьСтруктуруТаблицыОтходов(КодЯзыкаПечать);
		
		Если Выборка.ФизическийВес7 <> 0 Тогда
			ПорядковыйНомерОтходов = ПолучитьПорядковыйНомерОтходов(Выборка.ПобочныйПродукт, Выборка.ЗерноваяПримесь7);
			СтрТабОтходов = ТабОтходов.Найти(ПорядковыйНомерОтходов, "Порядок");
			Если Не СтрТабОтходов = Неопределено Тогда
				Если ЗначениеЗаполнено(СтрТабОтходов.ФизическийВес) Тогда
					СтрТабОтходов = ТабОтходов.Добавить();
					СтрТабОтходов.Порядок = ПорядковыйНомерОтходов;
				КонецЕсли;
				ЗаполнитьСтрокуТаблицыОтходов(СтрТабОтходов,Выборка.ФизическийВес7,Выборка.Влажность7,Выборка.ЗерноваяПримесь7,Выборка.СорнаяПримесь7,Выборка.НомерАнализа7);
			КонецЕсли;	
		КонецЕсли;
		
		Если Выборка.ФизическийВес8 <> 0 Тогда
			ПорядковыйНомерОтходов = ПолучитьПорядковыйНомерОтходов(Выборка.Отходы3Категории, Выборка.ЗерноваяПримесь8);		
			СтрТабОтходов = ТабОтходов.Найти(ПорядковыйНомерОтходов, "Порядок");
			Если Не СтрТабОтходов = Неопределено Тогда
				Если ЗначениеЗаполнено(СтрТабОтходов.ФизическийВес) Тогда
					СтрТабОтходов = ТабОтходов.Добавить();
					СтрТабОтходов.Порядок = ПорядковыйНомерОтходов;
				КонецЕсли;				
				ЗаполнитьСтрокуТаблицыОтходов(СтрТабОтходов,Выборка.ФизическийВес8,Выборка.Влажность8,Выборка.ЗерноваяПримесь8,Выборка.СорнаяПримесь8,Выборка.НомерАнализа8);
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.ФизическийВес9 <> 0 Тогда
			ПорядковыйНомерОтходов = ПолучитьПорядковыйНомерОтходов(Выборка.Отходы1Категории, Выборка.ЗерноваяПримесь9);
			СтрТабОтходов = ТабОтходов.Найти(ПорядковыйНомерОтходов, "Порядок");
			Если Не СтрТабОтходов = Неопределено Тогда
				Если ЗначениеЗаполнено(СтрТабОтходов.ФизическийВес) Тогда
					СтрТабОтходов = ТабОтходов.Добавить();
					СтрТабОтходов.Порядок = ПорядковыйНомерОтходов;
				КонецЕсли;
				ЗаполнитьСтрокуТаблицыОтходов(СтрТабОтходов,Выборка.ФизическийВес9,Выборка.Влажность9,Выборка.ЗерноваяПримесь9,Выборка.СорнаяПримесь9,Выборка.НомерАнализа9);
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.ФизическийВес10 <> 0 Тогда
			ПорядковыйНомерОтходов = ПолучитьПорядковыйНомерОтходов(Выборка.Отходы2Категории, Выборка.ЗерноваяПримесь10);		
			СтрТабОтходов = ТабОтходов.Найти(ПорядковыйНомерОтходов, "Порядок");
			Если Не СтрТабОтходов = Неопределено Тогда
				Если ЗначениеЗаполнено(СтрТабОтходов.ФизическийВес) Тогда
					СтрТабОтходов = ТабОтходов.Добавить();
					СтрТабОтходов.Порядок = ПорядковыйНомерОтходов;
				КонецЕсли;				
				ЗаполнитьСтрокуТаблицыОтходов(СтрТабОтходов,Выборка.ФизическийВес10,Выборка.Влажность10,Выборка.ЗерноваяПримесь10,Выборка.СорнаяПримесь10,Выборка.НомерАнализа10);
			КонецЕсли;	
		КонецЕсли;
		
		ТабОтходов.Сортировать("Порядок");
		
		ТабДокумент.Вывести(Чистка1);
		
		Для Каждого СтрТабОтходов Из ТабОтходов Цикл
			
			Если ЗначениеЗаполнено(СтрТабОтходов.ТМЦ) Тогда
				ТЧ1 = Макет.ПолучитьОбласть("ТЧ1");
				ЗаполнитьЗначенияСвойств(ТЧ1.Параметры, СтрТабОтходов);
				ТабДокумент.Вывести(ТЧ1);
			Иначе
				ТЧ0 = Макет.ПолучитьОбласть("ТЧ0");
				ЗаполнитьЗначенияСвойств(ТЧ0.Параметры, СтрТабОтходов);
				ТабДокумент.Вывести(ТЧ0);
			КонецЕсли;
			Если СтрТабОтходов.Порядок = 11 Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				Шапка2 = Макет.ПолучитьОбласть("Шапка2");
				ТабДокумент.Вывести(Шапка2);
			КонецЕсли; 
			
		КонецЦикла;
		
		ИтогФизВес = ТабОтходов.Итог("ФизическийВес");
		
		Итого = Макет.ПолучитьОбласть("Итого");
		Итого.Параметры.ИтогФизВес = ИтогФизВес;
		ТабДокумент.Вывести(Итого);
		
		Пояснение = Макет.ПолучитьОбласть("Пояснение");
		ТабДокумент.Вывести(Пояснение);
		
		Сушка1 = Макет.ПолучитьОбласть("Сушка1");
		Если Выборка.УбыльОтСушки > 0 Тогда
			Сушка1.Параметры.Заполнить(Выборка);
			Сушка1.Параметры.ДатаНачалаСушки = Формат(Выборка.ДатаНачалаСушки, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
			Сушка1.Параметры.ДатаОкончанияСушки = Формат(Выборка.ДатаОкончанияСушки, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		ИначеЕсли Выборка.ПроводилиСушку И Выборка.СпособОтбораСушки = 2 Тогда
			Если ЗначениеЗаполнено(Выборка.Агрегат2) Тогда
				Агрегат2_ = Выборка.Агрегат2;
			Иначе
				Агрегат2_ = ?(КодЯзыкаПечать = "uk"," активне вентилювання "," активное вентилирование ");
			КонецЕсли;		
			Сушка1.Параметры.Агрегат2 = Агрегат2_;
			Сушка1.Параметры.Влажность5 = Выборка.Влажность5;
			Сушка1.Параметры.Влажность6 = Выборка.Влажность6;		
		КонецЕсли;
		ТабДокумент.Вывести(Сушка1);
		
		Расчет = Макет.ПолучитьОбласть("Расчет");
		Расчет.Параметры.Заполнить(Выборка);
		ТабДокумент.Вывести(Расчет);
		
		Дно = Макет.ПолучитьОбласть("Дно");
		Дно.Параметры.ДолжностьДиректора = Руководители.ДолжностьРуководителя;
		Дно.Параметры.Руководитель = Руководители.Руководитель;
		Дно.Параметры.НачальникВТЛ = Руководители.НачальникВТЛ;
		Дно.Параметры.Бухгалтер = Руководители.БухгалтерККУ;
		
		ДанныеОтветственногоЛица = Неопределено;
		МОЛФизическоеЛицо = ИНАГРО_Элеватор.ОтветственныеЛица(Выборка.Организация, Выборка.Дата, Выборка.Склад, ДанныеОтветственногоЛица);
		Если ЗначениеЗаполнено(ДанныеОтветственногоЛица) Тогда
			Дно.Параметры.ЗавСкладом = ДанныеОтветственногоЛица.ФИО;
		Иначе
			Дно.Параметры.ЗавСкладом = МОЛФизическоеЛицо;
		КонецЕсли;
		
		Дно.Параметры.ДатаДок = Формат(Выборка.Дата, "ДФ='дд ММММ гггг';Л=" + Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		ТабДокумент.Вывести(Дно);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
		
КонецФункции

Функция СформироватьСтруктуруТаблицыОтходов(КодЯзыкаПечать)
				
	// Создание описателя типов для таблицы значений
	КЧ = Новый КвалификаторыЧисла(12,2);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	
	ТабОтходов = Новый ТаблицаЗначений;
	
	ТабОтходов.Колонки.Добавить("Порядок");
	ТабОтходов.Колонки.Добавить("ТМЦ");
	ТабОтходов.Колонки.Добавить("ФизическийВес",ОписаниеТиповЧ);
	ТабОтходов.Колонки.Добавить("Влажность");
	ТабОтходов.Колонки.Добавить("ОсновноеЗерно");
	ТабОтходов.Колонки.Добавить("ЗерноваяПримесь");
	ТабОтходов.Колонки.Добавить("СорнаяПримесь");
	ТабОтходов.Колонки.Добавить("ВсегоЗерна");
	ТабОтходов.Колонки.Добавить("НомерАнализа");
	
	СтрТабОтходов = ТабОтходов.Добавить();
	СтрТабОтходов.Порядок = 10;
	СтрТабОтходов.ТМЦ = НСтр("ru='Побочные продукты: зерновая смесь, содержащая свыше 50 до 70 % (включительно) зерна '; 
	| uk='Побічні продукти: зернова суміш, що містить понад 50 до 70 % (включно) зерна '",КодЯзыкаПечать);
	СтрТабОтходов = ТабОтходов.Добавить();
	СтрТабОтходов.Порядок = 11;
	СтрТабОтходов.ТМЦ = НСтр("ru='То же свыше 70 до 85 % зерна '; 
	| uk='Те ж понад 70 до 85 % зерна '",КодЯзыкаПечать); 
	СтрТабОтходов = ТабОтходов.Добавить();
	СтрТабОтходов.Порядок = 20;
	СтрТабОтходов.ТМЦ = НСтр("ru='Отходы: ПЕРВАЯ КАТЕГОРИЯ Зерновые отходы с содержанием зерна свыше 30 до 50 % включительно '; 
	| uk='Відходи: ПЕРША КАТЕГОРІЯ Зернові відходи з вмістом зерна понад 30 до 50 % включно '",КодЯзыкаПечать);
	СтрТабОтходов = ТабОтходов.Добавить();
	СтрТабОтходов.Порядок = 21;
	СтрТабОтходов.ТМЦ = НСтр("ru='То же свыше 10 до 30 % включительно '; 
	| uk='Те ж понад 10 до 30 % включно '",КодЯзыкаПечать);
	СтрТабОтходов = ТабОтходов.Добавить();
	СтрТабОтходов.Порядок = 30;
	СтрТабОтходов.ТМЦ = НСтр("ru='ВТОРАЯ КАТЕГОРИЯ Зерновые отходы с содержанием зерна свыше 2 до 50 % '; 
	| uk='ДРУГА КАТЕГОРІЯ Зернові відходи з вмістом зерна понад 2 до 50 % '",КодЯзыкаПечать);
	СтрТабОтходов = ТабОтходов.Добавить();
	СтрТабОтходов.Порядок = 40;
	СтрТабОтходов.ТМЦ = НСтр("ru='ТРЕТЬЯ КАТЕГОРИЯ Отходы от очистки зерна с содержанием не более 2% зерна '; 
	| uk='ТРЕТЯ КАТЕГОРІЯ Відходи від очищення зерна з вмістом не більше 2% зерна '",КодЯзыкаПечать);
	
	Возврат ТабОтходов;
	
КонецФункции
 
Функция ПолучитьПорядковыйНомерОтходов(ТМЦ_, ЗерноваяПримесь_)
		
	Рез = 0;
	
	ВидТМЦ = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(ТМЦ_,"ВидТМЦ");
	
	Если ВидТМЦ = Перечисления.ИНАГРО_ВидыТМЦ.Побочный Тогда
		Если ЗерноваяПримесь_ > 70 Тогда
			Рез = 11;
		Иначе
			Рез = 10;
		КонецЕсли;
	ИначеЕсли ВидТМЦ = Перечисления.ИНАГРО_ВидыТМЦ.Кат1 Тогда
		Если ЗерноваяПримесь_ > 30 Тогда
			Рез = 20;
		Иначе
			Рез = 21;
		КонецЕсли;
	ИначеЕсли ВидТМЦ = Перечисления.ИНАГРО_ВидыТМЦ.Кат2 Тогда
		Рез = 30;
	ИначеЕсли ВидТМЦ = Перечисления.ИНАГРО_ВидыТМЦ.Кат3 Тогда
		Рез = 40;
	КонецЕсли;
	
	Возврат Рез;
		
КонецФункции

Процедура ЗаполнитьСтрокуТаблицыОтходов(СтрТабОтходов,ФизическийВес_,Влажность_="",ЗерноваяПримесь_="",СорнаяПримесь_="",НомерАнализа_="")
		
	СтрТабОтходов.ФизическийВес = ФизическийВес_;
	СтрТабОтходов.Влажность = Влажность_;
	СтрТабОтходов.ОсновноеЗерно = 100 - ЗерноваяПримесь_ - СорнаяПримесь_;
	СтрТабОтходов.ЗерноваяПримесь = ЗерноваяПримесь_;
	СтрТабОтходов.ВсегоЗерна = 100 - СорнаяПримесь_;
	СтрТабОтходов.СорнаяПримесь = СорнаяПримесь_;
	СтрТабОтходов.НомерАнализа = НомерАнализа_;
	
КонецПроцедуры

// Форма34 2021

Функция ПечатьАктОчисткиСушки_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
				
	УстановитьПривилегированныйРежим(Истина); 	

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_Форма34_Сводная_Форма34_2021";
	ТабДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет; 
	ТабДокумент.АвтоМасштаб         = Истина;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_Форма34Сводная.ПФ_MXL_UK_Форма34_2021");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		СтруктураСохранения = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_Форма34Сводная_Форма34");
		
		Если СтруктураСохранения <> Неопределено Тогда
			СтруктураВыбраннойПечатнойФормы = СтруктураСохранения.ВыбраннаяПечатнаяФорма;
			Если СтруктураВыбраннойПечатнойФормы.Владелец = "Сводная" Тогда
				ПечатьФорма34_Сводная_2021(Макет, ТабДокумент, Ссылка);
			Иначе
				ПечатьФорма34_ПоВладельцам_2021(Макет, ТабДокумент, Ссылка, СтруктураВыбраннойПечатнойФормы);
			КонецЕсли; 
		Иначе
			ПечатьФорма34_Сводная_2021(Макет, ТабДокумент, Ссылка);	
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

Функция ПечатьФорма34_Сводная_2021(Макет, ТабДокумент, Ссылка)
		
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_Форма34Сводная.Ссылка КАК Ссылка,
		|	ИНАГРО_Форма34Сводная.Дата КАК Дата,
		|	ИНАГРО_Форма34Сводная.Организация КАК Организация,
		|	ИНАГРО_Форма34Сводная.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	ИНАГРО_Форма34Сводная.Номер КАК Номер,
		|	ИНАГРО_Форма34Сводная.Склад КАК Склад,
		|	ИНАГРО_Форма34Сводная.Номенклатура КАК Номенклатура,
		|	ИНАГРО_Форма34Сводная.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
		|	ИНАГРО_Форма34Сводная.ФизическийВес1 КАК ФизическийВес1,
		|	ИНАГРО_Форма34Сводная.Влажность1 КАК Влажность1,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь1 КАК СорнаяПримесь1,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь1 КАК ЗерноваяПримесь1,
		|	ИНАГРО_Форма34Сводная.ДатаНачала КАК ДатаНачала,
		|	ИНАГРО_Форма34Сводная.ДатаОкончания КАК ДатаОкончания,
		|	ИНАГРО_Форма34Сводная.ДоговорКонтрагента.Номер КАК ДоговорКонтрагентаНомер,
		|	ИНАГРО_Форма34Сводная.ДоговорКонтрагента.Дата КАК ДоговорКонтрагентаДата,
		|	ИНАГРО_Форма34Сводная.СпособПодработки КАК СпособПодработки,
		|	ИНАГРО_Форма34Сводная.Агрегат1 КАК Агрегат1,
		|	ИНАГРО_Форма34Сводная.Агрегат2 КАК Агрегат2,
		|	ИНАГРО_Форма34Сводная.РазмерСит КАК РазмерСит,
		|	ИНАГРО_Форма34Сводная.Влажность0 КАК Влажность0,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь0 КАК СорнаяПримесь0,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь0 КАК ЗерноваяПримесь0,
		|	ИНАГРО_Форма34Сводная.ПланируемыеРезультаты КАК ПланируемыеРезультаты,
		|	ИНАГРО_Форма34Сводная.НомерСклада КАК НомерСклада,
		|	ИНАГРО_Форма34Сводная.ДатаНачалаОчистки КАК ДатаНачалаОчистки,
		|	ИНАГРО_Форма34Сводная.ДатаОкончанияОчистки КАК ДатаОкончанияОчистки,
		|	ИНАГРО_Форма34Сводная.ФизическийВес3 КАК ФизическийВес3,
		|	ИНАГРО_Форма34Сводная.ФизическийВес4 КАК ФизическийВес4,
		|	ИНАГРО_Форма34Сводная.Влажность3 КАК Влажность3,
		|	ИНАГРО_Форма34Сводная.Влажность4 КАК Влажность4,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь3 КАК СорнаяПримесь3,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь4 КАК СорнаяПримесь4,
		|	ИНАГРО_Форма34Сводная.НомерАнализа3 КАК НомерАнализа3,
		|	ИНАГРО_Форма34Сводная.НомерАнализа4 КАК НомерАнализа4,
		|	ИНАГРО_Форма34Сводная.ДатаНачалаСушки КАК ДатаНачалаСушки,
		|	ИНАГРО_Форма34Сводная.ДатаОкончанияСушки КАК ДатаОкончанияСушки,
		|	ИНАГРО_Форма34Сводная.ФизическийВес5 КАК ФизическийВес5,
		|	ИНАГРО_Форма34Сводная.ФизическийВес6 КАК ФизическийВес6,
		|	ИНАГРО_Форма34Сводная.Влажность5 КАК Влажность5,
		|	ИНАГРО_Форма34Сводная.Влажность6 КАК Влажность6,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь6 КАК СорнаяПримесь6,
		|	ИНАГРО_Форма34Сводная.НомерАнализа5 КАК НомерАнализа5,
		|	ИНАГРО_Форма34Сводная.НомерАнализа6 КАК НомерАнализа6,
		|	ИНАГРО_Форма34Сводная.УбыльОтСушки КАК УбыльОтСушки,
		|	ИНАГРО_Форма34Сводная.ПроводилиСушку КАК ПроводилиСушку,
		|	ИНАГРО_Форма34Сводная.СпособОтбораСушки КАК СпособОтбораСушки,
		|	ИНАГРО_Форма34Сводная.Натура3 КАК Натура3,
		|	ИНАГРО_Форма34Сводная.Натура4 КАК Натура4,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь3 КАК ЗерноваяПримесь3,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь4 КАК ЗерноваяПримесь4,
		|	ИНАГРО_Форма34Сводная.ФизическийВес7 КАК ФизическийВес7,
		|	ИНАГРО_Форма34Сводная.ФизическийВес8 КАК ФизическийВес8,
		|	ИНАГРО_Форма34Сводная.ФизическийВес9 КАК ФизическийВес9,
		|	ИНАГРО_Форма34Сводная.ФизическийВес10 КАК ФизическийВес10,
		|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.ФизическийВес7, 0) + ЕСТЬNULL(ИНАГРО_Форма34Сводная.ФизическийВес8, 0) + ЕСТЬNULL(ИНАГРО_Форма34Сводная.ФизическийВес9, 0) + ЕСТЬNULL(ИНАГРО_Форма34Сводная.ФизическийВес10, 0) КАК ИтогоФизическийВес,
		|	ИНАГРО_Форма34Сводная.Влажность7 КАК Влажность7,
		|	ИНАГРО_Форма34Сводная.Влажность8 КАК Влажность8,
		|	ИНАГРО_Форма34Сводная.Влажность9 КАК Влажность9,
		|	ИНАГРО_Форма34Сводная.Влажность10 КАК Влажность10,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь7 КАК ЗерноваяПримесь7,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь8 КАК ЗерноваяПримесь8,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь9 КАК ЗерноваяПримесь9,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь10 КАК ЗерноваяПримесь10,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь7 КАК СорнаяПримесь7,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь8 КАК СорнаяПримесь8,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь9 КАК СорнаяПримесь9,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь10 КАК СорнаяПримесь10,
		|	ИНАГРО_Форма34Сводная.НомерАнализа7 КАК НомерАнализа7,
		|	ИНАГРО_Форма34Сводная.НомерАнализа8 КАК НомерАнализа8,
		|	ИНАГРО_Форма34Сводная.НомерАнализа9 КАК НомерАнализа9,
		|	ИНАГРО_Форма34Сводная.НомерАнализа10 КАК НомерАнализа10,
		|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ2 КАК ЛабораторныйАнализ2,
		|	ИНАГРО_Форма34Сводная.Влажность2 КАК Влажность2,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь2 КАК ЗерноваяПримесь2,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь2 КАК СорнаяПримесь2,
		|	ИНАГРО_Форма34Сводная.ФизическийВес2 КАК ФизическийВес2,
		|	ИНАГРО_Форма34Сводная.НомерРаспоряжения КАК НомерРаспоряжения,
		|	ИНАГРО_Форма34Сводная.ДатаРаспоряжения КАК ДатаРаспоряжения
		|ИЗ
		|	Документ.ИНАГРО_Форма34Сводная КАК ИНАГРО_Форма34Сводная
		|ГДЕ
		|	ИНАГРО_Форма34Сводная.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",           Ссылка);
		
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Выборка.Следующий();
						
		СведенияООтправителе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
		Руководители          = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизацииИмяФамилия(Выборка.Организация, Выборка.Дата);
		ДолжностьРуководителя = Руководители.ДолжностьРуководителя;
		Руководитель          = Руководители.Руководитель;
		НачальникВТЛ          = Руководители.НачальникВТЛ;
		БухгалтерККУ          = Руководители.БухгалтерККУ;
		ЗавСкладом            = ИНАГРО_Элеватор.ОтветственныеЛицаИмяФамилия(Выборка.Организация, Выборка.Дата, Выборка.Склад);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.ЄДРПОУ                 = СведенияООтправителе.КодПоЕДРПОУ; 
		Шапка.Параметры.Организация            = Выборка.Организация.НаименованиеПолное;
		//Шапка.Параметры.Номер                  = ИНАГРО_Общий.ВернутьКодБезПрефикса(Выборка.Номер);
		Шапка.Параметры.Номер                  = Выборка.Номер;
		Шапка.Параметры.НомерРаспоряжения      = ?(ЗначениеЗаполнено(Выборка.НомерРаспоряжения), Выборка.НомерРаспоряжения, Выборка.Номер);
		Шапка.Параметры.ДеньРаспоряжения       = Формат(Выборка.ДатаРаспоряжения, "ДФ=дд");
		Шапка.Параметры.МесяцРаспоряжения      = Сред(Формат(Выборка.ДатаРаспоряжения, "ДФ='дд ММММ';Л=uk"), 3);
		Шапка.Параметры.ГодРаспоряжения        = Формат(Выборка.ДатаРаспоряжения, "ДФ=гггг");
		Шапка.Параметры.День                   = Формат(Выборка.Дата, "ДФ=дд");
		Шапка.Параметры.Месяц                  = Сред(Формат(Выборка.Дата, "ДФ='дд ММММ';Л=uk"), 3);
		Шапка.Параметры.Год                    = Формат(Выборка.Дата, "ДФ=гггг");
		
		Шапка.Параметры.Склад                  = ?(ЗначениеЗаполнено(Выборка.Склад), Выборка.Склад, "__________");                                            
		Шапка.Параметры.ЗавСкладом             = ?(ЗначениеЗаполнено(ЗавСкладом), ЗавСкладом, "_______________");

		Шапка.Параметры.Номенклатура           = Выборка.НоменклатураНаименованиеПолное;
		Шапка.Параметры.ФизическийВес1         = Выборка.ФизическийВес1;
		Шапка.Параметры.Влажность1             = Выборка.Влажность1;
		Шапка.Параметры.СорнаяПримесь1         = Выборка.СорнаяПримесь1;
		Шапка.Параметры.ЗерноваяПримесь1       = Выборка.ЗерноваяПримесь1;
		
		Шапка.Параметры.ДатаНачала             = Формат(Выборка.ДатаНачала, "ДФ='дд ММММ гггг';Л=uk");// + Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.ДатаОкончания          = Формат(Выборка.ДатаОкончания, "ДФ='дд ММММ гггг';Л=uk");
		
		Шапка.Параметры.ДоговорНомер           = ?(ЗначениеЗаполнено(Выборка.ДоговорКонтрагентаНомер), Выборка.ДоговорКонтрагентаНомер, "__________");
		Шапка.Параметры.ДоговорДата            = ?(ЗначениеЗаполнено(Выборка.ДоговорКонтрагентаДата), Формат(Выборка.ДоговорКонтрагентаДата, "ДФ='дд ММММ гггг';Л=uk"), "_______________");
		
		Шапка.Параметры.СпособПодработки       = Выборка.СпособПодработки;
		Шапка.Параметры.Агрегат1               = Выборка.Агрегат1;
		Шапка.Параметры.Агрегат2               = Выборка.Агрегат2;
		Шапка.Параметры.РазмерСит              = Выборка.РазмерСит;
		
		Шапка.Параметры.Влажность0             = Выборка.Влажность0;
		Шапка.Параметры.СорнаяПримесь0         = Выборка.СорнаяПримесь0;
		Шапка.Параметры.ЗерноваяПримесь0       = Выборка.ЗерноваяПримесь0;
		Шапка.Параметры.ПланируемыеРезультаты  = Выборка.ПланируемыеРезультаты;
		
		Шапка.Параметры.НомерСклада            = Выборка.НомерСклада;
		Шапка.Параметры.ДатаДокумента          = Формат(Выборка.Дата, "ДФ='дд ММММ гггг';Л=uk");
		
		Шапка.Параметры.ДолжностьРуководителя  = ДолжностьРуководителя;
		Шапка.Параметры.Руководитель           = Руководитель;
		Шапка.Параметры.НачальникВТЛ           = НачальникВТЛ;
		
		Шапка.Параметры.ДатаНачалаОчистки      = Формат(Выборка.ДатаНачалаОчистки, "ДФ='дд ММММ гггг';Л=uk");
		Шапка.Параметры.ДатаОкончанияОчистки   = Формат(Выборка.ДатаОкончанияОчистки, "ДФ='дд ММММ гггг';Л=uk");
		
		Если    Выборка.ФизическийВес7  <> 0
			ИЛИ Выборка.ФизическийВес8  <> 0
			ИЛИ	Выборка.ФизическийВес9  <> 0
			ИЛИ Выборка.ФизическийВес10 <> 0 Тогда
			
			Шапка.Параметры.ФизическийВес3         = Выборка.ФизическийВес3;
			Шапка.Параметры.ФизическийВес4         = Выборка.ФизическийВес4;
			Шапка.Параметры.Влажность3             = Выборка.Влажность3;
			Шапка.Параметры.Влажность4             = Выборка.Влажность4;
			Шапка.Параметры.СорнаяПримесь3         = Выборка.СорнаяПримесь3;
			Шапка.Параметры.СорнаяПримесь4         = Выборка.СорнаяПримесь4;
			Шапка.Параметры.НомерАнализа3          = Выборка.НомерАнализа3;
			Шапка.Параметры.НомерАнализа4          = Выборка.НомерАнализа4;
			
		КонецЕсли;	
	
		Если Выборка.УбыльОтСушки > 0 Тогда
			
			Шапка.Параметры.ДатаНачалаСушки     = Формат(Выборка.ДатаНачалаСушки, "ДФ='дд ММММ гггг';Л=uk");
			Шапка.Параметры.ДатаОкончанияСушки  = Формат(Выборка.ДатаОкончанияСушки, "ДФ='дд ММММ гггг';Л=uk");
			Шапка.Параметры.ФизическийВес5      = Выборка.ФизическийВес5;
			Шапка.Параметры.ФизическийВес6      = Выборка.ФизическийВес6;
			Шапка.Параметры.Влажность5          = Выборка.Влажность5;
			Шапка.Параметры.Влажность6          = Выборка.Влажность6;
			Шапка.Параметры.СорнаяПримесь6      = Выборка.СорнаяПримесь6;
			Шапка.Параметры.НомерАнализа5       = Выборка.НомерАнализа5;
			Шапка.Параметры.НомерАнализа6       = Выборка.НомерАнализа6;
			Шапка.Параметры.УбыльОтСушки        = Выборка.УбыльОтСушки;
			
		ИначеЕсли Выборка.ПроводилиСушку
			    И Выборка.СпособОтбораСушки = 2 Тогда
			
			Если ЗначениеЗаполнено(Выборка.Агрегат2) Тогда
				Шапка.Параметры.Агрегат2 = Выборка.Агрегат2;
			Иначе
				Шапка.Параметры.Агрегат2 = "активне вентилювання";
			КонецЕсли;		
			
			Шапка.Параметры.Влажность5          = Выборка.Влажность5;
			Шапка.Параметры.Влажность6          = Выборка.Влажность6;

		КонецЕсли;
		
		ТабДокумент.Вывести(Шапка);

		Таблицы = Макет.ПолучитьОбласть("Таблицы");
		
		Если    Выборка.ФизическийВес7  <> 0
			ИЛИ Выборка.ФизическийВес8  <> 0
			ИЛИ	Выборка.ФизическийВес9  <> 0
			ИЛИ Выборка.ФизическийВес10 <> 0 Тогда
			
			Таблицы.Параметры.ФизическийВес3    = Выборка.ФизическийВес3;
			Таблицы.Параметры.ФизическийВес4    = Выборка.ФизическийВес4;
			Таблицы.Параметры.Натура3           = Выборка.Натура3;
			Таблицы.Параметры.Натура4           = Выборка.Натура4;
			Таблицы.Параметры.Влажность3        = Выборка.Влажность3;
			Таблицы.Параметры.Влажность4        = Выборка.Влажность4;
			Таблицы.Параметры.ЗерноваяПримесь3  = Выборка.ЗерноваяПримесь3;
			Таблицы.Параметры.ЗерноваяПримесь4  = Выборка.ЗерноваяПримесь4;
			Таблицы.Параметры.СорнаяПримесь3    = Выборка.СорнаяПримесь3;
			Таблицы.Параметры.СорнаяПримесь4    = Выборка.СорнаяПримесь4;
			Таблицы.Параметры.Зараженность3     = "Не виявл.";
			Таблицы.Параметры.Зараженность4     = "Не виявл.";
			Таблицы.Параметры.НомерАнализа3     = Выборка.НомерАнализа3;
			Таблицы.Параметры.НомерАнализа4     = Выборка.НомерАнализа4;
			
		КонецЕсли;		
		
		// Побочный продукт
		Если Выборка.ФизическийВес7 <> 0 Тогда
			
			ЗерноваяПримесь7 = Выборка.ЗерноваяПримесь7;
			СорнаяПримесь7   = Выборка.СорнаяПримесь7;
			
			Если ЗерноваяПримесь7 <= 70 Тогда
				
				Таблицы.Параметры.ФизическийВес7     = Выборка.ФизическийВес7;
				Таблицы.Параметры.Влажность7         = Выборка.Влажность7;
				Таблицы.Параметры.ОсновноеЗерно7     = 100 - ЗерноваяПримесь7 - СорнаяПримесь7;
				Таблицы.Параметры.ЗерноваяПримесь7   = ЗерноваяПримесь7;
				Таблицы.Параметры.СорнаяПримесь7     = СорнаяПримесь7;
				Таблицы.Параметры.ВсегоЗерна7        = 100 - СорнаяПримесь7;
				Таблицы.Параметры.НомерАнализа7      = Выборка.НомерАнализа7;
				
			Иначе
				
				Таблицы.Параметры.ФизическийВес71    = Выборка.ФизическийВес7;
				Таблицы.Параметры.Влажность71        = Выборка.Влажность7;
				Таблицы.Параметры.ОсновноеЗерно71    = 100 - ЗерноваяПримесь7 - СорнаяПримесь7;
				Таблицы.Параметры.ЗерноваяПримесь71  = ЗерноваяПримесь7;
				Таблицы.Параметры.СорнаяПримесь71    = СорнаяПримесь7;
				Таблицы.Параметры.ВсегоЗерна71       = 100 - СорнаяПримесь7;
				Таблицы.Параметры.НомерАнализа71     = Выборка.НомерАнализа7;
				
			КонецЕсли;
			
		КонецЕсли;
				
		// Отходы I категории
		Если Выборка.ФизическийВес9 <> 0 Тогда
			
			ЗерноваяПримесь9 = Выборка.ЗерноваяПримесь9;
			СорнаяПримесь9   = Выборка.СорнаяПримесь9;
			
			Если ЗерноваяПримесь9 > 30 Тогда
				
				Таблицы.Параметры.ФизическийВес9    = Выборка.ФизическийВес9;
				Таблицы.Параметры.Влажность9        = Выборка.Влажность9;
				Таблицы.Параметры.ОсновноеЗерно9    = 100 - ЗерноваяПримесь9 - СорнаяПримесь9;
				Таблицы.Параметры.ЗерноваяПримесь9  = ЗерноваяПримесь9;
				Таблицы.Параметры.СорнаяПримесь9    = СорнаяПримесь9;
				Таблицы.Параметры.ВсегоЗерна9       = 100 - СорнаяПримесь9;
				Таблицы.Параметры.НомерАнализа9     = Выборка.НомерАнализа9;
				
			Иначе 
				
				Таблицы.Параметры.ФизическийВес91    = Выборка.ФизическийВес9;
				Таблицы.Параметры.Влажность91        = Выборка.Влажность9;
				Таблицы.Параметры.ОсновноеЗерно91    = 100 - ЗерноваяПримесь9 - СорнаяПримесь9;
				Таблицы.Параметры.ЗерноваяПримесь91  = ЗерноваяПримесь9;
				Таблицы.Параметры.СорнаяПримесь91    = СорнаяПримесь9;
				Таблицы.Параметры.ВсегоЗерна91       = 100 - СорнаяПримесь9;
				Таблицы.Параметры.НомерАнализа91     = Выборка.НомерАнализа9;
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Отходы II категории
		Если Выборка.ФизическийВес10 <> 0 Тогда
			
			ЗерноваяПримесь10 = Выборка.ЗерноваяПримесь10;
			СорнаяПримесь10   = Выборка.СорнаяПримесь10;
			
			Таблицы.Параметры.ФизическийВес10   = Выборка.ФизическийВес10;
			Таблицы.Параметры.Влажность10       = Выборка.Влажность10;
			Таблицы.Параметры.ОсновноеЗерно10   = 100 - ЗерноваяПримесь10 - СорнаяПримесь10;
			Таблицы.Параметры.ЗерноваяПримесь10 = ЗерноваяПримесь10;
			Таблицы.Параметры.СорнаяПримесь10   = СорнаяПримесь10;
			Таблицы.Параметры.ВсегоЗерна10      = 100 - СорнаяПримесь10;
			Таблицы.Параметры.НомерАнализа10    = Выборка.НомерАнализа10;
			
		КонецЕсли;
		
		// Отходы III категории
		Если Выборка.ФизическийВес8 <> 0 Тогда
			
			ЗерноваяПримесь8 = Выборка.ЗерноваяПримесь8;
			СорнаяПримесь8   = Выборка.СорнаяПримесь8;			
			
			Таблицы.Параметры.ФизическийВес8    = Выборка.ФизическийВес8;
			Таблицы.Параметры.Влажность8        = Выборка.Влажность8;
			Таблицы.Параметры.ОсновноеЗерно8    = 100 - ЗерноваяПримесь8 - СорнаяПримесь8;
			Таблицы.Параметры.ЗерноваяПримесь8  = ЗерноваяПримесь8;
			Таблицы.Параметры.СорнаяПримесь8    = СорнаяПримесь8;
			Таблицы.Параметры.ВсегоЗерна8       = 100 - СорнаяПримесь8;
			Таблицы.Параметры.НомерАнализа8     = Выборка.НомерАнализа8;
			
		КонецЕсли;
		
		Таблицы.Параметры.ИтогоФизическийВес   = Выборка.ИтогоФизическийВес;
		
		ТабДокумент.Вывести(Таблицы);
		
		Пояснение = Макет.ПолучитьОбласть("Пояснение"); 		
		Пояснение.Параметры.ФизическийВес2     = Выборка.ФизическийВес2;
		Пояснение.Параметры.Влажность2         = Выборка.Влажность2;
		Для Каждого СтрокаТЧ Из Выборка.ЛабораторныйАнализ2.Результаты Цикл
			Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.МелкоеЗерно Тогда
				Пояснение.Параметры.МелкоеЗерно = СтрокаТЧ.Значение;
			КонецЕсли;
		КонецЦикла;
		Пояснение.Параметры.ЗерноваяПримесь2   = Выборка.ЗерноваяПримесь2;
		Пояснение.Параметры.СорнаяПримесь2     = Выборка.СорнаяПримесь2;
				
		ТабДокумент.Вывести(Пояснение);
		
		Подвал = Макет.ПолучитьОбласть("Подвал"); 	
		Подвал.Параметры.ДолжностьРуководителя = ДолжностьРуководителя;
		Подвал.Параметры.Руководитель          = Руководитель;
		Подвал.Параметры.НачальникВТЛ          = НачальникВТЛ;
		Подвал.Параметры.ЗавСкладом            = ЗавСкладом;
		Подвал.Параметры.БухгалтерККУ          = БухгалтерККУ;
		Подвал.Параметры.День                  = Формат(Выборка.Дата, "ДФ=дд");
		Подвал.Параметры.Месяц                 = Сред(Формат(Выборка.Дата, "ДФ='дд ММММ';Л=uk"), 3);
		Подвал.Параметры.Год                   = Формат(Выборка.Дата, "ДФ=гггг");

		ТабДокумент.Вывести(Подвал);
			
	//КонецЦикла;
	
	Возврат ТабДокумент;
		
КонецФункции

Функция ПечатьФорма34_ПоВладельцам_2021(Макет, ТабДокумент, Ссылка, СтруктураПараметров)
		
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец КАК Владелец,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)) КАК ВесДо,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2, 0)) КАК ВесПосле,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Влажность1 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)) КАК ВесПоВлажностиДо,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.СорнаяПримесь1 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)) КАК ВесПоСорнойПримесиДо,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ЗерноваяПримесь1 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)) КАК ВесПоЗерновойПримесиДо,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Влажность2 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2, 0)) КАК ВесПоВлажностиПосле,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ЗерноваяПримесь2 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2, 0)) КАК ВесПоЗерновойПримесиПосле,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.СорнаяПримесь2 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2, 0)) КАК ВесПоСорнойПримесиПосле,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтОчистки, 0)) КАК УбыльОтОчистки,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтСушки, 0)) КАК УбыльОтСушки,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.СнижениеВлажности, 0)) КАК СнижениеВлажности,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес21, 0)) КАК ВесПобочногоПродукта,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес31, 0)) КАК ВесОтходов1Кат,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес32, 0)) КАК ВесОтходов2Кат,
		|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес3, 0)) КАК ВесОтходов3Кат,
		|	СУММА(ВЫБОР
		|			КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.Порядок = ИСТИНА
		|				ТОГДА ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1 - ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтСушки, 0)
		|			ИНАЧЕ ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)
		|		КОНЕЦ) КАК ФизВесДоОчистки,
		|	СУММА(ВЫБОР
		|			КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.Порядок = ИСТИНА
		|				ТОГДА ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2, 0)
		|			ИНАЧЕ ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2 + ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтСушки, 0)
		|		КОНЕЦ) КАК ФизВесПослеОчистки,
		|	СУММА(ВЫБОР
		|			КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.Порядок = ИСТИНА
		|				ТОГДА ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)
		|			ИНАЧЕ ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2 + ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтСушки, 0)
		|		КОНЕЦ) КАК ФизВесДоСушки,
		|	СУММА(ВЫБОР
		|			КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.Порядок = ИСТИНА
		|				ТОГДА ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1 - ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтСушки, 0)
		|			ИНАЧЕ ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес2, 0)
		|		КОНЕЦ) КАК ФизВесПослеСушки,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиОчистку
		|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиОчистку
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПроводилиОчистку,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиСушку
		|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиСушку
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПроводилиСушку,
		|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ПоВладельцу
		|ИЗ
		|	Документ.ИНАГРО_Форма34Сводная.РасчетПоВладельцам КАК ИНАГРО_Форма34СводнаяРасчетПоВладельцам
		|ГДЕ
		|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка = &Ссылка
		|	И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец = &Владелец
		|	И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиОчистку = &ПроводилиОчистку
		|	И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиСушку = &ПроводилиСушку
		|
		|СГРУППИРОВАТЬ ПО
		|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиОчистку
		|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиОчистку
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиСушку
		|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиСушку
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИНАГРО_Форма34Сводная.Номер КАК Номер,
		|	ИНАГРО_Форма34Сводная.Дата КАК Дата,
		|	ИНАГРО_Форма34Сводная.Агрегат1 КАК Агрегат1,
		|	ИНАГРО_Форма34Сводная.Агрегат2 КАК Агрегат2,
		|	ИНАГРО_Форма34Сводная.Влажность10 КАК Влажность10,
		|	ИНАГРО_Форма34Сводная.Влажность2 КАК Влажность2,
		|	ИНАГРО_Форма34Сводная.Влажность3 КАК Влажность3,
		|	ИНАГРО_Форма34Сводная.Влажность4 КАК Влажность4,
		|	ИНАГРО_Форма34Сводная.Влажность5 КАК Влажность5,
		|	ИНАГРО_Форма34Сводная.Влажность6 КАК Влажность6,
		|	ИНАГРО_Форма34Сводная.Влажность7 КАК Влажность7,
		|	ИНАГРО_Форма34Сводная.Влажность8 КАК Влажность8,
		|	ИНАГРО_Форма34Сводная.Влажность9 КАК Влажность9,
		|	ИНАГРО_Форма34Сводная.ДатаНачала КАК ДатаНачала,
		|	ИНАГРО_Форма34Сводная.ДатаНачалаОчистки КАК ДатаНачалаОчистки,
		|	ИНАГРО_Форма34Сводная.ДатаНачалаСушки КАК ДатаНачалаСушки,
		|	ИНАГРО_Форма34Сводная.ДатаОкончания КАК ДатаОкончания,
		|	ИНАГРО_Форма34Сводная.ДатаОкончанияОчистки КАК ДатаОкончанияОчистки,
		|	ИНАГРО_Форма34Сводная.ДатаОкончанияСушки КАК ДатаОкончанияСушки,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь10 КАК ЗерноваяПримесь10,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь4 КАК ЗерноваяПримесь4,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь7 КАК ЗерноваяПримесь7,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь8 КАК ЗерноваяПримесь8,
		|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь9 КАК ЗерноваяПримесь9,
		|	ИНАГРО_Форма34Сводная.Натура3 КАК Натура3,
		|	ИНАГРО_Форма34Сводная.Натура4 КАК Натура4,
		|	ИНАГРО_Форма34Сводная.НомерАнализа10 КАК НомерАнализа10,
		|	ИНАГРО_Форма34Сводная.НомерАнализа3 КАК НомерАнализа3,
		|	ИНАГРО_Форма34Сводная.НомерАнализа4 КАК НомерАнализа4,
		|	ИНАГРО_Форма34Сводная.НомерАнализа5 КАК НомерАнализа5,
		|	ИНАГРО_Форма34Сводная.НомерАнализа6 КАК НомерАнализа6,
		|	ИНАГРО_Форма34Сводная.НомерАнализа7 КАК НомерАнализа7,
		|	ИНАГРО_Форма34Сводная.НомерАнализа8 КАК НомерАнализа8,
		|	ИНАГРО_Форма34Сводная.НомерАнализа9 КАК НомерАнализа9,
		|	ИНАГРО_Форма34Сводная.НомерСклада КАК НомерСклада,
		|	ИНАГРО_Форма34Сводная.Организация КАК Организация,
		|	ИНАГРО_Форма34Сводная.ПланируемыеРезультаты КАК ПланируемыеРезультаты,
		|	ИНАГРО_Форма34Сводная.Порядок КАК Порядок,
		|	ИНАГРО_Форма34Сводная.РазмерСит КАК РазмерСит,
		|	ИНАГРО_Форма34Сводная.Склад КАК Склад,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь10 КАК СорнаяПримесь10,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь4 КАК СорнаяПримесь4,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь7 КАК СорнаяПримесь7,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь8 КАК СорнаяПримесь8,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь9 КАК СорнаяПримесь9,
		|	ИНАГРО_Форма34Сводная.СпособПодработки КАК СпособПодработки,
		|	ИНАГРО_Форма34Сводная.ДоговорКонтрагента.Дата КАК ДоговорКонтрагентаДата,
		|	ИНАГРО_Форма34Сводная.ДоговорКонтрагента.Номер КАК ДоговорКонтрагентаНомер,
		|	ИНАГРО_Форма34Сводная.Номенклатура КАК Номенклатура,
		|	ВТ_ПоВладельцу.Владелец КАК Владелец,
		|	ВТ_ПоВладельцу.ВесДо КАК ВесДо,
		|	ВТ_ПоВладельцу.ВесПоВлажностиДо КАК ВесПоВлажностиДо,
		|	ВТ_ПоВладельцу.ВесПоСорнойПримесиДо КАК ВесПоСорнойПримесиДо,
		|	ВТ_ПоВладельцу.ВесПоЗерновойПримесиДо КАК ВесПоЗерновойПримесиДо,
		|	ВТ_ПоВладельцу.УбыльОтСушки КАК УбыльОтСушки,
		|	ВТ_ПоВладельцу.ВесПобочногоПродукта КАК ВесПобочногоПродукта,
		|	ВТ_ПоВладельцу.ВесОтходов1Кат КАК ВесОтходов1Кат,
		|	ВТ_ПоВладельцу.ВесОтходов2Кат КАК ВесОтходов2Кат,
		|	ВТ_ПоВладельцу.ВесОтходов3Кат КАК ВесОтходов3Кат,
		|	ВТ_ПоВладельцу.ФизВесДоОчистки КАК ФизВесДоОчистки,
		|	ВТ_ПоВладельцу.ФизВесПослеОчистки КАК ФизВесПослеОчистки,
		|	ВТ_ПоВладельцу.ФизВесДоСушки КАК ФизВесДоСушки,
		|	ИНАГРО_Форма34Сводная.СпособОтбораСушки КАК СпособОтбораСушки,
		|	ВТ_ПоВладельцу.ПроводилиОчистку КАК ПроводилиОчистку,
		|	ВТ_ПоВладельцу.ПроводилиСушку КАК ПроводилиСушку,
		|	ИНАГРО_Форма34Сводная.НомерРаспоряжения КАК НомерРаспоряжения,
		|	ИНАГРО_Форма34Сводная.ДатаРаспоряжения КАК ДатаРаспоряжения
		|ИЗ
		|	Документ.ИНАГРО_Форма34Сводная КАК ИНАГРО_Форма34Сводная
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоВладельцу КАК ВТ_ПоВладельцу
		|		ПО ИНАГРО_Форма34Сводная.Ссылка = ВТ_ПоВладельцу.Ссылка";

	Запрос.УстановитьПараметр("Ссылка",           Ссылка);
	Запрос.УстановитьПараметр("Владелец",         СтруктураПараметров.Владелец);
	Запрос.УстановитьПараметр("ПроводилиОчистку", СтруктураПараметров.ПроводилиОчистку);
	Запрос.УстановитьПараметр("ПроводилиСушку",   СтруктураПараметров.ПроводилиСушку);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Выборка.Следующий();
	
	СведенияООтправителе  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
	Руководители          = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизацииИмяФамилия(Выборка.Организация, Выборка.Дата);
	ДолжностьРуководителя = Руководители.ДолжностьРуководителя;
	Руководитель          = Руководители.Руководитель;
	НачальникВТЛ          = Руководители.НачальникВТЛ;
	БухгалтерККУ          = Руководители.БухгалтерККУ;
	ЗавСкладом            = ИНАГРО_Элеватор.ОтветственныеЛицаИмяФамилия(Выборка.Организация, Выборка.Дата, Выборка.Склад);
		
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.ЄДРПОУ                 = СведенияООтправителе.КодПоЕДРПОУ; 
	Шапка.Параметры.Организация            = Выборка.Организация.НаименованиеПолное;
	//Шапка.Параметры.Номер                  = ИНАГРО_Общий.ВернутьКодБезПрефикса(Выборка.Номер);
	Шапка.Параметры.Номер                  = Выборка.Номер;
	Шапка.Параметры.НомерРаспоряжения      = ?(ЗначениеЗаполнено(Выборка.НомерРаспоряжения), Выборка.НомерРаспоряжения, Выборка.Номер);
	Шапка.Параметры.ДеньРаспоряжения       = Формат(Выборка.ДатаРаспоряжения, "ДФ=дд");
	Шапка.Параметры.МесяцРаспоряжения      = Сред(Формат(Выборка.ДатаРаспоряжения, "ДФ='дд ММММ';Л=uk"), 3);
	Шапка.Параметры.ГодРаспоряжения        = Формат(Выборка.ДатаРаспоряжения, "ДФ=гг");
	Шапка.Параметры.День                   = Формат(Выборка.Дата, "ДФ=дд");
	Шапка.Параметры.Месяц                  = Сред(Формат(Выборка.Дата, "ДФ='дд ММММ';Л=uk"), 3);
	Шапка.Параметры.Год                    = Формат(Выборка.Дата, "ДФ=гггг");
	
	Шапка.Параметры.Склад                  = ?(ЗначениеЗаполнено(Выборка.Склад), Выборка.Склад, "__________");                                            
	Шапка.Параметры.ЗавСкладом             = ?(ЗначениеЗаполнено(ЗавСкладом), ЗавСкладом, "_______________");

	Шапка.Параметры.УточнитьВладельца      = Выборка.Владелец.НаименованиеПолное; 

	Шапка.Параметры.ФизическийВес1         = Выборка.ВесДо; 
	
	Шапка.Параметры.Номенклатура           = Выборка.Номенклатура.НаименованиеПолное;
		
	Шапка.Параметры.ДатаНачала             = Формат(Выборка.ДатаНачала, "ДФ='дд ММММ гггг';Л=uk");// + Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	Шапка.Параметры.ДатаОкончания          = Формат(Выборка.ДатаОкончания, "ДФ='дд ММММ гггг';Л=uk");
	
	Шапка.Параметры.ДоговорНомер           = ?(ЗначениеЗаполнено(Выборка.ДоговорКонтрагентаНомер), Выборка.ДоговорКонтрагентаНомер, "__________");
	Шапка.Параметры.ДоговорДата            = ?(ЗначениеЗаполнено(Выборка.ДоговорКонтрагентаДата), Формат(Выборка.ДоговорКонтрагентаДата, "ДФ='дд ММММ гггг';Л=uk"), "_______________");
	
	Шапка.Параметры.СпособПодработки       = Выборка.СпособПодработки;
	Шапка.Параметры.Агрегат1               = Выборка.Агрегат1;
	Шапка.Параметры.Агрегат2               = Выборка.Агрегат2;
	Шапка.Параметры.РазмерСит              = Выборка.РазмерСит;
	
	Шапка.Параметры.ПланируемыеРезультаты  = Выборка.ПланируемыеРезультаты;
		
	Шапка.Параметры.НомерСклада            = Выборка.НомерСклада;
	Шапка.Параметры.ДатаДокумента          = Формат(Выборка.Дата, "ДФ='дд ММММ гггг';Л=uk");
		
	Шапка.Параметры.ДолжностьРуководителя  = ДолжностьРуководителя;
	Шапка.Параметры.Руководитель           = Руководитель;
	Шапка.Параметры.НачальникВТЛ           = НачальникВТЛ;
	
	Шапка.Параметры.ДатаНачалаОчистки      = Формат(Выборка.ДатаНачалаОчистки, "ДФ='дд ММММ гггг';Л=uk");
	Шапка.Параметры.ДатаОкончанияОчистки   = Формат(Выборка.ДатаОкончанияОчистки, "ДФ='дд ММММ гггг';Л=uk");
	
	Если    Выборка.ВесПобочногоПродукта <> 0
		ИЛИ Выборка.ВесОтходов1Кат <> 0
		ИЛИ Выборка.ВесОтходов2Кат <> 0 
		ИЛИ Выборка.ВесОтходов3Кат <> 0 Тогда	
		
		Шапка.Параметры.ФизическийВес3    = Выборка.ФизВесДоОчистки;
		Шапка.Параметры.ФизическийВес4    = Выборка.ФизВесПослеОчистки;
		
		//
		ВлажностьДоЧистки     = Окр(Выборка.ВесПоВлажностиДо / Выборка.ВесДо, 2);
		ВлажностьПослеОчистки = Окр(Выборка.ВесПоВлажностиДо / Выборка.ВесДо, 2);
		
		Шапка.Параметры.Влажность3        = ВлажностьДоЧистки;
		Шапка.Параметры.Влажность4        = ВлажностьПослеОчистки;
		
		Шапка.Параметры.СорнаяПримесь3    = Окр(Выборка.ВесПоСорнойПримесиДо / Выборка.ВесДо, 2);
		Шапка.Параметры.СорнаяПримесь4    = Выборка.СорнаяПримесь4;
				
		Шапка.Параметры.НомерАнализа3     = Выборка.НомерАнализа3;
		Шапка.Параметры.НомерАнализа4     = Выборка.НомерАнализа4;
		
	КонецЕсли;
		
	Если Выборка.УбыльОтСушки > 0 Тогда
		
		Шапка.Параметры.ДатаНачалаСушки     = Формат(Выборка.ДатаНачалаСушки, "ДФ='дд ММММ гггг';Л=uk");
		Шапка.Параметры.ДатаОкончанияСушки  = Формат(Выборка.ДатаОкончанияСушки, "ДФ='дд ММММ гггг';Л=uk");
		Шапка.Параметры.ФизическийВес5      = Выборка.ФизВесДоСушки;
		Шапка.Параметры.Влажность5          = Окр(Выборка.ВесПоВлажностиДо / Выборка.ВесДо, 2);
		Шапка.Параметры.Влажность6          = Выборка.Влажность6;
		Шапка.Параметры.НомерАнализа5       = Выборка.НомерАнализа5;
		Шапка.Параметры.НомерАнализа6       = Выборка.НомерАнализа6;
		Шапка.Параметры.УбыльОтСушки        = Выборка.УбыльОтСушки;
		
	ИначеЕсли Выборка.ПроводилиСушку
		    И Выборка.СпособОтбораСушки = 2 Тогда
		
		Если ЗначениеЗаполнено(Выборка.Агрегат2) Тогда
			Шапка.Параметры.Агрегат2 = Выборка.Агрегат2;
		Иначе
			Шапка.Параметры.Агрегат2 = "активне вентилювання";
		КонецЕсли;		
		
		Шапка.Параметры.Влажность5          = Выборка.Влажность5;
		Шапка.Параметры.Влажность6          = Выборка.Влажность6;

	КонецЕсли;
	
	ТабДокумент.Вывести(Шапка);
	
	//
	ИтогоФизическийВес = 0;
	
	Таблицы = Макет.ПолучитьОбласть("Таблицы");
	
	Если    Выборка.ВесПобочногоПродукта <> 0
		ИЛИ Выборка.ВесОтходов1Кат <> 0
		ИЛИ Выборка.ВесОтходов2Кат <> 0 
		ИЛИ Выборка.ВесОтходов3Кат <> 0 Тогда		
		
		Таблицы.Параметры.ФизическийВес3    = Выборка.ФизВесДоОчистки;
		Таблицы.Параметры.ФизическийВес4    = Выборка.ФизВесПослеОчистки;

	    Таблицы.Параметры.Натура3           = Выборка.Натура3;
		Таблицы.Параметры.Натура4           = Выборка.Натура4;
		
		//
		ВлажностьДоЧистки     = Окр(Выборка.ВесПоВлажностиДо / Выборка.ВесДо, 2);
		ВлажностьПослеОчистки = Окр(Выборка.ВесПоВлажностиДо / Выборка.ВесДо, 2);
		
		Если Ссылка.Порядок Тогда
			Если Выборка.Влажность2 < Выборка.ВесПоВлажностиДо / Выборка.ВесДо И Выборка.ПроводилиСушку Тогда
				ВлажностьДоЧистки     = Выборка.Влажность2;
				ВлажностьПослеОчистки = Выборка.Влажность2;
			КонецЕсли;			
		КонецЕсли;

		Таблицы.Параметры.Влажность3        = ВлажностьДоЧистки;
		Таблицы.Параметры.Влажность4        = ВлажностьПослеОчистки;

		Таблицы.Параметры.ЗерноваяПримесь3  = Окр(Выборка.ВесПоЗерновойПримесиДо / Выборка.ВесДо, 2);
		Таблицы.Параметры.ЗерноваяПримесь4  = Выборка.ЗерноваяПримесь4;

		Таблицы.Параметры.СорнаяПримесь3    = Окр(Выборка.ВесПоСорнойПримесиДо / Выборка.ВесДо, 2);
		Таблицы.Параметры.СорнаяПримесь4    = Выборка.СорнаяПримесь4;

		Таблицы.Параметры.Зараженность3     = "Не виявл.";
		Таблицы.Параметры.Зараженность4     = "Не виявл.";

		Таблицы.Параметры.НомерАнализа3     = Выборка.НомерАнализа3;
		Таблицы.Параметры.НомерАнализа4     = Выборка.НомерАнализа4;
	
	КонецЕсли;

	// Побочный продукт
	Если Выборка.ВесПобочногоПродукта <> 0 Тогда

		ИтогоФизическийВес = ИтогоФизическийВес + Выборка.ВесПобочногоПродукта;

		ЗерноваяПримесь7 = Выборка.ЗерноваяПримесь7;
		СорнаяПримесь7   = Выборка.СорнаяПримесь7;

		Если Выборка.Порядок Тогда
			Влажность = Выборка.Влажность7;
		Иначе
			Влажность = ВлажностьДоЧистки;
		КонецЕсли;
		
		Если ЗерноваяПримесь7 <= 70 Тогда
			
			Таблицы.Параметры.ФизическийВес7     = Выборка.ВесПобочногоПродукта;
			Таблицы.Параметры.Влажность7         = Влажность;
			Таблицы.Параметры.ОсновноеЗерно7     = 100 - ЗерноваяПримесь7 - СорнаяПримесь7;
			Таблицы.Параметры.ЗерноваяПримесь7   = ЗерноваяПримесь7;
			Таблицы.Параметры.СорнаяПримесь7     = СорнаяПримесь7;
			Таблицы.Параметры.ВсегоЗерна7        = 100 - СорнаяПримесь7;
			Таблицы.Параметры.НомерАнализа7      = Выборка.НомерАнализа7;
			
		Иначе
			
			Таблицы.Параметры.ФизическийВес71    = Выборка.ВесПобочногоПродукта;
			Таблицы.Параметры.Влажность71        = Влажность;
			Таблицы.Параметры.ОсновноеЗерно71    = 100 - ЗерноваяПримесь7 - СорнаяПримесь7;
			Таблицы.Параметры.ЗерноваяПримесь71  = ЗерноваяПримесь7;
			Таблицы.Параметры.СорнаяПримесь71    = СорнаяПримесь7;
			Таблицы.Параметры.ВсегоЗерна71       = 100 - СорнаяПримесь7;
			Таблицы.Параметры.НомерАнализа71     = Выборка.НомерАнализа7;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Отходы I категории
	Если Выборка.ВесОтходов1Кат <> 0 Тогда
		
		ИтогоФизическийВес = ИтогоФизическийВес + Выборка.ВесОтходов1Кат;

		ЗерноваяПримесь9 = Выборка.ЗерноваяПримесь9;
		СорнаяПримесь9   = Выборка.СорнаяПримесь9;

		Если Выборка.Порядок Тогда
			Влажность = Выборка.Влажность9;
		Иначе
			Влажность = ВлажностьДоЧистки;
		КонецЕсли;

		Если ЗерноваяПримесь9 > 30 Тогда
			
			Таблицы.Параметры.ФизическийВес9    = Выборка.ВесОтходов1Кат;
			Таблицы.Параметры.Влажность9        = Влажность;
			Таблицы.Параметры.ОсновноеЗерно9    = 100 - ЗерноваяПримесь9 - СорнаяПримесь9;
			Таблицы.Параметры.ЗерноваяПримесь9  = ЗерноваяПримесь9;
			Таблицы.Параметры.СорнаяПримесь9    = СорнаяПримесь9;
			Таблицы.Параметры.ВсегоЗерна9       = 100 - СорнаяПримесь9;
			Таблицы.Параметры.НомерАнализа9     = Выборка.НомерАнализа9;
			
		Иначе 
			
			Таблицы.Параметры.ФизическийВес91    = Выборка.ВесОтходов1Кат;
			Таблицы.Параметры.Влажность91        = Влажность;
			Таблицы.Параметры.ОсновноеЗерно91    = 100 - ЗерноваяПримесь9 - СорнаяПримесь9;
			Таблицы.Параметры.ЗерноваяПримесь91  = ЗерноваяПримесь9;
			Таблицы.Параметры.СорнаяПримесь91    = СорнаяПримесь9;
			Таблицы.Параметры.ВсегоЗерна91       = 100 - СорнаяПримесь9;
			Таблицы.Параметры.НомерАнализа91     = Выборка.НомерАнализа9;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Отходы II категории
	Если Выборка.ВесОтходов2Кат <> 0 Тогда
		
		ИтогоФизическийВес = ИтогоФизическийВес + Выборка.ВесОтходов2Кат;

		ЗерноваяПримесь10 = Выборка.ЗерноваяПримесь10;
		СорнаяПримесь10   = Выборка.СорнаяПримесь10;

		Если Выборка.Порядок Тогда
			Влажность = Выборка.Влажность10;
		Иначе
			Влажность = ВлажностьДоЧистки;
		КонецЕсли;

		Таблицы.Параметры.ФизическийВес10   = Выборка.ВесОтходов2Кат;
		Таблицы.Параметры.Влажность10       = Влажность;
		Таблицы.Параметры.ОсновноеЗерно10   = 100 - ЗерноваяПримесь10 - СорнаяПримесь10;
		Таблицы.Параметры.ЗерноваяПримесь10 = ЗерноваяПримесь10;
		Таблицы.Параметры.СорнаяПримесь10   = СорнаяПримесь10;
		Таблицы.Параметры.ВсегоЗерна10      = 100 - СорнаяПримесь10;
		Таблицы.Параметры.НомерАнализа10    = Выборка.НомерАнализа10;
		
	КонецЕсли;
		
	 // Отходы III категории
	Если Выборка.ВесОтходов3Кат <> 0 Тогда
		
		ИтогоФизическийВес = ИтогоФизическийВес + Выборка.ВесОтходов3Кат;

		ЗерноваяПримесь8 = Выборка.ЗерноваяПримесь8;
		СорнаяПримесь8   = Выборка.СорнаяПримесь8;

		Если Выборка.Порядок Тогда
			Влажность = Выборка.Влажность8;
		Иначе
			Влажность = ВлажностьДоЧистки;
		КонецЕсли;

		Таблицы.Параметры.ФизическийВес8    = Выборка.ВесОтходов3Кат;
		Таблицы.Параметры.Влажность8        = Влажность;
		Таблицы.Параметры.ОсновноеЗерно8    = 100 - ЗерноваяПримесь8 - СорнаяПримесь8;
		Таблицы.Параметры.ЗерноваяПримесь8  = ЗерноваяПримесь8;
		Таблицы.Параметры.СорнаяПримесь8    = СорнаяПримесь8;
		Таблицы.Параметры.ВсегоЗерна8       = 100 - СорнаяПримесь8;
		Таблицы.Параметры.НомерАнализа8     = Выборка.НомерАнализа8;
		
	КонецЕсли;
		
	Таблицы.Параметры.ИтогоФизическийВес   = ИтогоФизическийВес;
	
	ТабДокумент.Вывести(Таблицы);
	
	Пояснение = Макет.ПолучитьОбласть("Пояснение"); 		
	
	Пояснение.Параметры.ФизическийВес2     = Выборка.ФизВесПослеОчистки;
	
	//Пояснение.Параметры.Влажность2         = Выборка.Влажность2;
	//Для Каждого СтрокаТЧ Из Выборка.ЛабораторныйАнализ2.Результаты Цикл
	//	Если СтрокаТЧ.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.МелкоеЗерно Тогда
	//		Пояснение.Параметры.МелкоеЗерно = СтрокаТЧ.Значение;
	//	КонецЕсли;
	//КонецЦикла;
	//Пояснение.Параметры.ЗерноваяПримесь2   = Выборка.ЗерноваяПримесь2;
	//Пояснение.Параметры.СорнаяПримесь2     = Выборка.СорнаяПримесь2;
	
	ТабДокумент.Вывести(Пояснение);
	
	Подвал = Макет.ПолучитьОбласть("Подвал"); 	
	Подвал.Параметры.ДолжностьРуководителя = ДолжностьРуководителя;
	Подвал.Параметры.Руководитель          = Руководитель;
	Подвал.Параметры.НачальникВТЛ          = НачальникВТЛ;
	Подвал.Параметры.ЗавСкладом            = ЗавСкладом;
	Подвал.Параметры.БухгалтерККУ          = БухгалтерККУ;
	Подвал.Параметры.День                  = Формат(Выборка.Дата, "ДФ=дд");
	Подвал.Параметры.Месяц                 = Сред(Формат(Выборка.Дата, "ДФ='дд ММММ';Л=uk"), 3);
	Подвал.Параметры.Год                   = Формат(Выборка.Дата, "ДФ=гг");
	
	ТабДокумент.Вывести(Подвал);
	
	Возврат ТабДокумент;
	
КонецФункции

//

Функция ПечатьАктРаспределенияОтходов(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_Форма34Сводная_АктРаспределенияОтходов";
	
	Макет = ПолучитьМакет("ПФ_MXL_АктРаспределенияОтходов");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИНАГРО_Форма34Сводная.Ссылка,
	|	ИНАГРО_Форма34Сводная.Организация.НаименованиеПолное,
	|	ИНАГРО_Форма34Сводная.Номер,
	|	ИНАГРО_Форма34Сводная.Номенклатура,
	|	ИНАГРО_Форма34Сводная.ВидХранения,
	|	ИНАГРО_Форма34Сводная.Дата,
	|	ИНАГРО_Форма34Сводная.Влажность0,
	|	ИНАГРО_Форма34Сводная.Влажность1,
	|	ИНАГРО_Форма34Сводная.Влажность10,
	|	ИНАГРО_Форма34Сводная.Влажность2,
	|	ИНАГРО_Форма34Сводная.Влажность3,
	|	ИНАГРО_Форма34Сводная.Влажность4,
	|	ИНАГРО_Форма34Сводная.Влажность5,
	|	ИНАГРО_Форма34Сводная.Влажность6,
	|	ИНАГРО_Форма34Сводная.Влажность7,
	|	ИНАГРО_Форма34Сводная.Влажность8,
	|	ИНАГРО_Форма34Сводная.Влажность9,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь0,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь1,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь10,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь2,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь3,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь4,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь5,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь6,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь7,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь8,
	|	ИНАГРО_Форма34Сводная.ЗерноваяПримесь9,
	|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ1,
	|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ10,
	|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ2,
	|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ7,
	|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ8,
	|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ9,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь0,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь1,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь10,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь2,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь3,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь4,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь5,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь6,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь7,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь8,
	|	ИНАГРО_Форма34Сводная.СорнаяПримесь9,
	|	ИНАГРО_Форма34Сводная.ФизическийВес1,
	|	ИНАГРО_Форма34Сводная.ФизическийВес10,
	|	ИНАГРО_Форма34Сводная.ФизическийВес2,
	|	ИНАГРО_Форма34Сводная.ФизическийВес3,
	|	ИНАГРО_Форма34Сводная.ФизическийВес4,
	|	ИНАГРО_Форма34Сводная.ФизическийВес5,
	|	ИНАГРО_Форма34Сводная.ФизическийВес6,
	|	ИНАГРО_Форма34Сводная.ФизическийВес7,
	|	ИНАГРО_Форма34Сводная.ФизическийВес8,
	|	ИНАГРО_Форма34Сводная.ФизическийВес9,
	|	ИНАГРО_Форма34Сводная.Организация,
	|	ИНАГРО_Форма34Сводная.Порядок,
	|	ИНАГРО_Форма34Сводная.Склад,
	|	ИНАГРО_Форма34Сводная.Отходы1Категории,
	|	ИНАГРО_Форма34Сводная.Отходы2Категории,
	|	ИНАГРО_Форма34Сводная.Отходы1Категории.Наименование,
	|	ИНАГРО_Форма34Сводная.Отходы2Категории.Наименование
	|ИЗ
	|	Документ.ИНАГРО_Форма34Сводная КАК ИНАГРО_Форма34Сводная
	|ГДЕ
	|	ИНАГРО_Форма34Сводная.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец КАК Владелец,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)) КАК ФизическийВес1,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Влажность1 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)) КАК ВесПоВлажности1,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.СорнаяПримесь1 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)) КАК ВесПоСорнойПримеси1,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес21 + ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес3 + ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес31 + ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес32, 0)) КАК ВесОтходов,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес21, 0)) КАК ВесПП,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес3, 0)) КАК ВесОтходов3Кат,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес31, 0)) КАК ВесОтходов1Кат,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес32, 0)) КАК ВесОтходов2Кат,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтСушки, 0)) КАК УбыльОтСушки,
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.Влажность7, 0) КАК Влажность7,
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.СорнаяПримесь7, 0) КАК СорнаяПримесь7,
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.Влажность8, 0) КАК Влажность8,
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.СорнаяПримесь8, 0) КАК СорнаяПримесь8,
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.Влажность9, 0) КАК Влажность9,
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.СорнаяПримесь9, 0) КАК СорнаяПримесь9,
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.Влажность10, 0) КАК Влажность10,
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.СорнаяПримесь10, 0) КАК СорнаяПримесь10,
	|	ВЫБОР
	|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиОчистку
	|				И ИНАГРО_Форма34Сводная.ПроводилиОчистку
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПроводилиОчистку,
	|	ВЫБОР
	|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиСушку
	|				И ИНАГРО_Форма34Сводная.ПроводилиСушку
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПроводилиСушку,
	|	ИНАГРО_Форма34Сводная.Ссылка,
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец.НаименованиеПолное
	|ИЗ
	|	Документ.ИНАГРО_Форма34Сводная.РасчетПоВладельцам КАК ИНАГРО_Форма34СводнаяРасчетПоВладельцам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_Форма34Сводная КАК ИНАГРО_Форма34Сводная
	|		ПО ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка = ИНАГРО_Форма34Сводная.Ссылка
	|ГДЕ
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.Ссылка В(&МассивОбъектов)
	|	И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиОчистку = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец,
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.Влажность7, 0),
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.СорнаяПримесь7, 0),
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.Влажность8, 0),
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.СорнаяПримесь8, 0),
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.Влажность9, 0),
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.СорнаяПримесь9, 0),
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.Влажность10, 0),
	|	ЕСТЬNULL(ИНАГРО_Форма34Сводная.СорнаяПримесь10, 0),
	|	ВЫБОР
	|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиОчистку
	|				И ИНАГРО_Форма34Сводная.ПроводилиОчистку
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиСушку
	|				И ИНАГРО_Форма34Сводная.ПроводилиСушку
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ИНАГРО_Форма34Сводная.Ссылка,
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец.НаименованиеПолное";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаШапка = МассивРезультатов[0].Выбрать();
	
	ВыборкаТЧ    =  МассивРезультатов[1].Выгрузить();
	
	Пока ВыборкаШапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(ВыборкаШапка.Организация, ВыборкаШапка.Дата);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.Организация        = ВыборкаШапка.ОрганизацияНаименованиеПолное;
		Шапка.Параметры.ДолжностьДиректора = Руководители.ДолжностьРуководителя;
		Шапка.Параметры.Руководитель       = Руководители.Руководитель;
		Шапка.Параметры.Номер              = ВыборкаШапка.Номер;
		Шапка.Параметры.Культура           = ВыборкаШапка.Номенклатура;
		Шапка.Параметры.ВидХранения        = ВыборкаШапка.ВидХранения;
		Шапка.Параметры.Дата               = Формат(ВыборкаШапка.Дата, "ДЛФ=D");
		ТабДокумент.Вывести(Шапка);	
		
		ШапкаТаблици = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ШапкаТаблици);
		
		ОблСтрока               = Макет.ПолучитьОбласть("Строка");	
		
		ОблПобочныйПродукт      = Макет.ПолучитьОбласть("СтрокаПобочныйПродукт");
		ОблОтходы1Категории     = Макет.ПолучитьОбласть("СтрокаОтходы1Категории");
		ОблОтходы2Категории     = Макет.ПолучитьОбласть("СтрокаОтходы2Категории");
		ОблОтходы3Категории     = Макет.ПолучитьОбласть("СтрокаОтходы3Категории");
		
		ОблИтог                 = Макет.ПолучитьОбласть("Итог");
		ОблИтогПП               = Макет.ПолучитьОбласть("ИтогПобочногоПродукту");
		ОблИтогОтходы1Категории = Макет.ПолучитьОбласть("ИтогОтходов1Кат");
		ОблИтогОтходы2Категории = Макет.ПолучитьОбласть("ИтогОтходов2Кат");
		ОблИтогОтходы3Категории = Макет.ПолучитьОбласть("ИтогОтходов3Кат");
		
		Ном = 1;
		ВесДоОчистки = 0;
		ВесПоСорнойПримесиДоОчистки = 0;
		
		ТабТЧ = ВыборкаТЧ.Скопировать(Новый Структура("Ссылка",ВыборкаШапка.Ссылка));
		
		Для Каждого Стр Из ТабТЧ Цикл
			
			// Строка по владельцу
			ОблСтрока.Параметры.Номер    = Ном;
			ОблСтрока.Параметры.Дата     = Формат(ВыборкаШапка.Дата,"ДФ=dd.MM.yyyy");
			ОблСтрока.Параметры.Владелец = Стр.ВладелецНаименованиеПолное;
			
			ВлажностьДоОчистки_          = Окр(Стр.ВесПоВлажности1 / Стр.ФизическийВес1,2);
			ВлажностьПослеОчистки_       = Окр(Стр.ВесПоВлажности1 / Стр.ФизическийВес1,2);		
			Если ВыборкаШапка.Порядок Тогда
				Если ВыборкаШапка.Влажность2 < ВлажностьДоОчистки_ И Стр.ПроводилиСушку Тогда
					ВлажностьДоОчистки_    = ВыборкаШапка.Влажность2;
					ВлажностьПослеОчистки_ = ВыборкаШапка.Влажность2;
				КонецЕсли;
			КонецЕсли;
			ОблСтрока.Параметры.ВлажностьДо        = ВлажностьДоОчистки_;
			ОблСтрока.Параметры.ВлажностьПосле     = ВлажностьПослеОчистки_;			
			
			ОблСтрока.Параметры.СорнаяПримесьДо    = Окр(Стр.ВесПоСорнойПримеси1 / Стр.ФизическийВес1,2);
			ОблСтрока.Параметры.СорнаяПримесьПосле = ВыборкаШапка.СорнаяПримесь2;
			ОблСтрока.Параметры.ВесОтходов         = Стр.ВесОтходов;		
			
			// Вначале сушим потом чистим
			Если ВыборкаШапка.Порядок Тогда
				ОблСтрока.Параметры.ВесДоОчистки   = Стр.ФизическийВес1 - Стр.УбыльОтСушки;				
				// Вначале чистим потом сушим	
			Иначе
				ОблСтрока.Параметры.ВесДоОчистки   = Стр.ФизическийВес1;			
			КонецЕсли;		
			ОблСтрока.Параметры.ВесПослеОчистки    = ОблСтрока.Параметры.ВесДоОчистки - Стр.ВесОтходов;
			
			Ном = Ном + 1;		
			ТабДокумент.Вывести(ОблСтрока);
			
			// Строка побочный продукт
			Если Стр.ВесПП > 0  Тогда
				ОблПобочныйПродукт.Параметры.ВесПП           = Стр.ВесПП;
				ОблПобочныйПродукт.Параметры.ВлажностьПП     = Стр.Влажность7;
				ОблПобочныйПродукт.Параметры.СорнаяПримесьПП = Стр.СорнаяПримесь7;	
				ОблПобочныйПродукт.Параметры.ПолезноеЗерноПП = 100 - Стр.СорнаяПримесь7;
				ТабДокумент.Вывести(ОблПобочныйПродукт);
			КонецЕсли;
			
			// Сстрока отходы 1 категории
			Если Стр.ВесОтходов1Кат > 0 Тогда
				ОблОтходы1Категории.Параметры.Отходы1Категории     = ВыборкаШапка.Отходы1Категории;
				ОблОтходы1Категории.Параметры.ВесОтх1Кат           = Стр.ВесОтходов1Кат;
				ОблОтходы1Категории.Параметры.ВлажностьОтх1Кат     = Стр.Влажность9;
				ОблОтходы1Категории.Параметры.СорнаяПримесьОтх1Кат = Стр.СорнаяПримесь9;
				ОблОтходы1Категории.Параметры.ПолезноеЗерноОтх1Кат = 100 - Стр.СорнаяПримесь9;
				ТабДокумент.Вывести(ОблОтходы1Категории);
			КонецЕсли;
			
			// Строка отходы 2 категории
			Если Стр.ВесОтходов2Кат > 0 Тогда
				ОблОтходы2Категории.Параметры.Отходы2Категории     = ВыборкаШапка.Отходы2Категории;
				ОблОтходы2Категории.Параметры.ВесОтх2Кат           = Стр.ВесОтходов2Кат;
				ОблОтходы2Категории.Параметры.ВлажностьОтх2Кат     = Стр.Влажность10;
				ОблОтходы2Категории.Параметры.СорнаяПримесьОтх2Кат = Стр.СорнаяПримесь10;
				ОблОтходы2Категории.Параметры.ПолезноеЗерноОтх2Кат = 100 - Стр.СорнаяПримесь10;
				ТабДокумент.Вывести(ОблОтходы2Категории);
			КонецЕсли;
			
			// Строка отходы 3 категории
			Если Стр.ВесОтходов3Кат > 0 Тогда
				ОблОтходы3Категории.Параметры.ВесОтх3Кат           = Стр.ВесОтходов3Кат;
				Если ВыборкаШапка.Порядок И Стр.УбыльОтСушки <> 0 Тогда
					ОблОтходы3Категории.Параметры.ВлажностьОтх3Кат = Стр.Влажность8;
				Иначе
					ОблОтходы3Категории.Параметры.ВлажностьОтх3Кат = ВлажностьПослеОчистки_;
				КонецЕсли;
				ОблОтходы3Категории.Параметры.СорнаяПримесьОтх3Кат = Стр.СорнаяПримесь8;
				ОблОтходы3Категории.Параметры.ПолезноеЗерноОтх3Кат = 100 - Стр.СорнаяПримесь8;
				ТабДокумент.Вывести(ОблОтходы3Категории);
			КонецЕсли;		
		КонецЦикла;
		
		// Область итог
		Если ВыборкаШапка.ФизическийВес3 > 0 Или ВыборкаШапка.ФизическийВес4 > 0 Тогда
			ОблИтог.Параметры.ИтогВесДоОчистки       = ВыборкаШапка.ФизическийВес3;
			ОблИтог.Параметры.ИтогВесПослеОчистки    = ВыборкаШапка.ФизическийВес4;
			ОблИтог.Параметры.ИтогВлажностьДо        = ВыборкаШапка.Влажность3;	
			ОблИтог.Параметры.ИтогВлажностьПосле     = ВыборкаШапка.Влажность4;	
			ОблИтог.Параметры.ИтогСорнаяПримесьДо    = ВыборкаШапка.СорнаяПримесь3;	
			ОблИтог.Параметры.ИтогСорнаяПримесьПосле = ВыборкаШапка.СорнаяПримесь4;	
			ОблИтог.Параметры.ИтогВесОтходов         = ВыборкаШапка.ФизическийВес7   + ВыборкаШапка.ФизическийВес8 
			+ ВыборкаШапка.ФизическийВес9 + ВыборкаШапка.ФизическийВес10;	
			ТабДокумент.Вывести(ОблИтог);
		КонецЕсли;	
		
		// Область побочный продукт
		Если ВыборкаШапка.ФизическийВес7 > 0 Тогда
			ОблИтогПП.Параметры.ИтогВесПП           = ВыборкаШапка.ФизическийВес7;
			ОблИтогПП.Параметры.ИтогВлажностьПП     = ВыборкаШапка.Влажность7;
			ОблИтогПП.Параметры.ИтогСорнаяПримесьПП = ВыборкаШапка.СорнаяПримесь7;
			ОблИтогПП.Параметры.ИтогПолезноеЗерноПП = 100 - ВыборкаШапка.СорнаяПримесь7;
			ТабДокумент.Вывести(ОблИтогПП);
		КонецЕсли;
		
		// Область отходы 1 категории
		Если ВыборкаШапка.ФизическийВес9 > 0 Тогда
			ОблИтогОтходы1Категории.Параметры.Отходы1Кат               = ВыборкаШапка.Отходы1КатегорииНаименование;
			ОблИтогОтходы1Категории.Параметры.ИтогВесОтх1Кат           = ВыборкаШапка.ФизическийВес9;
			ОблИтогОтходы1Категории.Параметры.ИтогВлажностьОтх1Кат     = ВыборкаШапка.Влажность9;
			ОблИтогОтходы1Категории.Параметры.ИтогСорнаяПримесьОтх1Кат = ВыборкаШапка.СорнаяПримесь9;
			ОблИтогОтходы1Категории.Параметры.ИтогПолезноеЗерноОтх1Кат = 100 - ВыборкаШапка.СорнаяПримесь9;
			ТабДокумент.Вывести(ОблИтогОтходы1Категории);
		КонецЕсли;
		
		// Область отходы 2 категории
		Если ВыборкаШапка.ФизическийВес10 > 0 Тогда
			ОблИтогОтходы2Категории.Параметры.Отходы2Кат               = ВыборкаШапка.Отходы2КатегорииНаименование;
			ОблИтогОтходы2Категории.Параметры.ИтогВесОтх2Кат           = ВыборкаШапка.ФизическийВес10;
			ОблИтогОтходы2Категории.Параметры.ИтогВлажностьОтх2Кат     = ВыборкаШапка.Влажность10;
			ОблИтогОтходы2Категории.Параметры.ИтогСорнаяПримесьОтх2Кат = ВыборкаШапка.СорнаяПримесь10;
			ОблИтогОтходы2Категории.Параметры.ИтогПолезноеЗерноОтх2Кат = 100 - ВыборкаШапка.СорнаяПримесь10;
			ТабДокумент.Вывести(ОблИтогОтходы2Категории);
		КонецЕсли;
		
		// Область отходы 3 категории
		Если ВыборкаШапка.ФизическийВес8 > 0 Тогда
			ОблИтогОтходы3Категории.Параметры.ИтогВесОтх3Кат           = ВыборкаШапка.ФизическийВес8;
			ОблИтогОтходы3Категории.Параметры.ИтогВлажностьОтх3Кат     = ВыборкаШапка.Влажность8;
			ОблИтогОтходы3Категории.Параметры.ИтогСорнаяПримесьОтх3Кат = ВыборкаШапка.СорнаяПримесь8;
			ОблИтогОтходы3Категории.Параметры.ИтогПолезноеЗерноОтх3Кат = 100 - ВыборкаШапка.СорнаяПримесь8;
			ТабДокумент.Вывести(ОблИтогОтходы3Категории);
		КонецЕсли;
		
		Дно = Макет.ПолучитьОбласть("Дно");
		Дно.Параметры.НачальникВТЛ = Руководители.НачальникВТЛ;
		
		ДанныеОтветственногоЛица = Неопределено;
		МОЛФизическоеЛицо = ИНАГРО_Элеватор.ОтветственныеЛица(ВыборкаШапка.Организация, ВыборкаШапка.Дата, ВыборкаШапка.Склад, ДанныеОтветственногоЛица);
		Если ЗначениеЗаполнено(ДанныеОтветственногоЛица) Тогда
			Дно.Параметры.МОЛ = ДанныеОтветственногоЛица.ФИО;
		Иначе
			Дно.Параметры.МОЛ = МОЛФизическоеЛицо;
		КонецЕсли;           
		
		Дно.Параметры.Бухгалтер    = Руководители.БухгалтерККУ;
		ТабДокумент.Вывести(Дно);
		
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДокумент.АвтоМасштаб        = Истина;
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьАктРаспределенияСушки(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_Форма34Сводная_АктРаспределенияСушки";
	
	Макет = ПолучитьМакет("ПФ_MXL_АктРаспределенияСушки");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИНАГРО_Форма34Сводная.Ссылка,
	|	ИНАГРО_Форма34Сводная.Организация.НаименованиеПолное,
	|	ИНАГРО_Форма34Сводная.Номер,
	|	ИНАГРО_Форма34Сводная.Номенклатура,
	|	ИНАГРО_Форма34Сводная.ВидХранения,
	|	ИНАГРО_Форма34Сводная.Дата,
	|	ИНАГРО_Форма34Сводная.Организация,
	|	ИНАГРО_Форма34Сводная.Склад,
	|	ИНАГРО_Форма34Сводная.Влажность2,
	|	ИНАГРО_Форма34Сводная.Порядок,
	|	ИНАГРО_Форма34Сводная.Влажность5,
	|	ИНАГРО_Форма34Сводная.СнижениеВлажности
	|ИЗ
	|	Документ.ИНАГРО_Форма34Сводная КАК ИНАГРО_Форма34Сводная
	|ГДЕ
	|	ИНАГРО_Форма34Сводная.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)) КАК ФизическийВес1,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес21 + ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес3 + ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес31 + ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес32, 0)) КАК УбыльОтОчистки,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.УбыльОтСушки, 0)) КАК УбыльОтСушки,
	|	СУММА(ЕСТЬNULL(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Влажность1 * ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ФизическийВес1, 0)) КАК ВесПоВлажности1,
	|	СУММА(ИНАГРО_Форма34СводнаяРасчетПоВладельцам.СнижениеВлажности) КАК СнижениеВлажности,
	|	ВЫБОР
	|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиОчистку
	|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиОчистку
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПроводилиОчистку,
	|	ВЫБОР
	|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиСушку
	|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиСушку
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПроводилиСушку,
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка,
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец.НаименованиеПолное
	|ИЗ
	|	Документ.ИНАГРО_Форма34Сводная.РасчетПоВладельцам КАК ИНАГРО_Форма34СводнаяРасчетПоВладельцам
	|ГДЕ
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиСушку
	|	И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец,
	|	ВЫБОР
	|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиОчистку
	|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиОчистку
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиСушку
	|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиСушку
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка,
	|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец.НаименованиеПолное";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаШапка = МассивРезультатов[0].Выбрать();
	
	ВыборкаТЧ    =  МассивРезультатов[1].Выгрузить();
	
	Пока ВыборкаШапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(ВыборкаШапка.Организация, ВыборкаШапка.Дата);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.Организация = ВыборкаШапка.ОрганизацияНаименованиеПолное;
		Шапка.Параметры.ДолжностьДиректора = Руководители.ДолжностьРуководителя;
		Шапка.Параметры.Руководитель = Руководители.Руководитель;
		Шапка.Параметры.Номер = ВыборкаШапка.Номер;
		Шапка.Параметры.Культура = ВыборкаШапка.Номенклатура;
		Шапка.Параметры.ВидХранения = ВыборкаШапка.ВидХранения;
		Шапка.Параметры.Дата = Формат(ВыборкаШапка.Дата, "ДЛФ=D");
		ТабДокумент.Вывести(Шапка);	
		
		ШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ШапкаТаблицы);
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		
		Ном = 1;
		ВесДоСушки = 0;
		ВесПоВлажностиДоСушки = 0;
		УбыльОтСушки_=0;	
		
		ТабТЧ = ВыборкаТЧ.Скопировать(Новый Структура("Ссылка",ВыборкаШапка.Ссылка));
		
		Для Каждого Стр Из ТабТЧ Цикл
			
			ОблСтрока.Параметры.Номер = Ном;
			ОблСтрока.Параметры.Дата = Формат(ВыборкаШапка.Дата,"ДФ=dd.MM.yyyy");
			ОблСтрока.Параметры.Владелец = Стр.ВладелецНаименованиеПолное;
			ОблСтрока.Параметры.ВлажностьДоСушки = Окр(Стр.ВесПоВлажности1 / Стр.ФизическийВес1, 2);
			ОблСтрока.Параметры.ВлажностьПослеСушки = ВыборкаШапка.Влажность2;
			ОблСтрока.Параметры.СнижениеВлажности = Стр.СнижениеВлажности;
			ОблСтрока.Параметры.УбыльОтСушки = Стр.УбыльОтСушки;			
			
			// Вначале сушим потом чистим
			Если ВыборкаШапка.Порядок Тогда
				ВесДоСушкиСтр = Стр.ФизическийВес1;
				
				// Вначале чистим потом сушим	
			Иначе
				ВесДоСушкиСтр = Стр.ФизическийВес1 - Стр.УбыльОтОчистки;				
			КонецЕсли;
			
			ОблСтрока.Параметры.ВесДоСушки = ВесДоСушкиСтр;
			ОблСтрока.Параметры.СнижениеВлажности = Окр(Стр.УбыльОтСушки * 100 / ВесДоСушкиСтр,2);
			ВесДоСушки = ВесДоСушки  +ВесДоСушкиСтр;
			ВесПоВлажностиДоСушки = ВесПоВлажностиДоСушки + Окр(Стр.ВесПоВлажности1 / Стр.ФизическийВес1, 2) * ОблСтрока.Параметры.ВесДоСушки / 100;		
			УбыльОтСушки_ = УбыльОтСушки_ + Стр.УбыльОтСушки;
			Ном = Ном + 1;		
			ТабДокумент.Вывести(ОблСтрока);
		КонецЦикла;
		
		Итог = Макет.ПолучитьОбласть("Итог");
		Итог.Параметры.ИтогВесДоСушки = ВесДоСушки;
		Итог.Параметры.ИтогВлажностьДоСушки = ВыборкаШапка.Влажность5;
		Итог.Параметры.ИтогВлажностьПослеСушки = ВыборкаШапка.Влажность2;
		Итог.Параметры.СнижениеВлажности = ВыборкаШапка.СнижениеВлажности;
		Итог.Параметры.ИтогУбыльОтСушки = УбыльОтСушки_;
		ТабДокумент.Вывести(Итог);
		
		Дно = Макет.ПолучитьОбласть("Дно");
		Дно.Параметры.НачальникВТЛ = Руководители.НачальникВТЛ;
		
		ДанныеОтветственногоЛица = Неопределено;
		МОЛФизическоеЛицо = ИНАГРО_Элеватор.ОтветственныеЛица(ВыборкаШапка.Организация, ВыборкаШапка.Дата, ВыборкаШапка.Склад, ДанныеОтветственногоЛица);
		Если ЗначениеЗаполнено(ДанныеОтветственногоЛица) Тогда
			Дно.Параметры.МОЛ = ДанныеОтветственногоЛица.ФИО;
		Иначе
			Дно.Параметры.МОЛ = МОЛФизическоеЛицо;
		КонецЕсли;   
		
		Дно.Параметры.Бухгалтер = Руководители.БухгалтерККУ;
		ТабДокумент.Вывести(Дно);
		
	КонецЦикла;
	
	ТабДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	ТабДокумент.АвтоМасштаб=Истина;
	
	Возврат ТабДокумент;
		
КонецФункции

Функция ПечатьАктУничтожения(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_Форма34Сводная_АктУничтожения";
	
	Макет = ПолучитьМакет("ПФ_MXL_АктУничтожения");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_Форма34Сводная.Ссылка,
		|	ИНАГРО_Форма34Сводная.Дата,
		|	ИНАГРО_Форма34Сводная.Организация,
		|	ИНАГРО_Форма34Сводная.Номер,
		|	ИНАГРО_Форма34Сводная.Склад,
		|	ИНАГРО_Форма34Сводная.НачальникОхраны,
		|	ИНАГРО_Форма34Сводная.ПричинаВозникновенияОтходов,
		|	ИНАГРО_Форма34Сводная.ПриказНаУничтожение,
		|	ИНАГРО_Форма34Сводная.ПропускНаВывоз,
		|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ8,
		|	ИНАГРО_Форма34Сводная.ФизическийВес8,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь8,
		|	ИНАГРО_Форма34Сводная.Организация.НаименованиеПолное
		|ИЗ
		|	Документ.ИНАГРО_Форма34Сводная КАК ИНАГРО_Форма34Сводная
		|ГДЕ
		|	ИНАГРО_Форма34Сводная.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(Выборка.Организация, Выборка.Дата);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.Организация     = Выборка.ОрганизацияНаименованиеПолное;
		Шапка.Параметры.Номер           = Выборка.Номер;
		Шапка.Параметры.Дата            = Формат(Выборка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.НачальникВТЛ    = Руководители.НачальникВТЛ;
		ДанныеОтветственногоЛица        = Неопределено;
		ЗавСкладом = ИНАГРО_Элеватор.ОтветственныеЛица(Выборка.Организация, Выборка.Дата, Выборка.Склад, ДанныеОтветственногоЛица);
		Шапка.Параметры.ЗавСкладом      = ДанныеОтветственногоЛица.ФИО;	
		Шапка.Параметры.НачальникОхраны = Выборка.НачальникОхраны;
		Шапка.Параметры.Директор        = Руководители.Руководитель; 
		Шапка.Параметры.Склад           = Выборка.Склад;
		Шапка.Параметры.Причина         = Выборка.ПричинаВозникновенияОТходов;
		Шапка.Параметры.приказ          = Выборка.ПриказНаУничтожение;
		Шапка.Параметры.пропуск         = Выборка.ПропускНаВывоз;
		Шапка.Параметры.анализ          = Выборка.ЛабораторныйАнализ8;	
		Шапка.Параметры.сор             = 100 - Выборка.СорнаяПримесь8;
		Шапка.Параметры.вес             = Выборка.ФизическийВес8;
		
		ТабДокумент.Вывести(Шапка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

Функция ПечатьАктУничтожения_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_Форма34Сводная_АктУничтожения_2021";
	
	Макет = ПолучитьМакет("ПФ_MXL_UK_АктУничтожения_2021");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_Форма34Сводная.Ссылка,
		|	ИНАГРО_Форма34Сводная.Дата,
		|	ИНАГРО_Форма34Сводная.Организация,
        |	ИНАГРО_Форма34Сводная.Организация.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
		|	ИНАГРО_Форма34Сводная.Номер,
		|	ИНАГРО_Форма34Сводная.Склад,
		|	ИНАГРО_Форма34Сводная.НачальникОхраны,
		|	ИНАГРО_Форма34Сводная.ПричинаВозникновенияОтходов,
		|	ИНАГРО_Форма34Сводная.ПриказНаУничтожение,
		|	ИНАГРО_Форма34Сводная.ПропускНаВывоз,
		|	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ8,
        |	ИНАГРО_Форма34Сводная.ЛабораторныйАнализ8.Номер КАК НомерАнализа,
		|	ИНАГРО_Форма34Сводная.ФизическийВес8,
		|	ИНАГРО_Форма34Сводная.СорнаяПримесь8,
		|	ИНАГРО_Форма34Сводная.Организация.НаименованиеПолное
		|ИЗ
		|	Документ.ИНАГРО_Форма34Сводная КАК ИНАГРО_Форма34Сводная
		|ГДЕ
		|	ИНАГРО_Форма34Сводная.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизацииИмяФамилия(Выборка.Организация, Выборка.Дата);
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.Организация     = Выборка.ОрганизацияНаименованиеПолное;
        Шапка.Параметры.Номер           = Выборка.Номер;
		Шапка.Параметры.ЕГРПОУ          = Выборка.КодПоЕДРПОУ;
		Шапка.Параметры.Дата            = Формат(Выборка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
        Шапка.Параметры.День = Формат(Выборка.Дата, "ДФ=дд");
		Шапка.Параметры.Месяц = Формат(Выборка.Дата, "ДФ=ММММ");
		Шапка.Параметры.Год = Формат(Выборка.Дата, "ДФ=гг");
        Шапка.Параметры.НачальникВТЛ    = Руководители.НачальникВТЛ;
		ДанныеОтветственногоЛица        = Неопределено;
		ЗавСкладом = ИНАГРО_Элеватор.ОтветственныеЛицаИмяФамилия(Выборка.Организация, Выборка.Дата, Выборка.Склад, ДанныеОтветственногоЛица);
		Шапка.Параметры.ЗавСкладом      = ЗавСкладом;	
		Шапка.Параметры.НачальникОхраны = Выборка.НачальникОхраны;
		Шапка.Параметры.Директор        = Руководители.Руководитель; 
		Шапка.Параметры.Склад           = Выборка.Склад;
		Шапка.Параметры.Причина         = Выборка.ПричинаВозникновенияОТходов;
		Шапка.Параметры.приказ          = Выборка.ПриказНаУничтожение;
		Шапка.Параметры.пропуск         = Выборка.ПропускНаВывоз;
		Шапка.Параметры.НомерАнализа          = Выборка.НомерАнализа;	
		Шапка.Параметры.сор             = 100 - Выборка.СорнаяПримесь8;
		Шапка.Параметры.вес             = Выборка.ФизическийВес8;
		
		ТабДокумент.Вывести(Шапка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

Функция ПечатьОтчетПроГаз(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_Форма34Сводная_ОтчетПроГаз";
	
	Макет = ПолучитьМакет("ПФ_MXL_ОтчетПроГаз");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИНАГРО_Форма34Сводная.Ссылка,
	|	МАКСИМУМ(ОтветственныеЛица.Период) КАК Период,
	|	ИНАГРО_Форма34Сводная.Склад
	|ПОМЕСТИТЬ ТабОтветствЛицаПериод
	|ИЗ
	|	Документ.ИНАГРО_Форма34Сводная КАК ИНАГРО_Форма34Сводная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица КАК ОтветственныеЛица
	|		ПО ИНАГРО_Форма34Сводная.Склад = ОтветственныеЛица.СтруктурнаяЕдиница
	|			И ИНАГРО_Форма34Сводная.Дата >= ОтветственныеЛица.Период
	|ГДЕ
	|	ИНАГРО_Форма34Сводная.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИНАГРО_Форма34Сводная.Ссылка,
	|	ИНАГРО_Форма34Сводная.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабОтветствЛицаПериод.Ссылка,
	|	ОтветственныеЛица.ФизическоеЛицо
	|ПОМЕСТИТЬ ТабОтветственныеЛица
	|ИЗ
	|	ТабОтветствЛицаПериод КАК ТабОтветствЛицаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица КАК ОтветственныеЛица
	|		ПО ТабОтветствЛицаПериод.Период = ОтветственныеЛица.Период
	|			И ТабОтветствЛицаПериод.Склад = ОтветственныеЛица.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ФИОФизическихЛиц.Период) КАК Период,
	|	ТабОтветственныеЛица.ФизическоеЛицо,
	|	ТабОтветственныеЛица.Ссылка
	|ПОМЕСТИТЬ ТабФИОФизЛицПериод
	|ИЗ
	|	ТабОтветственныеЛица КАК ТабОтветственныеЛица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
	|		ПО ТабОтветственныеЛица.ФизическоеЛицо = ФИОФизическихЛиц.ФизическоеЛицо
	|			И ТабОтветственныеЛица.Ссылка.Дата >= ФИОФизическихЛиц.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабОтветственныеЛица.Ссылка,
	|	ТабОтветственныеЛица.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабФИОФизЛицПериод.Ссылка,
	|	ФИОФизическихЛиц.Фамилия + ВЫБОР
	|		КОГДА ПОДСТРОКА(ФИОФизическихЛиц.Имя, 1, 1) <> """"
	|			ТОГДА "" "" + ПОДСТРОКА(ФИОФизическихЛиц.Имя, 1, 1) + "".""
	|		ИНАЧЕ """"
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ПОДСТРОКА(ФИОФизическихЛиц.Отчество, 1, 1) <> """"
	|			ТОГДА "" "" + ПОДСТРОКА(ФИОФизическихЛиц.Отчество, 1, 1) + "".""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ФИО
	|ПОМЕСТИТЬ ТабФИОФизЛиц
	|ИЗ
	|	ТабФИОФизЛицПериод КАК ТабФИОФизЛицПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
	|		ПО ТабФИОФизЛицПериод.Период = ФИОФизическихЛиц.Период
	|			И ТабФИОФизЛицПериод.ФизическоеЛицо = ФИОФизическихЛиц.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИНАГРО_Форма34Сводная.Ссылка,
	|	ИНАГРО_Форма34Сводная.Дата,
	|	ИНАГРО_Форма34Сводная.Организация,
	|	ИНАГРО_Форма34Сводная.Номер,
	|	ИНАГРО_Форма34Сводная.Склад,
	|	ИНАГРО_Форма34Сводная.Организация.НаименованиеПолное,
	|	ИНАГРО_Форма34Сводная.ДатаРаспоряжения,
	|	ИНАГРО_Форма34Сводная.НомерРаспоряжения,
	|	ИНАГРО_Форма34Сводная.Номенклатура.НаименованиеПолное,
	|	ИНАГРО_Форма34Сводная.ФизическийВес5,
	|	ИНАГРО_Форма34Сводная.Влажность5,
	|	ИНАГРО_Форма34Сводная.Влажность6,
	|	ЕСТЬNULL(ТабФИОФизЛиц.ФИО, ЕСТЬNULL(ТабОтветственныеЛица.ФизическоеЛицо.Наименование, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))) КАК ФизическоеЛицо
	|ИЗ
	|	Документ.ИНАГРО_Форма34Сводная КАК ИНАГРО_Форма34Сводная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабФИОФизЛиц КАК ТабФИОФизЛиц
	|		ПО ИНАГРО_Форма34Сводная.Ссылка = ТабФИОФизЛиц.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабОтветственныеЛица КАК ТабОтветственныеЛица
	|		ПО ИНАГРО_Форма34Сводная.Ссылка = ТабОтветственныеЛица.Ссылка
	|ГДЕ
	|	ИНАГРО_Форма34Сводная.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(Выборка.Организация, Выборка.Дата);
		Шапка = Макет.ПолучитьОбласть("Шапка");
		
		Шапка.Параметры.Организация    = Выборка.ОрганизацияНаименованиеПолное;
		Шапка.Параметры.Директор       = Руководители.Руководитель;
		Шапка.Параметры.НомерДок       = Выборка.Номер;
		Шапка.Параметры.Дата           = Формат(Выборка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Шапка.Параметры.Склад          = Выборка.Склад;
		ТабДокумент.Вывести(Шапка);	
		
		Стр = Макет.ПолучитьОбласть("Строка");
		
		Стр.Параметры.Дата              = Формат(Выборка.ДатаРаспоряжения, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		Стр.Параметры.НомерРаспоряжения = Выборка.НомерРаспоряжения;
		Стр.Параметры.Культура          = Выборка.НоменклатураНаименованиеПолное;
		Стр.Параметры.Количество        = Выборка.ФизическийВес5;
		Стр.Параметры.ВлажностьДо       = Выборка.Влажность5;
		Стр.Параметры.ВлажностьПосле    = Выборка.Влажность6;
		
		НормаРасходаГаза = 0;
		СтруктураСохранения = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_Форма34Сводная_ОтчетПроГаз");	
		Если СтруктураСохранения <> Неопределено Тогда
			НормаРасходаГаза = СтруктураСохранения.ВыбранноеКоличествоОтчетПроГаз; 
		КонецЕсли;
		Стр.Параметры.НормаРасходаГаза  = НормаРасходаГаза; 
		Стр.Параметры.ВитратиВсього     = Окр(((Выборка.Влажность5 - Выборка.Влажность6) * Выборка.ФизическийВес5 * Стр.Параметры.НормаРасходаГаза) / 1000,2);
		
		ТабДокумент.Вывести(Стр);
		
		Дно = Макет.ПолучитьОбласть("Дно");
		
		Дно.Параметры.НачальникВТЛ      = Руководители.НачальникВТЛ;
		Дно.Параметры.Инженер           = Руководители.ГлавныйИнженер;
		Дно.Параметры.Мастер            = Выборка.ФизическоеЛицо;
		ТабДокумент.Вывести(Дно);		
		
		ТабДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
		ТабДокумент.АвтоМасштаб         = Истина;
		
	КонецЦикла;
	
	Возврат ТабДокумент;
			
КонецФункции
     
Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область ПрограммныйИнтерфейс

// Заполняет счета учета номенклатуры в табличной части документа
//
// Параметры:
// Объект - СправочникСсылка - объект контактной информации.
// ИмяТабличнойЧасти - имя табличной части.
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад, ОтражатьВБухгалтерскомУчете");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
		Объект.Номенклатура, ДанныеОбъекта);
	
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре);
	КонецЦикла;

КонецПроцедуры

// Заполняет сведения о номенклатуре в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - Строка - строка табличной части документа
//  СведенияОНоменклатуре - Структура - структура сведений о номенклатуре, либо структура счетов учета.
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре) Экспорт

	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчетаБУ") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;

	Если ДанныеОбъекта.ОтражатьВБухгалтерскомУчете Тогда
		
		Если ИНАГРО_Элеватор.ОпределитьПринадлежностьКонтрагента(СтрокаТабличнойЧасти.Владелец) Тогда
			СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаБУ;				
		Иначе
			СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаДоп;				
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СчетаУчета.НалоговоеНазначение) Тогда
			СтрокаТабличнойЧасти.НалоговоеНазначение = СчетаУчета.НалоговоеНазначение;
		КонецЕсли;
		
	Иначе
		
		СтрокаТабличнойЧасти.СчетУчетаБУ     = ПланыСчетов.Хозрасчетный.ПустаяСсылка();			
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;

	ВидДокумента = Неопределено; 

	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидДокумента");
	КонецЕсли;

	// Если документ копируется, то вид формы получаем из копируемого документа.
	Если НЕ ЗначениеЗаполнено(ВидДокумента) Тогда
		Если Параметры.Свойство("ЗначениеКопирования")
			И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ВидДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Параметры.ЗначениеКопирования, "ВидДокумента");
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВидДокумента) Тогда
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
			Если Параметры.ЗначенияЗаполнения.Свойство("ВидДокумента") Тогда
				ВидДокумента = Параметры.ЗначенияЗаполнения.ВидДокумента;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	СтандартнаяОбработка = Ложь;
	ФормыИНАГРО_Форма34Сводная = ПолучитьСоответствиеВидовДокументовФормам();
	ВыбраннаяФорма = ФормыИНАГРО_Форма34Сводная[ВидДокумента];
	Если ВыбраннаяФорма = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСоответствиеВидовДокументовФормам() Экспорт

	ФормыИНАГРО_Форма34Сводная = Новый Соответствие;
	
	ФормыИНАГРО_Форма34Сводная.Вставить(Перечисления.ИНАГРО_ВидыАктовОчисткиСушки.Плановый,       "ФормаДокументаОбщая");
	ФормыИНАГРО_Форма34Сводная.Вставить(Перечисления.ИНАГРО_ВидыАктовОчисткиСушки.Оздоровление,   "ФормаДокументаОбщая");
	ФормыИНАГРО_Форма34Сводная.Вставить(Перечисления.ИНАГРО_ВидыАктовОчисткиСушки.ФорсМажор,      "ФормаДокументаОбщая");
	ФормыИНАГРО_Форма34Сводная.Вставить(Перечисления.ИНАГРО_ВидыАктовОчисткиСушки.Индивидуальный, "ФормаДокументаОбщая");
		
		
	Возврат ФормыИНАГРО_Форма34Сводная;

КонецФункции 

Функция ПолучитьФиксированныйМассивВидовДокументов() Экспорт

	МассивВидовДокументов = Новый Массив;
	СписокВидовОпераций   = Новый СписокЗначений;
	
	ЗначенияПеречисления = Метаданные.Перечисления.ИНАГРО_ВидыАктовОчисткиСушки.ЗначенияПеречисления;
	Для Каждого ЗначениеПеречисления Из ЗначенияПеречисления Цикл
		ТекущийВидДокумента = Перечисления.ИНАГРО_ВидыАктовОчисткиСушки[ЗначениеПеречисления.Имя];
		МассивВидовДокументов.Добавить(ТекущийВидДокумента);
	КонецЦикла;
		
	Возврат Новый ФиксированныйМассив(МассивВидовДокументов);

КонецФункции

Функция ЗаполнитьСписокЗначенийПечатнойФормы(Ссылка) Экспорт
	
	СписокЗначенийПечатнойФормы = Новый СписокЗначений();
	СписокЗначенийПечатнойФормы.Добавить(Новый Структура ("Владелец", "Сводная"), НСтр("ru='Акт очистки - сушки (сводный)';uk='Акт очистки - сушки (зведений)'"));		
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец КАК Владелец,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиОчистку
		|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиОчистку
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПроводилиОчистку,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиСушку
		|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиСушку
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПроводилиСушку
		|ИЗ
		|	Документ.ИНАГРО_Форма34Сводная.РасчетПоВладельцам КАК ИНАГРО_Форма34СводнаяРасчетПоВладельцам
		|ГДЕ
		|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Владелец,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиОчистку
		|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиОчистку
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ИНАГРО_Форма34СводнаяРасчетПоВладельцам.ПроводилиСушку
		|				И ИНАГРО_Форма34СводнаяРасчетПоВладельцам.Ссылка.ПроводилиСушку
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ";	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);		

	ТаблицаРасчетов = Запрос.Выполнить().Выгрузить();		
	
	НомерСтроки = 1;
	Для Каждого СтрокаТаблицы Из ТаблицаРасчетов Цикл
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Владелец",         СтрокаТаблицы.Владелец);
		СтруктураПараметров.Вставить("НомерСтроки",      НомерСтроки);
		СтруктураПараметров.Вставить("ПроводилиОчистку", СтрокаТаблицы.ПроводилиОчистку);
		СтруктураПараметров.Вставить("ПроводилиСушку",   СтрокаТаблицы.ПроводилиСушку);
		СписокЗначенийПечатнойФормы.Добавить(СтруктураПараметров,"По " + СтрокаТаблицы.Владелец + " (" + НомерСтроки + ")");	
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
	Возврат СписокЗначенийПечатнойФормы;
		
КонецФункции

Процедура ЗаписатьВыбраннуюПечатнуюФорму(ВыбранныйЭлемент) Экспорт 
	
	СтруктураСохранения = Новый Структура("ВыбраннаяПечатнаяФорма", ВыбранныйЭлемент);		
	ХранилищеОбщихНастроек.Сохранить("ИНАГРО_Форма34Сводная_Форма34", , СтруктураСохранения);
	
КонецПроцедуры

Процедура ЗаписатьВыбранноеКоличество(РезультатЗакрытия, ИдентификаторКоманды) Экспорт 
	
	СтруктураСохранения = Новый Структура("ВыбранноеКоличество" + ИдентификаторКоманды, РезультатЗакрытия);		
	ХранилищеОбщихНастроек.Сохранить("ИНАГРО_Форма34Сводная_" + ИдентификаторКоманды, , СтруктураСохранения);
	
КонецПроцедуры

#КонецОбласти 

#КонецЕсли