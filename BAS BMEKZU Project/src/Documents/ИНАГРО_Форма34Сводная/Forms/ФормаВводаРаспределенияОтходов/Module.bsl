#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ПобочныйПродукт",  ПобочныйПродукт);
	Параметры.Свойство("Отходы1Категории", Отходы1Категории);
	Параметры.Свойство("Отходы2Категории", Отходы2Категории);
	
	Если ЗначениеЗаполнено(ПобочныйПродукт) Тогда
		Номенклатура = ПобочныйПродукт;
	ИначеЕсли ЗначениеЗаполнено(Отходы1Категории) Тогда
		Номенклатура = Отходы1Категории;
	ИначеЕсли ЗначениеЗаполнено(Отходы2Категории) Тогда
		Номенклатура = Отходы2Категории;
	КонецЕсли;
	
	АдресРасчетПоВладельцамВХранилище = "";
	
	Параметры.Свойство("АдресРасчетПоВладельцамВХранилище", АдресРасчетПоВладельцамВХранилище);
	
	Если АдресРасчетПоВладельцамВХранилище <> Неопределено Тогда  
		
		РасчетПоВладельцам = ПолучитьИзВременногоХранилища(АдресРасчетПоВладельцамВХранилище);
		
		ТаблицаЗначений = Новый ТаблицаЗначений;
		
		ТаблицаЗначений.Колонки.Добавить("Владелец");
		ТаблицаЗначений.Колонки.Добавить("ПроцентВыхода");
		ТаблицаЗначений.Колонки.Добавить("Вес");
		ТаблицаЗначений.Колонки.Добавить("ВесОтходов");
		
		Для Каждого ТекСтрРасчетПоВладельцам Из РасчетПоВладельцам Цикл
			стрТаблицаВладельцев = ТаблицаЗначений.Добавить();
			стрТаблицаВладельцев.Владелец = ТекСтрРасчетПоВладельцам.Владелец;
			стрТаблицаВладельцев.Вес      = ТекСтрРасчетПоВладельцам.ФизическийВес1;
		КонецЦикла;
		
		ТаблицаЗначений.Свернуть("Владелец, ПроцентВыхода", "Вес, ВесОтходов");
		
		ТаблицаВладельцев.Загрузить(ТаблицаЗначений);
		
	КонецЕсли; 	

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	СписокВыбора = Новый СписокЗначений;
	
	Если ЗначениеЗаполнено(ПобочныйПродукт) Тогда
		СписокВыбора.Добавить(ПобочныйПродукт);
	КонецЕсли;
	Если ЗначениеЗаполнено(Отходы1Категории) Тогда
		СписокВыбора.Добавить(Отходы1Категории);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Отходы2Категории) Тогда
		СписокВыбора.Добавить(Отходы2Категории);
	КонецЕсли;	
			
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("НоменклатураНачалоВыбораЗавершение", ЭтаФорма);

	ПоказатьВыборИзСписка(ОповещениеОЗакрытии, СписокВыбора, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
	Если РезультатЗакрытия <> Неопределено Тогда
		  Номенклатура = РезультатЗакрытия.Значение;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаВладельцев

&НаКлиенте
Процедура ТаблицаВладельцевПроцентВыходаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаВладельцев.ТекущиеДанные;
	
	ТаблицаВладельцевПроцентВыходаПриИзмененииЗавершение(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВладельцевВесОтходовПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаВладельцев.ТекущиеДанные;

	ТаблицаВладельцевВесОтходовПриИзмененииЗавершение(ТекущиеДанные);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьПроцентВсем(Команда)
	
	Процент = 0;
	
	Оповещение = Новый ОписаниеОповещения("УстановитьПроцентВсемЗавершение", ЭтотОбъект, Параметры);
	ПоказатьВводЧисла(Оповещение, Процент, Нстр("ru='Введите процент';uk='Введіть відсоток'"), 5, 2);  

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПроцентВсемЗавершение(Процент, ДополнительныеПараметры) Экспорт	
	
	Если Процент = 0 Тогда
		Возврат
	КонецЕсли; 	

	Для Каждого СтрокаТаблицы Из ТаблицаВладельцев Цикл
		СтрокаТаблицы.ПроцентВыхода = Процент;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПроцентНезаполненным(Команда)
	
	Процент = 0;
	
	Оповещение = Новый ОписаниеОповещения("УстановитьПроцентНезаполненнымЗавершение", ЭтотОбъект, Параметры);
	ПоказатьВводЧисла(Оповещение, Процент, Нстр("ru='Введите процент';uk='Введіть відсоток'"), 5, 2);  

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПроцентНезаполненнымЗавершение(Процент, ДополнительныеПараметры) Экспорт
	
	Если Процент = 0 Тогда
		Возврат
	КонецЕсли; 	

	Для Каждого СтрокаТаблицы Из ТаблицаВладельцев Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ПроцентВыхода) Тогда
			СтрокаТаблицы.ПроцентВыхода = Процент;
			ТаблицаВладельцевПроцентВыходаПриИзмененииЗавершение(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ОтходыНаРаспределение",        Номенклатура);
	СтруктураВозврата.Вставить("ВесОтходов",                   ВесОтходов);
	СтруктураВозврата.Вставить("АдресТаблицаВладельцевВХранилище", ПоместитьТаблицаВладельцевВХранилище());	
	
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ТаблицаВладельцевПроцентВыходаПриИзмененииЗавершение(СтрокаТаблицы)
	
	СтрокаТаблицы.ВесОтходов = Окр(СтрокаТаблицы.Вес * СтрокаТаблицы.ПроцентВыхода / 100, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВладельцевВесОтходовПриИзмененииЗавершение(СтрокаТаблицы)
	
	СтрокаТаблицы.ПроцентВыхода = Окр(СтрокаТаблицы.ВесОтходов * 100 / СтрокаТаблицы.Вес, 2);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьТаблицаВладельцевВХранилище()

	ТаблицаИсходящая = ТаблицаВладельцев.Выгрузить();

	Возврат ПоместитьВоВременноеХранилище(ТаблицаИсходящая, УникальныйИдентификатор);

КонецФункции

#КонецОбласти
