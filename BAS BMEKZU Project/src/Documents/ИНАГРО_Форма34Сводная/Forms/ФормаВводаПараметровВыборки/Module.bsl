#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
			
	Если Параметры.Свойство("ДанныеОбъекта") Тогда		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры.ДанныеОбъекта);		
	КонецЕсли;
	
	АдресРасчетПоВладельцамВХранилище = "";
	
	Параметры.Свойство("АдресРасчетПоВладельцамВХранилище", АдресРасчетПоВладельцамВХранилище);
	
	Если АдресРасчетПоВладельцамВХранилище <> Неопределено Тогда  
		
		РасчетПоВладельцам = ПолучитьИзВременногоХранилища(АдресРасчетПоВладельцамВХранилище);
		 				
		ТаблицаВладельцев.Загрузить(РасчетПоВладельцам);
		
	КонецЕсли; 
	
	Параметры.Свойство("Кнопка",                            Кнопка);
	Параметры.Свойство("РасчетПоВладельцамКоличество",      РасчетПоВладельцамКоличество);
	
	ПоказыватьПредварительныйПросмотр = Ложь;
	
	УстановитьСпискиВыбора();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ИНАГРО_ЭлеваторЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(Дата, Организация, Владелец, ДоговорКонтрагента, Новый Структура("ВидХранения, Урожай", ВидХранения, Урожай));
	
КонецПроцедуры

&НаКлиенте
Процедура ВлажностьВышеПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВлажностьНижеПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СорнаяПримесьВышеПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СорнаяПримесьНижеПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПредварительныйПросмотр(Команда)
	
	ПоказыватьПредварительныйПросмотр = НЕ ПоказыватьПредварительныйПросмотр;
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура Преобразовать(Команда)
	
	Если ПреобразоватьСписокВладельцевВСписокПродавцов()Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	СтруктураВозврата = Новый Структура;
	
	СтруктураВозврата.Вставить("ДанныеФормы",                       ПолучитьПараметрыВыборки());
	СтруктураВозврата.Вставить("Выборка",                           Выборка);
	СтруктураВозврата.Вставить("ПоказыватьПредварительныйПросмотр", ПоказыватьПредварительныйПросмотр);
	СтруктураВозврата.Вставить("Кнопка",                            Кнопка);
	СтруктураВозврата.Вставить("Очищать");	
	
	Если ПоказыватьПредварительныйПросмотр Тогда
		
		СтруктураВозврата.Вставить("АдресТаблицаВладельцевВХранилище", ПоместитьТаблицаВладельцевВХранилище());	
				
		Закрыть(СтруктураВозврата);
		
	Иначе
		
		Если РасчетПоВладельцамКоличество Тогда
			
			ТекстВопроса = НСтр("ru='Перед заполнением очистить список владельцев?';uk='Перед заповненням очистити список власників?'");
			
			ДополнительныеПараметры = Новый Структура("СтруктураВозврата", СтруктураВозврата); 

			Оповещение = Новый ОписаниеОповещения("ОКЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);	
			
		Иначе
			
			СтруктураВозврата.Очищать = Ложь;
			
			Закрыть(СтруктураВозврата);
			
		КонецЕсли;		
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОКЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда		
		СтруктураВозврата = ДополнительныеПараметры.СтруктураВозврата; 
		СтруктураВозврата.Очищать = Ложь;
		Закрыть(СтруктураВозврата);
		Возврат;
	КонецЕсли;	
	
	СтруктураВозврата = ДополнительныеПараметры.СтруктураВозврата; 
	СтруктураВозврата.Очищать = Истина;
	
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры  

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Элементы = Форма.Элементы;
	
	Элементы.ГруппаТаблицаВладельцев.Видимость = Форма.ПоказыватьПредварительныйПросмотр;
	
	Элементы.ПредварительныйПросмотр.Доступность = ?(Форма.ВидОперации = ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыОперацийФорма34Сводная.ОбратныйРасчет"), Истина, Ложь);
	
	Элементы.ПроцентВлажности1.Доступность     = Форма.ВлажностьВыше;
	Элементы.ПроцентВлажности2.Доступность     = Форма.ВлажностьНиже;
	Элементы.ПроцентСорнойПримеси1.Доступность = Форма.СорнаяПримесьВыше;
	Элементы.ПроцентСорнойПримеси2.Доступность = Форма.СорнаяПримесьНиже;
					
КонецПроцедуры

&НаСервере
Процедура УстановитьСпискиВыбора()
	
	Элементы.Выборка.СписокВыбора.Очистить();
	
	Если ВидОперации = Перечисления.ИНАГРО_ВидыОперацийФорма34Сводная.ПрямойРасчет Тогда
		
		Если НЕ ИспользоватьСистемуКонтроляКачестваПартийЗерна Тогда
			Элементы.Выборка.СписокВыбора.Добавить("ЗаполнитьФорму34ДаннымиАвтоВвоза", НСтр("ru='Заполнить Форму34 данными о ввозе автотранспортом';uk='Заповнити Форму34 данимі про ввезення автотранспортом'"));
			Элементы.Выборка.СписокВыбора.Добавить("ЗаполнитьФорму34ДаннымиЖДВвоза", НСтр("ru='Заполнить Форму34 данными о ввозе железнодорожным транспортом';uk='Заповнити Форму34 данимі про ввезення залізничним транспортом'"));
			Элементы.Выборка.СписокВыбора.Добавить("ЗаполнитьФорму34ДаннымиПеремещенийПоПриходу", НСтр("ru='Заполнить Форму34 данными о перемещении';uk='Заповнити Форму34 данимі про переміщення'"));
			Выборка = "ЗаполнитьФорму34ДаннымиАвтоВвоза";
		Иначе
			Элементы.Выборка.СписокВыбора.Добавить("ЗаполнитьФорму34ДаннымиПоКачествуЗернаДаннымиАвтоВвоза", НСтр("ru='Заполнить Форму34 данными о ввозе автотранспортом';uk='Заповнити Форму34 данимі про ввезення автотранспортом'"));
			Элементы.Выборка.СписокВыбора.Добавить("ЗаполнитьФорму34ДаннымиПоКачествуЗернаДаннымиЖДВвоза", НСтр("ru='Заполнить Форму34 данными о ввозе железнодорожным транспортом';uk='Заповнити Форму34 данимі про ввезення залізничним транспортом'"));				
			Выборка = "ЗаполнитьФорму34ДаннымиПоКачествуЗернаДаннымиАвтоВвоза";
		КонецЕсли; 		
		
	ИначеЕсли ВидОперации = Перечисления.ИНАГРО_ВидыОперацийФорма34Сводная.ОбратныйРасчет Тогда
		
		Элементы.Выборка.СписокВыбора.Добавить("ЗаполнитьФорму34ДаннымиАвтоВывоза", НСтр("ru='Заполнить Форму34 данными о вывозе автотранспортом';uk='Заповнити Форму34 данимі про вивезення автотранспортом'"));
		Элементы.Выборка.СписокВыбора.Добавить("ЗаполнитьФорму34ДаннымиЖДВывоза", НСтр("ru='Заполнить Форму34 данными о вывозе железнодорожным транспортом';uk='Заповнити Форму34 данимі про вивезення залізничним транспортом'"));
		Элементы.Выборка.СписокВыбора.Добавить("ЗаполнитьФорму34ДаннымиАвто_ЖДВывоза", НСтр("ru='Заполнить Форму34 данными о вывозе';uk='Заповнити Форму34 данимі про вивезення'"));
		Выборка = "ЗаполнитьФорму34ДаннымиАвтоВывоза";
		
	КонецЕсли;

	Элементы.СпособОтбораСушки.СписокВыбора.Очистить();
	
	Элементы.СпособОтбораСушки.СписокВыбора.Добавить(1, НСтр("ru='Сушка';uk='Сушіння'"));
	Элементы.СпособОтбораСушки.СписокВыбора.Добавить(2, НСтр("ru='Сушка активным вентилированием';uk='Сушіння активним вентилюванням'"));
	Элементы.СпособОтбораСушки.СписокВыбора.Добавить(3, НСтр("ru='Огненная сушка';uk='Вогняна сушка'"));
		
	СпособОтбораСушки = 1;
					
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыВыборки()

	ДанныеФормы = Новый Структура(
		"Дата, Организация, Владелец,
		|ДоговорКонтрагента, Склад, ВидХранения,
		|МестоХранения, Силос, Номенклатура,
		|Урожай, ДатаНачала, ДатаОкончания,
		|СпособОтбораСушки, ВлажностьВыше, ВлажностьНиже,
		|СорнаяПримесьВыше, СорнаяПримесьНиже, ПроцентВлажности1,
		|ПроцентВлажности2, ПроцентСорнойПримеси1, ПроцентСорнойПримеси2,
		|НеУчитыватьНаправлениеНаСушкуПриОтборе, НеУчитыватьНаправлениеНаОчисткуПриОтборе,
		|Влажность2, СорнаяПримесь2, ВидОперации
		|");
	ЗаполнитьЗначенияСвойств(ДанныеФормы, ЭтаФорма);
		
	Возврат ДанныеФормы;

КонецФункции

&НаСервере
Функция ПоместитьТаблицаВладельцевВХранилище()

	ТаблицаИсходящая = ТаблицаВладельцев.Выгрузить();

	Возврат ПоместитьВоВременноеХранилище(ТаблицаИсходящая, УникальныйИдентификатор);

КонецФункции

&НаКлиенте
Функция ПреобразоватьСписокВладельцевВСписокПродавцов()
	
	Возврат Ложь;
		
КонецФункции

#КонецОбласти