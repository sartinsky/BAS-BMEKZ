#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	Если Параметры.Свойство("ИзменитьВидДокумента") Тогда
		ИзменитьВидДокумента = Истина;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	СтрокаТаблицы = Элементы.СписокВидовДокументов.ТекущиеДанные;
	
	Если НЕ СтрокаТаблицы = Неопределено Тогда
		
		ОткрытьДокументВида(СтрокаТаблицы.Значение);
		
	КонецЕсли; 
		
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ЗначениеКопирования = Параметры.ЗначениеКопирования;
	ЗначенияЗаполнения  = Параметры.ЗначенияЗаполнения;
	
	Параметры.ЗначениеКопирования	= Неопределено;
	Параметры.ЗначенияЗаполнения	= Неопределено;
		
	ФормыДокумента   = Новый ФиксированноеСоответствие(
		Документы.ИНАГРО_Форма34Сводная.ПолучитьСоответствиеВидовДокументовФормам());
		
	ВидыДокументов = ПолучитьСписокВидовДокументов();
	Для Каждого ВидДокумента Из ВидыДокументов Цикл
		НоваяДокумент = СписокВидовДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяДокумент, ВидДокумента);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		ВыделенныйЭлементСписка = СписокВидовДокументов.НайтиПоЗначению(Объект.ВидДокумента);
		Если ВыделенныйЭлементСписка <> Неопределено Тогда
			Элементы.СписокВидовДокументов.ТекущаяСтрока = ВыделенныйЭлементСписка.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
 
&НаСервереБезКонтекста
Функция ПолучитьСписокВидовДокументов()

	СписокВидовДокументов = Новый СписокЗначений;
	
	ЗначенияПеречисления = Метаданные.Перечисления.ИНАГРО_ВидыАктовОчисткиСушки.ЗначенияПеречисления;
	
	Для Каждого ЗначениеПеречисления Из ЗначенияПеречисления Цикл
		ТекущийВидДокумента = Перечисления.ИНАГРО_ВидыАктовОчисткиСушки[ЗначениеПеречисления.Имя];
		СписокВидовДокументов.Добавить(ТекущийВидДокумента, Строка(ТекущийВидДокумента));
	КонецЦикла;
		
	Возврат СписокВидовДокументов;

КонецФункции

&НаКлиенте
Процедура СписокВидовДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтрокаТаблицы = СписокВидовДокументов.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ОткрытьДокументВида(СтрокаТаблицы.Значение);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументВида(ВыбранныйВидДокумента)
	
	ЗначенияЗаполнения.Вставить("ВидОперации",			ВыбранныйВидДокумента);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Ключ",                Параметры.Ключ);
	СтруктураПараметров.Вставить("ЗначениеКопирования", ЗначениеКопирования);
	СтруктураПараметров.Вставить("ЗначенияЗаполнения",  ЗначенияЗаполнения);
		
	Если ИзменитьВидДокумента И ВыбранныйВидДокумента <> Объект.ВидДокумента Тогда
		СтруктураПараметров.Вставить("ИзменитьВидДокумента", ИзменитьВидДокумента);
	КонецЕсли;
	
	Модифицированность = Ложь;
	Закрыть();
	
	ОткрытьФорму("Документ.ИНАГРО_Форма34Сводная.Форма." + ФормыДокумента[ВыбранныйВидДокумента], СтруктураПараметров, ВладелецФормы);
		
КонецПроцедуры

#КонецОбласти