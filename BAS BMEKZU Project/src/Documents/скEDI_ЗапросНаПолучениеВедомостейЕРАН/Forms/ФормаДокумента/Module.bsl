&НаКлиенте
Перем мПредставлениеЭлектронногоДокументаPDF;
&НаКлиенте
Перем мПредставлениеЭлектронногоДокументаXML;
//&НаКлиенте
//Перем мПараметрыДляСозданияЭлектронногоДокумента;


&НаСервере
Процедура ПрименитьВариантОтображения()
	ОтображатьPDF = Ложь;
	ОтображатьКартинку = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	скEDI_ОтображениеЭлектронныхДокументов.ОтображениеЭлектронныхДокументов,
	               |	ВЫБОР
	               |		КОГДА скEDI_ОтображениеЭлектронныхДокументов.Пользователь = &ТекПользователь
	               |			ТОГДА 1
	               |		ИНАЧЕ 2
	               |	КОНЕЦ КАК Порядок
	               |ИЗ
	               |	РегистрСведений.скEDI_ОтображениеЭлектронныхДокументов КАК скEDI_ОтображениеЭлектронныхДокументов
	               |ГДЕ
	               |	(скEDI_ОтображениеЭлектронныхДокументов.Пользователь = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	               |			ИЛИ скEDI_ОтображениеЭлектронныхДокументов.Пользователь = &ТекПользователь)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Порядок";
	Запрос.УстановитьПараметр("ТекПользователь", скEDI_НастройкиПодКонфигурацию.ПолучитьТекущегоПользователя());
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		Если ВыборкаРезультатаЗапроса.ОтображениеЭлектронныхДокументов = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОтображенияЭлектронныхДокументов.PDF") Тогда
			ОтображатьPDF = Истина;
		ИначеЕсли ВыборкаРезультатаЗапроса.ОтображениеЭлектронныхДокументов = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОтображенияЭлектронныхДокументов.Картинка") Тогда
			ОтображатьКартинку = Истина;
		КонецЕсли;
	Иначе
		ОтображатьКартинку = Истина;
	КонецЕсли;
	УстановитьВариантОтображения();
КонецПроцедуры

&НаСервере
Процедура УстановитьВариантОтображения()
	Если ОтображатьОшибку Тогда
		Элементы.ОтображениеОшибка.Видимость = Истина;
		Элементы.ГруппаОтображение.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.ГруппаОтображение.ТекущаяСтраница = Элементы.ОтображениеОшибка;
		Элементы.ОтображениеОшибка.Доступность = Истина;
		Элементы.ОтображениеPDF.Доступность = Ложь;
		Элементы.ОтображениеКартинки.Доступность = Ложь;
	ИначеЕсли ОтображатьPDF и ОтображатьКартинку Тогда
		Элементы.ГруппаОтображение.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
		Элементы.ГруппаОтображение.ТекущаяСтраница = Элементы.ОтображениеPDF;
		Элементы.ОтображениеPDF.Доступность = Истина;
		Элементы.ОтображениеКартинки.Доступность = Истина;
		Элементы.ОтображениеОшибка.Видимость = Ложь;
		Элементы.ОтображениеОшибка.Доступность = Ложь;
	Иначе
		Элементы.ГруппаОтображение.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.ОтображениеОшибка.Видимость = Ложь;
		Если ОтображатьPDF Тогда
			Элементы.ГруппаОтображение.ТекущаяСтраница = Элементы.ОтображениеPDF;
			Элементы.ОтображениеPDF.Доступность = Истина;
		Иначе
			Элементы.ОтображениеPDF.Доступность = Ложь;
		КонецЕсли;
		Если ОтображатьКартинку Тогда
			Элементы.ГруппаОтображение.ТекущаяСтраница = Элементы.ОтображениеКартинки;
			Элементы.ОтображениеКартинки.Доступность = Истина;
		Иначе
			Элементы.ОтображениеКартинки.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
	//Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
	//	//Если СостояниеЭлектронногоДокумента = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Создан") и ЗначениеЗаполнено(Документ1С) Тогда
	//		СформироватьДанныеЭлектронногоДокументаПоДокументу1С();
	//	//Иначе
	//		//СформироватьДанныеЭлектронногоДокументаПоЭлектронномуДокументу();
	//	//КонецЕсли;
	//	ПоказатьИзображениеЭлектронногоДокумента();
	//ИначеЕсли ЗначениеЗаполнено(Документ1С) Тогда
		СформироватьДанныеЭлектронногоДокументаПоДокументу1С();
		ПоказатьИзображениеЭлектронногоДокумента();
	//Иначе
	//	ОчиститьПолеHTMLДокумента();
	//КонецЕсли;
	//УстановитьДоступностьКнопокКомандФормы();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПолеHTMLДокумента()
	АдресФайлаСПредставлениемЭлектронногоДокумента = "";
	Элементы.АдресФайлаСПредставлениемЭлектронногоДокумента.Вид = ВидПоляФормы.ПолеВвода;
	Элементы.АдресФайлаСПредставлениемЭлектронногоДокумента.МногострочныйРежим = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьИзображениеЭлектронногоДокумента()
	ОчиститьПолеHTMLДокумента();
	Если ОтображатьPDF Тогда
		ПодключитьОбработчикОжидания("ПоказатьИзображениеЭлектронногоДокумента_ПослеОжидания", 0.2, Истина);
	КонецЕсли;
КонецПроцедуры // ОтобразитьИзображениеЭлектронногоДокумента()

&НаКлиенте
Процедура ПоказатьИзображениеЭлектронногоДокумента_ПослеОжидания()
	Если ЗначениеЗаполнено(мПредставлениеЭлектронногоДокументаPDF) Тогда
		СписокВременныхФайловКУдалению.Добавить(АдресВременногоФайлаДляОтображенияЭлектронногоДокумента);
		АдресВременногоФайлаДляОтображенияЭлектронногоДокумента = ПолучитьИмяВременногоФайла(".pdf");
		скEDI_ОбщегоНазначенияКлиент.СоздатьФайлИзСтрокиBase64(мПредставлениеЭлектронногоДокументаPDF, АдресВременногоФайлаДляОтображенияЭлектронногоДокумента);
		лМенеджерФайла = Новый Файл(АдресВременногоФайлаДляОтображенияЭлектронногоДокумента);
		Если лМенеджерФайла.Существует() Тогда
			Элементы.АдресФайлаСПредставлениемЭлектронногоДокумента.Вид = ВидПоляФормы.ПолеHTMLДокумента;
			АдресФайлаСПредставлениемЭлектронногоДокумента = АдресВременногоФайлаДляОтображенияЭлектронногоДокумента;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьДанныеЭлектронногоДокументаПоДокументу1С_НаСервере(ПредставлениеЭлектронногоДокументаXML, ПредставлениеЭлектронногоДокументаPDF)
	//Перем лСоответствиеСРеквизитамиЭлектронногоДокумента;	

	ПредставлениеЭлектронногоДокументаPDF     = Неопределено;
	ПредставлениеЭлектронногоДокументаXML     = Неопределено;
	//мПараметрыДляСозданияЭлектронногоДокумента = Неопределено;	
	ВерсияСодержанияЭлектронногоДокумента      = Неопределено;
	
	Если Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.Подписан")
	или  Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ОтправленВДФС")
	или  Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоКвитанциюОтДФС")
	или  Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС")
	или  Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоПодтверждениеОтДФС")
	или  Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтклонениеОтДФС")
	Тогда
		ТекОшибка = "";
		СодержаниеЭлектронногоДокумента = скEDI_ОбщегоНазначения.ПолучитьСодержаниеДополнительногоЭлектронногоДокументаДФС(Объект.Ссылка, ТипСодержимого, ТекОшибка);
		Если СодержаниеЭлектронногоДокумента = Неопределено Тогда
			ОтображатьОшибку = Истина;
			ОшибкаОтображения = ТекОшибка;
		Иначе
			ОтображатьОшибку = Ложь;
			ОшибкаОтображения = "";;
	
			ПредставлениеЭлектронногоДокументаXML = СодержаниеЭлектронногоДокумента.ТелоДокумента;
			Если ЗначениеЗаполнено(СодержаниеЭлектронногоДокумента.ИзображениеДокумента) Тогда  //?
				ПредставлениеЭлектронногоДокументаPDF = СодержаниеЭлектронногоДокумента.ИзображениеДокумента;
			Иначе
				Если ОтображатьPDF Тогда
					лпПараметрыФормированияPDF = Новый Структура;
					лпПараметрыФормированияPDF.Вставить("MedocBody", ПредставлениеЭлектронногоДокументаXML);
					ОтветEDIПровайдера = скEDI_КомандыEDIПровайдеру.ПолучитьРезультатКомандыEDIПровайдеру("ptn/print", лпПараметрыФормированияPDF, Ложь);
					ПредставлениеЭлектронногоДокументаPDF = ОтветEDIПровайдера.Pdf;
				Иначе
					ПредставлениеЭлектронногоДокументаPDF = "";
				КонецЕсли;
			КонецЕсли;
			
			мПредставлениеЭлектронногоДокументаPDF = ПредставлениеЭлектронногоДокументаPDF;
			мПредставлениеЭлектронногоДокументаXML = ПредставлениеЭлектронногоДокументаXML;
			Если ОтображатьКартинку Тогда
				ПечатнаяФормаЭлектронногоДокумента = Новый ТабличныйДокумент;
				Если ЗначениеЗаполнено(мПредставлениеЭлектронногоДокументаXML) Тогда
					лпПараметрыВыводаФаксимиле = Новый Структура;
					лпПараметрыВыводаФаксимиле.Вставить("MedocBody", мПредставлениеЭлектронногоДокументаXML);
					ОтветEDIПровайдера = скEDI_КомандыEDIПровайдеру.ПолучитьРезультатКомандыEDIПровайдеру("ptn/draw", лпПараметрыВыводаФаксимиле, Ложь);
					ВывестиРезультатPtnDrawНаПечатнуюФорму(ОтветEDIПровайдера, ПечатнаяФормаЭлектронногоДокумента);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ИмяФайла = "";
		ПредставлениеЭлектронногоДокументаXML = "";
		ПредставлениеЭлектронногоДокументаPDF = "";
		СообщениеОбОшибке = "";
		//Если Документы.скEDI_ЗапросНаПолучениеВедомостейЕРАН.СформироватьЭлектронныйДокумент(Объект.Ссылка, Истина, ПредставлениеЭлектронногоДокументаXML, ПредставлениеЭлектронногоДокументаPDF, ИмяФайла) Тогда
		Если Документы.скEDI_ЗапросНаПолучениеВедомостейЕРАН.СформироватьЭлектронныйДокумент(Объект, Истина, ПредставлениеЭлектронногоДокументаXML, ПредставлениеЭлектронногоДокументаPDF, ИмяФайла, СообщениеОбОшибке) Тогда
			мПредставлениеЭлектронногоДокументаPDF = ПредставлениеЭлектронногоДокументаPDF;
			мПредставлениеЭлектронногоДокументаXML = ПредставлениеЭлектронногоДокументаXML;
			
			Если ОтображатьКартинку Тогда
				ПечатнаяФормаЭлектронногоДокумента = Новый ТабличныйДокумент;
				Если ЗначениеЗаполнено(мПредставлениеЭлектронногоДокументаXML) Тогда
					лпПараметрыВыводаФаксимиле = Новый Структура;
					лпПараметрыВыводаФаксимиле.Вставить("MedocBody", мПредставлениеЭлектронногоДокументаXML);
					ОтветEDIПровайдера = скEDI_КомандыEDIПровайдеру.ПолучитьРезультатКомандыEDIПровайдеру("ptn/draw", лпПараметрыВыводаФаксимиле, Ложь);
					ВывестиРезультатPtnDrawНаПечатнуюФорму(ОтветEDIПровайдера, ПечатнаяФормаЭлектронногоДокумента);
				КонецЕсли;
			КонецЕсли;
			ОтображатьОшибку = Ложь;
			ОшибкаОтображения = "";
		Иначе
			ОтображатьОшибку = Истина;
			ОшибкаОтображения = СообщениеОбОшибке;
		КонецЕсли;
	КонецЕсли;
	УстановитьВариантОтображения();
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДанныеЭлектронногоДокументаПоДокументу1С()
	СформироватьДанныеЭлектронногоДокументаПоДокументу1С_НаСервере(мПредставлениеЭлектронногоДокументаXML, мПредставлениеЭлектронногоДокументаPDF)
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	лОрганизацияEDI = Неопределено;
	Если Параметры.ЗначенияЗаполнения.Свойство("ОрганизацияEDI", лОрганизацияEDI) Тогда
		Объект.ОрганизацияEDI = лОрганизацияEDI;
		Объект.Организация = ПолучитьОрганизацию1СНаСервере(Объект.ОрганизацияEDI);
	КонецЕсли;
	
	лСписокДокументов = Неопределено;
	Если Параметры.ЗначенияЗаполнения.Свойство("СписокДокументов", лСписокДокументов) Тогда
		РезультатыФункцииПечатьДокумента = Неопределено;
		Параметры.ЗначенияЗаполнения.Свойство("РезультатыФункцииПечатьДокумента", РезультатыФункцииПечатьДокумента);
		
		Объект.ПоСписку = Истина;
		
		Для Каждого СтрокаСпискаДокументов Из лСписокДокументов Цикл
			Если СтрокаСпискаДокументов.ВидЭлектронногоДокумента.ТипДокумента = ПредопределенноеЗначение("Перечисление.скEDI_ТипыЭлектронныхДокументов.НалоговаяНакладная") Тогда
				ВидДокумента = "ПН";
			ИначеЕсли СтрокаСпискаДокументов.ВидЭлектронногоДокумента.ТипДокумента = ПредопределенноеЗначение("Перечисление.скEDI_ТипыЭлектронныхДокументов.Приложение2КНалоговойНакладной") Тогда
				ВидДокумента = "РК";
			Иначе
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаСпискаДокументов.ЭлектронныйДокумент) Тогда
				НоваяСтрокаСписка = Объект.Список.Добавить();
				НоваяСтрокаСписка.НомерДокумента = СтрокаСпискаДокументов.ЭлектронныйДокумент.НомерДокумента;
				НоваяСтрокаСписка.Филиал = СтрокаСпискаДокументов.ЭлектронныйДокумент.КодФилиалаПродавца;
				НоваяСтрокаСписка.ДатаДокумента = СтрокаСпискаДокументов.ЭлектронныйДокумент.ДатаДокумента;
				НоваяСтрокаСписка.ВидДокумента = ВидДокумента;
				НоваяСтрокаСписка.ИННПродавца = СтрокаСпискаДокументов.ЭлектронныйДокумент.ИННПродавца;
			ИначеЕсли СтрокаСпискаДокументов.ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Исходящий") Тогда
				ДанныеФункцииПечатьДокумента = Неопределено;
				Если РезультатыФункцииПечатьДокумента <> Неопределено Тогда
					ХЗДанныеФункцииПечатьДокумента = РезультатыФункцииПечатьДокумента.Получить(СтрокаСпискаДокументов.Документ1С);
					Если ХЗДанныеФункцииПечатьДокумента <> Неопределено Тогда
						ДанныеФункцииПечатьДокумента = ХЗДанныеФункцииПечатьДокумента.Получить();
					КонецЕсли;
				КонецЕсли;
				Если ДанныеФункцииПечатьДокумента = Неопределено Тогда
					ДанныеФункцииПечатьДокумента = скEDI_НастройкиПодКонфигурацию.ПолучитьРезультатФункцииПечатьДокумента(ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Исходящий"), СтрокаСпискаДокументов.ВидЭлектронногоДокумента, СтрокаСпискаДокументов.Документ1С);
				КонецЕсли;
				Если ДанныеФункцииПечатьДокумента = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрокаСписка = Объект.Список.Добавить();
				НоваяСтрокаСписка.НомерДокумента = СокрЛП(ДанныеФункцииПечатьДокумента.HNUM);
				НоваяСтрокаСписка.Филиал = СокрЛП(ДанныеФункцииПечатьДокумента.HNUM2);
				НоваяСтрокаСписка.ДатаДокумента = ДанныеФункцииПечатьДокумента.HFILL;
				НоваяСтрокаСписка.ВидДокумента = ВидДокумента;
				НоваяСтрокаСписка.ИННПродавца = СокрЛП(ДанныеФункцииПечатьДокумента.HKSEL);
			Иначе	
				Продолжить;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПрименитьВариантОтображения();
КонецПроцедуры

&НаКлиентеНаСерверебезКонтекста
Процедура ВывестиРезультатPtnDrawНаПечатнуюФорму(ОтветEDIПровайдера, ПечатнаяФорма)
	Если ЗначениеЗаполнено(ОтветEDIПровайдера.Message) Тогда
		Сообщить(ОтветEDIПровайдера.Message);
	КонецЕсли;
	МассивСтрокBase64_ДополненаФаксимиле = Неопределено;
	СтрокаBase64_ДополненаФаксимиле = "";	
	Если ОтветEDIПровайдера.Свойство("Images", МассивСтрокBase64_ДополненаФаксимиле) Тогда
		Если ТипЗнч(МассивСтрокBase64_ДополненаФаксимиле) = Тип("Массив") Тогда
			СтрНачало = 1;
			ВысотаСтраницы = 67;
			ЭтоПерваяСтраница = Истина;
			Для Каждого СтрокаBase64_ДополненаФаксимиле Из МассивСтрокBase64_ДополненаФаксимиле Цикл
				Картинка = Новый Картинка(Base64Значение(СтрокаBase64_ДополненаФаксимиле));
				Рисунок = ПечатнаяФорма.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
				Рисунок.РазмерКартинки = РазмерКартинки.АвтоРазмер;
				Рисунок.Картинка = Картинка;
				Рисунок.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
				
				Если ЭтоПерваяСтраница Тогда
					ЭтоПерваяСтраница = Ложь;
				Иначе
					ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				СтрОкончание = СтрНачало + ВысотаСтраницы - 1;
				Рисунок.Расположить(ПечатнаяФорма.Область("R" + Формат(СтрНачало, "ЧГ=0") + "C1:R" + Формат(СтрОкончание, "ЧГ=0") + "C11"));
				СтрНачало = СтрОкончание + 1;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ОтветEDIПровайдера.Свойство("Image", СтрокаBase64_ДополненаФаксимиле) Тогда
		Если ЗначениеЗаполнено(СтрокаBase64_ДополненаФаксимиле) Тогда
			Картинка = Новый Картинка(Base64Значение(СтрокаBase64_ДополненаФаксимиле));
			Рисунок = ПечатнаяФорма.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
			Рисунок.РазмерКартинки = РазмерКартинки.АвтоРазмер;
			Рисунок.Картинка = Картинка;
			Рисунок.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
			Рисунок.Расположить(ПечатнаяФорма.Область("R1C1:R67C11"));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОрганизацию1СНаСервере(ОрганизацияEDI)
	Возврат ОрганизацияEDI.Организация1С;
КонецФункции

&НаКлиенте
Процедура ПрименитьСостояниеЭлектронногоДокумента()
	Если Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПустаяСсылка")
	или  Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.Создан")
	Тогда
		Элементы.ФормаПодписать.Доступность = Истина;
		Элементы.ФормаПодписатьИОтправить.Доступность = Истина;
	ИначеЕсли Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.Подписан") Тогда
		Элементы.ФормаПодписать.Доступность = Ложь;
		Элементы.ФормаПодписатьИОтправить.Доступность = Истина;
	Иначе
		Элементы.ФормаПодписать.Доступность = Ложь;
		Элементы.ФормаПодписатьИОтправить.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС") Тогда
		ТипСодержимого = ПредопределенноеЗначение("Перечисление.скEDI_ТипыСодержимогоДополнительныхЭлектронныхДокуметовДФС.Ответ");
		Элементы.ТипСодержимого.ТолькоПросмотр = Ложь;
	Иначе
		ТипСодержимого = ПредопределенноеЗначение("Перечисление.скEDI_ТипыСодержимогоДополнительныхЭлектронныхДокуметовДФС.Запрос");
		Элементы.ТипСодержимого.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.Подписан")
	или  Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ОтправленВДФС")
	или  Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоКвитанциюОтДФС")
	или  Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС")
	или  Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоПодтверждениеОтДФС")
	или  Объект.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтклонениеОтДФС")
		Тогда
		
		Элементы.Организация.ТолькоПросмотр = Истина;
		Элементы.ОрганизацияEDI.ТолькоПросмотр = Истина;
		Элементы.Дата.ТолькоПросмотр = Истина;
		Элементы.Номер.ТолькоПросмотр = Истина;
		Элементы.ДокументыПоФормеП.ТолькоПросмотр = Истина;
		Элементы.ДокументыПоФормеС.ТолькоПросмотр = Истина;
		Элементы.ДокументыНаДату.ТолькоПросмотр = Истина;
		//Элементы.КтоОформилЗапрос.ТолькоПросмотр = Истина;
		Элементы.Документы.ТолькоПросмотр = Истина;
		Элементы.ДокументыВыданые.ТолькоПросмотр = Истина;
		Элементы.ДокументыПолученые.ТолькоПросмотр = Истина;
		Элементы.ДокументыПервыйЭкземпляр.ТолькоПросмотр = Истина;
		Элементы.ДокументыВторойЭкземпляр.ТолькоПросмотр = Истина;
		Элементы.ИнформацияПоГлавномуПредприятию.ТолькоПросмотр = Истина;
		Элементы.ИнформацияПоГлавномуПредприятиюПокупатель.ТолькоПросмотр = Истина;
		Элементы.ИнформацияТолькоПоФилиалу.ТолькоПросмотр = Истина;
		Элементы.Филиал.ТолькоПросмотр = Истина;
		Элементы.ИнформацияТолькоПоФилиалуПокупатель.ТолькоПросмотр = Истина;
		Элементы.ФилиалПокупатель.ТолькоПросмотр = Истина;
		Элементы.ПоСписку.ТолькоПросмотр = Истина;
		Элементы.ИмпортДокументаСКвитанцией.ТолькоПросмотр = Истина;
		Элементы.Список.ТолькоПросмотр = Истина;
	Иначе
		Элементы.Организация.ТолькоПросмотр = Ложь;
		Элементы.ОрганизацияEDI.ТолькоПросмотр = Ложь;
		Элементы.Дата.ТолькоПросмотр = Ложь;
		Элементы.Номер.ТолькоПросмотр = Ложь;
		Элементы.ДокументыПоФормеП.ТолькоПросмотр = Ложь;
		Элементы.ДокументыПоФормеС.ТолькоПросмотр = Ложь;
		Элементы.ДокументыНаДату.ТолькоПросмотр = Ложь;
		//Элементы.КтоОформилЗапрос.ТолькоПросмотр = Ложь;
		Элементы.Документы.ТолькоПросмотр = Ложь;
		Элементы.ДокументыВыданые.ТолькоПросмотр = Ложь;
		Элементы.ДокументыПолученые.ТолькоПросмотр = Ложь;
		Элементы.ДокументыПервыйЭкземпляр.ТолькоПросмотр = Ложь;
		Элементы.ДокументыВторойЭкземпляр.ТолькоПросмотр = Ложь;
		Элементы.ИнформацияТолькоПоФилиалу.ТолькоПросмотр = Ложь;
		Элементы.ИнформацияПоГлавномуПредприятию.ТолькоПросмотр = Ложь;
		Элементы.ИнформацияПоГлавномуПредприятиюПокупатель.ТолькоПросмотр = Ложь;
		Элементы.Филиал.ТолькоПросмотр = Ложь;
		Элементы.ИнформацияТолькоПоФилиалуПокупатель.ТолькоПросмотр = Ложь;
		Элементы.ФилиалПокупатель.ТолькоПросмотр = Ложь;
		Элементы.ПоСписку.ТолькоПросмотр = Ложь;
		Элементы.ИмпортДокументаСКвитанцией.ТолькоПросмотр = Ложь;
		Элементы.Список.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПрименитьСостояниеЭлектронногоДокумента();
КонецПроцедуры

&НаКлиенте
Процедура Подписать(Команда)
	ИнициализироватьПодписьИОтправкуЭлектронныхДокументовВДФС(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьИОтправить(Команда)
	ИнициализироватьПодписьИОтправкуЭлектронныхДокументовВДФС(Истина);
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокПодписантовДляЭлектронногоДокументаНаСервере(ВыполняемыеОперации, ОшибкаПолученияПодписей)
	Возврат Документы.скEDI_ЗапросНаПолучениеВедомостейЕРАН.ПолучитьСписокПодписантовДляЭлектронногоДокумента(ВыполняемыеОперации, Объект.Ссылка, ОшибкаПолученияПодписей);
КонецФункции

&НаСервере
Функция ОбработатьЭлектронныйДокументНаСервере(ВыполняемыеОперации, ТаблицаНеобходимыхПодписей, ТаблицаНеобходимыхПодписейШифрования)
	ТаблицаНастроекПодписей = ТаблицаНеобходимыхПодписей;
	ТаблицаНастроекПодписей = ?(ТипЗнч(ТаблицаНастроекПодписей) = Тип("ДанныеФормыКоллекция"), ДанныеФормыВЗначение(ТаблицаНастроекПодписей, Тип("ТаблицаЗначений")), ТаблицаНастроекПодписей);
	ТаблицаНастроекПодписейШифрования = ТаблицаНеобходимыхПодписейШифрования;
	ТаблицаНастроекПодписейШифрования = ?(ТипЗнч(ТаблицаНастроекПодписейШифрования) = Тип("ДанныеФормыКоллекция"), ДанныеФормыВЗначение(ТаблицаНастроекПодписейШифрования, Тип("ТаблицаЗначений")), ТаблицаНастроекПодписейШифрования);
	//Возврат Документы.скEDI_ЗапросНаПолучениеВедомостейЕРАН.ОбработатьЭлектронныйДокумент_Ссылка(Объект.Ссылка, ВыполняемыеОперации, ТаблицаНеобходимыхПодписей, ТаблицаНеобходимыхПодписейШифрования);
	Возврат Документы.скEDI_ЗапросНаПолучениеВедомостейЕРАН.ОбработатьЭлектронныйДокумент_Ссылка(Объект.Ссылка, ВыполняемыеОперации, ТаблицаНастроекПодписей, ТаблицаНастроекПодписейШифрования);
КонецФункции

&НаКлиенте
Процедура ИнициализироватьПодписьИОтправкуЭлектронныхДокументовВДФС(Отправлять)
	Если Модифицированность или НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		////ПоказатьВопрос
		//Ответ = Вопрос("Элемент еще не записан. Записать?", РежимДиалогаВопрос.ОКОтмена);

		//Если Ответ = КодВозвратаДиалога.ОК Тогда
			Отказ = не Записать();
		//Иначе
		//	Отказ = Истина;
		//КонецЕсли;
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ВерсияМассиваДанныхПоДокументам = Новый УникальныйИдентификатор;
	
	ВыполняемыеОперации = Новый Массив;
	ВыполняемыеОперации.Добавить("Подпись");
	
	Если Отправлять Тогда  
		ВыполняемыеОперации.Добавить("ОтправкаВДФС");
	КонецЕсли;
	
	ОшибкаПолученияПодписей = "";
	//Подписанты = Документы.скEDI_ЗапросНаПолучениеВедомостейЕРАН.ПолучитьСписокПодписантовДляЭлектронногоДокумента(ВыполняемыеОперации, Объект.Ссылка, ОшибкаПолученияПодписей);
	Подписанты = ПолучитьСписокПодписантовДляЭлектронногоДокументаНаСервере(ВыполняемыеОперации, ОшибкаПолученияПодписей);
	Если ЗначениеЗаполнено(ОшибкаПолученияПодписей) Тогда
		Сообщить(ОшибкаПолученияПодписей);
		Возврат;
	КонецЕсли;
	
	лПараметрыФормыНастройкиПодписейЭлектронныхДокументов = Новый Структура("ВерсияМассиваДанныхПоДокументам,ВыполняемыеОперации,Организация,Подписанты", ВерсияМассиваДанныхПоДокументам, ВыполняемыеОперации, Объект.ОрганизацияEDI, Подписанты);
	Если скEDI_ОбщегоНазначения.ЭтоПлатформа82() Тогда		
		лФормаНастройкиПараметровПодписиДокументов = ПолучитьФорму("ОбщаяФорма.скEDI_ФормаНастройкиПодписейЭлектронныхДокументов", лПараметрыФормыНастройкиПодписейЭлектронныхДокументов, ЭтаФорма);
		ВыполнитьОперацииСЭлектроннымДокументом(лФормаНастройкиПараметровПодписиДокументов.ОткрытьМодально());
	Иначе
		скEDI_ОткрытиеФормБезМодальности.ОткрытьФормуНастройкиПараметровПодписиДокументов(лПараметрыФормыНастройкиПодписейЭлектронныхДокументов, ЭтаФорма, "ВыполнитьОперацииСЭлектроннымДокументом");
	КонецЕсли;
КонецПроцедуры // ИнициализироватьПодписьЭлектронногоДокумента()

&НаКлиенте
Процедура ВыполнитьОперацииСЭлектроннымДокументом(ПараметрыОпераций, ДополнительныеПараметрыОпераций = Неопределено) Экспорт
	Если ПараметрыОпераций <> Неопределено Тогда
		Если ПараметрыОпераций.ВерсияМассиваДанныхПоДокументам = ВерсияМассиваДанныхПоДокументам Тогда
			//Результат = Документы.скEDI_ЗапросНаПолучениеВедомостейЕРАН.ОбработатьЭлектронныйДокумент_Ссылка(Объект.Ссылка, ПараметрыОпераций.ВыполняемыеОперации, ПараметрыОпераций.ТаблицаНеобходимыхПодписей, ПараметрыОпераций.ТаблицаНеобходимыхПодписейШифрования);
			Результат = ОбработатьЭлектронныйДокументНаСервере(ПараметрыОпераций.ВыполняемыеОперации, ПараметрыОпераций.ТаблицаНеобходимыхПодписей, ПараметрыОпераций.ТаблицаНеобходимыхПодписейШифрования);
			Прочитать();
			ПрименитьСостояниеЭлектронногоДокумента();
			Если ЗначениеЗаполнено(Результат) Тогда 
				скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат);	
				//ПоказатьПредупреждение(, Результат, 30);//, НСтр("ru = 'Результат проверки'; uk = 'Результат перевірки'"));
			КонецЕсли;
			Оповестить("скEDI_НеобходимоОбновитьСписокДополнительныхЭлектронныхДокументовДФС", Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияEDIПриИзменении(Элемент)
	Объект.Организация = ПолучитьОрганизацию1СНаСервере(Объект.ОрганизацияEDI);
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПоФормеППриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПоФормеСПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПерваяКопияПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ДокументыВтораяКопияПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ДокументыНаДатуПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ДокументыВыданыеПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПолученыеПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияТолькоПоФилиалуПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ФилиалПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ПоСпискуПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура СписокПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура СписокПослеУдаления(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ИмпортДокументаСКвитанциейПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура КтоОформилЗапросПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ТипСодержимогоПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПрименитьСостояниеЭлектронногоДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияПоГлавномуПредприятиюПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияПоГлавномуПредприятиюПокупательПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияТолькоПоФилиалуПокупательПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры

&НаКлиенте
Процедура ФилиалПокупательПриИзменении(Элемент)
	СформироватьДанныеЭлектронногоДокументаИПоказатьИзображение();
КонецПроцедуры


