#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПроцедурыИФункцииПечати
	
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Команда печати Формы П6 от 09.10.1995
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "П6_1995";
	КомандаПечати.Представление = НСтр("ru='Форма П6';uk='Форма П6'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// Команда печати Формы П3 от 05.12.2008
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "П3_2008";
	КомандаПечати.Представление = НСтр("ru='Форма П3';uk='Форма П3'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// Команда печати Средняя
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Средняя";
	КомандаПечати.Представление = НСтр("ru='Расчет средней';uk='Розрахунок середньої'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Начисление отпуска работникам организаций""';uk='Реєстр документів ""Нарахування відпустки робітникам організацій""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
		// Форма П6
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "П6_1995")  Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "П6_1995", НСтр("ru='Форма П6';uk='Форма П6'"), 
		ПечатьП6(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.ПФ_MXL_П6_от_09_10_1995", ,Истина);
		
	КонецЕсли; 
	
	// Форма П3
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "П3_2008")  Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "П3_2008", НСтр("ru='Форма П3';uk='Форма П3'"), 
		ПечатьП3(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.ПФ_MXL_П3_от_05_12_2008", ,Истина);
		
	КонецЕсли; 	

		// Средняя
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Средняя")  Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Средняя", НСтр("ru='Расчет средней';uk='Розрахунок середньої'"), 
		ПечатьСредняя(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.ПФ_MXL_Средняя", ,Истина);
		
	КонецЕсли; 	
	
КонецПроцедуры

// Формирования запроса для печати формы П3
Функция СформироватьЗапросДляПечатиП3(Режим, Ссылка)
		
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("Руководитель",	 Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	Запрос.УстановитьПараметр("ДатаДокумента",	 Ссылка.Дата);
	Запрос.УстановитьПараметр("Сотрудник", Ссылка.Сотрудник);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("ПустаяДата",		 '00010101');
	
	Если Режим = "ПоРеквизитамДокумента" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Ссылка,
		|	ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Дата,
		|	ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Номер,
		|	ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Организация.НаименованиеПолное КАК НазваниеОрганизации,
		|	ВЫБОР
		|		КОГДА ФИОФизЛицСрезПоследних.ФизическоеЛицо ЕСТЬ NULL
		|			ТОГДА ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование
		|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР
		|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
		|					ТОГДА "" "" + ФИОФизЛицСрезПоследних.Имя
		|				ИНАЧЕ """"
		|			КОНЕЦ + ВЫБОР
		|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
		|					ТОГДА "" "" + ФИОФизЛицСрезПоследних.Отчество
		|				ИНАЧЕ """"
		|			КОНЕЦ
		|	КОНЕЦ КАК ФИОРуководителя
		|ИЗ
		|	Документ.ИНАГРО_НачислениеОтпускаРаботникамОрганизаций КАК ИНАГРО_НачислениеОтпускаРаботникамОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ) КАК ОтветственныеЛицаОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследних
		|			ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизическоеЛицо
		|		ПО (ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо = &Руководитель)
		|			И ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница
		|ГДЕ
		|	ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Ссылка = &ТекущийДокумент";
		
	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_РаботникиОрганизацийСрезПоследних.Сотрудник.ИНАГРО_ТабельныйНомер КАК ТабельныйНомер,
		|	ИНАГРО_РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации,
		|	ИНАГРО_РаботникиОрганизацийСрезПоследних.Должность,
		|	ИНАГРО_РаботникиОрганизацийСрезПоследних.Сотрудник
		|ПОМЕСТИТЬ ДанныеСотрудник
		|ИЗ
		|	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(
		|			&ДатаДокумента,
		|			Организация = &Организация
		|				И Сотрудник = &Сотрудник) КАК ИНАГРО_РаботникиОрганизацийСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА ФИОФизЛиц.Фамилия ЕСТЬ NULL
		|			ТОГДА Отпуска.Ссылка.Сотрудник.ФизическоеЛицо.Наименование
		|		ИНАЧЕ ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество
		|	КОНЕЦ КАК Работник,
		|	Отпуска.ВидРасчета,
		|	Отпуска.ДатаНачала КАК ДатаНачала,
		|	Отпуска.ДатаОкончания КАК ДатаОкончания,
		|	ДанныеСотрудник.ТабельныйНомер КАК ТабельныйНомер,
		|	ДанныеСотрудник.ПодразделениеОрганизации КАК Подразделение,
		|	ДанныеСотрудник.Должность
		|ИЗ
		|	Документ.ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Отпуска КАК Отпуска
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ФизическоеЛицо = &Сотрудник) КАК ФИОФизЛиц
		|		ПО Отпуска.Ссылка.Сотрудник.ФизическоеЛицо = ФИОФизЛиц.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеСотрудник КАК ДанныеСотрудник
		|		ПО Отпуска.Ссылка.Сотрудник = ДанныеСотрудник.Сотрудник
		|ГДЕ
		|	Отпуска.Ссылка = &ТекущийДокумент";
		
	Иначе
		Возврат Неопределено
	КонецЕсли;
	
	Возврат Запрос.Выполнить();

КонецФункции

// Формирования запроса для печати формы П6
Функция СформироватьЗапросДляПечатиП6(Режим, Ссылка)
		
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("Руководитель",	 Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	Запрос.УстановитьПараметр("ДатаДокумента",	 Ссылка.Дата);
	Запрос.УстановитьПараметр("Сотрудник", Ссылка.Сотрудник);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("ПустаяДата",		 '00010101');
	
	Если Режим = "ПоРеквизитамДокумента" Тогда
		
		Запрос.Текст =
		
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Ссылка,
		|	ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Дата,
		|	ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Номер,
		|	ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Организация.НаименованиеПолное КАК НазваниеОрганизации
		|ИЗ
		|	Документ.ИНАГРО_НачислениеОтпускаРаботникамОрганизаций КАК ИНАГРО_НачислениеОтпускаРаботникамОрганизаций
		|ГДЕ
		|	ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Ссылка = &ТекущийДокумент";
		
	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА ФИОФизЛиц.Фамилия ЕСТЬ NULL
		|			ТОГДА Отпуска.Ссылка.Сотрудник.ФизическоеЛицо.Наименование
		|		ИНАЧЕ ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество
		|	КОНЕЦ КАК Работник,
		|	ДанныеОРаботникахОрганизации.ПодразделениеОрганизации.Наименование КАК Подразделение,
		|	ДанныеОРаботникахОрганизации.Должность.Наименование КАК Должность,
		|	ДанныеОРаботникахОрганизации.Сотрудник.ИНАГРО_ТабельныйНомер КАК ТабельныйНомер,
		|	Отпуска.ВидРасчета,
		|	Отпуска.ДатаНачала КАК ДатаНачала,
		|	Отпуска.ДатаОкончания КАК ДатаОкончания
		|ИЗ
		|	Документ.ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Отпуска КАК Отпуска
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ФизическоеЛицо = &Сотрудник) КАК ФИОФизЛиц
		|		ПО Отпуска.Ссылка.Сотрудник.ФизическоеЛицо = ФИОФизЛиц.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(
		|				&ДатаДокумента,
		|				Сотрудник = &Сотрудник
		|					И Организация = &Организация) КАК ДанныеОРаботникахОрганизации
		|		ПО Отпуска.Ссылка.Сотрудник = ДанныеОРаботникахОрганизации.Сотрудник
		|ГДЕ
		|	Отпуска.Ссылка = &ТекущийДокумент";
		
	Иначе
		Возврат Неопределено
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
		
КонецФункции

// Печать формы П6
Функция ПечатьП6(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеОтпускаРаботникамОрганизаций_П6";
		
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.ПФ_MXL_П6_от_09_10_1995");
		
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		// получаем данные для печати
		ВыборкаДляШапки = СформироватьЗапросДляПечатиП6("ПоРеквизитамДокумента", Ссылка).Выбрать();
		ВыборкаДляШапки.Следующий();
		ВыборкаРаботники = СформироватьЗапросДляПечатиП6("ПоТабличнойЧастиДокумента", Ссылка).Выбрать();
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация, ССылка.Дата);
			
		ОбластьМакета = Макет.ПолучитьОбласть("Форма");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляШапки);
		ОбластьМакета.Параметры.НазваниеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		ОбластьМакета.Параметры.ЕДРПОУ = СведенияОбОрганизации.КодПоЕДРПОУ;
		
		ЕжегодныйДней = 0;
		ДополнительныйДней = 0;
		ВсегоНачало = 0;
		ВсегоОкончание = 0;
		
		Пока ВыборкаРаботники.Следующий() Цикл
			Запрос = Новый запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			               |	КОЛИЧЕСТВО(ИНАГРО_РегламентированныйПроизводственныйКалендарь.ДатаКалендаря) КАК КоличествоПраздников
			               |ИЗ
			               |	РегистрСведений.ИНАГРО_РегламентированныйПроизводственныйКалендарь КАК ИНАГРО_РегламентированныйПроизводственныйКалендарь
			               |ГДЕ
			               |	ИНАГРО_РегламентированныйПроизводственныйКалендарь.ВидДня = &Праздник
			               |	И ИНАГРО_РегламентированныйПроизводственныйКалендарь.ДатаКалендаря < &ДатаОкончания
			               |	И ИНАГРО_РегламентированныйПроизводственныйКалендарь.ДатаКалендаря > &ДатаНачала";
			
			Запрос.УстановитьПараметр("Праздник", Перечисления.ИНАГРО_ВидыДнейПроизводственногоКалендаря.Праздник);
			Запрос.УстановитьПараметр("ДатаНачала", ВыборкаРаботники.ДатаНачала);
			Запрос.УстановитьПараметр("ДатаОкончания", ВыборкаРаботники.ДатаОкончания);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				КоличествоПраздников = Выборка.КоличествоПраздников;
			КонецЦикла;
			
			ОбластьМакета.Параметры.Работник = ВыборкаРаботники.Работник;
			ОбластьМакета.Параметры.ДатаДок = Ссылка.Дата;
			ОбластьМакета.Параметры.НомерДок = Ссылка.Номер;
			
			ОбластьМакета.Параметры.Подразделение = ВыборкаРаботники.Подразделение;
			ОбластьМакета.Параметры.Должность = ВыборкаРаботники.Должность;
			ОбластьМакета.Параметры.ТабельныйНомер = ВыборкаРаботники.ТабельныйНомер;
			Если ВыборкаРаботники.ВидРасчета = ПланыВидовРасчета.ИНАГРО_Начисления.ОплатаПоСреднемуОтп Тогда
				ЕжегодныйДней = ЕжегодныйДней + Цел((ВыборкаРаботники.ДатаОкончания - ВыборкаРаботники.ДатаНачала) / 86400 + 1) - КоличествоПраздников;
			Иначе
				ДополнительныйДней = ДополнительныйДней + Цел((ВыборкаРаботники.ДатаОкончания - ВыборкаРаботники.ДатаНачала) / 86400 + 1) - КоличествоПраздников;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ВсегоНачало) Тогда
				ВсегоНачало = ВыборкаРаботники.ДатаНачала;
			ИначеЕсли ВсегоНачало > ВыборкаРаботники.ДатаНачала	Тогда
				ВсегоНачало = ВыборкаРаботники.ДатаНачала;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ВсегоОкончание) Тогда
				ВсегоОкончание = ВыборкаРаботники.ДатаОкончания;
			ИначеЕсли ВсегоОкончание < ВыборкаРаботники.ДатаОкончания	Тогда
				ВсегоОкончание = ВыборкаРаботники.ДатаОкончания;
			КонецЕсли;	
			
		КонецЦикла;
		
		ОбластьМакета.Параметры.Продолжительность = ЕжегодныйДней;
		ОбластьМакета.Параметры.ПродолжительностьДоп = ДополнительныйДней;
		ОбластьМакета.Параметры.ПродолжительностьВсего = ЕжегодныйДней + ДополнительныйДней;
		ОбластьМакета.Параметры.ДатаНачалаВсего =  Формат(ВсегоНачало,"ДФ=dd.MM.yyyy");
		ОбластьМакета.Параметры.ДатаОкончанияВсего = Формат(ВсегоОкончание,"ДФ=dd.MM.yyyy" );
		ОбластьМакета.Параметры.РабочийГодС = Формат(Ссылка.РабочийГодС,"ДФ=dd.MM.yyyy");
		ОбластьМакета.Параметры.РабочийГодПо = Формат(Ссылка.РабочийГодПо,"ДФ=dd.MM.yyyy");
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ИНАГРО_ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель1 КАК Размер
		               |ИЗ
		               |	РегистрСведений.ИНАГРО_ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
		               |			&парамДата,
		               |			Сотрудник = &парамСотрудник
		               |				И Организация = &парамОрганизация) КАК ИНАГРО_ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
		               |ГДЕ
		               |	ИНАГРО_ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета <> ИНАГРО_ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета";
		
		Запрос.УстановитьПараметр("парамДата", Ссылка.Дата);
		Запрос.УстановитьПараметр("парамСотрудник", Ссылка.Сотрудник);
		Запрос.УстановитьПараметр("парамОклад", Справочники.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф);
		Запрос.УстановитьПараметр("парамОрганизация", Ссылка.Организация);
		
		ОкладПрежний = Запрос.Выполнить().Выбрать();
		ОкладПрежний.Следующий();
		ОбластьМакета.Параметры.Оклад = ОкладПрежний.Размер;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		Возврат ТабДокумент;
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

// Печать формы П3
Функция ПечатьП3(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеОтпускаРаботникамОрганизаций_П3";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.ПФ_MXL_П3_от_05_12_2008");
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
			
		// получаем данные для печати
		ВыборкаДляШапки = СформироватьЗапросДляПечатиП3("ПоРеквизитамДокумента", Ссылка).Выбрать();
		ВыборкаРаботники = СформироватьЗапросДляПечатиП3("ПоТабличнойЧастиДокумента", Ссылка).Выбрать();
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация, ССылка.Дата);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Форма");
		
		ВыборкаДляШапки.Следующий();
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляШапки);
		ОбластьМакета.Параметры.НазваниеОрганизации = ВРег(СведенияОбОрганизации.ПолноеНаименование);
		ОбластьМакета.Параметры.ЕДРПОУ = СведенияОбОрганизации.КодПоЕДРПОУ;
		
		ЕжегодныйДней = 0;
		ДополнительныйДней = 0;
		ВсегоНачало = 0;
		ВсегоОкончание = 0;
		КоличествоПраздников = 0;
		
		ВидОтпуска = "";
		
		Пока ВыборкаРаботники.Следующий() Цикл
			
			Запрос = Новый запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	КОЛИЧЕСТВО(ИНАГРО_РегламентированныйПроизводственныйКалендарь.ДатаКалендаря) КАК КоличествоПраздников
			|ИЗ
			|	РегистрСведений.ИНАГРО_РегламентированныйПроизводственныйКалендарь КАК ИНАГРО_РегламентированныйПроизводственныйКалендарь
			|ГДЕ
			|	ИНАГРО_РегламентированныйПроизводственныйКалендарь.ВидДня = &Праздник
			|	И ИНАГРО_РегламентированныйПроизводственныйКалендарь.ДатаКалендаря < &ДатаОкончания
			|	И ИНАГРО_РегламентированныйПроизводственныйКалендарь.ДатаКалендаря > &ДатаНачала";
						   
			Запрос.УстановитьПараметр("Праздник", Перечисления.ИНАГРО_ВидыДнейПроизводственногоКалендаря.Праздник);
			Запрос.УстановитьПараметр("ДатаНачала", ВыборкаРаботники.ДатаНачала);
			Запрос.УстановитьПараметр("ДатаОкончания", ВыборкаРаботники.ДатаОкончания);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				КоличествоПраздников = Выборка.КоличествоПраздников;
			КонецЦикла;
			
			ОбластьМакета.Параметры.Работник = ВыборкаРаботники.Работник;
			ОбластьМакета.Параметры.ДатаДок = Ссылка.Дата;
			ОбластьМакета.Параметры.НомерДок = Ссылка.Номер;
			
			ОбластьМакета.Параметры.ПодразделениеРаботника = ВыборкаРаботники.Подразделение;
			ОбластьМакета.Параметры.Должность = ВыборкаРаботники.Должность;
			ОбластьМакета.Параметры.ТабельныйНомер = ВыборкаРаботники.ТабельныйНомер;
			
			ОбластьМакета.Параметры.ФИОРуководителя = ФизическиеЛицаКлиентСервер.ИмяФамилияВФорматеДСТУ(ОбластьМакета.Параметры.ФИОРуководителя);
			//ОбластьМакета.Параметры.ФИОРуководителяПодразделения = ФизическиеЛицаКлиентСервер.ИмяФамилияВФорматеДСТУ(ОбластьМакета.Параметры.ФИОРуководителяПодразделения);
			
			Если НЕ ЗначениеЗаполнено(ВсегоНачало) Тогда
				ВсегоНачало = ВыборкаРаботники.ДатаНачала;
			ИначеЕсли ВсегоНачало > ВыборкаРаботники.ДатаНачала	Тогда
				ВсегоНачало = ВыборкаРаботники.ДатаНачала;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ВсегоОкончание) Тогда
				ВсегоОкончание = ВыборкаРаботники.ДатаОкончания;
			ИначеЕсли ВсегоОкончание < ВыборкаРаботники.ДатаОкончания	Тогда
				ВсегоОкончание = ВыборкаРаботники.ДатаОкончания;
			КонецЕсли;
			
			Если ВыборкаРаботники.ВидРасчета = ПланыВидовРасчета.ИНАГРО_Начисления.ОплатаПоСреднемуОтп Тогда
				Если Найти(ВидОтпуска,"щорічна основна") = 0 Тогда
					Если ВидОтпуска <> "" Тогда
						ВидОтпуска = ВидОтпуска+", ";
					КонецЕсли;
					ВидОтпуска = ВидОтпуска+"щорічна основна";
				КонецЕсли;
			ИначеЕсли ВыборкаРаботники.ВидРасчета = ПланыВидовРасчета.ИНАГРО_Начисления.ОтпускЗаСвойСчет Тогда
				Если Найти(ВидОтпуска,"без збереження заробітної плати") = 0 Тогда
					Если ВидОтпуска <> "" Тогда
						ВидОтпуска = ВидОтпуска+", ";
					КонецЕсли;
					ВидОтпуска = ВидОтпуска+"без збереження заробітної плати";
				КонецЕсли;
			Иначе
				Если Найти(ВидОтпуска,"додаткова") = 0 Тогда
					Если ВидОтпуска <> "" Тогда
						ВидОтпуска = ВидОтпуска+", ";
					КонецЕсли;
					ВидОтпуска = ВидОтпуска+"додаткова";
				КонецЕсли;
			КонецЕсли;	
			
		КонецЦикла;
		
		ПродолжительностьВсего = 0;
		Для Каждого СтрокаНачисления Из Ссылка.Начисления Цикл
			Если  СтрокаНачисления.Назначение.ИНАГРО_ВидЗанятости <> Перечисления.ВидыЗанятости.ВнутреннееСовместительство Тогда
				ПродолжительностьВсего = ПродолжительностьВсего + СтрокаНачисления.КалендарныеДни;
			КонецЕсли;
		КонецЦикла;
	
		ПродолжительностьВсего = КадровыйУчетБазовый.РазложитьЧислоВСтроку(ПродолжительностьВсего,2,Истина);
		Для Сч = 1 По 2 Цикл
			ОбластьМакета.Параметры["Продолжительность" + Сч] = Сред(Строка(ПродолжительностьВсего), Сч, 1);
		КонецЦикла;
		
		ОбластьМакета.Параметры.ДатаНачалаВсего = Формат(ВсегоНачало, "ДФ=dd.MM.yyyy");
		ОбластьМакета.Параметры.ДатаОкончанияВсего = Формат(ВсегоОкончание, "ДФ=dd.MM.yyyy");
		ОбластьМакета.Параметры.ВидОтпуска = ВидОтпуска;
		ОбластьМакета.Параметры.РабочийГодС = Формат(Ссылка.РабочийГодС, "ДФ=dd.MM.yyyy");
		ОбластьМакета.Параметры.РабочийГодПо = Формат(Ссылка.РабочийГодПо, "ДФ=dd.MM.yyyy");
			                                     
		ТабДокумент.Вывести(ОбластьМакета);
	 						
	КонецЦикла;	
	
	Возврат ТабДокумент;
		
КонецФункции

// Печать формы Средняя
Функция ПечатьСредняя(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеОтпускаРаботникамОрганизаций_Средняя";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.ПФ_MXL_Средняя");
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
			
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МИНИМУМ(Отпуска.ДатаНачала) КАК ДатаНачала,
		|	МАКСИМУМ(Отпуска.ДатаОкончания) КАК ДатаОкончания
		|ИЗ
		|	Документ.ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.Отпуска КАК Отпуска
		|ГДЕ
		|	Отпуска.Ссылка.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		ВыборкаПериодОтпуска = Запрос.Выполнить().Выбрать();
		ДатаНачала = "";
		ДатаОкончания = "";
		Если ВыборкаПериодОтпуска.Следующий() Тогда
			ДатаНачала = ВыборкаПериодОтпуска.ДатаНачала;
			ДатаОкончания = ВыборкаПериодОтпуска.ДатаОкончания;
		КонецЕсли;
		
		ТабельныйНомер = Ссылка.Сотрудник.ИНАГРО_ТабельныйНомер;
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Заполнить(Ссылка);
		ОбластьШапка.Параметры.ТабельныйНомер = ТабельныйНомер;
		ОбластьШапка.Параметры.Дата = Формат(Ссылка.Дата,"ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.ДатаНачала = Формат(ДатаНачала,"ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.ДатаОкончания = Формат(ДатаОкончания,"ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.ПериодРасчетаСреднегоНачало = Формат(Ссылка.ПериодРасчетаСреднегоНачало,"ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.ПериодРасчетаСреднегоКонец = Формат(Ссылка.ПериодРасчетаСреднегоКонец,"ДФ=dd.MM.yyyy");
		ТабДокумент.Вывести(ОбластьШапка);
		
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаСреднего");
		
		ТабСредняя = Ссылка.РасчетСреднего.Выгрузить();  
	
		Если ПолучитьДатуНачалаСобытия(Ссылка) >= ИНАГРО_ПроведениеРасчетов.ДатаИзмененияПорядка100_486() Тогда
			ОтборСтрок = Новый Структура;
			ОтборСтрок.Вставить("ПревышениеПремии", Истина);
			МассивСтрок = табСредняя.НайтиСтроки(ОтборСтрок);
			Если Не МассивСтрок = Неопределено Тогда
				Для Каждого МассивСтрока Из МассивСтрок Цикл
					табСредняя.Удалить(МассивСтрока)
				КонецЦикла	
			КонецЕсли;
		КонецЕсли;	
		
		ТабСредняя.Свернуть("БазовыйПериодНачало,БазовыйПериодКонец","КоэффициентПовышенияОкладов"); 
    	ТабСредняя.Сортировать("БазовыйПериодНачало Убыв");   
		
		Коэф = Ссылка.КоэффициентПовышенияОкладов;
		КоэфТек = 1;
		Для Каждого СтрКоэф Из табСредняя Цикл
			Коэф = Коэф * КоэфТек;
			КоэфТек = СтрКоэф.КоэффициентПовышенияОкладов;
			СтрКоэф.КоэффициентПовышенияОкладов = Коэф;
		КонецЦикла;
	    табСредняя.Сортировать("БазовыйПериодНачало");
		
		Запрос_Средняя = Новый Запрос;
		Запрос_Средняя.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
           |	ИНАГРО_НачислениеОтпускаРаботникамОрганизацийРасчетСреднего.БазовыйПериодНачало КАК БазовыйПериодНачало,
           |	ИНАГРО_НачислениеОтпускаРаботникамОрганизацийРасчетСреднего.КоэффициентПовышенияОкладов КАК КоэффициентПовышенияОкладов,
           |	ИНАГРО_НачислениеОтпускаРаботникамОрганизацийРасчетСреднего.ВидРасчета КАК ВидРасчета,
           |	СУММА(ИНАГРО_НачислениеОтпускаРаботникамОрганизацийРасчетСреднего.Результат) КАК Результат,
           |	СУММА(ИНАГРО_НачислениеОтпускаРаботникамОрганизацийРасчетСреднего.КалендарныеДни) КАК КалендарныеДни,
           |	СУММА(ИНАГРО_НачислениеОтпускаРаботникамОрганизацийРасчетСреднего.ОтработаноДней) КАК ОтработаноДней,
           |	СУММА(ИНАГРО_НачислениеОтпускаРаботникамОрганизацийРасчетСреднего.ОтработаноЧасов) КАК ОтработаноЧасов
           |ИЗ
           |	Документ.ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.РасчетСреднего КАК ИНАГРО_НачислениеОтпускаРаботникамОрганизацийРасчетСреднего
           |ГДЕ
           |	ИНАГРО_НачислениеОтпускаРаботникамОрганизацийРасчетСреднего.Ссылка = &Ссылка  
		   |//ТекстУсловие
           |
           |СГРУППИРОВАТЬ ПО
           |	ИНАГРО_НачислениеОтпускаРаботникамОрганизацийРасчетСреднего.ВидРасчета,
           |	ИНАГРО_НачислениеОтпускаРаботникамОрганизацийРасчетСреднего.БазовыйПериодНачало,
           |	ИНАГРО_НачислениеОтпускаРаботникамОрганизацийРасчетСреднего.КоэффициентПовышенияОкладов
           |
           |УПОРЯДОЧИТЬ ПО
           |	БазовыйПериодНачало,
           |	КоэффициентПовышенияОкладов
           |ИТОГИ ПО
           |	ОБЩИЕ,
           |	БазовыйПериодНачало,
           |	КоэффициентПовышенияОкладов,
           |	ВидРасчета";
	
		Запрос_Средняя.УстановитьПараметр("Ссылка", Ссылка); 
		
		Если ПолучитьДатуНачалаСобытия(Ссылка) >= ИНАГРО_ПроведениеРасчетов.ДатаИзмененияПорядка100_486() Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ТекстУсловие",	"	
				|   И НачислениеОтпускаРаботникамОрганизацийРасчетСреднего.ПревышениеПремии = ЛОЖЬ");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ТекстУсловие",	"")	
		КонецЕсли;

		ТабСредняя = Запрос_Средняя.Выполнить().Выгрузить();
		
		Рез = Запрос_Средняя.Выполнить();
		Результат = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидРасчета");
		
		ОбластьШапкаРасчетСреднего_Начало 	 = Макет.ПолучитьОбласть("ШапкаСредней|Начало");
		ОбластьШапкаРасчетСреднего_ВидРасчета = Макет.ПолучитьОбласть("ШапкаСредней|ВидРасчета");
		ОбластьШапкаРасчетСреднего_Конец 	 = Макет.ПолучитьОбласть("ШапкаСредней|КонецСредней");
		
		СтрокаСреднего_Начало				 = Макет.ПолучитьОбласть("СтрокаСреднего|Начало");
		СтрокаСреднего_ВидРасчета            = Макет.ПолучитьОбласть("СтрокаСреднего|ВидРасчета");
		СтрокаСреднего_Конец                 = Макет.ПолучитьОбласть("СтрокаСреднего|Конец");
		
		ТабДокумент.Вывести(ОбластьШапкаРасчетСреднего_Начало);
		
		КоличествоВставляемыхОбластей = 0;
		ДоходТекст = НСтр("ru = 'Доход'; uk = 'Дохід'",КодЯзыкаПечать);
		
		Пока Результат.Следующий() Цикл
			ОбластьШапкаРасчетСреднего_ВидРасчета.Параметры.ДоходТекст = ДоходТекст;
			ОбластьШапкаРасчетСреднего_ВидРасчета.Параметры.ВидРасчета = Результат.ВидРасчета;
			ТабДокумент.Присоединить(ОбластьШапкаРасчетСреднего_ВидРасчета);
			КоличествоВставляемыхОбластей = КоличествоВставляемыхОбластей + 1;
			//ДоходТекст = "";
		КонецЦикла;
		
		ТабДокумент.Присоединить(ОбластьШапкаРасчетСреднего_Конец);
		
		ИтогоНачислено = 0;
		
		ВыборкаПериод = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "БазовыйПериодНачало");
		
		Пока ВыборкаПериод.Следующий() Цикл
			СтрокаСреднего_Начало.Параметры.Год   =	Формат(Год(ВыборкаПериод.БазовыйПериодНачало),"ЧГ=0");	
			СтрокаСреднего_Начало.Параметры.Месяц = ВыборкаПериод.БазовыйПериодНачало;
			ТабДокумент.Вывести(СтрокаСреднего_Начало);
			
			ВыборкаВидРасчета = ВыборкаПериод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидРасчета");
			Пока ВыборкаВидРасчета.Следующий() Цикл
				
				СтрокаСреднего_ВидРасчета.Параметры.Результат = ВыборкаВидРасчета.Результат; 
				ИтогоНачислено = ИтогоНачислено + ВыборкаВидРасчета.Результат;
				ТабДокумент.Присоединить(СтрокаСреднего_ВидРасчета);
				
				ВыборкаДетали = ВыборкаВидРасчета.Выбрать();
				Пока ВыборкаДетали.Следующий() Цикл
					СтрокаСреднего_Конец.Параметры.КоэффициентПовышенияОкладов = ВыборкаДетали.КоэффициентПовышенияОкладов;
				КонецЦикла;
				
			КонецЦикла;
			
			СтрокаСреднего_Конец.Параметры.ОтработаноДней = ВыборкаПериод.ОтработаноДней;	
			СтрокаСреднего_Конец.Параметры.ОтработаноЧасов = ВыборкаПериод.ОтработаноЧасов;	
			СтрокаСреднего_Конец.Параметры.КалендарныеДни = ВыборкаПериод.КалендарныеДни;	
			
			ТабДокумент.Присоединить(СтрокаСреднего_Конец);	
		КонецЦикла;
		
		ОбластьИтогиСреднего_Начало	= Макет.ПолучитьОбласть("ИтогиСреднего|Начало");
		ОбластьИтогиСреднего_ВидРасчета	= Макет.ПолучитьОбласть("ИтогиСреднего|ВидРасчета");
		ОбластьИтогиСреднего_Конец = Макет.ПолучитьОбласть("ИтогиСреднего|КОНЕЦ");
		
		ОбластьИтогиСреднего_ВидРасчета.Параметры.Результат			= табСредняя.Итог("Результат");
		
		ТабДокумент.Вывести(ОбластьИтогиСреднего_Начало);
		Результат.Сбросить();
		ВыборкаВидРасчета = Результат;
		Пока ВыборкаВидРасчета.Следующий() Цикл
			ОбластьИтогиСреднего_ВидРасчета.Параметры.Результат = ВыборкаВидРасчета.Результат;
			ТабДокумент.Присоединить(ОбластьИтогиСреднего_ВидРасчета);
		КонецЦикла;
		
		Выборка = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		Пока Выборка.Следующий() Цикл
			ОбластьИтогиСреднего_Конец.Параметры.ОтработаноДней		= Выборка.ОтработаноДней;
			ОбластьИтогиСреднего_Конец.Параметры.ОтработаноЧасов	= Выборка.ОтработаноЧасов;
			ОбластьИтогиСреднего_Конец.Параметры.КалендарныеДни		= Выборка.КалендарныеДни;
		КонецЦикла;
		
		ТабДокумент.Присоединить(ОбластьИтогиСреднего_Конец); 
		
	
		Если ПолучитьДатуНачалаСобытия(Ссылка) >= ИНАГРО_ПроведениеРасчетов.ДатаИзмененияПорядка100_486() Тогда
			
			Запрос.Текст = "ВЫБРАТЬ
			|	СУММА(НачислениеОтпускаРаботникамОрганизаций.Результат) КАК ПревышениеПремии,
			|	НачислениеОтпускаРаботникамОрганизаций.Ссылка
			|ИЗ
			|	Документ.ИНАГРО_НачислениеОтпускаРаботникамОрганизаций.РасчетСреднего КАК НачислениеОтпускаРаботникамОрганизаций
			|ГДЕ
			|	НачислениеОтпускаРаботникамОрганизаций.Ссылка = &Ссылка
			|	И НачислениеОтпускаРаботникамОрганизаций.ПревышениеПремии = ИСТИНА
			|
			|СГРУППИРОВАТЬ ПО
			|	НачислениеОтпускаРаботникамОрганизаций.Ссылка";
			Выборка = Запрос.Выполнить().Выбрать();
			
			ОбластьИтогСОграничением				= Макет.ПолучитьОбласть("ИтогСОграничением");
			Если Выборка.Следующий() Тогда
				ОбластьИтогСОграничением.Параметры.ПревышениеПремии		= Формат(-Выборка.ПревышениеПремии, "ЧДЦ=2");
				ОбластьИтогСОграничением.Параметры.ВсегоНачислено		= Формат(ИтогоНачислено, "ЧДЦ=2");
				ОбластьИтогСОграничением.Параметры.ВсегоНачисленоСУчетомОграничения = Формат(ИтогоНачислено + Выборка.ПревышениеПремии, "ЧДЦ=2");
				ТабДокумент.Вывести(ОбластьИтогСОграничением);
			КонецЕсли;	
			
		КонецЕсли;
		
		ОбластьШапка2 = Макет.ПолучитьОбласть("Шапка2");
		Если Ссылка.Начисления.Количество() > 0 Тогда
			ОбластьШапка2.Параметры.СреднедневнаяТекст = ?(Ссылка.Начисления[0].ГрафикРаботы.СуммированныйУчетРабочегоВремени,НСтр("ru='Среднечасовая заработная плата:';uk='Середньогодинна заробітна плата:'",КодЯзыкаПечать), НСтр("ru='Среднедневная заработная плата:';uk='Середньоденна заробітна плата:'",КодЯзыкаПечать));
		КонецЕсли;
		ОбластьШапка2.Параметры.СуммаСредней = Ссылка.СуммаСредней;
		ТабДокумент.Вывести(ОбластьШапка2);
		
		ОбластьСтроки2 = Макет.ПолучитьОбласть("СтрокаНачисления");
		
		Для Каждого СтрокаТЧ Из Ссылка.Начисления Цикл
			ОбластьСтроки2.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(ОбластьСтроки2);
		КонецЦикла;
		
		ОбластьИтогиНачислений = Макет.ПолучитьОбласть("ИтогиНачислений");
		ОбластьИтогиНачислений.Параметры.НормаДней = Ссылка.Начисления.Итог("НормаДней");
		ОбластьИтогиНачислений.Параметры.НормаЧасов = Ссылка.Начисления.Итог("НормаЧасов");
		ОбластьИтогиНачислений.Параметры.КалендарныеДни = Ссылка.Начисления.Итог("КалендарныеДни");
		ОбластьИтогиНачислений.Параметры.Результат = Ссылка.Начисления.Итог("Результат");
		ТабДокумент.Вывести(ОбластьИтогиНачислений);
		
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Ответственный = Ссылка.Ответственный.ФизическоеЛицо.Наименование;
		ТабДокумент.Вывести(ОбластьПодвал);	
		
		ОбластьДляОбъединения = ТабДокумент.Область(16,4,16,4+КоличествоВставляемыхОбластей-1);
		ОбластьДляОбъединения.Объединить();
		
		Возврат ТабДокумент;
	КонецЦикла;

КонецФункции  

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьДатуНачалаСобытия(Ссылка, ДатаОкончанияСобытия = 0) Экспорт

	Если Ссылка.Отпуска.Количество() = 0 Тогда
		Возврат Ссылка.ПериодРегистрации;
	КонецЕсли;
		
	тбОтпуска = Ссылка.Отпуска.Выгрузить();
	тбОтпуска.Сортировать("ДатаНачала");
	ДатаОкончанияСобытия = тбОтпуска[тбОтпуска.Количество()-1].ДатаОкончания;
	
	Возврат тбОтпуска[0].ДатаНачала;

КонецФункции // ()


#КонецОбласти

#КонецЕсли
