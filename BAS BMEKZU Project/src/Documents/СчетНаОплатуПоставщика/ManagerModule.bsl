#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Перечень табличных частей, данные которых не используются 
// в контексте документа, скрыты от пользователя
Функция НеИспользуемыеТабличныеЧасти(ВидОперации, Комиссия) Экспорт
	
	ТабличныеЧасти = Новый Массив;
	
	// Товары доступны всегда, кроме объектов строительства
	Если ВидОперации = Перечисления.ВидыОперацийСчетНаОплатуПоставщика.ОбъектыСтроительства Тогда
		ТабличныеЧасти.Добавить("Товары");
	КонецЕсли;
	
	// Услуги доступны всегда, кроме комиссии
	Если Комиссия Тогда
		ТабличныеЧасти.Добавить("Услуги");
	КонецЕсли;
	
	// Возвратная тара доступна только для двух видов операции и то,
	// если включена соответствующая опция
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВозвратнуюТару") Тогда
		ТабличныеЧасти.Добавить("ВозвратнаяТара");
	ИначеЕсли ВидОперации <> Перечисления.ВидыОперацийСчетНаОплатуПоставщика.ПокупкаКомиссия
		И ВидОперации <> Перечисления.ВидыОперацийСчетНаОплатуПоставщика.Оборудование Тогда
		ТабличныеЧасти.Добавить("ВозвратнаяТара");
	КонецЕсли;
	
	// Оборудование и ОбъектыСтроительства доступны только в "своих" операциях
	Если ВидОперации <> Перечисления.ВидыОперацийСчетНаОплатуПоставщика.Оборудование Тогда
		ТабличныеЧасти.Добавить("Оборудование");
	КонецЕсли;
	
	Если ВидОперации <> Перечисления.ВидыОперацийСчетНаОплатуПоставщика.ОбъектыСтроительства Тогда
		ТабличныеЧасти.Добавить("ОбъектыСтроительства");
	КонецЕсли;
	
	Возврат ТабличныеЧасти;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьСчетПоставщика(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	ДоговорКонтрагента,
	|	ДоговорКонтрагента.Дата  		КАК ДоговорДата,
	|	ДоговорКонтрагента.Номер 		КАК ДоговорНомер,
	|	ДоговорКонтрагента.НаименованиеДляПечати КАК ДоговорНаименованиеДляПечати,
	|	ДоговорКонтрагента.ВидДоговора  КАК ВидДоговораКонтрагента,
	|	Ответственный.ФизическоеЛицо.Наименование КАК Получил,
	|	Организация,
	|	Контрагент  КАК Поставщик,
	|	Организация КАК Покупатель,
	|	СуммаДокумента,
	|	ВалютаДокумента,
	|	СуммаВключаетНДС
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика
	|
	|ГДЕ
	|	СчетНаОплатуПоставщика.Ссылка = &ТекущийДокумент";

	ЗапросТЧТовары = Новый Запрос;
	
	ЧастьЗапросаДляВыбораСодержанияУслуг = ОбщегоНазначенияБПВызовСервера.ПолучитьЧастьЗапросаДляВыбораСодержанияУслуг("СчетНаОплатуПоставщика");
	
	ЗапросТЧТовары.Текст =
	"ВЫБРАТЬ
	|	Номенклатура,
	|	Номенклатура.НаименованиеПолное КАК Товар,
	|	Номенклатура.Код КАК Код,
	|	Номенклатура.Артикул КАК Артикул,
	|	Количество,
	|	ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|	Цена,
	|	Сумма,
	|	СуммаНДС,
	|   НомерСтроки,
	|	1 КАК ID
	|ИЗ 
	|	(ВЫБРАТЬ
	|		Номенклатура         КАК Номенклатура,
	|		ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
	|		Цена                 КАК Цена,
	|		СтавкаНДС            КАК СтавкаНДС,
	|		СУММА(Количество)    КАК Количество,
	|		СУММА(Сумма)         КАК Сумма,
	|		СУММА(СуммаНДС)      КАК СуммаНДС,
	|		МИНИМУМ(НомерСтроки) КАК НомерСтроки
	|	ИЗ
	|		Документ.СчетНаОплатуПоставщика.Товары КАК СчетНаОплатуПоставщика
	|	ГДЕ
	|		СчетНаОплатуПоставщика.Ссылка = &ТекущийДокумент
	|	СГРУППИРОВАТЬ ПО
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		Цена,
	|		СтавкаНДС
	|	) КАК ВложенныйЗапросПоТоварам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + ЧастьЗапросаДляВыбораСодержанияУслуг + ",
	|	" + ЧастьЗапросаДляВыбораСодержанияУслуг + ",
	|	Номенклатура.Код КАК Код,
	|	Номенклатура.Артикул КАК Артикул,
	|	Количество,
	|	Номенклатура.БазоваяЕдиницаИзмерения.Наименование,
	|	Цена,
	|	Сумма,
	|	СуммаНДС,
	|	НомерСтроки,
	|	2
	|	
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика.Услуги КАК СчетНаОплатуПоставщика
	|
	|ГДЕ
	|	СчетНаОплатуПоставщика.Ссылка = &ТекущийДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура,
	|	Номенклатура.НаименованиеПолное КАК Товар,
	|	Номенклатура.Код КАК Код,
	|	Номенклатура.Артикул КАК Артикул,
	|	Количество,
	|	ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|	Цена,
	|	Сумма,
	|	СуммаНДС,
	|   НомерСтроки,
	|	3 КАК ID
	|ИЗ 
	|	(ВЫБРАТЬ
	|		Номенклатура         КАК Номенклатура,
	|		ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
	|		Цена                 КАК Цена,
	|		СтавкаНДС            КАК СтавкаНДС,
	|		СУММА(Количество)    КАК Количество,
	|		СУММА(Сумма)         КАК Сумма,
	|		СУММА(СуммаНДС)      КАК СуммаНДС,
	|		МИНИМУМ(НомерСтроки) КАК НомерСтроки
	|	ИЗ
	|		Документ.СчетНаОплатуПоставщика.Оборудование КАК СчетНаОплатуПоставщика
	|	ГДЕ
	|		СчетНаОплатуПоставщика.Ссылка = &ТекущийДокумент
	|	СГРУППИРОВАТЬ ПО
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		Цена,
	|		СтавкаНДС
	|	) КАК ВложенныйЗапросПоТоварам
    |
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбъектСтроительства,
	|	ОбъектСтроительства,
	|	NULL КАК Код,
	|	NULL КАК Артикул,
	|	1,
	|	NULL,
	|	Сумма,
	|	Сумма,
	|	СуммаНДС,
	|	НомерСтроки,
	|	4
	|	
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика.ОбъектыСтроительства КАК СчетНаОплатуПоставщика
	|
	|ГДЕ
	|	СчетНаОплатуПоставщика.Ссылка = &ТекущийДокумент
	|
	|
	|УПОРЯДОЧИТЬ ПО
	|	ID,
	|	НомерСтроки";

	ЗапросВозвратнаяТара = Новый Запрос;
	ЗапросВозвратнаяТара.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Номенклатура,
	               |	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Товар,
				   |	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
				   |	ВложенныйЗапрос.Номенклатура.Код КАК Код,
				   |	ВложенныйЗапрос.Количество,
				   |	ВложенныйЗапрос.ЕдиницаИзмерения,
				   |	ВложенныйЗапрос.Цена,
				   |	ВложенныйЗапрос.Сумма,
	               |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		СчетНаОплатуПоставщика.Номенклатура КАК Номенклатура,
	               |		СчетНаОплатуПоставщика.Номенклатура.БазоваяЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	               |		СчетНаОплатуПоставщика.Цена КАК Цена,
	               |		СУММА(СчетНаОплатуПоставщика.Количество) КАК Количество,
	               |		СУММА(СчетНаОплатуПоставщика.Сумма) КАК Сумма,
	               |		МИНИМУМ(СчетНаОплатуПоставщика.НомерСтроки) КАК НомерСтроки
	               |	ИЗ
	               |		Документ.СчетНаОплатуПоставщика.ВозвратнаяТара КАК СчетНаОплатуПоставщика
	               |	
	               |	ГДЕ
	               |		СчетНаОплатуПоставщика.Ссылка = &ТекущийДокумент
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		СчетНаОплатуПоставщика.Номенклатура,
	               |		СчетНаОплатуПоставщика.Цена) КАК ВложенныйЗапрос
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки";
	
	ЗапросНематериальныеАктивы = Новый Запрос;
	ЗапросНематериальныеАктивы.Текст = "
	|ВЫБРАТЬ
	|	СчетНаОплатуПоставщика.НомерСтроки	КАК НомерСтроки,
	|	СчетНаОплатуПоставщика.НематериальныйАктив,
	|	ВЫРАЗИТЬ(СчетНаОплатуПоставщика.НематериальныйАктив.НаименованиеПолное КАК СТРОКА(1000))  КАК Товар,
	|	СчетНаОплатуПоставщика.Сумма,
	|	СчетНаОплатуПоставщика.СуммаНДС
	|ИЗ
	|	Документ.СчетНаОплатуПоставщика.НематериальныеАктивы КАК СчетНаОплатуПоставщика
	|
	|ГДЕ
	|	СчетНаОплатуПоставщика.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетНаОплатуПоставщика_Накладная";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СчетНаОплатуПоставщика.ПФ_MXL_Счет");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;

	ПервыйДокумент = Истина;
	
	Для каждого Ссылка Из МассивОбъектов Цикл	

		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Шапка = ЗапросШапка.Выполнить().Выбрать();
		Шапка.Следующий();
		
		ЗапросТЧТовары.УстановитьПараметр("ТекущийДокумент", Ссылка);
		ЗапросТовары = ЗапросТЧТовары.Выполнить().Выгрузить();
		
		ЗапросВозвратнаяТара.УстановитьПараметр("ТекущийДокумент", Ссылка);
		ЗапросТара = ЗапросВозвратнаяТара.Выполнить().Выгрузить();	

		ЗапросНематериальныеАктивы.УстановитьПараметр("ТекущийДокумент", Ссылка);
		ЗапросНМА = ЗапросНематериальныеАктивы.Выполнить().Выгрузить();
		
		УчитыватьНДС = УчетнаяПолитика.ПлательщикНДС(Шапка.Организация, Шапка.Дата); 
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		Если Шапка.ВидДоговораКонтрагента = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом  Тогда
			ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка, НСтр("ru='Список товаров на комиссию';uk='Список товарів на комісію'",КодЯзыкаПечать),КодЯзыкаПечать);
		Иначе	
			ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка, НСтр("ru='Счет на оплату поставщика';uk='Рахунок на оплату постачальника'",КодЯзыкаПечать),КодЯзыкаПечать);
		КонецЕсли; 

		ТабДокумент.Вывести(ОбластьМакета);

		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель, Шапка.Дата,,,КодЯзыкаПечать);
		СведенияОПоставщике = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата,,,КодЯзыкаПечать);

		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,",,КодЯзыкаПечать);	
		ОбластьМакета.Параметры.РеквизитыПоставщика =     ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПоставщике, "НомерСчета,Банк,МФО,/,ЮридическийАдрес,Телефоны,/,КодПоЕДРПОУ,КодПоДРФО,ИНН,НомерСвидетельства,",,КодЯзыкаПечать);
	    ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ОбластьМакета.Параметры.Заполнить(Шапка);
	 	ОбластьМакета.Параметры.ПредставлениеПокупателя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,",,КодЯзыкаПечать);
		ОбластьМакета.Параметры.РеквизитыПокупателя		= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе, "НомерСчета,Банк,МФО,/,ЮридическийАдрес,Телефоны,/,КодПоЕДРПОУ,КодПоДРФО,ИНН,НомерСвидетельства,",,КодЯзыкаПечать);
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим дополнительно информацию о договоре и сделке
		СписокДополнительныхПараметров = "ДоговорНаименованиеДляПечати,";
		МассивСтруктурСтрок = ОбщегоНазначенияБПВызовСервера.ДополнительнаяИнформация(Шапка,СписокДополнительныхПараметров,КодЯзыкаПечать);
		ОбластьМакета = Макет.ПолучитьОбласть("ДопИнформация");
	    Для каждого СтруктураСтроки Из МассивСтруктурСтрок Цикл
			ОбластьМакета.Параметры.Заполнить(СтруктураСтроки);
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		

		// Вывести табличную часть
		ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
		Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ВыводитьКоды = Истина;
			Колонка = "Артикул";
		ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ВыводитьКоды = Истина;
			Колонка = "Код";
		Иначе
			ВыводитьКоды = Ложь;
		КонецЕсли;
		
		ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	    
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		Суффикс = "";
		Если УчитыватьНДС Тогда
			Если Шапка.СуммаВключаетНДС Тогда
				Суффикс  = Суффикс  + НСтр("ru=' с ';uk=' з '",КодЯзыкаПечать);
			Иначе	
				Суффикс  = Суффикс  + НСтр("ru=' без ';uk=' без '",КодЯзыкаПечать);
			КонецЕсли;
			Суффикс = Суффикс  + НСтр("ru='НДС';uk='ПДВ'",КодЯзыкаПечать);
		КонецЕсли;
		ОбластьДанных.Параметры.Цена  = НСтр("ru='Цена';uk='Ціна'",КодЯзыкаПечать) + Суффикс;
		ОбластьДанных.Параметры.Сумма = НСтр("ru='Сумма';uk='Сума'",КодЯзыкаПечать)+ Суффикс;
	    ТабДокумент.Присоединить(ОбластьДанных);
		
		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + 
												Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		
		
		ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");

		Сумма    = 0;
		СуммаНДС = 0;
		
		Для каждого ВыборкаСтрокТовары Из ЗапросТовары Цикл 

			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.';uk='В одному з рядків не заповнене значення номенклатури - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
				Продолжить;
			КонецЕсли;

			ОбластьНомера.Параметры.НомерСтроки = ЗапросТовары.Индекс(ВыборкаСтрокТовары) + 1;
			ТабДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				Если Колонка = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;

			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар 		= СокрЛП(ВыборкаСтрокТовары.Товар);
	        ТабДокумент.Присоединить(ОбластьДанных);

			Сумма          = Сумма       + ВыборкаСтрокТовары.Сумма;
			СуммаНДС       = СуммаНДС    + ВыборкаСтрокТовары.СуммаНДС;

		КонецЦикла;

		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма);
		ТабДокумент.Вывести(ОбластьМакета);

		Если УчитыватьНДС Тогда
			// НДС
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
			ОбластьМакета.Параметры.ВсегоНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаНДС,,"""");
			ОбластьМакета.Параметры.НДС      = ?(Шапка.СуммаВключаетНДС, НСтр("ru='В том числе НДС:';uk='У тому числі ПДВ:'",КодЯзыкаПечать), НСтр("ru='Сумма НДС:';uk='Сума ПДВ:'",КодЯзыкаПечать));
			ТабДокумент.Вывести(ОбластьМакета);
			
			// всего с НДС (если сумма не включает НДС)
			Если НЕ Шапка.СуммаВключаетНДС Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
				ОбластьМакета.Параметры.ВсегоНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма + СуммаНДС);
				ОбластьМакета.Параметры.НДС      = НСтр("ru='Всего с НДС:';uk='Всього із ПДВ:'",КодЯзыкаПечать);
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЕсли;
		КонецЕсли;

		СуммаНМА 	= 0;
		СуммаНДСНМА = 0;
		
		// выведем таблицу с НМА
		Если ЗапросНМА.Количество() > 0 Тогда
			
			// сделаем отступ от основной таблицы
			ОбластьПробел = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьПробел);
			
			ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыНМА");
			ОбластьМакета.Параметры.Сумма = НСтр("ru='Сумма';uk='Сума'",КодЯзыкаПечать)+ Суффикс;
			ТабДокумент.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаНМА");
		
			Для каждого ВыборкаСтрокНМА Из ЗапросНМА Цикл 
				
				Если НЕ ЗначениеЗаполнено(ВыборкаСтрокНМА.НематериальныйАктив) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено значение тары - строка при печати пропущена.';uk='В одному з рядків не заповнене значення тари - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
					Продолжить;
				КонецЕсли;
				
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокНМА);
				ОбластьМакета.Параметры.НомерСтроки = ЗапросНМА.Индекс(ВыборкаСтрокНМА) + 1;
				ОбластьМакета.Параметры.Товар = СокрП(ВыборкаСтрокНМА.Товар);			
				
				СуммаНМА 	= СуммаНМА + ВыборкаСтрокНМА.Сумма;
				СуммаНДСНМА = СуммаНДСНМА + ВыборкаСтрокНМА.СуммаНДС;
				
				ТабДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла;
			
			// Вывести Итого
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНМА");
			ОбластьМакета.Параметры.Всего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаНМА);
			ТабДокумент.Вывести(ОбластьМакета);
			
			// Вывести ИтогоНДС
			Если УчитыватьНДС Тогда			
				// НДС
				ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДСНМА");
				ОбластьМакета.Параметры.ВсегоНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаНДСНМА);
				ОбластьМакета.Параметры.НДС      = ?(Шапка.СуммаВключаетНДС, НСтр("ru='В том числе НДС:';uk='У тому числі ПДВ:'",КодЯзыкаПечать), НСтр("ru='Сумма НДС:';uk='Сума ПДВ:'",КодЯзыкаПечать));
				ТабДокумент.Вывести(ОбластьМакета);
				
				// всего с НДС (если сумма не включает НДС)
				Если НЕ Шапка.СуммаВключаетНДС Тогда
					ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДСНМА");
					ОбластьМакета.Параметры.ВсегоНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаНМА + СуммаНДСНМА);
					ОбластьМакета.Параметры.НДС      = НСтр("ru='Всего с НДС:';uk='Всього із ПДВ:'",КодЯзыкаПечать);
					ТабДокумент.Вывести(ОбластьМакета);
				КонецЕсли;
			КонецЕсли;
			
			// сделаем отступ 
			ТабДокумент.Вывести(ОбластьПробел);		
		КонецЕсли;	
		
		
		
		// выведем таблицу с возвратной тарой
		Если ЗапросТара.Количество() > 0 Тогда
			// сделаем отступ от основной таблицы
			ОбластьПробел = Макет.ПолучитьОбласть("Пробел");
			ТабДокумент.Вывести(ОбластьПробел);
			
			ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицыТара|НомерСтрокиТара");
			ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицыТара|КолонкаКодовТара");
			ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицыТара|ДанныеТара");
			
			ТабДокумент.Вывести(ОбластьНомера);
			Если ВыводитьКоды Тогда
				ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьДанных);
			
			
			ОбластьКолонкаТара = Макет.Область("Тара");
			Если Не ВыводитьКоды Тогда
				ОбластьКолонкаТара.ШиринаКолонки = ОбластьКолонкаТара.ШиринаКолонки + 
				Макет.Область("КолонкаКодовТара").ШиринаКолонки;
			КонецЕсли;
			
	        ОбластьНомера = Макет.ПолучитьОбласть("СтрокаТара|НомерСтрокиТара");
			ОбластьКодов  = Макет.ПолучитьОбласть("СтрокаТара|КолонкаКодовТара");
			ОбластьДанных = Макет.ПолучитьОбласть("СтрокаТара|ДанныеТара");
			
			СуммаТара    = 0;
			
			Для каждого ВыборкаСтрокТара Из ЗапросТара Цикл 
				
				Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТара.Номенклатура) Тогда
					Сообщить(НСтр("ru='В одной из строк не заполнено значение тары - строка при печати пропущена.';uk='В одному з рядків не заповнене значення тари - рядок під час друку буде пропущений.'"), СтатусСообщения.Важное);
					Продолжить;
				КонецЕсли;
				
				ОбластьНомера.Параметры.НомерСтроки = ЗапросТара.Индекс(ВыборкаСтрокТара) + 1;
				ТабДокумент.Вывести(ОбластьНомера);
				
				Если ВыводитьКоды Тогда
					Если Колонка = "Артикул" Тогда
						ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТара.Артикул;
					Иначе
						ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТара.Код;
					КонецЕсли;
					ТабДокумент.Присоединить(ОбластьКодов);
				КонецЕсли;
				
				ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТара);
				ОбластьДанных.Параметры.Товар = СокрЛП(ВыборкаСтрокТара.Товар);
				ТабДокумент.Присоединить(ОбластьДанных);
			
				СуммаТара = СуммаТара + ВыборкаСтрокТара.Сумма;
				
				
			КонецЦикла;
			
			// Вывести Итого
			ОбластьМакета = Макет.ПолучитьОбласть("ИтогоТара");
			ОбластьМакета.Параметры.Всего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаТара);
			ТабДокумент.Вывести(ОбластьМакета);
			
			// сделаем отступ 
			ТабДокумент.Вывести(ОбластьПробел);
		КонецЕсли;
		
		// Вывести Сумму прописью
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС);
		
		// НМА
		СуммаКПрописи = СуммаКПрописи + СуммаНМА + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДСНМА);
		
		ОбластьМакета.Параметры.ИтоговаяСтрока = НСтр("ru='Всего наименований ';uk='Всього найменувань '",КодЯзыкаПечать) + (ЗапросТовары.Количество() + ЗапросНМА.Количество()) + "," +
												 НСтр("ru=' на сумму ';uk=' на суму '",КодЯзыкаПечать)  + ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаКПрописи, Шапка.ВалютаДокумента)
												 + ?(ЗапросТара.Количество() = 0, "",  НСтр("ru='; возвратная тара ';uk='; зворотна тара '",КодЯзыкаПечать) + ЗапросТара.Количество() + НСтр("ru=', на сумму ';uk=', на суму '",КодЯзыкаПечать) + ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаТара, Шапка.ВалютаДокумента)) + ".";
												 
		ОбластьМакета.Параметры.СуммаПрописью  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаКПрописи, Шапка.ВалютаДокумента,КодЯзыкаПечать)
		 										 + ?(НЕ УчитыватьНДС, "", Символы.ПС + НСтр("ru='В т.ч. НДС: ';uk='У т.ч. ПДВ: '",КодЯзыкаПечать) + ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаНДС+СуммаНДСНМА, Шапка.ВалютаДокумента, КодЯзыкаПечать));

		ТабДокумент.Вывести(ОбластьМакета);

		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);

	КонецЦикла;	
	
	Возврат ТабДокумент;

КонецФункции // ПечатьСчетПоставщика()

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Счет на оплату
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетЗаказ";
	КомандаПечати.Представление = НСтр("ru='Счет на оплату';uk='Рахунок на оплату'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Счет на оплату поставщика""';uk='Реєстр документів ""Рахунок на оплату постачальника""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетЗаказ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СчетЗаказ", НСтр("ru='Счет на оплату';uk='Рахунок на оплату'"), 
			ПечатьСчетПоставщика(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,"Документ.СчетНаОплатуПоставщика.ПФ_MXL_Счет", , Истина);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли