#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();		
	КонецЕсли;
	
	// Уведомим о появлении функционала рабочей даты
	ЭтаФорма.НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях("РабочаяДатаИзДокумента");
	 
	// Показываем, если это новый документ и сама рабочая дата еще не установлена.
	ЭтаФорма.НастройкиПредупреждений.РабочаяДатаИзДокумента = ЭтаФорма.НастройкиПредупреждений.РабочаяДатаИзДокумента
	 	И ЭтаФорма.Параметры.Ключ.Пустая()
	  	И НЕ ЗначениеЗаполнено(БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("РабочаяДата"));	  
		
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов 	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "РегистрСведений.СоставКомиссий.Форма.ФормаВыбора" Тогда
		ЗаполнитьЗначенияСвойств(Объект, ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если  ТипЗнч(Параметр) = Тип("Структура") 
		И Параметр.Свойство("ИдентификаторВызывающейФормы")
		И Параметр.ИдентификаторВызывающейФормы = УникальныйИдентификатор Тогда 			
		
		Если ИмяСобытия = "СозданЛабораторныйАнализ" ИЛИ ИмяСобытия = "ИзмененЛабораторныйАнализ" Тогда
			
			Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСписокКультур Тогда
				ТекущаяСтраница = "СписокНоменклатуры";
			ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСписокТТН Тогда
				ТекущаяСтраница = "СписокТТН";
			КонецЕсли;
			
			ТекущиеДанные = Элементы[ТекущаяСтраница].ТекущиеДанные;		
			
			Если ИНАГРО_Элеватор.ЛабораторныйАнализПроверкаЗаполнения(Параметр.ДокументСсылка, ПолучитьПараметрыДляПроверкиЗаполнения(ТекущиеДанные)) Тогда
				ТекущиеДанные.ЛабораторныйАнализ = Параметр.ДокументСсылка;
				Если ТекущаяСтраница = "СписокНоменклатуры" Тогда 
					СписокНоменклатурыЛабораторныйАнализПриИзменении(Неопределено);
				ИначеЕсли ТекущаяСтраница = "СписокТТН" Тогда
					СписокТТНЛабораторныйАнализПриИзменении(Неопределено);
				КонецЕсли;
				Модифицированность = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	КонецЕсли;	
			
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;
	
	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ИНАГРО_ЭлеваторКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, ТекущаяДатаДокумента);

	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		ДатаПриИзмененииНаСервере();
	КонецЕсли;
		
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		
		ПараметрыОтбораДоговора = ПолучитьПараметрыДляДоговоров();		
		
		ИНАГРО_ЭлеваторЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(Объект.Дата, Объект.Организация, Объект.Владелец, Объект.ДоговорКонтрагента, ПараметрыОтбораДоговора);
		
		ВладелецПриИзмененииНаСервере();

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеДвиженияФормы36НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.ОписаниеДвиженияФормы36",
		НСтр("ru='Описание движения формы 36';uk='Опис руху форми 36'"));

КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокНоменклатуры

&НаКлиенте
Процедура СписокНоменклатурыЛабораторныйАнализПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокНоменклатуры.ТекущиеДанные; 	
	
	ДанныеСтрокиТаблицы = Новый Структура(
		"ЛабораторныйАнализ, НомерАнализа, Влажность, 
		|СорнаяПримесь, ЗерноваяПримесь");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные); 

	ИНАГРО_Элеватор.ЛабораторныйАнализПриИзмененииНаСервере(ДанныеСтрокиТаблицы);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);
		
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыЛабораторныйАнализНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ПараметрыОтбора.Вставить("Организация",        	Объект.Организация);		
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		ПараметрыОтбора.Вставить("Владелец",           	Объект.Владелец);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		ПараметрыОтбора.Вставить("ДоговорКонтрагента", 	Объект.ДоговорКонтрагента);		
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		ПараметрыОтбора.Вставить("Склад",              	Объект.Склад);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.ВидХранения) Тогда
		ПараметрыОтбора.Вставить("ВидХранения",        	Объект.ВидХранения);
	КонецЕсли;		
	Если ЗначениеЗаполнено(Объект.Урожай) Тогда
		ПараметрыОтбора.Вставить("Урожай",       		Объект.Урожай);
	КонецЕсли;
	
	ТекущиеДанные = Элементы.СписокНоменклатуры.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		ПараметрыОтбора.Вставить("Номенклатура",       	ТекущиеДанные.Номенклатура);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор",  ПараметрыОтбора);
	ПараметрыФормы.Вставить("Ссылка", Объект.Ссылка);
	
	ОткрытьФорму("Документ.ИНАГРО_ЛабораторныйАнализ.Форма.ФормаВыбора", ПараметрыФормы, Элемент, УникальныйИдентификатор, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокТТН

&НаКлиенте
Процедура СписокТТНТТНПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокТТН.ТекущиеДанные;
	
	ДанныеСтрокиТаблицы = Новый Структура("НомерТТН, ТТН, Номенклатура, Вес");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
	
	СписокТТНТТНПриИзмененииНаСервере(ДанныеСтрокиТаблицы);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);
	
	ЗаполнитьСписокНоменклатуры();
	
КонецПроцедуры

&НаСервере
Процедура СписокТТНТТНПриИзмененииНаСервере(СтрокаТабличнойЧасти)
	
	РезультатЗапроса = СформироватьЗапросПоТТНВывоз(СтрокаТабличнойЧасти.ТТН);
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл                           		
		СтрокаТабличнойЧасти.НомерТТН     = Выборка.НомерТТН;
		СтрокаТабличнойЧасти.Номенклатура = Выборка.Номенклатура;
		СтрокаТабличнойЧасти.Вес          = Выборка.Вес;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура СписокТТНЛабораторныйАнализПриИзменении(Элемент)

	ТекущиеДанные = Элементы.СписокТТН.ТекущиеДанные; 	
	
	ДанныеСтрокиТаблицы = Новый Структура(
		"ЛабораторныйАнализ, НомерАнализа, Влажность, 
		|СорнаяПримесь, ЗерноваяПримесь");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные); 

	ИНАГРО_Элеватор.ЛабораторныйАнализПриИзмененииНаСервере(ДанныеСтрокиТаблицы);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);
		
КонецПроцедуры

&НаКлиенте
Процедура СписокТТНЛабораторныйАнализНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ПараметрыОтбора.Вставить("Организация",        	Объект.Организация);		
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		ПараметрыОтбора.Вставить("Владелец",           	Объект.Владелец);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		ПараметрыОтбора.Вставить("ДоговорКонтрагента", 	Объект.ДоговорКонтрагента);		
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		ПараметрыОтбора.Вставить("Склад",              	Объект.Склад);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.ВидХранения) Тогда
		ПараметрыОтбора.Вставить("ВидХранения",        	Объект.ВидХранения);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.Урожай) Тогда
		ПараметрыОтбора.Вставить("Урожай",       		Объект.Урожай);
	КонецЕсли;	
	
	ТекущиеДанные = Элементы.СписокТТН.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		ПараметрыОтбора.Вставить("Номенклатура",       	ТекущиеДанные.Номенклатура);
	КонецЕсли;	
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор",  ПараметрыОтбора);
	ПараметрыФормы.Вставить("Ссылка", Объект.Ссылка);
	
	ОткрытьФорму("Документ.ИНАГРО_ЛабораторныйАнализ.Форма.ФормаВыбора", ПараметрыФормы, Элемент, УникальныйИдентификатор, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура СписокТТНПослеУдаления(Элемент)
	
	ЗаполнитьСписокНоменклатуры();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьПериод(Команда)

	ПараметрыФормыВыбора = Новый Структура("НачалоПериода, КонецПериода", Объект.ДатаНачала, Объект.ДатаОкончания);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыФормыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ДатаНачала	 = РезультатВыбора.НачалоПериода;
	Объект.ДатаОкончания = РезультатВыбора.КонецПериода;		
		
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЛабораторныйАнализ(Команда)
	
	Если ТекущийЭлемент = Элементы.СписокНоменклатуры ИЛИ ТекущийЭлемент = Элементы.СписокТТН Тогда
		
		ИмяТабличнойЧасти = ТекущийЭлемент.Имя;
		
		ТекущиеДанные = Элементы[ИмяТабличнойЧасти].ТекущиеДанные;
		
		Если Объект[ИмяТабличнойЧасти].Количество() = 0 ИЛИ ТекущиеДанные = Неопределено Тогда			
			Возврат;
		Иначе
			
			ЗначенияЗаполнения = Новый Структура;
			ЗначенияЗаполнения.Вставить("Дата",               Объект.Дата);
			ЗначенияЗаполнения.Вставить("Ссылка",             ПредопределенноеЗначение("Документ.ИНАГРО_ЛабораторныйАнализ.ПустаяСсылка"));
			ЗначенияЗаполнения.Вставить("Организация",        Объект.Организация);
			ЗначенияЗаполнения.Вставить("Владелец",			  Объект.Владелец);
			ЗначенияЗаполнения.Вставить("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
			ЗначенияЗаполнения.Вставить("Склад",              Объект.Склад);
			ЗначенияЗаполнения.Вставить("ВидХранения",        Объект.ВидХранения);
			ЗначенияЗаполнения.Вставить("Урожай",             Объект.Урожай);
			ЗначенияЗаполнения.Вставить("Номенклатура",       ТекущиеДанные.Номенклатура);
			
			ИНАГРО_ЭлеваторКлиент.СоздатьДокументНаОсновании(ЭтаФорма, ЗначенияЗаполнения);
			
		КонецЕсли;

	Иначе
		
		ТекстСообщения = НСтр("ru='Лабораторный анализ можно создать только для строки табличной части!';uk='Лабораторний аналіз можна створити тільки для рядка табличної частини!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.СписокНоменклатуры");
		ТекущийЭлемент = Элементы.СписокНоменклатуры;
			
		Возврат;	

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Объект.СписокТТН.Количество() > 0 ИЛИ Объект.СписокНоменклатуры.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьСписокТТНИНоменклатурыЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru='Табличные поля будут очищены. Продолжить?';uk='Табличні поля будуть очищені. Продовжити?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Иначе
		ЗаполнитьСписокТТНИНоменклатуры();
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокТТНИНоменклатурыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли; 	
	
		Объект.СписокТТН.Очистить();
		Объект.СписокНоменклатуры.Очистить();
		
		ЗаполнитьСписокТТНИНоменклатуры(); 		
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокТТНИНоменклатуры()
		
	ЗаполнитьПоТТНВывозНаСервере();
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.СписокТТН Цикл		
		СписокТТНТТНПриИзмененииНаСервере(СтрокаТабличнойЧасти);
	КонецЦикла;
	
	ЗаполнитьСписокНоменклатуры();		

	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСоставКомиссии(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);

	ПараметрыФормы.Вставить("Отбор", Новый Структура("Организация", Объект.Организация));
	ОткрытьФорму("РегистрСведений.СоставКомиссий.Форма.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	
	ТекущаяДатаДокумента = Объект.Дата;
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма);
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоТТНВывозНаСервере();

	РезультатЗапроса = СформироватьЗапросПоТТНВывоз();
	
	Объект.СписокТТН.Загрузить(РезультатЗапроса.Выгрузить());	
	
КонецПроцедуры

&НаСервере
Функция СформироватьЗапросПоТТНВывоз(ТТН = Неопределено) 
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",        Объект.Организация);
	Запрос.УстановитьПараметр("Владелец",           Объект.Владелец);
	Запрос.УстановитьПараметр("Склад",              Объект.Склад);
	Запрос.УстановитьПараметр("Урожай",             Объект.Урожай);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("ВидХранения",        Объект.ВидХранения);
	
	Запрос.УстановитьПараметр("ДатаНач",            Объект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКон",            Объект.ДатаОкончания);
	
	Запрос.УстановитьПараметр("ВывозФасованного",   Перечисления.ИНАГРО_ВидыОперацийТТНВывоз.ВывозФасованного);
	Запрос.УстановитьПараметр("ВидТМЦ",             Перечисления.ИНАГРО_ВидыТМЦ.Кат3);
	
	Если ТТН <> Неопределено Тогда
		Запрос.УстановитьПараметр("Ссылка",         ТТН);	
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ИНАГРО_ТТНВывоз.Номер КАК НомерТТН,
	|	ИНАГРО_ТТНВывоз.Ссылка КАК ТТН,
	|	ВЫБОР
	|		КОГДА ИНАГРО_ТТНВывоз.ВидОперации = &ВывозФасованного
	|			ТОГДА ИНАГРО_ТТНВывозСписокНоменклатуры.Номенклатура
	|		ИНАЧЕ ИНАГРО_ТТНВывоз.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ИНАГРО_ТТНВывоз.ВидОперации = &ВывозФасованного
	|			ТОГДА ИНАГРО_ТТНВывозСписокНоменклатуры.Урожай
	|		ИНАЧЕ ИНАГРО_ТТНВывоз.Урожай
	|	КОНЕЦ КАК Урожай,
	|	ВЫБОР
	|		КОГДА ИНАГРО_ТТНВывоз.ВидОперации = &ВывозФасованного
	|			ТОГДА NULL
	|		ИНАЧЕ ИНАГРО_ТТНВывоз.ЛабораторныйАнализ
	|	КОНЕЦ КАК ЛабораторныйАнализ,
	|	ВЫБОР
	|		КОГДА ИНАГРО_ТТНВывоз.ВидОперации = &ВывозФасованного
	|			ТОГДА NULL
	|		ИНАЧЕ ИНАГРО_ТТНВывоз.НомерАнализа
	|	КОНЕЦ КАК НомерАнализа,
	|	ВЫБОР
	|		КОГДА ИНАГРО_ТТНВывоз.ВидОперации = &ВывозФасованного
	|			ТОГДА NULL
	|		ИНАЧЕ ИНАГРО_ТТНВывоз.Влажность
	|	КОНЕЦ КАК Влажность,
	|	ВЫБОР
	|		КОГДА ИНАГРО_ТТНВывоз.ВидОперации = &ВывозФасованного
	|			ТОГДА NULL
	|		ИНАЧЕ ИНАГРО_ТТНВывоз.СорнаяПримесь
	|	КОНЕЦ КАК СорнаяПримесь,
	|	ВЫБОР
	|		КОГДА ИНАГРО_ТТНВывоз.ВидОперации = &ВывозФасованного
	|			ТОГДА NULL
	|		ИНАЧЕ ИНАГРО_ТТНВывоз.ЗерноваяПримесь
	|	КОНЕЦ КАК ЗерноваяПримесь,
	|	ВЫБОР
	|		КОГДА ИНАГРО_ТТНВывоз.ВидОперации = &ВывозФасованного
	|			ТОГДА ИНАГРО_ТТНВывозСписокНоменклатуры.Вес
	|		ИНАЧЕ ИНАГРО_ТТНВывоз.Вес
	|	КОНЕЦ КАК Вес ";
	Запрос.Текст = Запрос.Текст + " ПОМЕСТИТЬ ТТНВывоз
	|ИЗ
	|	Документ.ИНАГРО_ТТНВывоз КАК ИНАГРО_ТТНВывоз
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_ТТНВывоз.СписокНоменклатуры КАК ИНАГРО_ТТНВывозСписокНоменклатуры
	|		ПО ИНАГРО_ТТНВывоз.Ссылка = ИНАГРО_ТТНВывозСписокНоменклатуры.Ссылка
	|ГДЕ
	|	ИНАГРО_ТТНВывоз.Проведен = ИСТИНА
	|	И ИНАГРО_ТТНВывоз.Организация = &Организация
	|	И ИНАГРО_ТТНВывоз.Владелец = &Владелец
	|	И ИНАГРО_ТТНВывоз.Склад = &Склад
	|	И ИНАГРО_ТТНВывоз.Урожай = &Урожай
	|	И ИНАГРО_ТТНВывоз.ДоговорКонтрагента = &ДоговорКонтрагента
	|	И ИНАГРО_ТТНВывоз.ВидХранения = &ВидХранения
	|	И ИНАГРО_ТТНВывоз.Дата МЕЖДУ &ДатаНач И &ДатаКон"
	+ ?(ТТН <> Неопределено, " И ИНАГРО_ТТНВывоз.Ссылка = &Ссылка ", "") + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТНВывоз.НомерТТН,
	|	ТТНВывоз.ТТН,
	|	ТТНВывоз.Номенклатура,
	|	ТТНВывоз.Урожай,
	|	ТТНВывоз.Вес";
	Запрос.Текст =Запрос.Текст +"	ИЗ
	|	ТТНВывоз КАК ТТНВывоз
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_ДополнительныеРеквизитыНоменклатуры КАК ИНАГРО_ДополнительныеРеквизитыНоменклатуры
	|		ПО ТТНВывоз.Номенклатура = ИНАГРО_ДополнительныеРеквизитыНоменклатуры.Номенклатура
	|ГДЕ
	|	ИНАГРО_ДополнительныеРеквизитыНоменклатуры.ВидТМЦ = &ВидТМЦ";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокНоменклатуры()
	
	ТаблицаЗначений = Объект.СписокТТН.Выгрузить();
	ТаблицаЗначений.Свернуть("Номенклатура, ЛабораторныйАнализ, НомерАнализа, Влажность, СорнаяПримесь, ЗерноваяПримесь", "Вес");
	
	Объект.СписокНоменклатуры.Загрузить(ТаблицаЗначений);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыДляДоговоров()

	ПараметрыОтбора = Новый Структура("ВидХранения, Урожай");
	ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Объект);

	Возврат ПараметрыОтбора;

КонецФункции

&НаКлиенте
Функция ПолучитьПараметрыДляПроверкиЗаполнения(СтрокаТабличнойЧасти)
	
	ПараметрыДляПроверкиЗаполнения = Новый Структура("Склад, ВидХранения, Урожай");
	ЗаполнитьЗначенияСвойств(ПараметрыДляПроверкиЗаполнения, Объект);
	ПараметрыДляПроверкиЗаполнения.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);

	Возврат ПараметрыДляПроверкиЗаполнения; 

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти