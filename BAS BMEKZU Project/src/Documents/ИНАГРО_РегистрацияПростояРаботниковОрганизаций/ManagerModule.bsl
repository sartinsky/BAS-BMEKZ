#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПроцедурыИФункцииПечати
	
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
	//// Команда печати Средняя
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "Средняя";
	//КомандаПечати.Представление = НСтр("ru='Расчет средней';uk='Розрахунок середньої'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	//
	//// Реестр документов
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "Реестр";
	//КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	//КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Регистрация простоев работников организаций""';uk='Реєстр документів ""Реєстрація простоїв робітників організацій""'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	//КомандаПечати.СписокФорм    = "ФормаСписка";
	//КомандаПечати.Порядок       = 100;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

		// Средняя
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Средняя")  Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Средняя", НСтр("ru='Расчет средней';uk='Розрахунок середньої'"), 
		ПечатьСредняя(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_РегистрацияПростояРаботниковОрганизаций.ПФ_MXL_Средняя", ,Истина);
		
	КонецЕсли; 	
	
КонецПроцедуры

// Печать формы Средняя
Функция ПечатьСредняя(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеОтпускаРаботникамОрганизаций_Средняя";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РегистрацияПростояРаботниковОрганизаций.ПФ_MXL_Средняя");
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
			
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Простои.ДатаНачала КАК ДатаНачала,
		|	Простои.ДатаОкончания КАК ДатаОкончания
		|ИЗ
		|	Документ.ИНАГРО_РегистрацияПростояРаботниковОрганизаций КАК Простои
		|ГДЕ
		|	Простои.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		ВыборкаПериод = Запрос.Выполнить().Выбрать();
		ДатаНачала = "";
		ДатаОкончания = "";
		Если ВыборкаПериод.Следующий() Тогда
			ДатаНачала = ВыборкаПериод.ДатаНачала;
			ДатаОкончания = ВыборкаПериод.ДатаОкончания;
		КонецЕсли;
		
		ТабельныйНомер = Ссылка.Сотрудник.ИНАГРО_ТабельныйНомер;
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Заполнить(Ссылка);
		ОбластьШапка.Параметры.ТабельныйНомер = ТабельныйНомер;
		ОбластьШапка.Параметры.Дата = Формат(Ссылка.Дата,"ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.ДатаНачала = Формат(ДатаНачала,"ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.ДатаОкончания = Формат(ДатаОкончания,"ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.ПериодРасчетаСреднегоНачало = Формат(Ссылка.ПериодРасчетаСреднегоНачало,"ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.ПериодРасчетаСреднегоКонец = Формат(Ссылка.ПериодРасчетаСреднегоКонец,"ДФ=dd.MM.yyyy");
		ТабДокумент.Вывести(ОбластьШапка);
		
		ОбластьСтроки = Макет.ПолучитьОбласть("СтрокаСреднего");
		
		ТабСредняя = Ссылка.РасчетСреднего.Выгрузить();
		
		Запрос_Средняя = Новый Запрос;
		Запрос_Средняя.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                       |	ИНАГРО_РегистрацияПростояРаботниковОрганизацийРасчетСреднего.БазовыйПериодНачало КАК БазовыйПериодНачало,
		                       |	ИНАГРО_РегистрацияПростояРаботниковОрганизацийРасчетСреднего.КоэффициентПовышенияОкладов КАК КоэффициентПовышенияОкладов,
		                       |	ИНАГРО_РегистрацияПростояРаботниковОрганизацийРасчетСреднего.ВидРасчета КАК ВидРасчета,
		                       |	СУММА(ИНАГРО_РегистрацияПростояРаботниковОрганизацийРасчетСреднего.Результат) КАК Результат,
		                       |	СУММА(ИНАГРО_РегистрацияПростояРаботниковОрганизацийРасчетСреднего.КалендарныеДни) КАК КалендарныеДни,
		                       |	СУММА(ИНАГРО_РегистрацияПростояРаботниковОрганизацийРасчетСреднего.ОтработаноДней) КАК ОтработаноДней,
		                       |	СУММА(ИНАГРО_РегистрацияПростояРаботниковОрганизацийРасчетСреднего.ОтработаноЧасов) КАК ОтработаноЧасов
		                       |ИЗ
		                       |	Документ.ИНАГРО_РегистрацияПростояРаботниковОрганизаций.РасчетСреднего КАК ИНАГРО_РегистрацияПростояРаботниковОрганизацийРасчетСреднего
		                       |ГДЕ
		                       |	ИНАГРО_РегистрацияПростояРаботниковОрганизацийРасчетСреднего.Ссылка = &Ссылка
		                       |
		                       |СГРУППИРОВАТЬ ПО
		                       |	ИНАГРО_РегистрацияПростояРаботниковОрганизацийРасчетСреднего.ВидРасчета,
		                       |	ИНАГРО_РегистрацияПростояРаботниковОрганизацийРасчетСреднего.БазовыйПериодНачало,
		                       |	ИНАГРО_РегистрацияПростояРаботниковОрганизацийРасчетСреднего.КоэффициентПовышенияОкладов
		                       |
		                       |УПОРЯДОЧИТЬ ПО
		                       |	БазовыйПериодНачало,
		                       |	КоэффициентПовышенияОкладов
		                       |ИТОГИ ПО
		                       |	ОБЩИЕ,
		                       |	БазовыйПериодНачало,
		                       |	КоэффициентПовышенияОкладов,
		                       |	ВидРасчета";
	
		Запрос_Средняя.УстановитьПараметр("Ссылка", Ссылка);
		ТабСредняя = Запрос_Средняя.Выполнить().Выгрузить();
		
		Рез = Запрос_Средняя.Выполнить();
		Результат = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидРасчета");
		
		ОбластьШапкаРасчетСреднего_Начало 	 = Макет.ПолучитьОбласть("ШапкаСредней|Начало");
		ОбластьШапкаРасчетСреднего_ВидРасчета = Макет.ПолучитьОбласть("ШапкаСредней|ВидРасчета");
		ОбластьШапкаРасчетСреднего_Конец 	 = Макет.ПолучитьОбласть("ШапкаСредней|КонецСредней");
		
		СтрокаСреднего_Начало				 = Макет.ПолучитьОбласть("СтрокаСреднего|Начало");
		СтрокаСреднего_ВидРасчета            = Макет.ПолучитьОбласть("СтрокаСреднего|ВидРасчета");
		СтрокаСреднего_Конец                 = Макет.ПолучитьОбласть("СтрокаСреднего|Конец");
		
		ТабДокумент.Вывести(ОбластьШапкаРасчетСреднего_Начало);
		
		КоличествоВставляемыхОбластей = 0;
		ДоходТекст = НСтр("ru = 'Доход'; uk = 'Дохід'",КодЯзыкаПечать);
		
		Пока Результат.Следующий() Цикл
			ОбластьШапкаРасчетСреднего_ВидРасчета.Параметры.ДоходТекст = ДоходТекст;
			ОбластьШапкаРасчетСреднего_ВидРасчета.Параметры.ВидРасчета = Результат.ВидРасчета;
			ТабДокумент.Присоединить(ОбластьШапкаРасчетСреднего_ВидРасчета);
			КоличествоВставляемыхОбластей = КоличествоВставляемыхОбластей + 1;
			//ДоходТекст = "";
		КонецЦикла;
		
		ТабДокумент.Присоединить(ОбластьШапкаРасчетСреднего_Конец);
		
		ВыборкаПериод = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "БазовыйПериодНачало");
		
		Пока ВыборкаПериод.Следующий() Цикл
			СтрокаСреднего_Начало.Параметры.Год   =	Формат(Год(ВыборкаПериод.БазовыйПериодНачало),"ЧГ=0");	
			СтрокаСреднего_Начало.Параметры.Месяц = ВыборкаПериод.БазовыйПериодНачало;
			ТабДокумент.Вывести(СтрокаСреднего_Начало);
			
			ВыборкаВидРасчета = ВыборкаПериод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидРасчета");
			Пока ВыборкаВидРасчета.Следующий() Цикл
				
				СтрокаСреднего_ВидРасчета.Параметры.Результат = ВыборкаВидРасчета.Результат;
				ТабДокумент.Присоединить(СтрокаСреднего_ВидРасчета);
				
				ВыборкаДетали = ВыборкаВидРасчета.Выбрать();
				Пока ВыборкаДетали.Следующий() Цикл
					СтрокаСреднего_Конец.Параметры.КоэффициентПовышенияОкладов = ВыборкаДетали.КоэффициентПовышенияОкладов;
				КонецЦикла;
				
			КонецЦикла;
			
			СтрокаСреднего_Конец.Параметры.ОтработаноДней = ВыборкаПериод.ОтработаноДней;	
			СтрокаСреднего_Конец.Параметры.ОтработаноЧасов = ВыборкаПериод.ОтработаноЧасов;	
			СтрокаСреднего_Конец.Параметры.КалендарныеДни = ВыборкаПериод.КалендарныеДни;	
			
			ТабДокумент.Присоединить(СтрокаСреднего_Конец);	
		КонецЦикла;
		
		ОбластьИтогиСреднего_Начало	= Макет.ПолучитьОбласть("ИтогиСреднего|Начало");
		ОбластьИтогиСреднего_ВидРасчета	= Макет.ПолучитьОбласть("ИтогиСреднего|ВидРасчета");
		ОбластьИтогиСреднего_Конец = Макет.ПолучитьОбласть("ИтогиСреднего|КОНЕЦ");
		
		ОбластьИтогиСреднего_ВидРасчета.Параметры.Результат			= табСредняя.Итог("Результат");
		
		ТабДокумент.Вывести(ОбластьИтогиСреднего_Начало);
		Результат.Сбросить();
		ВыборкаВидРасчета = Результат;
		Пока ВыборкаВидРасчета.Следующий() Цикл
			ОбластьИтогиСреднего_ВидРасчета.Параметры.Результат = ВыборкаВидРасчета.Результат;
			ТабДокумент.Присоединить(ОбластьИтогиСреднего_ВидРасчета);
		КонецЦикла;
		
		Выборка = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
		Пока Выборка.Следующий() Цикл
			ОбластьИтогиСреднего_Конец.Параметры.ОтработаноДней		= Выборка.ОтработаноДней;
			ОбластьИтогиСреднего_Конец.Параметры.ОтработаноЧасов	= Выборка.ОтработаноЧасов;
			ОбластьИтогиСреднего_Конец.Параметры.КалендарныеДни		= Выборка.КалендарныеДни;
		КонецЦикла;
		
		ТабДокумент.Присоединить(ОбластьИтогиСреднего_Конец);
		
		ОбластьШапка2 = Макет.ПолучитьОбласть("Шапка2");
		Если Ссылка.Начисления.Количество() > 0 Тогда
			ОбластьШапка2.Параметры.СреднедневнаяТекст = ?(Ссылка.Начисления[0].ГрафикРаботы.СуммированныйУчетРабочегоВремени,НСтр("ru='Среднечасовая заработная плата:';uk='Середньогодинна заробітна плата:'",КодЯзыкаПечать), НСтр("ru='Среднедневная заработная плата:';uk='Середньоденна заробітна плата:'",КодЯзыкаПечать));
		КонецЕсли;
		ОбластьШапка2.Параметры.СуммаСредней = Ссылка.СуммаСредней;
		ТабДокумент.Вывести(ОбластьШапка2);
		
		ОбластьСтроки2 = Макет.ПолучитьОбласть("СтрокаНачисления");
		
		Для Каждого СтрокаТЧ Из Ссылка.Начисления Цикл
			ОбластьСтроки2.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(ОбластьСтроки2);
		КонецЦикла;
		
		ОбластьИтогиНачислений = Макет.ПолучитьОбласть("ИтогиНачислений");
		ОбластьИтогиНачислений.Параметры.НормаДней = Ссылка.Начисления.Итог("НормаДней");
		ОбластьИтогиНачислений.Параметры.НормаЧасов = Ссылка.Начисления.Итог("НормаЧасов");
		ОбластьИтогиНачислений.Параметры.КалендарныеДни = Ссылка.Начисления.Итог("КалендарныеДни");
		ОбластьИтогиНачислений.Параметры.Результат = Ссылка.Начисления.Итог("Результат");
		ТабДокумент.Вывести(ОбластьИтогиНачислений);
		
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Ответственный = Ссылка.Ответственный.ФизическоеЛицо.Наименование;
		ТабДокумент.Вывести(ОбластьПодвал);	
		
		ОбластьДляОбъединения = ТабДокумент.Область(16,4,16,4+КоличествоВставляемыхОбластей-1);
		ОбластьДляОбъединения.Объединить();
		
		Возврат ТабДокумент;
	КонецЦикла;

КонецФункции  

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
