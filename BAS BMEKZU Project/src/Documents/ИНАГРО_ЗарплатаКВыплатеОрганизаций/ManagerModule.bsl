#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	ЗначениеРеквизита = Новый Массив;
	ЗначениеРеквизита.Добавить(Справочники.ВидыВыплат.ОчереднаяВзносы);
	ЗначениеРеквизита.Добавить(Справочники.ВидыВыплат.ОчереднаяПогашениеДолговВзносы);
	ЗначениеРеквизита.Добавить(Справочники.ВидыВыплат.НДФЛКонтрагентам);
	ЗначениеРеквизита.Добавить(Справочники.ВидыВыплат.НДФЛБезВыплатыЗарплаты);
	
	// Ведомость
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Ведомость";
	КомандаПечати.Представление = НСтр("ru='Ведомость';uk='Відомість'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка,ФормаВыбора";
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидВыплаты",
		 ЗначениеРеквизита, ВидСравненияКомпоновкиДанных.НеВСписке);
	
	// Ведомость (касса)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВедомостьКасса";
	КомандаПечати.Представление = НСтр("ru='Ведомость (касса)';uk='Відомість (каса)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка,ФормаВыбора";
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидВыплаты",
		 ЗначениеРеквизита, ВидСравненияКомпоновкиДанных.НеВСписке);
		 
	// Ведомость (банк)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВедомостьБанк";
	КомандаПечати.Представление = НСтр("ru='Ведомость (банк)';uk='Відомість (банк)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидВыплаты",
		 ЗначениеРеквизита, ВидСравненияКомпоновкиДанных.НеВСписке);
		 
	// Список перечислений (банк)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Списокперечислений";
	КомандаПечати.Представление = НСтр("ru='Список перечислений (банк)';uk='Список перерахувань (банк)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента";
	ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ВидВыплаты",
		 ЗначениеРеквизита, ВидСравненияКомпоновкиДанных.НеВСписке);
		 
	// Налоги и взносы
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АвансНалоги";
	КомандаПечати.Представление = НСтр("ru='Налоги и взносы';uk='Податки та внески'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка,ФормаВыбора";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru='Реестр документов ""Зарплата к выплате организаций""';uk='Реєстр документів ""Зарплата до виплати організацій""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;

КонецПроцедуры

// Процедура осуществляет печать документа 
// Можно направить печать на экран или принтер, а также распечатать необходимое количество копий.
// Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии. 
// Параметры:
// НазваниеМакета - строка, название макета.
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Ведомость") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Ведомость", НСтр("ru='Ведомость';uk='Відомість'"), 
		ПечатьВедомость_2009(МассивОбъектов, ОбъектыПечати, ПараметрыВывода,"Ведомость"), , "Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПФ_MXL_Ведомость", ,Истина);
	КонецЕсли;  		
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВедомостьКасса") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ВедомостьКасса", НСтр("ru='Ведомость (касса)';uk='Відомість (каса)'"), 
		ПечатьВедомость_2009(МассивОбъектов, ОбъектыПечати, ПараметрыВывода,"ВедомостьКасса"), ,"Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПФ_MXL_Ведомость2018", , Истина);
	КонецЕсли;                         
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВедомостьБанк") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"ВедомостьБанк",НСтр("ru='Ведомость (банк)';uk='Відомість (банк)'"), 
		ПечатьВедомость_2009(МассивОбъектов, ОбъектыПечати, ПараметрыВывода,"ВедомостьБанк"), ,"Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПФ_MXL_Ведомость2018_банк", , Истина);
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписокПеречислений") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СписокПеречислений", НСтр("ru='Список перечислений';uk='Список перерахувань'"), 
		ПечатьСписокПеречислений(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПФ_MXL_СписокПеречислений", , Истина);
	КонецЕсли;	
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансНалоги") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"АвансНалоги",НСтр("ru='Налоги и взносы';uk='Податки та внески'"), 
		ПечатьНалоги(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), ,"Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПФ_MXL_АвансНалоги", , Истина);
	КонецЕсли;		
	
КонецПроцедуры

// Формирует запрос по документу
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросДляПечати(Режим, Ссылка, ПараметрыВывода, Банк = Неопределено)
	
	КодЯзыкаУкр = (ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм =  "uk");

	Запрос = Новый Запрос;
	
	МассивСотрудников = Ссылка.РаботникиОрганизации.ВыгрузитьКолонку("Сотрудник");
	МассивФизЛиц      = Новый Массив;
	
	Для Каждого Элемент Из МассивСотрудников Цикл
		МассивФизЛиц.Добавить(Элемент.ФизическоеЛицо);
	КонецЦикла;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",   Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента",	  Ссылка.Дата);
	Запрос.УстановитьПараметр("парамСотрудник",	  МассивСотрудников);
	Запрос.УстановитьПараметр("парамФизЛицо",	  МассивФизЛиц);
	Запрос.УстановитьПараметр("КодЯзыкаУкр",	  КодЯзыкаУкр);
	
	Если Режим = "ПоРеквизитамДокумента" Тогда
		
		Запрос.УстановитьПараметр("Руководитель",	  Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
		Запрос.УстановитьПараметр("ГлавныйБухгалтер", Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ЗарплатаКВыплатеОрганизаций.Номер КАК НомерДок,
			|	ЗарплатаКВыплатеОрганизаций.Дата КАК ДатаДок,
			|	ЗарплатаКВыплатеОрганизаций.Организация КАК Организация,
			|	ЗарплатаКВыплатеОрганизаций.Организация.НаименованиеПолное КАК НазваниеОрганизации,
			|	ЗарплатаКВыплатеОрганизаций.ПодразделениеОрганизации.Наименование КАК НазваниеПодразделенияОрганизации,
			|	ВЫБОР
			|		КОГДА ФИОФизЛицСрезПоследнихРуководитель.ФизическоеЛицо ЕСТЬ NULL
			|			ТОГДА ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.ФизическоеЛицо.Наименование
			|		ИНАЧЕ ФИОФизЛицСрезПоследнихРуководитель.Фамилия + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Имя, 1, 1) <> """"
			|					ТОГДА "" "" + ФИОФизЛицСрезПоследнихРуководитель.Имя 
			|				ИНАЧЕ """"
			|			КОНЕЦ + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Отчество, 1, 1) <> """"
			|					ТОГДА "" "" + ФИОФизЛицСрезПоследнихРуководитель.Отчество
			|				ИНАЧЕ """"
			|			КОНЕЦ
			|	КОНЕЦ КАК ФИОРуководителя,
			|	ВЫБОР
			|		КОГДА ФИОФизЛицСрезПоследнихГлБух.ФизическоеЛицо ЕСТЬ NULL
			|			ТОГДА ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.ФизическоеЛицо.Наименование
			|		ИНАЧЕ ФИОФизЛицСрезПоследнихГлБух.Фамилия + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Имя, 1, 1) <> """"
			|					ТОГДА "" "" + ФИОФизЛицСрезПоследнихГлБух.Имя
			|				ИНАЧЕ """"
			|			КОНЕЦ + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Отчество, 1, 1) <> """"
			|					ТОГДА "" "" + ФИОФизЛицСрезПоследнихГлБух.Отчество
			|				ИНАЧЕ """"
			|			КОНЕЦ
			|	КОНЕЦ КАК ФИОГлБуха,
			|	ЗарплатаКВыплатеОрганизаций.РаботникиОрганизации.(
			|		СУММА(Выплата) КАК СуммаДок
			|	) КАК СуммаДокумента,
			|	ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.Должность.Наименование КАК ДолжностьРуководителя,
			|	ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.Должность.Наименование КАК ДолжностьНаименование
			|ИЗ
			|	Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций КАК ЗарплатаКВыплатеОрганизаций
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &Руководитель) КАК ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследнихРуководитель
			|			ПО ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.ФизическоеЛицо = ФИОФизЛицСрезПоследнихРуководитель.ФизическоеЛицо
			|		ПО ЗарплатаКВыплатеОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.СтруктурнаяЕдиница
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &ГлавныйБухгалтер) КАК ОтветственныеЛицаОрганизацийСрезПоследнихГлБух
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследнихГлБух
			|			ПО ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.ФизическоеЛицо = ФИОФизЛицСрезПоследнихГлБух.ФизическоеЛицо
			|		ПО ЗарплатаКВыплатеОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.СтруктурнаяЕдиница
			|ГДЕ
			|	ЗарплатаКВыплатеОрганизаций.Ссылка = &ДокументСсылка";
		
	ИначеЕсли Режим = "ПоРеквизитамДокументаКасса" Тогда
		
		
		Запрос.УстановитьПараметр("Руководитель",	  Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
		Запрос.УстановитьПараметр("ГлавныйБухгалтер", Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
		Запрос.УстановитьПараметр("Касса", Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу);
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ЗарплатаКВыплатеОрганизаций.Номер КАК НомерДок,
			|	ЗарплатаКВыплатеОрганизаций.Дата КАК ДатаДок,
			|	ЗарплатаКВыплатеОрганизаций.Организация.НаименованиеПолное КАК НазваниеОрганизации,
			|	ЗарплатаКВыплатеОрганизаций.ПодразделениеОрганизации.Наименование КАК НазваниеПодразделенияОрганизации,
			|	ВЫБОР
			|		КОГДА ФИОФизЛицСрезПоследнихРуководитель.ФизическоеЛицо ЕСТЬ NULL
			|			ТОГДА ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.ФизическоеЛицо.Наименование
			|		ИНАЧЕ ФИОФизЛицСрезПоследнихРуководитель.Фамилия + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Имя, 1, 1) <> """"
			|					ТОГДА "" "" + ФИОФизЛицСрезПоследнихРуководитель.Имя
			|				ИНАЧЕ """"
			|			КОНЕЦ + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Отчество, 1, 1) <> """"
			|					ТОГДА "" "" + ФИОФизЛицСрезПоследнихРуководитель.Отчество
			|				ИНАЧЕ """"
			|			КОНЕЦ
			|	КОНЕЦ КАК ФИОРуководителя,
			|	ВЫБОР
			|		КОГДА ФИОФизЛицСрезПоследнихГлБух.ФизическоеЛицо ЕСТЬ NULL
			|			ТОГДА ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.ФизическоеЛицо.Наименование
			|		ИНАЧЕ ФИОФизЛицСрезПоследнихГлБух.Фамилия + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Имя, 1, 1) <> """"
			|					ТОГДА "" "" + ФИОФизЛицСрезПоследнихГлБух.Имя
			|				ИНАЧЕ """"
			|			КОНЕЦ + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Отчество, 1, 1) <> """"
			|					ТОГДА "" "" + ФИОФизЛицСрезПоследнихГлБух.Отчество
			|				ИНАЧЕ """"
			|			КОНЕЦ
			|	КОНЕЦ КАК ФИОГлБуха,
			|	Выплаты.СуммаДок КАК СуммаДокумента,
			|	ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.Должность.Наименование КАК ДолжностьРуководителя,
			|	ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.Должность.Наименование КАК ДолжностьНаименование
			|ИЗ
			|	Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций КАК ЗарплатаКВыплатеОрганизаций
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			СУММА(ЗарплатаКВыплатеОрганизаций.Выплата) КАК СуммаДок,
			|			ЗарплатаКВыплатеОрганизаций.Ссылка КАК Док
			|		ИЗ
			|			Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.РаботникиОрганизации КАК ЗарплатаКВыплатеОрганизаций
			|		ГДЕ
			|			ЗарплатаКВыплатеОрганизаций.Ссылка = &ДокументСсылка
			|			И ЗарплатаКВыплатеОрганизаций.СпособВыплаты = &Касса
			|		
			|		СГРУППИРОВАТЬ ПО
			|			ЗарплатаКВыплатеОрганизаций.Ссылка) КАК Выплаты
			|		ПО (ИСТИНА)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &Руководитель) КАК ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследнихРуководитель
			|			ПО ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.ФизическоеЛицо = ФИОФизЛицСрезПоследнихРуководитель.ФизическоеЛицо
			|		ПО ЗарплатаКВыплатеОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.СтруктурнаяЕдиница
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &ГлавныйБухгалтер) КАК ОтветственныеЛицаОрганизацийСрезПоследнихГлБух
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследнихГлБух
			|			ПО ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.ФизическоеЛицо = ФИОФизЛицСрезПоследнихГлБух.ФизическоеЛицо
			|		ПО ЗарплатаКВыплатеОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.СтруктурнаяЕдиница
			|ГДЕ
			|	ЗарплатаКВыплатеОрганизаций.Ссылка = &ДокументСсылка";	
		
	ИначеЕсли Режим = "ПоРеквизитамДокументаБанк" Тогда
		
		
		Запрос.УстановитьПараметр("Руководитель",	  Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
		Запрос.УстановитьПараметр("ГлавныйБухгалтер", Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
		Запрос.УстановитьПараметр("ЧерезБанк", Перечисления.СпособыВыплатыЗарплаты.ЧерезБанк);
		Запрос.УстановитьПараметр("Банк", Банк);
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ЗарплатаКВыплатеОрганизаций.Номер КАК НомерДок,
			|	ЗарплатаКВыплатеОрганизаций.Дата КАК ДатаДок,
			|	ЗарплатаКВыплатеОрганизаций.Организация.НаименованиеПолное КАК НазваниеОрганизации,
			|	ЗарплатаКВыплатеОрганизаций.ПодразделениеОрганизации.Наименование КАК НазваниеПодразделенияОрганизации,
			|	ВЫБОР
			|		КОГДА ФИОФизЛицСрезПоследнихРуководитель.ФизическоеЛицо ЕСТЬ NULL
			|			ТОГДА ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.ФизическоеЛицо.Наименование
			|		ИНАЧЕ ФИОФизЛицСрезПоследнихРуководитель.Фамилия + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Имя, 1, 1) <> """"
			|					ТОГДА "" "" + ФИОФизЛицСрезПоследнихРуководитель.Имя
			|				ИНАЧЕ """"
			|			КОНЕЦ + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихРуководитель.Отчество, 1, 1) <> """"
			|					ТОГДА "" "" + ФИОФизЛицСрезПоследнихРуководитель.Отчество
			|				ИНАЧЕ """"
			|			КОНЕЦ
			|	КОНЕЦ КАК ФИОРуководителя,
			|	ВЫБОР
			|		КОГДА ФИОФизЛицСрезПоследнихГлБух.ФизическоеЛицо ЕСТЬ NULL
			|			ТОГДА ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.ФизическоеЛицо.Наименование
			|		ИНАЧЕ ФИОФизЛицСрезПоследнихГлБух.Фамилия + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Имя, 1, 1) <> """"
			|					ТОГДА "" "" + ФИОФизЛицСрезПоследнихГлБух.Имя
			|				ИНАЧЕ """"
			|			КОНЕЦ + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследнихГлБух.Отчество, 1, 1) <> """"
			|					ТОГДА "" "" + ФИОФизЛицСрезПоследнихГлБух.Отчество
			|				ИНАЧЕ """"
			|			КОНЕЦ
			|	КОНЕЦ КАК ФИОГлБуха,
			|	Выплаты.СуммаДок КАК СуммаДокумента,
			|	ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.Должность.Наименование КАК ДолжностьРуководителя,
			|	ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.Должность.Наименование КАК ДолжностьНаименование
			|ИЗ
			|	Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций КАК ЗарплатаКВыплатеОрганизаций
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			СУММА(ЗарплатаКВыплатеОрганизаций.Выплата) КАК СуммаДок,
			|			ЗарплатаКВыплатеОрганизаций.Ссылка КАК Док
			|		ИЗ
			|			Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.РаботникиОрганизации КАК ЗарплатаКВыплатеОрганизаций
			|		ГДЕ
			|			ЗарплатаКВыплатеОрганизаций.Ссылка = &ДокументСсылка
			|			И ЗарплатаКВыплатеОрганизаций.СпособВыплаты = &ЧерезБанк
			|			И ЗарплатаКВыплатеОрганизаций.Банк = &Банк
			|		
			|		СГРУППИРОВАТЬ ПО
			|			ЗарплатаКВыплатеОрганизаций.Ссылка) КАК Выплаты
			|		ПО (ИСТИНА)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &Руководитель) КАК ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследнихРуководитель
			|			ПО ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.ФизическоеЛицо = ФИОФизЛицСрезПоследнихРуководитель.ФизическоеЛицо
			|		ПО ЗарплатаКВыплатеОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследнихРуководитель.СтруктурнаяЕдиница
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &ГлавныйБухгалтер) КАК ОтветственныеЛицаОрганизацийСрезПоследнихГлБух
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследнихГлБух
			|			ПО ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.ФизическоеЛицо = ФИОФизЛицСрезПоследнихГлБух.ФизическоеЛицо
			|		ПО ЗарплатаКВыплатеОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследнихГлБух.СтруктурнаяЕдиница
			|ГДЕ
			|	ЗарплатаКВыплатеОрганизаций.Ссылка = &ДокументСсылка";	
		
	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда
		
		Запрос.УстановитьПараметр("Организация",   Ссылка.Организация);
		Запрос.УстановитьПараметр("Задепонировано", Перечисления.ВыплаченностьЗарплаты.Задепонировано);
		Запрос.УстановитьПараметр("ВидЗанятости", Перечисления.ВидыЗанятости.ВнутреннееСовместительство);
		Запрос.УстановитьПараметр("ТабельныйНомер", "");
		Запрос.УстановитьПараметр("ВнутреннийСовместитель", Перечисления.ВидыЗанятости.ВнутреннееСовместительство);
		Запрос.УстановитьПараметр("ПустойСотрудник", Справочники.Сотрудники.ПустаяСсылка());
		ТекстЗапроса_СотрудникТабельныйНомер = "
		|ВЫБРАТЬ 
		|	Работники1.Сотрудник	КАК Сотрудник,
		|	Работники2.Сотрудник	КАК Назначение,
		|	Работники2.Сотрудник.ИНАГРО_ТабельныйНомер КАК ТабельныйНомер
		|	ИЗ(
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Работники.Сотрудник	КАК Сотрудник,
		|			МАКСИМУМ(Работники.Период) КАК Период
		|		ИЗ	РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК Работники
		|		ГДЕ	Работники.Период<=&ДатаДокумента	
		|		И   Работники.Организация = &Организация
		|		И   Работники.Сотрудник В (&парамСотрудник )
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Работники.Сотрудник
		|	) КАК Работники1
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК Работники2
		|	ПО		Работники1.Период = Работники2.Период	
		|		И   Работники2.Организация = &Организация
		|		И   Работники1.Сотрудник = Работники2.Сотрудник
		|		И	Работники2.Сотрудник.ИНАГРО_ВидЗанятости  <> &ВнутреннийСовместитель
		|";
				
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	ТЧРаботникиОрганизации.НомерСтроки							КАК НомерСтроки,
		|	ТЧРаботникиОрганизации.Сотрудник.ФизическоеЛицо				КАК СсылкаФизЛицо,
		|	ТЧРаботникиОрганизации.Сотрудник 							КАК СсылкаСотрудник,
		|	ТЧРаботникиОрганизации.Сотрудник.ФизическоеЛицо.КодПоДРФО	КАК КодПоДРФО,
		|	ВЫБОР	КОГДА (ФИОФизЛицСрезПоследних.Фамилия) ЕСТЬ NULL  
		|				ТОГДА ТЧРаботникиОрганизации.Сотрудник.ФизическоеЛицо.Наименование 
		|			ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество 
		|		КОНЕЦ					КАК Сотрудник,
		|	ВЫБОР	КОГДА ТЧРаботникиОрганизации.ВыплаченностьЗарплаты = &Задепонировано 
		|				ТОГДА ""Задепоновано"" 
		|			ИНАЧЕ """" 
		|		КОНЕЦ					КАК ЗаписьОДепонировании,
		|	СУММА(ТЧРаботникиОрганизации.Выплата) КАК СУММА,
		|   ТЧРаботникиОрганизации.НомерКарточки КАК НомерКарточки,
		|	РаботникиОрганизации.ТабельныйНомер КАК ТабельныйНомер
		|
		|ИЗ Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.РаботникиОрганизации КАК ТЧРаботникиОрганизации
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ФизическоеЛицо В (ВЫБРАТЬ  РАЗЛИЧНЫЕ 	Основной.Сотрудник.ФизическоеЛицо КАК Физлицо ИЗ Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.РаботникиОрганизации КАК Основной ГДЕ 	Основной.Ссылка = &ДокументСсылка )) КАК ФИОФизЛицСрезПоследних
		|ПО	ТЧРаботникиОрганизации.Сотрудник.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизическоеЛицо
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ( " + ТекстЗапроса_СотрудникТабельныйНомер + " ) КАК РаботникиОрганизации
		|ПО		ТЧРаботникиОрганизации.Сотрудник = РаботникиОрганизации.Сотрудник
		|
		|ГДЕ ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка 
		|
		|СГРУППИРОВАТЬ ПО
		|	ТЧРаботникиОрганизации.НомерСтроки,
		|	ТЧРаботникиОрганизации.Сотрудник,
		|   ТЧРаботникиОрганизации.НомерКарточки ,
		|	ТЧРаботникиОрганизации.Сотрудник.ФизическоеЛицо,
		|	РаботникиОрганизации.ТабельныйНомер,
		|	ТЧРаботникиОрганизации.Сотрудник.ФизическоеЛицо.КодПоДРФО,
		|	ВЫБОР	КОГДА (ФИОФизЛицСрезПоследних.Фамилия) ЕСТЬ NULL  
		|				ТОГДА ТЧРаботникиОрганизации.Сотрудник.ФизическоеЛицо.Наименование 
		|			ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество 
		|		КОНЕЦ,
		|	ВЫБОР	КОГДА ТЧРаботникиОрганизации.ВыплаченностьЗарплаты = &Задепонировано 
		|				ТОГДА ""Задепоновано"" 
		|			ИНАЧЕ """" 
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТЧРаботникиОрганизации.НомерСтроки
		|";
			
	ИначеЕсли Режим = "ПоТабличнойЧастиДокументаКасса" Тогда
		
		Запрос.УстановитьПараметр("Организация",   Ссылка.Организация);
		Запрос.УстановитьПараметр("Задепонировано", Перечисления.ВыплаченностьЗарплаты.Задепонировано);
		Запрос.УстановитьПараметр("Касса", Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу);
		Запрос.УстановитьПараметр("ВидЗанятости", Перечисления.ВидыЗанятости.ВнутреннееСовместительство);
		Запрос.УстановитьПараметр("ТабельныйНомер", "");
		
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Основной.НомерСтроки КАК НомерСтроки,
			|	Основной.Сотрудник КАК СсылкаСотрудник,
			|	Основной.Сотрудник.ФизическоеЛицо КАК СсылкаФизЛицо,
			|	Основной.Сотрудник.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО,
			|	ВЫБОР
			|		КОГДА ФИОФизЛицСрезПоследних.Фамилия ЕСТЬ NULL
			|			ТОГДА Основной.Сотрудник.ФизическоеЛицо.Наименование
			|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
			|	КОНЕЦ КАК Сотрудник,
			|	ВЫБОР
			|		КОГДА Основной.ВыплаченностьЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВыплаченностьЗарплаты.Задепонировано)
			|			ТОГДА ""Задепоновано""
			|		ИНАЧЕ """"
			|	КОНЕЦ КАК ЗаписьОДепонировании,
			|	Основной.Сотрудник.ИНАГРО_ТабельныйНомер КАК ТабельныйНомер,     
			|	Основной.НомерКарточки КАК НомерКарточки,
			|	СУММА(Основной.Выплата) КАК СУММА
			|ИЗ
			|	Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.РаботникиОрганизации КАК Основной
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ФизическоеЛицо В (&парамФизЛицо)) КАК ФИОФизЛицСрезПоследних
			|		ПО Основной.Сотрудник.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизическоеЛицо
			|ГДЕ
			|	Основной.Ссылка = &ДокументСсылка
			|	И Основной.СпособВыплаты = &Касса
			|
			|СГРУППИРОВАТЬ ПО
			|	Основной.НомерСтроки,
			|	Основной.Сотрудник,
			|	Основной.Сотрудник.ФизическоеЛицо.КодПоДРФО,
			|	ВЫБОР
			|		КОГДА ФИОФизЛицСрезПоследних.Фамилия ЕСТЬ NULL
			|			ТОГДА Основной.Сотрудник.ФизическоеЛицо.Наименование
			|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА Основной.ВыплаченностьЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВыплаченностьЗарплаты.Задепонировано)
			|			ТОГДА ""Задепоновано""
			|		ИНАЧЕ """"
			|	КОНЕЦ,
			|	Основной.НомерКарточки,
			|	Основной.Сотрудник.ИНАГРО_ТабельныйНомер,
			|	Основной.Сотрудник.ФизическоеЛицо
			|
			|УПОРЯДОЧИТЬ ПО
			|	Основной.НомерСтроки";
		
	ИначеЕсли Режим = "ПоТабличнойЧастиДокументаБанк" Тогда
		
		Запрос.УстановитьПараметр("Организация",   Ссылка.Организация);
		Запрос.УстановитьПараметр("Задепонировано", Перечисления.ВыплаченностьЗарплаты.Задепонировано);
		Запрос.УстановитьПараметр("ЧерезБанк", Перечисления.СпособыВыплатыЗарплаты.ЧерезБанк);
		Запрос.УстановитьПараметр("Банк", Банк);
		Запрос.УстановитьПараметр("ВидЗанятости", Перечисления.ВидыЗанятости.ВнутреннееСовместительство);
		Запрос.УстановитьПараметр("ТабельныйНомер", "");
		
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Основной.НомерСтроки КАК НомерСтроки,
			|	Основной.Сотрудник.ФизическоеЛицо КАК СсылкаФизЛицо,
			|	Основной.Сотрудник.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО,
			|	ВЫБОР
			|		КОГДА ФИОФизЛицСрезПоследних.Фамилия ЕСТЬ NULL
			|			ТОГДА Основной.Сотрудник.ФизическоеЛицо.Наименование
			|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
			|	КОНЕЦ КАК Сотрудник,
			|	ВЫБОР
			|		КОГДА Основной.ВыплаченностьЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВыплаченностьЗарплаты.Задепонировано)
			|			ТОГДА ""Задепоновано""
			|		ИНАЧЕ """"
			|	КОНЕЦ КАК ЗаписьОДепонировании,
			|	Основной.Сотрудник.ИНАГРО_ТабельныйНомер КАК ТабельныйНомер,
			|	Основной.НомерКарточки КАК НомерКарточки,
			|	СУММА(Основной.Выплата) КАК СУММА
			|ИЗ
			|	Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.РаботникиОрганизации КАК Основной
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&ДатаДокумента, ФизическоеЛицо В (&парамФизЛицо)) КАК ФИОФизЛицСрезПоследних
			|		ПО Основной.Сотрудник.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизическоеЛицо
			|ГДЕ
			|	Основной.Ссылка = &ДокументСсылка
			|	И Основной.СпособВыплаты = &ЧерезБанк
			|	И Основной.Банк = &Банк
			|
			|СГРУППИРОВАТЬ ПО
			|	Основной.НомерСтроки,
			|	Основной.Сотрудник,
			|	Основной.Сотрудник.ФизическоеЛицо.КодПоДРФО,
			|	ВЫБОР
			|		КОГДА ФИОФизЛицСрезПоследних.Фамилия ЕСТЬ NULL
			|			ТОГДА Основной.Сотрудник.ФизическоеЛицо.Наименование
			|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА Основной.ВыплаченностьЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВыплаченностьЗарплаты.Задепонировано)
			|			ТОГДА ""Задепоновано""
			|		ИНАЧЕ """"
			|	КОНЕЦ,
			|	Основной.НомерКарточки,
			|	Основной.Сотрудник.ИНАГРО_ТабельныйНомер,
			|	Основной.Сотрудник.ФизическоеЛицо
			|
			|УПОРЯДОЧИТЬ ПО
			|	Основной.НомерСтроки";
		
	ИначеЕсли Режим = "ПоТабличнойЧастиДокументаВзносыНалоги" Тогда
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	Взносы.СтатьяНалоговойДекларации КАК СтатьяНалоговойДекларации,
		               |	СУММА(Взносы.БазаВзноса) КАК БазаВзноса,
		               |	СУММА(Взносы.Результат) КАК Сумма
		               |ИЗ
		               |	Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.Взносы КАК Взносы
		               |ГДЕ
		               |	Взносы.Ссылка = &ДокументСсылка
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	Взносы.СтатьяНалоговойДекларации
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ВзносыФОТ.СтатьяНалоговойДекларации,
		               |	СУММА(ВзносыФОТ.БазаВзноса),
		               |	СУММА(ВзносыФОТ.Результат)
		               |ИЗ
		               |	Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ВзносыФОТ КАК ВзносыФОТ
		               |ГДЕ
		               |	ВзносыФОТ.Ссылка = &ДокументСсылка
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВзносыФОТ.СтатьяНалоговойДекларации
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ВЫБОР
		               |		КОГДА &КодЯзыкаУкр
		               |			ТОГДА ""ПДФО""
		               |		ИНАЧЕ ""НДФЛ""
		               |	КОНЕЦ КАК СтатьяНалоговойДекларации,
		               |	СУММА(НДФЛ.Доход),
		               |	СУММА(НДФЛ.Налог)
		               |ИЗ
		               |	Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.НДФЛ КАК НДФЛ
		               |ГДЕ
		               |	НДФЛ.Ссылка = &ДокументСсылка
		               |	И НДФЛ.ДоходНДФЛ.ВидСтавкиРезидента <> ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДФЛ.ВоенныйСбор)
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	НДФЛ.ДоходНДФЛ.Наименование,
		               |	СУММА(НДФЛ.Доход),
		               |	СУММА(НДФЛ.Налог)
		               |ИЗ
		               |	Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.НДФЛ КАК НДФЛ
		               |ГДЕ
		               |	НДФЛ.Ссылка = &ДокументСсылка
		               |	И НДФЛ.ДоходНДФЛ.ВидСтавкиРезидента = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДФЛ.ВоенныйСбор)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	НДФЛ.ДоходНДФЛ.Наименование";
		
	Иначе
		Возврат Неопределено
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросДляПечати()

Функция СформироватьСписокСчетов(Ссылка)
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗарплатаКВыплатеОрганизацийПараметрыОплаты.СчетУчета КАК СчетУчета
		|ИЗ
		|	Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизацийПараметрыОплаты
		|ГДЕ
		|	ЗарплатаКВыплатеОрганизацийПараметрыОплаты.Ссылка = &Ссылка";
	
	ВыборкаСчетов = Запрос.Выполнить().Выбрать();
	
	СписокСчетов = "";
	Разделитель = "";
	
	Пока ВыборкаСчетов.Следующий() Цикл
		СписокСчетов = СписокСчетов + Разделитель + Строка(ВыборкаСчетов.СчетУчета);
		Разделитель = ", ";
	КонецЦикла;	
	
	Возврат СписокСчетов;
	
КонецФункции // ()

Функция СформироватьСуммыВыплаченоЗадепонировано(Ссылка, СпособыВыплатыЗарплаты = Ложь)
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Если СпособыВыплатыЗарплаты Тогда
		Запрос.УстановитьПараметр("Касса", Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу);
	КонецЕсли; 
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	СУММА(РаботникиОрганизации.Выплата) КАК Сумма,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.ВыплаченностьЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВыплаченностьЗарплаты.Задепонировано)
	|			ТОГДА ""Задеп""
	|		ИНАЧЕ ""Вып""
	|	КОНЕЦ КАК Выплаченность
	|ИЗ
	|	Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.РаботникиОрганизации КАК РаботникиОрганизации
	|ГДЕ
	|	РаботникиОрганизации.Ссылка = &Ссылка
	|   И (РаботникиОрганизации.ВыплаченностьЗарплаты <> ЗНАЧЕНИЕ(Перечисление.ВыплаченностьЗарплаты.НеВыплачено)
	|	" + ?(СпособыВыплатыЗарплаты,"
	|	И РаботникиОрганизации.СпособВыплаты = &Касса","") + ")
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.ВыплаченностьЗарплаты = ЗНАЧЕНИЕ(Перечисление.ВыплаченностьЗарплаты.Задепонировано)
	|			ТОГДА ""Задеп""
	|		ИНАЧЕ ""Вып""
	|	КОНЕЦ";
	
	Возврат Запрос.Выполнить().Выгрузить();	
	
КонецФункции	

Функция ПечатьВедомость_2009(МассивОбъектов,ОбъектыПечати,ПараметрыВывода,НазваниеМакета)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗарплатаКВыплатеОрганизаций_Ведомость";
	ТабДокумент.ПолеСлева  = 15;
	ТабДокумент.ПолеСправа = 15;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		Если НазваниеМакета = "ВедомостьКасса" Или НазваниеМакета = "Ведомость"  Тогда
		    Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПФ_MXL_Ведомость2018");
		Иначе	
		    Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПФ_MXL_Ведомость2018_банк");
		КонецЕсли; 
			
		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;

	
		Если НазваниеМакета = "ВедомостьКасса"  Тогда
			ТипВедомости = "Касса";	
			ВыборкаДляШапки  = СформироватьЗапросДляПечати("ПоРеквизитамДокументаКасса", Ссылка, ПараметрыВывода, ).Выбрать();
			ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокументаКасса", Ссылка, ПараметрыВывода, ).Выбрать();
		ИначеЕсли НазваниеМакета = "Ведомость"  Тогда
			ТипВедомости = "Общ";
			ВыборкаДляШапки  = СформироватьЗапросДляПечати("ПоРеквизитамДокументаКасса", Ссылка, ПараметрыВывода, ).Выбрать();
			ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента", Ссылка, ПараметрыВывода, ).Выбрать();
		ИначеЕсли НазваниеМакета = "ВедомостьБанк"  Тогда
			ТипВедомости = "Банк";
			Банк = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_ЗарплатаКВыплатеОрганизаций");;
			ВыборкаДляШапки  = СформироватьЗапросДляПечати("ПоРеквизитамДокументаБанк", Ссылка, ПараметрыВывода, Банк).Выбрать();
			ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокументаБанк", Ссылка, ПараметрыВывода, Банк).Выбрать();
		КонецЕсли;	
		
		// Подсчитываем количество страниц документа - для корректного разбиения на страницы.
		ВсегоСтрокДокумента = ВыборкаРаботники.Количество();
		
		ОбластьМакетаШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
		ОбластьМакетаШапка			= Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогПоСтранице = Макет.ПолучитьОбласть("ИтогПоЛисту");
		ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		
		Пока ВыборкаДляШапки.Следующий() Цикл
			
			// Сумма по документу.
			ОбластьМакетаШапкаДокумента.Параметры.Заполнить(ВыборкаДляШапки); 
			Если ТипЗнч(ВыборкаДляШапки.СуммаДокумента) = Тип("Число") ИЛИ НЕ ЗначениеЗаполнено(ВыборкаДляШапки.СуммаДокумента) Тогда
				СуммаДок = ?(ВыборкаДляШапки.СуммаДокумента = NULL, 0, ВыборкаДляШапки.СуммаДокумента);
			Иначе
				РезультатЗапросаСумма = ВыборкаДляШапки.СуммаДокумента.Выбрать();
				Если РезультатЗапросаСумма.Следующий() Тогда
					СуммаДок = ?(РезультатЗапросаСумма.СуммаДок = NULL, 0, РезультатЗапросаСумма.СуммаДок);
				КонецЕсли;
			КонецЕсли;
			СтрокаСуммы = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаДок, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
			Если ЗначениеЗаполнено(СуммаДок) Тогда
				СтрокаСуммы = СтрокаСуммы + " (" + Цел(СуммаДок) + ?(НазваниеМакета = "Ведомость" ИЛИ НазваниеМакета = "ВедомостьКасса" ИЛИ НазваниеМакета = "ВедомостьБанк" ," грн "," грн. ") + Формат((СуммаДок - Цел(СуммаДок)) * 100, "ЧЦ=2; ЧН=00; ЧВН=") + " коп.)";
			КонецЕсли;
			ОбластьМакетаШапкаДокумента.Параметры.СуммаДок = СтрокаСуммы;
			
			// Выплачено и депонировано
			Если ТипВедомости = "Общ" ИЛИ ТипВедомости = "Касса" Тогда
				Если ТипВедомости = "Касса" Тогда
					ТаблицаСум = СформироватьСуммыВыплаченоЗадепонировано(Ссылка, Истина);
				Иначе
					ТаблицаСум = СформироватьСуммыВыплаченоЗадепонировано(Ссылка, );
				КонецЕсли;	
				СуммаЗадеп = 0;
				СуммаВыпл = 0;
				Для каждого Строка Из ТаблицаСум Цикл
					Сумма = ?(Строка.Сумма = NULL, 0, Строка.Сумма);
					Если Строка.Выплаченность = "Задеп" Тогда
						СуммаЗадеп = СуммаЗадеп + Сумма;
					Иначе	
						СуммаВыпл = СуммаВыпл + Сумма;
					КонецЕсли; 
					
				КонецЦикла;
				
				// Выплачено
				СтрокаСуммы = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаВыпл, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
				Если ЗначениеЗаполнено(СуммаВыпл) Тогда
					СтрокаСуммы  = СтрокаСуммы + " (" + Цел(СуммаВыпл) + ?(НазваниеМакета = "Ведомость" ИЛИ НазваниеМакета = "ВедомостьКасса" ," грн "," грн. ")+ Формат((СуммаВыпл - Цел(СуммаВыпл)) * 100, "ЧЦ=2; ЧВН=") + " коп.)";
				КонецЕсли;
				ОбластьМакетаШапкаДокумента.Параметры.СуммаВып = СтрокаСуммы;
				
				// Задепонировано
				Если СуммаЗадеп <> 0 Тогда
					СтрокаСуммы = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаЗадеп, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
					Если ЗначениеЗаполнено(СуммаЗадеп) Тогда
						СтрокаСуммы  = СтрокаСуммы + " (" + Цел(СуммаЗадеп) + ?(НазваниеМакета = "Ведомость" ИЛИ НазваниеМакета = "ВедомостьКасса" ," грн "," грн. ")+ Формат((СуммаЗадеп - Цел(СуммаЗадеп)) * 100, "ЧЦ=2; ЧВН=") + " коп.)";
					КонецЕсли;
					ОбластьМакетаШапкаДокумента.Параметры.СуммаЗадеп = СтрокаСуммы;
				КонецЕсли;
				
			Иначе // банк
				СтрокаСуммы = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаДок, Константы.ВалютаРегламентированногоУчета.Получить(), КодЯзыкаПечать);
				Если ЗначениеЗаполнено(СуммаДок) Тогда
					СтрокаСуммы  = СтрокаСуммы + " (" + Цел(СуммаДок) + ?(НазваниеМакета = "ВедомостьБанк" ," грн "," грн. ") + Формат((СуммаДок - Цел(СуммаДок)) * 100, "ЧЦ=2; ЧВН=") + " коп.)";
				КонецЕсли;
				ОбластьМакетаШапкаДокумента.Параметры.СуммаВып = СтрокаСуммы;
				
			КонецЕсли;
			
			НомерВедомости = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Ссылка.Номер);
			
			СведенияОбОрганизации =БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата);
			ОбластьМакетаШапкаДокумента.Параметры.КодПоЕДРПОУ = СведенияОбОрганизации.КодПоЕДРПОУ;
			ОбластьМакетаШапкаДокумента.Параметры.НазваниеОрганизации = ВРег(СведенияОбОрганизации.ПолноеНаименование);

			ОбластьМакетаШапкаДокумента.Параметры.НомерВедомости = НомерВедомости;
			ОбластьМакетаШапкаДокумента.Параметры.Счет			 = СформироватьСписокСчетов(Ссылка);
			ДатаВыплаты    = НРег(Формат(Ссылка.ПериодРегистрации, "Л=uk_UA; ДФ='ММММ гггг р.'"));
			Если НазваниеМакета = "Ведомость2018"  ИЛИ НазваниеМакета = "ВедомостьБанк2018" ИЛИ НазваниеМакета = "ВедомостьКасса2018" Тогда
				ОбластьМакетаШапкаДокумента.Параметры.ДатаВыплаты = СтрЗаменить(ДатаВыплаты,"р.","року");
				ОбластьМакетаШапкаДокумента.Параметры.ДатаДок = СтрЗаменить(Формат(ОбластьМакетаШапкаДокумента.Параметры.ДатаДок, "Л=uk_UA; ДЛФ=DD"),"р.","року");
			Иначе	
				ОбластьМакетаШапкаДокумента.Параметры.ДатаВыплаты = ДатаВыплаты;
			КонецЕсли; 
		КонецЦикла;
		
		ОбластьМакетаШапкаДокумента.Параметры.НазваниеОрганизации = ВРег(ОбластьМакетаШапкаДокумента.Параметры.НазваниеОрганизации);
		
		ТабДокумент.Вывести(ОбластьМакетаШапкаДокумента);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьМакетаШапка.Параметры.НомерВедомости = НомерВедомости;
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		ВыведеноСтраниц = 2;
		ВыведеноСтрок = 0;
		ИтогоНаСтранице = 0;
		// выводим данные по строкам документа.
		Пока ВыборкаРаботники.Следующий() Цикл
			
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаРаботники);
			ОбластьМакетаСтрока.Параметры.Сотрудник = ВыборкаРаботники.Сотрудник + ?(СокрЛП(ВыборкаРаботники.КодПоДРФО)="",""," (" +  ВыборкаРаботники.КодПоДРФО + ")");
			
			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			ОбластьМакетаСтрока.Параметры.НомерСтроки = ВыведеноСтрок;
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не ТабДокумент.ПроверитьВывод(ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
				ВывестиПодвалЛиста = Не ТабДокумент.ПроверитьВывод(ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				
				ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
				ТабДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыведеноСтраниц = ВыведеноСтраниц + 1;
				ТабДокумент.Вывести(ОбластьМакетаШапка);
				ИтогоНаСтранице = 0;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаСтрока);
			ИтогоНаСтранице = ИтогоНаСтранице + ВыборкаРаботники.Сумма;
			
		КонецЦикла;
		
		ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
		ТабДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
		
		ТабДокумент.Область("R24C10").Текст  = ВыведеноСтраниц;
		
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		
		Возврат ТабДокумент;
	КонецЦикла;
	
КонецФункции

// Функция формирует табличный документ с печатной формой "АвансНалоги".
//
// Возвращаемое значение:
//   Табличный документ - печатная форма.
//
Функция ПечатьНалоги(МассивОбъектов,ОбъектыПечати,ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗарплатаКВыплатеОрганизаций_АвансНалоги";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПФ_MXL_АвансНалоги");
	
	ПервыйДокумент = Истина;
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		ТабДокумент.ПолеСлева = 0;
		ТабДокумент.ПолеСправа = 0;
		
		Макет 		= ПолучитьМакет("ПФ_MXL_АвансНалоги");
		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		// получаем данные для печати
		ВыборкаДляШапки  = СформироватьЗапросДляПечати("ПоРеквизитамДокумента", Ссылка, ПараметрыВывода, ).Выбрать();
		ВыборкаВзносыНалоги = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокументаВзносыНалоги", Ссылка, ПараметрыВывода, ).Выбрать();
		
		// Подсчитываем количество страниц документа - для корректного разбиения на страницы.
		ВсегоСтрокДокумента = ВыборкаВзносыНалоги.Количество();
		
		ОбластьМакетаШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
		ОбластьМакетаШапка			= Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		
		НачПериода = НачалоМесяца(Ссылка.ПериодРегистрации);
		КонПериода = КонецМесяца(Ссылка.ПериодРегистрации);
		
		ОбластьМакетаШапкаДокумента.Параметры.НачПериода = НачПериода;
		ОбластьМакетаШапкаДокумента.Параметры.КонПериода = КонПериода;
		
		// выводим данные о руководителях организации
		Пока ВыборкаДляШапки.Следующий() Цикл
			
			ОбластьМакетаШапкаДокумента.Параметры.Заполнить(ВыборкаДляШапки); // Шапка документа.
			
		КонецЦикла;
		
	
		ОбластьМакетаШапкаДокумента.Параметры.НазваниеОрганизации = ВРег(ОбластьМакетаШапкаДокумента.Параметры.НазваниеОрганизации);
	    ОбластьМакетаШапкаДокумента.Параметры.ФИОРуководителя = ФизическиеЛицаКлиентСервер.ИмяФамилияВФорматеДСТУ(ОбластьМакетаШапкаДокумента.Параметры.ФИОРуководителя);
		ОбластьМакетаШапкаДокумента.Параметры.ФИОГлБуха		  = ФизическиеЛицаКлиентСервер.ИмяФамилияВФорматеДСТУ(ОбластьМакетаШапкаДокумента.Параметры.ФИОГлБуха);
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата);
		ОбластьМакетаШапкаДокумента.Параметры.НазваниеОрганизации = ВРег(СведенияОбОрганизации.ПолноеНаименование);
		ТабДокумент.Вывести(ОбластьМакетаШапкаДокумента);
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		ВыведеноСтрок = 0;
		// выводим данные по строкам документа.
		Пока ВыборкаВзносыНалоги.Следующий() Цикл
			Если НЕ (ВыборкаВзносыНалоги.БазаВзноса = 0 И ВыборкаВзносыНалоги.Сумма = 0) Тогда
				ВыведеноСтрок = ВыведеноСтрок + 1;
				ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаВзносыНалоги);
				ОбластьМакетаСтрока.Параметры.НомерСтроки = ВыведеноСтрок;
				ТабДокумент.Вывести(ОбластьМакетаСтрока);
			КонецЕсли;
		КонецЦикла;
		
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		
		Возврат ТабДокумент;
	КонецЦикла;	
	
КонецФункции // ПечатьНалоги()

Функция ПечатьСписокПеречислений(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВедомостьНаВыплатуЗарплатыВБанк_СписокПеречислений";
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
	
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПФ_MXL_СписокПеречислений");
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		// Получаем данные для печати.
		
		ТипВедомости = "Банк";
		Банк = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_ЗарплатаКВыплатеОрганизаций");;
		ВыборкаДляШапки  = СформироватьЗапросДляПечати("ПоРеквизитамДокументаБанк", Ссылка, ПараметрыВывода, Банк).Выбрать();
		ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокументаБанк", Ссылка, ПараметрыВывода, Банк).Выбрать();
		
		ПервыйДокумент = Истина;
		
		Пока ВыборкаДляШапки.Следующий() Цикл
			
			// Документы нужно выводить на разных страницах.
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;
			
			// Запомним номер строки, с которой начали выводить текущий документ.
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			// подсчитываем количество страниц документа - для корректного разбиения на страницы
			ВсегоСтрокДокумента = ВыборкаРаботники.Количество();

			ОбластьМакетаШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
			ОбластьМакетаШапка			= Макет.ПолучитьОбласть("Шапка");
			ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
			ОбластьМакетаИтогПоСтранице = Макет.ПолучитьОбласть("ИтогПоЛисту");
			ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
			
			// массив с двумя строками - для разбиения на страницы
		    ВыводимыеОбласти = Новый Массив();
			ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
			ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
			
			// выводим данные о документе
	 		ОбластьМакетаШапкаДокумента.Параметры.Дата = ВыборкаДляШапки.ДатаДок;
	 		ОбластьМакетаШапкаДокумента.Параметры.Организация = ВРег(СокрЛП(ВыборкаДляШапки.НазваниеОрганизации));
			
			ТабличныйДокумент.Вывести(ОбластьМакетаШапкаДокумента);
			ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
			
			ВыведеноСтраниц = 1; ВыведеноСтрок = 0; ИтогоНаСтранице = 0; Итого = 0;
			// выводим данные по строкам документа.
			ВыборкаРаботники.Сбросить();
			Пока ВыборкаРаботники.Следующий() Цикл
			
				ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаРаботники);
				ОбластьМакетаСтрока.Параметры.НомерЛицевогоСчета = ВыборкаРаботники.НомерКарточки;
				ОбластьМакетаСтрока.Параметры.Физлицо = ВыборкаРаботники.Сотрудник;
				ОбластьМакетаСтрока.Параметры.КодПоДРФО = ?(СокрЛП(ВыборкаРаботники.КодПоДРФО)="",""," (" +  ВыборкаРаботники.КодПоДРФО + ")");
				// разбиение на страницы
				ВыведеноСтрок = ВыведеноСтрок + 1;
				
				// Проверим, уместится ли строка на странице или надо открывать новую страницу
				ВывестиПодвалЛиста = Не ТабличныйДокумент.ПроверитьВывод(ВыводимыеОбласти);

				Если Не ВывестиПодвалЛиста и ВыведеноСтрок = ВсегоСтрокДокумента Тогда
					ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
					ВывестиПодвалЛиста = Не ТабличныйДокумент.ПроверитьВывод(ВыводимыеОбласти);
				КонецЕсли;
				Если ВывестиПодвалЛиста Тогда
					
					ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
					ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ВыведеноСтраниц = ВыведеноСтраниц + 1;
					ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
					ИтогоНаСтранице = 0;
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
				ИтогоНаСтранице = ИтогоНаСтранице + ВыборкаРаботники.Сумма;
				Итого = Итого + ВыборкаРаботники.Сумма;
				
			КонецЦикла;
			
			Если ВыведеноСтрок > 0 Тогда 
				ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
			
			ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапки);
			ОбластьМакетаПодвал.Параметры.Итого = Итого;
			ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
			
			// В табличном документе зададим имя области, в которую был 
			// выведен объект. Нужно для возможности печати покомплектно.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
				НомерСтрокиНачало, ОбъектыПечати, Ссылка);
			
		КонецЦикла; // по документам
	
		Возврат ТабличныйДокумент;
	КонецЦикла;
КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#КонецЕсли