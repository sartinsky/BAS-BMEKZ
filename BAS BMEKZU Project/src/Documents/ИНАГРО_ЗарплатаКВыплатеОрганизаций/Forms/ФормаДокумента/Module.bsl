#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
				
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 

	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Месяц, Организация, Ответственный", 
		"Объект.ПериодРегистрации",
		"Объект.Организация",
		"Объект.Ответственный");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		УстановитьФункциональныеОпцииФормы();
		
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока");
		
		ПодготовитьФормуНаСервере();
		ВидВыплатыПредыдущий = Объект.ВидВыплаты;
		
	КонецЕсли;
	
	// Уведомим о появлении функционала рабочей даты
	НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях("РабочаяДатаИзДокумента");
	
	// Показываем, если это новый документ и сама рабочая дата еще не установлена.
	НастройкиПредупреждений.РабочаяДатаИзДокумента = НастройкиПредупреждений.РабочаяДатаИзДокумента
		И Параметры.Ключ.Пустая()
		И НЕ ЗначениеЗаполнено(БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("РабочаяДата"));
		
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
		
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ГрупповоеЗаполнение" И ТипЗнч(Параметр) = Тип("Структура") 
		И Параметр.Свойство("ИдентификаторВызывающейФормы")
		И Параметр.ИдентификаторВызывающейФормы = УникальныйИдентификатор Тогда
		
		ВыполнитьГрупповоеЗаполнение(Параметр);
		Модифицированность = Истина;
	//	
	//ИначеЕсли ИмяСобытия = "ИНАГРО_ФормаВыбораБанка" Тогда
	//	
	//	Объект.ВыбранныйБанк = Параметр.ВыбранныйБанк;
	//	ВыполнитьКомандуПечати(КомандаБанк);
		
	КонецЕсли;

	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
	ПодготовитьФормуНаСервере();
	
	ВидВыплатыПредыдущий = Объект.ВидВыплаты;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока");
	
	ПодготовитьФормуНаСервере();
	
	ВидВыплатыПредыдущий = ТекущийОбъект.ВидВыплаты;
	
	ПроверитьДокументыВведенныеНаОсновании()
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	УстановитьСостояниеДокумента();
	
	ПодготовитьФормуНаСервере();
	
	ВидВыплатыПредыдущий = ТекущийОбъект.ВидВыплаты;

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МесяцСтрокаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцНачисленияСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока", , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока", Направление, Модифицированность);
	ПриИзмененииМесяцаНачисления();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	ПриИзмененииМесяцаНачисления();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	ПриИзмененииМесяцаНачисления();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	
	ПриИзмененииМесяцаНачисления();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииМесяцаНачисления()
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцСтрока", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидВыплатыПриИзменении(Элемент)
	
	Если (Объект.Зарплата.Количество() > 0 
		ИЛИ Объект.Взносы.Количество() > 0
		ИЛИ Объект.НДФЛ.Количество() > 0 
		ИЛИ Объект.ВзносыФОТ.Количество() > 0 
		ИЛИ Объект.РаботникиОрганизации.Количество() > 0) И Не Объект.ВидВыплаты = ВидВыплатыПредыдущий Тогда
		
		ТекстВопроса = НСтр("ru='При изменении вида выплаты табличные части будут очищены. Продолжить?';uk='При зміні вида виплати табличні частині будуть очищені. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("ОчиститьТаблицыПриИзмененииВидаВыплатыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	КонецЕсли;
	
	ВидВыплатыПредыдущий = Объект.ВидВыплаты;
	
	Предопределенный  = ПроверкаПредопределенности(Объект.ВидВыплаты);
	РасчетОтОбратного = ПроверкаРасчетОтОбратного(Объект.ВидВыплаты);
	
	УправлениеФормой(ЭтаФорма, Предопределенный, РасчетОтОбратного);
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	ОчиститьТабличныеЧасти();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРаботникиОрганизаций

&НаКлиенте
Процедура РаботникиОрганизацииПриАктивизацииСтроки(Элемент)
	ОтобразитьОтборСтрок(ОтборУстановлен);
	ТЧПриАктивизацииСтроки("РаботникиОрганизации", Элемент)
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииПередУдалением(Элемент, Отказ)
	
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "Зарплата");
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "Взносы");
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "ВзносыФОТ");
	УдалитьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки, "НДФЛ");
	
	ТекСтрокаРаботник = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если Не ТекСтрокаРаботник = Неопределено Тогда
		РаботникТекущейСтроки = ТекСтрокаРаботник.Сотрудник;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Не Копирование Тогда
		РаботникТекущейСтроки = ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекСтрокаРаботник = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекСтрокаРаботник = Неопределено Тогда
		Возврат;
	КонецЕсли;           
	
	ОтобразитьОтборСтрок(ОтборУстановлен);
	ТекущийСотрудник = ТекСтрокаРаботник.Сотрудник;
	
	ТЧПриАктивизацииСтроки("РаботникиОрганизации", Элемент);

КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииСотрудникПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если РаботникТекущейСтроки <> ТекущаяСтрока.Сотрудник Тогда
		УдалитьПереформироватьПараметрыРасчетаПоРаботнику(РаботникТекущейСтроки);
		РаботникТекущейСтроки = ТекущаяСтрока.Сотрудник;
		
		СтруктураПараметров = Новый Структура ("СпособВыплаты, Банк, НомерКарточки, ВыплаченностьЗарплаты");
		РаботникиОрганизацииСотрудникПриИзмененииНаСервере(СтруктураПараметров);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтруктураПараметров);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РаботникиОрганизацииСотрудникПриИзмененииНаСервере(СтруктураПараметров)
	
	НоваяСтрока = Объект.Зарплата.Добавить();
	НоваяСтрока.Сотрудник = РаботникТекущейСтроки;
	НоваяСтрока.ПериодВзаиморасчетов = Объект.ПериодРегистрации;
	НоваяСтрока.СчетУчета = ПланыСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамДата",		 Объект.Дата);
	Запрос.УстановитьПараметр("парамСотрудники", РаботникТекущейСтроки);
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СпособыВыплаты.СпособВыплаты КАК СпособВыплаты,
	               |	СпособыВыплаты.Банк КАК Банк,
	               |	СпособыВыплаты.НомерКарточки КАК НомерКарточки,
	               |	ЗНАЧЕНИЕ(Перечисление.ВыплаченностьЗарплаты.Выплачено) КАК ВыплаченностьЗарплаты
	               |ИЗ
	               |	РегистрСведений.ИНАГРО_ПараметрыВыплатыЗПРаботников.СрезПоследних(&парамДата, Сотрудник В (&парамСотрудники)) КАК СпособыВыплаты";
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураПараметров, Выборка);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииВыплатаПриИзменении(Элемент)
	
	Отбор = Новый Структура("Сотрудник");
	Отбор.Сотрудник = Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник;
	НоваяВыплата 	= Элементы.РаботникиОрганизации.ТекущиеДанные.Выплата;
	
	РассчитатьСотрудникТЧЗарплатуПоРаботнику(НоваяВыплата, Отбор);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииСпособВыплатыПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока.СпособВыплаты = ПредопределенноеЗначение("Перечисление.СпособыВыплатыЗарплаты.ЧерезБанк") Тогда
		ТекущаяСтрока.ВыплаченностьЗарплаты = ПредопределенноеЗначение("Перечисление.ВыплаченностьЗарплаты.Выплачено");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗарплата

&НаКлиенте
Процедура ЗарплатаПриАктивизацииСтроки(Элемент)
	
	ТЧПриАктивизацииСтроки(Элемент.Имя, Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарплатаВыплатаПриИзменении(Элемент)
	
	Отбор = Новый Структура("Сотрудник");
	Отбор.Сотрудник = Элементы.Зарплата.ТекущиеДанные.Сотрудник;
	НоваяВыплата 	= Элементы.Зарплата.ТекущиеДанные.Выплата;
	
	// определим какая сумма уже записана
	СуммаЗарплата = 0;
	СтрокиЗарплата = Объект.Зарплата.НайтиСтроки(Отбор);
	Для Каждого СтрокаЗарплата Из СтрокиЗарплата Цикл
		СуммаЗарплата = СуммаЗарплата + СтрокаЗарплата.Выплата;
	КонецЦикла;
	
	// в табличной части работники Физ.Лицо должно встречаться только раз
	СтрокиРаботники = Объект.РаботникиОрганизации.НайтиСтроки(Отбор);
	Для Каждого СтрокаРаботники Из СтрокиРаботники Цикл
		СтрокаРаботники.Выплата = СуммаЗарплата;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВзносы

&НаКлиенте
Процедура ВзносыПриАктивизацииСтроки(Элемент)
	
	ТЧПриАктивизацииСтроки(Элемент.Имя, Элемент)
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВзносыФОТ

&НаКлиенте
Процедура ВзносыФОТПриАктивизацииСтроки(Элемент)
	
	ТЧПриАктивизацииСтроки(Элемент.Имя, Элемент)
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНДФЛ

&НаКлиенте
Процедура НДФЛПриАктивизацииСтроки(Элемент)
	
	ТЧПриАктивизацииСтроки(Элемент.Имя, Элемент)
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьУволенными(Команда)
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Сотрудники", Неопределено);
	СтруктураЗаполнения.Вставить("ЭтоДоговорники", Ложь);
	СтруктураЗаполнения.Вставить("ЭтоУволенные", Истина);
	
	Если Объект.Зарплата.Количество() > 0 
		ИЛИ Объект.Взносы.Количество() > 0
		ИЛИ Объект.НДФЛ.Количество() > 0 
		ИЛИ Объект.ВзносыФОТ.Количество() > 0 
		ИЛИ Объект.РаботникиОрганизации.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличные части будут очищены. Продолжить?';uk='Перед заповненням табличні частині будуть очищені. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("ЗаполнитьДоговорникамиУволеннымиОчиститьТаблицыЗавершение", ЭтотОбъект, "Уволенные");
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличные части можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличні частини можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеПослеОтветаНаВопросЗаписать", ЭтотОбъект, "Уволенные");
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	КонецЕсли;
	
	ВыполнитьАвтозаполнениеПоХарактеруВыплаты(Неопределено, "Уволенные");

	Если Объект.Зарплата.Количество() > 0 
		И Объект.Взносы.Количество() > 0
		И Объект.НДФЛ.Количество() > 0 
		И Объект.ВзносыФОТ.Количество() > 0 
		И Объект.РаботникиОрганизации.Количество() > 0 Тогда
		
		ТекстСообщения = НСтр("ru='Не обнаружены данные для записи в табличную часть документа.';uk='Не виявлені дані для запису в табличну частину документу.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДоговорниками(Команда)
	Если Объект.Зарплата.Количество() > 0 
		ИЛИ Объект.Взносы.Количество() > 0
		ИЛИ Объект.НДФЛ.Количество() > 0 
		ИЛИ Объект.ВзносыФОТ.Количество() > 0 
		ИЛИ Объект.РаботникиОрганизации.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличные части будут очищены. Продолжить?';uk='Перед заповненням табличні частині будуть очищені. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("ЗаполнитьДоговорникамиУволеннымиОчиститьТаблицыЗавершение", ЭтотОбъект, "Договорники");
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличные части можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличні частини можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеПослеОтветаНаВопросЗаписать", ЭтотОбъект, "Договорники");
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
				
	КонецЕсли;
		
	ВыполнитьАвтозаполнениеПоХарактеруВыплаты(Неопределено, "Договорники");

	Если Объект.Зарплата.Количество() > 0 
		И Объект.Взносы.Количество() > 0
		И Объект.НДФЛ.Количество() > 0 
		И Объект.ВзносыФОТ.Количество() > 0 
		И Объект.РаботникиОрганизации.Количество() > 0 Тогда
		
		ТекстСообщения = НСтр("ru='Не обнаружены данные для записи в табличную часть документа.';uk='Не виявлені дані для запису в табличну частину документу.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтбор(Команда)
	ОтборУстановлен = Не ОтборУстановлен;
	Если ОтборУстановлен Тогда
		Элементы.УстановитьОтбор.Картинка = БиблиотекаКартинок.СостояниеПользователя02;
	Иначе
		Элементы.УстановитьОтбор.Картинка = БиблиотекаКартинок.ЗначокФизическиеЛица32;
	КонецЕсли;
	
	ОтобразитьОтборСтрок(ОтборУстановлен);
КонецПроцедуры

&НаКлиенте
Процедура СпискомСотрудников(Команда)
	
	Если Объект.Зарплата.Количество() > 0 
		ИЛИ Объект.Взносы.Количество() > 0
		ИЛИ Объект.НДФЛ.Количество() > 0 
		ИЛИ Объект.ВзносыФОТ.Количество() > 0 
		ИЛИ Объект.РаботникиОрганизации.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличные части будут очищены. Продолжить?';uk='Перед заповненням табличні частині будуть очищені. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("ОчиститьТаблицыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	КонецЕсли;
	
	ЗапонятьУволенных = ЗаполнитьУволенныхСотрудников();
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ОткрытьФормуОтбораСпискаРаботников(ЭтаФорма, Истина, , Истина, , ,ЗапонятьУволенных);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВыплаченностьВыплачено(Команда)
	УстановитьВыплаченностьНаСервере("Выплачено");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВыплаченностьЗадепонировано(Команда)
	УстановитьВыплаченностьНаСервере("Задепонировано");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВыплаченностьНеВыплачено(Команда)
	УстановитьВыплаченностьНаСервере("НеВыплачено");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСпособЧерезБанк(Команда)
	УстановитьСпособНаСервере("ЧерезБанк");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСпособВПодотчет(Команда)
	УстановитьСпособНаСервере("ВПодотчет");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСпособЧерезКассу(Команда)
	УстановитьСпособНаСервере("ЧерезКассу");
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	Если Объект.Зарплата.Количество() > 0 
		ИЛИ Объект.Взносы.Количество() > 0
		ИЛИ Объект.НДФЛ.Количество() > 0 
		ИЛИ Объект.ВзносыФОТ.Количество() > 0 
		ИЛИ Объект.РаботникиОрганизации.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Табличные части будут очищены. Продолжить?';uk='Табличні частині будуть очищені. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("ОчиститьТаблицыЗавершениеБезДействий", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьНалогиПоСотруднику(Команда)
	
	Строка = Элементы.РаботникиОрганизации.ТекущиеДанные;
	
	Если Строка = Неопределено Тогда
		ТекстСообщения = НСтр("ru='Для выполнения расчета по сотруднику необходимо активировать строку в табличной части';uk='Для виконання розрахунку по працівнику необхідно активувати рядок в табличній частині'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(Строка.Сотрудник);
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличные части можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличні частини можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВсеПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличные части можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличні частини можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВсеПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.Взносы, СписокСотрудников);
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыФОТ, СписокСотрудников);
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НДФЛ, СписокСотрудников);
	
	НалогиРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьНалогиПоВсемСотрудникам(Команда)
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличные части можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличні частини можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВсеПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличные части можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличні частини можна тільки після його запису.Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВсеПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.Взносы, СписокСотрудников);
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыФОТ, СписокСотрудников);
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НДФЛ, СписокСотрудников);
	
	НалогиРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура ВзносыЗаполнитьПоРаботнику(Команда)
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "Взносы");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	ТекстВопроса = НСтр("ru='Перед заполнением из табличной части ""Взносы"" будут удалены данные по сотруднику: ';uk='Перед заповненням з табличної частини ""Внески"" будуть вилучені дані по співробітнику: '") + ТекущаяСтрока.Сотрудник + НСтр("ru='. Продолжить?';uk='. Продовжити?'");
	Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВзносыПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
	ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Возврат;

КонецПроцедуры

&НаКлиенте
Процедура ВзносыЗаполнитьПоВсемРаботникам(Команда)
	
	// по всем сотрудникам ТЧ РаботникиОрганизации
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "Взносы");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Взносы.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть ""Взносы"" будет очищена. Продолжить?';uk='Перед заповненням таблична частина ""Взносы"" буде очищена. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВзносыПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
				
	КонецЕсли;
	
	Если Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	ВзносыЗаполнитьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура ВзносыРассчитатьПоРаботнику(Команда)
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.Взносы, СписокСотрудников); 
	Записать();
	
	ВзносыРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура ВзносыРассчитатьПоВсемРаботникам(Команда)
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда     
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.Взносы, СписокСотрудников); 
	Записать();
	
	ВзносыРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура ВзносыФОТЗаполнитьПоРаботнику(Команда)
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "ВзносыФОТ");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);

			
	ТекстВопроса = НСтр("ru='Перед заполнением из табличной части ""Взносы ФОТ"" будут удалены данные по сотруднику: ';uk='Перед заповненням з табличної частини ""Внески ФОП"" будуть вилучені дані по співробітнику: '") + ТекущаяСтрока.Сотрудник + НСтр("ru='. Продолжить?';uk='. Продовжити?'");
	Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВзносыФОТПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
	ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Возврат;

КонецПроцедуры

&НаКлиенте
Процедура ВзносыФОТЗаполнитьПоВсемРаботникам(Команда)
	
	// по всем сотрудникам ТЧ РаботникиОрганизации
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "ВзносыФОТ");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.ВзносыФОТ.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть ""Взносы ФОТ"" будет очищена. Продолжить?';uk='Перед заповненням таблична частина ""Взносы ФОП"" буде очищена. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВзносыФОТПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
				
	КонецЕсли;
	
	Если Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	ВзносыФОТЗаполнитьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура ВзносыФОТРассчитатьПоРаботнику(Команда)
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.ВзносыФОТ, СписокСотрудников); 
	Записать();
	
	ВзносыФОТРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура ВзносыФОТРассчитатьПоВсемРаботникам(Команда)
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.ВзносыФОТ, СписокСотрудников); 
	Записать();
	
	ВзносыФОТРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура НДФЛЗаполнитьПоРаботнику(Команда)
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "НДФЛ");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);

			
	ТекстВопроса = НСтр("ru='Перед заполнением из табличной части ""НДФЛ"" будут удалены данные по сотруднику: ';uk='Перед заповненням з табличної частини ""ПДФО"" будуть вилучені дані по співробітнику: '") + ТекущаяСтрока.Сотрудник + НСтр("ru='. Продолжить?';uk='. Продовжити?'");
	Обработчик = Новый ОписаниеОповещения("АвтозаполнениеНДФЛПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
	ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Возврат;

КонецПроцедуры

&НаКлиенте
Процедура НДФЛЗаполнитьПоВсемРаботникам(Команда)
	
	// по всем сотрудникам ТЧ РаботникиОрганизации
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Команда", Команда);
	СтруктураЗаполнения.Вставить("ИмяТЧ", "НДФЛ");
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.НДФЛ.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть ""НДФЛ"" будет очищена. Продолжить?';uk='Перед заповненням таблична частина ""ПДФО"" буде очищена. Продовжити?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеНДФЛПослеОтветаНаВопрос", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
				
	КонецЕсли;
	
	Если Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеНДФЛПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	НДФЛЗаполнитьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура НДФЛРассчитатьПоРаботнику(Команда)
	
	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСотрудников = Новый СписокЗначений;
	СписокСотрудников.Добавить(ТекущаяСтрока.Сотрудник) ;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНДФЛПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНДФЛПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.НДФЛ, СписокСотрудников); 
	Записать();
	
	НДФЛРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура НДФЛРассчитатьПоВсемРаботникам(Команда)
	
	СписокСотрудников = Новый СписокЗначений;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		СписокСотрудников.Добавить(Строка.Сотрудник);
	КонецЦикла;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("СписокСотрудников", СписокСотрудников);
	
	Если Объект.Проведен Тогда 
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити табличну частину можна тільки після скасування його проведення. Виконати скасування проведення документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНДФЛПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	ИначеЕсли Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвторасчетНДФЛПослеОтветаНаВопросЗаписать", ЭтотОбъект, СтруктураЗаполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	
  	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.НДФЛ, СписокСотрудников); 
	Записать();
	
	НДФЛРассчитатьНаСервере(СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыплатитьЧерезБанк(Команда)
	
	Если НЕ Объект.Проведен Тогда		
		ПоказатьПредупреждение(, НСтр("ru='Выплату можно провести только после проведения документа';uk='Виплату можна провести тільки після проведенення документу'"));
		Возврат;  		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;

	ОткрытьФорму("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.Форма.ВыплатаЧерезБанк", ПараметрыФормы, , Новый УникальныйИдентификатор(), , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	УстановитьФункциональныеОпцииФормы();
	
	Если ЗначениеЗаполнено(Объект.ВидВыплаты) Тогда
		Предопределенный = Объект.ВидВыплаты.Предопределенный;
		РасчетОтОбратного = Объект.ВидВыплаты.РасчетОтОбратного;
	Иначе
		Предопределенный = Ложь;
		РасчетОтОбратного = Ложь;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма, Предопределенный, РасчетОтОбратного);
	
	УстановитьСостояниеДокумента();

КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма); 	
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма, Предопределенный = Истина, РасчетОтОбратного = Ложь)

	Элементы = Форма.Элементы;
	Объект	 = Форма.Объект;  
	
	Форма.ОтборУстановлен = Истина;
	
	// теперь создаем в случае надобности
	Если Не Предопределенный
		ИЛИ Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.Отпуск")
		ИЛИ	Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.Аванс")
		ИЛИ	Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.АвансПредварительныйРасчет")
		ИЛИ	Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.Больничные") Тогда
		
		Элементы.РассчитатьНалоги.Видимость = Истина;
		
		Если Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.Аванс") Тогда
			Элементы.ВзносыГруппаЗаполнить.Видимость = Ложь; 
			Элементы.ВзносыГруппаРассчитать.Видимость = Ложь; 
			Элементы.ВзносыФОТГруппаЗаполнить.Видимость = Ложь; 
			Элементы.ВзносыФОТГруппаРассчитать.Видимость = Ложь;
			Элементы.НДФЛГруппаЗаполнить.Видимость = Ложь;
			Элементы.НДФЛГруппаРассчитать.Видимость = Ложь;
		Иначе
			Элементы.ВзносыГруппаЗаполнить.Видимость = Истина; 
			Элементы.ВзносыГруппаРассчитать.Видимость = Истина; 
			Элементы.ВзносыФОТГруппаЗаполнить.Видимость = Истина; 
			Элементы.ВзносыФОТГруппаРассчитать.Видимость = Истина;
			Элементы.НДФЛГруппаЗаполнить.Видимость = Истина;
			Элементы.НДФЛГруппаРассчитать.Видимость = Истина;
		КонецЕсли;
		
		Элементы.ФормаЗаполнитьДоговорниками.Видимость = Истина;
		Элементы.ФормаЗаполнитьУволенными.Видимость = Истина;
		
		// Для вида выплаты с расчетом от обратного отдельно рассчитывать каждый вид взноса, не имеет смысла.
		Если НЕ РасчетОтОбратного Тогда
			Элементы.ВзносыГруппаЗаполнить.Видимость = Истина;
			Элементы.ВзносыГруппаРассчитать.Видимость = Истина;
			Элементы.ВзносыФОТГруппаЗаполнить.Видимость = Истина;
			Элементы.ВзносыФОТГруппаРассчитать.Видимость = Истина;
			Элементы.НДФЛГруппаЗаполнить.Видимость = Истина;
			Элементы.НДФЛГруппаРассчитать.Видимость = Истина;
		Иначе
			Элементы.ВзносыГруппаЗаполнить.Видимость = Ложь;
			Элементы.ВзносыГруппаРассчитать.Видимость = Ложь;
			Элементы.ВзносыФОТГруппаЗаполнить.Видимость = Ложь;
			Элементы.ВзносыФОТГруппаРассчитать.Видимость = Ложь;
			Элементы.НДФЛГруппаЗаполнить.Видимость = Ложь;
			Элементы.НДФЛГруппаРассчитать.Видимость = Ложь;
		КонецЕсли;
		
		Элементы.ГруппаРаботникиОрганизации.Видимость = Истина;
		Элементы.Страницы.Видимость = Истина;
		
		Элементы.ГруппаЗарплата.Видимость = Истина;
		Элементы.ГруппаВзносы.Видимость = Истина;
		Элементы.ГруппаВзносыФОТ.Видимость = Истина;
		Элементы.ГруппаНДФЛ.Видимость = Истина;
		
		// Спец-колонки
		Элементы.ЗарплатаПериодВзаиморасчетов.Видимость = Истина;
		Элементы.ЗарплатаСчетУчета.Видимость = Истина;
		Элементы.ЗарплатаВедомость.Видимость = Ложь;
		
		Элементы.НДФЛПериодВзаиморасчетов.Доступность = Ложь;
		Элементы.НДФЛНалоговыйПериод.Видимость = Истина;
		Элементы.НДФЛКоличествоЛьгот.Видимость = Истина;
		
		// Реквизиты остатков по регистру
		Элементы.ВзносыПериодВзаиморасчетов.Видимость = Истина;
		Элементы.ВзносыПериодВзаиморасчетов.Доступность = Ложь;
		
		// Реквизиты, которые используются при расчете
		Элементы.ВзносыСотрудник.Видимость = Истина;
		Элементы.ВзносыНомерПорога.Видимость = Истина;
		
		Элементы.ВзносыГруппаБазовыйПериод.Видимость = Истина;
		Элементы.ВзносыГруппаПериод.Видимость = Истина;
			
		Элементы.ВзносыПредел.Видимость = Истина;
		Элементы.ВзносыСтавка.Видимость = Истина;
		Элементы.ВзносыСторно.Видимость = Истина;
		Элементы.ВзносыКоэффициентСтавки.Видимость = Истина;
	
		// Реквизиты остатков по регистру
		Элементы.ВзносыФОТПериодВзаиморасчетов.Видимость = Истина;
		Элементы.ВзносыФОТПериодВзаиморасчетов.Доступность = Ложь;
		
		// Реквизиты, которые используются при расчете
		Элементы.ВзносыФОТСотрудник.Видимость = Истина;
		Элементы.ВзносыФОТНомерПорога.Видимость = Истина;
		
		Элементы.ВзносыФОТГруппаБазовыйПериод.Видимость = Истина;
		Элементы.ВзносыФОТГруппаПериод.Видимость = Истина;
			
		Элементы.ВзносыФОТПредел.Видимость = Истина;
		Элементы.ВзносыФОТСтавка.Видимость = Истина;
		Элементы.ВзносыФОТКоэффициентСтавки.Видимость = Истина;
		
	ИначеЕсли Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.Очередная") 
		ИЛИ	Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.ОчереднаяПогашениеДолгов")
		ИЛИ Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.Дивиденды") Тогда
		
		Элементы.ФормаЗаполнитьДоговорниками.Видимость = Истина;
		Элементы.ФормаЗаполнитьУволенными.Видимость = Истина;
		
		Элементы.НДФЛГруппаЗаполнить.Видимость = Ложь;
		Элементы.НДФЛГруппаРассчитать.Видимость = Ложь;
		
		Элементы.РассчитатьНалоги.Видимость = Ложь;
				
		Элементы.ГруппаРаботникиОрганизации.Видимость = Истина;
		Элементы.Страницы.Видимость = Истина;
		
		Элементы.ГруппаЗарплата.Видимость = Истина;
		Элементы.ГруппаВзносы.Видимость = Ложь;
		Элементы.ГруппаВзносыФОТ.Видимость = Ложь;
		Элементы.ГруппаНДФЛ.Видимость = Истина;
		
		// Спец-колонки
		Элементы.ЗарплатаПериодВзаиморасчетов.Видимость = Истина;
		Элементы.ЗарплатаСчетУчета.Видимость = Истина;
		Элементы.ЗарплатаВедомость.Видимость = Ложь;
		
		Элементы.НДФЛПериодВзаиморасчетов.Доступность = Истина;
		Элементы.НДФЛНалоговыйПериод.Видимость = Истина;
		Элементы.НДФЛКоличествоЛьгот.Видимость = Ложь;
		
	ИначеЕсли Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.ОчереднаяВзносы") 
		ИЛИ	Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.ОчереднаяПогашениеДолговВзносы") Тогда
		
		Элементы.ФормаЗаполнитьДоговорниками.Видимость = Истина;
		Элементы.ФормаЗаполнитьУволенными.Видимость = Истина;
		
		Элементы.РассчитатьНалоги.Видимость = Ложь; 
		
		Элементы.ВзносыГруппаЗаполнить.Видимость = Ложь; 
		Элементы.ВзносыГруппаРассчитать.Видимость = Ложь; 
		Элементы.ВзносыФОТГруппаЗаполнить.Видимость = Ложь; 
		Элементы.ВзносыФОТГруппаРассчитать.Видимость = Ложь; 
		
		Элементы.ГруппаРаботникиОрганизации.Видимость = Ложь;
		Элементы.Страницы.Видимость = Истина;
		
		Элементы.ГруппаЗарплата.Видимость = Ложь;
		Элементы.ГруппаВзносы.Видимость = Истина;
		Элементы.ГруппаВзносыФОТ.Видимость = Истина;
		Элементы.ГруппаНДФЛ.Видимость = Ложь;
		
		// Реквизиты остатков по регистру
		Элементы.ВзносыПериодВзаиморасчетов.Видимость = Ложь;
		Элементы.ВзносыПериодВзаиморасчетов.Доступность = Ложь;
		
		// Реквизиты, которые используются при расчете
		Элементы.ВзносыСотрудник.Видимость = Ложь;
		Элементы.ВзносыНомерПорога.Видимость = Ложь;
		
		Элементы.ВзносыГруппаБазовыйПериод.Видимость = Ложь;
		Элементы.ВзносыГруппаПериод.Видимость = Ложь;
			
		Элементы.ВзносыПредел.Видимость = Ложь;
		Элементы.ВзносыСтавка.Видимость = Ложь;
		Элементы.ВзносыСторно.Видимость = Ложь;
		Элементы.ВзносыКоэффициентСтавки.Видимость = Ложь;
	
		// Реквизиты остатков по регистру
		Элементы.ВзносыФОТПериодВзаиморасчетов.Видимость = Истина;
		Элементы.ВзносыФОТПериодВзаиморасчетов.Доступность = Истина;
		
		// Реквизиты, которые используются при расчете
		Элементы.ВзносыФОТСотрудник.Видимость = Ложь;
		Элементы.ВзносыФОТНомерПорога.Видимость = Ложь;
		
		Элементы.ВзносыФОТГруппаБазовыйПериод.Видимость = Ложь;
		Элементы.ВзносыФОТГруппаПериод.Видимость = Ложь;
			
		Элементы.ВзносыФОТПредел.Видимость = Ложь;
		Элементы.ВзносыФОТСтавка.Видимость = Ложь;
		Элементы.ВзносыФОТКоэффициентСтавки.Видимость = Ложь;
		
	ИначеЕсли Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.НДФЛКонтрагентам") Тогда
		
		Элементы.РассчитатьНалоги.Видимость = Ложь;
		
		Элементы.ФормаЗаполнитьДоговорниками.Видимость = Ложь;
		Элементы.ФормаЗаполнитьУволенными.Видимость = Ложь;
		
		Элементы.ГруппаРаботникиОрганизации.Видимость = Ложь;
		Элементы.Страницы.Видимость = Истина;
		
		Элементы.ГруппаЗарплата.Видимость = Ложь;
		Элементы.ГруппаВзносы.Видимость = Ложь;
		Элементы.ГруппаВзносыФОТ.Видимость = Ложь;
		Элементы.ГруппаНДФЛ.Видимость = Истина;
		
		Элементы.НДФЛПериодВзаиморасчетов.Доступность = Истина;
		Элементы.НДФЛНалоговыйПериод.Видимость = Ложь;
		Элементы.НДФЛКоличествоЛьгот.Видимость = Ложь;
		
	ИначеЕсли Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.Депоненты") Тогда
		
		Элементы.ФормаЗаполнитьДоговорниками.Видимость = Истина;
		Элементы.ФормаЗаполнитьУволенными.Видимость = Истина;
		
		Элементы.РассчитатьНалоги.Видимость = Ложь;
		
		Элементы.ГруппаРаботникиОрганизации.Видимость = Истина;
		Элементы.Страницы.Видимость = Истина;
		
		Элементы.ГруппаЗарплата.Видимость = Истина;
		Элементы.ГруппаВзносы.Видимость = Ложь;
		Элементы.ГруппаВзносыФОТ.Видимость = Ложь;
		Элементы.ГруппаНДФЛ.Видимость = Ложь;
		
		// Спец-колонки
		Элементы.ЗарплатаПериодВзаиморасчетов.Видимость = Истина;
		Элементы.ЗарплатаСчетУчета.Видимость = Ложь;
		Элементы.ЗарплатаВедомость.Видимость = Истина;
		
		Элементы.РассчитатьНалоги.Видимость = Ложь;
		
	ИначеЕсли Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.ЗакрытиеПериода") 
		ИЛИ Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.ЗакрытиеПериодаВзаиморасчеты") Тогда
		
		Элементы.ФормаЗаполнитьДоговорниками.Видимость = Ложь;
		Элементы.ФормаЗаполнитьУволенными.Видимость = Ложь;
		
		Элементы.РассчитатьНалоги.Видимость = Ложь;
		
		Элементы.ВзносыГруппаЗаполнить.Видимость = Ложь; 
		Элементы.ВзносыГруппаРассчитать.Видимость = Ложь; 
		Элементы.ВзносыФОТГруппаЗаполнить.Видимость = Ложь; 
		Элементы.ВзносыФОТГруппаРассчитать.Видимость = Ложь;
		
		Элементы.ГруппаРаботникиОрганизации.Видимость = Ложь;
		Элементы.Страницы.Видимость = Истина;
		
		Элементы.ГруппаЗарплата.Видимость = Истина;
		Элементы.ГруппаВзносы.Видимость = Истина;
		Элементы.ГруппаВзносыФОТ.Видимость = Истина;
		Элементы.ГруппаНДФЛ.Видимость = Истина;
		
		// Спец-колонки
		Элементы.ЗарплатаПериодВзаиморасчетов.Видимость = Истина;
		Элементы.ЗарплатаСчетУчета.Видимость = Ложь;
		Элементы.ЗарплатаВедомость.Видимость = Ложь;
		
		Элементы.НДФЛПериодВзаиморасчетов.Доступность = Истина;
		Элементы.НДФЛНалоговыйПериод.Видимость = Истина;
		Элементы.НДФЛКоличествоЛьгот.Видимость = Ложь;
		
		// Реквизиты остатков по регистру
		Элементы.ВзносыПериодВзаиморасчетов.Видимость = Ложь;
		Элементы.ВзносыПериодВзаиморасчетов.Доступность = Ложь;
		
		// Реквизиты, которые используются при расчете
		Элементы.ВзносыСотрудник.Видимость = Ложь;
		Элементы.ВзносыНомерПорога.Видимость = Ложь;
		
		Элементы.ВзносыГруппаБазовыйПериод.Видимость = Ложь;
		Элементы.ВзносыГруппаПериод.Видимость = Ложь;
			
		Элементы.ВзносыПредел.Видимость = Ложь;
		Элементы.ВзносыСтавка.Видимость = Ложь;
		Элементы.ВзносыСторно.Видимость = Ложь;
		Элементы.ВзносыКоэффициентСтавки.Видимость = Ложь;
	
		// Реквизиты остатков по регистру
		Элементы.ВзносыФОТПериодВзаиморасчетов.Видимость = Истина;
		Элементы.ВзносыФОТПериодВзаиморасчетов.Доступность = Истина;
		
		// Реквизиты, которые используются при расчете
		Элементы.ВзносыФОТСотрудник.Видимость = Ложь;
		Элементы.ВзносыФОТНомерПорога.Видимость = Ложь;
		
		Элементы.ВзносыФОТГруппаБазовыйПериод.Видимость = Ложь;
		Элементы.ВзносыФОТГруппаПериод.Видимость = Ложь;
			
		Элементы.ВзносыФОТПредел.Видимость = Ложь;
		Элементы.ВзносыФОТСтавка.Видимость = Ложь;
		Элементы.ВзносыФОТКоэффициентСтавки.Видимость = Ложь;
		
	ИначеЕсли	Объект.ВидВыплаты = ПредопределенноеЗначение("Справочник.ВидыВыплат.НДФЛБезВыплатыЗарплаты") Тогда
		
		Элементы.ФормаЗаполнитьДоговорниками.Видимость = Ложь;
		Элементы.ФормаЗаполнитьУволенными.Видимость = Ложь;
		
		Элементы.РассчитатьНалоги.Видимость = Ложь;
		
		Элементы.ГруппаРаботникиОрганизации.Видимость = Ложь;
		Элементы.Страницы.Видимость = Истина;
		
		Элементы.ГруппаЗарплата.Видимость = Истина;
		Элементы.ГруппаВзносы.Видимость = Ложь;
		Элементы.ГруппаВзносыФОТ.Видимость = Ложь;
		Элементы.ГруппаНДФЛ.Видимость = Истина;
				
		Элементы.НДФЛПериодВзаиморасчетов.Доступность = Истина;
		Элементы.НДФЛНалоговыйПериод.Видимость = Истина;
		Элементы.НДФЛКоличествоЛьгот.Видимость = Ложь;
		
	Иначе // Не предопределенный вид выплаты
		
		Элементы.РассчитатьНалоги.Видимость = Истина;
		
		Элементы.ФормаЗаполнитьДоговорниками.Видимость = Истина;
		Элементы.ФормаЗаполнитьУволенными.Видимость = Истина;
		
		// Для вида выплаты с расчетом от обратного отдельно рассчитывать каждый вид взноса, не имеет смысла.
		Если НЕ Объект.ВидВыплаты.РасчетОтОбратного Тогда
			Элементы.ВзносыГруппаЗаполнить.Видимость = Истина;
			Элементы.ВзносыГруппаРассчитать.Видимость = Истина;
			Элементы.ВзносыФОТГруппаЗаполнить.Видимость = Истина;
			Элементы.ВзносыФОТГруппаРассчитать.Видимость = Истина;
			Элементы.НДФЛГруппаЗаполнить.Видимость = Истина;
			Элементы.НДФЛГруппаРассчитать.Видимость = Истина;
		Иначе
			Элементы.ВзносыГруппаЗаполнить.Видимость = Ложь;
			Элементы.ВзносыГруппаРассчитать.Видимость = Ложь;
			Элементы.ВзносыФОТГруппаЗаполнить.Видимость = Ложь;
			Элементы.ВзносыФОТГруппаРассчитать.Видимость = Ложь;
			Элементы.НДФЛГруппаЗаполнить.Видимость = Ложь;
			Элементы.НДФЛГруппаРассчитать.Видимость = Ложь;
		КонецЕсли;
		
		Элементы.ГруппаРаботникиОрганизации.Видимость = Истина;
		Элементы.Страницы.Видимость = Истина;
		
		Элементы.ГруппаЗарплата.Видимость = Истина;
		Элементы.ГруппаВзносы.Видимость = Истина;
		Элементы.ГруппаВзносыФОТ.Видимость = Истина;
		Элементы.ГруппаНДФЛ.Видимость = Истина;
		
		// Спец-колонки
		Элементы.ЗарплатаПериодВзаиморасчетов.Видимость = Истина;
		Элементы.ЗарплатаСчетУчета.Видимость = Истина;
		Элементы.ЗарплатаВедомость.Видимость = Ложь;
		
		Элементы.НДФЛПериодВзаиморасчетов.Доступность = Ложь;
		Элементы.НДФЛНалоговыйПериод.Видимость = Истина;
		Элементы.НДФЛКоличествоЛьгот.Видимость = Истина;
		
		// Реквизиты остатков по регистру
		Элементы.ВзносыПериодВзаиморасчетов.Видимость = Истина;
		Элементы.ВзносыПериодВзаиморасчетов.Доступность = Ложь;
		
		// Реквизиты, которые используются при расчете
		Элементы.ВзносыСотрудник.Видимость = Истина;
		Элементы.ВзносыНомерПорога.Видимость = Истина;
		
		Элементы.ВзносыГруппаБазовыйПериод.Видимость = Истина;
		Элементы.ВзносыГруппаПериод.Видимость = Истина;
			
		Элементы.ВзносыПредел.Видимость = Истина;
		Элементы.ВзносыСтавка.Видимость = Истина;
		Элементы.ВзносыСторно.Видимость = Истина;
		Элементы.ВзносыКоэффициентСтавки.Видимость = Истина;
	
		// Реквизиты остатков по регистру
		Элементы.ВзносыФОТПериодВзаиморасчетов.Видимость = Истина;
		Элементы.ВзносыФОТПериодВзаиморасчетов.Доступность = Ложь;
		
		// Реквизиты, которые используются при расчете
		Элементы.ВзносыФОТСотрудник.Видимость = Истина;
		Элементы.ВзносыФОТНомерПорога.Видимость = Истина;
		
		Элементы.ВзносыФОТГруппаБазовыйПериод.Видимость = Истина;
		Элементы.ВзносыФОТГруппаПериод.Видимость = Истина;
			
		Элементы.ВзносыФОТПредел.Видимость = Истина;
		Элементы.ВзносыФОТСтавка.Видимость = Истина;
		Элементы.ВзносыФОТКоэффициентСтавки.Видимость = Истина;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВыплаченностьНаСервере(ЗначениеДляУстановки)
	
	Если ЗначениеДляУстановки = "Выплачено" Тогда
		Значение = Перечисления.ВыплаченностьЗарплаты.Выплачено;
	ИначеЕсли ЗначениеДляУстановки = "Задепонировано" Тогда
		Значение = Перечисления.ВыплаченностьЗарплаты.Задепонировано;
	Иначе
		Значение = Перечисления.ВыплаченностьЗарплаты.НеВыплачено;
	КонецЕсли;
	
	Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
		Строка.ВыплаченностьЗарплаты = Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСпособНаСервере(ЗначениеДляУстановки)
	
	Если ЗначениеДляУстановки = "ЧерезБанк" Тогда
		Значение = Перечисления.СпособыВыплатыЗарплаты.ЧерезБанк;
		Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
			Строка.СпособВыплаты = Значение;
			
			Если ЗначениеЗаполнено(Строка.Сотрудник)Тогда
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("парамДата",		Объект.Дата);
				Запрос.УстановитьПараметр("парамСотрудник", Строка.Сотрудник);
				Запрос.УстановитьПараметр("черезБанк", 		Значение);
				
				ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
				               |	СпособыВыплаты.Банк КАК Банк,
				               |	СпособыВыплаты.НомерКарточки КАК НомерКарточки
				               |ИЗ
				               |	РегистрСведений.ИНАГРО_ПараметрыВыплатыЗПРаботников.СрезПоследних(
				               |			&парамДата,
				               |			Сотрудник В (&парамСотрудник)
				               |				И СпособВыплаты = &ЧерезБанк) КАК СпособыВыплаты";
				
				Запрос.Текст = ТекстЗапроса;
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					Строка.Банк = Выборка.Банк;
					Строка.НомерКарточки = Выборка.НомерКарточки;
				КонецЕсли;;
			КонецЕсли;
			
		КонецЦикла;
	ИначеЕсли ЗначениеДляУстановки = "ВПодотчет" Тогда
		Значение = Перечисления.СпособыВыплатыЗарплаты.ВПодотчет;
		Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
			Строка.СпособВыплаты = Значение;
			Строка.Банк = Справочники.Банки.ПустаяСсылка();
			Строка.НомерКарточки = "";
		КонецЦикла;
	Иначе
		Значение = Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу;
		Для Каждого Строка Из Объект.РаботникиОрганизации Цикл
			Строка.СпособВыплаты = Значение;
			Строка.Банк = Справочники.Банки.ПустаяСсылка();
			Строка.НомерКарточки = "";
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверкаРасчетОтОбратного(Выплата)
	Возврат Выплата.РасчетОтОбратного;
КонецФункции

&НаСервере
Функция ПроверкаПредопределенности(Выплата)
	Возврат Выплата.Предопределенный;
КонецФункции

&НаКлиенте
Процедура РассчитатьСотрудникТЧЗарплатуПоРаботнику(НоваяВыплата, Отбор)
	
	// определим какая сумма уже записана
	СуммаЗарплата = 0;
	СтрокиЗарплата = Объект.Зарплата.НайтиСтроки(Отбор);
	Для Каждого СтрокаЗарплата Из СтрокиЗарплата Цикл
		СуммаЗарплата = СуммаЗарплата + СтрокаЗарплата.Выплата;
	КонецЦикла;
	
	Если СуммаЗарплата <> НоваяВыплата Тогда
		// уменьшим (увеличим) на разницу
		Разница = СуммаЗарплата - НоваяВыплата;
		Для Каждого СтрокаЗарплата Из СтрокиЗарплата Цикл
			Если СтрокаЗарплата.Выплата - Разница > 0 Тогда
				СтрокаЗарплата.Выплата = СтрокаЗарплата.Выплата - Разница;
				Разница =  Макс(СтрокаЗарплата.Выплата - СтрокаЗарплата.Выплата, 0);
			КонецЕсли;
			Если Разница = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьДокументыВведенныеНаОсновании()
	
	ЗапросПоПлатежнымДокументам = Новый Запрос;
	ЗапросПоПлатежнымДокументам.УстановитьПараметр("Ведомость", Объект.Ссылка);
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ВложенныйЗапрос.Ведомость) КАК КоличествоДокументов
		|ИЗ
		|	(ВЫБРАТЬ
		|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ведомость) КАК Ведомость
		|	ИЗ
		|		Документ.РасходныйКассовыйОрдер.ВыплатаЗаработнойПлаты КАК РасходныйКассовыйОрдерВыплатаЗаработнойПлаты
		|	ГДЕ
		|		РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ведомость = &Ведомость
		|		И РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка.Проведен
		|		И РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ВыплатаЗаработнойПлатыПоВедомостям)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РКОРаботнику.ПлатежнаяВедомость)
		|	ИЗ
		|		Документ.РасходныйКассовыйОрдер КАК РКОРаботнику
		|	ГДЕ
		|		РКОРаботнику.ПлатежнаяВедомость = &Ведомость
		|		И РКОРаботнику.Проведен
		|		И РКОРаботнику.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПлатежноеПоручениеИсходящее.Ведомость)
		|	ИЗ
		|		Документ.СписаниеСРасчетногоСчета.ВыплатаЗаработнойПлаты КАК ПлатежноеПоручениеИсходящее
		|	ГДЕ
		|		ПлатежноеПоручениеИсходящее.Ведомость = &Ведомость
		|		И ПлатежноеПоручениеИсходящее.Ссылка.Проведен
		|		И ПлатежноеПоручениеИсходящее.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеЗП)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПлатежноеПоручениеИсходящее.Ведомость)
		|	ИЗ
		|		Документ.СписаниеСРасчетногоСчета.ПеречислениеНалогов КАК ПлатежноеПоручениеИсходящее
		|	ГДЕ
		|		ПлатежноеПоручениеИсходящее.Ведомость = &Ведомость
		|		И ПлатежноеПоручениеИсходящее.Ссылка.Проведен
		|		И ПлатежноеПоручениеИсходящее.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога)) КАК ВложенныйЗапрос";
	
	ЗапросПоПлатежнымДокументам.Текст = ТекстЗапроса;
	
	РезультатЗапроса = ЗапросПоПлатежнымДокументам.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
		
		Если РезультатЗапроса.КоличествоДокументов > 0 Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;
			ЭтаФорма.Элементы.ФормаСпискомСотрудников.Доступность = Ложь;
			ЭтаФорма.Элементы.ФормаЗаполнитьДоговорниками.Доступность = Ложь;
			ЭтаФорма.Элементы.ФормаЗаполнитьУволенными.Доступность = Ложь;
			ЭтаФорма.Элементы.ФормаОчистить.Доступность = Ложь;
			ЭтаФорма.Элементы.ФормаРассчитатьНалогиПоВсемСотрудникам.Доступность = Ложь;
			ЭтаФорма.Элементы.ФормаРассчитатьНалогиПоСотруднику.Доступность = Ложь;
			ЭтаФорма.Элементы.РаботникиОрганизацииУстановитьВыплаченностьВыплачено.Доступность = Ложь;
			ЭтаФорма.Элементы.РаботникиОрганизацииУстановитьВыплаченностьНеВыплачено.Доступность = Ложь;
			ЭтаФорма.Элементы.РаботникиОрганизацииУстановитьВыплаченностьЗадепонировано.Доступность = Ложь;
			ЭтаФорма.Элементы.РаботникиОрганизацииУстановитьСпособЧерезБанк.Доступность = Ложь;
			ЭтаФорма.Элементы.РаботникиОрганизацииУстановитьСпособЧерезКассу.Доступность = Ложь;
			ЭтаФорма.Элементы.РаботникиОрганизацииУстановитьСпособВПодотчет.Доступность = Ложь;
			ЭтаФорма.Элементы.ВзносыВзносыЗаполнитьПоВсемРаботникам.Доступность = Ложь;
			ЭтаФорма.Элементы.ВзносыВзносыЗаполнитьПоРаботнику.Доступность = Ложь;
			ЭтаФорма.Элементы.ВзносыВзносыРассчитатьПоВсемРаботникам.Доступность = Ложь;
			ЭтаФорма.Элементы.ВзносыВзносыРассчитатьПоРаботнику.Доступность = Ложь;
			ЭтаФорма.Элементы.ВзносыФОТВзносыФОТЗаполнитьПоВсемРаботникам.Доступность = Ложь;
			ЭтаФорма.Элементы.ВзносыФОТВзносыФОТЗаполнитьПоРаботнику.Доступность = Ложь;
			ЭтаФорма.Элементы.ВзносыФОТВзносыФОТРассчитатьПоВсемРаботникам.Доступность = Ложь;
			ЭтаФорма.Элементы.ВзносыФОТВзносыФОТРассчитатьПоРаботнику.Доступность = Ложь;
			ЭтаФорма.Элементы.НДФЛНДФЛЗаполнитьПоВсемРаботникам.Доступность = Ложь;
			ЭтаФорма.Элементы.НДФЛНДФЛЗаполнитьПоРаботнику.Доступность = Ложь;
			ЭтаФорма.Элементы.НДФЛНДФЛРассчитатьПоВсемРаботникам.Доступность = Ложь;
			ЭтаФорма.Элементы.НДФЛНДФЛРассчитатьПоРаботнику.Доступность = Ложь;
			ЭтаФорма.Элементы.ВзносыВзносыРассчитатьПоРаботнику.Доступность = Ложь;
			ЭтаФорма.Элементы.ВзносыВзносыРассчитатьПоРаботнику.Доступность = Ложь;
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТабличныеЧасти(ОчищатьРаботников = Истина)
	
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Если ОчищатьРаботников ИЛИ Не ИмяТабличнойЧасти = "РаботникиОрганизации" Тогда
			Объект[ИмяТабличнойЧасти].Очистить();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьУволенныхСотрудников()
	
	Если Объект.ВидВыплаты = Справочники.ВидыВыплат.Аванс ИЛИ Объект.ВидВыплаты = Справочники.ВидыВыплат.АвансПредварительныйРасчет Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;

КонецФункции


#Область ПроцедурыИФункцииАвтозаполнение

&НаСервере
Процедура ВыполнитьАвтозаполнениеПоХарактеруВыплаты(МассивСотрудниковДляЗаполнения = Неопределено, ПараметрыВыполнения = "")
	
	Документ = РеквизитФормыВЗначение("Объект");
	Если ПараметрыВыполнения = "Уволенные" Тогда
  		Документ.Автозаполнение(Ложь, Ложь, Истина, МассивСотрудниковДляЗаполнения);
	ИначеЕсли ПараметрыВыполнения = "Договорники" Тогда
  		Документ.Автозаполнение(Ложь, Истина, Ложь, МассивСотрудниковДляЗаполнения);
	Иначе
		Документ.Автозаполнение(Ложь, Ложь, Ложь, МассивСотрудниковДляЗаполнения);
	КонецЕсли;
	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьГрупповоеЗаполнение(Параметр)
	
	ТаблицаСотрудников = ПолучитьИзВременногоХранилища(Параметр.АдресТЗ);
	
	Если Параметр.ПереключательХарактерВыплаты = 1 Тогда
		
		МассивСотрудниковДляЗаполнения = ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник");
		Записать();	
		ВыполнитьАвтозаполнениеПоХарактеруВыплаты(МассивСотрудниковДляЗаполнения);
		
	Иначе
		ТаблицаСотрудников.Колонки.Добавить("Выплата");
		ТаблицаСотрудников.Колонки.Добавить("СчетУчета");
		ТаблицаСотрудников.Колонки.Добавить("ПериодВзаиморасчетов");
		
		ТаблицаСотрудников.ЗаполнитьЗначения(Параметр.Размер,"Выплата");
		ТаблицаСотрудников.ЗаполнитьЗначения(ПланыСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате, "СчетУчета");
		ТаблицаСотрудников.ЗаполнитьЗначения(Объект.ПериодРегистрации, "ПериодВзаиморасчетов");
		
		Объект.РаботникиОрганизации.Загрузить(ТаблицаСотрудников);
		Объект.Зарплата.Загрузить(ТаблицаСотрудников);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДоговорникамиУволеннымиОчиститьТаблицыЗавершение(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличные части можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличні частини можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеПослеОтветаНаВопросЗаписать", ЭтотОбъект, ПараметрыВыполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
		
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Объект[ИмяТабличнойЧасти].Очистить();
	КонецЦикла;
		
	ВыполнитьАвтозаполнениеПоХарактеруВыплаты(Неопределено, ПараметрыВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Записать();		
	ВыполнитьАвтозаполнениеПоХарактеруВыплаты(Неопределено, ПараметрыВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеВзносыПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВзносыПослеОтветаНаВопросЗаписать", ЭтотОбъект, ПараметрыВыполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;

	
	Если Найти(ПараметрыВыполнения.Команда.Имя,"ПоРаботнику") > 0 Тогда
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ], ПараметрыВыполнения.СписокСотрудников);
	Иначе
		Объект[ПараметрыВыполнения.ИмяТЧ].Очистить();
	КонецЕсли;
	
	ВзносыЗаполнитьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеВзносыПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Найти(ПараметрыВыполнения.Команда.Имя,"ПоРаботнику") > 0 Тогда

		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ], ПараметрыВыполнения.СписокСотрудников);
	Иначе
		Объект[ПараметрыВыполнения.ИмяТЧ].Очистить();
	КонецЕсли;
	Записать();
	ВзносыЗаполнитьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеВзносыФОТПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеВзносыФОТПослеОтветаНаВопросЗаписать", ЭтотОбъект, ПараметрыВыполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	Если Найти(ПараметрыВыполнения.Команда.Имя,"ПоРаботнику") > 0 Тогда

		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ], ПараметрыВыполнения.СписокСотрудников);
	Иначе
		Объект[ПараметрыВыполнения.ИмяТЧ].Очистить();
	КонецЕсли;
	
	ВзносыФОТЗаполнитьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеВзносыФОТПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Найти(ПараметрыВыполнения.Команда.Имя,"ПоРаботнику") > 0 Тогда

		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ], ПараметрыВыполнения.СписокСотрудников);
	Иначе
		Объект[ПараметрыВыполнения.ИмяТЧ].Очистить();
	КонецЕсли;
	Записать();
	
	ВзносыФОТЗаполнитьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеНДФЛПослеОтветаНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка = ПредопределенноеЗначение("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ПустаяСсылка") Тогда
		ТекстВопроса =НСтр("ru='Автоматически заполнить табличную часть можно только после его записи. Выполнить запись документа?';uk='Автоматично заповнити табличну частину можна тільки після його запису. Виконати запис документа?'");
		Обработчик = Новый ОписаниеОповещения("АвтозаполнениеНДФЛПослеОтветаНаВопросЗаписать", ЭтотОбъект, ПараметрыВыполнения);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	
	Если Найти(ПараметрыВыполнения.Команда.Имя,"ПоРаботнику") > 0 Тогда
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ], ПараметрыВыполнения.СписокСотрудников);
	Иначе
		Объект[ПараметрыВыполнения.ИмяТЧ].Очистить();
	КонецЕсли;
	
	НДФЛЗаполнитьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеНДФЛПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Если Найти(ПараметрыВыполнения.Команда.Имя,"ПоРаботнику") > 0 Тогда
		ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект[ПараметрыВыполнения.ИмяТЧ], ПараметрыВыполнения.СписокСотрудников);
	Иначе
		Объект[ПараметрыВыполнения.ИмяТЧ].Очистить();
	КонецЕсли;
	Записать();
	НДФЛЗаполнитьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура АвторасчетВзносыПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
 	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.Взносы, ПараметрыВыполнения.СписокСотрудников); 
	Записать();
	
	ВзносыРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура АвторасчетВзносыФОТПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
 	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.ВзносыФОТ, ПараметрыВыполнения.СписокСотрудников); 
	Записать();
	
	ВзносыФОТРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура АвторасчетНДФЛПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
 	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиСторноПоУсловию(Объект.НДФЛ, ПараметрыВыполнения.СписокСотрудников); 
	Записать();
	
	НДФЛРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	
КонецПроцедуры

&НаКлиенте
Процедура АвторасчетВсеПослеОтветаНаВопросЗаписать(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.Взносы, ПараметрыВыполнения.СписокСотрудников);
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.ВзносыФОТ, ПараметрыВыполнения.СписокСотрудников);
	ИНАГРО_ПроведениеРасчетовКлиент.УдалитьСтрокиПоУсловию(Объект.НДФЛ, ПараметрыВыполнения.СписокСотрудников);
	Записать();
	
	НалогиРассчитатьНаСервере(ПараметрыВыполнения.СписокСотрудников);
	
КонецПроцедуры

&НаСервере
Процедура НалогиРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  	Документ.РассчитатьНалоги(СписокСотрудников);
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
КонецПроцедуры

&НаСервере
Процедура ВзносыЗаполнитьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать();
  	Документ.ЗаполнитьВзносы("Взносы", СписокСотрудников);
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
КонецПроцедуры

&НаСервере
Процедура ВзносыРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  	Документ.РассчитатьВзносы(СписокСотрудников, "Взносы");

  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
КонецПроцедуры

&НаСервере
Процедура ВзносыФОТЗаполнитьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать();
  	Документ.ЗаполнитьВзносы("ВзносыФОТ", СписокСотрудников);
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
КонецПроцедуры

&НаСервере
Процедура ВзносыФОТРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  	Документ.РассчитатьВзносы(СписокСотрудников, "ВзносыФОТ");

  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
КонецПроцедуры

&НаСервере
Процедура НДФЛЗаполнитьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать();
  	Документ.ЗаполнитьНДФЛ(СписокСотрудников);
  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
КонецПроцедуры

&НаСервере
Процедура НДФЛРассчитатьНаСервере(СписокСотрудников)
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  	Документ.РассчитатьНДФЛ(СписокСотрудников);

  	ЗначениеВРеквизитФормы(Документ, "Объект");	
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииОбработкиТабличныхЧастей

&НаКлиенте
Процедура ОчиститьТаблицыЗавершение(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
		
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Объект[ИмяТабличнойЧасти].Очистить();
	КонецЦикла;
	
	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ОткрытьФормуОтбораСпискаРаботников(ЭтаФорма, Истина, , Истина);
	
КонецПроцедуры

&НаСервере
Функция СписокТабличныхЧастейДокумента()
	
	СписокТабличныхЧастей = Новый Массив;
	
	СписокТабличныхЧастей.Добавить("РаботникиОрганизации");
	
	СписокТабличныхЧастей.Добавить("Взносы");
	СписокТабличныхЧастей.Добавить("ВзносыФОТ");
	СписокТабличныхЧастей.Добавить("Зарплата");
	СписокТабличныхЧастей.Добавить("НДФЛ");
		
	Возврат СписокТабличныхЧастей;
	
КонецФункции

&НаКлиенте
Процедура ТЧПриАктивизацииСтроки(ИмяТЧ, Элемент)
	ТекСтрокаРаботник = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если Не ТекСтрокаРаботник = Неопределено Тогда
		ТекущиеДанныеРаботник = ТекСтрокаРаботник.Сотрудник;
	Иначе
		ТекущиеДанныеРаботник = Неопределено
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанныеРаботник) Тогда
		ТекущиеДанные = Элементы[ИмяТЧ].ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			РаботникТекущейСтроки = Неопределено;
			Возврат;
		КонецЕсли;
		
		// запомним текущего сотрудника
		РаботникТекущейСтроки = ТекущиеДанные.Сотрудник;
		
		СинхронизируемыеТабличныеЧасти = Новый Соответствие;
		СинхронизируемыеТабличныеЧасти["РаботникиОрганизации"]	= Ложь;
		СинхронизируемыеТабличныеЧасти["Зарплата"]	    	= Ложь;
		СинхронизируемыеТабличныеЧасти["Взносы"]	    		= Ложь;
		СинхронизируемыеТабличныеЧасти["ВзносыФОТ"]	    		= Ложь;
		СинхронизируемыеТабличныеЧасти["НДФЛ"]	    			= Ложь;
		
		ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.СинхронизироватьСтроки(Элементы, Объект, ИмяТЧ, СинхронизируемыеТабличныеЧасти, "Сотрудник");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТаблицыЗавершениеБезДействий(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
		
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Объект[ИмяТабличнойЧасти].Очистить();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
// Удаляет начисления по работнику, все или автоматически заполняемые
// Параметры:
//   Сотрудник - СправочникСсылка.Физлица
//   УдалятьВсе - булево, если Истина - удаляются все начисления по физлицу,
//				например, при его удалении из списка.
//				Если Ложь - удаляются только те, которые вводятся "автоматически",
//				например, при редактировании данных по строке табличной части 
//				со списком работников
Процедура УдалитьПараметрыРасчетаПоРаботнику(Сотрудник, ИмяТабЧасти)
	
	ИНАГРО_ЗарплатаКадрыРасширенный.УдалитьПараметрыРасчетаПоРаботнику(Сотрудник, ИмяТабЧасти, Объект)
	
КонецПроцедуры  // УдалитьПараметрыРасчетаПоРаботнику

&НаКлиенте
// Добавляет или переопределяет строку в табличной части "Начисления" при изменении сотрудника 
// или формы оплаты труда у сотрудника.
//
Процедура УдалитьПереформироватьПараметрыРасчетаПоРаботнику(Сотрудник)
	
	УдалитьПараметрыРасчетаПоРаботнику(Сотрудник, "Зарплата");
	УдалитьПараметрыРасчетаПоРаботнику(Сотрудник, "Взносы");
	УдалитьПараметрыРасчетаПоРаботнику(Сотрудник, "ВзносыФОТ");
	УдалитьПараметрыРасчетаПоРаботнику(Сотрудник, "НДФЛ");
		
КонецПроцедуры // ПереформироватьПараметрыРасчетаПоРаботнику()

&НаКлиенте
Процедура ОчиститьТаблицыПриИзмененииВидаВыплатыЗавершение(Ответ, ПараметрыВыполнения) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Объект.ВидВыплаты = ВидВыплатыПредыдущий;
		Возврат;
	КонецЕсли;
		
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Объект[ИмяТабличнойЧасти].Очистить();
	КонецЦикла;
	
	Предопределенный = ПроверкаПредопределенности(Объект.ВидВыплаты);
	РасчетОтОбратного = ПроверкаРасчетОтОбратного(Объект.ВидВыплаты);
	
	УправлениеФормой(ЭтаФорма, Предопределенный, РасчетОтОбратного);
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьОтборСтрок(ОтборУстановлен)
	
	Если ОтборУстановлен И Элементы.РаботникиОрганизации.ТекущиеДанные <> Неопределено Тогда    
	    Элементы.Зарплата.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
	    Элементы.Взносы.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
	    Элементы.ВзносыФОТ.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
	    Элементы.НДФЛ.ОтборСтрок = Новый ФиксированнаяСтруктура("Сотрудник", Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник);
		
	Иначе
	    Элементы.Зарплата.ОтборСтрок = Неопределено;
	    Элементы.Взносы.ОтборСтрок = Неопределено;
	    Элементы.ВзносыФОТ.ОтборСтрок = Неопределено;
	    Элементы.НДФЛ.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти 
 
#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ВедомостьБанк = ПолучитьИмяКомандыПечати(Команда.Имя); 
	
	Если ВедомостьБанк Тогда 
		
		Если Объект.РаботникиОрганизации.Количество() > 0 Тогда
			
			СписокВыбора = Новый СписокЗначений;
			
			Для Каждого СтрокаТабличнойЧасти Из Объект.РаботникиОрганизации Цикл
				Если СтрокаТабличнойЧасти.СпособВыплаты = ПредопределенноеЗначение("Перечисление.СпособыВыплатыЗарплаты.ЧерезБанк") Тогда
					СписокВыбора.Добавить(СтрокаТабличнойЧасти.Банк);
				КонецЕсли;
			КонецЦикла;
			
			Если СписокВыбора.Количество() > 1 Тогда				
				
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("СписокВыбора", СписокВыбора);				
				
				ДополнительныеПараметры = Новый Структура;
				ДополнительныеПараметры.Вставить("Команда", Команда);
				
				ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыборБанкаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
				
				ОткрытьФорму("Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.Форма.ВыборБанка", ПараметрыФормы, , Новый УникальныйИдентификатор(), , , ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
				
			ИначеЕсли СписокВыбора.Количество() = 1 Тогда
				
				ВыбранныйБанк = СписокВыбора.Получить(0).Значение;
				
				ВыборБанкаЗавершениеНаСервере(ВыбранныйБанк);
				
				ВыполнитьКомандуПечати(Команда);
				
			Иначе
				
				ВыбранныйБанк = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
				
				ВыборБанкаЗавершениеНаСервере(ВыбранныйБанк);

				ВыполнитьКомандуПечати(Команда);

			КонецЕсли;
			
		КонецЕсли;
				
	Иначе
		
		ВыполнитьКомандуПечати(Команда);
		
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Функция ПолучитьИмяКомандыПечати(ИмяКомандыПечати)
	
	ВедомостьБанк = Ложь;
	
	Для Каждого Команда Из Команды Цикл
		Если Команда.Имя = ИмяКомандыПечати Тогда
			Если Команда.Заголовок = НСтр("ru='Ведомость (банк)';uk='Відомість (банк)'") ИЛИ Команда.Заголовок = НСтр("ru='Список перечислений (банк)';uk='Список перерахувань (банк)'") Тогда
				ВедомостьБанк = Истина; 
				Прервать;
			КонецЕсли;
		КонецЕсли; 		
	КонецЦикла;
	
	Возврат ВедомостьБанк;

КонецФункции 

&НаКлиенте
Процедура ВыборБанкаЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатЗакрытия) = Тип("Структура") И РезультатЗакрытия <> Неопределено Тогда
		ВыборБанкаЗавершениеНаСервере(РезультатЗакрытия.ВыбранныйБанк);	
		ВыполнитьКомандуПечати(ДополнительныеПараметры.Команда)
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыборБанкаЗавершениеНаСервере(ВыбранныйБанк)
	
	ХранилищеОбщихНастроек.Сохранить("ИНАГРО_ЗарплатаКВыплатеОрганизаций", , ВыбранныйБанк);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКомандуПечати(Команда)
	
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры  

#КонецОбласти

