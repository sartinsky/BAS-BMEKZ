#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Форма ОЗ-1
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОЗ1";
	КомандаПечати.Представление = НСтр("ru='Форма ОЗ-1';uk='Форма ОЗ-1'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОЗ1") Тогда
			// Формируем табличный документ и добавляем его в коллекцию печатных форм.
			ИмяМакета = "";
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОЗ1",
				НСтр("ru='Форма ОЗ-1';uk='Форма ОЗ-1'"), ПечатьОЗ1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета),, ИмяМакета);
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

// Функция формирует табличный документ с типовой печатной формой ОЗ-1
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьОЗ1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета) // ИНАГРО
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент   = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВводВЭксплуатациюОС_ОЗ1";
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_UK_ОЗ1");
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",         Ссылка);
		Запрос.УстановитьПараметр("ТекДата",        Ссылка.МоментВремени());
		Запрос.УстановитьПараметр("ТекОрганизация", Ссылка.Организация);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Док.Дата                           КАК ДатаАкта,
		|	Док.Номер                          КАК НомерАкта,
		|	Док.МОЛБУ.Код 				       КАК КодМОЛа,
		|	Док.Организация.НаименованиеПолное КАК Организация,
		|	Док.ПодразделениеОрганизации       КАК ПринялоПодразделение,
		|	Док.Дата                           КАК ДатаВвода,";
		
		Если Ссылка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийУчетАрендованныхОС.Принятие Тогда 
			Запрос.Текст = Запрос.Текст + "
			|	Док.СчетУчетаБУ КАК СчетДт,";
		Иначе 
			Запрос.Текст = Запрос.Текст + "
			|	Док.СчетУчетаБУ КАК СчетКт,";	
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|	Док.Организация.КодПоЕДРПОУ        КАК ЕДРПОУ
		|ИЗ
		|	Документ.ИНАГРО_УчетАрендованныхОС КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КодыОрганизации.СрезПоследних(&ТекДата,
		|		                                 Организация = &ТекОрганизация) КАК КодыОрганизации
		|		ПО Док.Организация = КодыОрганизации.Организация
		|ГДЕ 
		|	Док.Ссылка = &Ссылка
		|	";
		ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
		ВыборкаПоШапке.Следующий();
														
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Если Ссылка.Проведен И Ссылка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийУчетАрендованныхОС.Принятие Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПервоначальныеСведения.ИнвентарныйНомер                    КАК ИнвентарныйНомер,
			|	ПервоначальныеСведения.ПервоначальнаяСтоимость             КАК ПервоначальнаяСтоимость,
			|	ПервоначальныеСведения.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОС,
			|	ПервоначальныеСведения.ОсновноеСредство.ЗаводскойНомер     КАК ЗаводскойНомер,
			|	ПервоначальныеСведения.ОсновноеСредство.ДатаВыпуска        КАК ГодВыпуска,
			|	ПервоначальныеСведения.ОсновноеСредство.НомерПаспорта      КАК НомерПаспорта
			|ИЗ
			|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведения
			|
			|ГДЕ
			|	ПервоначальныеСведения.Регистратор = &Ссылка";
			
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПервоначальныеСведения.ИнвентарныйНомер                    КАК ИнвентарныйНомер,
			|	ПервоначальныеСведения.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОС,
			|	ПервоначальныеСведения.ОсновноеСредство.ЗаводскойНомер     КАК ЗаводскойНомер,
			|	ПервоначальныеСведения.ОсновноеСредство.ДатаВыпуска        КАК ГодВыпуска,
			|	ПервоначальныеСведения.ОсновноеСредство.НомерПаспорта      КАК НомерПаспорта
			|ИЗ
			|	Документ.ИНАГРО_УчетАрендованныхОС.ОС КАК ПервоначальныеСведения
			|
			|ГДЕ
			|	ПервоначальныеСведения.Ссылка = &Ссылка";
			
		КонецЕсли;
		
		Результат = Запрос.Выполнить();
		ВыборкаПоОС = Результат.Выбрать();
		
		ВыборкаПоКомиссии = ОбщегоНазначенияБПВызовСервера.ПолучитьСведенияОКомиссии(Ссылка);
		
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата);
		
		Пока ВыборкаПоОС.Следующий() Цикл

			ОбластьМакета = Макет.ПолучитьОбласть("ОЗ1");
			Параметры     = ОбластьМакета.Параметры;
			Параметры.Заполнить(ВыборкаПоШапке);
			Параметры.Заполнить(ВыборкаПоКомиссии);
			Параметры.Заполнить(ВыборкаПоОС);
			Параметры.ВидОперации = "Введення в експлуатацію";
			Параметры.Валюта      = ВалютаРегламентированногоУчета;
			
			ОбластьМакета.Параметры.ГлавныйБухгалтер 	= ОтветственныеЛица.ГлавныйБухгалтерПредставление;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;	
		
	Возврат ТабДокумент;

КонецФункции // ПечатьОЗ1()

#КонецОбласти

#КонецЕсли