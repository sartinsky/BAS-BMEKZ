#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем мВалютаРегламентированногоУчета;

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
		
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	Если  ТипДанныхЗаполнения = Тип("Структура")
		И ДанныеЗаполнения.Свойство("ВидОперации") Тогда
		ВидОперации = ДанныеЗаполнения.ВидОперации;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
			
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
	Перем Заголовок, СтруктураШапкиДокумента;
	Перем ТаблицаПоОС;

	Заголовок = ОбщегоНазначенияБПВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	мВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
			
    ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
	
	ПодготовитьПараметрыУчетнойПолитики(СтруктураШапкиДокумента,Отказ,Заголовок);

	ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоОС, Отказ, Заголовок);
	
	Если НЕ Отказ Тогда
		
		// Формирование движений регистров, бухгалтерских и налоговых проводок.
		ФормированиеДвижений(СтруктураШапкиДокумента, ТаблицаПоОС, Отказ, Заголовок);
		
	КонецЕсли;
	
	Движения.Хозрасчетный.ВыполнитьДействияПередЗаписьюДвижений();
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКЗаписиДвижений(ЭтотОбъект);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

	ДокументОснование = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область Проведение

Процедура ПодготовитьПараметрыУчетнойПолитики(СтруктураШапкиДокумента, Отказ, Заголовок)

	СтруктураШапкиДокумента.Вставить("ЕстьНалогНаПрибыльДо2015"       , УчетнаяПолитика.ПлательщикНалогаНаПрибыльДо2015(Организация, Дата));
	СтруктураШапкиДокумента.Вставить("ЕстьНДС"                        , УчетнаяПолитика.ПлательщикНДС(Организация, Дата));
	
КонецПроцедуры 

// Процедура формирует структуру шапки документа и дополнительных полей.
// 
Процедура ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента) Экспорт
	
	// Дерево значений, содержащее имена необходимых полей в запросе по шапке.
	Перем ДеревоПолейЗапросаПоШапке;
	
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
			
	// Заполним по шапке документа дерево параметров, нужных при проведении.
	ДеревоПолейЗапросаПоШапке = ОбщегоНазначенияРед12.СформироватьДеревоПолейЗапросаПоШапке();
	
	// Сформируем запрос на дополнительные параметры, нужные при проведении, по данным шапки документа.
	СтруктураШапкиДокумента = УправлениеЗапасами.СформироватьЗапросПоДеревуПолей(ЭтотОбъект, ДеревоПолейЗапросаПоШапке, СтруктураШапкиДокумента, мВалютаРегламентированногоУчета);
	
КонецПроцедуры 

// Процедура формирует таблицы документа.
//
Процедура ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоОС, Отказ, Заголовок) Экспорт
	
	ПогрешностиОкругления = Новый Соответствие;
	
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("ОбъектУчета", 		"ОсновноеСредство");
	СтруктураПолей.Вставить("ИнвентарныйНомер", "ИнвентарныйНомер");
	СтруктураПолей.Вставить("Сумма", 			"СтоимостьБУ");
	
	РезультатЗапросаПоОС = ОбщегоНазначенияРед12.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ОС", СтруктураПолей);
	ТаблицаПоОС          = РезультатЗапросаПоОС.Выгрузить();
				
КонецПроцедуры

// Процедура формирования движений регистров
//
Процедура ФормированиеДвижений(СтруктураШапкиДокумента, ТаблицаПоОС, Отказ, Заголовок)
	
	ФормированиеДвиженийРегл(СтруктураШапкиДокумента, ТаблицаПоОС, Отказ, Заголовок);
	
КонецПроцедуры 

// Процедура формирования движений регл. регистров
//
Процедура ФормированиеДвиженийРегл(СтруктураШапкиДокумента, ТаблицаПоОС, Отказ, Заголовок)
	
	ДатаДока       = Дата;
	ТекОрганизация = СтруктураШапкиДокумента.Организация;
	
	ТЗДанныеОС = Новый ТаблицаЗначений;
	ТЗДанныеОС.Колонки.Добавить("ОбъектУчета");
	ТЗДанныеОС.Колонки.Добавить("Сумма",    ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15,2));
	
	ПроводкиБУ = Движения.Хозрасчетный;
	МестонахождениеОС        = Движения.МестонахождениеОСБухгалтерскийУчет;
	ПервоначальныеСведения   = Движения.ПервоначальныеСведенияОСБухгалтерскийУчет;
	СостояниеОС              = Движения.СостоянияОСОрганизаций;
	ОперацииОС               = Движения.СобытияОСОрганизаций;
	СчетаУчетаОС             = Движения.СчетаБухгалтерскогоУчетаОС; 
	
	Для Каждого Строка Из ТаблицаПоОС Цикл
		
		ТекОС = Строка.ОбъектУчета;
		
		Если Строка.Сумма > 0 Тогда
			
			Проводка = ПроводкиБУ.Добавить();
			
			Проводка.Период       = ДатаДока;
			Проводка.Организация  = СтруктураШапкиДокумента.Организация;
			Проводка.НомерЖурнала = НСтр("ru='ОС';uk='ОЗ'",Локализация.КодЯзыкаИнформационнойБазы());
			Проводка.Содержание   = НСтр("ru='Введен в эксплуатацию объект ОС';uk=""Введений в експлуатацію об'єкт ОЗ""",Локализация.КодЯзыкаИнформационнойБазы());
			Проводка.Сумма        = Строка.Сумма;
			
			Если ВидОперации = Перечисления.ИНАГРО_ВидыОперацийУчетАрендованныхОС.Принятие Тогда
				Проводка.СчетДт       = СтруктураШапкиДокумента.СчетУчетаБУ;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", Строка.ОбъектУчета);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
			Иначе
				Проводка.СчетКт       = СтруктураШапкиДокумента.СчетУчетаБУ;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", Строка.ОбъектУчета);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ВидОперации = Перечисления.ИНАГРО_ВидыОперацийУчетАрендованныхОС.Принятие Тогда
			
			// Движения по регистру ПервоначальныеСведенияОбОсновныхСредствах
			Движение = ПервоначальныеСведения.Добавить();
			Движение.Период                      = ДатаДока;
			Движение.ОсновноеСредство            = Строка.ОбъектУчета;
			Движение.Организация                 = ТекОрганизация;
			Движение.ПервоначальнаяСтоимость     = Строка.Сумма;
			Движение.ИнвентарныйНомер            = Строка.ИнвентарныйНомер;
			
			// Движения по регистру МестонахождениеОсновныхСредств
			Движение = МестонахождениеОС.Добавить();
			Движение.Период               = ДатаДока;
			Движение.ОсновноеСредство     = Строка.ОбъектУчета;
			Движение.Организация          = ТекОрганизация;
			Движение.Местонахождение      = СтруктураШапкиДокумента.ПодразделениеОрганизации;
			Движение.МОЛ                  = СтруктураШапкиДокумента.МОЛБУ;
			
			// Движения по регистру СчетаБухгалтерскогоУчетаОС
			Движение = СчетаУчетаОС.Добавить();
			Движение.Период                    = ДатаДока;
			Движение.ОсновноеСредство          = Строка.ОбъектУчета;
			Движение.Организация               = ТекОрганизация;
			Движение.СчетУчета                 = СтруктураШапкиДокумента.СчетУчетаБУ;
						
		КонецЕсли;
		
		// Движения по регистру СостоянияОСОрганизаций
		Движение = СостояниеОС.Добавить();
		Движение.ДатаСостояния        = ДатаДока;
		Движение.ОсновноеСредство     = Строка.ОбъектУчета;
		Движение.Организация          = ТекОрганизация;
		Если СтруктураШапкиДокумента.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийУчетАрендованныхОС.Принятие Тогда
			Движение.Состояние        = Перечисления.СостоянияОС.ВведеноВЭксплуатацию;
		Иначе
			Движение.Состояние        = Перечисления.СостоянияОС.СнятоСУчета;
		КонецЕсли;
		Движение.НазваниеДокумента    = Строка(СтруктураШапкиДокумента.Ссылка.Метаданные());
		Движение.НомерДокумента       = СтруктураШапкиДокумента.Номер;
		
		// Движения по регистру СобытияОСОрганизаций
		Движение = ОперацииОС.Добавить();
		Движение.Период            = ДатаДока;
		Движение.ОсновноеСредство  = Строка.ОбъектУчета;
		Движение.Организация       = ТекОрганизация;
		Движение.Событие           = СтруктураШапкиДокумента.СобытиеОС;
		Движение.НазваниеДокумента = Строка(СтруктураШапкиДокумента.Ссылка.Метаданные());
		Движение.НомерДокумента    = СтруктураШапкиДокумента.Номер;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли