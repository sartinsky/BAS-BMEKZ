#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Форма ОЗ-1
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОЗ1";
	КомандаПечати.Представление = НСтр("ru='Форма ОЗ-1';uk='Форма ОЗ-1'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// ИНАГРО++
	
	// Форма ОЗСГ-1 
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНАГРО_ОЗСГ1_ПриемПередачаОС";
	КомандаПечати.Представление = НСтр("ru='Форма ОЗСГ-1';uk='Форма ОЗСГ-1'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";

	Если ИНАГРО_ОбщийВызовСервераПовтИсп.ЕстьБСПУ() Тогда
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ИНАГРО_ПФ_MXL_ДБАСГ1_ПереводВДолгосрочныеРаст";
		КомандаПечати.Представление = НСтр("ru='Акт приема долгосрочных биологических активов растениеводства (ф.ДБАСГ-1)';uk='Акт приймання довгострокових біологічних активів рослинництва (ф.ДБАСГ-1)'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.СписокФорм    = "ФормаДокумента";
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ИНАГРО_ПФ_MXL_ДБАСГ2_ПБАСГ9_ПеремещениеИзГруппыВГруппу";
		КомандаПечати.Представление = НСтр("ru='Акт приема в основное стадо (ф.ДБАСГ-2)';uk='Акт приймання в основне стадо (ф.ДБАСГ-2)'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.СписокФорм    = "ФормаДокумента";		
		
	КонецЕсли;

	// ИНАГРО--
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Ввод в эксплуатацию ОС""';uk='Реєстр документів ""Введення в експлуатацію ОЗ""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

КонецПроцедуры


// Функция формирует табличный документ с типовой печатной формой ОЗ-1
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьОЗ1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета) // ИНАГРО
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент   = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВводВЭксплуатациюОС_ОЗ1";
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_UK_ОЗ1");
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",         Ссылка);
		Запрос.УстановитьПараметр("ТекДата",        Ссылка.МоментВремени());
		Запрос.УстановитьПараметр("ТекОрганизация", Ссылка.Организация);
		Запрос.УстановитьПараметр("Сдал", 			Ссылка.Сдал);
		Запрос.УстановитьПараметр("Принял", 		Ссылка.Принял);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Док.Дата                           КАК ДатаАкта,
		|	Док.Номер                          КАК НомерАкта,
		|	Док.МОЛБУ.Код 				       КАК КодМОЛа,
		|	Док.Организация.НаименованиеПолное КАК Организация,
		|	Док.ПодразделениеОрганизации       КАК ПринялоПодразделение,
		|	Док.Дата                           КАК ДатаВвода,
		|	Док.СчетУчетаБУ					   КАК СчетДт,
		|	Док.СчетУчетаБУВнеоборотногоАктива КАК СчетКт,
		|	Док.Организация.КодПоЕДРПОУ        КАК ЕДРПОУ
		|ИЗ
		|	Документ.ВводВЭксплуатациюОС КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КодыОрганизации.СрезПоследних(&ТекДата,
		|		                                 Организация = &ТекОрганизация) КАК КодыОрганизации
		|		ПО Док.Организация = КодыОрганизации.Организация
		|ГДЕ 
		|	Док.Ссылка = &Ссылка
		|	";
		ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
		ВыборкаПоШапке.Следующий();
														
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Если Ссылка.Проведен Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПервоначальныеСведения.ИнвентарныйНомер                    КАК ИнвентарныйНомер,
			|	ПервоначальныеСведения.ПервоначальнаяСтоимость             КАК ПервоначальнаяСтоимость,
			|	ПервоначальныеСведения.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОС,
			|	ПервоначальныеСведения.ОсновноеСредство.ЗаводскойНомер     КАК ЗаводскойНомер,
			|	ПервоначальныеСведения.ОсновноеСредство.ДатаВыпуска        КАК ГодВыпуска,
			|	ПервоначальныеСведения.ОсновноеСредство.НомерПаспорта      КАК НомерПаспорта
			|ИЗ
			|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведения
			|
			|ГДЕ
			|	ПервоначальныеСведения.Регистратор = &Ссылка";
			
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПервоначальныеСведения.ИнвентарныйНомер                    КАК ИнвентарныйНомер,
			|	ПервоначальныеСведения.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОС,
			|	ПервоначальныеСведения.ОсновноеСредство.ЗаводскойНомер     КАК ЗаводскойНомер,
			|	ПервоначальныеСведения.ОсновноеСредство.ДатаВыпуска        КАК ГодВыпуска,
			|	ПервоначальныеСведения.ОсновноеСредство.НомерПаспорта      КАК НомерПаспорта
			|ИЗ
			|	Документ.ВводВЭксплуатациюОС.ОС КАК ПервоначальныеСведения
			|
			|ГДЕ
			|	ПервоначальныеСведения.Ссылка = &Ссылка";
			
		КонецЕсли;
		
		Результат = Запрос.Выполнить();
		ВыборкаПоОС = Результат.Выбрать();
		
		ВыборкаПоКомиссии = ОбщегоНазначенияБПВызовСервера.ПолучитьСведенияОКомиссии(Ссылка);
		
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		
		ДанныеФизЛицаПолучил = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Ссылка.Организация, Ссылка.Принял, Ссылка.Дата);
		ДанныеФизЛицаСдал = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Ссылка.Организация, Ссылка.Сдал, Ссылка.Дата);
		ДанныеСотрПолучил = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Ссылка.Организация, Ссылка.Принял, Ссылка.Дата);
		ДанныеСотрСдал = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Ссылка.Организация, Ссылка.Сдал, Ссылка.Дата);
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата);
		
		Пока ВыборкаПоОС.Следующий() Цикл

			ОбластьМакета = Макет.ПолучитьОбласть("ОЗ1");
			Параметры     = ОбластьМакета.Параметры;
			Параметры.Заполнить(ВыборкаПоШапке);
			Параметры.Заполнить(ВыборкаПоКомиссии);
			Параметры.Заполнить(ВыборкаПоОС);
			Параметры.ВидОперации = "Введення в експлуатацію";
			Параметры.Валюта      = ВалютаРегламентированногоУчета;
			
			ОбластьМакета.Параметры.ПолучилДолжность 	= ДанныеСотрПолучил.Должность;
			ОбластьМакета.Параметры.ПолучилФИО 			= ДанныеФизЛицаПолучил.Представление;
			
			ОбластьМакета.Параметры.СдалДолжность 	= ДанныеСотрСдал.Должность;
			ОбластьМакета.Параметры.СдалФИО 		= ДанныеФизЛицаСдал.Представление;
			
			ОбластьМакета.Параметры.ГлавныйБухгалтер 	= ОтветственныеЛица.ГлавныйБухгалтерПредставление;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;	
		
	Возврат ТабДокумент;

КонецФункции // ПечатьОЗ1()

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// ИНАГРО++
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если ИНАГРО_ОбщийВызовСервераПовтИсп.ЕстьБСПУ() И ЗначениеЗаполнено(Ссылка.ИНАГРО_ДокументОперативногоУчета) Тогда
			
			ИмяМакета = "";
			
			Если НЕ (Ссылка.ИНАГРО_ДокументОперативногоУчета.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПеремещениеБА.ПеремещениеРастений
				 ИЛИ Ссылка.ИНАГРО_ДокументОперативногоУчета.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПеремещениеБА.ПеремещениеРастений1552
				 ИЛИ Ссылка.ИНАГРО_ДокументОперативногоУчета.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийПеремещениеБА.ПереводВДолгосрочныеРаст
				 ИЛИ Ссылка.ИНАГРО_ДокументОперативногоУчета.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийОприходованиеБА.ОприходованиеРастений) Тогда
				
				Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНАГРО_ПФ_MXL_ДБАСГ2_ПБАСГ9_ПеремещениеИзГруппыВГруппу") Тогда
					УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИНАГРО_ПФ_MXL_ДБАСГ2_ПБАСГ9_ПеремещениеИзГруппыВГруппу", НСтр("ru='Акт приема в основное стадо (ф.ДБАСГ-2)';uk='Акт приймання в основне стадо (ф.ДБАСГ-2)'"), 
						ПечатьВводВОсновноеСтадо(МассивОбъектов, ОбъектыПечати, ПараметрыВывода, ИмяМакета),,, , Истина);
				КонецЕсли;
			Иначе	
			
				Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНАГРО_ПФ_MXL_ДБАСГ1_ПереводВДолгосрочныеРаст") Тогда
					УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИНАГРО_ПФ_MXL_ДБАСГ1_ПереводВДолгосрочныеРаст", НСтр("ru='Акт приема долгосрочных биологических активов растениеводства (ф.ДБАСГ-1)';uk='Акт приймання довгострокових біологічних активів рослинництва (ф.ДБАСГ-1)'"), 
						ПечатьПереводВДолгосрочныеРаст(МассивОбъектов, ОбъектыПечати, ПараметрыВывода, ИмяМакета),,, , Истина);
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			
			// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
			Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОЗ1") Тогда
				// Формируем табличный документ и добавляем его в коллекцию печатных форм.
				ИмяМакета = "";
				УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОЗ1",
					НСтр("ru='Форма ОЗ-1';uk='Форма ОЗ-1'"), ПечатьОЗ1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета),, ИмяМакета);
			КонецЕсли;

			Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНАГРО_ОЗСГ1_ПриемПередачаОС") Тогда
				// Формируем табличный документ и добавляем его в коллекцию печатных форм.
				ИмяМакета = "";
				УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ИНАГРО_ОЗСГ1_ПриемПередачаОС",
					НСтр("ru='Форма ОЗСГ-1';uk='Форма ОЗСГ-1'"), ИНАГРО_ПечатьОЗСГ1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета),, ИмяМакета);
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	// ИНАГРО--
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "ВидОперации");
	
	Возврат Результат;
	
КонецФункции

// ИНАРО++
Функция ИНАГРО_ПечатьОЗСГ1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент   = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВводВЭксплуатациюОС_ОЗСГ1";
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ИНАГРО_ОЗСГ1_ПриемПередачаОС");
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка",         Ссылка);
	Запрос.УстановитьПараметр("ТекДата",        Ссылка.МоментВремени());
	Запрос.УстановитьПараметр("ТекОрганизация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Сдал", 			Ссылка.Сдал);
	Запрос.УстановитьПараметр("Принял", 		Ссылка.Принял);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Док.Дата                           КАК ДатаАкта,
	|	Док.Номер                          КАК НомерАкта,
	|	Док.МОЛБУ 				       	   КАК МОЛ,
	|	Док.Организация.НаименованиеПолное КАК Организация,
	|	Док.ПодразделениеОрганизации       КАК ПринялоПодразделение,
	|	Док.Дата                           КАК ДатаВвода,
	|	Док.СчетУчетаБУ					   КАК СчетДт,
	|	Док.СчетУчетаБУВнеоборотногоАктива КАК СчетКт,
	|	Док.СчетНачисленияАмортизацииБУ 	КАК СчетНачисленияАмортизацииБУ,
	|	Док.Организация.КодПоЕДРПОУ        КАК ЕДРПОУ,
	|	ФИОСдал.Фамилия + "" ""
	|		+ ПОДСТРОКА(ФИОСдал.Имя, 1, 1) + "". ""
	|		+ ПОДСТРОКА(ФИОСдал.Отчество, 1, 1) + "".""               КАК СдалФИО,
	|	ФИОПринял.Фамилия + "" ""
	|		+ ПОДСТРОКА(ФИОПринял.Имя, 1, 1) + "". ""
	|		+ ПОДСТРОКА(ФИОПринял.Отчество, 1, 1) + "".""             КАК ПолучилФИО,
	|	ДолжностьСдал.Должность                                       КАК СдалДолжность,
	|	ДолжностьПринял.Должность                                     КАК ПолучилДолжность
	|ИЗ
	|	Документ.ВводВЭксплуатациюОС КАК Док
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КодыОрганизации.СрезПоследних(&ТекДата,
	|		                                 Организация = &ТекОрганизация) КАК КодыОрганизации
	|		ПО Док.Организация = КодыОрганизации.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(
	|		                    &ТекДата,
	|		                    Организация = &ТекОрганизация
	|		                    И Сотрудник.ФизическоеЛицо = &Сдал) КАК ДолжностьСдал
	|		ПО Док.Организация = ДолжностьСдал.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(
	|		                    &ТекДата,
	|		                    Организация = &ТекОрганизация
	|		                    И Сотрудник.ФизическоеЛицо = &Принял) КАК ДолжностьПринял
	|		ПО Док.Организация = ДолжностьПринял.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.ФИОФизическихЛиц.СрезПоследних(
	|			                &ТекДата,
	|			                ФизическоеЛицо = &Сдал) КАК ФИОСдал
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.ФИОФизическихЛиц.СрезПоследних(
	|			                &ТекДата,
	|			                ФизическоеЛицо = &Принял) КАК ФИОПринял
	|		ПО (ИСТИНА)
	|ГДЕ 
	|	Док.Ссылка = &Ссылка
	|	";
	ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
	ВыборкаПоШапке.Следующий();

													
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Если Ссылка.Проведен Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПервоначальныеСведения.ИнвентарныйНомер                    КАК ИнвентарныйНомер,
		|	ПервоначальныеСведения.ПервоначальнаяСтоимость             КАК ПервоначальнаяСтоимость,
		|	ПервоначальныеСведения.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОС,
		|	ПервоначальныеСведения.ОсновноеСредство.ЗаводскойНомер     КАК ЗаводскойНомер,
		|	ПервоначальныеСведения.ОсновноеСредство.ДатаВыпуска        КАК ГодВыпуска,
		|	ПервоначальныеСведения.ОсновноеСредство.НомерПаспорта      КАК НомерПаспорта
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведения
		|
		|ГДЕ
		|	ПервоначальныеСведения.Регистратор = &Ссылка";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПервоначальныеСведения.ИнвентарныйНомер                    КАК ИнвентарныйНомер,
		|	ПервоначальныеСведения.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОС,
		|	ПервоначальныеСведения.ОсновноеСредство.ЗаводскойНомер     КАК ЗаводскойНомер,
		|	ПервоначальныеСведения.ОсновноеСредство.ДатаВыпуска        КАК ГодВыпуска,
		|	ПервоначальныеСведения.ОсновноеСредство.НомерПаспорта      КАК НомерПаспорта
		|ИЗ
		|	Документ.ВводВЭксплуатациюОС.ОС КАК ПервоначальныеСведения
		|
		|ГДЕ
		|	ПервоначальныеСведения.Ссылка = &Ссылка";
		
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	ВыборкаПоОС = Результат.Выбрать();
	
	ВыборкаПоКомиссии = ОбщегоНазначенияБПВызовСервера.ПолучитьСведенияОКомиссии(Ссылка);
	
    ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Пока ВыборкаПоОС.Следующий() Цикл

		ОбластьМакета = Макет.ПолучитьОбласть("ОЗ1");
		Параметры     = ОбластьМакета.Параметры;
		Параметры.Заполнить(ВыборкаПоШапке);
		Параметры.Заполнить(ВыборкаПоКомиссии);
		Параметры.Заполнить(ВыборкаПоОС);
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;

	ТабДокумент.ОбластьПечати = ТабДокумент.Область(2, 2, ТабДокумент.ВысотаТаблицы, ТабДокумент.ШиринаТаблицы);
	
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;	
		
	Возврат ТабДокумент;

КонецФункции // ПечатьОЗ1()

Функция ПечатьВводВОсновноеСтадо(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета)
	
	УстановитьПривилегированныйРежим(Истина);

	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьОбщийМакет("ИНАГРО_ПФ_MXL_ДБАСГ2_ПБАСГ9_ПеремещениеИзГруппыВГруппу");
	КодЯзыкаПечать = ПараметрыПечати.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		//запрос по ТЧ
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйДвиженияССубконто.СчетКт КАК Кред,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
		|	СУММА(ХозрасчетныйДвиженияССубконто.Сумма) КАК Сумма,
		|	ХозрасчетныйДвиженияССубконто.СчетДт КАК Деб,
		|	ХозрасчетныйДвиженияССубконто.СубконтоДт1
		|ПОМЕСТИТЬ Проводки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(, , Регистратор = &Ссылка, , ) КАК ХозрасчетныйДвиженияССубконто
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйДвиженияССубконто.СчетКт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконто.СчетДт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоДт1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВводВЭксплуатациюОСОС.Ссылка.СчетУчетаБУ КАК СчетУчетаБУ,
		|	ВводВЭксплуатациюОСОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ВводВЭксплуатациюОСОС.ОсновноеСредство,
		|	МИНИМУМ(ВводВЭксплуатациюОСОС.НомерСтроки) КАК НомерСтроки,
		|	ВводВЭксплуатациюОСОС.Ссылка.ПодразделениеОрганизации,
		|	ВводВЭксплуатациюОСОС.Ссылка,
		|	ВводВЭксплуатациюОСОС.Ссылка.МОЛБУ
		|ПОМЕСТИТЬ Док
		|ИЗ
		|	Документ.ВводВЭксплуатациюОС.ОС КАК ВводВЭксплуатациюОСОС
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводВЭксплуатациюОСОС.ОсновноеСредство,
		|	ВводВЭксплуатациюОСОС.ИнвентарныйНомер,
		|	ВводВЭксплуатациюОСОС.Ссылка.СчетУчетаБУ,
		|	ВводВЭксплуатациюОСОС.Ссылка.ПодразделениеОрганизации,
		|	ВводВЭксплуатациюОСОС.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Док.ИнвентарныйНомер,
		|	Проводки.Сумма КАК Сумма,
		|	Док.НомерСтроки КАК НомерСтроки,
		|	Док.ПодразделениеОрганизации КАК Подразделение,
		|	Проводки.Деб,
		|	Проводки.Кред,
		|	Док.Ссылка.ИНАГРО_БиологическийАктив.Наименование КАК группаНов,
		|	Док.Ссылка.ИНАГРО_БиологическийАктив.ВидЖивотного КАК ВидЖивотного,
		|	Док.МОЛБУ КАК МОЛ
		|ИЗ
		|	Док КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Проводки КАК Проводки
		|		ПО Док.ОсновноеСредство = Проводки.СубконтоДт1
		|			И Док.СчетУчетаБУ = Проводки.Деб
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		ВыборкаТЧ = Запрос.Выполнить().Выбрать();
		
		// печать производится на языке, указанном в настройках пользователя
		//КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(Пользователи.ТекущийПользователь(), "РежимФормированияПечатныхФорм"));
		//Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
		// Шапка
		Шапка = Макет.ПолучитьОбласть("Шапка1");
		Шапка.Параметры.Заполнить(Ссылка);
		Шапка.Параметры.ЕДРПОУ = Ссылка.Организация.КодПоЕДРПОУ;
		Шапка.Параметры.Подразделение = Ссылка.ПодразделениеОрганизации;
		Шапка.Параметры.НомерФормы = "ДБАСГ-2";
		ТабДокумент.Вывести(Шапка);
		
		// Заголовок
		Область = Макет.ПолучитьОбласть("Заголовок");
		Область.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Ссылка, НСтр("ru='Акт приема долгосрочных биологических активов животноводства 
			|(формирование основного стада животных)';uk='Акт приймання довгострокових біологічних активів тваринництва 
			|(формування основного стада тварин)'",КодЯзыкаПечать),КодЯзыкаПечать);
		ТабДокумент.Вывести(Область);
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.Заполнить(Ссылка);
		
		//строка
		ОбластьСтрока = Макет.ПолучитьОбласть("строка");
		
		Пока ВыборкаТЧ.Следующий() Цикл 
			Если ВыборкаТЧ.ТипЗаписи()= ТипЗаписиЗапроса.ОбщийИтог Тогда
				ОбластьПодвал.Параметры.Заполнить(ВыборкаТЧ);
				ОбластьПодвал.Параметры.Количество = Ссылка.ИНАГРО_Количество;
				ОбластьПодвал.Параметры.Голов = Ссылка.ОС.Количество();
				Продолжить;
			ИначеЕсли ВыборкаТЧ.НомерСтроки = 1 Тогда
				деб  = ВыборкаТЧ.деб;
				кред = ВыборкаТЧ.кред;
				Шапка2 = Макет.ПолучитьОбласть("Шапка2");
				Шапка2.Параметры.Заполнить(ВыборкаТЧ);
				ТабДокумент.Вывести(Шапка2);
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаТЧ);
			ОбластьСтрока.Параметры.Количество = ?(Ссылка.ОС.Количество()>0,Ссылка.ИНАГРО_Количество / Ссылка.ОС.Количество(),0);
			ОбластьСтрока.Параметры.Голов = 1;
			
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		// Подвал
		ОбластьПодвал.Параметры.деб = деб;
		ОбластьПодвал.Параметры.кред = кред;
		ТабДокумент.Вывести(ОбластьПодвал);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;	
		
		Возврат ТабДокумент;
	КонецФункции
	
Функция ПечатьПереводВДолгосрочныеРаст(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета)
		
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьОбщийМакет("ИНАГРО_ПФ_MXL_ДБАСГ1_ПереводВДолгосрочныеРаст");
	
	КодЯзыкаПечать = ПараметрыПечати.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		////Получим КодПоЕДРПОУ 
		//Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//|	КодыОрганизацииСрезПоследних.КодПоЕДРПОУ
		//|ИЗ
		//|	РегистрСведений.КодыОрганизации.СрезПоследних(&Момент, Организация = &Организация) КАК КодыОрганизацииСрезПоследних";
		//
		//Запрос.УстановитьПараметр("Организация",Ссылка.Организация );
		//Запрос.УстановитьПараметр("Момент", Ссылка.МоментВремени());
		//
		//ВыборкаЕДРПОУ = Запрос.Выполнить().Выбрать();
		//ВыборкаЕДРПОУ.Следующий();
		//
		//
		//запрос по ТЧ
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйДвиженияССубконто.СчетКт КАК Кред,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
		|	СУММА(ХозрасчетныйДвиженияССубконто.Сумма) КАК Сумма,
		|	ХозрасчетныйДвиженияССубконто.СчетДт КАК Деб,
		|	ХозрасчетныйДвиженияССубконто.СубконтоДт1
		|ПОМЕСТИТЬ Проводки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(, , Регистратор = &Ссылка, , ) КАК ХозрасчетныйДвиженияССубконто
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйДвиженияССубконто.СчетКт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
		|	ХозрасчетныйДвиженияССубконто.СчетДт,
		|	ХозрасчетныйДвиженияССубконто.СубконтоДт1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВводВЭксплуатациюОСОС.Ссылка.СчетУчетаБУ КАК СчетУчетаБУ,
		|	ВводВЭксплуатациюОСОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ВводВЭксплуатациюОСОС.ОсновноеСредство,
		|	МИНИМУМ(ВводВЭксплуатациюОСОС.НомерСтроки) КАК НомерСтроки,
		|	ВводВЭксплуатациюОСОС.Ссылка.ПодразделениеОрганизации,
		|	СУММА(1) КАК Количество
		|ПОМЕСТИТЬ Док
		|ИЗ
		|	Документ.ВводВЭксплуатациюОС.ОС КАК ВводВЭксплуатациюОСОС
		|
		|СГРУППИРОВАТЬ ПО
		|	ВводВЭксплуатациюОСОС.ОсновноеСредство,
		|	ВводВЭксплуатациюОСОС.ИнвентарныйНомер,
		|	ВводВЭксплуатациюОСОС.Ссылка.СчетУчетаБУ,
		|	ВводВЭксплуатациюОСОС.Ссылка.ПодразделениеОрганизации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Док.ИнвентарныйНомер,
		|	Проводки.Сумма КАК Сумма,
		|	Док.НомерСтроки,
		|	Док.ПодразделениеОрганизации КАК Подразделение,
		|	Док.Количество КАК Количество,
		|	Проводки.Деб,
		|	Проводки.Кред
		|ИЗ
		|	Док КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Проводки КАК Проводки
		|		ПО Док.ОсновноеСредство = Проводки.СубконтоДт1
		|			И Док.СчетУчетаБУ = Проводки.Деб
		|ИТОГИ
		|	СУММА(Сумма),
		|	СУММА(Количество)
		|ПО
		|	ОБЩИЕ";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка.Ссылка);
		ВыборкаТЧ = Запрос.Выполнить().Выбрать();
		
		ВыборкаПоКомиссии = ОбщегоНазначенияБПВызовСервера.ПолучитьСведенияОКомиссии(Ссылка);
		
		// Шапка
		Шапка = Макет.ПолучитьОбласть("Шапка1");
		Шапка.Параметры.Заполнить(Ссылка);
		Шапка.Параметры.ЕДРПОУ = Ссылка.Организация.КодПоЕДРПОУ;
		Шапка.Параметры.Заполнить(ВыборкаПоКомиссии);
		Шапка.Параметры.Год = Год(Ссылка.Дата);
		Шапка.Параметры.Месяц = Месяц(Ссылка.Дата);
		Шапка.Параметры.Число = День(Ссылка.Дата);
		Шапка.Параметры.Подразделение = Ссылка.ПодразделениеОрганизации;
		
		ТабДокумент.Вывести(Шапка);
		
		// Шапка
		Шапка2 = Макет.ПолучитьОбласть("Шапка2");
		ТабДокумент.Вывести(Шапка2);
		
		//строка
		ОбластьСтрока = Макет.ПолучитьОбласть("строка");
		Областьитог = Макет.ПолучитьОбласть("итог");
		Пока ВыборкаТЧ.Следующий() Цикл 
			Если ВыборкаТЧ.ТипЗаписи()= ТипЗаписиЗапроса.ОбщийИтог Тогда
				Областьитог.Параметры.Заполнить(ВыборкаТЧ);
				Продолжить;
			КонецЕсли;
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаТЧ);
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		// итог
		ТабДокумент.Вывести(Областьитог);
		
		// Подвал
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.Заполнить(Ссылка);
		Область.Параметры.Заполнить(ВыборкаПоКомиссии);
		ТабДокумент.Вывести(Область);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;	
		
		Возврат ТабДокумент;
	КонецФункции
// ИНАГРО--

#КонецОбласти

#КонецЕсли