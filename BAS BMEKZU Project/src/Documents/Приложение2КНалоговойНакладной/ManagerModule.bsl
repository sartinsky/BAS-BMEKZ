#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(ДанныеОбъекта, СтрокаТЧ, ИмяТабЧасти) Экспорт

	Документы.Приложение2КНалоговойНакладной.ЗаполнитьСтатьюДекларацииНДСНалоговыеОбязательства(ДанныеОбъекта, СтрокаТЧ, ИмяТабЧасти);
	
КонецПроцедуры // ЗаполнитьСчетаУчетаВСтрокеТабЧасти()

Процедура ЗаполнитьСчетаУчетаВТабЧасти(ДанныеОбъекта,ТабличнаяЧасть, ИмяТабЧасти) Экспорт

	Для каждого СтрокаТабЧасти Из ТабличнаяЧасть Цикл
		ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(ДанныеОбъекта, СтрокаТабЧасти, ИмяТабЧасти);
	КонецЦикла;

КонецПроцедуры // ЗаполнитьСчетаУчетаВТабЧасти()

Процедура ЗаполнитьСтатьюДекларацииНДСНалоговыеОбязательства(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабЧасти) Экспорт
	
	Если Врег(ИмяТабЧасти) = Врег("ВозвратнаяТара") Тогда
		Возврат
	КонецЕсли;
	
	СтрокаТабличнойЧасти.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НОИзменениеСтоимости;
	
	Если  ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
	  ИЛИ ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
		СтрокаТабличнойЧасти.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НОКорректировка_НеОбъект;
	ИначеЕсли (ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
	  ИЛИ ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
	  ИЛИ ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
	  ИЛИ ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат)
	  И ДанныеОбъекта.ТипПричиныНевыдачиПокупателю <> 7 Тогда
		СтрокаТабличнойЧасти.СтатьяДекларацииНДСНалоговыеОбязательства = Справочники.СтатьиНалоговыхДеклараций.НДС_НОКорректировка_НООсвобожден;
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет заполнение текста условий продажи.
Процедура ЗаполнитьУсловиеПродажи(ДанныеОбъекта, Основание = Неопределено) Экспорт
	
	Если Основание = Неопределено Тогда
		Основание = ДанныеОбъекта.ДокументОснование;
	КонецЕсли;
	
	Если  ДанныеОбъекта.ВидОперации <> Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОблагаемыеОперацииВозврат
		И ДанныеОбъекта.ВидОперации <> Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
		И ДанныеОбъекта.ВидОперации <> Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОблагаемыеОперацииВозврат
		И ДанныеОбъекта.ВидОперации <> Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
		
		ДанныеОбъекта.УсловиеПродажи =  ДанныеОбъекта.НалоговаяНакладная.УсловиеПродажи;
		ДанныеОбъекта.ФормаРасчетов = ДанныеОбъекта.НалоговаяНакладная.ФормаРасчетов;	
		
	Иначе
		
		ДанныеОбъекта.УсловиеПродажи =  ДанныеОбъекта.НалоговаяНакладная.УсловиеПродажи;
		ДанныеОбъекта.ФормаРасчетов  = "Касовий чек";
		
	КонецЕсли;
	
	// заполним текстовые реквизиты по-украински
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		ДанныеОбъекта.УсловиеПродажи = ?(ЗначениеЗаполнено(ДанныеОбъекта.УсловиеПродажи),ДанныеОбъекта.УсловиеПродажи + ", ","") + "накладна на повернення № "+ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Основание.Номер,Истина,Истина)+" вiд "+Формат(Основание.Дата, "ДФ='дд.ММ.гггг'");
		
	КонецЕсли;	
	
КонецПроцедуры // ЗаполнитьУсловиеПродажи()

Процедура ЗаполнитьВидДоговора(ДанныеОбъекта) Экспорт

	ДанныеОбъекта.ВидДоговора = ДанныеОбъекта.ДоговорКонтрагента.ВидДоговораПоГК;

КонецПроцедуры

Процедура УстановитьКодУКТВЭДВстрокеТоваров(СтрокаТЧ) Экспорт
	
	Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
		ЗначениеНоменклатураГТД = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.Номенклатура, "НоменклатураГТД");
		Если ТипЗнч(ЗначениеНоменклатураГТД) = Тип("СправочникСсылка.НоменклатураГТД") Тогда
			СтрокаТЧ.КодУКТВЭД = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначениеНоменклатураГТД, "КодУКТВЭД");
		ИначеЕсли ТипЗнч(ЗначениеНоменклатураГТД) = Тип("СправочникСсылка.КлассификаторУКТВЭД") Тогда
			СтрокаТЧ.КодУКТВЭД = ЗначениеНоменклатураГТД;
		КонецЕсли; 
	КонецЕсли; 
		
КонецПроцедуры

Функция ОпределитьДопустимыеСтавкиНДС(Объект) Экспорт
	СписокСтавокНДС = Новый СписокЗначений();
	
	Если    Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОблагаемыеОперацииВозврат 
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОблагаемыеОперацииКорректировка 
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОблагаемыеОперацииВозврат
		ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОблагаемыеОперацииВозврат Тогда
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС20);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС14);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС7);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС0);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.СпецСт8); // ИНАГРО
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат Тогда
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС20);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС14);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС7);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.СпецСт8); // ИНАГРО
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
		  ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда

		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НеНДС);
		
	ИначеЕсли  Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат 
		   ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка 	
	  	   ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
		   ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.БезНДС);
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда	
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС20);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС14);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС7);
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС20);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС14);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС7);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НДС0);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.БезНДС);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.НеНДС);
		СписокСтавокНДС.Добавить(Перечисления.СтавкиНДС.СпецСт8); // ИНАГРО
	КонецЕсли;
		
	Возврат СписокСтавокНДС;
	
КонецФункции

Процедура УстановитьТипПричиныНевыдачиПокупателюПоУмолчанию(Объект, ВалютаРегламентированногоУчета=Неопределено) Экспорт
	
	Если ВалютаРегламентированногоУчета = Неопределено Тогда
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли; 
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
	
		Если Объект.Дата < НалоговыйУчетПовтИсп.ДатаВступленияВСилуПриказа1379() Тогда
		    Объект.ТипПричиныНевыдачиПокупателю = 2;
		Иначе	
			Объект.ТипПричиныНевыдачиПокупателю = 14;
		КонецЕсли;
		
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
		
		Объект.ТипПричиныНевыдачиПокупателю = 15;
		
	ИначеЕсли НЕ Объект.ВалютаДокумента = ВалютаРегламентированногоУчета 
		И НЕ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		
		Объект.ТипПричиныНевыдачиПокупателю = 7;
		
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОблагаемыеОперацииВозврат 
		  ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат Тогда
		
	    Объект.ТипПричиныНевыдачиПокупателю = 11;
		
	Иначе

		ИНН = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "ИНН");
		
		СхемыНалогообложения = РегистрыСведений.СхемыНалогообложенияКонтрагентов.СрезПоследних(Объект.Дата, Новый Структура("Контрагент", Объект.Контрагент));
		Если СхемыНалогообложения.Количество() = 0 Тогда
			ПлательщикНДС = Истина;
		Иначе
			ПлательщикНДС = СхемыНалогообложения[0].ПлательщикНДС И НЕ СхемыНалогообложения[0].ПлательщикНДСПриостановлен;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ИНН)
   		    ИЛИ Найти("0123456789",Лев(СокрЛ(ИНН),1)) = 0 
			ИЛИ НЕ ПлательщикНДС Тогда		
		
			Объект.ТипПричиныНевыдачиПокупателю = 2;
			
		Иначе	
		
			Объект.ТипПричиныНевыдачиПокупателю = 0;
			
		КонецЕсли;

	КонецЕсли;
	
	Если Объект.ТипПричиныНевыдачиПокупателю > 0 Тогда
		Объект.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати 

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение2КНалоговойНакладной";
	КомандаПечати.Представление = НСтр("ru='Приложение 2 к налоговой накладной';uk='Додаток 2 до податкової накладної'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	КомандаПечати.Порядок       = 10;        

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение2КНалоговойНакладнойАльбом";
	КомандаПечати.Представление = НСтр("ru='Приложение 2 к налоговой накладной (альбом. ориент.)';uk='Додаток 2 до податкової накладної (альбом. орієнт.)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	КомандаПечати.Порядок       = 20;        
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Приложение 2 к налоговой накладной""';uk='Реєстр документів ""Додаток 2 до податкової накладної""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;        
	
КонецПроцедуры

// Функция формирует табличный документ с регламентированной печатной формой 
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьПриложения2КНалоговойНакладной(МассивОбъектов, ОбъектыПечати, ПараметрыВывода, ИмяМакета = "Приложение2КНалоговойНакладной",ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Ложь) Экспорт	

	УстановитьПривилегированныйРежим(Истина);

	ПервыйДокумент = Истина;
	ТабДокумент = Новый ТабличныйДокумент;
	
	Для Каждого СсылкаНаДокумент Из МассивОбъектов  Цикл
		
		Объект = СсылкаНаДокумент.ПолучитьОбъект();
		Если     Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
			ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
			// такие операции не предусматривают выписки налоговых накладных
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Документ ""%1"" отражает операцию, не являющуюся объектом налогообложения. %2 такой документ не требуется.';uk= 'Документ ""%1"" відображає операцію, що не є об''єктом оподаткування. %2 такий документ не потрібно.'"),
				Объект.Ссылка, 
				?(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, НСтр("ru='Выгружать';uk= 'Вивантажувати'"), НСтр("ru='Печатать';uk= 'Друкувати'"))
			);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				Объект.Ссылка
			);
			
			Продолжить;	
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.НалоговаяНакладная) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Не заполнен реквизит ""Налоговая накладная"" в документе ""Приложение 2 к налоговой накладной %1 от %2""! %3.';uk= 'Не заповнений реквізит ""Податкова накладна"" в документі ""Додаток 2 до податкової накладної %1 від %2""! %3.'"),
						ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер), Формат(Объект.Дата, "ДФ=dd.MM.yyyy"),
						?(ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, НСтр("ru='Выгрузка не корректна';uk= 'Вивантаження не коректне'"), НСтр("ru='Печать не доступна';uk= 'Друк не доступний'"))),
					СсылкаНаДокумент);
			Продолжить;
		КонецЕсли; 
		
		Если НЕ УчетНДС.РазрешенаВыгрузкаПечатьНалоговогоДокумента(Объект) Тогда
			Продолжить;
		КонецЕсли;
		
		ДатаНачалаИспользованияФормыНН13 = РегистрыСведений.НастройкиЗаконодательныхИзменений.ЗначениеНастройки("ДатаНачалаИспользованияФормыНН13");
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ТекРабочаяДата = ТекущаяДата();
		ТабДокументСформирован = Ложь;
		Если ТекРабочаяДата >= '2016-04-01' Тогда
			
			// начиная с 04.2016 выгрузка в ЕРНН должна осуществляется по форме НА ДАТУ РЕГИСТРАЦИИ??!!
			// проверим соответствующую настройку (возможно данное положение со временем будет отменено)
			НастройкаПечати = НалоговыйУчетПовтИсп.НастройкаПечатиНалоговыхДокументов(Объект.Организация, ТекРабочаяДата);
			ВыгрузкаПечатьНН_ПоФормеНаДатуДокумента = НастройкаПечати.ВыгрузкаПечатьНН_ПоФормеНаДатуДокумента; 
			
			Если НЕ ВыгрузкаПечатьНН_ПоФормеНаДатуДокумента = Истина Тогда
				// печатную форму выбираем в зависимости не от даты док, а от рабочей даты
				
				Если ТекРабочаяДата >= '2023-04-01' Тогда	

					НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2023(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);
					ТабДокументСформирован = Истина;
					
				ИначеЕсли ЗначениеЗаполнено(ДатаНачалаИспользованияФормыНН13) И ТекРабочаяДата >= ДатаНачалаИспользованияФормыНН13 Тогда					
					
					НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2022(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);
					ТабДокументСформирован = Истина;
					
				ИначеЕсли ТекРабочаяДата >= '2021-03-01' Тогда	
					
					НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2021Мес3(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);
					ТабДокументСформирован = Истина;
					
				ИначеЕсли ТекРабочаяДата >= '2018-12-01' Тогда
				
					НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2018(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);
					ТабДокументСформирован = Истина;
					
				ИначеЕсли ТекРабочаяДата >= '2017-03-16' Тогда
				
					НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2017(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);
					ТабДокументСформирован = Истина;
					
				ИначеЕсли ТекРабочаяДата >= '2016-04-01' Тогда
					
					НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2016(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);
					ТабДокументСформирован = Истина;
					
				КонецЕсли;	
				
			КонецЕсли;
			
		КонецЕсли;	
	
		Если НЕ ТабДокументСформирован Тогда
			
			Если Объект.Дата >= '2023-04-01' Тогда		
				
				НовТабДокумент = ПечатьДокументаНалоговыйКодекс2023(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);
				
			ИначеЕсли ЗначениеЗаполнено(ДатаНачалаИспользованияФормыНН13) И Объект.Дата >= ДатаНачалаИспользованияФормыНН13 Тогда
				
				НовТабДокумент = ПечатьДокументаНалоговыйКодекс2022(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);
				
			ИначеЕсли Объект.Дата >= '2021-03-01' Тогда		
				
				НовТабДокумент = ПечатьДокументаНалоговыйКодекс2021Мес3(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);
			
			ИначеЕсли Объект.Дата >= '2018-12-01' Тогда
				
				НовТабДокумент = ПечатьДокументаНалоговыйКодекс2018(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);
			
			ИначеЕсли Объект.Дата >= '2017-03-16' Тогда
				
				НовТабДокумент = ПечатьДокументаНалоговыйКодекс2017(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);
	
			ИначеЕсли Объект.Дата >= '2016-04-01' Тогда
			
				НовТабДокумент = ПечатьДокументаНалоговыйКодекс2016(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);

			ИначеЕсли Объект.Дата >= '2015-01-01' Тогда						
				
				НовТабДокумент = ПечатьДокументаНалоговыйКодекс2015(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);

			ИначеЕсли Объект.Дата >= '2014-12-01' Тогда
				
				НовТабДокумент = ПечатьДокументаНалоговыйКодекс2014Мес12(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);

			ИначеЕсли Объект.Дата >= '2014-03-01' Тогда
				
				НовТабДокумент = ПечатьДокументаНалоговыйКодекс2014(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета);
				
			ИначеЕсли Объект.Дата >= НалоговыйУчетПовтИсп.ДатаВступленияВСилуПриказа1379()   Тогда
				НовТабДокумент =  ПечатьДокументаНалоговыйКодекс2012(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы
				, ИмяМакета
				);
			Иначе	
				НовТабДокумент = ПечатьДокументаНалоговыйКодекс(Объект,ТолькоФормироватьСтруктуруПоказателейПечатнойФормы);
			КонецЕсли;
			
		КонецЕсли;
			
		Если НЕ ТолькоФормироватьСтруктуруПоказателейПечатнойФормы Тогда
			
			ТабДокумент.Вывести(НовТабДокумент);
			
			// В табличном документе зададим имя области, в которую был 
			// выведен объект. Нужно для возможности печати покомплектно.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Объект.Ссылка);
	
		Иначе
			
			Возврат НовТабДокумент;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ТолькоФормироватьСтруктуруПоказателейПечатнойФормы Тогда
		Если НовТабДокумент <> Неопределено Тогда
			ТабДокумент.КлючПараметровПечати = НовТабДокумент.КлючПараметровПечати;
			Если НовТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет Тогда
				ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
			Иначе 
				ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			КонецЕсли;
			ТабДокумент.АвтоМасштаб = Истина;
		КонецЕсли;
		Возврат ТабДокумент;
	Иначе
		Возврат Неопределено;
	КонецЕсли; 
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс2014(Объект,ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "Приложение2КНалоговойНакладной") Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G1D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G11");
		
		Если     Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
				// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	
	|   ДоговорКонтрагента.Номер КАК НомерДоговора,
	|   ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	
	|	ВидОперации,
	|	Контрагент,
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	
	|	ВидДоговора,
	|   ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных,
	|	ЭлектронныйДокумент,
	
	|   ТипПричиныНевыдачиПокупателю,
	|	НалоговаяНакладная.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	|	НалоговаяНакладная.ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	НалоговаяНакладная.ОбособленноеПодразделение.Префикс КАК Префикс,
	|	ДатаОплаты КАК ДатаОплаты,
	|	НалоговаяНакладная.УслугиНерезидентаДляНехозДеят КАК УслугиНерезидентаДляНехозДеят,
	
	|	ФормаРасчетов,
	|	НалоговаяНакладная,
	|	НалоговаяНакладная.Дата КАК ДатаНалоговойНакладной,
	|	НалоговаяНакладная.Номер КАК НомерНалоговойНакладной,
	|	КтоВыписалНалоговуюНакладную КАК КтоВыписалНалоговуюНакладную
	|ИЗ
	|	Документ.Приложение2КНалоговойНакладной КАК Приложение2
	|
	|ГДЕ
	|	Приложение2.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	УчетнаяПолитикаНеЗадана = Ложь;
	ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Ложь;
	ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной = Ложь;
	УчетнаяПолитикаНеЗадана = НЕ УчетнаяПолитика.Существует(Объект.Организация, НачалоМесяца(Объект.Дата), Истина); 
	Если НЕ УчетнаяПолитикаНеЗадана тогда
		НастройкаПечати = НалоговыйУчетПовтИсп.НастройкаПечатиНалоговыхДокументов(Объект.Организация, НачалоМесяца(Объект.Дата));
		ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = НастройкаПечати.ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН;
		ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной  = НЕ НастройкаПечати.ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной; 
	КонецЕсли;
	
	
	ДополнениеКНаименованиюОрганизации = "";
	ДополнениеКАдресуОрганизации = "";
	Если  ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Истина
		И Шапка.ОбособленноеПодразделение = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ " - " ;
		ДополнениеКАдресуОрганизации       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ЮридическийАдрес,",  Ложь)  + " - " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
	Объект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("ДатаКорректировки, Причина, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЦенаМестаБезНДСБезСкидкиРегл,  Количество, СтавкаНДС", "ИзменениеКоличества, ИзменениеЦеныБезНДССоСкидкойРегл, ИзменениеСуммыБезНДСРегл, ИзменениеСуммыНДСРегл");   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаМестаБезНДСБезСкидкиРегл.Имя 	 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеЦеныБезНДССоСкидкойРегл.Имя = "ИзменениеЦеныБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыБезНДСРегл.Имя		 = "ИзменениеСуммыБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыНДСРегл.Имя		 	 = "ИзменениеСуммыНДС";
	
	ТабДокумент = Новый ТабличныйДокумент;                                                           
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложени2КНалоговойНакладной_Приложение2_2014_"+ИмяМакета;

	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2014");
	Если ИмяМакета = "Приложение2КНалоговойНакладнойАльбом" Тогда
		Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2014Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	Макет.КодЯзыкаМакета = "ru";
	
	// определим параметры шапки документа

	//Дата налоговой
	ТекДатаНалоговой = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=ddMMyyyy");
	
	// Номер налоговой
	
	ТекНомерНалоговой = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НалоговаяНакладная.Номер,Истина,Истина)), 7);

	// филиал/спецрежим налоговой
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
		ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
	КонецЕсли;
		
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		
	// Номер
	
	ТекНомер = Прав("        " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 8);
	
	// номер договора
	ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
	
	// дата договора
	ТекДатаДоговора = Шапка.ДатаДоговора;
	Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
		ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
	Иначе
		ТекДатаДоговора = "";
	КонецЕсли;
	
	//Дата оплаты
	ТекДатаОплаты = Формат(Шапка.ДатаОплаты, "ДФ=ddMMyyyy");
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= ?(Шапка.УслугиНерезидентаДляНехозДеят = Истина, "200000000000", "300000000000");
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + " - " + НазваниеОрганизации;
			АдресОрганизации 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдрес,",  Ложь)	
										  + " - " + АдресОрганизации;
		КонецЕсли;
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	
	// телефон
	ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "Телефоны,",          Ложь);
	ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
	ДлинаСтрокиТелефоновОрганизации = СтрДлина(ТекТелефоныОрганизации);
		
		
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			ИННКонтрагента 				  = "400000000000";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	Иначе
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + " - " + НазваниеКонтрагента;
			АдресКонтрагента 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдрес,",  Ложь)	
										  + " - " + АдресКонтрагента;
		КонецЕсли;
		
		НомерСвидетельстваКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "НомерСвидетельства,",Ложь);
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		Если НЕ ЗначениеЗаполнено(ИННКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "400000000000";
		КонецЕсли; 
		
	КонецЕсли; 
	ИННКонтрагента 				  = Прав("            " + ИННКонтрагента, 12);

	// телефон
	ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
	ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
	ДлинаСтрокиТелефоновКонтрагентов = СтрДлина(ТекТелефоныКонтрагента);
	
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 2 Цикл
		
		Если  Страница = 2 Тогда
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка 
				ИЛИ Шапка.ЭлектронныйДокумент Тогда
				// печатаем в одном экземпляре
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
	
		// Выводим область оригинал/копия
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Шапка.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных;
		ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент 							 = Шапка.ЭлектронныйДокумент;
		Если Шапка.ЭлектронныйДокумент = Ложь Тогда
			Если Страница = 2 Тогда
				// копия - всегда остается у продавца
				ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца  = "Х";
				
			Иначе
				
				// оргинал
				Если  Шапка.ТипПричиныНевыдачиПокупателю = 0 ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
					
					// НН, для которой тип причины невыдачи - продажа ниже обычных цен выдается покупателю, вторая пара накладных (собстенно на превышение) - нет
					ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
				Иначе
					
					// накладная остается у поставщика
					ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
					ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
					ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата налоговой
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаНалоговой_"+Инд]    = Сред(ТекДатаНалоговой, Инд, 1);
		КонецЦикла; 
		
		// Номер налоговой
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["НомерНалоговой_"+Инд]    = Сред(ТекНомерНалоговой, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим налоговой
		Для Инд = 1 По 5 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    			= Сред(ТекНомерФилиал, Инд, 1);
			ОбластьМакета.Параметры["НомерФилиалНалоговой_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
		КонецЦикла;		
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 8 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// название продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// адрес продавца
		ОбластьМакета.Параметры.АдресОрганизации = АдресОрганизации;
		
		// телефон продавца
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] =  Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;

		//ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента           = НазваниеКонтрагента;
		
		// адрес покупателя
		ОбластьМакета.Параметры.АдресКонтрагента              = АдресКонтрагента;
		
		// телефон покупателя
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		
		// ИНН покупателя		
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// номер договора
		ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
		
		// дата договора
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
		КонецЦикла; 
		
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаОплаты_"+Инд]    = Сред(ТекДатаОплаты, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
		КонецЕсли;
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HEL",	Формат(ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент, "БЛ=; БИ=Х"));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Объект.Дата);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODFILL",	Шапка.ДатаНалоговойНакладной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM",	Прав(ТекНомерНалоговой,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM2",	Сред(ТекНомерФилиал, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2S",	ТекНомерДоговора);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G3S",	ТекНомерДоговора);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H03G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H04G1D",	Шапка.ДатаОплаты);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1D",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G2S",	ПечКтоВыписалНалоговуюНакладную);
			
		КонецЕсли;
		
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим табличную часть
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
			// Теперь заполним
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			Если СтрокаТаблицы.ИзменениеКоличества = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеКоличества  = "";
				ОбластьМакета.Параметры.ЦенаБезНДС  		 = "";
			КонецЕсли;
			Если СтрокаТаблицы.ИзменениеЦеныБезНДС = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеЦеныБезНДС  = "";
				ОбластьМакета.Параметры.Количество  		 = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаКорректировки) Тогда
				
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаКорректировки = Шапка.Дата;
				
			КонецЕсли;
			
			// номенклатура 
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
												 
			Колонка = "ИзменениеСуммыБезНДС"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС,Объект.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
					
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G1D = ОбластьМакета.Параметры.ДатаКорректировки;
				СтрокаСтруктуры.G2S = ОбластьМакета.Параметры.Причина;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				
				СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				
				СтрокаСтруктуры.G5  = СтрокаТаблицы.ИзменениеКоличества;
				СтрокаСтруктуры.G6  = СтрокаТаблицы.ЦенаБезНДС;
				Если СтрокаСтруктуры.G5 = 0 Тогда
					СтрокаСтруктуры.G6  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G7  = СтрокаТаблицы.ИзменениеЦеныБезНДС;
				СтрокаСтруктуры.G8  = СтрокаТаблицы.Количество;
				Если СтрокаСтруктуры.G7 = 0 Тогда
					СтрокаСтруктуры.G8  = 0;	
				КонецЕсли;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС,Объект.Дата);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				ИначеЕсли КолонкаДляСуммы = "0" Тогда
					СтрокаСтруктуры.G10  = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G11 = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				КонецЕсли;
				
			КонецЕсли;
						
		КонецЦикла;
		
		// итоговые строки
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ТаблицаИтогов = ТаблицаНоменклатуры.Скопировать();
		ТаблицаИтогов.Свернуть("СтавкаНДС", "ИзменениеСуммыБезНДС,ИзменениеСуммыНДС");
		
		Для каждого СтрокаТаблицы Из ТаблицаИтогов Цикл
		
			Колонка = "ИзменениеСуммыБезНДС"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС,Объект.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
			
		
		КонецЦикла;
		
		ТаблицаИтогов.Свернуть("", "ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ТаблицаИтогов Цикл
			ОбластьМакета.Параметры.ИзменениеСуммыНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G9",	СтрокаТаблицы.ИзменениеСуммыНДС);
			КонецЕсли;
		КонецЦикла;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;
		
		ОбластьМакета.Параметры.Дата  					= Формат(Шапка.Дата, "ДФ=dd.MM.yyyy" );
		ОбластьМакета.Параметры.ДатаНалоговойНакладной  = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=dd.MM.yyyy" );
		
		ТекНомерФилиалПодвал = "";
		Если ЗначениеЗаполнено(НомерФилиала) Тогда
			ТекНомерФилиалПодвал = "/" + СокрЛ(НомерФилиала);
		КонецЕсли;
		Если ЗначениеЗаполнено(КодСпецРежима + ТекНомерФилиалПодвал) Тогда
			ТекНомерФилиалПодвал = "/" + КодСпецРежима + ТекНомерФилиалПодвал;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Номер  					 = СокрЛП(ТекНомер 		    + ТекНомерФилиалПодвал);
		ОбластьМакета.Параметры.НомерНалоговойНакладной  = СокрЛП(ТекНомерНалоговой + ТекНомерФилиалПодвал);
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если Страница <> 2 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
	КонецЦикла; 

	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;

КонецФункции // ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс2012(Объект,ТолькоФормироватьСтруктуруПоказателейПечатнойФормы
											,ИмяМакета = "Приложение2КНалоговойНакладной"
											) Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	УстановитьПривилегированныйРежим(Истина);

	
	Если НЕ ТолькоФормироватьСтруктуруПоказателейПечатнойФормы 	= Истина
		  И Объект.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных 	= Истина
		  И Объект.ВключенаВЕдиныйРеестрНалоговыхНакладных 			= Ложь Тогда
	
		Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Документ %1 должна быть зарегистрирована в Едином реестре!
|Нельзя выдавать покупателю печатный документ до регистрации в Едином реестре!';uk='Документ %1 має бути зареєстрований у Єдиному реєстрі податкових накладних!
|Не можна видавати покупцю друкований документ до реєстрації у Єдиному реєстрі!'")
									   , Объект.Ссылка)
			   , СтатусСообщения.ОченьВажное);			
	
	КонецЕсли;
		   
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G1D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G11");
		
		Если     Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
				// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	
	|   ДоговорКонтрагента.Номер КАК НомерДоговора,
	|   ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	
	|	ВидОперации,
	|	Контрагент,
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	
	|	ВидДоговора,
	|   ВключенаВЕдиныйРеестрНалоговыхНакладных,
	|   ТипПричиныНевыдачиПокупателю,
	|	НалоговаяНакладная.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	|	НалоговаяНакладная.ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	НалоговаяНакладная.ОбособленноеПодразделение.Префикс КАК Префикс,
	|	ДатаОплаты КАК ДатаОплаты,
	|	НалоговаяНакладная.УслугиНерезидентаДляНехозДеят КАК УслугиНерезидентаДляНехозДеят,
	
	|	ФормаРасчетов,
	|	НалоговаяНакладная,
	|	НалоговаяНакладная.Дата КАК ДатаНалоговойНакладной,
	|	НалоговаяНакладная.Номер КАК НомерНалоговойНакладной,
	|	КтоВыписалНалоговуюНакладную.Представление КАК КтоВыписалНалоговуюНакладную
	|ИЗ
	|	Документ.Приложение2КНалоговойНакладной КАК Приложение2
	|
	|ГДЕ
	|	Приложение2.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	СимволДляПустыхПоказателей = "X";
	УчетнаяПолитикаНеЗадана = Ложь;
	ВыводитьНомерДоговораБезКлеточек = Истина;
	ПечататьКодУКТВЭДБезПробелов = Ложь;
	ПечататьДатыБезРазделителей = Ложь;
	ДополнитьНазваниеНомеромГТД = Ложь;
	ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Ложь;
	ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной = Ложь;
	УчетнаяПолитикаНеЗадана = НЕ УчетнаяПолитика.Существует(Объект.Организация, НачалоМесяца(Объект.Дата), Истина); 
	Если НЕ УчетнаяПолитикаНеЗадана тогда
		НастройкаПечати = НалоговыйУчетПовтИсп.НастройкаПечатиНалоговыхДокументов(Объект.Организация, НачалоМесяца(Объект.Дата));
		СимволДляПустыхПоказателей    	 = НастройкаПечати.СимволПустыхПоказателейВНалоговойНакладной; 
		ПечататьКодУКТВЭДБезПробелов     = НастройкаПечати.ПечататьКодУКТВЭДБезПробелов; 
		ПечататьДатыБезРазделителей    	 = НЕ НастройкаПечати.ПечататьДатыВНалоговыхНакладныхСРазделителями; 
		ДополнитьНазваниеНомеромГТД    	 = НЕ НастройкаПечати.НеДополнятьНаименованиеНомеромГТДВНалоговыхДокументах; 
		ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = НастройкаПечати.ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН;
		ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной  = НЕ НастройкаПечати.ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной; 
	КонецЕсли;
	
	ДополнениеКНаименованиюОрганизации = "";
	ДополнениеКАдресуОрганизации = "";
	Если  ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Истина
		И Шапка.ОбособленноеПодразделение = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ " - " ;
		ДополнениеКАдресуОрганизации       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ЮридическийАдрес,",  Ложь)  + " - " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
	Объект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("ДатаКорректировки, Причина, Номенклатура, КодУКТВЭД, НомерГТД, ДатаГТД, ТекстДляПечатиВКолонкеКоличество, ЕдиницаИзмерения, ЦенаМестаБезНДСБезСкидкиРегл,  Количество, СтавкаНДС", "ИзменениеКоличества, ИзменениеЦеныБезНДССоСкидкойРегл, ИзменениеСуммыБезНДСРегл, ИзменениеСуммыНДСРегл");   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаМестаБезНДСБезСкидкиРегл.Имя 	 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеЦеныБезНДССоСкидкойРегл.Имя = "ИзменениеЦеныБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыБезНДСРегл.Имя		 = "ИзменениеСуммыБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыНДСРегл.Имя		 	 = "ИзменениеСуммыНДС";
	
	ТабДокумент = Новый ТабличныйДокумент;                                                           
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложени2КНалоговойНакладной_Приложение2_2012_"+ИмяМакета;

	МакетПромежуточный = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2012");
	Если ИмяМакета = "Приложение2КНалоговойНакладнойАльбом" Тогда
		МакетПромежуточный = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2012Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	МакетПромежуточный.КодЯзыкаМакета = "ru";
	
	Макет = Новый ТабличныйДокумент;
	Макет.ВставитьОбласть(МакетПромежуточный.Область(), , , Ложь);
	
	// определим параметры шапки документа

	//Дата налоговой
	ТекДатаНалоговой = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=ddMMyyyy");
	
	// Номер налоговой
	ТекНомерНалоговой = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НалоговаяНакладная.Номер,Истина,Истина)), 7);
	
	// филиал/спецрежим налоговой
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("0000" + СокрЛП(Шапка.Префикс), 4), "");  //число, сведущими нулями, 4 символа 
	Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
		ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
	КонецЕсли;
		
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		
	// Номер
	
	ТекНомер = Прав("        " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 8);
	// номер договора
	ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
	
	// дата договора
	ТекДатаДоговора = Шапка.ДатаДоговора;
	Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
		ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
	Иначе
		ТекДатаДоговора = "";
	КонецЕсли;
	
	//Дата оплаты
	ТекДатаОплаты = Формат(Шапка.ДатаОплаты, "ДФ=ddMMyyyy");
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= ?(Шапка.УслугиНерезидентаДляНехозДеят = Истина, "200000000000", "300000000000");
		НомерСвидетельстваОрганизации	= "0";
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + " - " + НазваниеОрганизации;
			АдресОрганизации 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдрес,",  Ложь)	
										  + " - " + АдресОрганизации;
		КонецЕсли;
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НомерСвидетельстваОрганизации 	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "НомерСвидетельства,",Ложь);	
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	НомерСвидетельстваОрганизации = Прав("            " + НомерСвидетельстваОрганизации, 10);
	
	// телефон
	ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "Телефоны,",          Ложь);
	ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
	ДлинаСтрокиТелефоновОрганизации = СтрДлина(ТекТелефоныОрганизации);
		
		
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			НомерСвидетельстваКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "НомерСвидетельства,",Ложь);
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			НомерСвидетельстваКонтрагента = "0";
			ИННКонтрагента 				  = "0";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	Иначе
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + " - " + НазваниеКонтрагента;
			АдресКонтрагента 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдрес,",  Ложь)	
										  + " - " + АдресКонтрагента;
		КонецЕсли;
		
		НомерСвидетельстваКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "НомерСвидетельства,",Ложь);
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		
		Если НЕ ЗначениеЗаполнено(НомерСвидетельстваКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(НомерСвидетельстваКонтрагента),1)) = 0 Тогда
			НомерСвидетельстваКонтрагента = "0";
		КонецЕсли;		
		
		Если НЕ ЗначениеЗаполнено(ИННКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "0";
		КонецЕсли; 
		
	КонецЕсли; 
	НомерСвидетельстваКонтрагента = Прав("            " + НомерСвидетельстваКонтрагента, 10);
	ИННКонтрагента 				  = Прав("            " + ИННКонтрагента, 12);
	
	Если  Объект.Дата >= '2014-01-01'
		И СокрЛП(НомерСвидетельстваКонтрагента) = "0"
		И НЕ СокрЛП(ИННКонтрагента) = "0" Тогда
		НомерСвидетельстваКонтрагента = "";	
	КонецЕсли;

	// телефон
	ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
	ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
	ДлинаСтрокиТелефоновКонтрагентов = СтрДлина(ТекТелефоныКонтрагента);
	
    Для Страница = 1 По 2 Цикл
		
		Если  Страница = 2
			И Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			// печатаем в одном экземпляре
			Продолжить;
		КонецЕсли;
	
		// Выводим область оригинал/копия
		Если Страница = 1 Тогда
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных = Шапка.ВключенаВЕдиныйРеестрНалоговыхНакладных;
			
			Если Шапка.ТипПричиныНевыдачиПокупателю = 0  Тогда
				
				ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
			ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 1  Тогда	
				
				// это ошибка, может быть из-за того, что по изначальной накладной стоял такой тип причины
				ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
			Иначе
				
				// накладная остается у поставщика
				ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца = "Х";
				ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
				ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		ИначеЕсли Страница = 2 Тогда
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("ПерваяКопия");
			ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных = Шапка.ВключенаВЕдиныйРеестрНалоговыхНакладных;
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		КонецЕсли;

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата налоговой
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаНалоговой_"+Инд]    = Сред(ТекДатаНалоговой, Инд, 1);
		КонецЦикла; 
		
		// Номер налоговой
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["НомерНалоговой_"+Инд]    = Сред(ТекНомерНалоговой, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим налоговой
		Для Инд = 1 По 5 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    			= Сред(ТекНомерФилиал, Инд, 1);
			ОбластьМакета.Параметры["НомерФилиалНалоговой_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
		КонецЦикла;		
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 8 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// название продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// адрес продавца
		ОбластьМакета.Параметры.АдресОрганизации = АдресОрганизации;
		
		// телефон продавца
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] =  Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;

		//ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// номер свидетельства продавца
		ОбластьМакета.Параметры["НомерСвидетельстваОрганизации"] = НомерСвидетельстваОрганизации;
		
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента           = НазваниеКонтрагента;
		
		// адрес покупателя
		ОбластьМакета.Параметры.АдресКонтрагента              = АдресКонтрагента;
		
		// телефон покупателя
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		
		// номер свидетельства покупателя
		ОбластьМакета.Параметры.НомерСвидетельстваКонтрагента = НомерСвидетельстваКонтрагента;

		// ИНН покупателя		
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// номер договора
		ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
		
		// дата договора
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
		КонецЦикла; 
		
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаОплаты_"+Инд]    = Сред(ТекДатаОплаты, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
		КонецЕсли;
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	""+ОбластьМакетаЗаголовок.Параметры.ТипПричины1+ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HCOPY",	"");
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Объект.Дата);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODFILL",	Шапка.ДатаНалоговойНакладной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM",	Прав(ТекНомерНалоговой,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM2",	Сред(ТекНомерФилиал, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2S",	ТекНомерДоговора);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNSPDVSEL",НомерСвидетельстваОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNSPDVBUY",НомерСвидетельстваКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G3S",	ТекНомерДоговора);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H03G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
			//СтруктураПоказателей.НалоговыйДокумент.Вставить("H04G1D",	Шапка.ДатаНалоговойНакладной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H04G1D",	Шапка.ДатаОплаты);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1D",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G2S",	Шапка.КтоВыписалНалоговуюНакладную);
			
		КонецЕсли;
		
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим табличную часть
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		Если ПечататьДатыБезРазделителей Тогда
			ОбластьМакета.Области.ДатаОтгрузкиОплаты.Формат = "ДФ=ddMMyyyy";	
		КонецЕсли;
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			// Теперь заполним
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			Если ПечататьКодУКТВЭДБезПробелов Тогда
				ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество) Тогда
				ОбластьМакета.Параметры.Количество = СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество;
			КонецЕсли;
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаКорректировки) Тогда
				
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаКорректировки = Шапка.Дата;
				
			КонецЕсли;
			
			// номенклатура 
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
												 + ?(ДополнитьНазваниеНомеромГТД И ЗначениеЗаполнено(СтрокаТаблицы.НомерГТД), ". ВМД №: " + СтрокаТаблицы.НомерГТД + ", дата ВМД: " + Формат(СтрокаТаблицы.ДатаГТД, ?(ПечататьДатыБезРазделителей,"ДФ=ddMMyyyy","ДФ=dd.MM.yyyy")), "");
												 ;
												 
			// "обнулим" значения неиспользуемого типа корректировки 
			// колонки 5...8
			Если СтрокаТаблицы.ИзменениеКоличества = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеКоличества  = СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.ЦенаБезНДС  		 = СимволДляПустыхПоказателей;
			КонецЕсли;
			Если СтрокаТаблицы.ИзменениеЦеныБезНДС = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеЦеныБезНДС  = СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.Количество  		 = СимволДляПустыхПоказателей;
			КонецЕсли;
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма изменения базы НДС
			// колонки 9...11
			ОбластьМакета.Параметры.ИзменениеСуммыБезНДС20 		= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0 		= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.ИзменениеСуммыБезНДСБезНДС	= СимволДляПустыхПоказателей;
			
			Колонка = "ИзменениеСуммыБезНДС"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС,Объект.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
					
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G1D = ОбластьМакета.Параметры.ДатаКорректировки;
				СтрокаСтруктуры.G2S = ОбластьМакета.Параметры.Причина;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				
				СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				
				СтрокаСтруктуры.G5  = СтрокаТаблицы.ИзменениеКоличества;
				СтрокаСтруктуры.G6  = СтрокаТаблицы.ЦенаБезНДС;
				Если СтрокаСтруктуры.G5 = 0 Тогда
					СтрокаСтруктуры.G6  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G7  = СтрокаТаблицы.ИзменениеЦеныБезНДС;
				СтрокаСтруктуры.G8  = СтрокаТаблицы.Количество;
				Если СтрокаСтруктуры.G7 = 0 Тогда
					СтрокаСтруктуры.G8  = 0;	
				КонецЕсли;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС,Объект.Дата);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				ИначеЕсли КолонкаДляСуммы = "0" Тогда
					СтрокаСтруктуры.G10  = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G11 = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				КонецЕсли;
				
			КонецЕсли;
						
		КонецЦикла;
		
		// итоговые строки
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ОбластьМакета.Параметры.ИзменениеСуммыБезНДС20 		= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0 		= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.ИзменениеСуммыБезНДСБезНДС	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.ИзменениеСуммыНДС			= СимволДляПустыхПоказателей;
		
		ТаблицаИтогов = ТаблицаНоменклатуры.Скопировать();
		ТаблицаИтогов.Свернуть("СтавкаНДС", "ИзменениеСуммыБезНДС,ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ТаблицаИтогов Цикл
		
			Колонка = "ИзменениеСуммыБезНДС"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС,Объект.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
		
		КонецЦикла;
		ТаблицаИтогов.Свернуть("", "ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ТаблицаИтогов Цикл
			ОбластьМакета.Параметры.ИзменениеСуммыНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G9",	СтрокаТаблицы.ИзменениеСуммыНДС);
			КонецЕсли;
		КонецЦикла;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.Дата  					= Формат(Шапка.Дата, "ДФ=dd.MM.yyyy" );
		ОбластьМакета.Параметры.ДатаНалоговойНакладной  = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=dd.MM.yyyy" );
		
		ОбластьМакета.Параметры.Номер  					 = СокрЛП(ТекНомер 		    + ?(ЗначениеЗаполнено(ТекНомерФилиал), "/" + ТекНомерФилиал, ""));
		ОбластьМакета.Параметры.НомерНалоговойНакладной  = СокрЛП(ТекНомерНалоговой + ?(ЗначениеЗаполнено(ТекНомерФилиал), "/" + ТекНомерФилиал, ""));
		ТабДокумент.Вывести(ОбластьМакета);

		Если Страница <> 2 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
	КонецЦикла; 

	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;

КонецФункции // ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс(Объект,ТолькоФормироватьСтруктуруПоказателейПечатнойФормы) Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;

	УстановитьПривилегированныйРежим(Истина);
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G1D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G11");
		
		Если     Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
				// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	
	|   ДоговорКонтрагента.Номер КАК НомерДоговора,
	|   ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	
	|	ВидОперации,
	|	Контрагент,
	|	Организация,
	
	|	ВидДоговора,
	|   ВключенаВЕдиныйРеестрНалоговыхНакладных,
	|   ТипПричиныНевыдачиПокупателю,
	|	СпецРежимНалогообложения,
	|	НалоговаяНакладная.СпецРежимНалогообложения КАК СпецРежимНалогообложенияНалоговойНакладной,
	
	|	ФормаРасчетов,
	|	НалоговаяНакладная,
	|	НалоговаяНакладная.Дата КАК ДатаНалоговойНакладной,
	|	НалоговаяНакладная.Номер КАК НомерНалоговойНакладной,
	|	КтоВыписалНалоговуюНакладную.Представление КАК КтоВыписалНалоговуюНакладную
	|ИЗ
	|	Документ.Приложение2КНалоговойНакладной КАК Приложение2
	|
	|ГДЕ
	|	Приложение2.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	СимволДляПустыхПоказателей = "X";
	ВыводитьНомерДоговораБезКлеточек = Ложь;
	УчетнаяПолитикаНеЗадана = НЕ УчетнаяПолитика.Существует(Объект.Организация, НачалоМесяца(Объект.Дата), Истина); 
	Если НЕ УчетнаяПолитикаНеЗадана тогда
		НастройкаПечати = НалоговыйУчетПовтИсп.НастройкаПечатиНалоговыхДокументов(Объект.Организация, НачалоМесяца(Объект.Дата));
		СимволДляПустыхПоказателей    	 = НастройкаПечати.СимволПустыхПоказателейВНалоговойНакладной; 
		ВыводитьНомерДоговораБезКлеточек = НастройкаПечати.ВыводитьНомерДоговораБезКлеточек; 
	КонецЕсли;
	
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
	Объект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("ДатаКорректировки, Причина, Номенклатура, ТекстДляПечатиВКолонкеКоличество, ЕдиницаИзмерения, ЦенаМестаБезНДСБезСкидкиРегл,  Количество, СтавкаНДС", "ИзменениеКоличества, ИзменениеЦеныБезНДССоСкидкойРегл, ИзменениеСуммыБезНДСРегл, ИзменениеСуммыНДСРегл");   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаМестаБезНДСБезСкидкиРегл.Имя 	 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеЦеныБезНДССоСкидкойРегл.Имя = "ИзменениеЦеныБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыБезНДСРегл.Имя		 = "ИзменениеСуммыБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыНДСРегл.Имя		 	 = "ИзменениеСуммыНДС";
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложени2КНалоговойНакладной_Приложение2_2011";

	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2011");
	
    Для Страница = 1 По 2 Цикл
	
		// Выводим область оригинал/копия
		Если Страница = 1 Тогда
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
			
			ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных = Шапка.ВключенаВЕдиныйРеестрНалоговыхНакладных;
			
			Если Шапка.ТипПричиныНевыдачиПокупателю = 0  Тогда
				
				ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
			ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 1  Тогда	
				
				// это ошибка, может быть из-за того, что по изначальной накладной стоял такой тип причины
				ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
			Иначе
				
				// накладная остается у поставщика
				ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца = "Х";
				ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
				ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		ИначеЕсли Страница = 2 Тогда
			ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("ПерваяКопия");
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		КонецЕсли;

		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата налоговой
		ТекДатаНалоговой = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=ddMMyyyy");
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаНалоговой_"+Инд]    = Сред(ТекДатаНалоговой, Инд, 1);
		КонецЦикла; 
		
		// Номер налоговой
		ТекНомерНалоговой = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НалоговаяНакладная.Номер,Истина,Истина)), 7);
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["НомерНалоговой_"+Инд]    = Сред(ТекНомерНалоговой, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим налоговой
		ТекНомерФилиалНалоговой = "";
		Если ЗначениеЗаполнено(Шапка.СпецРежимНалогообложенияНалоговойНакладной) Тогда
			ТекНомерФилиалНалоговой	= "" + Шапка.СпецРежимНалогообложенияНалоговойНакладной + ТекНомерФилиалНалоговой; 
		КонецЕсли;
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиалНалоговой_"+Инд]    = Сред(ТекНомерФилиалНалоговой, Инд, 1);
		КонецЦикла;		
		
		//Дата
		ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		// даты в шапке нет!
		//Для Инд = 1 По 8 Цикл
		//	ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		//КонецЦикла; 
		
		// Номер
		
		ТекНомер = Прав("        " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 8);
		Для Инд = 1 По 8 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим
		ТекНомерФилиал = "";
		Если ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения) Тогда
			ТекНомерФилиал	= "" + Шапка.СпецРежимНалогообложения + ТекНомерФилиал; 
		КонецЕсли;
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    = Сред(ТекНомерФилиал, Инд, 1);
		КонецЦикла;		

		
		
		СведенияОПродавце   = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ОбластьМакета.Параметры.НазваниеОрганизации           = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		ОбластьМакета.Параметры.АдресОрганизации              = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		
		// телефон
		ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "Телефоны,",          Ложь);
		ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
		ДлинаСтрокиТелефонов = СтрДлина(ТекТелефоныОрганизации);
		Для НомерСимвола = 1 По ДлинаСтрокиТелефонов ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] =  Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;

		Если  Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			// налоговые реквизиты не указыватюся
			ИННОрганизации					= "0";
			НомерСвидетельстваОрганизации	= "0"	
		Иначе	
			ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
			НомерСвидетельстваОрганизации 	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "НомерСвидетельства,",Ложь);	
		КонецЕсли;
		ИННОрганизации = Прав("            " + ИННОрганизации, 12);
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры["НомерСвидетельстваОрганизации"] = НомерСвидетельстваОрганизации;
		
		
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			// в этом случае контрагентом выступает организация
			СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		Иначе
			СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		КонецЕсли; 
		
		ОбластьМакета.Параметры.НазваниеКонтрагента           = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ПолноеНаименование,",Ложь);
		ОбластьМакета.Параметры.АдресКонтрагента              = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ЮридическийАдрес,",  Ложь);
 		
		// телефон
		ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
		ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
		ДлинаСтрокиТелефонов = СтрДлина(ТекТелефоныКонтрагента);
		Для НомерСимвола = 1 По ДлинаСтрокиТелефонов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		
		НомерСвидетельстваКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "НомерСвидетельства,",Ложь);
		Если НЕ ЗначениеЗаполнено(НомерСвидетельстваКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(НомерСвидетельстваКонтрагента),1)) = 0 Тогда
			НомерСвидетельстваКонтрагента = "0";
		КонецЕсли; 
		
		ОбластьМакета.Параметры["НомерСвидетельстваКонтрагента"] = НомерСвидетельстваКонтрагента;

		ИННКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Если НЕ ЗначениеЗаполнено(ИННКонтрагента)
			ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			ИННКонтрагента = "0";
		КонецЕсли; 
		ИННКонтрагента = Прав("            " + ИННКонтрагента, 12);		
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
		Если ЗначениеЗаполнено(ТекНомерДоговора) Тогда
			Для Инд = 1 По 6 Цикл
				ОбластьМакета.Параметры["НомерДоговора_"+Инд]    = Сред(ТекНомерДоговора, Инд, 1);
			КонецЦикла; 
		КонецЕсли;
		Если ВыводитьНомерДоговораБезКлеточек = Истина Тогда
			ОбластьНомера = ОбластьМакета.Область("НомерДоговора1");	
		    ОбластьНомера.Объединить();
			ОбластьНомера = ОбластьМакета.Область("НомерДоговора2");	
		    ОбластьНомера.Объединить();
			ОбластьМакета.Параметры.НомерДоговора_1 = ТекНомерДоговора;
		КонецЕсли;
		
		ТекДатаДоговора = Шапка.ДатаДоговора;
		Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
			ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
			Для Инд = 1 По 8 Цикл
				ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
			КонецЦикла; 
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ВключенаВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	""+ОбластьМакетаЗаголовок.Параметры.ТипПричины1+ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HCOPY",	"");
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	Лев(ТекНомерФилиал, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиал, 2,3));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODFILL",	Шапка.ДатаНалоговойНакладной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM",	Прав(ТекНомерНалоговой,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM1",	Лев(ТекНомерФилиалНалоговой, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM2",	Сред(ТекНомерФилиалНалоговой, 2,3));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2S",	ТекНомерДоговора);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNSPDVSEL",НомерСвидетельстваОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNSPDVBUY",НомерСвидетельстваКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G3S",	ТекНомерДоговора);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H03G1S",	ОбластьМакета.Параметры.ФормаРасчетов);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H04G1D",	Шапка.ДатаНалоговойНакладной);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1D",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G2S",	Шапка.КтоВыписалНалоговуюНакладную);
			
		КонецЕсли;
		
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим табличную часть
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			// Теперь заполним
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество) Тогда
				ОбластьМакета.Параметры.Количество = СтрокаТаблицы.ТекстДляПечатиВКолонкеКоличество;
			КонецЕсли;
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаКорректировки) Тогда
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаКорректировки = Шапка.Дата;
			КонецЕсли;
			
			// номенклатура 
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
			
			// "обнулим" значения неиспользуемого типа корректировки 
			// колонки 5...8
			Если СтрокаТаблицы.ИзменениеКоличества = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеКоличества  = СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.ЦенаБезНДС  		 = СимволДляПустыхПоказателей;
			КонецЕсли;
			Если СтрокаТаблицы.ИзменениеЦеныБезНДС = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеЦеныБезНДС  = СимволДляПустыхПоказателей;
				ОбластьМакета.Параметры.Количество  		 = СимволДляПустыхПоказателей;
			КонецЕсли;
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма изменения базы НДС
			// колонки 9...11
			ОбластьМакета.Параметры.ИзменениеСуммыБезНДС20 		= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0 		= СимволДляПустыхПоказателей;
			ОбластьМакета.Параметры.ИзменениеСуммыБезНДСБезНДС	= СимволДляПустыхПоказателей;
			
			Колонка = "ИзменениеСуммыБезНДС"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС,Объект.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
					
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G1D = ОбластьМакета.Параметры.ДатаКорректировки;
				СтрокаСтруктуры.G2S = ОбластьМакета.Параметры.Причина;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				
				СтрокаСтруктуры.G5  = СтрокаТаблицы.ИзменениеКоличества;
				СтрокаСтруктуры.G6  = СтрокаТаблицы.ЦенаБезНДС;
				Если СтрокаСтруктуры.G5 = 0 Тогда
					СтрокаСтруктуры.G6  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G7  = СтрокаТаблицы.ИзменениеЦеныБезНДС;
				СтрокаСтруктуры.G8  = СтрокаТаблицы.Количество;
				Если СтрокаСтруктуры.G7 = 0 Тогда
					СтрокаСтруктуры.G8  = 0;	
				КонецЕсли;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС,Объект.Дата);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				ИначеЕсли КолонкаДляСуммы = "0" Тогда
					СтрокаСтруктуры.G10  = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G11 = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				КонецЕсли;
				
			КонецЕсли;
						
		КонецЦикла;
		
		// итоговые строки
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ОбластьМакета.Параметры.ИзменениеСуммыБезНДС20 		= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0 		= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.ИзменениеСуммыБезНДСБезНДС	= СимволДляПустыхПоказателей;
		ОбластьМакета.Параметры.ИзменениеСуммыНДС			= СимволДляПустыхПоказателей;
		
		ТаблицаИтогов = ТаблицаНоменклатуры.Скопировать();
		ТаблицаИтогов.Свернуть("СтавкаНДС", "ИзменениеСуммыБезНДС,ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ТаблицаИтогов Цикл
		
			Колонка = "ИзменениеСуммыБезНДС"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС,Объект.Дата);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
		
		КонецЦикла;
		ТаблицаИтогов.Свернуть("", "ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ТаблицаИтогов Цикл
			ОбластьМакета.Параметры.ИзменениеСуммыНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
				СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G9",	СтрокаТаблицы.ИзменениеСуммыНДС);
			КонецЕсли;
		КонецЦикла;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.Дата  					= Формат(Шапка.Дата, "ДФ=dd.MM.yyyy" );
		ОбластьМакета.Параметры.ДатаНалоговойНакладной  = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=dd.MM.yyyy" );
		
		ОбластьМакета.Параметры.Номер  					 = СокрЛП(ТекНомер 		 + ?(ЗначениеЗаполнено(ТекНомерФилиал), "/" + ТекНомерФилиал, ""));
		ОбластьМакета.Параметры.НомерНалоговойНакладной  = СокрЛП(ТекНомерНалоговой + ?(ЗначениеЗаполнено(ТекНомерФилиалНалоговой), "/" + ТекНомерФилиалНалоговой, ""));
		ТабДокумент.Вывести(ОбластьМакета);

		Если Страница <> 2 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
	КонецЦикла; 

	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;

КонецФункции // ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс2015(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "Приложение2КНалоговойНакладной") Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G1D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G42");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G111");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G11");
		
		Если     Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
			 
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			 
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	
	|   ДоговорКонтрагента.Номер КАК НомерДоговора,
	|   ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	
	|	ВидОперации,
	|	Контрагент,
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	
	|	ВидДоговора,
	|   ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных,
	|	ЭлектронныйДокумент,
	|	РегистрируетсяВЕРННПокупателем,
	
	|   ТипПричиныНевыдачиПокупателю,
	|	НалоговаяНакладная.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	|	НалоговаяНакладная.ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	НалоговаяНакладная.ОбособленноеПодразделение.Префикс КАК Префикс,
	|	НалоговаяНакладная.УслугиНерезидентаДляНехозДеят КАК УслугиНерезидентаДляНехозДеят,
	
	|	НалоговаяНакладная.ПоставкаДипПредставительству КАК ПоставкаДипПредставительству,
	
	|	НалоговаяНакладная,
	|	НалоговаяНакладная.Дата КАК ДатаНалоговойНакладной,
	|	НалоговаяНакладная.Номер КАК НомерНалоговойНакладной,
	|	КтоВыписалНалоговуюНакладную КАК КтоВыписалНалоговуюНакладную
	|ИЗ
	|	Документ.Приложение2КНалоговойНакладной КАК Приложение2
	|
	|ГДЕ
	|	Приложение2.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	УчетнаяПолитикаНеЗадана = Ложь;
	ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Ложь;
	ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной = Ложь;
	УчетнаяПолитикаНеЗадана = НЕ УчетнаяПолитика.Существует(Объект.Организация, НачалоМесяца(Объект.Дата), Истина); 
	Если НЕ УчетнаяПолитикаНеЗадана тогда
		НастройкаПечати = НалоговыйУчетПовтИсп.НастройкаПечатиНалоговыхДокументов(Объект.Организация, НачалоМесяца(Объект.Дата));
		ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = НастройкаПечати.ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН;
		ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной  = НЕ НастройкаПечати.ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной; 
	КонецЕсли;

	
	ДополнениеКНаименованиюОрганизации = "";
	ДополнениеКАдресуОрганизации = "";
	Если  ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Истина
		И Шапка.ОбособленноеПодразделение = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ " - " ;
		ДополнениеКАдресуОрганизации       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ЮридическийАдрес,",  Ложь)  + " - " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ);
	Объект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("ДатаКорректировки, Причина, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаМестаБезНДСБезСкидкиРегл,  Количество, СтавкаНДС", "ИзменениеКоличества, ИзменениеЦеныБезНДССоСкидкойРегл, ИзменениеСуммыБезНДСРегл, ИзменениеСуммыНДСРегл");   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаМестаБезНДСБезСкидкиРегл.Имя 	 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеЦеныБезНДССоСкидкойРегл.Имя = "ИзменениеЦеныБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыБезНДСРегл.Имя		 = "ИзменениеСуммыБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыНДСРегл.Имя		 	 = "ИзменениеСуммыНДС";
	
	ТабДокумент = Новый ТабличныйДокумент;                                                           
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложени2КНалоговойНакладной_Приложение2_2015_"+ИмяМакета;

	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2015");
	Если ИмяМакета = "Приложение2КНалоговойНакладнойАльбом" Тогда
		Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2015Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	Макет.КодЯзыкаМакета = "ru";
	
	// определим параметры шапки документа

	//Дата налоговой
	ТекДатаНалоговой = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=ddMMyyyy");
	
	// Номер налоговой
	ТекНомерНалоговой = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НалоговаяНакладная.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим налоговой
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
		ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
	КонецЕсли;
	
	ТекНомерФилиалНалоговой  = ТекНомерФилиал;
	ТекНомерФилиалПриложения = ТекНомерФилиал;
	// если исходная налоговая накладная была с условным спец. режимом "7" или
	// со спец. режимом 4, который в 2015 году не действует
	// то в номере самого приложения 2 этот спец. режим не должен отображаться
	Если    Лев(ТекНомерФилиалПриложения, 1) = "7"
		ИЛИ Лев(ТекНомерФилиалПриложения, 1) = "4" Тогда
		ТекНомерФилиалПриложения = " " + Сред(ТекНомерФилиалПриложения,2);
	КонецЕсли;
	
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		
	// Номер
	ТекНомер = Прав("        " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 8);
		
	// номер договора
	ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
	
	// дата договора
	ТекДатаДоговора = Шапка.ДатаДоговора;
	Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
		ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
	Иначе
		ТекДатаДоговора = "";
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= ?(Шапка.УслугиНерезидентаДляНехозДеят = Истина, "200000000000", "500000000000");
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + " - " + НазваниеОрганизации;
		КонецЕсли;
		
		// вместо адреса - просто страна нерезидента
		АдресОрганизации = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
		Если НЕ ЗначениеЗаполнено(АдресОрганизации) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		КонецЕсли;		
		// остальные данные (телефон) не заполняется
		ТекТелефоныОрганизации = "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "Телефоны,",          Ложь);
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	
	// телефон
	ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
	ДлинаСтрокиТелефоновОрганизации = СтрДлина(ТекТелефоныОрганизации);
		
		
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			ИННКонтрагента 				  = "400000000000";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
		
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + " - " + НазваниеКонтрагента;
			АдресКонтрагента 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдрес,",  Ложь)	
										  + " - " + АдресКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
	
		Если  Шапка.ПоставкаДипПредставительству = Истина 
			И Шапка.ТипПричиныНевыдачиПокупателю <=2 Тогда
			
			ИННКонтрагента = "400000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			АдресКонтрагента = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
			Если НЕ ЗначениеЗаполнено(АдресКонтрагента) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			КонецЕсли;							
			ТекТелефоныКонтрагента = "";

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
			     ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			АдресКонтрагента = "";
			ТекТелефоныКонтрагента = "";
			
		КонецЕсли;
		
	КонецЕсли; 
	ИННКонтрагента 				  = Прав("            " + ИННКонтрагента, 12);

	// телефон
	ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
	ДлинаСтрокиТелефоновКонтрагентов = СтрДлина(ТекТелефоныКонтрагента);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
	
		// Выводим область оригинал/копия
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		// П2 с отрицательной суммой, которые выдаются покупателю и которые выписанны к НН с датой после 01.01.2015 - регистрирует в ЕРНН покупатель
		Если Шапка.РегистрируетсяВЕРННПокупателем = Истина Тогда
		    ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "Х";
		КонецЕсли;
		
		ОбластьМакетаЗаголовок.Параметры.СоглашениеОРазделеПродукции = ?(Шапка.СоглашениеОРазделеПродукции = Истина, "Х", "");
		
		// оргинал
		Если  Шапка.ТипПричиныНевыдачиПокупателю > 0 Тогда
			
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
			
			// такие П2, даже с отрицательной суммой регистрирует продавец
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "";
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата налоговой
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаНалоговой_"+Инд]    = Сред(ТекДатаНалоговой, Инд, 1);
		КонецЦикла; 
		
		// Номер налоговой
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["НомерНалоговой_"+Инд]    = Сред(ТекНомерНалоговой, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим налоговой
		Для Инд = 1 По 5 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    			= Сред(ТекНомерФилиалПриложения, Инд, 1);
			ОбластьМакета.Параметры["НомерФилиалНалоговой_"+Инд]    = Сред(ТекНомерФилиалНалоговой, Инд, 1);
			
		КонецЦикла;		
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 8 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// название продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// адрес продавца
		ОбластьМакета.Параметры.АдресОрганизации = АдресОрганизации;
		
		// телефон продавца
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] =  Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;

		//ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента           = НазваниеКонтрагента;
		
		// адрес покупателя
		ОбластьМакета.Параметры.АдресКонтрагента              = АдресКонтрагента;
		
		// телефон покупателя
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		
		// ИНН покупателя		
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// номер договора
		ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
		
		// дата договора
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
		КонецЕсли;
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
            СтруктураПоказателей.НалоговыйДокумент.Вставить("H_1", ОбластьМакетаЗаголовок.Параметры.СоглашениеОРазделеПродукции);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H_2", ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Объект.Дата);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	 Лев(ТекНомерФилиалПриложения, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиалПриложения, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODFILL",	Шапка.ДатаНалоговойНакладной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM",	Прав(ТекНомерНалоговой,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM1",	 Лев(ТекНомерФилиалНалоговой, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM2",	Сред(ТекНомерФилиалНалоговой, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2S",	ТекНомерДоговора);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G3S",	ТекНомерДоговора);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G2S",	ПечКтоВыписалНалоговуюНакладную);
			
		КонецЕсли;
		
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим табличную часть
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
			// Теперь заполним
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			Если СтрокаТаблицы.ИзменениеКоличества = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеКоличества  = "";
				ОбластьМакета.Параметры.ЦенаБезНДС  		 = "";
			КонецЕсли;
			Если СтрокаТаблицы.ИзменениеЦеныБезНДС = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеЦеныБезНДС  = "";
				ОбластьМакета.Параметры.Количество  		 = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаКорректировки) Тогда
				
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаКорректировки = Шапка.Дата;
				
			КонецЕсли;
			
			// номенклатура 
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
												 
			Колонка = "ИзменениеСуммыБезНДС"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
					
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G1D = ОбластьМакета.Параметры.ДатаКорректировки;
				СтрокаСтруктуры.G2S = ОбластьМакета.Параметры.Причина;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				
				СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G42 = ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				СтрокаСтруктуры.G5  = СтрокаТаблицы.ИзменениеКоличества;
				СтрокаСтруктуры.G6  = СтрокаТаблицы.ЦенаБезНДС;
				Если СтрокаСтруктуры.G5 = 0 Тогда
					СтрокаСтруктуры.G6  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G7  = СтрокаТаблицы.ИзменениеЦеныБезНДС;
				СтрокаСтруктуры.G8  = СтрокаТаблицы.Количество;
				Если СтрокаСтруктуры.G7 = 0 Тогда
					СтрокаСтруктуры.G8  = 0;	
				КонецЕсли;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				ИначеЕсли КолонкаДляСуммы = "7" Тогда
					СтрокаСтруктуры.G111  = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				ИначеЕсли КолонкаДляСуммы = "0" Тогда
					СтрокаСтруктуры.G10  = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G11 = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				КонецЕсли;
				
			КонецЕсли;
						
		КонецЦикла;
		
		// итоговые строки
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ТаблицаИтогов = ТаблицаНоменклатуры.Скопировать();
		ТаблицаИтогов.Свернуть("СтавкаНДС", "ИзменениеСуммыБезНДС,ИзменениеСуммыНДС");
		
		Для каждого СтрокаТаблицы Из ТаблицаИтогов Цикл
		
			Колонка = "ИзменениеСуммыБезНДС"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
			
		
		КонецЦикла;
		
		ТаблицаИтогов.Свернуть("СтавкаНДС", "ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ТаблицаИтогов Цикл
			
			КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС);
			Если КолонкаДляСуммы = "20" Тогда
				ОбластьМакета.Параметры["ИзменениеСуммыНДС" + КолонкаДляСуммы] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G9",	СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				ОбластьМакета.Параметры["ИзменениеСуммыНДС" + КолонкаДляСуммы] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G111",	СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;
		
		ТабДокумент.Вывести(ОбластьМакета);
 	
	КонецЦикла; 

	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;

КонецФункции // ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс2014Мес12(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "Приложение2КНалоговойНакладной") Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G1D");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G9");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G111");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G10");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G11");
		
		Если     Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
				// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	
	|   ДоговорКонтрагента.Номер КАК НомерДоговора,
	|   ДоговорКонтрагента.Дата  КАК ДатаДоговора,
	
	|	ВидОперации,
	|	Контрагент,
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	
	|	ВидДоговора,
	|   ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных,
	|	ЭлектронныйДокумент,
	
	|   ТипПричиныНевыдачиПокупателю,
	|	НалоговаяНакладная.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	|	НалоговаяНакладная.ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	НалоговаяНакладная.ОбособленноеПодразделение.Префикс КАК Префикс,
	|	НалоговаяНакладная.УслугиНерезидентаДляНехозДеят КАК УслугиНерезидентаДляНехозДеят,
	
	|	НалоговаяНакладная.ПоставкаДипПредставительству КАК ПоставкаДипПредставительству,
	
	|	НалоговаяНакладная,
	|	НалоговаяНакладная.Дата КАК ДатаНалоговойНакладной,
	|	НалоговаяНакладная.Номер КАК НомерНалоговойНакладной,
	|	КтоВыписалНалоговуюНакладную КАК КтоВыписалНалоговуюНакладную
	|ИЗ
	|	Документ.Приложение2КНалоговойНакладной КАК Приложение2
	|
	|ГДЕ
	|	Приложение2.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	УчетнаяПолитикаНеЗадана = Ложь;
	ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Ложь;
	ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной = Ложь;
	УчетнаяПолитикаНеЗадана = НЕ УчетнаяПолитика.Существует(Объект.Организация, НачалоМесяца(Объект.Дата), Истина); 
	Если НЕ УчетнаяПолитикаНеЗадана тогда
		НастройкаПечати = НалоговыйУчетПовтИсп.НастройкаПечатиНалоговыхДокументов(Объект.Организация, НачалоМесяца(Объект.Дата));
		ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = НастройкаПечати.ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН;
		ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной  = НЕ НастройкаПечати.ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной; 
	КонецЕсли;

	
	ДополнениеКНаименованиюОрганизации = "";
	ДополнениеКАдресуОрганизации = "";
	Если  ДополнятьНаименованиеАдресДаннымиГоловнойОрганизацииВНН = Истина
		И Шапка.ОбособленноеПодразделение = Истина
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ " - " ;
		ДополнениеКАдресуОрганизации       = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ЮридическийАдрес,",  Ложь)  + " - " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ); 
	Объект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("ДатаКорректировки, Причина, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЦенаМестаБезНДСБезСкидкиРегл,  Количество, СтавкаНДС", "ИзменениеКоличества, ИзменениеЦеныБезНДССоСкидкойРегл, ИзменениеСуммыБезНДСРегл, ИзменениеСуммыНДСРегл");   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаМестаБезНДСБезСкидкиРегл.Имя 	 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеЦеныБезНДССоСкидкойРегл.Имя = "ИзменениеЦеныБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыБезНДСРегл.Имя		 = "ИзменениеСуммыБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыНДСРегл.Имя		 	 = "ИзменениеСуммыНДС";
	
	ТабДокумент = Новый ТабличныйДокумент;                                                           
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложени2КНалоговойНакладной_Приложение2_2014_Мес12_"+ИмяМакета;

	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2014Мес12");
	Если ИмяМакета = "Приложение2КНалоговойНакладнойАльбом" Тогда
		Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2014Мес12Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	Макет.КодЯзыкаМакета = "ru";
	
	// определим параметры шапки документа

	//Дата налоговой
	ТекДатаНалоговой = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=ddMMyyyy");
	
	// Номер налоговой
	ТекНомерНалоговой = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НалоговаяНакладная.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим налоговой
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
		ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
	КонецЕсли;
	
	ТекНомерФилиалНалоговой  = ТекНомерФилиал;
	ТекНомерФилиалПриложения = ТекНомерФилиал;
	// если исходная налоговая накладная была с условным спец. режимом "7"
	// то в номере самого приложения 2 этот спец. режим не должен отображаться
	Если    Лев(ТекНомерФилиалПриложения, 1) = "7" Тогда
		ТекНомерФилиалПриложения = " " + Сред(ТекНомерФилиалПриложения,2);
	КонецЕсли;
	
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		
	// Номер
	ТекНомер = Прав("        " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 8);
		
	// номер договора
	ТекНомерДоговора = СокрЛП("" + Шапка.НомерДоговора);
	
	// дата договора
	ТекДатаДоговора = Шапка.ДатаДоговора;
	Если ЗначениеЗаполнено(ТекДатаДоговора) Тогда
		ТекДатаДоговора = Формат(ТекДатаДоговора,"ДФ=ddMMyyyy");
	Иначе
		ТекДатаДоговора = "";
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= ?(Шапка.УслугиНерезидентаДляНехозДеят = Истина, "200000000000", "300000000000");
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + " - " + НазваниеОрганизации;
		КонецЕсли;
		
		// вместо адреса - просто страна нерезидента
		АдресОрганизации = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
		Если НЕ ЗначениеЗаполнено(АдресОрганизации) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		КонецЕсли;		
		// остальные данные (телефон) не заполняется
		ТекТелефоныОрганизации = "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		АдресОрганизации 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ЮридическийАдрес,",  Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "Телефоны,",          Ложь);
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	
	// телефон
	ТекТелефоныОрганизации = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныОрганизации);
	ДлинаСтрокиТелефоновОрганизации = СтрДлина(ТекТелефоныОрганизации);
		
		
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ДополнениеКАдресуОрганизации 		 + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			ИННКонтрагента 				  = "400000000000";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
		
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		АдресКонтрагента 				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ЮридическийАдрес,",  Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + " - " + НазваниеКонтрагента;
			АдресКонтрагента 			= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ЮридическийАдрес,",  Ложь)	
										  + " - " + АдресКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "Телефоны," ,Ложь);
	
		Если  Шапка.ПоставкаДипПредставительству = Истина 
			И Шапка.ТипПричиныНевыдачиПокупателю <=2 Тогда
			
			ИННКонтрагента = "400000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			АдресКонтрагента = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");;
			Если НЕ ЗначениеЗаполнено(АдресКонтрагента) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			КонецЕсли;							
			ТекТелефоныКонтрагента = "";

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
			     ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "400000000000";
			НазваниеКонтрагента = "Неплатник";
			АдресКонтрагента = "";
			ТекТелефоныКонтрагента = "";
			
		КонецЕсли;
		
	КонецЕсли; 
	ИННКонтрагента 				  = Прав("            " + ИННКонтрагента, 12);

	// телефон
	ТекТелефоныКонтрагента = ОбщегоНазначенияБПВызовСервера.ПолучитьТелефонДляНалоговойНакладной(ТекТелефоныКонтрагента);
	ДлинаСтрокиТелефоновКонтрагентов = СтрДлина(ТекТелефоныКонтрагента);
	
	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 2 Цикл
		
		Если  Страница = 2 Тогда
			Если    Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка 
				ИЛИ Шапка.ЭлектронныйДокумент Тогда
				// печатаем в одном экземпляре
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
	
		// Выводим область оригинал/копия
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Шапка.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных;
		ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент 							 = Шапка.ЭлектронныйДокумент;
		Если Шапка.ЭлектронныйДокумент = Ложь Тогда
			Если Страница = 2 Тогда
				// копия - всегда остается у продавца
				ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца  = "Х";
				
			Иначе
				
				// оргинал
				Если  Шапка.ТипПричиныНевыдачиПокупателю = 0 ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
					
					// НН, для которой тип причины невыдачи - продажа ниже обычных цен выдается покупателю, вторая пара накладных (собстенно на превышение) - нет
					ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю = "Х";
				
				Иначе
					
					// накладная остается у поставщика
					ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
					ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
					ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата налоговой
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаНалоговой_"+Инд]    = Сред(ТекДатаНалоговой, Инд, 1);
		КонецЦикла; 
		
		// Номер налоговой
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["НомерНалоговой_"+Инд]    = Сред(ТекНомерНалоговой, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим налоговой
		Для Инд = 1 По 5 Цикл                                                                 
			ОбластьМакета.Параметры["НомерФилиал_"+Инд]    			= Сред(ТекНомерФилиалПриложения, Инд, 1);
			ОбластьМакета.Параметры["НомерФилиалНалоговой_"+Инд]    = Сред(ТекНомерФилиалНалоговой, Инд, 1);
		КонецЦикла;		
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 8 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// название продавца
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		// адрес продавца
		ОбластьМакета.Параметры.АдресОрганизации = АдресОрганизации;
		
		// телефон продавца
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновОрганизации ЦИкл
			ОбластьМакета.Параметры["ТелефоныОрганизации_"+НомерСимвола] =  Сред(ТекТелефоныОрганизации, НомерСимвола, 1);
		КонецЦикла;

		//ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента           = НазваниеКонтрагента;
		
		// адрес покупателя
		ОбластьМакета.Параметры.АдресКонтрагента              = АдресКонтрагента;
		
		// телефон покупателя
		Для НомерСимвола = 1 По ДлинаСтрокиТелефоновКонтрагентов ЦИкл
			ОбластьМакета.Параметры["ТелефоныКонтрагента_"+НомерСимвола] = Сред(ТекТелефоныКонтрагента, НомерСимвола, 1);
		КонецЦикла;
		
		// ИНН покупателя		
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// номер договора
		ОбластьМакета.Параметры.НомерДоговора = ТекНомерДоговора;
		
		// дата договора
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаДоговора_"+Инд]    = Сред(ТекДатаДоговора, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если ПечататьТитульныйЛистДляПриложения2КНалоговойНакладной Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
		КонецЕсли;
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG",	ОбластьМакетаЗаголовок.Параметры.ВыдаетсяПокупателю);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",	Формат(ОбластьМакетаЗаголовок.Параметры.ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных, "БЛ=; БИ=Х"));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HEL",	Формат(ОбластьМакетаЗаголовок.Параметры.ЭлектронныйДокумент, "БЛ=; БИ=Х"));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HCOPY",	ОбластьМакетаЗаголовок.Параметры.ОстаетсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Объект.Дата);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	 Лев(ТекНомерФилиалПриложения, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	Сред(ТекНомерФилиалПриложения, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODFILL",	Шапка.ДатаНалоговойНакладной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM",	Прав(ТекНомерНалоговой,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM1",	 Лев(ТекНомерФилиалНалоговой, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM2",	Сред(ТекНомерФилиалНалоговой, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G1D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H01G2S",	ТекНомерДоговора);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	ОбластьМакета.Параметры.НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	ОбластьМакета.Параметры.НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCSEL",	ОбластьМакета.Параметры.АдресОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HLOCBUY",	ОбластьМакета.Параметры.АдресКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELSEL",	ТекТелефоныОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTELBUY",	ТекТелефоныКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G1S",	ОбластьМакета.Параметры.ВидДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G2D",	Шапка.ДатаДоговора);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H02G3S",	ТекНомерДоговора);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G1D",	Шапка.Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H10G2S",	ПечКтоВыписалНалоговуюНакладную);
			
		КонецЕсли;
		
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим табличную часть
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			
			// Теперь заполним
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			Если СтрокаТаблицы.ИзменениеКоличества = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеКоличества  = "";
				ОбластьМакета.Параметры.ЦенаБезНДС  		 = "";
			КонецЕсли;
			Если СтрокаТаблицы.ИзменениеЦеныБезНДС = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеЦеныБезНДС  = "";
				ОбластьМакета.Параметры.Количество  		 = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			// дата отгрузки/оплаты
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаКорректировки) Тогда
				
				// укажем дату выписки накладной
				ОбластьМакета.Параметры.ДатаКорректировки = Шапка.Дата;
				
			КонецЕсли;
			
			// номенклатура 
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
												 
			Колонка = "ИзменениеСуммыБезНДС"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
					
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина И Страница = 1 Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				СтрокаСтруктуры.G1D = ОбластьМакета.Параметры.ДатаКорректировки;
				СтрокаСтруктуры.G2S = ОбластьМакета.Параметры.Причина;
				СтрокаСтруктуры.G3S = ОбластьМакета.Параметры.Номенклатура;
				
				СтрокаСтруктуры.G4 = ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S = ОбластьМакета.Параметры.ЕдиницаИзмерения;
				
				СтрокаСтруктуры.G5  = СтрокаТаблицы.ИзменениеКоличества;
				СтрокаСтруктуры.G6  = СтрокаТаблицы.ЦенаБезНДС;
				Если СтрокаСтруктуры.G5 = 0 Тогда
					СтрокаСтруктуры.G6  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G7  = СтрокаТаблицы.ИзменениеЦеныБезНДС;
				СтрокаСтруктуры.G8  = СтрокаТаблицы.Количество;
				Если СтрокаСтруктуры.G7 = 0 Тогда
					СтрокаСтруктуры.G8  = 0;	
				КонецЕсли;
				
				КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС);
				Если КолонкаДляСуммы = "20" Тогда
					СтрокаСтруктуры.G9  = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				ИначеЕсли КолонкаДляСуммы = "0" Тогда
					СтрокаСтруктуры.G111  = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				ИначеЕсли КолонкаДляСуммы = "7" Тогда
					СтрокаСтруктуры.G10  = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				ИначеЕсли КолонкаДляСуммы = "БезНДС" Тогда
					СтрокаСтруктуры.G11 = СтрокаТаблицы.ИзменениеСуммыБезНДС;	
				КонецЕсли;
				
			КонецЕсли;
						
		КонецЦикла;
		
		// итоговые строки
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		
		ТаблицаИтогов = ТаблицаНоменклатуры.Скопировать();
		ТаблицаИтогов.Свернуть("СтавкаНДС", "ИзменениеСуммыБезНДС,ИзменениеСуммыНДС");
		
		Для каждого СтрокаТаблицы Из ТаблицаИтогов Цикл
		
			Колонка = "ИзменениеСуммыБезНДС"+ ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС);
			ОбластьМакета.Параметры[Колонка] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
			
		
		КонецЦикла;
		
		ТаблицаИтогов.Свернуть("СтавкаНДС", "ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ТаблицаИтогов Цикл
			
			КолонкаДляСуммы = ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС);
			Если КолонкаДляСуммы = "20" Тогда
				ОбластьМакета.Параметры["ИзменениеСуммыНДС" + КолонкаДляСуммы] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G9",	СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				ОбластьМакета.Параметры["ИзменениеСуммыНДС" + КолонкаДляСуммы] = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G111",	СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;
		
		ОбластьМакета.Параметры.Дата  					= Формат(Шапка.Дата, "ДФ=dd.MM.yyyy" );
		ОбластьМакета.Параметры.ДатаНалоговойНакладной  = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=dd.MM.yyyy" );
		
		ТекНомерФилиалПодвалПриложение = "";
		ТекНомерФилиалПодвалНалоговая = "";
		Если ЗначениеЗаполнено(НомерФилиала) Тогда
			ТекНомерФилиалПодвалПриложение = "/" + СокрЛ(НомерФилиала);
			ТекНомерФилиалПодвалНалоговая  = "/" + СокрЛ(НомерФилиала);
		КонецЕсли;
		
		КодСпецРежимаНалоговая  = КодСпецРежима;
		КодСпецРежимаПриложение = ?(КодСпецРежима = "7", " ", КодСпецРежима);
		
		Если ЗначениеЗаполнено(КодСпецРежимаПриложение + ТекНомерФилиалПодвалПриложение) Тогда
			ТекНомерФилиалПодвалПриложение = "/" + КодСпецРежимаПриложение + ТекНомерФилиалПодвалПриложение;
		КонецЕсли;
		Если ЗначениеЗаполнено(КодСпецРежимаНалоговая + ТекНомерФилиалПодвалНалоговая) Тогда
			ТекНомерФилиалПодвалНалоговая = "/" + КодСпецРежимаНалоговая + ТекНомерФилиалПодвалНалоговая;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Номер  					 = СокрЛП(ТекНомер 		    + ТекНомерФилиалПодвалПриложение);
		ОбластьМакета.Параметры.НомерНалоговойНакладной  = СокрЛП(ТекНомерНалоговой + ТекНомерФилиалПодвалНалоговая);
		
		ТабДокумент.Вывести(ОбластьМакета);

		Если Страница <> 2 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
	КонецЦикла; 

	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;

КонецФункции // ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс2016(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "Приложение2КНалоговойНакладной") Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	УстановитьПривилегированныйРежим(Истина);
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G001");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		
		Если     Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
			 
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			 
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	
	|	ВидОперации,
	
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	
	|	РегистрируетсяВЕРННПокупателем,
	
	|   ТипПричиныНевыдачиПокупателю,
	
	|	НалоговаяНакладная,
	|	НалоговаяНакладная.Дата КАК ДатаНалоговойНакладной,
	|	НалоговаяНакладная.Номер КАК НомерНалоговойНакладной,
	
	|	НалоговаяНакладная.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	|	НалоговаяНакладная.ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	НалоговаяНакладная.ОбособленноеПодразделение.Префикс КАК Префикс,
	
	|	НалоговаяНакладная.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены КАК ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены,
	
	|   НалоговаяНакладная.Сводная   КАК Сводная,
	|   НалоговаяНакладная.ЛьготаНДС КАК ЛьготаНДС,
	|   НалоговаяНакладная.ВидОперации КАК ВидОперацииНалоговой,
	
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН
	|ИЗ
	|	Документ.Приложение2КНалоговойНакладной КАК Приложение2
	|
	|ГДЕ
	|	Приложение2.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	// получим "печатную форму" исходной НН для определения номера корректируемой строки
	СтруктураПоискаНомераСтрокиННПолная      = Новый Структура("Номенклатура,ЦенаБезНДС,ЕдиницаИзмеренияКод");
	СтруктураПоискаНомераСтрокиННСокращенная = Новый Структура("Номенклатура,ЦенаБезНДС");
	Попытка
		
		ИспользоватьДанныеЗЦ = Ложь;
		Если ЗначениеЗаполнено(Шапка.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены) Тогда
			НалоговыйДокументОбъект = Шапка.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены;	
		    ИспользоватьДанныеЗЦ = Истина;
		Иначе	
			НалоговыйДокументОбъект = Шапка.НалоговаяНакладная;	
		КонецЕсли;
	
		МассивОбъектовНННижеОбычнойЦены = Новый Массив;
		МассивОбъектовНННижеОбычнойЦены.Добавить(НалоговыйДокументОбъект);  
		КоллекцияПечатныхФормНН = УправлениеПечатью.ПодготовитьКоллекциюПечатныхФорм("НалоговаяНакладная");
		ПараметрыВыводаНН = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();
		ПечатнаяФормаНН = Документы.НалоговаяНакладная.ПечатьДокумента(МассивОбъектовНННижеОбычнойЦены, Новый Структура, ПараметрыВыводаНН, Истина);
		Если ИспользоватьДанныеЗЦ Тогда
			ПечатнаяФормаНН 	= ПечатнаяФормаНН.НалоговыйДокументЗЦ.R;	
		Иначе	
			ПечатнаяФормаНН 	= ПечатнаяФормаНН.НалоговыйДокумент.R;	
		КонецЕсли;	
		
		Если ПечатнаяФормаНН.Колонки.Найти("G3S") = Неопределено Тогда
		    ПечатнаяФормаНН.Колонки.Добавить("Номенклатура");
		Иначе	
			ПечатнаяФормаНН.Колонки.G3S.Имя = "Номенклатура";
		КонецЕсли;
		
		Если ПечатнаяФормаНН.Колонки.Найти("G105_2S") = Неопределено Тогда
		    ПечатнаяФормаНН.Колонки.Добавить("ЕдиницаИзмеренияКод");
		Иначе	
			ПечатнаяФормаНН.Колонки.G105_2S.Имя = "ЕдиницаИзмеренияКод";
		КонецЕсли;
			
		Если ПечатнаяФормаНН.Колонки.Найти("G6") = Неопределено Тогда
		    ПечатнаяФормаНН.Колонки.Добавить("ЦенаБезНДС");
		Иначе	
			ПечатнаяФормаНН.Колонки.G6.Имя = "ЦенаБезНДС";
		КонецЕсли;
		
	Исключение 
		ПечатнаяФормаНН = Новый ТаблицаЗначений;
		ПечатнаяФормаНН.Колонки.добавить("Номенклатура");
		ПечатнаяФормаНН.Колонки.добавить("ЕдиницаИзмеренияКод");
		ПечатнаяФормаНН.Колонки.добавить("ЦенаБезНДС");
	КонецПопытки;
	
	ДополнениеКНаименованиюОрганизации = "";
	Если  Шапка.ОбособленноеПодразделение =  Истина 
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ ", " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ);
	Объект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("Причина, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаМестаБезНДСБезСкидкиРегл,  Количество, СтавкаНДС, КодЛьготы, НомерСтрокиНН", "ИзменениеКоличества, ИзменениеЦеныБезНДССоСкидкойРегл, ИзменениеСуммыБезНДСРегл, ИзменениеСуммыНДСРегл");   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаМестаБезНДСБезСкидкиРегл.Имя 	 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеЦеныБезНДССоСкидкойРегл.Имя = "ИзменениеЦеныБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыБезНДСРегл.Имя		 = "ИзменениеСуммыБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыНДСРегл.Имя		 	 = "ИзменениеСуммыНДС";
	
	// Для служебныех целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	ТабДокумент = Новый ТабличныйДокумент;                                                           
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложени2КНалоговойНакладной_Приложение2_2016_"+ИмяМакета;

	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2016");
	Если ИмяМакета = "Приложение2КНалоговойНакладнойАльбом" Тогда
		Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2016Альбом");	
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	Макет.КодЯзыкаМакета = "ru";
	
	// определим параметры шапки документа

	//Дата налоговой
	ТекДатаНалоговой = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=ddMMyyyy");
	
	// Номер налоговой
	ТекНомерНалоговой = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НалоговаяНакладная.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим налоговой
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если Шапка.ДатаНалоговойНакладной < '2016-04-01' Тогда
		Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
			ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
		КонецЕсли;
	Иначе	
	    ТекНомерФилиал = КодСпецРежима;
		Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
			ТекНомерФилиал = "5";
		КонецЕсли;
	КонецЕсли;
	
	ТекНомерФилиалНалоговой  = ТекНомерФилиал;
	
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		
	// Номер
	ТекНомер = Прав("        " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим
	КодСпецРежима    = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	Если КодСпецРежима = "7" Тогда
		КодСпецРежима = "";
	КонецЕсли;
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= "500000000000";
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + ", " + НазваниеОрганизации;
		КонецЕсли;
		
		// вместо адреса - просто страна нерезидента
		Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли;
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	
		
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			
			ФилиалПокупателя = "";			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + ", " + НазваниеКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
	
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда

			
			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли;

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
			     ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
	КонецЕсли; 
	ИННКонтрагента 				  = Прав("            " + ИННКонтрагента, 12);

	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
	
		// Выводим область оригинал/копия
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		// П2 с отрицательной суммой, которые выдаются покупателю и которые выписанны к НН с датой после 01.01.2015 - регистрирует в ЕРНН покупатель
		Если Шапка.РегистрируетсяВЕРННПокупателем = Истина Тогда
		    ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "Х";
		Иначе
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом = "Х";
		КонецЕсли;
		
		Если (    Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
			  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
			  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
			  
			  ОбластьМакетаЗаголовок.Параметры.Сводная = ?(Шапка.Сводная = Истина, "X", "");	
			  
		КонецЕсли;
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		// оргинал
		Если  Шапка.ТипПричиныНевыдачиПокупателю > 0 Тогда
			
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
			
			// такие П2, даже с отрицательной суммой регистрирует продавец
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "";
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом   = "Х";
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата налоговой
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаНалоговой_"+Инд]    = Сред(ТекДатаНалоговой, Инд, 1);
		КонецЦикла; 
		
		// Номер налоговой
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["НомерНалоговой_"+Инд]    = Сред(ТекНомерНалоговой, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим налоговой
		Для Инд = 1 По 5 Цикл                                                                 

			ОбластьМакета.Параметры["НомерФилиалНалоговой_"+Инд]    = Сред(ТекНомерФилиалНалоговой, Инд, 1);
			
		КонецЦикла;		
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		//ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента           = НазваниеКонтрагента;
		
		// ИНН покупателя		
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "ИзменениеСуммыБезНДС, ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС20    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G9", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС7    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G111", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G111", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R007G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R006G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДСБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G11", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ИтогНДС    = СтрокаТаблицы.ИзменениеСуммыНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИзменениеСуммыНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R001G03", ИтогНДС);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN0", ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",  ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H03",      ОбластьМакетаЗаголовок.Параметры.Сводная);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",  ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Объект.Дата);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODFILL",	Шапка.ДатаНалоговойНакладной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM",	Прав(ТекНомерНалоговой,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM1",	Лев(ТекНомерФилиалНалоговой, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM2",	Сред(ТекНомерФилиалНалоговой, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
			
		КонецЕсли;
		
		// Выводим табличную часть
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			Если СтрокаТаблицы.ИзменениеКоличества = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеКоличества  = "";
				ОбластьМакета.Параметры.ЦенаБезНДС  		 = "";
			КонецЕсли;
			Если СтрокаТаблицы.ИзменениеЦеныБезНДС = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеЦеныБезНДС  = "";
				ОбластьМакета.Параметры.Количество  		 = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура);
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			
			ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			
			// определеним номер строки исходной НН
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.НомерСтрокиНН) Тогда
				ЗаполнитьЗначенияСвойств(СтруктураПоискаНомераСтрокиННПолная, ОбластьМакета.Параметры);
				СтруктураПоискаНомераСтрокиННПолная.ЦенаБезНДС = Окр(СтрокаТаблицы.ЦенаБезНДС,2);
				
				НайденныеСтроки = ПечатнаяФормаНН.НайтиСтроки(СтруктураПоискаНомераСтрокиННПолная);
				Если НайденныеСтроки.Количество() = 0 Тогда
					
					ЗаполнитьЗначенияСвойств(СтруктураПоискаНомераСтрокиННСокращенная, ОбластьМакета.Параметры);
					СтруктураПоискаНомераСтрокиННСокращенная.ЦенаБезНДС = Окр(СтрокаТаблицы.ЦенаБезНДС,2);
					
					НайденныеСтроки = ПечатнаяФормаНН.НайтиСтроки(СтруктураПоискаНомераСтрокиННСокращенная);
				    Если НайденныеСтроки.Количество() > 0 Тогда
						ОбластьМакета.Параметры.НомерСтрокиНН = ПечатнаяФормаНН.Индекс(НайденныеСтроки[0]) + 1;
					КонецЕсли;
				Иначе	
					ОбластьМакета.Параметры.НомерСтрокиНН = ПечатнаяФормаНН.Индекс(НайденныеСтроки[0]) + 1;
				КонецЕсли;
			КонецЕсли;
			
			
			
			ДанныеОСумме = СтрокаТаблицы.ИзменениеСуммыБезНДС;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат Тогда
				
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G001		= ОбластьМакета.Параметры.НомерСтрокиНН;
				СтрокаСтруктуры.G2S 		= ОбластьМакета.Параметры.Причина;
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				
				СтрокаСтруктуры.G5  = СтрокаТаблицы.ИзменениеКоличества;
				СтрокаСтруктуры.G6  = СтрокаТаблицы.ЦенаБезНДС;
				Если СтрокаСтруктуры.G5 = 0 Тогда
					СтрокаСтруктуры.G6  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G7  = СтрокаТаблицы.ИзменениеЦеныБезНДС;
				СтрокаСтруктуры.G8  = СтрокаТаблицы.Количество;
				Если СтрокаСтруктуры.G7 = 0 Тогда
					СтрокаСтруктуры.G8  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);
 	
	КонецЦикла; 

	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;

КонецФункции // ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс2017(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "Приложение2КНалоговойНакладной") Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	УстановитьПривилегированныйРежим(Истина);
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G001");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G32");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G33");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G011");
		
		Если     Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
			 
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			 
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	
	|	ВидОперации,
	
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	
	|	РегистрируетсяВЕРННПокупателем,
	
	|   ТипПричиныНевыдачиПокупателю,
	
	|	НалоговаяНакладная,
	|	НалоговаяНакладная.Дата КАК ДатаНалоговойНакладной,
	|	НалоговаяНакладная.Номер КАК НомерНалоговойНакладной,
	
	|	НалоговаяНакладная.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	|	НалоговаяНакладная.ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	НалоговаяНакладная.ОбособленноеПодразделение.Префикс КАК Префикс,
	
	|	НалоговаяНакладная.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены КАК ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены,
	
	|   НалоговаяНакладная.Сводная   КАК Сводная,
	|   НалоговаяНакладная.ЛьготаНДС КАК ЛьготаНДС,
	|   НалоговаяНакладная.ВидОперации КАК ВидОперацииНалоговой,
	
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН
	|ИЗ
	|	Документ.Приложение2КНалоговойНакладной КАК Приложение2
	|
	|ГДЕ
	|	Приложение2.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	// получим "печатную форму" исходной НН для определения номера корректируемой строки
	СтруктураПоискаНомераСтрокиННПолная      = Новый Структура("Номенклатура,ЦенаБезНДС,ЕдиницаИзмеренияКод");
	СтруктураПоискаНомераСтрокиННСокращенная = Новый Структура("Номенклатура,ЦенаБезНДС");
	Попытка
		
		ИспользоватьДанныеЗЦ = Ложь;
		Если ЗначениеЗаполнено(Шапка.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены) Тогда
			НалоговыйДокументОбъект = Шапка.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены;	
		    ИспользоватьДанныеЗЦ = Истина;
		Иначе	
			НалоговыйДокументОбъект = Шапка.НалоговаяНакладная;	
		КонецЕсли;
	
		МассивОбъектовНННижеОбычнойЦены = Новый Массив;
		МассивОбъектовНННижеОбычнойЦены.Добавить(НалоговыйДокументОбъект);  
		КоллекцияПечатныхФормНН = УправлениеПечатью.ПодготовитьКоллекциюПечатныхФорм("НалоговаяНакладная");
		ПараметрыВыводаНН = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();
		ПечатнаяФормаНН = Документы.НалоговаяНакладная.ПечатьДокумента(МассивОбъектовНННижеОбычнойЦены, Новый Структура, ПараметрыВыводаНН, Истина);
		Если ИспользоватьДанныеЗЦ Тогда
			ПечатнаяФормаНН 	= ПечатнаяФормаНН.НалоговыйДокументЗЦ.R;	
		Иначе	
			ПечатнаяФормаНН 	= ПечатнаяФормаНН.НалоговыйДокумент.R;	
		КонецЕсли;	
		
		Если ПечатнаяФормаНН.Колонки.Найти("G3S") = Неопределено Тогда
		    ПечатнаяФормаНН.Колонки.Добавить("Номенклатура");
		Иначе	
			ПечатнаяФормаНН.Колонки.G3S.Имя = "Номенклатура";
		КонецЕсли;
		
		Если ПечатнаяФормаНН.Колонки.Найти("G105_2S") = Неопределено Тогда
		    ПечатнаяФормаНН.Колонки.Добавить("ЕдиницаИзмеренияКод");
		Иначе	
			ПечатнаяФормаНН.Колонки.G105_2S.Имя = "ЕдиницаИзмеренияКод";
		КонецЕсли;
			
		Если ПечатнаяФормаНН.Колонки.Найти("G6") = Неопределено Тогда
		    ПечатнаяФормаНН.Колонки.Добавить("ЦенаБезНДС");
		Иначе	
			ПечатнаяФормаНН.Колонки.G6.Имя = "ЦенаБезНДС";
		КонецЕсли;
		
	Исключение 
		ПечатнаяФормаНН = Новый ТаблицаЗначений;
		ПечатнаяФормаНН.Колонки.добавить("Номенклатура");
		ПечатнаяФормаНН.Колонки.добавить("ЕдиницаИзмеренияКод");
		ПечатнаяФормаНН.Колонки.добавить("ЦенаБезНДС");
	КонецПопытки;
	
	ДополнениеКНаименованиюОрганизации = "";
	Если  Шапка.ОбособленноеПодразделение =  Истина 
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ ", " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ);
	Объект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("КодВид, КодСХ, Причина, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаМестаБезНДСБезСкидкиРегл,  Количество, СтавкаНДС, КодЛьготы, НомерСтрокиНН", "ИзменениеКоличества, ИзменениеЦеныБезНДССоСкидкойРегл, ИзменениеСуммыБезНДСРегл, ИзменениеСуммыНДСРегл");   	
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаМестаБезНДСБезСкидкиРегл.Имя 	 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеЦеныБезНДССоСкидкойРегл.Имя = "ИзменениеЦеныБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыБезНДСРегл.Имя		 = "ИзменениеСуммыБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыНДСРегл.Имя		 	 = "ИзменениеСуммыНДС";
	
	// Для служебныех целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	ТабДокумент = Новый ТабличныйДокумент;                                                           
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложени2КНалоговойНакладной_Приложение2_2017_"+ИмяМакета;

	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2017Альбом");
	Макет.КодЯзыкаМакета = "ru";
	
	// определим параметры шапки документа

	//Дата налоговой
	ТекДатаНалоговой = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=ddMMyyyy");
	
	// Номер налоговой
	ТекНомерНалоговой = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НалоговаяНакладная.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим налоговой
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если Шапка.ДатаНалоговойНакладной < '2016-04-01' Тогда
		Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
			ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
		КонецЕсли;
	Иначе	
	    ТекНомерФилиал = КодСпецРежима;
		Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
			ТекНомерФилиал = "5";
		КонецЕсли;
	КонецЕсли;
	
	ТекНомерФилиалНалоговой  = ТекНомерФилиал;
	
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		
	// Номер
	ТекНомер = Прав("        " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим
	КодСпецРежима    = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	
	Если КодСпецРежима = "7" Тогда
		КодСпецРежима = "";
	КонецЕсли;
	
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= "500000000000";
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + ", " + НазваниеОрганизации;
		КонецЕсли;
		
		// вместо адреса - просто страна нерезидента
		Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли;
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	
		
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			
			ФилиалПокупателя = "";			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
	ИначеЕсли Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
		
		ИННКонтрагента 		= ИННОрганизации;
		НазваниеКонтрагента = НазваниеОрганизации;
		ФилиалПокупателя	= ФилиалПродавца;
		
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + ", " + НазваниеКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
	
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда

			
			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли;

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
			     ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
	КонецЕсли; 
	ИННКонтрагента 				  = Прав("            " + ИННКонтрагента, 12);

	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
	
		// Выводим область оригинал/копия
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		// П2 с отрицательной суммой, которые выдаются покупателю и которые выписанны к НН с датой после 01.01.2015 - регистрирует в ЕРНН покупатель
		Если Шапка.РегистрируетсяВЕРННПокупателем = Истина Тогда
		    ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "Х";
		Иначе
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом = "Х";
		КонецЕсли;
		
		Если (    Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
			  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации
			  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
			  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки
			  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
			  
			  ОбластьМакетаЗаголовок.Параметры.Сводная = ?(Шапка.Сводная = Истина, "X", "");	
			  
		КонецЕсли;
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		// оргинал
		Если  Шапка.ТипПричиныНевыдачиПокупателю > 0 Тогда
			
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
			
			// такие П2, даже с отрицательной суммой регистрирует продавец
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "";
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом   = "Х";
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата налоговой
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаНалоговой_"+Инд]    = Сред(ТекДатаНалоговой, Инд, 1);
		КонецЦикла; 
		
		// Номер налоговой
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["НомерНалоговой_"+Инд]    = Сред(ТекНомерНалоговой, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим налоговой
		Для Инд = 1 По 5 Цикл                                                                 

			ОбластьМакета.Параметры["НомерФилиалНалоговой_"+Инд]    = Сред(ТекНомерФилиалНалоговой, Инд, 1);
			
		КонецЦикла;		
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		//ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента           = НазваниеКонтрагента;
		
		// ИНН покупателя		
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "ИзменениеСуммыБезНДС, ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС20    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G9", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС7    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G111", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G111", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R007G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R006G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДСБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G11", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ИтогНДС    = СтрокаТаблицы.ИзменениеСуммыНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИзменениеСуммыНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R001G03", ИтогНДС);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN0", ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",  ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("H03",      ОбластьМакетаЗаголовок.Параметры.Сводная);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",  ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Объект.Дата);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODFILL",	Шапка.ДатаНалоговойНакладной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM",	Прав(ТекНомерНалоговой,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM1",	Лев(ТекНомерФилиалНалоговой, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM2",	Сред(ТекНомерФилиалНалоговой, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
			
		КонецЕсли;
		
		ДопТекст = "";
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
			ДопТекст = " " + " (перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання)";	
		КонецЕсли;
		
		// Выводим табличную часть
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			Если СтрокаТаблицы.ИзменениеКоличества = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеКоличества  = "";
				ОбластьМакета.Параметры.ЦенаБезНДС  		 = "";
			КонецЕсли;
			Если СтрокаТаблицы.ИзменениеЦеныБезНДС = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеЦеныБезНДС  = "";
				ОбластьМакета.Параметры.Количество  		 = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			Если СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодУслуги Тогда
				ОбластьМакета.Параметры.КодДКПП   = ОбластьМакета.Параметры.КодУКТВЭД;	
				ОбластьМакета.Параметры.КодУКТВЭД = "";
			ИначеЕсли СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодТовараИмпортированного Тогда
				ОбластьМакета.Параметры.Импортированный = "X";
			КонецЕсли;
			Если НЕ КодСпецРежима = "2" Тогда
			    ОбластьМакета.Параметры.КодСХ = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
												   + ДопТекст;
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			
			ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			
			// определеним номер строки исходной НН
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.НомерСтрокиНН) Тогда
				ЗаполнитьЗначенияСвойств(СтруктураПоискаНомераСтрокиННПолная, ОбластьМакета.Параметры);
				СтруктураПоискаНомераСтрокиННПолная.ЦенаБезНДС = Окр(СтрокаТаблицы.ЦенаБезНДС,2);
				
				НайденныеСтроки = ПечатнаяФормаНН.НайтиСтроки(СтруктураПоискаНомераСтрокиННПолная);
				Если НайденныеСтроки.Количество() = 0 Тогда
					
					ЗаполнитьЗначенияСвойств(СтруктураПоискаНомераСтрокиННСокращенная, ОбластьМакета.Параметры);
					СтруктураПоискаНомераСтрокиННСокращенная.ЦенаБезНДС = Окр(СтрокаТаблицы.ЦенаБезНДС,2);
					
					НайденныеСтроки = ПечатнаяФормаНН.НайтиСтроки(СтруктураПоискаНомераСтрокиННСокращенная);
				    Если НайденныеСтроки.Количество() > 0 Тогда
						ОбластьМакета.Параметры.НомерСтрокиНН = ПечатнаяФормаНН.Индекс(НайденныеСтроки[0]) + 1;
					КонецЕсли;
				Иначе	
					ОбластьМакета.Параметры.НомерСтрокиНН = ПечатнаяФормаНН.Индекс(НайденныеСтроки[0]) + 1;
				КонецЕсли;
			КонецЕсли;
			
			
			
			ДанныеОСумме = СтрокаТаблицы.ИзменениеСуммыБезНДС;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат Тогда
				
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				
			ИначеЕсли Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G001		= ОбластьМакета.Параметры.НомерСтрокиНН;
				СтрокаСтруктуры.G2S 		= ОбластьМакета.Параметры.Причина;
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				СтрокаСтруктуры.G32  		= ОбластьМакета.Параметры.Импортированный;
				СтрокаСтруктуры.G33  		= ОбластьМакета.Параметры.КодДКПП;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				
				СтрокаСтруктуры.G5  = СтрокаТаблицы.ИзменениеКоличества;
				СтрокаСтруктуры.G6  = СтрокаТаблицы.ЦенаБезНДС;
				Если СтрокаСтруктуры.G5 = 0 Тогда
					СтрокаСтруктуры.G6  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G7  = СтрокаТаблицы.ИзменениеЦеныБезНДС;
				СтрокаСтруктуры.G8  = СтрокаТаблицы.Количество;
				Если СтрокаСтруктуры.G7 = 0 Тогда
					СтрокаСтруктуры.G8  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				СтрокаСтруктуры.G011  		= ОбластьМакета.Параметры.КодСХ;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);
 	
	КонецЦикла; 

	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;

КонецФункции // ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс2018(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "Приложение2КНалоговойНакладной") Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	УстановитьПривилегированныйРежим(Истина);
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G001");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G21");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G22");
		
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G32");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G33");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G011");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G11_10");
		
		Если     Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
			 
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			 
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	ВидОперации,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	|	РегистрируетсяВЕРННПокупателем,
	|   ТипПричиныНевыдачиПокупателю,
	
	|	НалоговаяНакладная,
	|	НалоговаяНакладная.Дата КАК ДатаНалоговойНакладной,
	|	НалоговаяНакладная.Номер КАК НомерНалоговойНакладной,
	|	НалоговаяНакладная.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	|	НалоговаяНакладная.ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	НалоговаяНакладная.ОбособленноеПодразделение.Префикс КАК Префикс,
	|	НалоговаяНакладная.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены КАК ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены,
	|   НалоговаяНакладная.Сводная   КАК Сводная,
	|   НалоговаяНакладная.КодПризнакаСводной КАК КодПризнакаСводной,
	|   НалоговаяНакладная.ЛьготаНДС КАК ЛьготаНДС,
	|   НалоговаяНакладная.ВидОперации КАК ВидОперацииНалоговой,
	
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН
	|ИЗ
	|	Документ.Приложение2КНалоговойНакладной КАК Приложение2
	|
	|ГДЕ
	|	Приложение2.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	
	ДополнениеКНаименованиюОрганизации = "";
	Если  Шапка.ОбособленноеПодразделение =  Истина 
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ ", " ;
	
	КонецЕсли;
	Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
		И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
		СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ);
	Объект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("КодВид, КодСХ, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаМестаБезНДСБезСкидкиРегл,  Количество, СтавкаНДС, КодЛьготы, НомерСтрокиНН, НомерГруппыКорректировки, КодПричиныКорректировки", "ИзменениеКоличества, ИзменениеЦеныБезНДССоСкидкойРегл, ИзменениеСуммыБезНДСРегл, ИзменениеСуммыНДСРегл");
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаМестаБезНДСБезСкидкиРегл.Имя 	 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеЦеныБезНДССоСкидкойРегл.Имя = "ИзменениеЦеныБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыБезНДСРегл.Имя		 = "ИзменениеСуммыБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыНДСРегл.Имя		 	 = "ИзменениеСуммыНДС";
	
	// Для служебныех целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	ТабДокумент = Новый ТабличныйДокумент;                                                           
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложени2КНалоговойНакладной_Приложение2_2018_"+ИмяМакета;
	Если ИмяМакета = "Приложение2КНалоговойНакладной" Тогда
		   ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Иначе	
		   ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	ТабДокумент.АвтоМасштаб = Истина;

	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2018Альбом");
	Макет.КодЯзыкаМакета = "ru";
	
	// определим параметры шапки документа

	//Дата налоговой
	ТекДатаНалоговой = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=ddMMyyyy");
	
	// Номер налоговой
	ТекНомерНалоговой = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НалоговаяНакладная.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим налоговой
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если Шапка.ДатаНалоговойНакладной < '2016-04-01' Тогда
		Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
			ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
		КонецЕсли;
	Иначе	
	    ТекНомерФилиал = КодСпецРежима;
		Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
			ТекНомерФилиал = "5";
		КонецЕсли;
	КонецЕсли;
	
	ТекНомерФилиалНалоговой  = ТекНомерФилиал;
	
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		
	// Номер
	ТекНомер = Прав("        " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим
	КодСпецРежима    = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	
	Если КодСпецРежима = "7" Тогда
		КодСпецРежима = "";
	КонецЕсли;
	
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	ФилиалПокупателяКодПоЕДРПОУ = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
			ФилиалПокупателяКодПоЕДРПОУ = Сред(Шапка.ФилиалПокупателя, ПозицияСобачки + 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
		ФилиалПокупателяКодПоЕДРПОУ = Прав("          " + СокрЛП(ФилиалПокупателяКодПоЕДРПОУ), 10);
	КонецЕсли;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= "500000000000";
		НазваниеОрганизации				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеОрганизации         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) 		
										  + ", " + НазваниеОрганизации;
		КонецЕсли;
		
		// вместо адреса - просто страна нерезидента
		Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли;
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		ЕДРПОУОрганизации = "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ЕДРПОУОрганизации		= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоЕДРПОУ,"               ,Ложь);
		Если НЕ ЗначениеЗаполнено(ЕДРПОУОрганизации) Тогда 
			ЕДРПОУОрганизации	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоДРФО,"             ,Ложь);
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	ЕДРПОУОрганизации = Прав("            " + СокрЛП(ЕДРПОУОрганизации), 10);
	
		
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			
			ФилиалПокупателя = "";			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ЕДРПОУКонтрагента = "";
		
	ИначеЕсли Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
		
		ИННКонтрагента 		= ИННОрганизации;
		НазваниеКонтрагента = НазваниеОрганизации;
		ФилиалПокупателя	= ФилиалПродавца;
		ЕДРПОУКонтрагента	= "";
		
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина 
			И Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда
			НазваниеКонтрагента         = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь)
										  + ", " + НазваниеКонтрагента;
		КонецЕсли;
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 0  ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда
			Если ПустаяСтрока(ФилиалПокупателяКодПоЕДРПОУ) Тогда 
				ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоЕДРПОУ," ,Ложь);
				Если НЕ ЗначениеЗаполнено(ЕДРПОУКонтрагента) Тогда
					ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоДРФО," ,Ложь);
				КонецЕсли;
			Иначе
				ЕДРПОУКонтрагента = ФилиалПокупателяКодПоЕДРПОУ;
			КонецЕсли;
		Иначе
			ЕДРПОУКонтрагента = "";
		КонецЕсли;
	
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда

			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли;

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
			     ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
	КонецЕсли; 
	ИННКонтрагента 				  = Прав("            " + ИННКонтрагента, 12);
	ЕДРПОУКонтрагента	= Прав("            " + СокрЛП(ЕДРПОУКонтрагента), 10);

	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную =  ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Имя), 1))
										 + ". "
										 + ВРег(Лев(СокрЛ(ФИОКтоВыписалНалоговуюНакладную[0].Отчество), 1))
										 + ". "
										 + СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
	
		// Выводим область оригинал/копия
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		// П2 с отрицательной суммой, которые выдаются покупателю и которые выписанны к НН с датой после 01.01.2015 - регистрирует в ЕРНН покупатель
		Если Шапка.РегистрируетсяВЕРННПокупателем = Истина Тогда
		    ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "Х";
		Иначе
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом = "Х";
		КонецЕсли;
		
		КодПризнакаСводнойНаПечать = "";
		Если НЕ (Шапка.КодПризнакаСводной = 0)Тогда 
			КодПризнакаСводнойНаПечать = Строка(Шапка.КодПризнакаСводной);
		ИначеЕсли  (Шапка.Сводная = Истина) Тогда 
			Если (    Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
				  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации) Тогда 
				КодПризнакаСводнойНаПечать = "4"
				  
			ИначеЕсли (Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
				  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
				КодПризнакаСводнойНаПечать = "1"
				  
			ИначеЕсли Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				КодПризнакаСводнойНаПечать = "3"
				  
			КонецЕсли;
		КонецЕсли; 
		ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной = КодПризнакаСводнойНаПечать;
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		// оргинал
		Если  Шапка.ТипПричиныНевыдачиПокупателю > 0 Тогда
			
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
			
			// такие П2, даже с отрицательной суммой регистрирует продавец
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "";
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом   = "Х";
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата налоговой
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаНалоговой_"+Инд]    = Сред(ТекДатаНалоговой, Инд, 1);
		КонецЦикла; 
		
		// Номер налоговой
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["НомерНалоговой_"+Инд]    = Сред(ТекНомерНалоговой, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим налоговой
		Для Инд = 1 По 5 Цикл                                                                 

			ОбластьМакета.Параметры["НомерФилиалНалоговой_"+Инд]    = Сред(ТекНомерФилиалНалоговой, Инд, 1);
			
		КонецЦикла;		
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		//ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ продавца
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУОрганизации_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
		КонецЦикла; 
		
		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента           = НазваниеКонтрагента;
		
		// ИНН покупателя		
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ покупателя
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУКонтрагента_"+Инд] = Сред(ЕДРПОУКонтрагента, Инд, 1);
		КонецЦикла; 
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "ИзменениеСуммыБезНДС, ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС20    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G9", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС7    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G111", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G111", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R007G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R006G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДСБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G11", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ИтогНДС    = СтрокаТаблицы.ИзменениеСуммыНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИзменениеСуммыНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R001G03", ИтогНДС);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		ПодвалННДата 			= "";
		ПодвалНННомер 			= "";
		ПодвалНННомерФилиала	= "";
		ПодвалННРегНомерЕРНН	= "";
		ПодвалП2Дата 			= "";
		ПодвалП2Номер 			= "";
		ПодвалП2НомерФилиала	= "";
		ПодвалП2РегНомерЕРНН	= "";
		
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN0", ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",  ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G1",    ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",  ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Объект.Дата);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODFILL",	Шапка.ДатаНалоговойНакладной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM",	Прав(ТекНомерНалоговой,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM1",	Лев(ТекНомерФилиалНалоговой, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM2",	Сред(ТекНомерФилиалНалоговой, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINSEL",	ЕДРПОУОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINBUY",	ЕДРПОУКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G1D",	ПодвалННДата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G2",	ПодвалНННомер);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G3",	Лев(ПодвалНННомерФилиала, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G4",	Сред(ПодвалНННомерФилиала, 2));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G5",	ПодвалННРегНомерЕРНН);			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G1D",	ПодвалП2Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G2",	ПодвалП2Номер);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G3",	Лев(ПодвалП2НомерФилиала, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G4",	Сред(ПодвалП2НомерФилиала, 2));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G5",	ПодвалП2РегНомерЕРНН);			
			
		КонецЕсли;
		
		ДопТекст = "";
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
			ДопТекст = " " + " (перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання)";	
		КонецЕсли;
		
		ТекущийНомерСтрокиП2 = 0;
		// Выводим табличную часть
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ТекущийНомерСтрокиП2 = ТекущийНомерСтрокиП2 + 1;			
			ОбластьМакета.Параметры.НомерСтроки = ТекущийНомерСтрокиП2;

			Если СтрокаТаблицы.ИзменениеКоличества = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеКоличества  = "";
				ОбластьМакета.Параметры.ЦенаБезНДС  		 = "";
			КонецЕсли;
			Если СтрокаТаблицы.ИзменениеЦеныБезНДС = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеЦеныБезНДС  = "";
				ОбластьМакета.Параметры.Количество  		 = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			Если СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодУслуги Тогда
				ОбластьМакета.Параметры.КодДКПП   = ОбластьМакета.Параметры.КодУКТВЭД;	
				ОбластьМакета.Параметры.КодУКТВЭД = "";
			ИначеЕсли СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодТовараИмпортированного Тогда
				ОбластьМакета.Параметры.Импортированный = "X";
			КонецЕсли;
			Если НЕ КодСпецРежима = "2" Тогда
			    ОбластьМакета.Параметры.КодСХ = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
												   + ДопТекст;
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			
			ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
			РасчИзменениеСуммыНДС6зн = Окр(УчетНДСКлиентСервер.РассчитатьСуммуНДС(СтрокаТаблицы.ИзменениеСуммыБезНДС, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС)), 6 );
			ФорматНДС6Зн = ?(Окр(РасчИзменениеСуммыНДС6зн,2) = РасчИзменениеСуммыНДС6зн, "ЧЦ=15; ЧДЦ=2; ЧН=' '", "ЧЦ=19; ЧДЦ=6; ЧН=' '");
			ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн = СокрЛ(Формат(РасчИзменениеСуммыНДС6зн, ФорматНДС6Зн));
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.НомерСтрокиНН) Тогда
				// печать, выгрузка невозможны ... 
	        КонецЕсли;
			
			ДанныеОСумме = СтрокаТаблицы.ИзменениеСуммыБезНДС;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = "";
				ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат Тогда
				
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				
			ИначеЕсли Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G001		= ОбластьМакета.Параметры.НомерСтрокиНН;
				СтрокаСтруктуры.G21 		= ОбластьМакета.Параметры.КодПричиныКорректировки;
				СтрокаСтруктуры.G22 		= ОбластьМакета.Параметры.НомерГруппыКорректировки;
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				СтрокаСтруктуры.G32  		= ОбластьМакета.Параметры.Импортированный;
				СтрокаСтруктуры.G33  		= ОбластьМакета.Параметры.КодДКПП;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				
				СтрокаСтруктуры.G5  = СтрокаТаблицы.ИзменениеКоличества;
				СтрокаСтруктуры.G6  = СтрокаТаблицы.ЦенаБезНДС;
				Если СтрокаСтруктуры.G5 = 0 Тогда
					СтрокаСтруктуры.G6  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G7  = СтрокаТаблицы.ИзменениеЦеныБезНДС;
				СтрокаСтруктуры.G8  = СтрокаТаблицы.Количество;
				Если СтрокаСтруктуры.G7 = 0 Тогда
					СтрокаСтруктуры.G8  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				СтрокаСтруктуры.G011  		= ОбластьМакета.Параметры.КодСХ;
				СтрокаСтруктуры.G11_10  	= ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);
 	
	КонецЦикла; 

	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;

КонецФункции // ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс2021(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "Приложение2КНалоговойНакладной") Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	УстановитьПривилегированныйРежим(Истина);
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G001");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G21");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G22");
		
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G32");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G33");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G011");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G11_10");
		
		Если     Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
			 
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			 
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	ВидОперации,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	|	РегистрируетсяВЕРННПокупателем,
	|   ТипПричиныНевыдачиПокупателю,
	
	|	НалоговаяНакладная,
	|	НалоговаяНакладная.Дата КАК ДатаНалоговойНакладной,
	|	НалоговаяНакладная.Номер КАК НомерНалоговойНакладной,
	|	НалоговаяНакладная.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	|	НалоговаяНакладная.ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	НалоговаяНакладная.ОбособленноеПодразделение.Префикс КАК Префикс,
	|	НалоговаяНакладная.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены КАК ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены,
	|   НалоговаяНакладная.Сводная   КАК Сводная,
	|   НалоговаяНакладная.КодПризнакаСводной КАК КодПризнакаСводной,
	|   НалоговаяНакладная.ЛьготаНДС КАК ЛьготаНДС,
	|   НалоговаяНакладная.ВидОперации КАК ВидОперацииНалоговой,
	
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН
	|ИЗ
	|	Документ.Приложение2КНалоговойНакладной КАК Приложение2
	|
	|ГДЕ
	|	Приложение2.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ДополнениеКНаименованиюОрганизации = "";
	Если  Шапка.ОбособленноеПодразделение =  Истина 
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ ", " ;
	
	КонецЕсли;
	
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ);
	Объект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("КодВид, КодСХ, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаМестаБезНДСБезСкидкиРегл,  Количество, СтавкаНДС, КодЛьготы, НомерСтрокиНН, НомерГруппыКорректировки, КодПричиныКорректировки", "ИзменениеКоличества, ИзменениеЦеныБезНДССоСкидкойРегл, ИзменениеСуммыБезНДСРегл, ИзменениеСуммыНДСРегл");
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаМестаБезНДСБезСкидкиРегл.Имя 	 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеЦеныБезНДССоСкидкойРегл.Имя = "ИзменениеЦеныБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыБезНДСРегл.Имя		 = "ИзменениеСуммыБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыНДСРегл.Имя		 	 = "ИзменениеСуммыНДС";
	
	// Для служебныех целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	ТабДокумент = Новый ТабличныйДокумент;                                                           
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложени2КНалоговойНакладной_Приложение2_2021_"+ИмяМакета;
	Если ИмяМакета = "Приложение2КНалоговойНакладной" Тогда
		   ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Иначе	
		   ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	ТабДокумент.АвтоМасштаб = Истина;

	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2021");
	Макет.КодЯзыкаМакета = "ru";
	
	// определим параметры шапки документа

	//Дата налоговой
	ТекДатаНалоговой = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=ddMMyyyy");
	
	// Номер налоговой
	ТекНомерНалоговой = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НалоговаяНакладная.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим налоговой
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если Шапка.ДатаНалоговойНакладной < '2016-04-01' Тогда
		Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
			ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
		КонецЕсли;
	Иначе	
	    ТекНомерФилиал = КодСпецРежима;
		Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
			ТекНомерФилиал = "5";
		КонецЕсли;
	КонецЕсли;
	
	ТекНомерФилиалНалоговой  = ТекНомерФилиал;
	
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		
	// Номер
	ТекНомер = Прав("        " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим
	КодСпецРежима    = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	
	Если КодСпецРежима = "7" Тогда
		КодСпецРежима = "";
	КонецЕсли;
	
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	ФилиалПокупателяКодПоЕДРПОУ = "";
	ДополнениеКНаименованиюКонтрагента = "";
	КодЕДРПОУГоловногоКонтрагента = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
			ФилиалПокупателяКодПоЕДРПОУ = Сред(Шапка.ФилиалПокупателя, ПозицияСобачки + 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина Тогда
			СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);
			КодЕДРПОУГоловногоКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя, "КодПоЕДРПОУ,", Ложь);
			Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда 
				ДополнениеКНаименованиюКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) + ", ";
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ФилиалПокупателяКодПоЕДРПОУ) И ЗначениеЗаполнено(КодЕДРПОУГоловногоКонтрагента) Тогда
			ФилиалПокупателяКодПоЕДРПОУ = КодЕДРПОУГоловногоКонтрагента;
		КонецЕсли;
		ФилиалПокупателяКодПоЕДРПОУ = Прав("          " + СокрЛП(ФилиалПокупателяКодПоЕДРПОУ), 10);
	КонецЕсли;
	
	ПродавецЮрлицо = Истина;
	ПокупательЮрлицо = Истина;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= "500000000000";
		НазваниеОрганизации				= ДополнениеКНаименованиюКонтрагента + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		// вместо адреса - просто страна нерезидента
		Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли;
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		ЕДРПОУОрганизации = "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ЕДРПОУОрганизации		= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоЕДРПОУ,"               ,Ложь);
		Если НЕ ЗначениеЗаполнено(ЕДРПОУОрганизации) Тогда 
			ЕДРПОУОрганизации	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоДРФО,"             ,Ложь);
			ПродавецЮрлицо = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	ЕДРПОУОрганизации = Прав("            " + СокрЛП(ЕДРПОУОрганизации), 10);
	
		
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			
			ФилиалПокупателя = "";			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ЕДРПОУКонтрагента = "";
		
	ИначеЕсли Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
		
		ИННКонтрагента 		= ИННОрганизации;
		НазваниеКонтрагента = НазваниеОрганизации;
		ФилиалПокупателя	= ФилиалПродавца;
		ЕДРПОУКонтрагента	= ЕДРПОУОрганизации;
		ПокупательЮрлицо = ПродавецЮрлицо;
		
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ДополнениеКНаименованиюКонтрагента + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 0  ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда
			Если ПустаяСтрока(ФилиалПокупателяКодПоЕДРПОУ) Тогда 
				ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоЕДРПОУ," ,Ложь);
				Если НЕ ЗначениеЗаполнено(ЕДРПОУКонтрагента) Тогда
					ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоДРФО," ,Ложь);
					ПокупательЮрлицо = Ложь;
				КонецЕсли;
			Иначе
				ЕДРПОУКонтрагента = ФилиалПокупателяКодПоЕДРПОУ;
			КонецЕсли;
		Иначе
			ЕДРПОУКонтрагента = "";
		КонецЕсли;
	
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда

			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли;

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
			     ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
	КонецЕсли; 
	ИННКонтрагента 				  = Прав("            " + ИННКонтрагента, 12);
	ЕДРПОУКонтрагента	= Прав("            " + СокрЛП(ЕДРПОУКонтрагента), 10);

	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную = СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Имя)
										 + " "
										 + ВРег(СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия)); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
	
		// Выводим область оригинал/копия
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		// П2 с отрицательной суммой, которые выдаются покупателю и которые выписанны к НН с датой после 01.01.2015 - регистрирует в ЕРНН покупатель
		Если Шапка.РегистрируетсяВЕРННПокупателем = Истина Тогда
		    ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "Х";
		Иначе
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом = "Х";
		КонецЕсли;
		
		КодПризнакаСводнойНаПечать = "";
		Если НЕ (Шапка.КодПризнакаСводной = 0)Тогда 
			КодПризнакаСводнойНаПечать = Строка(Шапка.КодПризнакаСводной);
		ИначеЕсли  (Шапка.Сводная = Истина) Тогда 
			Если (    Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
				  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации) Тогда 
				КодПризнакаСводнойНаПечать = "4"
				  
			ИначеЕсли (Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
				  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
				КодПризнакаСводнойНаПечать = "1"
				  
			ИначеЕсли Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				КодПризнакаСводнойНаПечать = "3"
				  
			КонецЕсли;
		КонецЕсли; 
		ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной = КодПризнакаСводнойНаПечать;
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		// оргинал
		Если  Шапка.ТипПричиныНевыдачиПокупателю > 0 Тогда
			
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
			
			// такие П2, даже с отрицательной суммой регистрирует продавец
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "";
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом   = "Х";
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата налоговой
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаНалоговой_"+Инд]    = Сред(ТекДатаНалоговой, Инд, 1);
		КонецЦикла; 
		
		// Номер налоговой
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["НомерНалоговой_"+Инд]    = Сред(ТекНомерНалоговой, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим налоговой
		Для Инд = 1 По 5 Цикл                                                                 

			ОбластьМакета.Параметры["НомерФилиалНалоговой_"+Инд]    = Сред(ТекНомерФилиалНалоговой, Инд, 1);
			
		КонецЦикла;		
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		//ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ продавца
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУОрганизации_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
		КонецЦикла; 
		
		//источник кода продавца
		ИсточникКодаПродавца = Документы.НалоговаяНакладная.КодИсточникаНалоговогоНомера(ЕДРПОУОрганизации, ПродавецЮрлицо);
		ОбластьМакета.Параметры.ИсточникКодаОрганизации = ИсточникКодаПродавца;

		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента           = НазваниеКонтрагента;
		
		// ИНН покупателя		
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ покупателя
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУКонтрагента_"+Инд] = Сред(ЕДРПОУКонтрагента, Инд, 1);
		КонецЦикла; 
		
		//источник кода покупателя
		ИсточникКодаПокупателя = Документы.НалоговаяНакладная.КодИсточникаНалоговогоНомера(ЕДРПОУКонтрагента, ПокупательЮрлицо);
		ОбластьМакета.Параметры.ИсточникКодаКонтрагента = ИсточникКодаПокупателя;
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "ИзменениеСуммыБезНДС, ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС20    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G9", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС7    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G111", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G111", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R007G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R006G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДСБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G11", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ИтогНДС    = СтрокаТаблицы.ИзменениеСуммыНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИзменениеСуммыНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R001G03", ИтогНДС);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		ПодвалННДата 			= "";
		ПодвалНННомер 			= "";
		ПодвалНННомерФилиала	= "";
		ПодвалННРегНомерЕРНН	= "";
		ПодвалП2Дата 			= "";
		ПодвалП2Номер 			= "";
		ПодвалП2НомерФилиала	= "";
		ПодвалП2РегНомерЕРНН	= "";
		
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN0", ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",  ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G1",    ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",  ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Объект.Дата);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODFILL",	Шапка.ДатаНалоговойНакладной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM",	Прав(ТекНомерНалоговой,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM1",	Лев(ТекНомерФилиалНалоговой, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM2",	Сред(ТекНомерФилиалНалоговой, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINSEL",	ЕДРПОУОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINBUY",	ЕДРПОУКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G1D",	ПодвалННДата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G2",	ПодвалНННомер);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G3",	Лев(ПодвалНННомерФилиала, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G4",	Сред(ПодвалНННомерФилиала, 2));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G5",	ПодвалННРегНомерЕРНН);			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G1D",	ПодвалП2Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G2",	ПодвалП2Номер);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G3",	Лев(ПодвалП2НомерФилиала, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G4",	Сред(ПодвалП2НомерФилиала, 2));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G5",	ПодвалП2РегНомерЕРНН);			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKS",		ИсточникКодаПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKB",		ИсточникКодаПокупателя);
			
		КонецЕсли;
		
		ДопТекст = "";
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
			ДопТекст = " " + " (перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання)";	
		КонецЕсли;
		
		ТекущийНомерСтрокиП2 = 0;
		// Выводим табличную часть
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ТекущийНомерСтрокиП2 = ТекущийНомерСтрокиП2 + 1;			
			ОбластьМакета.Параметры.НомерСтроки = ТекущийНомерСтрокиП2;

			Если СтрокаТаблицы.ИзменениеКоличества = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеКоличества  = "";
				ОбластьМакета.Параметры.ЦенаБезНДС  		 = "";
			КонецЕсли;
			Если СтрокаТаблицы.ИзменениеЦеныБезНДС = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеЦеныБезНДС  = "";
				ОбластьМакета.Параметры.Количество  		 = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			Если СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодУслуги Тогда
				ОбластьМакета.Параметры.КодДКПП   = ОбластьМакета.Параметры.КодУКТВЭД;	
				ОбластьМакета.Параметры.КодУКТВЭД = "";
			ИначеЕсли СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодТовараИмпортированного Тогда
				ОбластьМакета.Параметры.Импортированный = "X";
			КонецЕсли;
			Если НЕ КодСпецРежима = "2" Тогда
			    ОбластьМакета.Параметры.КодСХ = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
												   + ДопТекст;
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			
			ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
			РасчИзменениеСуммыНДС6зн = Окр(УчетНДСКлиентСервер.РассчитатьСуммуНДС(СтрокаТаблицы.ИзменениеСуммыБезНДС, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС)), 6 );
			ФорматНДС6Зн = ?(Окр(РасчИзменениеСуммыНДС6зн,2) = РасчИзменениеСуммыНДС6зн, "ЧЦ=15; ЧДЦ=2; ЧН=' '", "ЧЦ=19; ЧДЦ=6; ЧН=' '");
			ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн = СокрЛ(Формат(РасчИзменениеСуммыНДС6зн, ФорматНДС6Зн));
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.НомерСтрокиНН) Тогда
				// печать, выгрузка невозможны ... 
	        КонецЕсли;
			
			ДанныеОСумме = СтрокаТаблицы.ИзменениеСуммыБезНДС;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = "";
				ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат Тогда
				
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				
			ИначеЕсли Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G001		= ОбластьМакета.Параметры.НомерСтрокиНН;
				СтрокаСтруктуры.G21 		= ОбластьМакета.Параметры.КодПричиныКорректировки;
				СтрокаСтруктуры.G22 		= ОбластьМакета.Параметры.НомерГруппыКорректировки;
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				СтрокаСтруктуры.G32  		= ОбластьМакета.Параметры.Импортированный;
				СтрокаСтруктуры.G33  		= ОбластьМакета.Параметры.КодДКПП;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				
				СтрокаСтруктуры.G5  = СтрокаТаблицы.ИзменениеКоличества;
				СтрокаСтруктуры.G6  = СтрокаТаблицы.ЦенаБезНДС;
				Если СтрокаСтруктуры.G5 = 0 Тогда
					СтрокаСтруктуры.G6  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G7  = СтрокаТаблицы.ИзменениеЦеныБезНДС;
				СтрокаСтруктуры.G8  = СтрокаТаблицы.Количество;
				Если СтрокаСтруктуры.G7 = 0 Тогда
					СтрокаСтруктуры.G8  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				СтрокаСтруктуры.G011  		= ОбластьМакета.Параметры.КодСХ;
				СтрокаСтруктуры.G11_10  	= ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);
 	
	КонецЦикла; 

	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;

КонецФункции // ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс2021Мес3(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "Приложение2КНалоговойНакладной") Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	УстановитьПривилегированныйРежим(Истина);
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G001");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G21");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G22");
		
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G32");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G33");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G011");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G11_10");
		
		Если     Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
			 
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			 
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	ВидОперации,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	|	РегистрируетсяВЕРННПокупателем,
	|   ТипПричиныНевыдачиПокупателю,
	
	|	НалоговаяНакладная,
	|	НалоговаяНакладная.Дата КАК ДатаНалоговойНакладной,
	|	НалоговаяНакладная.Номер КАК НомерНалоговойНакладной,
	|	НалоговаяНакладная.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	|	НалоговаяНакладная.ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	НалоговаяНакладная.ОбособленноеПодразделение.Префикс КАК Префикс,
	|	НалоговаяНакладная.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены КАК ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены,
	|   НалоговаяНакладная.Сводная   КАК Сводная,
	|   НалоговаяНакладная.КодПризнакаСводной КАК КодПризнакаСводной,
	|   НалоговаяНакладная.ЛьготаНДС КАК ЛьготаНДС,
	|   НалоговаяНакладная.ВидОперации КАК ВидОперацииНалоговой,
	
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН
	|ИЗ
	|	Документ.Приложение2КНалоговойНакладной КАК Приложение2
	|
	|ГДЕ
	|	Приложение2.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ДополнениеКНаименованиюОрганизации = "";
	Если  Шапка.ОбособленноеПодразделение =  Истина 
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ ", " ;
	
	КонецЕсли;
	
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ);
	Объект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("КодВид, КодСХ, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаМестаБезНДСБезСкидкиРегл,  Количество, СтавкаНДС, КодЛьготы, НомерСтрокиНН, НомерГруппыКорректировки, КодПричиныКорректировки", "ИзменениеКоличества, ИзменениеЦеныБезНДССоСкидкойРегл, ИзменениеСуммыБезНДСРегл, ИзменениеСуммыНДСРегл");
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаМестаБезНДСБезСкидкиРегл.Имя 	 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеЦеныБезНДССоСкидкойРегл.Имя = "ИзменениеЦеныБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыБезНДСРегл.Имя		 = "ИзменениеСуммыБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыНДСРегл.Имя		 	 = "ИзменениеСуммыНДС";
	
	// Для служебныех целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	ТабДокумент = Новый ТабличныйДокумент;                                                           
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложени2КНалоговойНакладной_Приложение2_2021Мес3_"+ИмяМакета;
	Если ИмяМакета = "Приложение2КНалоговойНакладной" Тогда
		   ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Иначе	
		   ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	ТабДокумент.АвтоМасштаб = Истина;

	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2021Мес3");
	Макет.КодЯзыкаМакета = "ru";
	
	// определим параметры шапки документа

	//Дата налоговой
	ТекДатаНалоговой = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=ddMMyyyy");
	
	// Номер налоговой
	ТекНомерНалоговой = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НалоговаяНакладная.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим налоговой
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если Шапка.ДатаНалоговойНакладной < '2016-04-01' Тогда
		Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
			ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
		КонецЕсли;
	Иначе	
	    ТекНомерФилиал = КодСпецРежима;
		Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
			ТекНомерФилиал = "5";
		КонецЕсли;
	КонецЕсли;
	
	ТекНомерФилиалНалоговой  = ТекНомерФилиал;
	
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		
	// Номер
	ТекНомер = Прав("        " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим
	КодСпецРежима    = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	
	Если КодСпецРежима = "7" Тогда
		КодСпецРежима = "";
	КонецЕсли;
	
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	ФилиалПокупателяКодПоЕДРПОУ = "";
	ДополнениеКНаименованиюКонтрагента = "";
	КодЕДРПОУГоловногоКонтрагента = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
			ФилиалПокупателяКодПоЕДРПОУ = Сред(Шапка.ФилиалПокупателя, ПозицияСобачки + 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина Тогда
			СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);
			КодЕДРПОУГоловногоКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя, "КодПоЕДРПОУ,", Ложь);
			Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда 
				ДополнениеКНаименованиюКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) + ", ";
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ФилиалПокупателяКодПоЕДРПОУ) И ЗначениеЗаполнено(КодЕДРПОУГоловногоКонтрагента) Тогда
			ФилиалПокупателяКодПоЕДРПОУ = КодЕДРПОУГоловногоКонтрагента;
		КонецЕсли;
		ФилиалПокупателяКодПоЕДРПОУ = Прав("          " + СокрЛП(ФилиалПокупателяКодПоЕДРПОУ), 10);
	КонецЕсли;
	
	ПродавецЮрлицо = Истина;
	ПокупательЮрлицо = Истина;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= "500000000000";
		НазваниеОрганизации				= ДополнениеКНаименованиюКонтрагента + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		// вместо адреса - просто страна нерезидента
		Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли;
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		ЕДРПОУОрганизации = "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ЕДРПОУОрганизации		= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоЕДРПОУ,"               ,Ложь);
		Если НЕ ЗначениеЗаполнено(ЕДРПОУОрганизации) Тогда 
			ЕДРПОУОрганизации	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоДРФО,"             ,Ложь);
			ПродавецЮрлицо = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	ЕДРПОУОрганизации = Прав("            " + СокрЛП(ЕДРПОУОрганизации), 10);
	
		
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			
			ФилиалПокупателя = "";			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ЕДРПОУКонтрагента = "";
		
	ИначеЕсли Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
		
		ИННКонтрагента 		= ИННОрганизации;
		НазваниеКонтрагента = НазваниеОрганизации;
		ФилиалПокупателя	= ФилиалПродавца;
		ЕДРПОУКонтрагента	= ЕДРПОУОрганизации;
		ПокупательЮрлицо = ПродавецЮрлицо;
		
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ДополнениеКНаименованиюКонтрагента + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 0  ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда
			Если ПустаяСтрока(ФилиалПокупателяКодПоЕДРПОУ) Тогда 
				ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоЕДРПОУ," ,Ложь);
				Если НЕ ЗначениеЗаполнено(ЕДРПОУКонтрагента) Тогда
					ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоДРФО," ,Ложь);
					ПокупательЮрлицо = Ложь;
				КонецЕсли;
			Иначе
				ЕДРПОУКонтрагента = ФилиалПокупателяКодПоЕДРПОУ;
			КонецЕсли;
		Иначе
			ЕДРПОУКонтрагента = "";
		КонецЕсли;
	
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1
			ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 2 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда

			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли;

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
			     ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
	КонецЕсли; 
	ИННКонтрагента 				  = Прав("            " + ИННКонтрагента, 12);
	ЕДРПОУКонтрагента	= Прав("            " + СокрЛП(ЕДРПОУКонтрагента), 10);

	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную = СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Имя)
										 + " "
										 + ВРег(СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия)); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
	
		// Выводим область оригинал/копия
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		// П2 с отрицательной суммой, которые выдаются покупателю и которые выписанны к НН с датой после 01.01.2015 - регистрирует в ЕРНН покупатель
		Если Шапка.РегистрируетсяВЕРННПокупателем = Истина Тогда
		    ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "Х";
		Иначе
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом = "Х";
		КонецЕсли;
		
		КодПризнакаСводнойНаПечать = "";
		Если НЕ (Шапка.КодПризнакаСводной = 0)Тогда 
			КодПризнакаСводнойНаПечать = Строка(Шапка.КодПризнакаСводной);
		ИначеЕсли  (Шапка.Сводная = Истина) Тогда 
			Если (    Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
				  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации) Тогда 
				КодПризнакаСводнойНаПечать = "4"
				  
			ИначеЕсли (Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
				  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
				КодПризнакаСводнойНаПечать = "1"
				  
			ИначеЕсли Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				КодПризнакаСводнойНаПечать = "3"
				  
			КонецЕсли;
		КонецЕсли; 
		ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной = КодПризнакаСводнойНаПечать;
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		// оргинал
		Если  Шапка.ТипПричиныНевыдачиПокупателю > 0 Тогда
			
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
			
			// такие П2, даже с отрицательной суммой регистрирует продавец
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "";
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом   = "Х";
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата налоговой
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаНалоговой_"+Инд]    = Сред(ТекДатаНалоговой, Инд, 1);
		КонецЦикла; 
		
		// Номер налоговой
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["НомерНалоговой_"+Инд]    = Сред(ТекНомерНалоговой, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим налоговой
		Для Инд = 1 По 5 Цикл                                                                 

			ОбластьМакета.Параметры["НомерФилиалНалоговой_"+Инд]    = Сред(ТекНомерФилиалНалоговой, Инд, 1);
			
		КонецЦикла;		
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		//ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ продавца
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУОрганизации_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
		КонецЦикла; 
		
		//источник кода продавца
		ИсточникКодаПродавца = Документы.НалоговаяНакладная.КодИсточникаНалоговогоНомера(ЕДРПОУОрганизации, ПродавецЮрлицо);
		ОбластьМакета.Параметры.ИсточникКодаОрганизации = ИсточникКодаПродавца;

		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента           = НазваниеКонтрагента;
		
		// ИНН покупателя		
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ покупателя
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУКонтрагента_"+Инд] = Сред(ЕДРПОУКонтрагента, Инд, 1);
		КонецЦикла; 
		
		//источник кода покупателя
		ИсточникКодаПокупателя = Документы.НалоговаяНакладная.КодИсточникаНалоговогоНомера(ЕДРПОУКонтрагента, ПокупательЮрлицо);
		ОбластьМакета.Параметры.ИсточникКодаКонтрагента = ИсточникКодаПокупателя;
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "ИзменениеСуммыБезНДС, ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС20    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G9", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "14" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС14 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС14    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G14", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G14", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС7    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G111", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G111", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R007G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R006G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДСБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G11", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ИтогНДС    = СтрокаТаблицы.ИзменениеСуммыНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИзменениеСуммыНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R001G03", ИтогНДС);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		ПодвалННДата 			= "";
		ПодвалНННомер 			= "";
		ПодвалНННомерФилиала	= "";
		ПодвалННРегНомерЕРНН	= "";
		ПодвалП2Дата 			= "";
		ПодвалП2Номер 			= "";
		ПодвалП2НомерФилиала	= "";
		ПодвалП2РегНомерЕРНН	= "";
		
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN0", ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",  ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G1",    ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",  ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Объект.Дата);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODFILL",	Шапка.ДатаНалоговойНакладной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM",	Прав(ТекНомерНалоговой,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM1",	Лев(ТекНомерФилиалНалоговой, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM2",	Сред(ТекНомерФилиалНалоговой, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINSEL",	ЕДРПОУОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINBUY",	ЕДРПОУКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G1D",	ПодвалННДата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G2",	ПодвалНННомер);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G3",	Лев(ПодвалНННомерФилиала, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G4",	Сред(ПодвалНННомерФилиала, 2));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G5",	ПодвалННРегНомерЕРНН);			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G1D",	ПодвалП2Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G2",	ПодвалП2Номер);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G3",	Лев(ПодвалП2НомерФилиала, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G4",	Сред(ПодвалП2НомерФилиала, 2));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G5",	ПодвалП2РегНомерЕРНН);			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKS",		ИсточникКодаПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKB",		ИсточникКодаПокупателя);
			
		КонецЕсли;
		
		ДопТекст = "";
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
			ДопТекст = " " + " (перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання)";	
		КонецЕсли;
		
		ТекущийНомерСтрокиП2 = 0;
		// Выводим табличную часть
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ТекущийНомерСтрокиП2 = ТекущийНомерСтрокиП2 + 1;			
			ОбластьМакета.Параметры.НомерСтроки = ТекущийНомерСтрокиП2;

			Если СтрокаТаблицы.ИзменениеКоличества = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеКоличества  = "";
				ОбластьМакета.Параметры.ЦенаБезНДС  		 = "";
			КонецЕсли;
			Если СтрокаТаблицы.ИзменениеЦеныБезНДС = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеЦеныБезНДС  = "";
				ОбластьМакета.Параметры.Количество  		 = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			Если СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодУслуги Тогда
				ОбластьМакета.Параметры.КодДКПП   = ОбластьМакета.Параметры.КодУКТВЭД;	
				ОбластьМакета.Параметры.КодУКТВЭД = "";
			ИначеЕсли СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодТовараИмпортированного Тогда
				ОбластьМакета.Параметры.Импортированный = "X";
			КонецЕсли;
			Если НЕ КодСпецРежима = "2" Тогда
			    ОбластьМакета.Параметры.КодСХ = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
												   + ДопТекст;
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			
			ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
			РасчИзменениеСуммыНДС6зн = Окр(УчетНДСКлиентСервер.РассчитатьСуммуНДС(СтрокаТаблицы.ИзменениеСуммыБезНДС, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС)), 6 );
			ФорматНДС6Зн = ?(Окр(РасчИзменениеСуммыНДС6зн,2) = РасчИзменениеСуммыНДС6зн, "ЧЦ=15; ЧДЦ=2; ЧН=' '", "ЧЦ=19; ЧДЦ=6; ЧН=' '");
			ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн = СокрЛ(Формат(РасчИзменениеСуммыНДС6зн, ФорматНДС6Зн));
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.НомерСтрокиНН) Тогда
				// печать, выгрузка невозможны ... 
	        КонецЕсли;
			
			ДанныеОСумме = СтрокаТаблицы.ИзменениеСуммыБезНДС;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = "";
				ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат Тогда
				
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				
			ИначеЕсли Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G001		= ОбластьМакета.Параметры.НомерСтрокиНН;
				СтрокаСтруктуры.G21 		= ОбластьМакета.Параметры.КодПричиныКорректировки;
				СтрокаСтруктуры.G22 		= ОбластьМакета.Параметры.НомерГруппыКорректировки;
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				СтрокаСтруктуры.G32  		= ОбластьМакета.Параметры.Импортированный;
				СтрокаСтруктуры.G33  		= ОбластьМакета.Параметры.КодДКПП;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				
				СтрокаСтруктуры.G5  = СтрокаТаблицы.ИзменениеКоличества;
				СтрокаСтруктуры.G6  = СтрокаТаблицы.ЦенаБезНДС;
				Если СтрокаСтруктуры.G5 = 0 Тогда
					СтрокаСтруктуры.G6  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G7  = СтрокаТаблицы.ИзменениеЦеныБезНДС;
				СтрокаСтруктуры.G8  = СтрокаТаблицы.Количество;
				Если СтрокаСтруктуры.G7 = 0 Тогда
					СтрокаСтруктуры.G8  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				СтрокаСтруктуры.G011  		= ОбластьМакета.Параметры.КодСХ;
				СтрокаСтруктуры.G11_10  	= ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);
 	
	КонецЦикла; 

	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;

КонецФункции // ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс2022(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "Приложение2КНалоговойНакладной") Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	УстановитьПривилегированныйРежим(Истина);
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G001");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G21");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G22");
		
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G32");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G33");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G011");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G11_10");
		
		Если     Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
			 
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			 
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	ВидОперации,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	|	РегистрируетсяВЕРННПокупателем,
	|   ТипПричиныНевыдачиПокупателю,
	
	|	НалоговаяНакладная,
	|	НалоговаяНакладная.Дата КАК ДатаНалоговойНакладной,
	|	НалоговаяНакладная.Номер КАК НомерНалоговойНакладной,
	|	НалоговаяНакладная.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	|	НалоговаяНакладная.ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	НалоговаяНакладная.ОбособленноеПодразделение.Префикс КАК Префикс,
	|	НалоговаяНакладная.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены КАК ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены,
	|   НалоговаяНакладная.Сводная   КАК Сводная,
	|   НалоговаяНакладная.КодПризнакаСводной КАК КодПризнакаСводной,
	|   НалоговаяНакладная.ЛьготаНДС КАК ЛьготаНДС,
	|   НалоговаяНакладная.ВидОперации КАК ВидОперацииНалоговой,
	
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН
	|ИЗ
	|	Документ.Приложение2КНалоговойНакладной КАК Приложение2
	|
	|ГДЕ
	|	Приложение2.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ДополнениеКНаименованиюОрганизации = "";
	Если  Шапка.ОбособленноеПодразделение =  Истина 
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ ", " ;
	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ);
	Объект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("КодВид, КодСХ, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаМестаБезНДСБезСкидкиРегл,  Количество, СтавкаНДС, КодЛьготы, НомерСтрокиНН, НомерГруппыКорректировки, КодПричиныКорректировки", "ИзменениеКоличества, ИзменениеЦеныБезНДССоСкидкойРегл, ИзменениеСуммыБезНДСРегл, ИзменениеСуммыНДСРегл");
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаМестаБезНДСБезСкидкиРегл.Имя 	 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеЦеныБезНДССоСкидкойРегл.Имя = "ИзменениеЦеныБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыБезНДСРегл.Имя		 = "ИзменениеСуммыБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыНДСРегл.Имя		 	 = "ИзменениеСуммыНДС";
	
	// Для служебныех целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	ТабДокумент = Новый ТабличныйДокумент;                                                           
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложени2КНалоговойНакладной_Приложение2_2022_"+ИмяМакета;
	Если ИмяМакета = "Приложение2КНалоговойНакладной" Тогда
		   ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Иначе	
		   ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	ТабДокумент.АвтоМасштаб = Истина;

	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2022");
	Макет.КодЯзыкаМакета = "ru";
	
	// определим параметры шапки документа

	//Дата налоговой
	ТекДатаНалоговой = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=ddMMyyyy");
	
	// Номер налоговой
	ТекНомерНалоговой = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НалоговаяНакладная.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим налоговой
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если Шапка.ДатаНалоговойНакладной < '2016-04-01' Тогда
		Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
			ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
		КонецЕсли;
	Иначе	
	    ТекНомерФилиал = КодСпецРежима;
		Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
			ТекНомерФилиал = "5";
		КонецЕсли;
	КонецЕсли;
	
	ТекНомерФилиалНалоговой  = ТекНомерФилиал;
	
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		
	// Номер
	ТекНомер = Прав("        " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим
	КодСпецРежима    = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	
	Если КодСпецРежима = "7" Тогда
		КодСпецРежима = "";
	КонецЕсли;
	
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	ФилиалПокупателяКодПоЕДРПОУ = "";
	ДополнениеКНаименованиюКонтрагента = "";
	КодЕДРПОУГоловногоКонтрагента = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
			ФилиалПокупателяКодПоЕДРПОУ = Сред(Шапка.ФилиалПокупателя, ПозицияСобачки + 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина Тогда
			СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);
			КодЕДРПОУГоловногоКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя, "КодПоЕДРПОУ,", Ложь);
			Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда 
				ДополнениеКНаименованиюКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) + ", ";
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ФилиалПокупателяКодПоЕДРПОУ) И ЗначениеЗаполнено(КодЕДРПОУГоловногоКонтрагента) Тогда
			ФилиалПокупателяКодПоЕДРПОУ = КодЕДРПОУГоловногоКонтрагента;
		КонецЕсли;
		ФилиалПокупателяКодПоЕДРПОУ = Прав("          " + СокрЛП(ФилиалПокупателяКодПоЕДРПОУ), 10);
	КонецЕсли;
	
	ПродавецЮрлицо = Истина;
	ПокупательЮрлицо = Истина;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= "500000000000";
		НазваниеОрганизации				= ДополнениеКНаименованиюКонтрагента + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		// вместо адреса - просто страна нерезидента
		Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли;
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		ЕДРПОУОрганизации = "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ЕДРПОУОрганизации		= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоЕДРПОУ,"               ,Ложь);
		Если НЕ ЗначениеЗаполнено(ЕДРПОУОрганизации) Тогда 
			ЕДРПОУОрганизации	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоДРФО,"             ,Ложь);
			ПродавецЮрлицо = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	ЕДРПОУОрганизации = Прав("            " + СокрЛП(ЕДРПОУОрганизации), 10);
	
		
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			
			ФилиалПокупателя = "";			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ЕДРПОУКонтрагента = "";
		
	ИначеЕсли Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
		
		ИННКонтрагента 		= ИННОрганизации;
		НазваниеКонтрагента = НазваниеОрганизации;
		ФилиалПокупателя	= ФилиалПродавца;
		ЕДРПОУКонтрагента	= ЕДРПОУОрганизации;
		ПокупательЮрлицо = ПродавецЮрлицо;
		
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ДополнениеКНаименованиюКонтрагента + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 0  ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда
			Если ПустаяСтрока(ФилиалПокупателяКодПоЕДРПОУ) Тогда 
				ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоЕДРПОУ," ,Ложь);
				Если НЕ ЗначениеЗаполнено(ЕДРПОУКонтрагента) Тогда
					ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоДРФО," ,Ложь);
					ПокупательЮрлицо = Ложь;
				КонецЕсли;
			Иначе
				ЕДРПОУКонтрагента = ФилиалПокупателяКодПоЕДРПОУ;
			КонецЕсли;
		Иначе
			ЕДРПОУКонтрагента = "";
		КонецЕсли;
	
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1
			ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 2 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда

			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
			
			// поставка на экспорт
			ИННКонтрагента = "300000000000";
			// вместо адреса - просто страна нерезидента
			Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли;

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
			     ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
	КонецЕсли; 
	ИННКонтрагента 				  = Прав("            " + ИННКонтрагента, 12);
	ЕДРПОУКонтрагента	= Прав("            " + СокрЛП(ЕДРПОУКонтрагента), 10);

	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную = СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Имя)
										 + " "
										 + ВРег(СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия)); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
	
		// Выводим область оригинал/копия
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		// П2 с отрицательной суммой, которые выдаются покупателю и которые выписанны к НН с датой после 01.01.2015 - регистрирует в ЕРНН покупатель
		Если Шапка.РегистрируетсяВЕРННПокупателем = Истина Тогда
		    ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "Х";
		Иначе
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом = "Х";
		КонецЕсли;
		
		КодПризнакаСводнойНаПечать = "";
		Если НЕ (Шапка.КодПризнакаСводной = 0)Тогда 
			КодПризнакаСводнойНаПечать = Строка(Шапка.КодПризнакаСводной);
		ИначеЕсли  (Шапка.Сводная = Истина) Тогда 
			Если (    Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
				  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации) Тогда 
				КодПризнакаСводнойНаПечать = "4"
				  
			ИначеЕсли (Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
				  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
				КодПризнакаСводнойНаПечать = "1"
				  
			ИначеЕсли Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				КодПризнакаСводнойНаПечать = "3"
				  
			КонецЕсли;
		КонецЕсли; 
		ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной = КодПризнакаСводнойНаПечать;
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		// оргинал
		Если  Шапка.ТипПричиныНевыдачиПокупателю > 0 Тогда
			
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
			
			// такие П2, даже с отрицательной суммой регистрирует продавец
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "";
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом   = "Х";
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата налоговой
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаНалоговой_"+Инд]    = Сред(ТекДатаНалоговой, Инд, 1);
		КонецЦикла; 
		
		// Номер налоговой
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["НомерНалоговой_"+Инд]    = Сред(ТекНомерНалоговой, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим налоговой
		Для Инд = 1 По 5 Цикл                                                                 

			ОбластьМакета.Параметры["НомерФилиалНалоговой_"+Инд]    = Сред(ТекНомерФилиалНалоговой, Инд, 1);
			
		КонецЦикла;		
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		//ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ продавца
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУОрганизации_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
		КонецЦикла; 
		
		//источник кода продавца
		ИсточникКодаПродавца = Документы.НалоговаяНакладная.КодИсточникаНалоговогоНомера(ЕДРПОУОрганизации, ПродавецЮрлицо);
		ОбластьМакета.Параметры.ИсточникКодаОрганизации = ИсточникКодаПродавца;

		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента           = НазваниеКонтрагента;
		
		// ИНН покупателя		
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ покупателя
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУКонтрагента_"+Инд] = Сред(ЕДРПОУКонтрагента, Инд, 1);
		КонецЦикла; 
		
		//источник кода покупателя
		ИсточникКодаПокупателя = Документы.НалоговаяНакладная.КодИсточникаНалоговогоНомера(ЕДРПОУКонтрагента, ПокупательЮрлицо);
		ОбластьМакета.Параметры.ИсточникКодаКонтрагента = ИсточникКодаПокупателя;
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "ИзменениеСуммыБезНДС, ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС20    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G9", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "14" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС14 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС14    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G14", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G14", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС7    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G111", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G111", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R007G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R006G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДСБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G11", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ИтогНДС    = СтрокаТаблицы.ИзменениеСуммыНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИзменениеСуммыНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R001G03", ИтогНДС);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		ПодвалННДата 			= "";
		ПодвалНННомер 			= "";
		ПодвалНННомерФилиала	= "";
		ПодвалННРегНомерЕРНН	= "";
		ПодвалП2Дата 			= "";
		ПодвалП2Номер 			= "";
		ПодвалП2НомерФилиала	= "";
		ПодвалП2РегНомерЕРНН	= "";
		
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN0", ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",  ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G1",    ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",  ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Объект.Дата);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODFILL",	Шапка.ДатаНалоговойНакладной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM",	Прав(ТекНомерНалоговой,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM1",	Лев(ТекНомерФилиалНалоговой, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM2",	Сред(ТекНомерФилиалНалоговой, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINSEL",	ЕДРПОУОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINBUY",	ЕДРПОУКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G1D",	ПодвалННДата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G2",	ПодвалНННомер);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G3",	Лев(ПодвалНННомерФилиала, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G4",	Сред(ПодвалНННомерФилиала, 2));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G5",	ПодвалННРегНомерЕРНН);			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G1D",	ПодвалП2Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G2",	ПодвалП2Номер);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G3",	Лев(ПодвалП2НомерФилиала, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G4",	Сред(ПодвалП2НомерФилиала, 2));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G5",	ПодвалП2РегНомерЕРНН);			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKS",		ИсточникКодаПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKB",		ИсточникКодаПокупателя);
			
		КонецЕсли;
		
		ДопТекст = "";
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
			ДопТекст = " " + " (перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання)";	
		КонецЕсли;
		
		ТекущийНомерСтрокиП2 = 0;
		// Выводим табличную часть
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ТекущийНомерСтрокиП2 = ТекущийНомерСтрокиП2 + 1;			
			ОбластьМакета.Параметры.НомерСтроки = ТекущийНомерСтрокиП2;

			Если СтрокаТаблицы.ИзменениеКоличества = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеКоличества  = "";
				ОбластьМакета.Параметры.ЦенаБезНДС  		 = "";
			КонецЕсли;
			Если СтрокаТаблицы.ИзменениеЦеныБезНДС = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеЦеныБезНДС  = "";
				ОбластьМакета.Параметры.Количество  		 = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			Если СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодУслуги Тогда
				ОбластьМакета.Параметры.КодДКПП   = ОбластьМакета.Параметры.КодУКТВЭД;	
				ОбластьМакета.Параметры.КодУКТВЭД = "";
			ИначеЕсли СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодТовараИмпортированного Тогда
				ОбластьМакета.Параметры.Импортированный = "X";
			КонецЕсли;
			Если НЕ КодСпецРежима = "2" Тогда
			    ОбластьМакета.Параметры.КодСХ = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
												   + ДопТекст;
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			
			ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
			РасчИзменениеСуммыНДС6зн = Окр(УчетНДСКлиентСервер.РассчитатьСуммуНДС(СтрокаТаблицы.ИзменениеСуммыБезНДС, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС)), 6 );
			ФорматНДС6Зн = ?(Окр(РасчИзменениеСуммыНДС6зн,2) = РасчИзменениеСуммыНДС6зн, "ЧЦ=15; ЧДЦ=2; ЧН=' '", "ЧЦ=19; ЧДЦ=6; ЧН=' '");
			ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн = СокрЛ(Формат(РасчИзменениеСуммыНДС6зн, ФорматНДС6Зн));
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.НомерСтрокиНН) Тогда
				// печать, выгрузка невозможны ... 
	        КонецЕсли;
			
			ДанныеОСумме = СтрокаТаблицы.ИзменениеСуммыБезНДС;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = "";
				ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат Тогда
				
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				
			ИначеЕсли Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.КодСХ = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G001		= ОбластьМакета.Параметры.НомерСтрокиНН;
				СтрокаСтруктуры.G21 		= ОбластьМакета.Параметры.КодПричиныКорректировки;
				СтрокаСтруктуры.G22 		= ОбластьМакета.Параметры.НомерГруппыКорректировки;
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				СтрокаСтруктуры.G32  		= ОбластьМакета.Параметры.Импортированный;
				СтрокаСтруктуры.G33  		= ОбластьМакета.Параметры.КодДКПП;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				
				СтрокаСтруктуры.G5  = СтрокаТаблицы.ИзменениеКоличества;
				СтрокаСтруктуры.G6  = СтрокаТаблицы.ЦенаБезНДС;
				Если СтрокаСтруктуры.G5 = 0 Тогда
					СтрокаСтруктуры.G6  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G7  = СтрокаТаблицы.ИзменениеЦеныБезНДС;
				СтрокаСтруктуры.G8  = СтрокаТаблицы.Количество;
				Если СтрокаСтруктуры.G7 = 0 Тогда
					СтрокаСтруктуры.G8  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				СтрокаСтруктуры.G011  		= ОбластьМакета.Параметры.КодСХ;
				СтрокаСтруктуры.G11_10  	= ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);
 	
	КонецЦикла; 

	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;

КонецФункции // ПечатьДокумента()

Функция ПечатьДокументаНалоговыйКодекс2023(Объект, ТолькоФормироватьСтруктуруПоказателейПечатнойФормы, ИмяМакета = "Приложение2КНалоговойНакладной") Экспорт	
	Перем СтруктураШапкиДокумента;
	Перем ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА;
	
	УстановитьПривилегированныйРежим(Истина);
	КонтрагентНеРезидент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "НеЯвляетсяРезидентом");
	
	Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
	
		СтруктураПоказателей = Новый Структура();
		СтруктураПоказателей.Вставить("НалоговыйДокумент",   	Новый Структура());	// данные налоговой накладной
		СтруктураПоказателей.НалоговыйДокумент.Вставить("R",   	Новый ТаблицаЗначений());  // данные табличной части
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G001");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G21");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G22");
		
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G3S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G32");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G33");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G4S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G105_2S");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G5");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G6");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G7");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G8");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G008");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G009");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G010");
		СтруктураПоказателей.НалоговыйДокумент.R.Колонки.Добавить("G11_10");
		
		Если     Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииВозврат
			 ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.НеНДСОперацииКорректировка Тогда
			 
			Сообщить(НСтр("ru='Документ является служебным и не может быть выгружен в XML!';uk='Документ є службовим та не може бути вивантажений в XML!'"));
			 
			// такие операции не предусматривают выписки налоговых накладных
			Возврат	СтруктураПоказателей;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	ВидОперации,
	|	Контрагент,
	|	Контрагент.ГоловнойКонтрагент КАК ГоловнойКонтрагент,
	|	Контрагент.ОбособленноеПодразделение КАК КонтрагентОбособленноеПодразделение,
	|	Контрагент.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН КАК ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН,
	|	Контрагент.КодФилиала КАК ФилиалПокупателя,
	|	Организация,
	|	Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ДоговорКонтрагента.МногостороннееСоглашениеОРазделеПродукции КАК СоглашениеОРазделеПродукции, 
	|	РегистрируетсяВЕРННПокупателем,
	|   ТипПричиныНевыдачиПокупателю,
	
	|	НалоговаяНакладная,
	|	НалоговаяНакладная.Дата КАК ДатаНалоговойНакладной,
	|	НалоговаяНакладная.Номер КАК НомерНалоговойНакладной,
	|	НалоговаяНакладная.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	|	НалоговаяНакладная.ОбособленноеПодразделение.НаименованиеДляНалоговыхДокументов КАК НаименованиеФилиала,
	|	НалоговаяНакладная.ОбособленноеПодразделение.Префикс КАК Префикс,
	|	НалоговаяНакладная.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены КАК ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены,
	|   НалоговаяНакладная.Сводная   КАК Сводная,
	|   НалоговаяНакладная.КодПризнакаСводной КАК КодПризнакаСводной,
	|   НалоговаяНакладная.ЛьготаНДС КАК ЛьготаНДС,
	|   НалоговаяНакладная.ВидОперации КАК ВидОперацииНалоговой,
	
	|	КтоВыписалНалоговуюНакладную 			КАК КтоВыписалНалоговуюНакладную,
	|	КтоВыписалНалоговуюНакладную.КодПоДРФО  КАК ИННКтоВыписалНН
	|ИЗ
	|	Документ.Приложение2КНалоговойНакладной КАК Приложение2
	|
	|ГДЕ
	|	Приложение2.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ДополнениеКНаименованиюОрганизации = "";
	Если  Шапка.ОбособленноеПодразделение =  Истина 
		И ЗначениеЗаполнено(Шапка.ГоловнаяОрганизация) Тогда
		СведенияОГоловнойОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнаяОрганизация, Шапка.Дата);
		
		ДополнениеКНаименованиюОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловнойОрганизации,    "ПолноеНаименование,",Ложь) 			+ ", " ;
	
	КонецЕсли;
	
	// Подготовим таблицы
	Отказ = Ложь;
	СтруктураШапкиДокумента = Объект.ПодготовитьСтруктуруШапкиДокумента(Отказ);
	Объект.ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаНоменклатуры, ТаблицаПоТаре, ТаблицаПоУслугам, ТаблицаПоОС, ТаблицаПоНМА);

	// Загрузим все таблицы (кроме тары) в одну таблицу
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоУслугам, ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоОС	  , ТаблицаНоменклатуры);	
	ОбщегоНазначенияБПВызовСервера.ЗагрузитьВТаблицуЗначений(ТаблицаПоНМА	  , ТаблицаНоменклатуры);	
	
	// свернем подобные строки
	ТаблицаНоменклатуры.Свернуть("КодВид, Номенклатура, КодУКТВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, ЦенаМестаБезНДСБезСкидкиРегл,  Количество, СтавкаНДС, КодЛьготы, НомерСтрокиНН, НомерГруппыКорректировки, КодПричиныКорректировки", "ИзменениеКоличества, ИзменениеЦеныБезНДССоСкидкойРегл, ИзменениеСуммыБезНДСРегл, ИзменениеСуммыНДСРегл");
	
	// переименуем колонки
	ТаблицаНоменклатуры.Колонки.ЦенаМестаБезНДСБезСкидкиРегл.Имя 	 = "ЦенаБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеЦеныБезНДССоСкидкойРегл.Имя = "ИзменениеЦеныБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыБезНДСРегл.Имя		 = "ИзменениеСуммыБезНДС";
	ТаблицаНоменклатуры.Колонки.ИзменениеСуммыНДСРегл.Имя		 	 = "ИзменениеСуммыНДС";
	
	// Для служебныех целей понадобится исходная таблица
	ТаблицаНоменклатурыКопия = ТаблицаНоменклатуры.Скопировать();
	
	ТабДокумент = Новый ТабличныйДокумент;                                                           
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложени2КНалоговойНакладной_Приложение2_2023_"+ИмяМакета;
	Если ИмяМакета = "Приложение2КНалоговойНакладной" Тогда
		   ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Иначе	
		   ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	ТабДокумент.АвтоМасштаб = Истина;

	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение2КНалоговойНакладной2023");
	Макет.КодЯзыкаМакета = "ru";
	
	// определим параметры шапки документа

	//Дата налоговой
	ТекДатаНалоговой = Формат(Шапка.ДатаНалоговойНакладной, "ДФ=ddMMyyyy");
	
	// Номер налоговой
	ТекНомерНалоговой = Прав("       " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НалоговаяНакладная.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим налоговой
	ТекНомерФилиал = "";
	КодСпецРежима = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	НомерФилиала  = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	Если Шапка.ДатаНалоговойНакладной < '2016-04-01' Тогда
		Если ЗначениеЗаполнено(КодСпецРежима + НомерФилиала) Тогда
			ТекНомерФилиал	= ТекНомерФилиал + КодСпецРежима + НомерФилиала; 
		КонецЕсли;
	Иначе	
	    ТекНомерФилиал = КодСпецРежима;
		Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
			ТекНомерФилиал = "5";
		КонецЕсли;
	КонецЕсли;
	
	ТекНомерФилиалНалоговой  = ТекНомерФилиал;
	
	//Дата
	ТекДата = Формат(Шапка.Дата, "ДФ=ddMMyyyy");
		
	// Номер
	ТекНомер = Прав("        " + СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Объект.Номер,Истина,Истина)), 7);
		
	// филиал/спецрежим
	КодСпецРежима    = ?(ЗначениеЗаполнено(Шапка.СпецРежимНалогообложения), "" + Шапка.СпецРежимНалогообложения, " "); //или пробел или одна цифра
	Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
		КодСпецРежима = "5";
	КонецЕсли;
	
	Если КодСпецРежима = "7" Тогда
		КодСпецРежима = "";
	КонецЕсли;
	
	
	ФилиалПродавца   = ?(ЗначениеЗаполнено(Шапка.Префикс), Прав("    " + Формат(Число(Шапка.Префикс),"ЧЦ=4; ЧГ=0"), 4), "");  //число  4 символа, без лидирующих нулей
	ФилиалПокупателя = "";
	ФилиалПокупателяКодПоЕДРПОУ = "";
	ДополнениеКНаименованиюКонтрагента = "";
	КодЕДРПОУГоловногоКонтрагента = "";
	Если ЗначениеЗаполнено(Шапка.ФилиалПокупателя) Тогда
		ПозицияСобачки = Найти(Шапка.ФилиалПокупателя, "@");
		Если ПозицияСобачки > 0 Тогда
			ФилиалПокупателя = Сред(Шапка.ФилиалПокупателя, 1, ПозицияСобачки - 1);
			ФилиалПокупателяКодПоЕДРПОУ = Сред(Шапка.ФилиалПокупателя, ПозицияСобачки + 1);
		Иначе
			ФилиалПокупателя = Шапка.ФилиалПокупателя;
		КонецЕсли;
		ФилиалПокупателя = Прав("    " + СокрЛП(ФилиалПокупателя), 4);
		Если Шапка.КонтрагентОбособленноеПодразделение = Истина Тогда
			СведенияОГоловномКонтрагентеПокупателя = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ГоловнойКонтрагент, Шапка.Дата);
			КодЕДРПОУГоловногоКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя, "КодПоЕДРПОУ,", Ложь);
			Если Шапка.ДополнятьНаименованиеАдресДаннымиГоловногоКонтрагентаВНН = Истина Тогда 
				ДополнениеКНаименованиюКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОГоловномКонтрагентеПокупателя,  "ПолноеНаименование,",Ложь) + ", ";
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ФилиалПокупателяКодПоЕДРПОУ) И ЗначениеЗаполнено(КодЕДРПОУГоловногоКонтрагента) Тогда
			ФилиалПокупателяКодПоЕДРПОУ = КодЕДРПОУГоловногоКонтрагента;
		КонецЕсли;
		ФилиалПокупателяКодПоЕДРПОУ = Прав("          " + СокрЛП(ФилиалПокупателяКодПоЕДРПОУ), 10);
	КонецЕсли;
	
	ПродавецЮрлицо = Истина;
	ПокупательЮрлицо = Истина;
	
	////////////////////////////////////////////
	// Продавец
	
	// ИНН, Номер свидетельства, Наименование, Адрес
	Если  Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		
		// налоговые реквизиты не указыватюся
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		ИННОрганизации					= "500000000000";
		НазваниеОрганизации				= ДополнениеКНаименованиюКонтрагента + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		// вместо адреса - просто страна нерезидента
		Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
		Если НЕ ЗначениеЗаполнено(Страна) Тогда
			Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
		Иначе
			НазваниеОрганизации = НазваниеОрганизации + ", " + Страна		
		КонецЕсли;
		// данные по филиалам меняются местами
		ФилиалПокупателя = ФилиалПродавца;
		ФилиалПродавца	 = "";
		ЕДРПОУОрганизации = "";
		
	Иначе	
		
		СведенияОПродавце   		    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ИННОрганизации					= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ИНН,"               ,Ложь);
		НазваниеОрганизации				= ДополнениеКНаименованиюОрганизации 
										+ ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "ПолноеНаименование,",Ложь);
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеОрганизации = НазваниеОрганизации + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ЕДРПОУОрганизации		= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоЕДРПОУ,"               ,Ложь);
		Если НЕ ЗначениеЗаполнено(ЕДРПОУОрганизации) Тогда 
			ЕДРПОУОрганизации	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПродавце,    "КодПоДРФО,"             ,Ложь);
			ПродавецЮрлицо = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	ИННОрганизации 				  = Прав("            " + ИННОрганизации, 12);
	ЕДРПОУОрганизации = Прав("            " + СокрЛП(ЕДРПОУОрганизации), 10);
	
		
	////////////////////////////////////////////
	// покупатель
	
	// Название, адрес, номер свидетельства, ИНН
	Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат
		ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
		// в этом случае контрагентом выступает организация
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		НазваниеКонтрагента				= ДополнениеКНаименованиюОрганизации + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РаботыОтНерезидентаКорректировка Тогда
			ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Иначе	
			Если Шапка.Сводная = Истина Тогда
			    ИННКонтрагента 	 = "600000000000";
			Иначе	
				ИННКонтрагента 	 = "400000000000";	
			КонецЕсли;
			
			ФилиалПокупателя = "";			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.НаименованиеФилиала) Тогда
			НазваниеКонтрагента = НазваниеКонтрагента + Шапка.НаименованиеФилиала;	
		КонецЕсли;
		
		ЕДРПОУКонтрагента = "";
		
	ИначеЕсли Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
		
		ИННКонтрагента 		= ИННОрганизации;
		НазваниеКонтрагента = НазваниеОрганизации;
		ФилиалПокупателя	= ФилиалПродавца;
		ЕДРПОУКонтрагента	= ЕДРПОУОрганизации;
		ПокупательЮрлицо = ПродавецЮрлицо;
		
	Иначе
		
		СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		
		НазваниеКонтрагента				= ДополнениеКНаименованиюКонтрагента + ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,    "ПолноеНаименование,",Ложь);
		
		ИННКонтрагента 				  = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "ИНН," ,Ложь);
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 0  ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда
			Если ПустаяСтрока(ФилиалПокупателяКодПоЕДРПОУ) Тогда 
				ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоЕДРПОУ," ,Ложь);
				Если НЕ ЗначениеЗаполнено(ЕДРПОУКонтрагента) Тогда
					ЕДРПОУКонтрагента	= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПокупателе,  "КодПоДРФО," ,Ложь);
					ПокупательЮрлицо = Ложь;
				КонецЕсли;
			Иначе
				ЕДРПОУКонтрагента = ФилиалПокупателяКодПоЕДРПОУ;
			КонецЕсли;
		Иначе
			ЕДРПОУКонтрагента = "";
		КонецЕсли;
	
		Если  Шапка.ТипПричиныНевыдачиПокупателю = 1
			ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 2 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		ИначеЕсли  Шапка.ТипПричиныНевыдачиПокупателю = 12 Тогда

			ИННКонтрагента = "200000000000";
			
		ИначеЕсли Шапка.ТипПричиныНевыдачиПокупателю = 7 
			ИЛИ Шапка.ТипПричиныНевыдачиПокупателю = 21 Тогда
			
			Если Шапка.ТипПричиныНевыдачиПокупателю = 7 Тогда
				// поставка на экспорт
				ИННКонтрагента = "300000000000";
			Иначе                  
				// постачання нерезиденту на митній території України
				ИННКонтрагента = "500000000000";
			КонецЕсли;
			// вместо адреса - просто страна нерезидента
			Страна = БухгалтерскийУчетПереопределяемый.ПолучитьСтрануИзКонтактнойИнформации(Шапка.Контрагент, "Юридический");
			Если НЕ ЗначениеЗаполнено(Страна) Тогда
				Сообщить("" + Шапка.Контрагент + ": " + НСтр("ru='Не указана страна регистрации контрагента-нерезидента (в контактной информации)! Адрес в налоговой накладной заполнен не будет!';uk='Не вказана країна реєстрації контрагента-нерезидента (у контактній інформації)! Адреса в податковій накладній заповнена не буде!'"));
			Иначе
				НазваниеКонтрагента = НазваниеКонтрагента + ", " + Страна;
			КонецЕсли;

		ИначеЕсли НЕ ЗначениеЗаполнено(ИННКонтрагента)
			     ИЛИ Найти("0123456789",Лев(СокрЛ(ИННКонтрагента),1)) = 0 Тогда
			
			ИННКонтрагента = "100000000000";
			НазваниеКонтрагента = "Неплатник";
			
		КонецЕсли;
		
	КонецЕсли; 
	ИННКонтрагента 				  = Прав("            " + ИННКонтрагента, 12);
	ЕДРПОУКонтрагента	= Прав("            " + СокрЛП(ЕДРПОУКонтрагента), 10);

	// кто выписал налоговую накладную нужно формировать в виде "И.О. Фамилия"
	ПечКтоВыписалНалоговуюНакладную = "";
	ФИОКтоВыписалНалоговуюНакладную = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Объект.Дата, Новый Структура("ФизическоеЛицо", Шапка.КтоВыписалНалоговуюНакладную));
	Если ФИОКтоВыписалНалоговуюНакладную.Количество() > 0 Тогда
		ПечКтоВыписалНалоговуюНакладную = СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Имя)
										 + " "
										 + ВРег(СокрЛП(ФИОКтоВыписалНалоговуюНакладную[0].Фамилия)); 
	Иначе
		ПечКтоВыписалНалоговуюНакладную = "" + Шапка.КтоВыписалНалоговуюНакладную;									 
	КонецЕсли;
	
	Для Страница = 1 По 1 Цикл
	
		// Выводим область оригинал/копия
		ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Оригинал");
		
		// П2 с отрицательной суммой, которые выдаются покупателю и которые выписанны к НН с датой после 01.01.2015 - регистрирует в ЕРНН покупатель
		Если Шапка.РегистрируетсяВЕРННПокупателем = Истина Тогда
		    ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "Х";
		Иначе
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом = "Х";
		КонецЕсли;
		
		КодПризнакаСводнойНаПечать = "";
		Если НЕ (Шапка.КодПризнакаСводной = 0)Тогда 
			КодПризнакаСводнойНаПечать = Строка(Шапка.КодПризнакаСводной);
		ИначеЕсли  (Шапка.Сводная = Истина) Тогда 
			Если (    Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОблагаемыеОперации
				  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.ОсвобожденныеОперации) Тогда 
				КодПризнакаСводнойНаПечать = "4"
				  
			ИначеЕсли (Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажа
				  ИЛИ Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.УсловнаяПродажаСписаниеОС) Тогда
				КодПризнакаСводнойНаПечать = "1"
				  
			ИначеЕсли Шапка.ВидОперацииНалоговой = Перечисления.ВидыОперацийНалоговаяНакладная.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				КодПризнакаСводнойНаПечать = "3"
				  
			КонецЕсли;
		КонецЕсли; 
		ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной = КодПризнакаСводнойНаПечать;
		
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат 
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
		
			ОбластьМакетаЗаголовок.Параметры.Освобожденная = "Без ПДВ";
		
		КонецЕсли;
		
		// оргинал
		Если  Шапка.ТипПричиныНевыдачиПокупателю > 0 Тогда
			
			// накладная остается у поставщика
			ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца = "Х";
			ОбластьМакетаЗаголовок.Параметры.ТипПричины1 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),1,1);
			ОбластьМакетаЗаголовок.Параметры.ТипПричины2 = Сред(Формат(Шапка.ТипПричиныНевыдачиПокупателю, "ЧЦ=2;ЧВН="),2,1);
			
			// такие П2, даже с отрицательной суммой регистрирует продавец
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем = "";
			ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом   = "Х";
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Выводим заголовок накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		//Дата налоговой
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["ДатаНалоговой_"+Инд]    = Сред(ТекДатаНалоговой, Инд, 1);
		КонецЦикла; 
		
		// Номер налоговой
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["НомерНалоговой_"+Инд]    = Сред(ТекНомерНалоговой, Инд, 1);
		КонецЦикла; 
		
		// филиал/спецрежим налоговой
		Для Инд = 1 По 5 Цикл                                                                 

			ОбластьМакета.Параметры["НомерФилиалНалоговой_"+Инд]    = Сред(ТекНомерФилиалНалоговой, Инд, 1);
			
		КонецЦикла;		
		
		//Дата
		Для Инд = 1 По 8 Цикл
			ОбластьМакета.Параметры["Дата_"+Инд]    = Сред(ТекДата, Инд, 1);
		КонецЦикла; 
		
		// Номер
		Для Инд = 1 По 7 Цикл                                                                 
			ОбластьМакета.Параметры["Номер_"+Инд]    = Сред(ТекНомер, Инд, 1);
		КонецЦикла; 
		
		// код спец. режима
		ОбластьМакета.Параметры.СпецРежим = КодСпецРежима;
		
		ОбластьМакета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		
		//ИНН продавца
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННОрганизации_"+Инд] = Сред(ИННОрганизации, Инд, 1);
		КонецЦикла; 
		
		// филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПродавца_"+Инд]    = Сред(ФилиалПродавца, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ продавца
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУОрганизации_"+Инд] = Сред(ЕДРПОУОрганизации, Инд, 1);
		КонецЦикла; 
		
		//источник кода продавца
		ИсточникКодаПродавца = Документы.НалоговаяНакладная.КодИсточникаНалоговогоНомера(ЕДРПОУОрганизации, ПродавецЮрлицо);
		ОбластьМакета.Параметры.ИсточникКодаОрганизации = ИсточникКодаПродавца;

		// название покупателя
		ОбластьМакета.Параметры.НазваниеКонтрагента           = НазваниеКонтрагента;
		
		// ИНН покупателя		
		Для Инд = 1 По 12 Цикл
			ОбластьМакета.Параметры["ИННКонтрагента_"+Инд]    = Сред(ИННКонтрагента, Инд, 1);
		КонецЦикла; 
		
		// Филиал
		Для Инд = 1 По 4 Цикл                                                                 
			ОбластьМакета.Параметры["ФилиалПокупателя_"+Инд]    = Сред(ФилиалПокупателя, Инд, 1);
		КонецЦикла; 
		
		// ЕДРПОУ покупателя
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ЕДРПОУКонтрагента_"+Инд] = Сред(ЕДРПОУКонтрагента, Инд, 1);
		КонецЦикла; 
		
		//источник кода покупателя
		ИсточникКодаПокупателя = Документы.НалоговаяНакладная.КодИсточникаНалоговогоНомера(ЕДРПОУКонтрагента, ПокупательЮрлицо);
		ОбластьМакета.Параметры.ИсточникКодаКонтрагента = ИсточникКодаПокупателя;
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();
		ВремТаблица.Свернуть("СтавкаНДС", "ИзменениеСуммыБезНДС, ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы Из ВремТаблица Цикл
			КолонкаДляСуммы = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			Если  Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				// данные не заполняются
			ИначеЕсли КолонкаДляСуммы = "20" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС20 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС20    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G9", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G9", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "14" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС14 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС14    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G14", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G14", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "7" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС7 = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				ОбластьМакета.Параметры.ИзменениеСуммыНДС7    = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G111", СтрокаТаблицы.ИзменениеСуммыБезНДС);
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R02G111", СтрокаТаблицы.ИзменениеСуммыНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "902" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Укр = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R007G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "901" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС0Эксп = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R006G03", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			ИначеЕсли КолонкаДляСуммы = "903" Тогда
				
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДСБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
				
				Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
					СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G11", СтрокаТаблицы.ИзменениеСуммыБезНДС);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ИтогНДС   = 0;
		ВремТаблица.Свернуть("", "ИзменениеСуммыНДС");
		Для каждого СтрокаТаблицы из ВремТаблица Цикл
			ИтогНДС    = СтрокаТаблицы.ИзменениеСуммыНДС;
		КонецЦикла;
		ОбластьМакета.Параметры.ИзменениеСуммыНДС  = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогНДС, ,"0,00");
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R001G03", ИтогНДС);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// рассчитаем поля для подвала заранее
		ПечЛьготаНДС = "";
		Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
			ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
			
			// выводим информацию только если хотя бы для одного товара не заполнен код льготы или указан "временный" код 99999999
			ВремТаблица = ТаблицаНоменклатурыКопия.Скопировать();	
			ВремТаблица.Свернуть("КодЛьготы");
			Для каждого СтрокаТаблицы Из ВремТаблица Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодЛьготы)
					ИЛИ СтрокаТаблицы.КодЛьготы = "99999999" Тогда
					ПечЛьготаНДС = Шапка.ЛьготаНДС;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ИННКтоВыписалНН = СокрЛП(Шапка.ИННКтоВыписалНН);
		
		ПодвалННДата 			= "";
		ПодвалНННомер 			= "";
		ПодвалНННомерФилиала	= "";
		ПодвалННРегНомерЕРНН	= "";
		ПодвалП2Дата 			= "";
		ПодвалП2Номер 			= "";
		ПодвалП2НомерФилиала	= "";
		ПодвалП2РегНомерЕРНН	= "";
		
		
		Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина  И Страница = 1 Тогда
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN0", ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПродавцом);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HERPN",  ОбластьМакетаЗаголовок.Параметры.РегистрируетсяВЕРННПокупателем);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R01G1",    ОбластьМакетаЗаголовок.Параметры.КодПризнакаСводной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R03G10S",  ОбластьМакетаЗаголовок.Параметры.Освобожденная);
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HORIG1",	ОбластьМакетаЗаголовок.Параметры.ВсеЭкзОстаютсяУПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTYPR",	"" + ОбластьМакетаЗаголовок.Параметры.ТипПричины1 + ОбластьМакетаЗаголовок.Параметры.ТипПричины2);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFILL",	Объект.Дата);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM",		Прав(ТекНомер,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM1",	КодСпецРежима);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNUM2",	ФилиалПродавца);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HFBUY",	ФилиалПокупателя);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODFILL",	Шапка.ДатаНалоговойНакладной);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM",	Прав(ТекНомерНалоговой,7));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM1",	Лев(ТекНомерФилиалНалоговой, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HPODNUM2",	Сред(ТекНомерФилиалНалоговой, 2));
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMESEL",	НазваниеОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HNAMEBUY",	НазваниеКонтрагента);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKSEL",	ИННОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBUY",	ИННКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HBOS",		ПечКтоВыписалНалоговуюНакладную);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKBOS",	ИННКтоВыписалНН);
			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R003G10S",	ПечЛьготаНДС);	
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINSEL",	ЕДРПОУОрганизации);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HTINBUY",	ЕДРПОУКонтрагента);
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G1D",	ПодвалННДата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G2",	ПодвалНННомер);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G3",	Лев(ПодвалНННомерФилиала, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G4",	Сред(ПодвалНННомерФилиала, 2));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0301G5",	ПодвалННРегНомерЕРНН);			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G1D",	ПодвалП2Дата);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G2",	ПодвалП2Номер);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G3",	Лев(ПодвалП2НомерФилиала, 1));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G4",	Сред(ПодвалП2НомерФилиала, 2));
			СтруктураПоказателей.НалоговыйДокумент.Вставить("R0302G5",	ПодвалП2РегНомерЕРНН);			
			
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKS",		ИсточникКодаПродавца);
			СтруктураПоказателей.НалоговыйДокумент.Вставить("HKB",		ИсточникКодаПокупателя);
			
		КонецЕсли;
		
		ДопТекст = "";
		Если Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
			ДопТекст = " " + " (перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання)";	
		КонецЕсли;
		
		ТекущийНомерСтрокиП2 = 0;
		// Выводим табличную часть
		Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				Сообщить(НСтр("ru='В одной из строк не заполнено наименование номенклатуры - проверьте заполнение документа!';uk='В одному з рядків не заповнене найменування номенклатури - перевірте заповнення документа!'"), СтатусСообщения.Важное);
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(СтрокаТаблицы);
			
			ТекущийНомерСтрокиП2 = ТекущийНомерСтрокиП2 + 1;			
			ОбластьМакета.Параметры.НомерСтроки = ТекущийНомерСтрокиП2;

			Если СтрокаТаблицы.ИзменениеКоличества = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеКоличества  = "";
				ОбластьМакета.Параметры.ЦенаБезНДС  		 = "";
			КонецЕсли;
			Если СтрокаТаблицы.ИзменениеЦеныБезНДС = 0 Тогда
				ОбластьМакета.Параметры.ИзменениеЦеныБезНДС  = "";
				ОбластьМакета.Параметры.Количество  		 = "";
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = УчетНДС.КодЕдиницыИзмеренияДляПечатиНалоговых(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод);
			
			ОбластьМакета.Параметры.КодУКТВЭД = СтрЗаменить(ОбластьМакета.Параметры.КодУКТВЭД, " ", "");
			
			Если СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодУслуги Тогда
				ОбластьМакета.Параметры.КодДКПП   = ОбластьМакета.Параметры.КодУКТВЭД;	
				ОбластьМакета.Параметры.КодУКТВЭД = "";
			ИначеЕсли СтрокаТаблицы.КодВид = Перечисления.ВидыКодовДляНалоговойНакладной.КодТовараИмпортированного Тогда
				ОбластьМакета.Параметры.Импортированный = "X";
			КонецЕсли;
			
			ОбластьМакета.Параметры.Номенклатура = СокрП("" + СтрокаТаблицы.Номенклатура)
												   + ДопТекст;
			
			// Определим в какую колонку (в зависимости от ставки НДС) попадает сумма без НДС
			ОбластьМакета.Параметры.КодСтавки = ОпределитьКодСтавки(ОпределитьКолонкуТаблицы(СтрокаТаблицы.СтавкаНДС), Объект.ВалютаДокумента, КонтрагентНеРезидент);
			
			ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаТаблицы.ИзменениеСуммыБезНДС, ,"0,00");
			РасчИзменениеСуммыНДС6зн = Окр(УчетНДСКлиентСервер.РассчитатьСуммуНДС(СтрокаТаблицы.ИзменениеСуммыБезНДС, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС)), 6 );
			ФорматНДС6Зн = ?(Окр(РасчИзменениеСуммыНДС6зн,2) = РасчИзменениеСуммыНДС6зн, "ЧЦ=15; ЧДЦ=2; ЧН=' '", "ЧЦ=19; ЧДЦ=6; ЧН=' '");
			ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн = СокрЛ(Формат(РасчИзменениеСуммыНДС6зн, ФорматНДС6Зн));
			
			Если    Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ОсвобожденныеОперацииКорректировка
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.ИтоговаяРозницаОсвобожденныеОперацииВозврат
				ИЛИ Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.РозницаКонрагентуОсвобожденныеОперацииВозврат Тогда
				
				Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КодЛьготы) Тогда
					ОбластьМакета.Параметры.КодЛьготы = "99999999";
				КонецЕсли;
				
			Иначе
				
				ОбластьМакета.Параметры.КодЛьготы = "";	
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.НомерСтрокиНН) Тогда
				// печать, выгрузка невозможны ... 
	        КонецЕсли;
			
			ДанныеОСумме = СтрокаТаблицы.ИзменениеСуммыБезНДС;
			
			Если Шапка.СоглашениеОРазделеПродукции = Истина Тогда
				
				ОбластьМакета.Параметры.Номенклатура = "розподіл сум податкового кредиту за багатосторонньою угодою про розподіл продукції";
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				ОбластьМакета.Параметры.ИзменениеСуммыБезНДС = "";
				ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн = "";
				
				ДанныеОСумме = 0;
				
			ИначеЕсли Шапка.Сводная = Истина И Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.УсловнаяПродажаВозврат Тогда
				
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.Количество = "";
				ОбластьМакета.Параметры.ЦенаБезНДС = "";
				ОбластьМакета.Параметры.КодСтавки = "";
				ОбластьМакета.Параметры.КодЛьготы = "";
				
			ИначеЕсли Шапка.ВидОперации = Перечисления.ВидыОперацийПриложение2КНалоговойНакладной.СводнаяНаПревышениеБазыНадЦенойПоставки Тогда
				
				ОбластьМакета.Параметры.КодУКТВЭД = "";
				ОбластьМакета.Параметры.КодДКПП = "";
				ОбластьМакета.Параметры.Импортированный = "";
				ОбластьМакета.Параметры.ЕдиницаИзмерения = "";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "";
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
				
				СтрокаСтруктуры = СтруктураПоказателей.НалоговыйДокумент.R.Добавить();
				
				СтрокаСтруктуры.G001		= ОбластьМакета.Параметры.НомерСтрокиНН;
				СтрокаСтруктуры.G21 		= ОбластьМакета.Параметры.КодПричиныКорректировки;
				СтрокаСтруктуры.G22 		= ОбластьМакета.Параметры.НомерГруппыКорректировки;
				
				СтрокаСтруктуры.G3S 		= ОбластьМакета.Параметры.Номенклатура;
				СтрокаСтруктуры.G4  		= ОбластьМакета.Параметры.КодУКТВЭД;
				СтрокаСтруктуры.G32  		= ОбластьМакета.Параметры.Импортированный;
				СтрокаСтруктуры.G33  		= ОбластьМакета.Параметры.КодДКПП;
				
				СтрокаСтруктуры.G4S     	= ОбластьМакета.Параметры.ЕдиницаИзмерения;
				СтрокаСтруктуры.G105_2S 	= ОбластьМакета.Параметры.ЕдиницаИзмеренияКод;
				
				
				СтрокаСтруктуры.G5  = СтрокаТаблицы.ИзменениеКоличества;
				СтрокаСтруктуры.G6  = СтрокаТаблицы.ЦенаБезНДС;
				Если СтрокаСтруктуры.G5 = 0 Тогда
					СтрокаСтруктуры.G6  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G7  = СтрокаТаблицы.ИзменениеЦеныБезНДС;
				СтрокаСтруктуры.G8  = СтрокаТаблицы.Количество;
				Если СтрокаСтруктуры.G7 = 0 Тогда
					СтрокаСтруктуры.G8  = 0;	
				КонецЕсли;
				
				СтрокаСтруктуры.G008  		= ОбластьМакета.Параметры.КодСтавки;
				СтрокаСтруктуры.G009  		= ОбластьМакета.Параметры.КодЛьготы;
				СтрокаСтруктуры.G010  		= ДанныеОСумме;
				СтрокаСтруктуры.G11_10  	= ОбластьМакета.Параметры.ИзменениеСуммыНДС6зн;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим подвал накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.КтоВыписалНалоговуюНакладную = ПечКтоВыписалНалоговуюНакладную;	
		
		// ДРФО того, кто выписал НН
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ИННКтоВыписалНН_"+Инд] = Сред(ИННКтоВыписалНН, Инд, 1);
		КонецЦикла; 
		
		ОбластьМакета.Параметры.ЛьготаНДС = ПечЛьготаНДС;	
		
		ТабДокумент.Вывести(ОбластьМакета);
 	
	КонецЦикла; 

	Если  ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина Тогда
		
		Возврат СтруктураПоказателей;
		
	Иначе	
		
		Возврат ТабДокумент;
		
	КонецЕсли;

КонецФункции // ПечатьДокумента()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Ложь;
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура")
		И ПараметрыПечати.Свойство("ТолькоФормироватьСтруктуруПоказателейПечатнойФормы") Тогда
		ТолькоФормироватьСтруктуруПоказателейПечатнойФормы = Истина;
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение2КНалоговойНакладной") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Приложение2КНалоговойНакладной", НСтр("ru='Приложение 2 к налоговой накладной';uk='Додаток 2 до податкової накладної'"), 
			ПечатьПриложения2КНалоговойНакладной(МассивОбъектов, ОбъектыПечати, ПараметрыВывода,"Приложение2КНалоговойНакладной", ТолькоФормироватьСтруктуруПоказателейПечатнойФормы));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение2КНалоговойНакладнойАльбом") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Приложение2КНалоговойНакладнойАльбом", НСтр("ru='Приложение 2 к налоговой накладной (альбом. ориент.)';uk='Додаток 2 до податкової накладної (альбом. орієнт.)'"), 
			ПечатьПриложения2КНалоговойНакладной(МассивОбъектов, ОбъектыПечати, ПараметрыВывода,"Приложение2КНалоговойНакладнойАльбом", ТолькоФормироватьСтруктуруПоказателейПечатнойФормы));
	КонецЕсли;
	
КонецПроцедуры // Печать

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ОпределитьКодСтавки(ИмяКолонки, ВалютаДокумента, КонтрагентНеРезидент)

	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Если ИмяКолонки = "0" Тогда
		Если НЕ ВалютаДокумента  = ВалютаРегламентированногоУчета
			ИЛИ КонтрагентНеРезидент = Истина 
			Тогда
			Возврат "901";//"0Эксп";
		Иначе       
			Возврат "902";//"0Укр";
		КонецЕсли;
	//Если ИмяКолонки = "0Эксп" Тогда
	//	Возврат "901";	
	//ИначеЕсли ИмяКолонки = "0Укр" Тогда
	//	Возврат "902";		
	ИначеЕсли ИмяКолонки = "БезНДС" Тогда
		Возврат "903";		
	ИначеЕсли ИмяКолонки = "7" Тогда
		Возврат "7";	
	ИначеЕсли ИмяКолонки = "14" Тогда
		Возврат "14";	
	Иначе
		Возврат "20";	
	КонецЕсли;	

КонецФункции // ОпределитьКодСтавки()

// Функция по СтавкеНДС определяет суффикс имени параметра табличного документа:
// фактически колонкку таблицы налоговой накладной 20%, 0%... где должна отображаться соответствующая сумма
//
Функция ОпределитьКолонкуТаблицы(СтавкаНДС=Неопределено,ДатаДокумента='2099-12-31')
	
	Если СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
		Возврат "0";
	ИначеЕсли  СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
		Возврат "БезНДС";
	ИначеЕсли  СтавкаНДС = Перечисления.СтавкиНДС.НДС7 Тогда
		Если НалоговыйУчетПовтИсп.ДатаНачалаИспользованияФормыННПоЛекарствам() <= ДатаДокумента  Тогда
			Возврат "7";	
		Иначе	
			Возврат "0";	
		КонецЕсли;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС14 Тогда
		Возврат "14";
	Иначе
		Возврат "20";	
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли
