#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Приказ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приказ";
	КомандаПечати.Представление = НСтр("ru='Приказ';uk='Наказ'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// Накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru='Накладная';uk='Накладна'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";

	// Ведомость взвешиваний
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВедомостьВзвешивания";
	КомандаПечати.Представление = НСтр("ru='Ведомость взвешиваний';uk='Відомість зважувань'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Реестр товарно-транспортных накладных (внутренних)""';uk='Реєстр документів ""Реєстр товарно-транспортних накладних (внутрішніх)""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
	// Ведомость взвешиваний
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВедомостьВзвешивания2021";
	КомандаПечати.Представление = НСтр("ru='Ведомость взвешиваний (2021)';uk='Відомість зважувань (2021)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
    
    // Накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная_2021";
	КомандаПечати.Представление = НСтр("ru='Накладная (2021)';uk='Накладна (2021)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";

КонецПроцедуры		

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приказ") Тогда		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Приказ", НСтр("ru='Приказ';uk='Наказ'"), 
		ПечатьПриказ(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),, "Документ.ИНАГРО_РеестрТТНВнутр.ПФ_MXL_Приказ", ,Истина);  
		
	КонецЕсли;
	
	// Проверяем, нужно ли для макета формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", НСтр("ru='Накладная';uk='Накладна'"), 
		ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),, "Документ.ИНАГРО_РеестрТТНВнутр.ПФ_MXL_Накладная", ,Истина);
		
	КонецЕсли; 	
	
		// Проверяем, нужно ли для макета формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВедомостьВзвешивания") Тогда		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ВедомостьВзвешивания", НСтр("ru='Ведомость взвешивания';uk='Відомість зважування'"), 
		ПечатьВедомостьВзвешиваний(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),, "Документ.ИНАГРО_РеестрТТНВнутр.ПФ_MXL_ВедомостьВзвешиваний", ,Истина);
		
	КонецЕсли;
	
		// Проверяем, нужно ли для макета формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВедомостьВзвешивания2021") Тогда		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ВедомостьВзвешивания2021", НСтр("ru='Ведомость взвешивания (2021)';uk='Відомість зважування (2021)'"), 
		ПечатьВедомостьВзвешиваний2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),, "Документ.ИНАГРО_РеестрТТНВнутр.ПФ_MXL_UK_ВедомостьВзвешиваний_2021", ,Истина);
		
	КонецЕсли;

    	// Проверяем, нужно ли для макета формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная_2021") Тогда		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная_2021", НСтр("ru='Накладная (2021)';uk='Накладна (2021)'"), 
		ПечатьНакладная_2021(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),, "Документ.ИНАГРО_РеестрТТНВнутр.ПФ_MXL_UK_Накладная_2021", ,Истина);
		
    КонецЕсли; 	
    
КонецПроцедуры

Функция ПечатьПриказ (МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_РеестрТТНВнутр_Приказ";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВнутр.ПФ_MXL_Приказ");
	
	// печать производится на языке, указанном в настройках
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	//Шапка
	Запрос = новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВнутр.Организация.НаименованиеПолное КАК Организация,
		|	ИНАГРО_РеестрТТНВнутр.Дата КАК ДатаДок,
		|	ИНАГРО_РеестрТТНВнутр.Номер КАК НомерДок,
		|	ИНАГРО_РеестрТТНВнутр.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВнутр.НовыйСклад КАК НовыйСклад,
		|	ИНАГРО_РеестрТТНВнутр.Урожай КАК Урожай,
		|	ИНАГРО_РеестрТТНВнутр.Организация КАК ОрганизацияСсылка,
		|	ИНАГРО_РеестрТТНВнутр.УдалитьВладелец КАК Владелец
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВнутр КАК ИНАГРО_РеестрТТНВнутр
		|ГДЕ
		|	ИНАГРО_РеестрТТНВнутр.Ссылка = &Ссылка";
	
	//Строка
	ЗапросТТН = новый Запрос;
	ЗапросТТН.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.НомерСтроки КАК Ном,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдИзмерения,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ФизическийВес КАК Вес,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Транспорт КАК Транспорт,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.НомерАнализа КАК НомерАнализа
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВнутр.СписокТТН КАК ИНАГРО_РеестрТТНВнутрСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Ссылка = &Ссылка"; 
	
	ПервыйДокумент = Истина;	
	
	Для каждого Ссылка Из МассивОбъектов Цикл 
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1; 		
				
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();  
		
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(Шапка.ОрганизацияСсылка,Шапка.ДатаДок); 
		
		ОблШапка = Макет.ПолучитьОбласть("Шапка");
		ОблШапка.Параметры.Заполнить(Шапка);
		ОблШапка.Параметры.ДатаДок =  Формат(Шапка.ДатаДок, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		
		ТабДокумент.Вывести(ОблШапка);
		
		// Список ТТН
		
		ЗапросТТН.УстановитьПараметр("Ссылка",Ссылка);
		ТабСписокТТН = ЗапросТТН.Выполнить().Выгрузить();
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		
		Для каждого Стр Из ТабСписокТТН Цикл  			
			ОблСтрока.Параметры.Заполнить(Стр);
			//ОблСтрока.Параметры.Владелец = Шапка.Владелец;
			ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(ОблСтрока.Параметры.Владелец);
			ТабДокумент.Вывести(ОблСтрока);
		КонецЦикла;
		
		//Дно
		ОблДно = Макет.ПолучитьОбласть("Дно");
		ОБлДно.Параметры.ИтогВес = ТабСписокТТН.Итог("Вес");
		ОблДно.Параметры.ДолжностьДиректора = ?(ЗначениеЗаполнено(Руководители.ДолжностьРуководителя),Руководители.ДолжностьРуководителя + ": ","")  + ?(ЗначениеЗаполнено(Руководители.Руководитель),Руководители.Руководитель,"");
		ОблДно.Параметры.ГлавБух = Руководители.ГлавныйБухгалтер;
		ТабДокумент.Вывести(ОблДно);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка);

	КонецЦикла;

	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьНакладная (МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_РеестрТТНВнутр_Накладная";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВнутр.ПФ_MXL_Накладная");
	
	// печать производится на языке, указанном в настройках
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать; 	
		
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВнутр.Ссылка,
		|	ИНАГРО_РеестрТТНВнутр.Номер,
		|	ИНАГРО_РеестрТТНВнутр.Дата,
		|	ИНАГРО_РеестрТТНВнутр.Авто,
		|	ИНАГРО_РеестрТТНВнутр.ВидХранения,
		|	ИНАГРО_РеестрТТНВнутр.ВторойЧленКомиссии,
		|	ИНАГРО_РеестрТТНВнутр.ДатаОкончанияИнвентаризации,
		|	ИНАГРО_РеестрТТНВнутр.Комментарий,
		|	ИНАГРО_РеестрТТНВнутр.МестоХранения,
		|	ИНАГРО_РеестрТТНВнутр.НоваяНоменклатура,
		|	ИНАГРО_РеестрТТНВнутр.НовоеМестоХранения,
		|	ИНАГРО_РеестрТТНВнутр.НовыйСклад,
		|	ИНАГРО_РеестрТТНВнутр.НовыйУрожай,
		|	ИНАГРО_РеестрТТНВнутр.Номенклатура,
		|	ИНАГРО_РеестрТТНВнутр.Организация,
		|	ИНАГРО_РеестрТТНВнутр.Ответственный,
		|	ИНАГРО_РеестрТТНВнутр.ПервыйЧленКомиссии,
		|	ИНАГРО_РеестрТТНВнутр.Перевес,
		|	ИНАГРО_РеестрТТНВнутр.ПредседательКомиссии,
		|	ИНАГРО_РеестрТТНВнутр.Склад,
		|	ИНАГРО_РеестрТТНВнутр.ТретийЧленКомиссии,
		|	ИНАГРО_РеестрТТНВнутр.Урожай,
		|	ИНАГРО_РеестрТТНВнутр.ФизическийВес,
		|	ИНАГРО_РеестрТТНВнутр.Представление
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВнутр КАК ИНАГРО_РеестрТТНВнутр
		|ГДЕ
		|	ИНАГРО_РеестрТТНВнутр.Ссылка = &Ссылка";
	
	ЗапросТТН = Новый Запрос;
	ЗапросТТН.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.НомерСтроки,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Транспорт,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ФизическийВес КАК ФизическийВес,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ФизическийВес КАК Вес,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.НомерТТН,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Владелец,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ДоговорКонтрагента,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ЗачетныйВес,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ЛабораторныйАнализ,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.НомерАнализа,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Влажность,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Количество,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ФизическийВес * ИНАГРО_РеестрТТНВнутрСписокТТН.Влажность * 0.01 КАК ЦПВлажность,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ФизическийВес * ИНАГРО_РеестрТТНВнутрСписокТТН.СорнаяПримесь * 0.01 КАК ЦПСорнаяПримесь,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ФизическийВес * ИНАГРО_РеестрТТНВнутрСписокТТН.ЗерноваяПримесь * 0.01 КАК ЦПЗерноваяПримесь
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВнутр.СписокТТН КАК ИНАГРО_РеестрТТНВнутрСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.Влажность КАК Влажность,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.СорнаяПримесь КАК СорнаяПримесь,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ЗерноваяПримесь КАК ЗерноваяПримесь,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН КАК ТТН,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ФизическийВес КАК Вес,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ЗачетныйВес КАК ЗачВес,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Владелец КАК Владелец,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.Водитель КАК Водитель
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВнутр.СписокТТН КАК ИНАГРО_РеестрТТНВнутрСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Ссылка = &Ссылка
		|ИТОГИ
		|	СУММА(Влажность),
		|	СУММА(СорнаяПримесь),
		|	СУММА(ЗерноваяПримесь),
		|	СУММА(Вес),
		|	СУММА(ЗачВес)
		|ПО
		|	Владелец"; 	
	
	ПервыйДокумент = Истина; 
	
	Для каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ЗапросШапка.УстановитьПараметр("Ссылка",Ссылка);
		Шапка = ЗапросШапка.Выполнить().Выбрать();
		Шапка.Следующий();	
		
		Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизации(Шапка.Организация,Шапка.Дата); 
		
		//Шапка
		ОблШапка = Макет.ПолучитьОбласть("Шапка");
		ОблШапка.Параметры.Организация = ?(Шапка.Организация.НаименованиеПолное = "",Шапка.Организация.Наименование,Шапка.Организация.НаименованиеПолное);
		ОблШапка.Параметры.НомерДок = Шапка.Номер;
		ОблШапка.Параметры.ДатаДок =  Формат(Шапка.Дата, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		ОблШапка.Параметры.Склад = Шапка.Склад;
		ОблШапка.Параметры.НовыйСклад = Шапка.НовыйСклад;
		ОблШапка.Параметры.ЗавСкладом = ИНАГРО_Элеватор.ОтветственныеЛица(Шапка.Организация, Шапка.Дата, Шапка.Склад);
		ОблШапка.Параметры.ЗавНовымСкладом = ИНАГРО_Элеватор.ОтветственныеЛица(Шапка.Организация, Шапка.Дата, Шапка.НовыйСклад);
		
		ОблШапка.Параметры.Номенклатура 	= Шапка.Номенклатура;
		
		ЗапросТТН.УстановитьПараметр("Ссылка",Ссылка);
		Результат = ЗапросТТН.ВыполнитьПакет();
		Таб = Результат[0].Выгрузить();
		
		ЦПВлажность = Таб.Итог("ЦПВлажность")/Таб.Итог("ФизическийВес")*100;
		ЦПСорнаяПримесь = Таб.Итог("ЦПСорнаяПримесь")/Таб.Итог("ФизическийВес")*100;
		ЦПЗерноваяПримесь = Таб.Итог("ЦПЗерноваяПримесь")/Таб.Итог("ФизическийВес")*100;
		
		ОблШапка.Параметры.Влажность 		= ОКР(ЦПВлажность,0);
		ОблШапка.Параметры.СорнаяПримесь	= ОКР(ЦПСорнаяПримесь,0);
		ОблШапка.Параметры.ЗерноваяПримесь 	= ОКР(ЦПЗерноваяПримесь,0);
		
		ОблШапка.Параметры.ИтогВес 			= Таб.Итог("ФизическийВес");
		ОблШапка.Параметры.ИтогзачВес 		= Таб.Итог("ЗачетныйВес");
		ТабДокумент.Вывести(ОблШапка);
		
		Выборка = Результат[1].Выбрать();
		
		Пока Выборка.Следующий() Цикл		
			Пока Выборка.Группировка() = "Владелец" Цикл
				ОблВладелец = Макет.ПолучитьОбласть("Владелец");
				ОблВладелец.Параметры.Заполнить(Выборка);
				//ОблВладелец.Параметры.Владелец = Ссылка.Владелец; //
				ИНАГРО_Элеватор.ПолучитьНаименованияКонтрагента(ОблВладелец.Параметры.Владелец);
				ТабДокумент.Вывести(ОблВладелец);
				ОблТТН = Макет.ПолучитьОбласть("ТТН");
				Выборка.Следующий();
				ТабДокумент.НачатьГруппуСтрок();
				
				Пока Выборка.Группировка() = "" Цикл
					ОблТТН.Параметры.Заполнить(Выборка);	
					ТабДокумент.Вывести(ОблТТН);
					
					Выборка.Следующий();
				КонецЦикла;
				ТабДокумент.ЗакончитьГруппуСтрок();
				
			КонецЦикла;
		КонецЦикла;
		
		//Дно
		ОблДно = Макет.ПолучитьОбласть("Дно");
		ОблДно.Параметры.ИтогВес    = Таб.Итог("ФизическийВес");
		ОБлДно.Параметры.ИтогЗачВес = Таб.Итог("ЗачетныйВес");
		ОблДно.Параметры.Директор   = Руководители.Руководитель;
		ТабДокумент.Вывести(ОблДно);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Ссылка); 
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьНакладная_2021 (МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
    ТабДокумент = Новый ТабличныйДокумент;
    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_РеестрТТНВнутр_Накладная_2021";
    
    Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВнутр.ПФ_MXL_UK_Накладная_2021");
    
    // печать производится на языке, указанном в настройках
    КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать; 	
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ИНАГРО_РеестрТТНВнутр.Ссылка КАК Ссылка,
    |   ИНАГРО_РеестрТТНВнутр.Номер КАК Номер,
    |   ИНАГРО_РеестрТТНВнутр.Дата КАК Дата,
    |   ИНАГРО_РеестрТТНВнутр.Авто КАК Авто,
    |   ИНАГРО_РеестрТТНВнутр.ВидХранения КАК ВидХранения,
    |   ИНАГРО_РеестрТТНВнутр.ВторойЧленКомиссии КАК ВторойЧленКомиссии,
    |   ИНАГРО_РеестрТТНВнутр.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
    |   ИНАГРО_РеестрТТНВнутр.МестоХранения КАК МестоХранения,
    |   ИНАГРО_РеестрТТНВнутр.НоваяНоменклатура КАК НоваяНоменклатура,
    |   ИНАГРО_РеестрТТНВнутр.НовоеМестоХранения КАК НовоеМестоХранения,
    |   ИНАГРО_РеестрТТНВнутр.НовыйСклад КАК НовыйСклад,
    |   ИНАГРО_РеестрТТНВнутр.НовыйУрожай КАК НовыйУрожай,
    |   ИНАГРО_РеестрТТНВнутр.Номенклатура КАК Номенклатура,
    |   ИНАГРО_РеестрТТНВнутр.Организация КАК Организация,
    |   ИНАГРО_РеестрТТНВнутр.Ответственный КАК Ответственный,
    |   ИНАГРО_РеестрТТНВнутр.ПервыйЧленКомиссии КАК ПервыйЧленКомиссии,
    |   ИНАГРО_РеестрТТНВнутр.Перевес КАК Перевес,
    |   ИНАГРО_РеестрТТНВнутр.ПредседательКомиссии КАК ПредседательКомиссии,
    |   ИНАГРО_РеестрТТНВнутр.Склад КАК Склад,
    |   ИНАГРО_РеестрТТНВнутр.ТретийЧленКомиссии КАК ТретийЧленКомиссии,
    |   ИНАГРО_РеестрТТНВнутр.Урожай КАК Урожай,
    |   ИНАГРО_РеестрТТНВнутр.ФизическийВес КАК ФизическийВес,
    |   ИНАГРО_РеестрТТНВнутр.Представление КАК Представление,
    |   ИНАГРО_РеестрТТНВнутр.Организация.КодПоЕДРПОУ КАК ОрганизацияКодПоЕДРПОУ,
    |   ИНАГРО_РеестрТТНВнутр.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
    |   ИНАГРО_РеестрТТНВнутр.Организация.Наименование КАК ОрганизацияНаименование,
    |   СУММА(ИНАГРО_РеестрТТНВнутрСписокТТН.ЗачетныйВес) КАК ЗачетныйВес,
    |   СУММА(ИНАГРО_РеестрТТНВнутрСписокТТН.ФизическийВес) КАК ФизическийВесТЧ,
    |   СРЕДНЕЕ(ИНАГРО_РеестрТТНВнутрСписокТТН.Влажность) КАК Влажность,
    |   СРЕДНЕЕ(ИНАГРО_РеестрТТНВнутрСписокТТН.СорнаяПримесь) КАК СорнаяПримесь,
    |   СРЕДНЕЕ(ИНАГРО_РеестрТТНВнутрСписокТТН.ЗерноваяПримесь) КАК ЗерноваяПримесь
    |ИЗ
    |   Документ.ИНАГРО_РеестрТТНВнутр.СписокТТН КАК ИНАГРО_РеестрТТНВнутрСписокТТН
    |       ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИНАГРО_РеестрТТНВнутр КАК ИНАГРО_РеестрТТНВнутр
    |       ПО ИНАГРО_РеестрТТНВнутрСписокТТН.Ссылка = ИНАГРО_РеестрТТНВнутр.Ссылка
    |ГДЕ
    |   ИНАГРО_РеестрТТНВнутр.Ссылка В(&МассивОбъектов)
    |
    |СГРУППИРОВАТЬ ПО
    |   ИНАГРО_РеестрТТНВнутр.Ссылка,
    |   ИНАГРО_РеестрТТНВнутр.Номер,
    |   ИНАГРО_РеестрТТНВнутр.Дата,
    |   ИНАГРО_РеестрТТНВнутр.Авто,
    |   ИНАГРО_РеестрТТНВнутр.ВидХранения,
    |   ИНАГРО_РеестрТТНВнутр.ВторойЧленКомиссии,
    |   ИНАГРО_РеестрТТНВнутр.ДатаОкончанияИнвентаризации,
    |   ИНАГРО_РеестрТТНВнутр.МестоХранения,
    |   ИНАГРО_РеестрТТНВнутр.НоваяНоменклатура,
    |   ИНАГРО_РеестрТТНВнутр.НовоеМестоХранения,
    |   ИНАГРО_РеестрТТНВнутр.НовыйСклад,
    |   ИНАГРО_РеестрТТНВнутр.НовыйУрожай,
    |   ИНАГРО_РеестрТТНВнутр.Номенклатура,
    |   ИНАГРО_РеестрТТНВнутр.Организация,
    |   ИНАГРО_РеестрТТНВнутр.Ответственный,
    |   ИНАГРО_РеестрТТНВнутр.ПервыйЧленКомиссии,
    |   ИНАГРО_РеестрТТНВнутр.Перевес,
    |   ИНАГРО_РеестрТТНВнутр.ПредседательКомиссии,
    |   ИНАГРО_РеестрТТНВнутр.Склад,
    |   ИНАГРО_РеестрТТНВнутр.ТретийЧленКомиссии,
    |   ИНАГРО_РеестрТТНВнутр.Урожай,
    |   ИНАГРО_РеестрТТНВнутр.ФизическийВес,
    |   ИНАГРО_РеестрТТНВнутр.Представление,
    |   ИНАГРО_РеестрТТНВнутр.Организация.КодПоЕДРПОУ,
    |   ИНАГРО_РеестрТТНВнутр.Организация.НаименованиеПолное,
    |   ИНАГРО_РеестрТТНВнутр.Организация.Наименование
    |ИТОГИ ПО
    |   Ссылка";
    
    Запрос.УстановитьПараметр("МассивОбъектов",МассивОбъектов);
    Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    ПервыйДокумент = Истина; 
    
    Пока Выборка.Следующий() Цикл
        
        Если Не ПервыйДокумент Тогда
            ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
        
        Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизацииИмяФамилия(Выборка.Организация, Выборка.Дата); 
        
        //Шапка
        ОблШапка = Макет.ПолучитьОбласть("Шапка");
        ОблШапка.Параметры.Организация = ?(Выборка.ОрганизацияНаименованиеПолное = "", Выборка.ОрганизацияНаименование, Выборка.ОрганизацияНаименованиеПолное);
        ОблШапка.Параметры.ДатаДень = Формат(Выборка.Дата, "ДФ=дд");
        ОблШапка.Параметры.ДатаМесяц = Формат(Выборка.Дата, "ДФ=ММММ");
        ОблШапка.Параметры.ДатаГод = Формат(Выборка.Дата, "ДФ=гггг");
        
        ОблШапка.Параметры.СкладОткуда = Выборка.Склад;
        ОблШапка.Параметры.СкладКуда = Выборка.НовыйСклад;
        ОблШапка.Параметры.ЗавСкладом = ИНАГРО_Элеватор.ОтветственныеЛицаИмяФамилия(Выборка.Организация, Выборка.Дата, Выборка.Склад);
        ОблШапка.Параметры.ЗавНовымСкладом = ИНАГРО_Элеватор.ОтветственныеЛицаИмяФамилия(Выборка.Организация, Выборка.Дата, Выборка.НовыйСклад);
        ОблШапка.Параметры.КодЕДРПОУ = Выборка.ОрганизацияКодПоЕДРПОУ;
        ТабДокумент.Вывести(ОблШапка);
        
        
        ОблСтр = Макет.ПолучитьОбласть("Строка");
        ВыборкаДетальныеЗаписи = Выборка.Выбрать(); 
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            ОблСтр.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
            ОблСтр.Параметры.Код = ВыборкаДетальныеЗаписи.Номенклатура.Код;
            ОблСтр.Параметры.ПринадлежитПереместить = ВыборкаДетальныеЗаписи.ФизическийВесТЧ;
            ОблСтр.Параметры.ФактическиПеремещено = ВыборкаДетальныеЗаписи.ЗачетныйВес;
            
            ТабДокумент.Вывести(ОблСтр);		
        КонецЦикла;
        ОблПодписи = Макет.ПолучитьОбласть("Дно");
        
        Руководители = ИНАГРО_Элеватор.ОтветственныеЛицаОрганизацииИмяФамилия(Выборка.Организация,Выборка.Дата);
        ОблПодписи.Параметры.ФИОНачальникаПТЛ = Руководители.НачальникВТЛ;
        ОблПодписи.Параметры.ФИОДиректора = Руководители.Руководитель;
        
        ПечОтпустил = "";
        ФИООтпустил = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Выборка.Дата, Новый Структура("ФизическоеЛицо", ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(Выборка.Склад, Выборка.Дата)));
        Если ФИООтпустил.Количество() > 0 Тогда
            ПечОтпустил = СокрЛП(ФИООтпустил[0].Имя)
            + " "
            + ВРег(СокрЛП(ФИООтпустил[0].Фамилия)); 
        Иначе
            ПечОтпустил = "";									 
        КонецЕсли;
        ОблПодписи.Параметры.ФИООтпустил = ПечОтпустил;
        
        ПечПолучил = "";
        ФИОПолучил = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Выборка.Дата, Новый Структура("ФизическоеЛицо", ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(Выборка.НовыйСклад, Выборка.Дата)));
        Если ФИОПолучил.Количество() > 0 Тогда
            ПечПолучил = СокрЛП(ФИОПолучил[0].Имя)
            + " "
            + ВРег(СокрЛП(ФИОПолучил[0].Фамилия)); 
        Иначе
            ПечПолучил = "";									 
        КонецЕсли;
        ОблПодписи.Параметры.ФИОПолучил = ПечПолучил;
        
        
        ТабДокумент.Вывести(ОблПодписи);
        
        
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
        
    КонецЦикла;
    
    Возврат ТабДокумент;
    
КонецФункции

Функция ПечатьВедомостьВзвешиваний (МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_РеестрТТНВнутр_ВедомостьВзвешиваний";	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВнутр.ПФ_MXL_ВедомостьВзвешиваний");
	
	// печать производится на языке, указанном в настройках
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать; 	
	
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВнутр.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВнутр.Организация.КодПоЕДРПОУ КАК ЕДРПОУ,
		|	ИНАГРО_РеестрТТНВнутр.Дата КАК ДатаДок,
		|	ИНАГРО_РеестрТТНВнутр.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВнутр.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВнутр.ПервыйЧленКомиссии КАК ЧленКомиссии1,
		|	ИНАГРО_РеестрТТНВнутр.ВторойЧленКомиссии КАК ЧленКомиссии2,
		|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК ЗавСклад,
		|	ИНАГРО_РеестрТТНВнутр.ТретийЧленКомиссии КАК ЧленКомиссии3
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВнутр КАК ИНАГРО_РеестрТТНВнутр
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(
		|				&Дата,
		|				СтруктурнаяЕдиница В
		|					(ВЫБРАТЬ
		|						ИНАГРО_РеестрТТНВнутр.Склад
		|					ИЗ
		|						Документ.ИНАГРО_РеестрТТНВнутр КАК ИНАГРО_РеестрТТНВнутр
		|					ГДЕ
		|						ИНАГРО_РеестрТТНВнутр.Ссылка = &Ссылка)) КАК ОтветственныеЛицаСрезПоследних
		|		ПО ИНАГРО_РеестрТТНВнутр.Склад = ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница
		|ГДЕ
		|	ИНАГРО_РеестрТТНВнутр.Ссылка = &Ссылка";
	
	ЗапросТТН = Новый Запрос;
	ЗапросТТН.Текст =
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.НомерСтроки КАК Ном,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Транспорт КАК Транспорт,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.Номенклатура.БазоваяЕдиницаИзмерения.Наименование КАК Ед,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК Код,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесБрутто + ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесБрутто1 КАК МассаБрутто,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесНетто + ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесНетто1 КАК МассаНетто,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесТары + ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесТары1 КАК ТараБрутто,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесТары КАК ТараКоличество,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН КАК ТТН
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВнутр.СписокТТН КАК ИНАГРО_РеестрТТНВнутрСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Ссылка = &Ссылка";

	
	ПервыйДокумент = Истина;
	
	Для каждого Ссылка Из МассивОбъектов Цикл  
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	//Шапка
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	ЗапросШапка.УстановитьПараметр("Ссылка",Ссылка); 
	ЗапросШапка.УстановитьПараметр("Дата",Ссылка.Дата);
	
	Шапка = ЗапросШапка.Выполнить().Выбрать();
	Шапка.Следующий();
	ОблШапка.Параметры.Заполнить(Шапка);
	ОблШапка.Параметры.ДатаДок = Формат(Шапка.ДатаДок, "ДФ='дд ММММ гггг';Л="+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	
	ОблШапка.Параметры.Организация = ?(ЗначениеЗаполнено(Шапка.Организация.НаименованиеПолное),Шапка.Организация.НаименованиеПолное,Шапка.Организация);
	ТабДокумент.Вывести(ОблШапка);
	
	//Строка
	ОблСтрока = Макет.ПолучитьОбласть("Строка");
	ЗапросТТН.УстановитьПараметр("Ссылка",Ссылка);
	
	Таб = ЗапросТТН.Выполнить().Выгрузить();
	Для Каждого Стр ИЗ Таб Цикл			
		ОблСтрока.Параметры.Заполнить(Стр);
		ТабДокумент.Вывести(ОблСтрока);
	КонецЦикла;
	
	ОблДно = Макет.ПолучитьОбласть("Дно");	
	ВсегоВес = Таб.Итог("Вес");
	ОблДно.Параметры.ВесПрописью = ""+ВсегоВес+" кг. ("+ИНАГРО_Элеватор.ВернутьВесПрописью(КодЛокализации(),ВсегоВес)+")";
	ОблДно.Параметры.ЧленКомиссии1 = Шапка.ЧленКомиссии1;
	ОблДно.Параметры.ЧленКомиссии2 = Шапка.ЧленКомиссии2;
	ОблДно.Параметры.ЧленКомиссии3 = Шапка.ЧленКомиссии3;
	ОблДно.Параметры.ЗавСклад 	   = Шапка.ЗавСклад;
	
	ТабДокумент.Вывести(ОблДно);
	
	// В табличном документе зададим имя области, в которую был 
	// выведен объект. Нужно для возможности печати покомплектно.
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
	НомерСтрокиНачало, ОбъектыПечати, Ссылка); 
	
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции 

Функция ПечатьВедомостьВзвешиваний2021 (МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_РеестрТТНВнутр_ВедомостьВзвешиваний2021";	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_РеестрТТНВнутр.ПФ_MXL_UK_ВедомостьВзвешиваний_2021");
	
	// печать производится на языке, указанном в настройках
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет.КодЯзыкаМакета = КодЯзыкаПечать; 	
	
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВнутр.Организация КАК Организация,
		|	ИНАГРО_РеестрТТНВнутр.Организация.КодПоЕДРПОУ КАК ЕДРПОУ,
		|	ИНАГРО_РеестрТТНВнутр.Дата КАК ДатаДок,
		|	ИНАГРО_РеестрТТНВнутр.Номенклатура КАК Номенклатура,
		|	ИНАГРО_РеестрТТНВнутр.Склад КАК Склад,
		|	ИНАГРО_РеестрТТНВнутр.ПервыйЧленКомиссии КАК ЧленКомиссии1,
		|	ИНАГРО_РеестрТТНВнутр.ВторойЧленКомиссии КАК ЧленКомиссии2,
		|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК ЗавСклад,
		|	ИНАГРО_РеестрТТНВнутр.ТретийЧленКомиссии КАК ЧленКомиссии3,
		|	ИНАГРО_РеестрТТНВнутр.ПредседательКомиссии КАК ПредседательКомиссии
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВнутр КАК ИНАГРО_РеестрТТНВнутр
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(
		|				&Дата,
		|				СтруктурнаяЕдиница В
		|					(ВЫБРАТЬ
		|						ИНАГРО_РеестрТТНВнутр.Склад
		|					ИЗ
		|						Документ.ИНАГРО_РеестрТТНВнутр КАК ИНАГРО_РеестрТТНВнутр
		|					ГДЕ
		|						ИНАГРО_РеестрТТНВнутр.Ссылка = &Ссылка)) КАК ОтветственныеЛицаСрезПоследних
		|		ПО ИНАГРО_РеестрТТНВнутр.Склад = ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница
		|ГДЕ
		|	ИНАГРО_РеестрТТНВнутр.Ссылка = &Ссылка";
	
	ЗапросТТН = Новый Запрос;
	ЗапросТТН.Текст =
		"ВЫБРАТЬ
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.НомерСтроки КАК Ном,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Транспорт КАК Транспорт,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.Номенклатура.БазоваяЕдиницаИзмерения.Наименование КАК Ед,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК Код,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесБрутто + ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесБрутто1 КАК МассаБрутто,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесНетто + ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесНетто1 КАК МассаНетто,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесТары + ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесТары1 КАК ТараБрутто,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.ВесТары КАК ТараКоличество,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН.Вес КАК Вес,
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.ТТН КАК ТТН
		|ИЗ
		|	Документ.ИНАГРО_РеестрТТНВнутр.СписокТТН КАК ИНАГРО_РеестрТТНВнутрСписокТТН
		|ГДЕ
		|	ИНАГРО_РеестрТТНВнутрСписокТТН.Ссылка = &Ссылка";

	
	ПервыйДокумент = Истина;
	
	Для каждого Ссылка Из МассивОбъектов Цикл  
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	//Шапка
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	ЗапросШапка.УстановитьПараметр("Ссылка",Ссылка); 
	ЗапросШапка.УстановитьПараметр("Дата",Ссылка.Дата);
	
	Шапка = ЗапросШапка.Выполнить().Выбрать();
	Шапка.Следующий();
	ОблШапка.Параметры.Заполнить(Шапка);
	ОблШапка.Параметры.ДатаДок = Формат(Шапка.ДатаДок, "Л=; ДЛФ=DD"+ Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
	
	ОблШапка.Параметры.Организация = ?(ЗначениеЗаполнено(Шапка.Организация.НаименованиеПолное),Шапка.Организация.НаименованиеПолное,Шапка.Организация);
	ТабДокумент.Вывести(ОблШапка);
	
	//Строка
	ОблСтрока = Макет.ПолучитьОбласть("Строка");
	ЗапросТТН.УстановитьПараметр("Ссылка",Ссылка);
	
	Таб = ЗапросТТН.Выполнить().Выгрузить();
	Для Каждого Стр ИЗ Таб Цикл			
		ОблСтрока.Параметры.Заполнить(Стр);
		ТабДокумент.Вывести(ОблСтрока);
	КонецЦикла;
	
	ОблДно = Макет.ПолучитьОбласть("Дно");	
	ВсегоВес = Таб.Итог("Вес");
	ОблДно.Параметры.ВесПрописью = ""+ВсегоВес+" кг. ("+ИНАГРО_Элеватор.ВернутьВесПрописью(КодЯзыкаПечать,ВсегоВес)+")";
		 
	ПечПредседательКомиссии = "";
	ФИОПредседательКомиссии = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Шапка.ДатаДок, Новый Структура("ФизическоеЛицо", Шапка.ПредседательКомиссии));
	Если ФИОПредседательКомиссии.Количество() > 0 Тогда
		ПечПредседательКомиссии = СокрЛП(ФИОПредседательКомиссии[0].Имя)
										 + " "
										 + ВРег(СокрЛП(ФИОПредседательКомиссии[0].Фамилия)); 
	Иначе
		ПечПредседательКомиссии = "" + Шапка.ПредседательКомиссии;									 
	КонецЕсли;
	ОблДно.Параметры.ЧленКомиссии1 = ПечПредседательКомиссии;
	ДолжностьЧленКомиссии1 = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Шапка.Организация,Шапка.ПредседательКомиссии,Шапка.ДатаДок);
	ОблДно.Параметры.Должность1 = ?(ПустаяСтрока(ДолжностьЧленКомиссии1.Должность),"",ДолжностьЧленКомиссии1.Должность);
	
	
	ПечЧленКомиссии1 = "";
	ФИОЧленКомиссии1 = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Шапка.ДатаДок, Новый Структура("ФизическоеЛицо", Шапка.ЧленКомиссии1));
	Если ФИОЧленКомиссии1.Количество() > 0 Тогда
		ПечЧленКомиссии1 = СокрЛП(ФИОЧленКомиссии1[0].Имя)
										 + " "
										 + ВРег(СокрЛП(ФИОЧленКомиссии1[0].Фамилия)); 
	Иначе
		ПечЧленКомиссии1 = "" + Шапка.ЧленКомиссии1;									 
	КонецЕсли;
	ОблДно.Параметры.ЧленКомиссии2 = ПечЧленКомиссии1;
	
	ДолжностьЧленКомиссии2 = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Шапка.Организация,Шапка.ЧленКомиссии1,Шапка.ДатаДок); 
	ОблДно.Параметры.Должность2 = ?(ПустаяСтрока(ДолжностьЧленКомиссии2.Должность),"",ДолжностьЧленКомиссии2.Должность);
	
	
	ПечЧленКомиссии2 = "";
	ФИОЧленКомиссии2 = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Шапка.ДатаДок, Новый Структура("ФизическоеЛицо", Шапка.ЧленКомиссии2));
	Если ФИОЧленКомиссии2.Количество() > 0 Тогда
		ПечЧленКомиссии2 = СокрЛП(ФИОЧленКомиссии2[0].Имя)
										 + " "
										 + ВРег(СокрЛП(ФИОЧленКомиссии2[0].Фамилия)); 
	Иначе
		ПечЧленКомиссии2 = "" + Шапка.ЧленКомиссии2;									 
	КонецЕсли;
	ОблДно.Параметры.ЧленКомиссии3 = ПечЧленКомиссии2;
	ДолжностьЧленКомиссии3 = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Шапка.Организация,Шапка.ЧленКомиссии2,Шапка.ДатаДок);
	ОблДно.Параметры.Должность3 = ?(ПустаяСтрока(ДолжностьЧленКомиссии3.Должность),"",ДолжностьЧленКомиссии3.Должность);
	
	
	ПечЧленКомиссии3 = "";
	ФИОЧленКомиссии3 = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(Шапка.ДатаДок, Новый Структура("ФизическоеЛицо", Шапка.ЧленКомиссии3));
	Если ФИОЧленКомиссии3.Количество() > 0 Тогда
		ПечЧленКомиссии3 = СокрЛП(ФИОЧленКомиссии3[0].Имя)
										 + " "
										 + ВРег(СокрЛП(ФИОЧленКомиссии3[0].Фамилия)); 
	Иначе
		ПечЧленКомиссии3 = "" + Шапка.ЧленКомиссии3;									 
	КонецЕсли;
	ОблДно.Параметры.ЧленКомиссии4 = ПечЧленКомиссии3;
	ДолжностьЧленКомиссии4 = ИНАГРО_ЗарплатаКадрыРасширенный.ДанныеФизЛица(Шапка.Организация,Шапка.ЧленКомиссии3,Шапка.ДатаДок);
	ОблДно.Параметры.Должность4 = ?(ПустаяСтрока(ДолжностьЧленКомиссии4.Должность),"",ДолжностьЧленКомиссии4.Должность);
	
	
	
	
	ТабДокумент.Вывести(ОблДно);
	
	// В табличном документе зададим имя области, в которую был 
	// выведен объект. Нужно для возможности печати покомплектно.
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
	НомерСтрокиНачало, ОбъектыПечати, Ссылка); 
	
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область ПрограммныйИнтерфейс

// Заполняет счета учета номенклатуры в табличной части документа
//
// Параметры:
// Объект - СправочникСсылка - объект контактной информации
// ИмяТабличнойЧасти - имя табличной части.
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, Склад, ОтражатьВБухгалтерскомУчете");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
		Объект.Номенклатура, ДанныеОбъекта);
	
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре);
	КонецЦикла;

КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - Строка - строка табличной части документа
//  СведенияОНоменклатуре - Структура - структура сведений о номенклатуре, либо структура счетов учета.
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре) Экспорт
	
	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчетаБУ") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;

	Если ДанныеОбъекта.ОтражатьВБухгалтерскомУчете Тогда
		
		Если ИНАГРО_Элеватор.ОпределитьПринадлежностьКонтрагента(СтрокаТабличнойЧасти.Владелец) Тогда
			СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаБУ;				
		Иначе
			СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаДоп;				
		КонецЕсли;
		
		СтрокаТабличнойЧасти.НовыйСчетУчетаБУ = СтрокаТабличнойЧасти.СчетУчетаБУ;		
		
	Иначе
		
		СтрокаТабличнойЧасти.СчетУчетаБУ      = ПланыСчетов.Хозрасчетный.ПустаяСсылка();	
		СтрокаТабличнойЧасти.НовыйСчетУчетаБУ = ПланыСчетов.Хозрасчетный.ПустаяСсылка();		
		
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#КонецЕсли