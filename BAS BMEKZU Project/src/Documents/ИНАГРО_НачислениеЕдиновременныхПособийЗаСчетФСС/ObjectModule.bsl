#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИНАГРО_ПроведениеРасчетов.СформироватьКраткийСоставСотрудников(ЭтотОбъект, "Начисления");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	// Структура, содержащая имена регистров сведений по которым надо проводить документ.
	
	Заголовок = ОбщегоНазначенияБПВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();
	
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			
		// получим реквизиты табличной части
		РезультатЗапросаПоНачислениям = СформироватьЗапросПоНачисления(ВыборкаПоШапкеДокумента);
		ВыборкаПоНачислениям = РезультатЗапросаПоНачислениям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоНачислениям.Следующий() Цикл 
				
			ДобавитьСтрокуОсновныхНачислений(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям);
			Если НЕ ВыборкаПоНачислениям.ВидРасчета.НачислениеЗаСчетФСС Тогда
				ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

#КонецОбласти

#Область Проведение

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке()
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ  
	|	ПериодРегистрации, 
	|	Организация,
	|	ВЫБОР КОГДА Организация.ГоловнаяОрганизация = &парамПустаяОрганизация ТОГДА Организация ИНАЧЕ Организация.ГоловнаяОрганизация КОНЕЦ КАК ГоловнаяОрганизация, 
	|	Организация КАК ОбособленноеПодразделение,
	|	Ответственный, 
	| 	Ссылка
	|ИЗ 
	|	Документ." + Метаданные().Имя + "
	|ГДЕ 
	|	Ссылка = &ДокументСсылка
	|";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "Начисления" документа
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоНачисления(ВыборкаПоШапкеДокумента)
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаНачисления", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	
	// Описание текста запроса:
	// 1. Выборка "НачислениеЕдиновременныхПособийЗаСчетФССНачисления": 
	//		Выбираются строки документа.  
	// 2. Выборка "РаботникиОрганизаций": 
	//		Из регистра сведений о работниках выбираем информацию о подразделении работника организации.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Сотрудник.ИНАГРО_ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство)
	|			ТОГДА НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Сотрудник.ОсновноеНазначение
	|		ИНАЧЕ НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Сотрудник
	|	КОНЕЦ КАК Сотрудник,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Сотрудник КАК Назначение,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Сотрудник.ФизическоеЛицо КАК ФизЛицо,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Сотрудник.Наименование КАК ФизЛицоНаименование,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Результат,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ВидРасчета,
	|	ВЫБОР
	|		КОГДА НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ВидРасчета.СпособОтраженияВБухучете
	|		ИНАЧЕ НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СпособОтраженияВБухучете
	|	КОНЕЦ КАК ВидРасчетаСпособОтраженияВБухучете,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ДатаСобытия,
	|	РаботникиОрганизаций.ПодразделениеОрганизации
	|ИЗ
	|	Документ.ИНАГРО_НачислениеЕдиновременныхПособийЗаСчетФСС.Начисления КАК НачислениеЕдиновременныхПособийЗаСчетФССНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(
	|				&ДатаНачисления,
	|				Организация = &ГоловнаяОрганизация
	|					И (Сотрудник.ИНАГРО_ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство)
	|						ИЛИ Сотрудник.ИНАГРО_ВидЗанятости ЕСТЬ NULL )
	|					И Сотрудник В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							НачислениеЕдиновременныхПособийЗаСчетФСС.Сотрудник
	|						ИЗ
	|							Документ.ИНАГРО_НачислениеЕдиновременныхПособийЗаСчетФСС.Начисления КАК НачислениеЕдиновременныхПособийЗаСчетФСС
	|						ГДЕ
	|							НачислениеЕдиновременныхПособийЗаСчетФСС.Ссылка = &ДокументСсылка)) КАК РаботникиОрганизаций
	|		ПО (РаботникиОрганизаций.Сотрудник = НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Сотрудник)
	|ГДЕ
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Ссылка = &ДокументСсылка";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоРаботникиОрганизации()

// По строке выборок из результатов запроса по документу формируем движения по регистру.
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента				- спозиционированная на определенной строке выборка 
//				  							  из результата запроса к ТЧ документа, 
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуОсновныхНачислений(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента)
	
	Движения.ИНАГРО_Начисления.Записывать = Истина;
	Движение = Движения.ИНАГРО_Начисления.Добавить();
	
	// Свойства
	Движение.ПериодРегистрации				= ВыборкаПоШапкеДокумента.ПериодРегистрации;
	Движение.ПериодДействияНачало			= ВыборкаПоСтрокамДокумента.ДатаСобытия;
	Движение.ПериодДействияКонец			= ВыборкаПоСтрокамДокумента.ДатаСобытия;
	Движение.БазовыйПериодНачало			= ВыборкаПоСтрокамДокумента.ДатаСобытия;
	Движение.БазовыйПериодКонец				= ВыборкаПоСтрокамДокумента.ДатаСобытия;
	Движение.ВидРасчета						= ВыборкаПоСтрокамДокумента.ВидРасчета;
	
	// Измерения
	Движение.Сотрудник						= ВыборкаПоСтрокамДокумента.Сотрудник;
	Движение.Назначение						= ВыборкаПоСтрокамДокумента.Назначение;
	Движение.Организация					= ВыборкаПоШапкеДокумента.Организация;
	
	// Ресурсы
	Движение.Результат						= ВыборкаПоСтрокамДокумента.Результат;
	
	// Реквизиты
	Движение.ПодразделениеОрганизации		= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
	
	Движение.СпособОтраженияВБухучете		= ВыборкаПоСтрокамДокумента.ВидРасчетаСпособОтраженияВБухучете;
	
	Движение.Авторасчет						= Истина;
	
КонецПроцедуры // ДобавитьСтрокуОсновныхНачислений

// По строке выборки результата запроса по документу формируем движения по регистрам.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                  - выборка из результата запроса по шапке документа
//  СтруктураПроведенияПоРегистрамНакопления - структура, содержащая имена регистров 
//                                             накопления по которым надо проводить документ
//  СтруктураПараметров                      - структура параметров проведения.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ)
	
	Движения.ВзаиморасчетыССотрудниками.Записывать = Истина;
	Движение = Движения.ВзаиморасчетыССотрудниками.Добавить();
	
	// Свойства
	Движение.Период                 = НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Движение.ВидДвижения			= ВидДвиженияНакопления.Приход;
	
	// Измерения
	Движение.Организация			= ВыборкаПоШапкеДокумента.Организация;
	Движение.СчетУчета			    = ВыборкаПоТЧ.ВидРасчета.СчетУчета;
	Движение.Сотрудник              = ВыборкаПоТЧ.Сотрудник;
	Движение.ПериодВзаиморасчетов	= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
	
	// Ресурсы
	Движение.СуммаВзаиморасчетов	= ВыборкаПоТЧ.Результат; 
	
	// Реквизиты
	Движение.КодОперации			= Перечисления.КодыОперацийВзаиморасчетыСРаботникамиОрганизаций.Начисления;
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления

#КонецОбласти

#КонецЕсли 
