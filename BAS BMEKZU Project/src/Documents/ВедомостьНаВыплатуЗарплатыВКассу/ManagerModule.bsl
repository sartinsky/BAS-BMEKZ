
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПечатьВедомость(МассивОбъектов, ОбъектыПечати)
	                          
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВедомостьНаВыплатуЗарплатыВКассу_Ведомость";
	ТабличныйДокумент.ПолеСлева = 15;
	ТабличныйДокумент.ПолеСправа = 15;
	
	КодЯзыкаПечать = "uk";	
	
	// получаем данные для печати
	ВыборкаШапок = ВыборкаДляПечатиШапки(МассивОбъектов);
	ВыборкаСтрок = ВыборкаДляПечатиТаблицы(МассивОбъектов);
	
	Пока ВыборкаШапок.Следующий() Цикл
		Если ВыборкаШапок.Дата >= Дата('20180105') Тогда
			Вариант2018 = Истина;
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВедомостьНаВыплатуЗарплатыВКассу.ПФ_MXL_UK_Ведомость_05012018");
		Иначе
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВедомостьНаВыплатуЗарплатыВКассу.ПФ_MXL_UK_Ведомость");
			Вариант2018 = Ложь;
		КонецЕсли;
		
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// подсчитываем количество страниц документа - для корректного разбиения на страницы
		ВсегоСтрокДокумента = ВыборкаСтрок.Количество();

		ОбластьМакетаШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
		ОбластьМакетаШапка			= Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогПоСтранице = Макет.ПолучитьОбласть("ИтогПоЛисту");
		ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		// массив с двумя строками - для разбиения на страницы
	    ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		
	  	ОбластьМакетаШапкаДокумента.Параметры.Заполнить(ВыборкаШапок);
		ВалютаУчета =  Константы.ВалютаРегламентированногоУчета.Получить();

		Если Вариант2018 Тогда 
			ОбластьМакетаШапкаДокумента.Параметры.Дата    		= Нрег(Формат(ВыборкаШапок.Дата, "Л=uk_UA; ДФ='дд ММММ гггг'")) + " року";
			СуммаПоДокументу  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ВыборкаШапок.СуммаПоДокументу, ВалютаУчета, КодЯзыкаПечать);
			СтрокаСуммы = СуммаПоДокументу + " (" + Цел(ВыборкаШапок.СуммаПоДокументу) + " грн " + Формат((ВыборкаШапок.СуммаПоДокументу - Цел(ВыборкаШапок.СуммаПоДокументу)) * 100, "ЧЦ=2; ЧН=00; ЧВН=") + " коп.)";
			ОбластьМакетаШапкаДокумента.Параметры.СуммаПоДокументу = СтрокаСуммы;  
		Иначе
			ОбластьМакетаШапкаДокумента.Параметры.СуммаПоДокументу  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ВыборкаШапок.СуммаПоДокументу, ВалютаУчета,КодЯзыкаПечать);
		КонецЕсли;
		
		ОбластьМакетаШапкаДокумента.Параметры.НомерВедомости = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаШапок.Номер);
		
		Если ВыборкаШапок.СуммаЗадепонировано <> 0 Тогда
			Если Вариант2018 Тогда 
				СуммаПоДокументу  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ВыборкаШапок.СуммаЗадепонировано, ВалютаУчета, КодЯзыкаПечать);
				СтрокаСуммы = СуммаПоДокументу + " (" + Цел(ВыборкаШапок.СуммаЗадепонировано) + " грн " + Формат((ВыборкаШапок.СуммаЗадепонировано - Цел(ВыборкаШапок.СуммаЗадепонировано)) * 100, "ЧЦ=2; ЧН=00; ЧВН=") + " коп.)";
				ОбластьМакетаШапкаДокумента.Параметры.СуммаЗадепонировано = СтрокаСуммы;
			Иначе
				ОбластьМакетаШапкаДокумента.Параметры.СуммаЗадепонировано  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ВыборкаШапок.СуммаЗадепонировано, ВалютаУчета,КодЯзыкаПечать);
			КонецЕсли;	
		КонецЕсли;	
				
		ОбластьМакетаШапкаДокумента.Параметры.Счет			 = СформироватьСписокСчетов(ВыборкаШапок.Ссылка);
		Если Вариант2018 Тогда
			ОбластьМакетаШапкаДокумента.Параметры.ДатаВыплаты    = Нрег(Формат(ВыборкаШапок.ПериодРегистрации, "Л=uk_UA; ДФ='ММММ гггг'")) + " року";
		Иначе	
			ОбластьМакетаШапкаДокумента.Параметры.ДатаВыплаты    = Нрег(Формат(ВыборкаШапок.ПериодРегистрации, "Л=uk_UA; ДФ='ММММ гггг р.'"));
		КонецЕсли;	
		
		ОбластьМакетаШапкаДокумента.Параметры.НазваниеОрганизации = ВРег(ОбластьМакетаШапкаДокумента.Параметры.НазваниеОрганизации);
		ТабличныйДокумент.Вывести(ОбластьМакетаШапкаДокумента);
		
		ОбластьМакетаШапка.Параметры.НомерВедомости = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаШапок.Номер);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		
		ВыведеноСтраниц = 1; ВыведеноСтрок = 0; ИтогоНаСтранице = 0; Итого = 0;
		// выводим данные по строкам документа.
		ВыборкаСтрок.Сбросить();
		Пока ВыборкаСтрок.НайтиСледующий(ВыборкаШапок.Ссылка, "Ведомость") Цикл
		
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрок);
			ОбластьМакетаСтрока.Параметры.ТабельныйНомер = ПрефиксацияОбъектовКлиентСервер.УдалитьПрефиксыИзНомераОбъекта(ВыборкаСтрок.ТабельныйНомер, Истина, Истина);
			ОбластьМакетаСтрока.Параметры.ФизическоеЛицо = ВыборкаСтрок.Фамилия +" "+ ВыборкаСтрок.Имя +" "+ ВыборкаСтрок.Отчество;
			ОбластьМакетаСтрока.Параметры.КодПоДРФО = ?(СокрЛП(ВыборкаСтрок.КодПоДРФО)="",""," (" +  ВыборкаСтрок.КодПоДРФО + ")");

			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			ОбластьМакетаСтрока.Параметры.НомерСтроки = ВыведеноСтрок;
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не ТабличныйДокумент.ПроверитьВывод(ВыводимыеОбласти);

			Если Не ВывестиПодвалЛиста и ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
				ВывестиПодвалЛиста = Не ТабличныйДокумент.ПроверитьВывод(ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				
				ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
				ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыведеноСтраниц = ВыведеноСтраниц + 1;
				ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
				ИтогоНаСтранице = 0;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			ИтогоНаСтранице = ИтогоНаСтранице + ВыборкаСтрок.Сумма;
			Итого = Итого + ВыборкаСтрок.Сумма;
			
		КонецЦикла;
		ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
		Если Вариант2018 Тогда
			ТабличныйДокумент.Область("R23C4").Текст  = ВыведеноСтраниц + 1;
		Иначе	
			ТабличныйДокумент.Область("R23C10").Текст  = ВыведеноСтраниц + 1;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, ВыборкаШапок.Ссылка);
		
	КонецЦикла; // по документам
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует запрос по табличной части документа
//
// Параметры: 
//  Ведомости - массив ДокументСсылка.ВедомостьНаВыплатуЗарплатыВКассу
//
// Возвращаемое значение:
//  Выборка из результата запроса
//
Функция ВыборкаДляПечатиТаблицы(Ведомости)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ведомости", Ведомости);
	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВзаиморасчетыСДепонентами.Сумма КАК СуммаЗадепонировано,
	|	ВзаиморасчетыСДепонентами.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВзаиморасчетыСДепонентами.Ведомость КАК Ссылка
	|ПОМЕСТИТЬ ВТДанныеЗадепонировано
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСДепонентами КАК ВзаиморасчетыСДепонентами
	|ГДЕ
	|	ВзаиморасчетыСДепонентами.Ведомость В(&Ведомости)
	|	И ВзаиморасчетыСДепонентами.ВидДвижения = &Приход";
	Запрос.Выполнить();

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВедомостьВКассуЗарплата.Ссылка КАК Ссылка,
	|	ВедомостьВКассуЗарплата.Ссылка.Организация КАК Организация,
	|	ВедомостьВКассуЗарплата.Ссылка.Дата КАК Период,
	|	ВедомостьВКассуЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВедомостьВКассуЗарплата.Сотрудник КАК Сотрудник,
	|	СУММА(ВедомостьВКассуЗарплата.КВыплате) КАК КВыплате
	|ПОМЕСТИТЬ ВТДанныеДокументовПодробно
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВКассу.ЗарплатаПодробно КАК ВедомостьВКассуЗарплата
	|ГДЕ
	|	ВедомостьВКассуЗарплата.Ссылка В(&Ведомости)
	|СГРУППИРОВАТЬ ПО 
	|	ВедомостьВКассуЗарплата.Ссылка,
	|	ВедомостьВКассуЗарплата.Ссылка.Организация,
	|	ВедомостьВКассуЗарплата.Ссылка.Дата,
	|	ВедомостьВКассуЗарплата.ФизическоеЛицо,
	|	ВедомостьВКассуЗарплата.Сотрудник
	|;
	|ВЫБРАТЬ
	|	ВедомостьВКассуЗарплатаПодробно.Ссылка КАК Ссылка,
	|	ВедомостьВКассуЗарплатаПодробно.Организация КАК Организация,
	|	ВедомостьВКассуЗарплатаПодробно.Период КАК Период,
	|	ВедомостьВКассуЗарплатаПодробно.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВедомостьВКассуЗарплатаПодробно.Сотрудник КАК Сотрудник,
	|	ВедомостьВКассуЗарплатаПодробно.КВыплате КАК КВыплате,
	|	ВедомостьВКассуЗарплата.НомерСтроки КАК Порядок
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	ВТДанныеДокументовПодробно КАК ВедомостьВКассуЗарплатаПодробно
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|	(ВЫБРАТЬ 
	|		Зарплата.Ссылка КАК Ссылка,
	|		Зарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	|		МИНИМУМ(Зарплата.НомерСтроки) КАК НомерСтроки
	|	 ИЗ Документ.ВедомостьНаВыплатуЗарплатыВКассу.Зарплата КАК Зарплата
	|    ГДЕ
	|    	Зарплата.Ссылка В(&Ведомости)
	|	 СГРУППИРОВАТЬ ПО
	|		Зарплата.ФизическоеЛицо,
	|		Зарплата.Ссылка) КАК ВедомостьВКассуЗарплата
	|ПО 
	|   ВедомостьВКассуЗарплатаПодробно.ФизическоеЛицо = ВедомостьВКассуЗарплата.ФизическоеЛицо
	|   И ВедомостьВКассуЗарплатаПодробно.Ссылка = ВедомостьВКассуЗарплата.Ссылка
	|СГРУППИРОВАТЬ ПО 
	|	ВедомостьВКассуЗарплатаПодробно.Ссылка, 
	|	ВедомостьВКассуЗарплатаПодробно.Организация, 
	|	ВедомостьВКассуЗарплатаПодробно.Период,
	|	ВедомостьВКассуЗарплатаПодробно.ФизическоеЛицо,
	|	ВедомостьВКассуЗарплатаПодробно.Сотрудник,
	|	ВедомостьВКассуЗарплатаПодробно.КВыплате,
	|	ВедомостьВКассуЗарплата.НомерСтроки
	|////////////////////////////////////////////////////////////////////////////////
	|;
	|ВЫБРАТЬ
	|	ВедомостьВКассуЗарплата.Ссылка КАК Ссылка,
	|	ВедомостьВКассуЗарплата.Организация КАК Организация,
	|	ВедомостьВКассуЗарплата.Период КАК Период,
	|	ВедомостьВКассуЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВедомостьВКассуЗарплата.КВыплате КАК КВыплате,
	|	ВедомостьВКассуЗарплата.Порядок КАК Порядок
	|ПОМЕСТИТЬ ВТДанныеДокументовСокр
	|ИЗ
	|	ВТДанныеДокументов КАК ВедомостьВКассуЗарплата
	|СГРУППИРОВАТЬ ПО 
	|	ВедомостьВКассуЗарплата.Ссылка, 
	|	ВедомостьВКассуЗарплата.Организация, 
	|	ВедомостьВКассуЗарплата.Период,
	|	ВедомостьВКассуЗарплата.ФизическоеЛицо,
	|	ВедомостьВКассуЗарплата.КВыплате,
	|	ВедомостьВКассуЗарплата.Порядок
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Организация КАК Организация,
	|	ДанныеДокументов.Ссылка.Дата КАК Период,
	|	ДанныеДокументов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеДокументов.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТТаблицаФизлицССотрудниками
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|ГДЕ
	|	НЕ ЕСТЬNULL(ДанныеДокументов.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Организация КАК Организация,
	|	ДанныеДокументов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеДокументов.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТТаблицаФизлицБезСотрудников
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|ГДЕ
	|	ЕСТЬNULL(ДанныеДокументов.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаФизлицБезСотрудников.Ссылка КАК Ссылка,
	|	ТаблицаФизлицБезСотрудников.Организация КАК Организация,
	|	ТаблицаФизлицБезСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаФизлицССотрудниками.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТТаблицаФизлицСНайденнымиСотрудниками
	|ИЗ
	|	ВТТаблицаФизлицБезСотрудников КАК ТаблицаФизлицБезСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаФизлицССотрудниками КАК ТаблицаФизлицССотрудниками
	|		ПО ТаблицаФизлицБезСотрудников.ФизическоеЛицо = ТаблицаФизлицССотрудниками.ФизическоеЛицо
	|       И  ТаблицаФизлицБезСотрудников.Ссылка = ТаблицаФизлицССотрудниками.Ссылка 
	|;
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Организация КАК Организация,
	|	ДанныеДокументов.Период КАК Период,
	|	ДанныеДокументов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР КОГДА НЕ ЕСТЬNULL(ДанныеДокументов.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|		ТОГДА ДанныеДокументов.Сотрудник ИНАЧЕ
	|			ВЫБОР КОГДА НЕ ЕСТЬNULL(ТаблицаФизлицСНайденнымиСотрудниками.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|				ТОГДА ТаблицаФизлицСНайденнымиСотрудниками.Сотрудник 
	|           КОНЕЦ
	|       КОНЕЦ
	|	КАК Сотрудник,
	|	ДанныеДокументов.КВыплате КАК КВыплате,
	|	ДанныеДокументов.Порядок КАК Порядок
	|ПОМЕСТИТЬ ВТДанныеДокументовДополненная
	|ИЗ ВТДанныеДокументов КАК ДанныеДокументов
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТТаблицаФизлицСНайденнымиСотрудниками КАК ТаблицаФизлицСНайденнымиСотрудниками
	|ПО 
	|   ДанныеДокументов.Ссылка = ТаблицаФизлицСНайденнымиСотрудниками.Ссылка
	|   И ДанныеДокументов.ФизическоеЛицо = ТаблицаФизлицСНайденнымиСотрудниками.ФизическоеЛицо
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаФизлицССотрудниками.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТТаблицаФизлицССотрудниками.Сотрудник КАК Сотрудник,
	|	ВТТаблицаФизлицССотрудниками.Ссылка КАК Ссылка,
	|	ВТТаблицаФизлицССотрудниками.Организация КАК Организация
	|ПОМЕСТИТЬ ВТТаблицаФизическихЛицИСотрудников
	|ИЗ
	|	ВТТаблицаФизлицССотрудниками КАК ВТТаблицаФизлицССотрудниками
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТТаблицаФизлицСНайденнымиСотрудниками.ФизическоеЛицо,
	|	ВТТаблицаФизлицСНайденнымиСотрудниками.Сотрудник,
	|	ВТТаблицаФизлицСНайденнымиСотрудниками.Ссылка,
	|	ВТТаблицаФизлицСНайденнымиСотрудниками.Организация КАК Организация
	|ИЗ
	|	ВТТаблицаФизлицСНайденнымиСотрудниками КАК ВТТаблицаФизлицСНайденнымиСотрудниками
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизЛицаБезСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|   ФизЛицаБезСотрудников.Ссылка КАК Ссылка,
	|	ФизЛицаБезСотрудников.Организация КАК Организация,
	|   ФизЛицаБезСотрудников.Ссылка.Дата КАК Период
	|ПОМЕСТИТЬ ВТДанныеДокументовИФизлиц
	|ИЗ
	|	ВТТаблицаФизЛицБезСотрудников КАК ФизЛицаБезСотрудников
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТТаблицаФизлицСНайденнымиСотрудниками КАК ТаблицаФизлицСНайденнымиСотрудниками
	|ПО
	|   ФизЛицаБезСотрудников.ФизическоеЛицо = ТаблицаФизлицСНайденнымиСотрудниками.ФизическоеЛицо
	|   И ФизЛицаБезСотрудников.Ссылка = ТаблицаФизлицСНайденнымиСотрудниками.Ссылка
	|ГДЕ
	|   ЕСТЬNULL(ТаблицаФизлицСНайденнымиСотрудниками.ФизическоеЛицо,ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|;";
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйУчет") Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ 
		|	КадроваяИсторияСотрудников.Период КАК Период,
		|	КадроваяИсторияСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	КадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
		|	КадроваяИсторияСотрудников.Организация КАК Организация
		|ПОМЕСТИТЬ ВТКадроваяИсторияСотрудниковДляПоиска
		|ИЗ  РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументовИФизлиц КАК ВТДанныеДокументовИФизлиц
		|ПО КадроваяИсторияСотрудников.Организация = ВТДанныеДокументовИФизлиц.Организация
		|	И КадроваяИсторияСотрудников.ФизическоеЛицо = ВТДанныеДокументовИФизлиц.ФизическоеЛицо
		|ГДЕ КадроваяИсторияСотрудников.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство) 
		|	И КадроваяИсторияСотрудников.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
		|	И КадроваяИсторияСотрудников.ФизическоеЛицо В (ВЫБРАТЬ ВТДанныеДокументовИФизлиц.ФизическоеЛицо
		|																		ИЗ ВТДанныеДокументовИФизлиц КАК ВТДанныеДокументовИФизлиц)
		|	И КадроваяИсторияСотрудников.Организация В (ВЫБРАТЬ ВТДанныеДокументов.Организация
		|																		ИЗ ВТДанныеДокументов КАК ВТДанныеДокументов)
		|
		|;
		|
		|ВЫБРАТЬ 
		|	МаксимальныеПериоды.Ссылка КАК Ссылка,
		|	КадроваяИсторияСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	КадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
		|	КадроваяИсторияСотрудников.Организация КАК Организация
		|ПОМЕСТИТЬ ВТКадроваяИсторияСотрудников
		|ИЗ ВТКадроваяИсторияСотрудниковДляПоиска КАК КадроваяИсторияСотрудников
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|(ВЫБРАТЬ 
		|	ДанныеДокументов.Период КАК Период,
		|	ДанныеДокументов.Организация КАК Организация,
		|	ДанныеДокументов.Ссылка КАК Ссылка,
		|	ДанныеДокументов.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МАКСИМУМ(КадроваяИсторияСотрудников.Период) КАК МаксимальныйПериод
		|ИЗ ВТДанныеДокументов КАК ДанныеДокументов
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|    ВТКадроваяИсторияСотрудниковДляПоиска КАК КадроваяИсторияСотрудников
		| ПО ДанныеДокументов.ФизическоеЛицо = КадроваяИсторияСотрудников.ФизическоеЛицо
		| И ДанныеДокументов.Организация = КадроваяИсторияСотрудников.Организация
		|ГДЕ КадроваяИсторияСотрудников.Период <= ДанныеДокументов.Период
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокументов.Период,
		|	ДанныеДокументов.Организация,
		|	ДанныеДокументов.Ссылка,
		|	ДанныеДокументов.ФизическоеЛицо) КАК МаксимальныеПериоды
		| ПО  КадроваяИсторияСотрудников.Период = МаксимальныеПериоды.МаксимальныйПериод И
		|		КадроваяИсторияСотрудников.ФизическоеЛицо = МаксимальныеПериоды.ФизическоеЛицо
		|;"
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ 
		|	КадроваяИсторияСотрудников.ДатаПриема КАК Период,
		|	КадроваяИсторияСотрудников.ТекущаяОрганизация КАК Организация,
		|	КадроваяИсторияСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	КадроваяИсторияСотрудников.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТКадроваяИсторияСотрудниковДляПоиска
		|ИЗ  РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК КадроваяИсторияСотрудников
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументовИФизлиц КАК ВТДанныеДокументовИФизлиц
		|ПО КадроваяИсторияСотрудников.ТекущаяОрганизация = ВТДанныеДокументовИФизлиц.Организация
		|	И КадроваяИсторияСотрудников.ФизическоеЛицо = ВТДанныеДокументовИФизлиц.ФизическоеЛицо
		|ГДЕ
		|	ТекущийВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство) 
		|	И КадроваяИсторияСотрудников.ФизическоеЛицо В (ВЫБРАТЬ ВТДанныеДокументовИФизлиц.ФизическоеЛицо
		|						ИЗ ВТДанныеДокументовИФизлиц КАК ВТДанныеДокументовИФизлиц)
		|	
		|;
		|
		|ВЫБРАТЬ 
		|	МаксимальныеПериоды.Ссылка КАК Ссылка,
		|	КадроваяИсторияСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	КадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
		|	КадроваяИсторияСотрудников.Организация КАК Организация
		|ПОМЕСТИТЬ ВТКадроваяИсторияСотрудников
		|ИЗ ВТКадроваяИсторияСотрудниковДляПоиска КАК КадроваяИсторияСотрудников
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|(ВЫБРАТЬ 
		|	ДанныеДокументов.Период КАК Период,
		|	ДанныеДокументов.Ссылка КАК Ссылка,
		|	ДанныеДокументов.Организация КАК Организация,
		|	ДанныеДокументов.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МАКСИМУМ(КадроваяИсторияСотрудников.Период) КАК МаксимальныйПериод
		|ИЗ ВТДанныеДокументов КАК ДанныеДокументов
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|    ВТКадроваяИсторияСотрудниковДляПоиска КАК КадроваяИсторияСотрудников
		| ПО ДанныеДокументов.ФизическоеЛицо = КадроваяИсторияСотрудников.ФизическоеЛицо
		| И ДанныеДокументов.Организация = КадроваяИсторияСотрудников.Организация
		|ГДЕ КадроваяИсторияСотрудников.Период <= ДанныеДокументов.Период
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокументов.Период,
		|	ДанныеДокументов.Ссылка,
		|	ДанныеДокументов.Организация,
		|	ДанныеДокументов.ФизическоеЛицо) КАК МаксимальныеПериоды
		| ПО  КадроваяИсторияСотрудников.Период = МаксимальныеПериоды.МаксимальныйПериод И
		|		КадроваяИсторияСотрудников.ФизическоеЛицо = МаксимальныеПериоды.ФизическоеЛицо
		|;"
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Период КАК Период,
	|	ДанныеДокументов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаФизическихЛицИСотрудников.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|			ТОГДА ТаблицаСотрудников.Сотрудник
	|		ИНАЧЕ ТаблицаФизическихЛицИСотрудников.Сотрудник
	|	КОНЕЦ КАК Сотрудник
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадроваяИсторияСотрудников КАК ТаблицаСотрудников
	|		ПО ДанныеДокументов.ФизическоеЛицо = ТаблицаСотрудников.ФизическоеЛицо
	|			И ДанныеДокументов.Ссылка = ТаблицаСотрудников.Ссылка
	|			И ДанныеДокументов.Организация = ТаблицаСотрудников.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаФизическихЛицИСотрудников КАК ТаблицаФизическихЛицИСотрудников
	|		ПО ДанныеДокументов.ФизическоеЛицо = ТаблицаФизическихЛицИСотрудников.ФизическоеЛицо
	|			И ДанныеДокументов.Ссылка = ТаблицаФизическихЛицИСотрудников.Ссылка
	|			И ДанныеДокументов.Сотрудник = ТаблицаФизическихЛицИСотрудников.Сотрудник
	|			И ДанныеДокументов.Организация = ТаблицаФизическихЛицИСотрудников.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаФизическихЛицИСотрудников.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|			ТОГДА ТаблицаСотрудников.Сотрудник
	|		ИНАЧЕ ТаблицаФизическихЛицИСотрудников.Сотрудник
	|	КОНЕЦ,
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.Период";
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = 
		КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
    		Запрос.МенеджерВременныхТаблиц,
    		"ВТДанные");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, "Фамилия, Имя, Отчество");

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Данные.Ссылка КАК Ведомость,
	|	Данные.Период КАК Период,
	|	Данные.Сотрудник КАК Сотрудник,
	|	Данные.Сотрудник.Код КАК ТабельныйНомер,
	|	Данные.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Данные.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО
	|ПОМЕСТИТЬ ВТДанныеУказанныхЯвно
	|ИЗ
	|	ВТДанные КАК Данные
	|ГДЕ
	|	Данные.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТДанныеДокументов.Сотрудник
	|			ИЗ
	|				ВТДанныеДокументов КАК ВТДанныеДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Сотрудник.Код,
	|	Данные.ФизическоеЛицо,
	|	Данные.ФизическоеЛицо.КодПоДРФО,
	|	Данные.Период,
	|	Данные.Сотрудник,
	|	Данные.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Ссылка КАК Ведомость,
	|	Данные.Период КАК Период,
	|	Данные.Сотрудник КАК Сотрудник,
	|	Данные.Сотрудник.Код КАК ТабельныйНомер,
	|	Данные.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Данные.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО
	|ПОМЕСТИТЬ ВТДанныеНеуказанныхЯвно
	|ИЗ
	|	ВТДанные КАК Данные
	|ГДЕ
	|	НЕ Данные.Сотрудник В
	|				(ВЫБРАТЬ
	|					ВТДанныеДокументов.Сотрудник
	|				ИЗ
	|					ВТДанныеДокументов КАК ВТДанныеДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.ФизическоеЛицо.КодПоДРФО,
	|	Данные.Ссылка,
	|	Данные.ФизическоеЛицо,
	|	Данные.Период,
	|	Данные.Сотрудник,
	|	Данные.Сотрудник.Код
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Ведомость КАК Ведомость,
	|	Данные.Период КАК Период,
	|	Данные.Сотрудник КАК Сотрудник,
	|	Данные.ТабельныйНомер КАК ТабельныйНомер,
	|	Данные.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Данные.КодПоДРФО КАК КодПоДРФО,
	|	ДанныеДокументов.Порядок КАК Порядок,
	|	СУММА(ДанныеДокументов.КВыплате) КАК КВыплате
	|ПОМЕСТИТЬ ВТРез
	|ИЗ
	|	ВТДанныеУказанныхЯвно КАК Данные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументовДополненная КАК ДанныеДокументов
	|		ПО Данные.Ведомость = ДанныеДокументов.Ссылка
	|			И Данные.Сотрудник = ДанныеДокументов.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.Порядок,
	|	Данные.Период,
	|	Данные.Ведомость,
	|	Данные.КодПоДРФО,
	|	Данные.ТабельныйНомер,
	|	Данные.ФизическоеЛицо,
	|	Данные.Сотрудник
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Данные.Ведомость,
	|	Данные.Период,
	|	Данные.Сотрудник,
	|	Данные.ТабельныйНомер,
	|	Данные.ФизическоеЛицо,
	|	Данные.КодПоДРФО,
	|	ДанныеДокументов.Порядок,
	|	ДанныеДокументов.КВыплате
	|ИЗ
	|	ВТДанныеНеуказанныхЯвно КАК Данные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокументовДополненная КАК ДанныеДокументов
	|		ПО Данные.Ведомость = ДанныеДокументов.Ссылка
	|			И Данные.ФизическоеЛицо = ДанныеДокументов.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ведомость КАК Ведомость,
	|	ДанныеДокументов.Период КАК Период,
	|	ДанныеДокументов.Сотрудник КАК Сотрудник,
	|	ДанныеДокументов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеДокументов.Порядок КАК Порядок,
	|	ДанныеДокументов.КВыплате КАК КВыплате,
	|	КадровыеДанныеСотрудниковФИО.Фамилия,
	|	КадровыеДанныеСотрудниковФИО.Имя,
	|	КадровыеДанныеСотрудниковФИО.Отчество,
	|	ДанныеДокументов.КВыплате КАК Сумма,
	|	ДанныеДокументов.ТабельныйНомер КАК ТабельныйНомер,
	|	ДанныеДокументов.КодПоДРФО КАК КодПоДРФО,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеЗадепонировано.СуммаЗадепонировано, 0) <> 0
	|			ТОГДА ""Задепоновано""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЗаписьОДепонировании,
	|	ДанныеЗадепонировано.СуммаЗадепонировано КАК СуммаЗадепонировано
	|ИЗ
	|	ВТРез КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудниковФИО
	|		ПО ДанныеДокументов.ФизическоеЛицо = КадровыеДанныеСотрудниковФИО.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеЗадепонировано КАК ДанныеЗадепонировано
	|		ПО ДанныеДокументов.ФизическоеЛицо = ДанныеЗадепонировано.ФизическоеЛицо
	|			И ДанныеДокументов.Ведомость = ДанныеЗадепонировано.Ссылка
	|ГДЕ
	|	ДанныеДокументов.КВыплате > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	КадровыеДанныеСотрудниковФИО.Фамилия,
	|	ДанныеДокументов.Период,
	|	ДанныеДокументов.Порядок,
	|	ДанныеДокументов.КодПоДРФО,
	|	ДанныеЗадепонировано.СуммаЗадепонировано,
	|	ДанныеДокументов.ТабельныйНомер,
	|	ДанныеДокументов.Ведомость,
	|	ДанныеДокументов.ФизическоеЛицо,
	|	КадровыеДанныеСотрудниковФИО.Имя,
	|	КадровыеДанныеСотрудниковФИО.Отчество,
	|	ДанныеДокументов.Сотрудник,
	|	ДанныеДокументов.КВыплате
	|УПОРЯДОЧИТЬ ПО
	|	Ведомость, Порядок";

	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Ведомость
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Ведомость";
	КомандаПечати.Представление = НСтр("ru='Ведомость';uk='Відомість'");
	
	// Ведомость в Microsoft Word
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Ведомость";
	КомандаПечати.Представление = НСтр("ru='Ведомость в Microsoft Word';uk='Відомість в Microsoft Word'");
	КомандаПечати.ФорматСохранения = ТипФайлаТабличногоДокумента.DOCX;
	
	// Список перечисления налогов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СписокПеречисленийНалоги";
	КомандаПечати.Представление = НСтр("ru='Список перечисления налогов';uk='Список перерахування податків'");
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Ведомость на выплату зарплаты""';uk='Реєстр документів ""Відомість на виплату зарплати""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Ведомость") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Ведомость", НСтр("ru='Ведомость на выплату зарплаты';uk='Відомість на виплату зарплати'"), ПечатьВедомость(МассивОбъектов, ОбъектыПечати));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписокПеречисленийНалоги") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СписокПеречисленийНалоги", НСтр("ru='Список налогов';uk='Список податків'"), ПечатьСписокПеречисленийНалоги(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , "Документ.ВедомостьНаВыплатуЗарплатыВКассу.ПФ_MXL_СписокПеречисленийНалоги", , Истина);
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьСписокСчетов(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.Текст ="
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВедомостьНаВыплатуЗарплатыВКассуЗарплатаПодробно.СчетУчета
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВКассу.ЗарплатаПодробно КАК ВедомостьНаВыплатуЗарплатыВКассуЗарплатаПодробно
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыВКассуЗарплатаПодробно.Ссылка = &Ссылка";
	
	ВыборкаСчетов = Запрос.Выполнить().Выбрать();
	
	СписокСчетов = ""; Разделитель = "";
	
	Пока ВыборкаСчетов.Следующий() Цикл
		СписокСчетов = СписокСчетов + Разделитель + Строка(ВыборкаСчетов.СчетУчета);
		Разделитель = ", ";
	КонецЦикла;	
	
	Возврат СписокСчетов;


КонецФункции

Функция ПечатьСписокПеречисленийНалоги(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВедомостьНаВыплатуЗарплатыВКассу_СписокПеречисленийНалоги";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВедомостьНаВыплатуЗарплатыВКассу.ПФ_MXL_СписокПеречисленийНалоги");
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
    Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	// получаем данные для печати
	ВыборкаШапок = ВыборкаДляПечатиШапки(МассивОбъектов);
	ВыборкаСтрок = ВыборкаДляПечатиТаблицыНалоги(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаШапок.Следующий() Цикл
		
		НомерСтроки = 0;
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// подсчитываем количество страниц документа - для корректного разбиения на страницы
		ВсегоСтрокДокумента = ВыборкаСтрок.Количество();

		ОбластьМакетаШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
		ОбластьМакетаШапка			= Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогПоСтранице = Макет.ПолучитьОбласть("ИтогПоЛисту");
		ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		// массив с двумя строками - для разбиения на страницы
	    ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		
		// выводим данные о документе
 		ОбластьМакетаШапкаДокумента.Параметры.Дата = ВыборкаШапок.Дата;
 		ОбластьМакетаШапкаДокумента.Параметры.Организация = ВРег(ВыборкаШапок.Организация.НаименованиеПолное);
		
		ТабличныйДокумент.Вывести(ОбластьМакетаШапкаДокумента);
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		
		ВыведеноСтраниц = 1; ВыведеноСтрок = 0; ИтогоНаСтранице = 0; Итого = 0;
		// выводим данные по строкам документа.
		ВыборкаСтрок.Сбросить();
		Пока ВыборкаСтрок.НайтиСледующий(ВыборкаШапок.Ссылка, "Ведомость") Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьМакетаСтрока.Параметры.НомерСтроки = НомерСтроки;
			ОбластьМакетаСтрока.Параметры.Сумма = ВыборкаСтрок.Сумма;
			Если ВыборкаСтрок.ПорядокНалога = 1 Тогда
				ОбластьМакетаСтрока.Параметры.Налог = "ПДФО (" + Строка(ВыборкаСтрок.Налог) + ")";
			ИначеЕсли ВыборкаСтрок.ПорядокНалога = 2 Тогда
				ОбластьМакетаСтрока.Параметры.Налог = "Військовий збір (" + Строка(ВыборкаСтрок.Налог) + ")";
			Иначе
				ОбластьМакетаСтрока.Параметры.Налог = ВыборкаСтрок.Налог;	
			КонецЕсли;	
			
			
			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не ТабличныйДокумент.ПроверитьВывод(ВыводимыеОбласти);

			Если Не ВывестиПодвалЛиста и ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
				ВывестиПодвалЛиста = Не ТабличныйДокумент.ПроверитьВывод(ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				
				ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
				ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыведеноСтраниц = ВыведеноСтраниц + 1;
				ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
				ИтогоНаСтранице = 0;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			ИтогоНаСтранице = ИтогоНаСтранице + ВыборкаСтрок.Сумма;
			Итого = Итого + ВыборкаСтрок.Сумма;
			
		КонецЦикла;
		
		Если ВыведеноСтрок > 0 Тогда 
			ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
		
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаШапок);
		ОбластьМакетаПодвал.Параметры.Итого = Итого;
		ОбластьМакетаПодвал.Параметры.Руководитель = ФизическиеЛицаКлиентСервер.ИмяФамилияВФорматеДСТУ(ОбластьМакетаПодвал.Параметры.Руководитель);
		ОбластьМакетаПодвал.Параметры.ГлавныйБухгалтер = ФизическиеЛицаКлиентСервер.ИмяФамилияВФорматеДСТУ(ОбластьМакетаПодвал.Параметры.ГлавныйБухгалтер);
		ОбластьМакетаПодвал.Параметры.Бухгалтер = ФизическиеЛицаКлиентСервер.ИмяФамилияВФорматеДСТУ(ОбластьМакетаПодвал.Параметры.Бухгалтер);

		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, ВыборкаШапок.Ссылка);
		
	КонецЦикла; // по документам
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует запрос по документу
//
// Параметры: 
//  Ведомости - массив ДокументСсылка.ВедомостьНаВыплатуЗарплатыВКассу
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ВыборкаДляПечатиШапки(Ведомости)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ведомости", Ведомости);
	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВзаиморасчетыСДепонентами.Сумма КАК СуммаЗадепонировано
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСДепонентами КАК ВзаиморасчетыСДепонентами
	|ГДЕ
	|	ВзаиморасчетыСДепонентами.Ведомость В(&Ведомости)
	|	И ВзаиморасчетыСДепонентами.ВидДвижения = &Приход";
	
	ТаблицаЗадепонировано = Запрос.Выполнить().Выгрузить();
	Если ТаблицаЗадепонировано.Количество() = 0 Тогда
		СуммаЗадепонировано = 0 
	Иначе
		СуммаЗадепонировано = ТаблицаЗадепонировано.Итог("СуммаЗадепонировано");
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВедомостьВКассу.Ссылка КАК Ссылка,
	|	ВедомостьВКассу.Номер КАК Номер,
	|	ВедомостьВКассу.Дата КАК Дата,
	|	ВедомостьВКассу.ПериодРегистрации КАК ПериодРегистрации,
	|	ВедомостьВКассу.Организация КАК Организация,
	|	ВЫРАЗИТЬ(ВедомостьВКассу.Организация.НаименованиеПолное КАК СТРОКА(300)) КАК НазваниеОрганизации,
	|	ВедомостьВКассу.Организация.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
	|	ВедомостьВКассу.Подразделение.Наименование КАК Подразделение,
	|	ВедомостьВКассу.СуммаПоДокументу КАК СуммаПоДокументу,
	|	ВедомостьВКассу.Руководитель,
	|	ВедомостьВКассу.ДолжностьРуководителя.Наименование КАК РуководительДолжность,
	|	ВедомостьВКассу.ГлавныйБухгалтер,
	|	ВедомостьВКассу.Бухгалтер
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВКассу КАК ВедомостьВКассу
	|ГДЕ
	|	ВедомостьВКассу.Ссылка В(&Ведомости)";

	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	ИменаПолейОтветственныхЛиц.Добавить("ГлавныйБухгалтер");
	ИменаПолейОтветственныхЛиц.Добавить("Бухгалтер");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.УстановитьПараметр("СуммаЗадепонировано", СуммаЗадепонировано);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.Номер,
	|	ДанныеДокументов.Дата,
	|	ДанныеДокументов.ПериодРегистрации,
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.НазваниеОрганизации,
	|	ДанныеДокументов.КодПоЕДРПОУ,
	|	ДанныеДокументов.Подразделение,
	|	ДанныеДокументов.СуммаПоДокументу,
	|	ЕСТЬNULL(ВТФИОГлавБухПоследние.Фамилия, """") + "" "" + ЕСТЬNULL(ВТФИОГлавБухПоследние.Имя, """") + "" "" + ЕСТЬNULL(ВТФИОГлавБухПоследние.Отчество, """") КАК ГлавныйБухгалтер,
	|	ЕСТЬNULL(ВТФИОРуководителейПоследние.Фамилия, """") + "" "" + ЕСТЬNULL(ВТФИОРуководителейПоследние.Имя, """") + "" "" + ЕСТЬNULL(ВТФИОРуководителейПоследние.Отчество, """") КАК Руководитель,
	|	ДанныеДокументов.РуководительДолжность,
	|	ЕСТЬNULL(ВТФИОБухгалтерПоследние.Фамилия, """") + "" "" + ЕСТЬNULL(ВТФИОБухгалтерПоследние.Имя, """") + "" "" + ЕСТЬNULL(ВТФИОБухгалтерПоследние.Отчество, """") КАК Бухгалтер,
	|	ДанныеДокументов.РуководительДолжность КАК РуководительДолжность,
	|	&СуммаЗадепонировано КАК СуммаЗадепонировано
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОРуководителейПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОРуководителейПоследние.Ссылка
	|			И ДанныеДокументов.Руководитель = ВТФИОРуководителейПоследние.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОГлавБухПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОГлавБухПоследние.Ссылка
	|			И ДанныеДокументов.ГлавныйБухгалтер = ВТФИОГлавБухПоследние.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОБухгалтерПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОБухгалтерПоследние.Ссылка
	|			И ДанныеДокументов.Бухгалтер = ВТФИОБухгалтерПоследние.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокументов.Организация,
	|	НАЧАЛОПЕРИОДА(ДанныеДокументов.Дата, ГОД),
	|	ДанныеДокументов.Номер";
	
	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

Функция ВыборкаДляПечатиТаблицыНалоги(Ведомости)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ведомости", Ведомости);
	Запрос.УстановитьПараметр("ВоенныйСбор", УчетНДФЛ.ЗначенияВоенныйСбор().ВидСтавки);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВедомостьВКассуНДФЛ.Ссылка КАК Ссылка,
	|   ВЫБОР 
	|   	КОГДА ВидыДоходов.ВидСтавкиРезидента = &ВоенныйСбор
	|   		ТОГДА 2 
	|   	ИНАЧЕ 1
	|   КОНЕЦ КАК ПорядокНалога,
	|	ВедомостьВКассуНДФЛ.ДоходНДФЛ КАК Налог,
	|	ВедомостьВКассуНДФЛ.Налог КАК Сумма
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВКассу.НДФЛ КАК ВедомостьВКассуНДФЛ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|   Справочник.ВидыДоходовНДФЛ КАК ВидыДоходов
	|   ПО ВедомостьВКассуНДФЛ.ДоходНДФЛ = ВидыДоходов.Ссылка
	|ГДЕ
	|	ВедомостьВКассуНДФЛ.Ссылка В(&Ведомости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВедомостьВКассуВзносы.Ссылка КАК Ссылка,
	|   3 КАК ПорядокНалога,
	|	ВедомостьВКассуВзносы.Налог КАК Налог,
	|	ВедомостьВКассуВзносы.Сумма КАК Сумма
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВКассу.Взносы КАК ВедомостьВКассуВзносы
	|ГДЕ
	|	ВедомостьВКассуВзносы.Ссылка В(&Ведомости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВедомостьВКассуВзносыФОТ.Ссылка КАК Ссылка,
	|   4 КАК ПорядокНалога,
	|	ВедомостьВКассуВзносыФОТ.Налог КАК Налог,
	|	ВедомостьВКассуВзносыФОТ.Сумма КАК Сумма
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВКассу.ВзносыФОТ КАК ВедомостьВКассуВзносыФОТ
	|ГДЕ
	|	ВедомостьВКассуВзносыФОТ.Ссылка В(&Ведомости)
	|";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ведомость,
	|	ДанныеДокументов.ПорядокНалога КАК ПорядокНалога,
	|	ДанныеДокументов.Налог КАК Налог,
	|	СУММА(ДанныеДокументов.Сумма)
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.ПорядокНалога,
	|	ДанныеДокументов.Налог
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокНалога";

	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция РеквизитыОтветственныхЛиц() Экспорт   
	Возврат ВзаиморасчетыССотрудниками.ВедомостьРеквизитыОтветственныхЛиц();
КонецФункции

#КонецОбласти

#КонецЕсли