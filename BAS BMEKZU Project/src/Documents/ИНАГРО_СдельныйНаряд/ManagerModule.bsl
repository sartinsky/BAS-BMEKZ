#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Сдельный наряд
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СдельныйНаряд";
	КомандаПечати.Представление = НСтр("ru='Сдельный наряд';uk='Відрядний наряд'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокументаОбщая";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Сдельный наряд""';uk='Реєстр документів ""Відрядний наряд""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	// Проверяем, нужно ли для макета Накладная формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СдельныйНаряд") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СдельныйНаряд", НСтр("ru='Сдельный наряд';uk='Відрядний наряд'"), 
		ПечатьМакета(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), , , ,Истина);
		
	КонецЕсли; 	
	
КонецПроцедуры

// Функция формирует табличный документ 
// Возвращаемое значение:
//  Табличный документ - печатная форма. 
Функция ПечатьМакета(МассивОбъектов, ПараметрыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	ТабДокумент = Новый ТабличныйДокумент;		
	ПервыйДокумент = Истина;
	
	Для каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиВертикальныйРазделительСтраниц();				
		КонецЕсли; 
		ПервыйДокумент = Ложь;
		
		
		ЗапросШапка = Новый Запрос;
		ЗапросШапка.УстановитьПараметр("ТекущийДокумент", Ссылка);
		ЗапросШапка.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИНАГРО_СдельныйНаряд.Организация,
		|	ИНАГРО_СдельныйНаряд.ПодразделениеОрганизации,
		|	ИНАГРО_СдельныйНаряд.ТехнологическаяОперация,
		|	ИНАГРО_СдельныйНаряд.Ответственный,
		|	ИНАГРО_СдельныйНаряд.ВидРасчета,
		|	ИНАГРО_СдельныйНаряд.Номер,
		|	ИНАГРО_СдельныйНаряд.Дата,
		|	ИНАГРО_СдельныйНаряд.ПериодРегистрации ,
		|	ИНАГРО_СдельныйНаряд.Сотрудник
		|ИЗ
		|	Документ.ИНАГРО_СдельныйНаряд КАК ИНАГРО_СдельныйНаряд
		|ГДЕ
		|	ИНАГРО_СдельныйНаряд.Ссылка = &ТекущийДокумент";
		
		Шапка = ЗапросШапка.Выполнить().Выбрать();
		Шапка.Следующий();
		
		ЗапросТЧ = Новый Запрос;
		ЗапросТЧ.УстановитьПараметр("ТекущийДокумент", Ссылка);
		ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	НомерСтроки,
		|	ТехнологическаяОперация,
		|	Сотрудник,
		|	Результат,
		|	Расценка,
		|	ОтработаноЧасов,
		|	ОтработаноДней,
		|	Результат,
		|	КоличествоРабот,
		|	КоличествоГА,
		|	КоличествоТ,
		|	НормаДнейЗаМесяц,
		|	НормаЧасовЗаМесяц,
		|	ДатаНачала,
		|	ДатаОкончания
		|ИЗ
		|	Документ.ИНАГРО_СдельныйНаряд.Начисления КАК ИНАГРО_СдельныйНаряд	
		|ГДЕ
		|	ИНАГРО_СдельныйНаряд.Ссылка = &ТекущийДокумент
		|";
		
		ЗапросТЧ.Текст = ТекстЗапроса;
		ТаблицаТЧ = ЗапросТЧ.Выполнить().Выгрузить();
		
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНАГРО_СдельныйНаряд_СдельныйНаряд";
		
		ЗаголовокПФ = "";
				
		Если Ссылка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.СдельныйНаряд Тогда
			Макет       = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СдельныйНаряд.ПФ_MXL_СдельныйНаряд");
		ИначеЕсли Ссылка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.СдельныйНарядСписком Тогда
			Макет       = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СдельныйНаряд.ПФ_MXL_СдельныйНарядСписком");
		ИначеЕсли Ссылка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.СдельныйНарядНаПолевыеРаботы Тогда
			Макет       = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СдельныйНаряд.ПФ_MXL_СдельныйНарядПолевые");
		ИначеЕсли Ссылка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.СдельныйНарядНаПолевыеРаботыБригады Тогда
			Макет       = УправлениеПечатью.МакетПечатнойФормы("Документ.ИНАГРО_СдельныйНаряд.ПФ_MXL_СдельныйНарядПолевыеСписком");
		КонецЕсли;
		
		// печать производится на языке, указанном в настройках пользователя
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		СведенияОПоставщике = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата,,,КодЯзыкаПечать);
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Организация = СведенияОПоставщике.ПолноеНаименование;
		ОбластьМакета.Параметры.МесяцНачисления = Формат(Шапка.ПериодРегистрации,"ДФ='MMMM yyyy'"+";Л="+КодЯзыкаПечать);
		
		// вывод заголовка в зависимости от языка печати
		Если Ссылка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.СдельныйНаряд Тогда
			ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка,  НСтр("ru='Сдельный наряд';uk='Відрядний наряд'",КодЯзыкаПечать),КодЯзыкаПечать)
		ИначеЕсли Ссылка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.СдельныйНарядСписком Тогда	
			ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка,  НСтр("ru='Сдельный наряд списком';uk='Відрядний наряд списком'",КодЯзыкаПечать),КодЯзыкаПечать)
		ИначеЕсли Ссылка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.СдельныйНарядНаПолевыеРаботы Тогда	
			ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка,  НСтр("ru='Сдельный наряд на полевые работы';uk='Відрядний наряд на польові роботи'",КодЯзыкаПечать),КодЯзыкаПечать)
		ИначеЕсли Ссылка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.СдельныйНарядНаПолевыеРаботыБригады Тогда
			ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка,  НСтр("ru='Сдельный наряд на полевые работы бригады';uk='Відрядний наряд на польові роботи бригади'",КодЯзыкаПечать),КодЯзыкаПечать)
		КонецЕсли; 
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
		
		НомерСтроки = 0;
		
		Для Каждого СтрокаТабличнойЧасти Из ТаблицаТЧ Цикл	
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьСтроки.Параметры.Заполнить(СтрокаТабличнойЧасти);
			ОбластьСтроки.Параметры.НомерСтроки = НомерСтроки;
			ОбластьСтроки.Параметры.ДатаНачала = Формат(СтрокаТабличнойЧасти.ДатаНачала,"ДФ=dd.MM.yyyy");
			ОбластьСтроки.Параметры.ДатаОкончания = Формат(СтрокаТабличнойЧасти.ДатаОкончания,"ДФ=dd.MM.yyyy");
			ТабДокумент.Вывести(ОбластьСтроки);
			
		КонецЦикла;
		
		Если ТаблицаТЧ <> Неопределено Тогда
			
			Всего  = ТаблицаТЧ.Итог("Результат");
			ВсегоЧасов  = ТаблицаТЧ.Итог("ОтработаноЧасов");
			ВсегоДней  = ТаблицаТЧ.Итог("ОтработаноДней");
			ВсегоКво  = ТаблицаТЧ.Итог("КоличествоРабот");
			ВсегоКвоГА  = ТаблицаТЧ.Итог("КоличествоГА");
			ВсегоКвоТ  = ТаблицаТЧ.Итог("КоличествоТ");
			
		Иначе
			
			Всего  = 0;
			ВсегоЧасов  = 0;
			ВсегоДней  = 0;
			ВсегоКво  = 0;
			ВсегоКвоГА  = 0;
			ВсегоКвоТ  = 0;
			
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Всего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Всего);
		ОбластьМакета.Параметры.ВсегоЧасов = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ВсегоЧасов);
		ОбластьМакета.Параметры.ВсегоДней = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ВсегоДней);
		ОбластьМакета.Параметры.ВсегоКво = ВсегоКво;
		
		Если Ссылка.ВидОперации = Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.СдельныйНарядНаПолевыеРаботы Тогда
			ОбластьМакета.Параметры.ВсегоКвоГА = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ВсегоКвоГА);
			ОбластьМакета.Параметры.ВсегоКвоТ = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ВсегоКвоТ);
		КонецЕсли;
		
		ОбластьМакета.Параметры.Ответственный = Шапка.Ответственный;
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла; 
	
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;

	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти 

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;

	ВидОперации = Неопределено; 

	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидОперации");
	КонецЕсли;

	// Если документ копируется, то вид формы получаем из копируемого документа.
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначениеКопирования")
			И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Параметры.ЗначениеКопирования, "ВидОперации");
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
			Если Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда
				ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	СтандартнаяОбработка = Ложь;
	ФормыИНАГРО_СдельныйНаряд = ПолучитьСоответствиеВидовОперацийФормам();
	ВыбраннаяФорма = ФормыИНАГРО_СдельныйНаряд[ВидОперации];
	Если ВыбраннаяФорма = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСоответствиеВидовОперацийФормам() Экспорт

	ФормыИНАГРО_СдельныйНаряд = Новый Соответствие;
	
	ФормыИНАГРО_СдельныйНаряд.Вставить(Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.СдельныйНарядСписком, 	              "ФормаДокументаОбщая");	
	ФормыИНАГРО_СдельныйНаряд.Вставить(Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.СдельныйНаряд, 	                  "ФормаДокументаОбщая");
	ФормыИНАГРО_СдельныйНаряд.Вставить(Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.СдельныйНарядНаПолевыеРаботы,        "ФормаДокументаОбщая");
	ФормыИНАГРО_СдельныйНаряд.Вставить(Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.СдельныйНарядНаПолевыеРаботыБригады, "ФормаДокументаОбщая");
		
	Возврат ФормыИНАГРО_СдельныйНаряд;

КонецФункции 

Функция ПолучитьФиксированныйМассивВидовОпераций() Экспорт

	МассивВидовОпераций = Новый Массив;
	СписокВидовОпераций = Новый СписокЗначений;
	
	ЗначенияПеречисления = Метаданные.Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд.ЗначенияПеречисления;
	Для Каждого ЗначениеПеречисления Из ЗначенияПеречисления Цикл
		ТекущийВидОперации = Перечисления.ИНАГРО_ВидыОперацийСдельныйНаряд[ЗначениеПеречисления.Имя];
		МассивВидовОпераций.Добавить(ТекущийВидОперации);
	КонецЦикла;
			
	Возврат Новый ФиксированныйМассив(МассивВидовОпераций);

КонецФункции

#КонецОбласти 

#КонецЕсли