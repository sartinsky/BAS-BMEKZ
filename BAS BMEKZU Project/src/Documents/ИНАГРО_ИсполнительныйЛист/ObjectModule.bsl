#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);	
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения); 	
					
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(РежимПроведения);
	
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		
		// Заполним записи в наборах записей регистров
		ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента);
		
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

#КонецОбласти 

#Область Проведение

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	ИсполнительныйЛист.Дата,
	|	ИсполнительныйЛист.Организация,
	|	ИсполнительныйЛист.Сотрудник,
	|	ИсполнительныйЛист.ДатаДействия,
	|	ИсполнительныйЛист.ДатаОкончания,
	|	ИсполнительныйЛист.Размер,
	|	ИсполнительныйЛист.Предел,
	|	ИсполнительныйЛист.СпособРасчетаИЛ,
	|	ИсполнительныйЛист.Получатель,
	|	ИсполнительныйЛист.ВидИсполнительногоДокумента,
	|	ИсполнительныйЛист.Ссылка,
	|	ИсполнительныйЛист.СпособОтраженияВБухучете
	|ИЗ
	|	Документ.ИНАГРО_ИсполнительныйЛист КАК ИсполнительныйЛист
	|ГДЕ
	|	ИсполнительныйЛист.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоШапке()

// По строке выборки результата запроса по документу формируем движения по регистрам.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                - выборка из результата запроса по шапке документа.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента)
	
	// Движения регистра ПлановыеУдержанияРаботниковОрганизаций
	
	// Определим вид расчета
	Если ВыборкаПоШапкеДокумента.ВидИсполнительногоДокумента = "Исполнительный лист"
		И ВыборкаПоШапкеДокумента.СпособРасчетаИЛ = 1 Тогда
		// Процентом
		
		Если ВыборкаПоШапкеДокумента.Предел = 0 Тогда
			ВидРасчета = ПланыВидовРасчета.ИНАГРО_Удержания.ИЛПроцентом;
		Иначе	
			ВидРасчета = ПланыВидовРасчета.ИНАГРО_Удержания.ИЛПроцентомДоПредела;
		КонецЕсли; 
		
	ИначеЕсли ВыборкаПоШапкеДокумента.ВидИсполнительногоДокумента = "Исполнительный лист" Тогда
		// Фикс суммой	
		
		Если ВыборкаПоШапкеДокумента.Предел = 0 Тогда
			ВидРасчета = ПланыВидовРасчета.ИНАГРО_Удержания.ИЛФиксированнойСуммой;
		Иначе	
			ВидРасчета = ПланыВидовРасчета.ИНАГРО_Удержания.ИЛФиксированнойСуммойДоПредела;
		КонецЕсли; 
		
	ИначеЕсли ВыборкаПоШапкеДокумента.СпособРасчетаИЛ = 1 Тогда
		// Алименты Процентом
		
		Если ВыборкаПоШапкеДокумента.Предел = 0 Тогда
			ВидРасчета = ПланыВидовРасчета.ИНАГРО_Удержания.АлиментыПроцентом;
		Иначе	
			ВидРасчета = ПланыВидовРасчета.ИНАГРО_Удержания.АлиментыПроцентомДоПредела;
		КонецЕсли; 
		
	Иначе
		// АлиментыФикс суммой	
		
		Если ВыборкаПоШапкеДокумента.Предел = 0 Тогда
			ВидРасчета = ПланыВидовРасчета.ИНАГРО_Удержания.АлиментыФиксированнойСуммой;
		Иначе	
			ВидРасчета = ПланыВидовРасчета.ИНАГРО_Удержания.АлиментыФиксированнойСуммойДоПредела;
		КонецЕсли; 
		
	КонецЕсли; 
	
	Движения.ИНАГРО_ПлановыеУдержанияРаботниковОрганизаций.Записывать = Истина;	
	Движение = Движения.ИНАГРО_ПлановыеУдержанияРаботниковОрганизаций.Добавить();
	
	// свойства
	Движение.Период             = ВыборкаПоШапкеДокумента.ДатаДействия; 
	
	// измерения
	Движение.Организация        = ВыборкаПоШапкеДокумента.Организация;
	Движение.Сотрудник          = ВыборкаПоШапкеДокумента.Сотрудник;
	Движение.ВидРасчета         = ВидРасчета;   	
	Движение.ДокументОснование	= ВыборкаПоШапкеДокумента.Ссылка;
	
	// ресурсы                              
	Движение.Действует                = Истина;
	Движение.Показатель1			  = ВыборкаПоШапкеДокумента.Размер;
	Движение.СпособОтраженияВБухучете = ?(ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.СпособОтраженияВБухучете),
										  ВыборкаПоШапкеДокумента.СпособОтраженияВБухучете,
										  ВидРасчета.СпособОтраженияВБухучете);
	
	// Если у документа указана дата окончания его действия, то закроем датой окончания это удержание.
	Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаОкончания) Тогда
		
		Движение = Движения.ИНАГРО_ПлановыеУдержанияРаботниковОрганизаций.Добавить();
		// свойства
		Движение.Период             = КонецДня(ВыборкаПоШапкеДокумента.ДатаОкончания);
		
		// измерения
		Движение.Организация        = ВыборкаПоШапкеДокумента.Организация;
		Движение.Сотрудник          = ВыборкаПоШапкеДокумента.Сотрудник;
		Движение.ВидРасчета         = ВидРасчета; 		
		Движение.ДокументОснование	= ВыборкаПоШапкеДокумента.Ссылка;
		
		// ресурсы
		Движение.Действует 			= Ложь;
		Движение.Показатель1		= 0;		
		Движение.Показатель2		= 0;	
		Движение.Показатель3		= 0;
		Движение.Показатель4		= 0;		
		Движение.Показатель5		= 0;	
		Движение.Показатель6		= 0;
		
	КонецЕсли;
	
	Если (СпособПеречисления=Перечисления.ИНАГРО_СпособыПеречисленияСуммПоИсполнительнымЛистам.ПочтовымПереводом) И (ТарифПочты<>Неопределено) Тогда
		
		Движение = Движения.ИНАГРО_ПлановыеУдержанияРаботниковОрганизаций.Добавить();
		// свойства
		Движение.Период             = ВыборкаПоШапкеДокумента.ДатаДействия;
		
		// измерения
		Движение.Организация        = ВыборкаПоШапкеДокумента.Организация;
		Движение.Сотрудник            = ВыборкаПоШапкеДокумента.Сотрудник;
		Движение.ВидРасчета         = ПланыВидовРасчета.ИНАГРО_Удержания.ПочтовыйСбор;		
		Движение.ДокументОснование	= ВыборкаПоШапкеДокумента.Ссылка;
		Движение.СпособОтраженияВБухучете = ?(ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.СпособОтраженияВБухучете),
											  ВыборкаПоШапкеДокумента.СпособОтраженияВБухучете,
											  Движение.ВидРасчета.СпособОтраженияВБухучете);
											  
		// ресурсы
		Движение.Действует          = Истина;
		Движение.Показатель1		= ВыборкаПоШапкеДокумента.Размер;
		
		// Если у документа указана дата окончания его действия, то закроем и "почтовые тарифы".
		Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаОкончания) Тогда
			
			Движение = Движения.ИНАГРО_ПлановыеУдержанияРаботниковОрганизаций.Добавить();
			// свойства
			Движение.Период            = КонецДня(ВыборкаПоШапкеДокумента.ДатаОкончания);
			
			// измерения
			Движение.Организация       = ВыборкаПоШапкеДокумента.Организация;
			Движение.Сотрудник         = ВыборкаПоШапкеДокумента.Сотрудник;
			Движение.ВидРасчета        = ПланыВидовРасчета.ИНАГРО_Удержания.ПочтовыйСбор;
			
			Движение.ДокументОснование = ВыборкаПоШапкеДокумента.Ссылка;
			
			// ресурсы
			Движение.Действует         = Ложь;
			Движение.Показатель1	   = 0;	
			Движение.Показатель2	   = 0;	
			Движение.Показатель3	   = 0;	
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИндексацияАлиментов Тогда
		
		Движение = Движения.ИНАГРО_ПлановыеУдержанияРаботниковОрганизаций.Добавить();
		// свойства
		Движение.Период             = ВыборкаПоШапкеДокумента.ДатаДействия;
		
		// измерения
		Движение.Организация        = ВыборкаПоШапкеДокумента.Организация;
		Движение.Сотрудник          = ВыборкаПоШапкеДокумента.Сотрудник;
		Движение.ВидРасчета         = ПланыВидовРасчета.ИНАГРО_Удержания.ИндексацияАлиментов;
		
		Движение.ДокументОснование	= ВыборкаПоШапкеДокумента.Ссылка;
		
		// ресурсы
		Движение.Действует          = Истина;
		Движение.Показатель1		= 0;
		
		// Если у документа указана дата окончания его действия, то закроем и "почтовые тарифы"
		Если ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаОкончания) Тогда
			
			Движение = Движения.ИНАГРО_ПлановыеУдержанияРаботниковОрганизаций.Добавить();
			
			// свойства
			Движение.Период             = КонецДня(ВыборкаПоШапкеДокумента.ДатаОкончания);
			
			// измерения
			Движение.Организация       = ВыборкаПоШапкеДокумента.Организация;
			Движение.Сотрудник         = ВыборкаПоШапкеДокумента.Сотрудник;
			Движение.ВидРасчета        = ПланыВидовРасчета.ИНАГРО_Удержания.ИндексацияАлиментов; 			
			Движение.ДокументОснование = ВыборкаПоШапкеДокумента.Ссылка;
			
			// ресурсы
			Движение.Действует         = Ложь;
			Движение.Показатель1	   = 0;	
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#КонецЕсли