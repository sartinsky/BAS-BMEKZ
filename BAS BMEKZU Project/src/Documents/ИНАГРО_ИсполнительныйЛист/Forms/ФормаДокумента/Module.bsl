#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 

	КадровыйУчетФормы.ФормаКадровогоДокументаПриСозданииНаСервере(ЭтаФорма);
	
	Если Параметры.Ключ.Пустая() Тогда		
		ПодготовитьФормуНаСервере();	
	КонецЕсли;
		
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	ПодготовитьФормуНаСервере(); 

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьСостояниеДокумента();	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Если ТекущийРаботник <> Объект.Сотрудник Тогда
		Объект.Дети.Очистить();
	КонецЕсли;
	ТекущийРаботник = Объект.Сотрудник;

КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	Объект.ДатаДействия = НачалоМесяца(Объект.ДатаНачала);

КонецПроцедуры

&НаКлиенте
Процедура ПолучательПриИзменении(Элемент)
	
	КонтрагентОбработатьИзменениеНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ВидИсполнительногоДокументаПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементовНаСервере();
	Если Не Объект.ВидИсполнительногоДокумента = "Соглашение об уплате алиментов" Тогда
		Объект.ИндексацияАлиментов = Ложь;
		Объект.НачалоИндексации = Неопределено;
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура СпособРасчетаИЛПриИзменении(Элемент)
	
	Если Объект.СпособРасчетаИЛ = 1 Тогда
		
		Элементы.Размер.Заголовок = НСтр("ru='Процент:';uk='Відсоток:'");
		Если Объект.Размер > 100 Тогда
			Объект.Размер = 100;		
		КонецЕсли; 
		Элементы.Размер.МаксимальноеЗначение = 100;
		Если Объект.ВидИсполнительногоДокумента = "Соглашение об уплате алиментов" Тогда
			Элементы.ПометкаУвеличиватьДоМинимума.Доступность = Истина;
			Объект.ПометкаУвеличиватьДоМинимума = Истина;
		КонецЕсли;
		
	Иначе                                                
		
		Элементы.Размер.Заголовок = НСтр("ru='Размер:';uk='Розмір:'");
		Элементы.Размер.МаксимальноеЗначение = 99999999;
		Элементы.ПометкаУвеличиватьДоМинимума.Доступность = Ложь;
		Объект.ПометкаУвеличиватьДоМинимума = Ложь;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СпособПеречисленияПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементовНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьДетей(Команда)
	
	Если Объект.Дети.Количество() > 0 Тогда
		 
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть будет очищена. Продолжить?';uk='Перед заповненням таблична частина буде очищена. Продовжити?'");
		Оповещение = Новый ОписаниеОповещения("ОчиститьТаблицуЗавершение", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Возврат;
	КонецЕсли;
		
	ВыполнитьЗаполнениеДети();

КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидИсполнительногоДокумента) Тогда
		Объект.ВидИсполнительногоДокумента = Элементы.ВидИсполнительногоДокумента.СписокВыбора[0];
		Объект.СпособРасчетаИЛ = 1; // Процентом 	
	КонецЕсли;
	
	УстановитьФункциональныеОпцииФормы();
	УправлениеФормой(ЭтаФорма);
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ПараметрыФО = Новый Структура("Организация, Период", Объект.Организация, Объект.Дата);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой(Форма)
	
	ДоступностьДети = Объект.ВидИсполнительногоДокумента = "Соглашение об уплате алиментов";
	Форма.Элементы.Дети.Доступность = ДоступностьДети;
	Форма.Элементы.ГруппаДети.Доступность = ДоступностьДети;	
	
	ДоступностьУвелДоМин = Объект.ВидИсполнительногоДокумента = "Соглашение об уплате алиментов";
	Форма.Элементы.ПометкаУвеличиватьДоМинимума.Доступность = ДоступностьУвелДоМин;
	
	Форма.Элементы.ИндексацияАлиментов.Доступность =  ДоступностьДети;
	Форма.Элементы.НачалоИндексации.Доступность =  ДоступностьДети;
	
	ВидимостьТарифаПочты = Объект.СпособПеречисления = Перечисления.ИНАГРО_СпособыПеречисленияСуммПоИсполнительнымЛистам.ПочтовымПереводом;
	ВидимостьСчетаКонтрагента = Объект.СпособПеречисления = Перечисления.ИНАГРО_СпособыПеречисленияСуммПоИсполнительнымЛистам.ЧерезБанк;
	Форма.Элементы.СчетКонтрагента.Видимость = ВидимостьСчетаКонтрагента;
	Форма.Элементы.ТарифПочты.Видимость = ВидимостьТарифаПочты;
	
КонецПроцедуры 

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура КонтрагентОбработатьИзменениеНаСервере()

	ДанныеШапки = Новый Структура("Ссылка, Дата, Организация, Получатель, ДоговорКонтрагента");
	
	ЗаполнитьЗначенияСвойств(ДанныеШапки, Объект);
	
	// Выполняем общие действия для всех документов при изменении Контрагент.
	ЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(ДанныеШапки,,,,"Получатель");
	
	ЗаполнитьЗначенияСвойств(Объект, ДанныеШапки);

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементовНаСервере()

	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТаблицуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт 
   	
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
        Возврат;
	Иначе 
		Объект.Дети.Очистить();
	КонецЕсли;
			
	ВыполнитьЗаполнениеДети();
		     
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗаполнениеДети()

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Родитель", Объект.Сотрудник.ФизическоеЛицо);
	Запрос.УстановитьПараметр("Ребенок", Справочники.СтепениРодстваФизЛиц.Ребенок);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	СоставСемьи.Физлицо КАК ИмяРебенка,
	|	(СоставСемьи.ГодРождения + 18) КАК ГодОкончания   //до 18 лет
	|ИЗ
	|	Справочник.ФизическиеЛица.СоставСемьи КАК СоставСемьи 	
	|ГДЕ СоставСемьи.Ссылка = &Родитель И СоставСемьи.СтепеньРодства = &Ребенок";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл	                             
		СтрокаДети = Объект.Дети.Добавить();
		СтрокаДети.ГодОкончания = Выборка.ГодОкончания;
		СтрокаДети.ФизЛицо = Выборка.ИмяРебенка;
	КонецЦикла;	

КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти