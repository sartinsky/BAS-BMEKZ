
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Перем Заголовок, СтруктураШапкиДокумента;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = НСтр("ru='Проведение документа ""';uk='Проведення документа ""'") + СокрЛП(Ссылка) + """: ";
	
	ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента);
	
	ПодготовитьТаблицуДокумента(СтруктураШапкиДокумента, Отказ, Заголовок);
		
	ДвиженияПоРегистру(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	Движения.Хозрасчетный.ВыполнитьДействияПередЗаписьюДвижений();

	ПроведениеСервер.ПодготовитьНаборыЗаписейКЗаписиДвижений(ЭтотОбъект);

КонецПроцедуры

Процедура ДвиженияПоРегистру(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	Перем Движение;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроводкиБУ = Движения.Хозрасчетный;
	ПроводкиБУ.Записывать = Истина;
	ДатаДока   = Дата;
	
	Проводка = ПроводкиБУ.Добавить();
	
	Проводка.Период = Дата;
	Проводка.Активность = Истина;
	Проводка.Организация = СтруктураШапкиДокумента.Организация;
	
	Если ВидОперации = Перечисления.СМС_ВидыОперацииДокументаДисконтирования.Выдача Тогда
		Проводка.Сумма = СтруктураШапкиДокумента.СуммаДоходов;
	Иначе
		Проводка.Сумма = СтруктураШапкиДокумента.СуммаРасходов;
	КонецЕсли;
	
	Проводка.Содержание = НСтр("ru='Проводки по % дисконт. фин. помощей';uk='Проводки по % дисконт. фін. допомоги'");
	Проводка.НомерЖурнала = "";
	Проводка.СчетДт = СтруктураШапкиДокумента.СчетФинПомощьДисконт;
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Договоры", СтруктураШапкиДокумента.ДоговорКонтрагента);
	
	Проводка.СчетКт = СтруктураШапкиДокумента.СчетКт; 
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СтатьиДоходов", СтруктураШапкиДокумента.СтатьяДоходов);
		
	Проводка = ПроводкиБУ.Добавить();
	
	Проводка.Период = Дата;
	Проводка.Активность = Истина;
	Проводка.Организация = СтруктураШапкиДокумента.Организация;
	
	Если ВидОперации = Перечисления.СМС_ВидыОперацииДокументаДисконтирования.Выдача Тогда
		Проводка.Сумма = СтруктураШапкиДокумента.СуммаРасходов;
	Иначе
		Проводка.Сумма = СтруктураШапкиДокумента.СуммаДоходов;
	КонецЕсли;
	
	Проводка.Содержание = НСтр("ru='Проводки по % дисконт. фин. помощей';uk='Проводки по % дисконт. фін. допомоги'");
	Проводка.НомерЖурнала = "";
	Проводка.СчетДт = СтруктураШапкиДокумента.СчетДт;
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтатьиНеоперационныхРасходов", СтруктураШапкиДокумента.СтатьяНеоперационныхРасходов);
	
	Проводка.СчетКт = СтруктураШапкиДокумента.СчетФинПомощьДисконт; 
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Договоры", СтруктураШапкиДокумента.ДоговорКонтрагента);
	
КонецПроцедуры

Процедура ПодготовитьСтруктуруШапкиДокумента(Заголовок, СтруктураШапкиДокумента) Экспорт
	
	// Дерево значений, содержащее имена необходимых полей в запросе по шапке.
	Перем ДеревоПолейЗапросаПоШапке;
	
	СтруктураШапкиДокумента   = ОбщегоНазначенияРед12.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

КонецПроцедуры // ПодготовитьСтруктуруШапкиДокумента()

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация, Контрагент, СчетФинПомощьДисконт, СчетКт, СчетДт, СтатьяНеоперационныхРасходов, СтатьяДоходов");
		
	// Теперь позовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура ПодготовитьТаблицуДокумента(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
			"ВЫБРАТЬ
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СМС_ДисконтированиеФинансовойПомощиРасшифровкаДисконтирования.Ссылка.ДатаПериода) = МЕСЯЦ(СМС_ДисконтированиеФинансовойПомощиРасшифровкаДисконтирования.ДатаНачала)
			|				ТОГДА ЕСТЬNULL(СМС_ДисконтированиеФинансовойПомощиРасшифровкаДисконтирования.ПроцентыДоход, 0)
			|		КОНЕЦ) КАК СуммаДоход,
			|	СУММА(ВЫБОР
			|			КОГДА МЕСЯЦ(СМС_ДисконтированиеФинансовойПомощиРасшифровкаДисконтирования.Ссылка.ДатаПериода) = МЕСЯЦ(СМС_ДисконтированиеФинансовойПомощиРасшифровкаДисконтирования.ДатаНачала)
			|				ТОГДА ЕСТЬNULL(СМС_ДисконтированиеФинансовойПомощиРасшифровкаДисконтирования.ПроцентыРасход, 0)
			|		КОНЕЦ) КАК СуммаРасход
			|ИЗ
			|	Документ.СМС_ДисконтированиеФинансовойПомощи.РасшифровкаДисконтирования КАК СМС_ДисконтированиеФинансовойПомощиРасшифровкаДисконтирования
			|ГДЕ
			|	СМС_ДисконтированиеФинансовойПомощиРасшифровкаДисконтирования.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		СтруктураШапкиДокумента.Вставить("СуммаДоходов", Выборка.СуммаДоход);
		СтруктураШапкиДокумента.Вставить("СуммаРасходов", Выборка.СуммаРасход);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	ОбщегоНазначенияБПСобытия.ПередЗаписьюДокументаДляУдаленияДвиженийПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры
