#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий
	
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
		
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
			
КонецПроцедуры
	
Процедура ОбработкаПроведения(Отказ, РежимПроведения)	
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияБПВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ПроверитьЗаполнениеТабличнойЧастиЗатраты(Отказ); 	
		
	Если НЕ Отказ Тогда
		// Формирование движения регистров
		ДвиженияПоРегистрам(Отказ, Заголовок, РежимПроведения);
	КонецЕсли;
	
	Движения.Хозрасчетный.ВыполнитьДействияПередЗаписьюДвижений();
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКЗаписиДвижений(ЭтотОбъект);
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти

#Область Проведение

Процедура ПроверитьЗаполнениеТабличнойЧастиЗатраты(Отказ)	
	
	ПредставлениеТабличнойЧасти = ЭтотОбъект.Метаданные().ТабличныеЧасти.Затраты.Представление();
	
	Для каждого СтрокаТЧ Из Затраты Цикл
	
		СтрокаНачалаСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='В строке номер ""%1"" табличной части ""%2"": ';uk='У рядку номер ""%1"" табличної частини ""%2"": '"), СокрЛП(СтрокаТЧ.НомерСтроки), ПредставлениеТабличнойЧасти);
		ЧислоАктивныхСубконто = СтрокаТЧ.СчетЗатратПолучатель.ВидыСубконто.Количество();
		
		Для Сч = 1 По ЧислоАктивныхСубконто Цикл
			
			Если СтрокаТЧ.СчетЗатратПолучатель.ВидыСубконто[Сч - 1].ВидСубконто.Наименование = "Номенклатурные группы" И НЕ ЗначениеЗаполнено(СтрокаТЧ.НоменклатурнаяГруппаПолучатель) Тогда
				СтрокаСообщения = НСтр("ru='Не заполнено значение реквизита Номенклатурная группа получатель""';uk='Не заповнене значення реквізиту Номенклатурна група отримувач""'") + """!";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщения, , , , Отказ);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;	
		
КонецПроцедуры

Процедура ДвиженияПоРегистрам(Отказ, Заголовок, РежимПроведения)
	
	ДатаНКУ2015 = '2015 01 01';

	мОперация = Движения.Хозрасчетный;
	
	СписокСчетовЗатрат = Новый СписокЗначений;
	СписокСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.Производство);
	СписокСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);  	

	Для Каждого СтрокаТЧЗатраты Из Затраты Цикл
		
		Если Сторно Тогда
			
			ПроводкиБУ = мОперация.Добавить();
			ПроводкиБУ.Организация 	= ЭтотОбъект.Организация;
			ПроводкиБУ.Период 		= ЭтотОбъект.Дата;
			ПроводкиБУ.Содержание 	= НСтр("ru='Перенос затрат будущих периодов';uk='Перенесення витрат майбутніх періодів'");
			ПроводкиБУ.Сумма 		= СтрокаТЧЗатраты.Сумма;
			Сч = 0;
			ПроводкиБУ.СчетДт = СтрокаТЧЗатраты.СчетЗатратПолучатель;
			Для Каждого Строка Из ПроводкиБУ.СчетДт.ВидыСубконто Цикл
				Если Строка.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения Тогда 
					БухгалтерскийУчет.УстановитьСубконто(ПроводкиБУ.СчетДт, ПроводкиБУ.СубконтоДт, Строка.НомерСтроки, СтрокаТЧЗатраты.ПодразделениеПолучатель);
				ИначеЕсли Строка.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы Тогда
					БухгалтерскийУчет.УстановитьСубконто(ПроводкиБУ.СчетДт, ПроводкиБУ.СубконтоДт, Строка.НомерСтроки,  СтрокаТЧЗатраты.НоменклатурнаяГруппаПолучатель);
				ИначеЕсли Строка.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
					БухгалтерскийУчет.УстановитьСубконто(ПроводкиБУ.СчетДт, ПроводкиБУ.СубконтоДт,  Строка.НомерСтроки, СтрокаТЧЗатраты.СтатьяЗатратПолучатель);
				КонецЕсли;
			КонецЦикла;

			ПроводкиБУ.СчетКт = ПланыСчетов.Хозрасчетный.Вспомогательный;
			
			Если ПроводкиБУ.Период < ДатаНКУ2015 Тогда
				Если ПроводкиБУ.СчетДт.НалоговыйУчет Тогда
					ПроводкиБУ.НалоговоеНазначениеДт = СтрокаТЧЗатраты.НалоговоеНазначениеПолучатель;
					ПроводкиБУ.СуммаНУДт = СтрокаТЧЗатраты.СуммаНУ;
				КонецЕсли;
			Иначе
				Если ПроводкиБУ.СчетДт.НалоговыйУчет Тогда
					Если ПроводкиБУ.СчетДт.УчетПоНалоговымНазначениямНДС Тогда
						ПроводкиБУ.НалоговоеНазначениеДт = СтрокаТЧЗатраты.НалоговоеНазначениеПолучатель;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			ПроводкиБУ = мОперация.Добавить();
			ПроводкиБУ.Организация 	= ЭтотОбъект.Организация;
			ПроводкиБУ.Период 		= ЭтотОбъект.Дата;
			ПроводкиБУ.Содержание 	= НСтр("ru='Перенос затрат будущих периодов';uk='Перенесення витрат майбутніх періодів'");
			ПроводкиБУ.Сумма 		= - СтрокаТЧЗатраты.Сумма;
			Сч = 0;
			ПроводкиБУ.СчетДт = СтрокаТЧЗатраты.СчетЗатрат;
			
			Для Каждого Строка Из ПроводкиБУ.СчетДт.ВидыСубконто Цикл
				Если Строка.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения Тогда 
					БухгалтерскийУчет.УстановитьСубконто(ПроводкиБУ.СчетДт, ПроводкиБУ.СубконтоДт, Строка.НомерСтроки, СтрокаТЧЗатраты.Подразделение);
				ИначеЕсли Строка.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы Тогда
					БухгалтерскийУчет.УстановитьСубконто(ПроводкиБУ.СчетДт, ПроводкиБУ.СубконтоДт, Строка.НомерСтроки,  СтрокаТЧЗатраты.НоменклатурнаяГруппа);
				ИначеЕсли Строка.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
					БухгалтерскийУчет.УстановитьСубконто(ПроводкиБУ.СчетДт, ПроводкиБУ.СубконтоДт,  Строка.НомерСтроки, СтрокаТЧЗатраты.СтатьяЗатрат);
				КонецЕсли;
			КонецЦикла;
			
			ПроводкиБУ.СчетКт = ПланыСчетов.Хозрасчетный.Вспомогательный;
			
			Если ПроводкиБУ.Период < ДатаНКУ2015 Тогда
				Если ПроводкиБУ.СчетДт.НалоговыйУчет Тогда
					ПроводкиБУ.НалоговоеНазначениеДт = СтрокаТЧЗатраты.НалоговоеНазначение;
					ПроводкиБУ.СуммаНУДт = - СтрокаТЧЗатраты.СуммаНУ;
				КонецЕсли;
			Иначе
				Если ПроводкиБУ.СчетДт.НалоговыйУчет Тогда
					Если ПроводкиБУ.СчетДт.УчетПоНалоговымНазначениямНДС Тогда
						ПроводкиБУ.НалоговоеНазначениеДт = СтрокаТЧЗатраты.НалоговоеНазначение;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			
			ПроводкиБУ = мОперация.Добавить();
			ПроводкиБУ.Организация 	= ЭтотОбъект.Организация;
			ПроводкиБУ.Период 		= ЭтотОбъект.Дата;
			ПроводкиБУ.Содержание 	= НСтр("ru='Перенос затрат будущих периодов';uk='Перенесення витрат майбутніх періодів'");
			Сч = 0;
			ПроводкиБУ.СчетДт = СтрокаТЧЗатраты.СчетЗатратПолучатель;
			Для Каждого Строка Из ПроводкиБУ.СчетДт.ВидыСубконто Цикл
				Если Строка.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения Тогда 
					БухгалтерскийУчет.УстановитьСубконто(ПроводкиБУ.СчетДт, ПроводкиБУ.СубконтоДт, Строка.НомерСтроки, СтрокаТЧЗатраты.ПодразделениеПолучатель);
				ИначеЕсли Строка.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы Тогда
					БухгалтерскийУчет.УстановитьСубконто(ПроводкиБУ.СчетДт, ПроводкиБУ.СубконтоДт, Строка.НомерСтроки,  СтрокаТЧЗатраты.НоменклатурнаяГруппаПолучатель);
				ИначеЕсли Строка.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
					БухгалтерскийУчет.УстановитьСубконто(ПроводкиБУ.СчетДт, ПроводкиБУ.СубконтоДт,  Строка.НомерСтроки, СтрокаТЧЗатраты.СтатьяЗатратПолучатель);
				КонецЕсли;
			КонецЦикла;
			ПроводкиБУ.СчетКт = СтрокаТЧЗатраты.СчетЗатрат;
			Для Каждого Строка Из ПроводкиБУ.СчетКт.ВидыСубконто Цикл
				Если Строка.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения Тогда 
					БухгалтерскийУчет.УстановитьСубконто(ПроводкиБУ.СчетКт, ПроводкиБУ.СубконтоКт, Строка.НомерСтроки, СтрокаТЧЗатраты.Подразделение);
				ИначеЕсли Строка.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы Тогда
					БухгалтерскийУчет.УстановитьСубконто(ПроводкиБУ.СчетКт, ПроводкиБУ.СубконтоКт, Строка.НомерСтроки,  СтрокаТЧЗатраты.НоменклатурнаяГруппа);
				ИначеЕсли Строка.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
					БухгалтерскийУчет.УстановитьСубконто(ПроводкиБУ.СчетКт, ПроводкиБУ.СубконтоКт,  Строка.НомерСтроки, СтрокаТЧЗатраты.СтатьяЗатрат);
				КонецЕсли;
			КонецЦикла;
			
			Если ПроводкиБУ.Период < ДатаНКУ2015 Тогда
			
				Если ПроводкиБУ.СчетДт.НалоговыйУчет Тогда
					ПроводкиБУ.НалоговоеНазначениеДт = СтрокаТЧЗатраты.НалоговоеНазначениеПолучатель;
					ПроводкиБУ.СуммаНУДт = СтрокаТЧЗатраты.СуммаНУ;
				КонецЕсли;
				Если ПроводкиБУ.СчетКт.НалоговыйУчет Тогда
					ПроводкиБУ.НалоговоеНазначениеКт = СтрокаТЧЗатраты.НалоговоеНазначение;
					ПроводкиБУ.СуммаНУКт = СтрокаТЧЗатраты.СуммаНУ;
				КонецЕсли;
				
			Иначе
				
				Если ПроводкиБУ.СчетДт.НалоговыйУчет Тогда
					Если ПроводкиБУ.СчетДт.УчетПоНалоговымНазначениямНДС Тогда
						ПроводкиБУ.НалоговоеНазначениеДт = СтрокаТЧЗатраты.НалоговоеНазначениеПолучатель;
					КонецЕсли;
				КонецЕсли;
				Если ПроводкиБУ.СчетКт.НалоговыйУчет Тогда
					Если ПроводкиБУ.СчетКт.УчетПоНалоговымНазначениямНДС Тогда
						ПроводкиБУ.НалоговоеНазначениеКт = СтрокаТЧЗатраты.НалоговоеНазначение;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
			ПроводкиБУ.Сумма 		= СтрокаТЧЗатраты.Сумма;
			
		КонецЕсли;
		
		
		Если Сторно Тогда
			
			Если ИНАГРО_Общий.ИНАГРО_СчетВСпискеПоИерархии(СтрокаТЧЗатраты.СчетЗатрат, СписокСчетовЗатрат) Тогда
				Движение = Движения.ИНАГРО_ЗатратыОрганизаций.Добавить();
				Движение.ВидДвижения 	      = ВидДвиженияНакопления.Приход;
				Движение.Период 		      = ЭтотОбъект.Дата;
				Движение.Организация 	      = ЭтотОбъект.Организация;
				Движение.СчетЗатрат 		  = СтрокаТЧЗатраты.СчетЗатрат;
				Движение.Подразделение 		  = СтрокаТЧЗатраты.Подразделение;
				Движение.НоменклатурнаяГруппа = СтрокаТЧЗатраты.НоменклатурнаяГруппа;
				Движение.СтатьяЗатрат 		  = СтрокаТЧЗатраты.СтатьяЗатрат;
				Движение.Количество 		  = - СтрокаТЧЗатраты.Количество;
				Движение.НалоговоеНазначениеДоходовИЗатрат = СтрокаТЧЗатраты.НалоговоеНазначение;
				Движение.Сумма 				  = - СтрокаТЧЗатраты.Сумма;
				Движение.СуммаНУ 			  = - СтрокаТЧЗатраты.СуммаНУ;
			КонецЕсли;
			
		Иначе
			
			Если ИНАГРО_Общий.ИНАГРО_СчетВСпискеПоИерархии(СтрокаТЧЗатраты.СчетЗатрат, СписокСчетовЗатрат) Тогда
				Движение = Движения.ИНАГРО_ЗатратыОрганизаций.Добавить();
				Движение.ВидДвижения 	      = ВидДвиженияНакопления.Расход;
				Движение.Период 		      = ЭтотОбъект.Дата;
				Движение.Организация 	      = ЭтотОбъект.Организация;
				Движение.СчетЗатрат 		  = СтрокаТЧЗатраты.СчетЗатрат;
				Движение.Подразделение 		  = СтрокаТЧЗатраты.Подразделение;
				Движение.НоменклатурнаяГруппа = СтрокаТЧЗатраты.НоменклатурнаяГруппа;
				Движение.СтатьяЗатрат 		  = СтрокаТЧЗатраты.СтатьяЗатрат;
				Движение.Количество 		  = СтрокаТЧЗатраты.Количество;
				Движение.НалоговоеНазначениеДоходовИЗатрат = СтрокаТЧЗатраты.НалоговоеНазначение;
				Движение.Сумма 				  = СтрокаТЧЗатраты.Сумма;
				Движение.СуммаНУ 			  = СтрокаТЧЗатраты.СуммаНУ;
				
			КонецЕсли;
		КонецЕсли;
		
		Если ИНАГРО_Общий.ИНАГРО_СчетВСпискеПоИерархии(СтрокаТЧЗатраты.СчетЗатратПолучатель, СписокСчетовЗатрат) Тогда
			Движение = Движения.ИНАГРО_ЗатратыОрганизаций.Добавить();
			Движение.ВидДвижения 	      = ВидДвиженияНакопления.Приход;
			Движение.Период 		      = ЭтотОбъект.Дата;
			Движение.Организация 	      = ЭтотОбъект.Организация;
			Движение.СчетЗатрат 		  = СтрокаТЧЗатраты.СчетЗатратПолучатель;
			Движение.Подразделение 		  = СтрокаТЧЗатраты.ПодразделениеПолучатель;
			Движение.НоменклатурнаяГруппа = СтрокаТЧЗатраты.НоменклатурнаяГруппаПолучатель;
			Движение.СтатьяЗатрат 		  = СтрокаТЧЗатраты.СтатьяЗатратПолучатель;
			Движение.Количество 		  = СтрокаТЧЗатраты.Количество;
			Движение.НалоговоеНазначениеДоходовИЗатрат = СтрокаТЧЗатраты.НалоговоеНазначениеПолучатель;
			Движение.Сумма 				  = СтрокаТЧЗатраты.Сумма;
			Движение.СуммаНУ 			  = СтрокаТЧЗатраты.СуммаНУ;
		КонецЕсли;
	
		
	КонецЦикла;  	
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли