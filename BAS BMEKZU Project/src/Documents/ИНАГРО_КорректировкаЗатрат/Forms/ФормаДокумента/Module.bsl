#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
		УстановитьСостояниеДокумента(); 	
	КонецЕсли;
	
	// Уведомим о появлении функционала рабочей даты
	ЭтаФорма.НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях("РабочаяДатаИзДокумента");
	 
	// Показываем, если это новый документ и сама рабочая дата еще не установлена.
	ЭтаФорма.НастройкиПредупреждений.РабочаяДатаИзДокумента = ЭтаФорма.НастройкиПредупреждений.РабочаяДатаИзДокумента
	 	И ЭтаФорма.Параметры.Ключ.Пустая()
	  	И НЕ ЗначениеЗаполнено(БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("РабочаяДата"));
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ГрупповоеЗаполнение1" Тогда
		ВыполнитьГрупповоеЗаполнение(Параметр);		
	Иначе
		ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	УстановитьСостояниеДокумента();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");

КонецПроцедуры

#КонецОбласти  

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗатраты

&НаКлиенте
Процедура ЗатратыСчетЗатратОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = БухгалтерскийУчетКлиент.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьЗатраты(Команда)

	Если Объект.Затраты.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть будет очищена. Продолжить?';uk='Перед заповненням таблична частина буде очищена. Продовжити?'");
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьЗатратыЗавершение", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Возврат;
	Иначе
		ЗаполнитьЗатратыОбработать();		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗаполнитьЗатратыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
    Объект.Затраты.Очистить();
	
	ЗаполнитьЗатратыОбработать(); 	
	
КонецПроцедуры  

&НаКлиенте
Процедура ЗаполнитьЗатратыОбработать()  
		
	ПараметрыФормы = ПолучитьПараметрыЗаполнения();
	
	Если ПараметрыФормы <> Неопределено Тогда
		ОткрытьФорму("Обработка.ИНАГРО_КорректировкаЗатрат.Форма.Форма", ПараметрыФормы, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);
	КонецЕсли;

КонецПроцедуры   

&НаКлиенте
Процедура ЗаполнитьПолучателяПоЗатратам(Команда)
	
	Для каждого СтрЗатраты Из Объект.Затраты Цикл
		СтрЗатраты.СчетЗатратПолучатель           = СтрЗатраты.СчетЗатрат;
		СтрЗатраты.ПодразделениеПолучатель        = СтрЗатраты.Подразделение;
		СтрЗатраты.НоменклатурнаяГруппаПолучатель = СтрЗатраты.НоменклатурнаяГруппа;
		СтрЗатраты.СтатьяЗатратПолучатель         = СтрЗатраты.СтатьяЗатрат;
		СтрЗатраты.НалоговоеНазначениеПолучатель  = СтрЗатраты.НалоговоеНазначение;
	КонецЦикла;

КонецПроцедуры

// Установить значение колонок

&НаКлиенте
Процедура УстановитьСчетЗатратПолучатель(Команда)
	
	ВыбЗнач = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПустаяСсылка");
	Массив = Новый Массив;
	Массив.Добавить(ТипЗнч(ВыбЗнач));
	ОписаниеТипов = Новый ОписаниеТипов(Массив); 	
	Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначенияСчетЗатратПолучатель", ЭтотОбъект);

	ПоказатьВводЗначения(Оповещение, ВыбЗнач, НСтр("ru='Введите значение';uk='Введіть значення'"), ОписаниеТипов);   	
			
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЗначенияСчетЗатратПолучатель(ВыбЗнач, Параметры) Экспорт
	
	Если ВыбЗнач <> Неопределено Тогда  		
				
		Если НЕ СчетЗатратПолучательУстановитьНаСервере(ВыбЗнач) Тогда 			
			Для Каждого СтрокаТЧ Из Объект.Затраты Цикл 				
				СтрокаТЧ.СчетЗатратПолучатель = ВыбЗнач; 				
			КонецЦикла;			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СчетЗатратПолучательУстановитьНаСервере(ВыбЗнач)
	
	Отказ = Ложь;
	
	СписокСчетовЗатрат = ИНАГРО_Общий.ИНАГРО_СписокСчетовЗатрат();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК СчетЗатрат
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СписокСчетовЗатрат)";
	
	Запрос.УстановитьПараметр("СписокСчетовЗатрат", СписокСчетовЗатрат);
	
	СписокСчетов = Запрос.Выполнить().Выгрузить();  
	
	Если СписокСчетов.Найти(ВыбЗнач) = Неопределено Тогда		
		ТекстСообщения = НСтр("ru='Выбранный счет не указан в регистре Список счетов затрат для распределения. Счет добавлен не будет!';uk='Обраний рахунок не вказаний в регістрі Список рахунків витрат для розподілу. Рахунок доданий не буде!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения); 
		Отказ = Истина;
	КонецЕсли; 
	
	Возврат Отказ;
		
КонецФункции 

&НаКлиенте
Процедура УстановитьПодразделениеПолучатель(Команда)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Владелец", Объект.Организация);	 
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", 	   ПараметрыОтбора);
	ПараметрыФормы.Вставить("РежимВыбора", Истина); 
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеВводаЗначенияПодразделениеПолучатель", ЭтотОбъект);

	ОткрытьФорму("Справочник.ПодразделенияОрганизаций.Форма.ФормаВыбора", ПараметрыФормы, , , , , ОповещениеОЗакрытии);	
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЗначенияПодразделениеПолучатель(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия <> Неопределено Тогда
		
		Для Каждого СтрокаТЧ Из Объект.Затраты Цикл 			
			СтрокаТЧ.ПодразделениеПолучатель = РезультатЗакрытия; 			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьНоменклатурнаяГруппаПолучатель(Команда)
	
	ВыбЗнач = ПредопределенноеЗначение("Справочник.НоменклатурныеГруппы.ПустаяСсылка");
	Массив = Новый Массив;
	Массив.Добавить(ТипЗнч(ВыбЗнач));
	ОписаниеТипов = Новый ОписаниеТипов(Массив); 	
	Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначенияНоменклатурнаяГруппаПолучатель", ЭтотОбъект);
	ПоказатьВводЗначения(Оповещение, ВыбЗнач, НСтр("ru='Введите значение';uk='Введіть значення'"), ОписаниеТипов);   	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЗначенияНоменклатурнаяГруппаПолучатель(ВыбЗнач, Параметры) Экспорт
	
	Если ВыбЗнач <> Неопределено Тогда
		Для Каждого СтрокаТЧ Из Объект.Затраты Цикл 			
			СтрокаТЧ.НоменклатурнаяГруппаПолучатель = ВыбЗнач;			
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатьяЗатратПолучатель(Команда)
	
	ВыбЗнач = ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ПустаяСсылка");
	Массив = Новый Массив;
	Массив.Добавить(ТипЗнч(ВыбЗнач));
	ОписаниеТипов = Новый ОписаниеТипов(Массив); 	
	Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначенияСтатьяЗатратПолучатель", ЭтотОбъект);
	ПоказатьВводЗначения(Оповещение, ВыбЗнач, НСтр("ru='Введите значение';uk='Введіть значення'"), ОписаниеТипов);   	
	 	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЗначенияСтатьяЗатратПолучатель(ВыбЗнач, Параметры) Экспорт
	
	Если ВыбЗнач <> Неопределено Тогда
		Для Каждого СтрокаТЧ Из Объект.Затраты Цикл 
			СтрокаТЧ.СтатьяЗатратПолучатель = ВыбЗнач;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьНалоговоеНазначениеПолучатель(Команда)
	
	ВыбЗнач = ПредопределенноеЗначение("Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка");
	Массив = Новый Массив;
	Массив.Добавить(ТипЗнч(ВыбЗнач));
	ОписаниеТипов = Новый ОписаниеТипов(Массив); 	
	Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначенияНалоговоеНазначениеПолучатель", ЭтотОбъект);
	ПоказатьВводЗначения(Оповещение, ВыбЗнач, НСтр("ru='Введите значение';uk='Введіть значення'"), ОписаниеТипов);   	
	 	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЗначенияНалоговоеНазначениеПолучатель(ВыбЗнач, Параметры) Экспорт
	
	Если ВыбЗнач <> Неопределено Тогда
		Для Каждого СтрокаТЧ Из Объект.Затраты Цикл			
			СтрокаТЧ.НалоговоеНазначениеПолучатель = ВыбЗнач;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	ТекущаяДатаДокумента	= Объект.Дата;
	
	УстановитьПараметрыВыбораСчетаЗатрат();	 	
	
	УстановитьСостояниеДокумента();

КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораСчетаЗатрат()
	
	СчетаОтбора = Новый Массив;
	СчетаОтбора.Добавить(ПланыСчетов.Хозрасчетный.Производство);
	СчетаОтбора.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);  	
			
	СчетаЗатрат = БухгалтерскийУчет.ПолучитьМассивСчетовДенежныхСредств(СчетаОтбора, Ложь);
	
	НовыйМассивПараметров = Новый Массив;
	НовыйМассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СчетаЗатрат)));
	НовыйМассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ЗапретитьИспользоватьВПроводках", Ложь));
	
	Элементы.ЗатратыСчетЗатрат.ПараметрыВыбора              = Новый ФиксированныйМассив(НовыйМассивПараметров);
	Элементы.НазначениеСчетЗатрат.ПараметрыВыбора           = Новый ФиксированныйМассив(НовыйМассивПараметров);
	//Элементы.НазначениеСчетЗатратПолучатель.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассивПараметров);
 		
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыЗаполнения()

	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("ДатаАктуальности", КонецДня(Объект.Дата));
	ПараметрыФормы.Вставить("Организация",      Объект.Организация);
		
	Возврат ПараметрыФормы;

КонецФункции

&НаКлиенте
Процедура ВыполнитьГрупповоеЗаполнение(Параметр)
	
	ВыполнитьГрупповоеЗаполнениеНаСервере(Параметр);	
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьГрупповоеЗаполнениеНаСервере(Параметр)
	
	ТаблицаЗатрат = ПолучитьИзВременногоХранилища(Параметр.АдресТЗ);

	Объект.Затраты.Загрузить(ТаблицаЗатрат);
	
	Объект.ИнформацияОтбор = Параметр.ИнформацияОтбор;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти