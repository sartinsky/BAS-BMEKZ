#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииПечати

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Заявка на покупку/продажу валюты
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗаявкаНаПокупкуПродажуВалюты";
	КомандаПечати.Представление = НСтр("ru='Заявка на покупку/продажу валюты';uk='Заявка на покупку/продаж валюти'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru='Реестр документов ""Заявка на покупку/продажу валюты""';uk='Реєстр документів ""Заявка на купівлю/продаж валюти""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
	
КонецПроцедуры
	
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаявкаНаПокупкуПродажуВалюты") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗаявкаНаПокупкуПродажуВалюты",
			НСтр("ru='Заявка на покупку/продажу валюты';uk='Заявка на покупку/продаж валюти'"),
			ПечатьПокупкаПродажа(МассивОбъектов, ОбъектыПечати)
			,,);
			
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьПокупкаПродажа(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявкаНаПокупкуПродажуВалюты_Покупка";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаПокупкуПродажуВалюты.Ссылка,
	|	ЗаявкаНаПокупкуПродажуВалюты.ВерсияДанных,
	|	ЗаявкаНаПокупкуПродажуВалюты.ПометкаУдаления,
	|	ЗаявкаНаПокупкуПродажуВалюты.Номер,
	|	ЗаявкаНаПокупкуПродажуВалюты.Дата,
	|	ЗаявкаНаПокупкуПродажуВалюты.Проведен,
	|	ЗаявкаНаПокупкуПродажуВалюты.ВидОперации,
	|	ЗаявкаНаПокупкуПродажуВалюты.Организация,
	|	ЗаявкаНаПокупкуПродажуВалюты.Банк,
	|	ЗаявкаНаПокупкуПродажуВалюты.Валюта,
	|	ЗаявкаНаПокупкуПродажуВалюты.СуммаГривневая,
	|	ЗаявкаНаПокупкуПродажуВалюты.СуммаВалютная,
	|	ЗаявкаНаПокупкуПродажуВалюты.Комиссионные,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетГривневый,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетГривневый.НомерСчета КАК СчетГривневыйНомерСчета,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетГривневый.Банк КАК СчетГривневыйБанк,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетГривневый.Банк.Код КАК СчетГривневыйБанкКод,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетВалютный,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетВалютный.НомерСчета КАК СчетВалютныйНомерСчета,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетВалютный.Банк КАК СчетВалютныйБанк,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетВалютный.Банк.Код КАК СчетВалютныйБанкКод,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетВозврата,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетВозврата.НомерСчета КАК СчетВозвратаНомерСчета,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетВозврата.Банк КАК СчетВозвратаБанк,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетВозврата.Банк.Код КАК СчетВозвратаБанкКод,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетБанка,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетБанка.НомерСчета КАК СчетБанкаНомерСчета,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетБанка.Банк КАК СчетБанкаБанк,
	|	ЗаявкаНаПокупкуПродажуВалюты.СчетБанка.Банк.Код КАК СчетБанкаБанкКод,
	|	ЗаявкаНаПокупкуПродажуВалюты.Курс,
	|	ЗаявкаНаПокупкуПродажуВалюты.Сотрудник,
	|	ЗаявкаНаПокупкуПродажуВалюты.Комментарий,
	|	ЗаявкаНаПокупкуПродажуВалюты.Основание,
	|	ЗаявкаНаПокупкуПродажуВалюты.Ответственный
	|ИЗ
	|	Документ.ЗаявкаНаПокупкуПродажуВалюты КАК ЗаявкаНаПокупкуПродажуВалюты
	|ГДЕ
	|	ЗаявкаНаПокупкуПродажуВалюты.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаявкаНаПокупкуПродажуВалюты.Дата,
	|	ЗаявкаНаПокупкуПродажуВалюты.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ОдинДокумент   = МассивОбъектов.Количество() = 1;
	ПервыйДокумент = Истина;
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Пока Выборка.Следующий() Цикл

		ЕстьОшибки = Ложь;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		Если Выборка.ВидОперации = Перечисления.ВидыОперацийПокупкаПродажаВалюты.ПокупкаВалюты Тогда
			ПечатьПокупка(Выборка, ТабличныйДокумент);
		Иначе
			ПечатьПродажа(Выборка, ТабличныйДокумент);
		КонецЕсли;
		
		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
		НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

Процедура ПечатьПокупка(ДанныеДляПечати, ТабличныйДокумент)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаявкаНаПокупкуПродажуВалюты.ПФ_MXL_UK_ЗаявкаНаПокупку");
	Обл   = Макет.ПолучитьОбласть("Шапка");
	
	Обл.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеДляПечати.Номер);
	Обл.Параметры.Дата  = ДанныеДляПечати.Дата;
	
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДанныеДляПечати.Организация, ДанныеДляПечати.Дата);
	Обл.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование;
	Обл.Параметры.Адрес = СведенияОбОрганизации.ЮридическийАдрес;
	Обл.Параметры.Телефоны = СведенияОбОрганизации.Телефоны;
	Обл.Параметры.Банк = ДанныеДляПечати.Банк.НаименованиеПолное + ", " + БухгалтерскийУчетПереопределяемый.ПолучитьАдресИзКонтактнойИнформации(ДанныеДляПечати.Банк,"Юридический");
	
	Обл.Параметры.Сотрудник = ДанныеДляПечати.Сотрудник.Наименование;
	
	Обл.Параметры.Основание = ДанныеДляПечати.Основание;
	
	Обл.Параметры.Комиссионные = ДанныеДляПечати.Комиссионные;
	
	Обл.Параметры.Валюта = ДанныеДляПечати.Валюта.НаименованиеПолное + ", " + Строка(ДанныеДляПечати.Валюта.Код);
	Обл.Параметры.СуммаВалютная = ДанныеДляПечати.СуммаВалютная;
	Обл.Параметры.Курс = ?(ДанныеДляПечати.Курс = 0, НСтр("ru='за  курсом уповноваженого банку';uk='за  курсом уповноваженого банку'"), КурсККратности(ДанныеДляПечати.Курс, ДанныеДляПечати.Валюта, ДанныеДляПечати.Дата));
	Обл.Параметры.СуммаГривневая = ?(ДанныеДляПечати.СуммаГривневая = 0, " ", ДанныеДляПечати.СуммаГривневая);
	
	Обл.Параметры.СчетБанкаНомер = ДанныеДляПечати.СчетБанкаНомерСчета;
	Обл.Параметры.СчетБанкаБанк  = ДанныеДляПечати.СчетБанкаБанк;
	Обл.Параметры.СчетБанкаКод   = ДанныеДляПечати.СчетБанкаБанкКод;
	
	Обл.Параметры.СчетВалютныйНомер = ДанныеДляПечати.СчетВалютныйНомерСчета;
	Обл.Параметры.СчетВалютныйБанк  = ДанныеДляПечати.СчетВалютныйБанк;
	Обл.Параметры.СчетВалютныйКод   = ДанныеДляПечати.СчетВалютныйБанкКод;
	
	Обл.Параметры.СчетВозвратаНомер = ДанныеДляПечати.СчетВозвратаНомерСчета;
	Обл.Параметры.СчетВозвратаБанк  = ДанныеДляПечати.СчетВозвратаБанк;
	Обл.Параметры.СчетВозвратаКод   = ДанныеДляПечати.СчетВозвратаБанкКод;
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(ДанныеДляПечати.Организация, ДанныеДляПечати.Дата);
	Обл.Параметры.ФИОГлавногоБухгалтера = Руководители.ГлавныйБухгалтер;
	Обл.Параметры.ФИОРуководителя = Руководители.Руководитель;

	ТабличныйДокумент.Вывести(Обл);

КонецПроцедуры

Процедура ПечатьПродажа(ДанныеДляПечати, ТабличныйДокумент)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаявкаНаПокупкуПродажуВалюты.ПФ_MXL_UK_ЗаявкаНаПродажу");
	Обл   = Макет.ПолучитьОбласть("Шапка");
	
	Обл.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеДляПечати.Номер);
	Обл.Параметры.Дата  = ДанныеДляПечати.Дата;
	
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДанныеДляПечати.Организация,ДанныеДляПечати. Дата);
	Обл.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование;
	Обл.Параметры.Адрес = СведенияОбОрганизации.ЮридическийАдрес;
	Обл.Параметры.Телефоны = СведенияОбОрганизации.Телефоны;
	Обл.Параметры.Банк = ДанныеДляПечати.Банк.НаименованиеПолное + ", " + БухгалтерскийУчетПереопределяемый.ПолучитьАдресИзКонтактнойИнформации(ДанныеДляПечати.Банк,"Юридический");
	
	Обл.Параметры.Сотрудник = ДанныеДляПечати.Сотрудник.Наименование;
	
	Обл.Параметры.Комиссионные = ДанныеДляПечати.Комиссионные;
	
	Обл.Параметры.Валюта = ДанныеДляПечати.Валюта.НаименованиеПолное + ", " + Строка(ДанныеДляПечати.Валюта.Код);
	Обл.Параметры.СуммаВалютная = ДанныеДляПечати.СуммаВалютная;
	Обл.Параметры.Курс = ?(ДанныеДляПечати.Курс = 0, НСтр("ru='за  курсом уповноваженого банку';uk='за  курсом уповноваженого банку'"), КурсККратности(ДанныеДляПечати.Курс, ДанныеДляПечати.Валюта, ДанныеДляПечати.Дата));
	Обл.Параметры.СуммаГривневая = ?(ДанныеДляПечати.СуммаГривневая = 0, " ", ДанныеДляПечати.СуммаГривневая);
	
	Обл.Параметры.СчетБанкаНомер = ДанныеДляПечати.СчетБанкаНомерСчета;
	Обл.Параметры.СчетБанкаБанк  = ДанныеДляПечати.СчетБанкаБанк;
	Обл.Параметры.СчетБанкаКод   = ДанныеДляПечати.СчетБанкаБанкКод;
	
	Обл.Параметры.СчетВалютныйНомер = ДанныеДляПечати.СчетВалютныйНомерСчета;
	Обл.Параметры.СчетВалютныйБанк  = ДанныеДляПечати.СчетВалютныйБанк;
	Обл.Параметры.СчетВалютныйКод   = ДанныеДляПечати.СчетВалютныйБанкКод;
	
	Обл.Параметры.СчетГривневыйНомер = ДанныеДляПечати.СчетГривневыйНомерСчета;
	Обл.Параметры.СчетГривневыйБанк  = ДанныеДляПечати.СчетГривневыйБанк;
	Обл.Параметры.СчетГривневыйКод   = ДанныеДляПечати.СчетГривневыйБанкКод;
	
	Обл.Параметры.СчетВозвратаНомер = ДанныеДляПечати.СчетВозвратаНомерСчета;
	Обл.Параметры.СчетВозвратаБанк  = ДанныеДляПечати.СчетВозвратаБанк;
	Обл.Параметры.СчетВозвратаКод   = ДанныеДляПечати.СчетВозвратаБанкКод;
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(ДанныеДляПечати.Организация, ДанныеДляПечати.Дата);
	Обл.Параметры.ФИОГлавногоБухгалтера = Руководители.ГлавныйБухгалтер;
	Обл.Параметры.ФИОРуководителя = Руководители.Руководитель;

	ТабличныйДокумент.Вывести(Обл);
	
КонецПроцедуры
	
Функция КурсККратности(Курс, Валюта, Дата) 

	Если ЗначениеЗаполнено(Валюта) Тогда
		Кратность = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", Валюта)).Кратность;
		Если Кратность <> 0 И Кратность <> 1 Тогда
			Возврат Курс / Кратность;
		Иначе
			Возврат Курс;
		КонецЕсли; 
	Иначе
		Возврат Курс;
	КонецЕсли;	

КонецФункции 

#КонецОбласти

#КонецЕсли
