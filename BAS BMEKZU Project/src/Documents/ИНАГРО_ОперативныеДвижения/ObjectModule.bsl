#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);	
	
	ИНАГРО_ЭлеваторЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;			
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)	
	
	Перем Заголовок;
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначенияБПВызовСервера.ПредставлениеДокументаПриПроведении(Ссылка);	
	
	// Движения по документу
	Если НЕ Отказ Тогда
		ДвиженияПоРегистру_ИНАГРО_ОперативныеОстатки()
	КонецЕсли;
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКЗаписиДвижений(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти

#Область Проведение

Процедура ДвиженияПоРегистру_ИНАГРО_ОперативныеОстатки()
	
	// Приход
	
	Для Каждого СтрокаТабличнойЧасти Из Приход Цикл
		
		Движение = Движения.ИНАГРО_ОперативныеОстатки.Добавить();
		Движение.ВидДвижения   = ВидДвиженияНакопления.Приход;
		Движение.Период        = Дата;
		Движение.Организация   = Организация;
		Движение.Склад         = СтрокаТабличнойЧасти.Склад;
		Движение.МестоХранения = СтрокаТабличнойЧасти.МестоХранения;
		Движение.Номенклатура  = СтрокаТабличнойЧасти.Номенклатура;		
		Движение.Вес           = СтрокаТабличнойЧасти.Вес;
		
	КонецЦикла;
	
	Движения.ИНАГРО_ОперативныеОстатки.Записать();
	
	// Перемещение
	Для Каждого СтрокаТабличнойЧасти Из Перемещение Цикл
		
		Остаток = ПолучитьОстаток(СтрокаТабличнойЧасти);
		
		Если СтрокаТабличнойЧасти.Вес > Остаток Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В табличной части ""Перемещение"" в строке %1 недостаточно товара %2!';uk='У табличній частині ""Переміщення"" в рядку %1 недостатньо товару %2!'"),
				СтрокаТабличнойЧасти.НомерСтроки, СтрокаТабличнойЧасти.Номенклатура);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Остаток %1, необходимо № %2';uk='Залишок %1, потрібно %2'"),
				Строка(Остаток), СтрокаТабличнойЧасти.Вес);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
		КонецЕсли;	
		
		// Расход
		Движение = Движения.ИНАГРО_ОперативныеОстатки.Добавить();
		Движение.ВидДвижения   = ВидДвиженияНакопления.Расход;
		Движение.Период        = Дата;
		Движение.Организация   = Организация;
		Движение.Склад         = СтрокаТабличнойЧасти.Склад;
		Движение.МестоХранения = СтрокаТабличнойЧасти.МестоХранения;
		Движение.Номенклатура  = СтрокаТабличнойЧасти.Номенклатура;
		Движение.Вес           = СтрокаТабличнойЧасти.Вес;
		
		// Приход
		Движение = Движения.ИНАГРО_ОперативныеОстатки.Добавить();
		Движение.ВидДвижения   = ВидДвиженияНакопления.Приход;
		Движение.Период        = Дата;
		Движение.Организация   = Организация;
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.НовыйСклад) Тогда
			Движение.Склад = СтрокаТабличнойЧасти.НовыйСклад;
		Иначе
			Движение.Склад = СтрокаТабличнойЧасти.Склад;
		КонецЕсли;	
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.НовоеМестоХранения) Тогда
			Движение.МестоХранения = СтрокаТабличнойЧасти.НовоеМестоХранения;
		Иначе	
			Движение.МестоХранения = СтрокаТабличнойЧасти.МестоХранения;
		КонецЕсли;	
		Движение.Номенклатура  = СтрокаТабличнойЧасти.Номенклатура;
		Движение.Вес           = СтрокаТабличнойЧасти.Вес;
		
	КонецЦикла;
	
	Движения.ИНАГРО_ОперативныеОстатки.Записать();
	
	// Расход
	Для Каждого СтрокаТабличнойЧасти Из Расход Цикл
		
		Остаток = ПолучитьОстаток(СтрокаТабличнойЧасти);
		
		Если СтрокаТабличнойЧасти.Вес > Остаток Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В табличной части ""Расход"" в строке %1 недостаточно товара %2!';uk='У табличній частині ""Витрата"" в рядку %1 недостатньо товару %2!'"),
				СтрокаТабличнойЧасти.НомерСтроки, СтрокаТабличнойЧасти.Номенклатура);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Остаток %1, необходимо № %2';uk='Залишок %1, потрібно %2'"),
				Строка(Остаток), СтрокаТабличнойЧасти.Вес);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
		КонецЕсли;
		
		Движение = Движения.ИНАГРО_ОперативныеОстатки.Добавить();
		Движение.ВидДвижения   = ВидДвиженияНакопления.Расход;
		Движение.Период        = Дата;
		Движение.Организация   = Организация;
		Движение.Склад         = СтрокаТабличнойЧасти.Склад;
		Движение.МестоХранения = СтрокаТабличнойЧасти.МестоХранения;
		Движение.Номенклатура  = СтрокаТабличнойЧасти.Номенклатура;
		Движение.Вес           = СтрокаТабличнойЧасти.Вес;
		
	КонецЦикла;
	
	Движения.ИНАГРО_ОперативныеОстатки.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьОстаток(СтрокаТабличнойЧасти)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ИНАГРО_ОперативныеОстаткиОстатки.ВесОстаток, 0) КАК Остаток
		|ИЗ
		|	РегистрНакопления.ИНАГРО_ОперативныеОстатки.Остатки(&Дата, Организация = &Организация) КАК ИНАГРО_ОперативныеОстаткиОстатки
		|ГДЕ
		|	ИНАГРО_ОперативныеОстаткиОстатки.Номенклатура = &Номенклатура
		|	И ИНАГРО_ОперативныеОстаткиОстатки.Склад = &Склад
		|	И ИНАГРО_ОперативныеОстаткиОстатки.МестоХранения = &МестоХранения";
	
	Запрос.Параметры.Вставить("Дата",          Дата + 1);			   
	Запрос.Параметры.Вставить("Организация",   Организация);			   
	Запрос.Параметры.Вставить("Склад",         СтрокаТабличнойЧасти.Склад);			   
	Запрос.Параметры.Вставить("МестоХранения", СтрокаТабличнойЧасти.МестоХранения);
	Запрос.Параметры.Вставить("Номенклатура",  СтрокаТабличнойЧасти.Номенклатура);			   

	Остаток = Запрос.Выполнить().Выбрать();
	
	Если Остаток.Следующий() Тогда
		Возврат Остаток.Остаток;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции	

#КонецОбласти

#КонецЕсли
