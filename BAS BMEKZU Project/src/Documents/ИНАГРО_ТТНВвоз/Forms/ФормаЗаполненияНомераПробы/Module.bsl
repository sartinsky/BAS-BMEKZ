#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Дата = ОбщегоНазначенияБП.ПолучитьРабочуюДату();
	
	Параметры.Свойство("Ссылка",              Ссылка);
	Параметры.Свойство("Дата",                Дата);
	Параметры.Свойство("НомерПробы",          НомерПробы);
	Параметры.Свойство("Организация",         Организация);	
	Параметры.Свойство("Владелец",            Владелец);
	Параметры.Свойство("Владелец",            Поставщик);
	Параметры.Свойство("ДоговорКонтрагента",  ДоговорКонтрагента);	
	Параметры.Свойство("Склад",               Склад);	
	Параметры.Свойство("ВидХранения",         ВидХранения);
	Параметры.Свойство("Силос",               Силос);	
	Параметры.Свойство("Номенклатура",        Номенклатура);	
	Параметры.Свойство("Урожай",              Урожай);	
	Параметры.Свойство("СтепеньВлажности",    СтепеньВлажности);	
	Параметры.Свойство("СтепеньЗагрязнения",  СтепеньЗагрязнения);
	Параметры.Свойство("СтепеньЗараженности", СтепеньЗараженности);
	Параметры.Свойство("ДополнительныйКонтрольДоговоров", ДополнительныйКонтрольДоговоров);
	
	НомерПробыПередыдущий = НомерПробы;
	
	Если НомерПробы = 0 Тогда
		Элементы.ГруппаОсновныеДанныеПоказателиКачества.Видимость = Ложь;
		Элементы.ВыполнитьИЗакрыть.Доступность                    = Ложь;
	Иначе
		Элементы.ГруппаОсновныеДанныеПоказателиКачества.Видимость = Истина;
		Элементы.ВыполнитьИЗакрыть.Доступность                    = Истина;
	КонецЕсли;

	ЗаполнитьТаблицуСуществующиеНомераПроб();
	
	Если ДополнительныйКонтрольДоговоров Тогда
		Элементы.Владелец.КнопкаСоздания        = Ложь;
		Элементы.Владелец.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.НеИспользовать;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ЗаполнитьТаблицуСуществующиеНомераПроб();

КонецПроцедуры

&НаКлиенте
Процедура НомерПробыПриИзменении(Элемент)
	
	НомерПробыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура НомерПробыПриИзмененииНаСервере()
	
	Выборка = Документы.ИНАГРО_ТТНВвоз.СформироватьЗаписиНомераПроб(Ссылка);
	
	Найденные = Ложь;
	
	Пока Выборка.следующий() Цикл
		
		Если Выборка.НомерПробы = НомерПробы И Выборка.Урожай = Урожай Тогда 
			
			Если    НачалоДня(Выборка.Дата) < НачалоДня(Дата)
				ИЛИ НачалоДня(Выборка.Дата) > НачалоДня(Дата) Тогда
				
				ТекстСообщения = НСтр("ru='Запись с таким номером пробы уже была использована ';uk='Запис з таким номером проби вже був використаний '") + Выборка.Дата;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
				Найденные  = Истина;
				НомерПробы = НомерПробыПредыдущий;
				
				Возврат;
				
			КонецЕсли;
			
			ТекстСообщения = НСтр("ru='Запись с таким номером пробы уже существует: в форму будут добавлены значения реквизитов, соответствующие этой пробе';uk='Запис з таким номером проби вже існує: в форму будуть додані значення реквізитів, відповідні цій пробі'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			Найденные = Истина;
			
			Организация         = Выборка.Организация;
			Владелец            = Выборка.Владелец;
			Поставщик           = Выборка.Владелец;
			ДоговорКонтрагента  = Выборка.ДоговорКонтрагента;
			Склад               = Выборка.Склад;
			ВидХранения         = Выборка.ВидХранения;
			Силос               = Выборка.Силос;			
			Номенклатура        = Выборка.Номенклатура;
			Урожай              = Выборка.Урожай;
			СтепеньВлажности    = Выборка.СтепеньВлажности;
			СтепеньЗагрязнения  = Выборка.СтепеньЗагрязнения;
			СтепеньЗараженности = Выборка.СтепеньЗараженности;
			
		КонецЕсли;
		
		Если Найденные = Истина Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Владелец) Тогда
		
		ПараметрыОтбораДоговора = ПолучитьПараметрыДляДоговоров();
		
		ИНАГРО_ЭлеваторЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(Дата, Организация, Владелец, ДоговорКонтрагента, ПараметрыОтбораДоговора); 		
				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ДополнительныйКонтрольДоговоров Тогда 
		СтандартнаяОбработка = Ложь;
		ИНАГРО_ЭлеваторКлиент.ВладелецНачалоВыбораЗавершение();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		НоменклатураПриИзмененииНаСервере();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НоменклатураПриИзмененииНаСервере()
	
	Если НЕ ЗначениеЗаполнено(СтепеньЗагрязнения) Тогда
		СтепеньЗагрязнения = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(Номенклатура,"ВидКультуры").СтепеньЗагрязнения;		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтепеньЗараженности) Тогда
		СтепеньЗараженности = ИНАГРО_Элеватор.ПолучитьДополнительныйРеквизитНоменклатуры(Номенклатура,"ВидКультуры").СтепеньЗараженности;		
	КонецЕсли; 

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСуществующиеНомераПроб

&НаКлиенте
Процедура СуществующиеНомераПробВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СуществующиеНомераПроб.ТекущиеДанные;
	
	НомерПробы = ТекущиеДанные.НомерПробы;	
	
	СтруктураВозврата = Неопределено;
	
	СуществующиеНомераПробВыборНаСервере(СтруктураВозврата);	
	
	Закрыть(СтруктураВозврата);	

КонецПроцедуры

&НаСервере
Процедура СуществующиеНомераПробВыборНаСервере(СтруктураВозврата)
		
	Выборка = СформироватьЗаписиНомеровПробЗаДень();
	
	Пока Выборка.Следующий() Цикл 
		
		Если Выборка.НомерПробы = НомерПробы Тогда 
			
			Если Элементы.ГруппаОсновныеДанныеПоказателиКачества.Видимость = Ложь Тогда				
						
				СтруктураВозврата = ПолучитьСтруктуруВозврата(Выборка);

				Прервать;				
				
			Иначе
				
				Организация         = Выборка.Организация;
				Владелец            = Выборка.Владелец;
				Поставщик           = Выборка.Владелец;
				ДоговорКонтрагента  = Выборка.ДоговорКонтрагента;
				Склад               = Выборка.Склад;
				ВидХранения         = Выборка.ВидХранения;
				Силос               = Выборка.Силос;
				Номенклатура        = Выборка.Номенклатура;
				Урожай              = Выборка.Урожай;
				СтепеньВлажности    = Выборка.СтепеньВлажности;
				СтепеньЗагрязнения  = Выборка.СтепеньЗагрязнения;
				СтепеньЗараженности = Выборка.СтепеньЗараженности;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьНовуюЗапись(Команда)
	
	Элементы.ГруппаОсновныеДанныеПоказателиКачества.Видимость = Истина;
	Элементы.ВыполнитьИЗакрыть.Доступность                    = Истина;

	ДобавитьНовуюЗаписьНаСервере(НомерПробы);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНовуюЗаписьНаСервере(НомерПробы)
	
	Выборка = ПолучитьПоследнийНомерПробы();
	
	Выборка.Следующий();
	
	Если Выборка.НомерПробы = Null Тогда 
		НомерПробы = 1; 
	Иначе		
		НомерПробы = Выборка.НомерПробы + 1;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьИЗакрыть(Команда)
	
	ЕстьВозврат = ВыполнитьИЗакрытьНаСервере();
	Если ЕстьВозврат Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВозврата = ПолучитьСтруктуруВозврата(ЭтаФорма);
	
	Закрыть(СтруктураВозврата);

КонецПроцедуры

&НаСервере
Функция ВыполнитьИЗакрытьНаСервере()
	
	Выборка = Документы.ИНАГРО_ТТНВвоз.СформироватьЗаписиНомераПроб(Ссылка);				
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НомерПробы = НомерПробы Тогда 
			
			Если    НачалоДня(Выборка.Дата) < НачалоДня(Дата)
				ИЛИ НачалоДня(Выборка.Дата) > НачалоДня(Дата) Тогда							
				
				ТекстСообщения = НСтр("ru='Запись с таким номером пробы уже была использована ';uk='Запис з таким номером проби вже був використаний '") + Выборка.Дата;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Возврат Истина;
				
			Иначе
				
				Если Владелец <> Выборка.Владелец Тогда
					ТекстСообщения = НСтр("ru='Неправильно введено поле Владелец';uk='Невiрно введене поле Власник'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат Истина;
				КонецЕсли;
				
				Если ДоговорКонтрагента <> Выборка.ДоговорКонтрагента Тогда 								
					ТекстСообщения = НСтр("ru='Неправильно введено поле Договор';uk='Невiрно введене поле Договір'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат Истина;
				КонецЕсли;
				
				Если Склад <> Выборка.Склад Тогда
					ТекстСообщения = НСтр("ru='Неправильно введено поле Склад';uk='Невiрно введене поле Склад'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат Истина;
				КонецЕсли;
				
				Если ВидХранения <> Выборка.ВидХранения Тогда
					ТекстСообщения = НСтр("ru='Неправильно введено поле Вид хранения';uk='Невiрно введене поле Вид зберігання");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат Истина;
				КонецЕсли;							
				
				Если Номенклатура <> Выборка.Номенклатура Тогда
					ТекстСообщения = НСтр("ru='Неправильно введено поле Номенклатура';uk='Невiрно введене поле Номенклатура'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат Истина;
				КонецЕсли;
				
				Если Урожай <> Выборка.Урожай Тогда
					ТекстСообщения = НСтр("ru='Неправильно введено поле Урожай';uk='Невiрно введене поле Урожай'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат Истина;
				КонецЕсли;							
				
				Если СтепеньВлажности <> Выборка.СтепеньВлажности Тогда
					ТекстСообщения = НСтр("ru='Неправильно введено поле Степень влажности';uk='Невiрно введене поле Ступінь вологості'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат Истина;
				КонецЕсли;
				
				Если СтепеньЗагрязнения <> Выборка.СтепеньЗагрязнения Тогда
					ТекстСообщения = НСтр("ru='Неправильно введено поле Степень загрязнения';uk='Невiрно введене поле Ступінь забруднення'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат Истина;
				КонецЕсли;
				
				Если СтепеньЗараженности<>Выборка.СтепеньЗараженности Тогда
					ТекстСообщения = НСтр("ru='Неправильно введено поле Степень зараженности';uk='Невiрно введене поле Ступінь зараженості'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Возврат Истина;
				КонецЕсли;				
								
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

	Возврат Ложь;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуСуществующиеНомераПроб()
	
	Выборка = СформироватьЗаписиНомеровПробЗаДень();
	
	СуществующиеНомераПроб.Очистить();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СуществующиеНомераПроб.Добавить();
		НоваяСтрока.НомерПробы = Выборка.НомерПробы;
		НоваяСтрока.Информация = Строка(Выборка.Владелец) + " / " +
								 Строка(Выборка.Номенклатура) + " / " +
								 Строка(Выборка.Склад) + " / " +
								 Строка(Выборка.Силос) + " / " +
								 Строка(Выборка.СтепеньВлажности) + " / " +
								 Строка(Выборка.СтепеньЗагрязнения) + " / " +
								 Строка(Выборка.СтепеньЗараженности);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция СформироватьЗаписиНомеровПробЗаДень()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_ИспользуемыеНомераПроб.НомерПробы КАК НомерПробы,
		|	ИНАГРО_ИспользуемыеНомераПроб.Организация КАК Организация,
		|	ИНАГРО_ИспользуемыеНомераПроб.Дата КАК Дата,
		|	ИНАГРО_ИспользуемыеНомераПроб.Владелец КАК Владелец,
		|	ИНАГРО_ИспользуемыеНомераПроб.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ИНАГРО_ИспользуемыеНомераПроб.Склад КАК Склад,
		|	ИНАГРО_ИспользуемыеНомераПроб.ВидХранения КАК ВидХранения,
		|	ИНАГРО_ИспользуемыеНомераПроб.Силос КАК Силос,
		|	ИНАГРО_ИспользуемыеНомераПроб.Номенклатура КАК Номенклатура,
		|	ИНАГРО_ИспользуемыеНомераПроб.Урожай КАК Урожай,
		|	ИНАГРО_ИспользуемыеНомераПроб.СтепеньВлажности КАК СтепеньВлажности,
		|	ИНАГРО_ИспользуемыеНомераПроб.СтепеньЗагрязнения КАК СтепеньЗагрязнения,
		|	ИНАГРО_ИспользуемыеНомераПроб.СтепеньЗараженности КАК СтепеньЗараженности
		|ИЗ
		|	РегистрСведений.ИНАГРО_ИспользуемыеНомераПроб КАК ИНАГРО_ИспользуемыеНомераПроб
		|ГДЕ
		|	ИНАГРО_ИспользуемыеНомераПроб.Организация = &Организация
		|	И ИНАГРО_ИспользуемыеНомераПроб.Урожай = &Урожай
		|	И ИНАГРО_ИспользуемыеНомераПроб.Дата >= &ДатаНачала
		|	И ИНАГРО_ИспользуемыеНомераПроб.Дата <= &ДатаОкончания
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерПробы";
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Урожай",        Урожай);
	Запрос.УстановитьПараметр("ДатаНачала",    НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));
	
	Возврат Запрос.Выполнить().Выбрать();	
	
КонецФункции

&НаСервере
Функция ПолучитьПоследнийНомерПробы()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ИНАГРО_ИспользуемыеНомераПроб.НомерПробы) КАК НомерПробы
		|ИЗ
		|	РегистрСведений.ИНАГРО_ИспользуемыеНомераПроб КАК ИНАГРО_ИспользуемыеНомераПроб,
		|	Документ.ИНАГРО_ТТНВвоз КАК ИНАГРО_ТТНВВоз
		|ГДЕ
		|	ИНАГРО_ИспользуемыеНомераПроб.Урожай = ИНАГРО_ТТНВВоз.Урожай";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

&НаКлиенте
Функция ПолучитьПараметрыДляДоговоров()

	ПараметрыОтбора = Новый Структура("ВидХранения, Урожай", ВидХранения, Урожай);

	Возврат ПараметрыОтбора;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСтруктуруВозврата(Источник)
	
	СтруктураВозврата = Новый Структура(	
		"НомерПробы, Организация, Владелец,
		|ДоговорКонтрагента, Склад, ВидХранения,
		|Силос, Номенклатура, Урожай,
		|СтепеньВлажности, СтепеньЗагрязнения, СтепеньЗараженности
		|");
	ЗаполнитьЗначенияСвойств(СтруктураВозврата, Источник);
	СтруктураВозврата.Вставить("Поставщик", Источник.Владелец);
	
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти