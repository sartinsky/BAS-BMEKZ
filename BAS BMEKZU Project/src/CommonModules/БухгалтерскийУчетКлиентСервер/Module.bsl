// Процедура установки типа и доступности субконто в зависимости от выбранного счета
//
Процедура ПриВыбореСчета(Счет, Форма, ПоляФормы, ЗаголовкиПолей = Неопределено, ЭтоТаблица = Ложь) Экспорт
	
	ДанныеСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Счет);
	
	Для Индекс = 1 По 3 Цикл
		Если Индекс <= ДанныеСчета.КоличествоСубконто Тогда
			Если ЭтоТаблица Тогда
				Если ПоляФормы.Свойство("Субконто" + Индекс) Тогда
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].ОграничениеТипа = ДанныеСчета["ВидСубконто" + Индекс + "ТипЗначения"];
				КонецЕсли;
			Иначе
				Если ЗаголовкиПолей.Свойство("Субконто" + Индекс) Тогда
					Форма[ЗаголовкиПолей["Субконто" + Индекс]] = ДанныеСчета["ВидСубконто" + Индекс + "Наименование"] + ":";
				КонецЕсли;
				Если ПоляФормы.Свойство("Субконто" + Индекс) Тогда
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].Доступность     = Истина;
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].ОграничениеТипа = ДанныеСчета["ВидСубконто" + Индекс + "ТипЗначения"];
				КонецЕсли;
			КонецЕсли;
		Иначе 
			// Ничего делать не надо, т.к. не доступные поля будут скрыты
			Если Не ЭтоТаблица Тогда
				Если ЗаголовкиПолей.Свойство("Субконто" + Индекс) Тогда
					Форма[ЗаголовкиПолей["Субконто" + Индекс]] = "";
				КонецЕсли;
				Если ПоляФормы.Свойство("Субконто" + Индекс) Тогда
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].Доступность     = Ложь;
					Форма.Элементы[ПоляФормы["Субконто" + Индекс]].ОграничениеТипа = Новый ОписаниеТипов("Неопределено");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура установки типа и доступности субконто в зависимости от выбранного счета
//
Процедура ПриИзмененииСчета(Счет, Объект, ПоляОбъекта, ЭтоТаблица = Ложь) Экспорт
	
	ДанныеСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Счет);
	
	Для Индекс = 1 По 3 Цикл
		Если ПоляОбъекта.Свойство("Субконто" + Индекс) Тогда
			Если Индекс <= ДанныеСчета.КоличествоСубконто Тогда
				Объект[ПоляОбъекта["Субконто" + Индекс]] = ДанныеСчета["ВидСубконто" + Индекс + "ТипЗначения"].ПривестиЗначение(Объект[ПоляОбъекта["Субконто" + Индекс]]);
			Иначе 
				Объект[ПоляОбъекта["Субконто" + Индекс]] = Неопределено;
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;
	
	Если ЭтоТаблица Тогда
		УстановитьДоступностьСубконто(Счет, Объект, ПоляОбъекта);
	КонецЕсли;	
	
КонецПроцедуры

// Процедура установки доступности субконто в зависимости от выбранного счета
//
Процедура УстановитьДоступностьСубконто(Счет, Объект, ПоляОбъекта) Экспорт
	
	ДанныеСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Счет);
	
	Для Индекс = 1 По 3 Цикл
		Если ПоляОбъекта.Свойство("Субконто" + Индекс) Тогда
			Объект[ПоляОбъекта["Субконто" + Индекс] + "Доступность"] = (Индекс <= ДанныеСчета.КоличествоСубконто);
		КонецЕсли;
	КонецЦикла;
	
	Если ПоляОбъекта.Свойство("Валютный") Тогда
		Объект[ПоляОбъекта["Валютный"] + "Доступность"] = ДанныеСчета.Валютный;
	КонецЕсли;
	
	Если ПоляОбъекта.Свойство("Количественный") Тогда
		Объект[ПоляОбъекта["Количественный"] + "Доступность"] = ДанныеСчета.Количественный;
	КонецЕсли;
		
	// ИНАГРО++
	Если ПоляОбъекта.Свойство("Поштучный") Тогда
		Объект[ПоляОбъекта["Поштучный"] + "Доступность"] = ДанныеСчета.Поштучный;
	КонецЕсли;
	// ИНАГРО--

	Если ПоляОбъекта.Свойство("НалоговыйУчет") Тогда
		Объект[ПоляОбъекта["НалоговыйУчет"] + "Доступность"] = ДанныеСчета.НалоговыйУчет;
	КонецЕсли;
	Если ПоляОбъекта.Свойство("УчетПоНалоговымНазначениямНДС") Тогда
		Объект[ПоляОбъекта["УчетПоНалоговымНазначениямНДС"] + "Доступность"] = ДанныеСчета.УчетПоНалоговымНазначениямНДС;
	КонецЕсли;
	Если ПоляОбъекта.Свойство("УчетСуммНУ") Тогда
		Объект[ПоляОбъекта["УчетСуммНУ"] + "Доступность"] = ДанныеСчета.УчетСуммНУ;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьПараметрыВыбораПолейСубконто(Форма, Объект, ШаблонИмяПоляОбъекта, ШаблонИмяЭлементаФормы, СписокПараметров) Экспорт
		
	МассивПараметров = Новый Массив();
	Для Индекс = 1 По 3 Цикл
		ИмяПоляОбъекта   = СтрЗаменить(ШаблонИмяПоляОбъекта  , "%Индекс%", Индекс);
		ИмяЭлементаФормы = СтрЗаменить(ШаблонИмяЭлементаФормы, "%Индекс%", Индекс);
		Если ТипЗнч(Объект[ИмяПоляОбъекта]) = БухгалтерскийУчетКлиентСерверПереопределяемый.ТипЗначенияБанковскогоСчетаОрганизации() Тогда
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец", СписокПараметров.Организация));
		ИначеЕсли ТипЗнч(Объект[ИмяПоляОбъекта]) = БухгалтерскийУчетКлиентСерверПереопределяемый.ТипПодразделения() Тогда
			ИмяРеквизитаОрганизация = БухгалтерскийУчетКлиентСерверПереопределяемый.ИмяРеквизитаОрганизацияПодразделения();
			Если ЗначениеЗаполнено(ИмяРеквизитаОрганизация) И ЗначениеЗаполнено(СписокПараметров.Организация) Тогда
				МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор." + ИмяРеквизитаОрганизация, СписокПараметров.Организация));
			КонецЕсли;
		ИначеЕсли БухгалтерскийУчетКлиентСерверПереопределяемый.ПолучитьОписаниеТиповДоговора().СодержитТип(ТипЗнч(Объект[ИмяПоляОбъекта])) Тогда
			Если СписокПараметров.Свойство("Организация") Тогда
				МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Организация", СписокПараметров.Организация));
			КонецЕсли;
			Если СписокПараметров.Свойство("Контрагент") Тогда
				МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор." + БухгалтерскийУчетКлиентСерверПереопределяемый.ПолучитьИмяРеквизитаКонтрагентДоговора(), СписокПараметров.Контрагент));
			КонецЕсли;
		ИначеЕсли ТипЗнч(Объект[ИмяПоляОбъекта]) = Тип("СправочникСсылка.Субконто") 
			И СписокПараметров.Свойство("СчетУчета") Тогда
			СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СписокПараметров.СчетУчета);
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец", СвойстваСчета["ВидСубконто" + Индекс]));
		КонецЕсли;
		Если МассивПараметров.Количество() > 0 Тогда
			ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
			Форма.Элементы[ИмяЭлементаФормы].ПараметрыВыбора = ПараметрыВыбора;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

// Процедура изменяет параметры выбора для ПоляВвода управляемой формы:
//
//Параметры:
//	ЭлементФормыСчет - ПолеВвода управляемой формы, для которого изменяется параметр выбора 
//  МассивСчетов                 - <Массив> ИЛИ <Неопределено> - счета, которыми нужно ограничить список. 
//	                                   Если не заполнено - ограничения не будет
//  ОтборПоПризнакуВалютный      - <Булево> ИЛИ <Неопределено> - Значение для установки соответсвтующего параметра выбора. 
//                                     Если неопределено, параметр выбора не устанавливается.
//  ОтборПоПризнкуЗабалансовый   - <Булево> ИЛИ <Неопределено> - Значение для установки соответсвтующего параметра выбора. 
//                                     Если неопределено, параметр выбора не устанавливается.
//  ОтборПоПризнакуСчетГруппа    - <Булево> ИЛИ <Неопределено> - Значение для установки соответсвтующего параметра выбора. 
//                                     Если неопределено, параметр выбора не устанавливается.
//
//
Процедура ИзменитьПараметрыВыбораСчета(ЭлементФормыСчет, МассивСчетов, ОтборПоПризнакуВалютный = Неопределено, ОтборПоПризнкуЗабалансовый = Неопределено, ОтборПоПризнакуСчетГруппа = Ложь) Экспорт

	МассивОтборов = Новый Массив;
	Если ОтборПоПризнакуСчетГруппа <> Неопределено Тогда
		МассивОтборов.Добавить(Новый ПараметрВыбора("Отбор.ЗапретитьИспользоватьВПроводках", ОтборПоПризнакуСчетГруппа));
	КонецЕсли; 
	
	Если ОтборПоПризнакуВалютный <> Неопределено Тогда
		МассивОтборов.Добавить(Новый ПараметрВыбора("Отбор.Валютный", ОтборПоПризнакуВалютный));
	КонецЕсли; 
	
	Если ОтборПоПризнкуЗабалансовый <> Неопределено Тогда
		МассивОтборов.Добавить(Новый ПараметрВыбора("Отбор.Забалансовый", ОтборПоПризнкуЗабалансовый));
	КонецЕсли; 
	
	Если МассивСчетов <> Неопределено И МассивСчетов.Количество() > 0 Тогда
		МассивОтборов.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивСчетов)));
	КонецЕсли; 

	ПараметрыВыбора = Новый ФиксированныйМассив(МассивОтборов);
	ЭлементФормыСчет.ПараметрыВыбора = ПараметрыВыбора;
	
КонецПроцедуры 
