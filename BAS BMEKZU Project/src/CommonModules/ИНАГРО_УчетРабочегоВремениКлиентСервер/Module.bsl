#Область ПрограммныйИнтерфейс

// Выполняются необходимые действия
//
Процедура ДанныеГрафикаРассчитатьИтогоПоСтроке(ДанныеСтроки) Экспорт
	
	ВсегоДней = 0;
	ВсегоЧасов = 0;
	Для НомерДня = 1 По 31 Цикл
		ВсегоЧасов = ВсегоЧасов + ДанныеСтроки["День" + НомерДня];
		ВсегоДней = ВсегоДней + ?(ДанныеСтроки["День" + НомерДня] > 0, 1, 0)
	КонецЦикла;
	ДанныеСтроки.ИтогДни = ВсегоДней;
	ДанныеСтроки.ИтогЧасы = ВсегоЧасов;
	
КонецПроцедуры

// Выполняются необходимые действия
//
Функция ДанныеГрафикаЧасыПоДнямЦикла(ШаблонЗаполнения, ДанныеОРабочихЧасах) Экспорт
	
	ЧасыПоДнямЦикла = Новый Соответствие;
	
	Для Каждого ДеньЦикла Из ШаблонЗаполнения Цикл
		ЧасыЗаДень = Новый Соответствие;
		
		ДанныеОВремениЗаДень = ДанныеОРабочихЧасах.НайтиСтроки(Новый Структура("НомерДня", ДеньЦикла.НомерСтроки));
		Для Каждого ДанныеВидуВремени Из ДанныеОВремениЗаДень Цикл
			ЧасыЗаДень.Вставить(ПредопределенноеЗначение("Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Работа"), ДанныеВидуВремени.Часы);
			ЧасыЗаДень.Вставить(ПредопределенноеЗначение("Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Вечерние"), ДанныеВидуВремени.ЧасыВечерние);
			ЧасыЗаДень.Вставить(ПредопределенноеЗначение("Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Ночные"), ДанныеВидуВремени.ЧасыНочные);
		КонецЦикла;
		
		ЧасыПоДнямЦикла.Вставить(ДеньЦикла.НомерСтроки, ЧасыЗаДень);
	КонецЦикла;
	
	Возврат ЧасыПоДнямЦикла;
	
КонецФункции

// Функция определяет количество дней в месяце.
//
// Параметры:
//	Дата - любая дата месяца
//
// Возвращаемое значение
//	- число, количество дней в месяце
//
Функция КоличествоДнейМесяца(Дата) Экспорт
	Возврат День(КонецМесяца(Дата));
КонецФункции

// Выполняются необходимые действия
//
Процедура ТабельУстановитьПериодДокумента(Форма) Экспорт
	
	Если Форма.Объект.СпособВводаДанных = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыВводаДанныхОВремени.ПерваяПоловинаМесяца") Тогда
		Форма.Объект.ДатаНачалаПериода = НачалоМесяца(Форма.Объект.ПериодРегистрации);
		Форма.Объект.ДатаОкончанияПериода = Дата(Год(Форма.Объект.ПериодРегистрации), Месяц(Форма.Объект.ПериодРегистрации), 15);
	ИначеЕсли Форма.Объект.СпособВводаДанных = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыВводаДанныхОВремени.ВтораяПоловинаМесяца") Тогда
		Форма.Объект.ДатаНачалаПериода = Дата(Год(Форма.Объект.ПериодРегистрации), Месяц(Форма.Объект.ПериодРегистрации), 16);
		Форма.Объект.ДатаОкончанияПериода = КонецМесяца(Форма.Объект.ПериодРегистрации);
	ИначеЕсли Форма.Объект.СпособВводаДанных = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыВводаДанныхОВремени.Месяц") Тогда
		Форма.Объект.ДатаНачалаПериода = НачалоМесяца(Форма.Объект.ПериодРегистрации);
		Форма.Объект.ДатаОкончанияПериода = КонецМесяца(Форма.Объект.ПериодРегистрации);
	ИначеЕсли Форма.Объект.СпособВводаДанных = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыВводаДанныхОВремени.ВЦеломЗаПериод") Тогда
		Форма.Объект.ДатаНачалаПериода = НачалоМесяца(Форма.Объект.ПериодРегистрации);
		Форма.Объект.ДатаОкончанияПериода = КонецМесяца(Форма.Объект.ПериодРегистрации);
	КонецЕсли;
	
КонецПроцедуры

// Выполняются необходимые действия
//
Процедура ТабельУстановитьДоступностьЭлементовПериодаВводаДанных(Форма) Экспорт
	
	Если Форма.Объект.СпособВводаДанных = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыВводаДанныхОВремени.ПерваяПоловинаМесяца") Тогда
		Форма.Элементы.ДатаНачалаПериода.Доступность = Ложь;
		Форма.Элементы.ДатаОкончанияПериода.Доступность = Ложь;
		Форма.Элементы.ГруппаСпособЗаполнения.ТекущаяСтраница = Форма.Элементы.ГруппаСпособЗаполнения.ПодчиненныеЭлементы.ГруппаПоДням;
	ИначеЕсли Форма.Объект.СпособВводаДанных = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыВводаДанныхОВремени.ВтораяПоловинаМесяца") Тогда
		Форма.Элементы.ДатаНачалаПериода.Доступность = Ложь;
		Форма.Элементы.ДатаОкончанияПериода.Доступность = Ложь;
		Форма.Элементы.ГруппаСпособЗаполнения.ТекущаяСтраница = Форма.Элементы.ГруппаСпособЗаполнения.ПодчиненныеЭлементы.ГруппаПоДням;
	ИначеЕсли Форма.Объект.СпособВводаДанных = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыВводаДанныхОВремени.Месяц") Тогда
		Форма.Элементы.ДатаНачалаПериода.Доступность = Ложь;
		Форма.Элементы.ДатаОкончанияПериода.Доступность = Ложь;
		Форма.Элементы.ГруппаСпособЗаполнения.ТекущаяСтраница = Форма.Элементы.ГруппаСпособЗаполнения.ПодчиненныеЭлементы.ГруппаПоДням;
	ИначеЕсли Форма.Объект.СпособВводаДанных = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыВводаДанныхОВремени.ВЦеломЗаПериод") Тогда
		Форма.Элементы.ДатаНачалаПериода.Доступность = Ложь;
		Форма.Элементы.ДатаОкончанияПериода.Доступность = Ложь;
		Форма.Элементы.ГруппаСпособЗаполнения.ТекущаяСтраница = Форма.Элементы.ГруппаСпособЗаполнения.ПодчиненныеЭлементы.ГруппаЗаПериод;
	ИначеЕсли Форма.Объект.СпособВводаДанных = ПредопределенноеЗначение("Перечисление.ИНАГРО_СпособыВводаДанныхОВремени.ПроизвольныйПериод") Тогда
		Форма.Элементы.ДатаНачалаПериода.Доступность = Истина;
		Форма.Элементы.ДатаОкончанияПериода.Доступность = Истина;
		Форма.Элементы.ГруппаСпособЗаполнения.ТекущаяСтраница = Форма.Элементы.ГруппаСпособЗаполнения.ПодчиненныеЭлементы.ГруппаПоДням;
	КонецЕсли;
	
КонецПроцедуры

// Выполняются необходимые действия
//
Функция ТабельОбозначенияВидовВремени(СоответствиеОбозначенийВидамВремени) Экспорт
	
	ОбозначенияВидовВремени = Новый Соответствие;
	Для Каждого КлючЗначение Из СоответствиеОбозначенийВидамВремени Цикл
		ОбозначенияВидовВремени.Вставить(КлючЗначение.Значение.ВидВремени, КлючЗначение.Ключ);
	КонецЦикла;
	
	Возврат ОбозначенияВидовВремени;
	
КонецФункции

// Выполняются необходимые действия
//
Процедура ТабельЗаполнитьИтогиПоСотруднику(СтрокаПоСотруднику, ОписаниеВидовВремени, ДеньНачалаПериода = 1, ДеньОкончанияПериода = 31) Экспорт
	
	МассивПриставок = Новый Массив(4);
	МассивПриставок[0] = "Первый";
	МассивПриставок[1] = "Второй";
	МассивПриставок[2] = "Третий";
	МассивПриставок[3] = "Четвертый";
	
	ИтогиПоВидамВремени = Новый Соответствие;
	
	МаксимальноеКоличествоДней = 0;
	Для ИндексДня = ДеньНачалаПериода По ДеньОкончанияПериода Цикл
		СтрокаИндексДня = Строка(ИндексДня);
		Для ИндексМассиваПриставок = 0 По 3 Цикл
			
			НазваниеЯчейкиВидВремени = МассивПриставок[ИндексМассиваПриставок] + "ВидВремени"+СтрокаИндексДня;
			НазваниеЯчейкиДней = МассивПриставок[ИндексМассиваПриставок] + "Часов"+СтрокаИндексДня;
			КоличествоЧасов = Строка(СтрокаПоСотруднику[НазваниеЯчейкиДней]);

			ВидВремени = СтрокаПоСотруднику[НазваниеЯчейкиВидВремени];
			
			Если ЗначениеЗаполнено(ВидВремени) Тогда
				Часы = СтрокаПоСотруднику[НазваниеЯчейкиДней];
				ИтогиПоВидуВремени = ИтогиПоВидамВремени.Получить(ВидВремени);
				Если ИтогиПоВидуВремени = Неопределено Тогда
					ИтогиПоВидамВремени.Вставить(ВидВремени, Новый Структура("Часы, Дни", Часы, 1));
				Иначе
					ИтогиПоВидуВремени.Часы = ИтогиПоВидуВремени.Часы + Часы;
					ИтогиПоВидуВремени.Дни = ИтогиПоВидуВремени.Дни + 1;
					Если ИтогиПоВидуВремени.Дни > МаксимальноеКоличествоДней Тогда
						МаксимальноеКоличествоДней = ИтогиПоВидуВремени.Дни;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	СтрокаПоСотруднику.ВремяИтог    =  ТабельПредставлениеИтогаПоВидуВремени(ИтогиПоВидамВремени, ОписаниеВидовВремени);
	ПредставлениеИтогаПоВидуВремени = ТабельПредставлениеИтогаПоВидуВремени(ИтогиПоВидамВремени, ОписаниеВидовВремени);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТабельПредставлениеИтогаПоВидуВремени(ИтогиПоВидамВремени, ОписаниеВидовВремени)
	ПредставлениеИтогаПоВидуВремени = "";
	
	Для Каждого ВидВремени Из ИтогиПоВидамВремени Цикл
		ОписаниеВидаВремени = ОписаниеВидовВремени.Получить(ВидВремени.Ключ);
	
		БуквенноеОбозначение = ?(ОписаниеВидаВремени = Неопределено, "", ОписаниеВидаВремени);
	
		ИтогиПоВидуВремени = ИтогиПоВидамВремени.Получить(ВидВремени.Ключ);
	
		Если ОписаниеВидаВремени <> Неопределено Тогда                           
		
			ПредставлениеИтогаПоВидуВремени = ПредставлениеИтогаПоВидуВремени + БуквенноеОбозначение + ?(БуквенноеОбозначение = "", "" , " ") 
											+ Строка(ИтогиПоВидуВремени.Дни) + НСтр("ru = ' д.';uk=' д.'") 
											+ ?(ИтогиПоВидуВремени.Часы > 0, " " + Строка(ИтогиПоВидуВремени.Часы) + НСтр("ru = ' ч.';uk=' г.'") , "") + Символы.ПС ;
		КонецЕсли;
	КонецЦикла;
										
	Возврат ПредставлениеИтогаПоВидуВремени;								
КонецФункции

#КонецОбласти
