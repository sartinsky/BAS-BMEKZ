
Процедура скEDI_РегистрацияЭлектронногоДокументаПриЗаписи(ИсточникСсылка, Отказ) Экспорт
	Если не Константы.скEDI_ИспользованиеПодсистемы.Получить() Тогда
		Возврат;
	КонецЕсли;
	ВидДокумента1С = скEDI_НастройкиПодКонфигурацию.ПолучитьВидДокумента1С(ИсточникСсылка);
	Если ВидДокумента1С <> Неопределено Тогда
		//ВидДокумента1С,Организация,Контрагент,ЕстьТовары,ЕстьУслуги,Дата,ДоговорКонтрагента,СуммаДокумента,Проведен,МожетБытьПроведен",
		Информация = скEDI_НастройкиПодКонфигурацию.ПолучитьИнформациюДляРегистрацииДокумента(ИсточникСсылка);
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ВидЭлектронногоДокумента КАК ВидЭлектронногоДокумента,
		               |	скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ВидЭлектронногоДокумента.Владелец КАК Организация,
		               |	скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ВхИсх КАК ВхИсх,
		               |	скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ТекстЗапроса
		               |ИЗ
		               |	РегистрСведений.скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов КАК скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов
		               |ГДЕ
		               |	скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ВидЭлектронногоДокумента.Владелец.Организация1С = &Организация1С
		               |	И скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ВидДокумента1С = &ВидДокумента1С
		               |	И (&Дата = НЕОПРЕДЕЛЕНО
		               |			ИЛИ скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ДатаС = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		               |			ИЛИ РАЗНОСТЬДАТ(&Дата, скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ДатаС, ДЕНЬ) <= 0)
		               |	И (&Дата = НЕОПРЕДЕЛЕНО
		               |			ИЛИ скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ДатаПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		               |			ИЛИ РАЗНОСТЬДАТ(&Дата, скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ДатаПо, ДЕНЬ) >= 0)
		               |	И (&ЕстьТовары
		               |			ИЛИ НЕ скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ДолжныБытьТовары)
		               |	И (&ЕстьУслуги
		               |			ИЛИ НЕ скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ДолжныБытьУслуги)
		               |	И (&ОтраженВРег
		               |			ИЛИ НЕ скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ДолженБытьОтраженВРегУчете)
		               |	И (&ОтраженВУпр
		               |			ИЛИ НЕ скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.ДолженБытьОтраженВУпрУчете)
		               |	И скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.Использование
		               |	И (&Проведен
		               |			ИЛИ скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.УчитыватьНепроведенныеДокументы)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВидЭлектронногоДокумента,
		               |	скEDI_СоответствиеВидовЭлектронныхИУчетныхДокументов.Приоритет УБЫВ";
		Запрос.УстановитьПараметр("ВидДокумента1С", Информация.ВидДокумента1С);
		Запрос.УстановитьПараметр("Дата", Информация.Дата);
		Запрос.УстановитьПараметр("ЕстьТовары", Информация.ЕстьТовары);
		Запрос.УстановитьПараметр("ЕстьУслуги", Информация.ЕстьУслуги);
		Запрос.УстановитьПараметр("ОтраженВРег", Информация.ОтраженВРег);
		Запрос.УстановитьПараметр("ОтраженВУпр", Информация.ОтраженВУпр);
		Запрос.УстановитьПараметр("Контрагент", Информация.Контрагент);
		Запрос.УстановитьПараметр("Организация1С", Информация.Организация);
		Запрос.УстановитьПараметр("Проведен", (Информация.Проведен или не Информация.МожетБытьПроведен));
		
		ТаблицаВидовЭлектронныхДокументов = Новый ТаблицаЗначений;
		ТаблицаВидовЭлектронныхДокументов.Колонки.Добавить("ВидЭлектронногоДокумента");
		ТаблицаВидовЭлектронныхДокументов.Колонки.Добавить("Организация");
		ТаблицаВидовЭлектронныхДокументов.Колонки.Добавить("ВхИсх");
		Если не Информация.ПометкаУдаления Тогда
			ТекВидЭлектронногоДокумента = Неопределено;
			ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
			Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
				Если ТекВидЭлектронногоДокумента = ВыборкаРезультатаЗапроса.ВидЭлектронногоДокумента Тогда
					Продолжить;
				Иначе
					Если ЗначениеЗаполнено(ВыборкаРезультатаЗапроса.ТекстЗапроса) Тогда
						Попытка
							ДополнительныйЗапрос = Новый Запрос;
							ДополнительныйЗапрос.Текст = ВыборкаРезультатаЗапроса.ТекстЗапроса;
							ДополнительныйЗапрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
							ВыборкаРезультатаДополнительногоЗапроса = ДополнительныйЗапрос.Выполнить().Выбрать();
							Если не ВыборкаРезультатаДополнительногоЗапроса.Следующий() Тогда
								Продолжить;
							КонецЕсли;
						Исключение
							Продолжить;
						КонецПопытки; 
					КонецЕсли;
					НоваяСтрокаТаблицыВидовЭлектронныхДокументов = ТаблицаВидовЭлектронныхДокументов.Добавить();
					НоваяСтрокаТаблицыВидовЭлектронныхДокументов.ВидЭлектронногоДокумента = ВыборкаРезультатаЗапроса.ВидЭлектронногоДокумента;
					НоваяСтрокаТаблицыВидовЭлектронныхДокументов.Организация = ВыборкаРезультатаЗапроса.Организация;
					НоваяСтрокаТаблицыВидовЭлектронныхДокументов.ВхИсх = ВыборкаРезультатаЗапроса.ВхИсх;
					ТекВидЭлектронногоДокумента = ВыборкаРезультатаЗапроса.ВидЭлектронногоДокумента;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ВидыЭлектронныхДокументов = ТаблицаВидовЭлектронныхДокументов.ВыгрузитьКолонку("ВидЭлектронногоДокумента");
		
		НаборЗаписей = РегистрыСведений.скEDI_ЭлектронныеДокументы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ1С.Установить(ИсточникСсылка);
		НаборЗаписей.Прочитать();
		
		ОбработаныеВидыЭлектронныхДокументов = Новый Массив;
		Если НаборЗаписей.Количество() > 0 Тогда
			УдаляемыеЗаписи = Новый Массив;
			Для Каждого СтрокаНабора ИЗ НаборЗаписей Цикл
				Если СтрокаНабора.ЭлектронныйДокумент = Документы.скEDI_ЭлектронныйДокумент.ПустаяСсылка() Тогда
					Если ВидыЭлектронныхДокументов.Найти(СтрокаНабора.ВидЭлектронногоДокумента) = Неопределено Тогда
						УдаляемыеЗаписи.Добавить(СтрокаНабора);
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				ВидЭлектронногоДокумента = СтрокаНабора.ВидЭлектронногоДокумента;
				ОбработаныеВидыЭлектронныхДокументов.Добавить(ВидЭлектронногоДокумента);
				СтрокаНабора.Документ1СДата = Информация.Дата;
				СтрокаНабора.Документ1СНомер = Информация.Номер;
				СтрокаНабора.Документ1СКомментарий = Информация.Комментарий;
				СтрокаНабора.Документ1СКонтрагент = Информация.Контрагент;
				СтрокаНабора.Документ1СОрганизация = Информация.Организация;
				СтрокаНабора.Документ1СДоговорКонтрагента = Информация.ДоговорКонтрагента;
				Если ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаДокумента") Тогда
					СтрокаНабора.Документ1ССуммаДокумента = Информация.СуммаДокумента;
					СтрокаНабора.Документ1ССуммаНДСДокумента = Информация.СуммаНДСДокумента;
					СтрокаНабора.Документ1ССуммаБезНДСДокумента = Информация.СуммаБезНДСДокумента;
				ИначеЕсли ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаТЧТовары") Тогда
					СтрокаНабора.Документ1ССуммаДокумента = Информация.СуммаТовары;
					СтрокаНабора.Документ1ССуммаНДСДокумента = Информация.СуммаНДСТовары;
					СтрокаНабора.Документ1ССуммаБезНДСДокумента = Информация.СуммаБезНДСТовары;
				ИначеЕсли ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаТЧУслуги") Тогда
					СтрокаНабора.Документ1ССуммаДокумента = Информация.СуммаУслуги;
					СтрокаНабора.Документ1ССуммаНДСДокумента = Информация.СуммаНДСУслуги;
					СтрокаНабора.Документ1ССуммаБезНДСДокумента = Информация.СуммаБезНДСУслуги;
				КонецЕсли;
				СтрокаНабора.Документ1СПометкаУдаления = Информация.ПометкаУдаления;
				СтрокаНабора.Документ1СПроведен = Информация.Проведен;
				СтрокаНабора.Документ1СМожетБытьПроведен = Информация.МожетБытьПроведен;
				СтрокаНабора.РегистрируетсяВЕРННПокупателем = Информация.РегистрируетсяВЕРННПокупателем;
				
				СтрокаНабора.ВидДокумента1С = Информация.ВидДокумента1С;
			КонецЦикла;
			Для Каждого УдаляемаяЗапись Из УдаляемыеЗаписи Цикл
				НаборЗаписей.Удалить(УдаляемаяЗапись);
			КонецЦикла;
		КонецЕсли;
		
		Для Каждого СтрокаТаблицыВидовЭлектронныхДокументов Из ТаблицаВидовЭлектронныхДокументов Цикл
			Если ОбработаныеВидыЭлектронныхДокументов.Найти(СтрокаТаблицыВидовЭлектронныхДокументов.ВидЭлектронногоДокумента) = Неопределено Тогда
				СтрокаНабора = НаборЗаписей.Добавить();
				СтрокаНабора.Организация = СтрокаТаблицыВидовЭлектронныхДокументов.Организация;
				СтрокаНабора.ЭлектронныйДокумент = Документы.скEDI_ЭлектронныйДокумент.ПустаяСсылка();
				СтрокаНабора.Документ1С = ИсточникСсылка;
				ВидЭлектронногоДокумента = СтрокаТаблицыВидовЭлектронныхДокументов.ВидЭлектронногоДокумента;
				СтрокаНабора.ВидЭлектронногоДокумента = ВидЭлектронногоДокумента;
				СтрокаНабора.ВхИсх = СтрокаТаблицыВидовЭлектронныхДокументов.ВхИсх;
				
				СтрокаНабора.Документ1СДата = Информация.Дата;
				СтрокаНабора.Документ1СНомер = Информация.Номер;
				СтрокаНабора.Документ1СКомментарий = Информация.Комментарий;
				СтрокаНабора.Документ1СКонтрагент = Информация.Контрагент;
				СтрокаНабора.Документ1СОрганизация = Информация.Организация;
				СтрокаНабора.Документ1СДоговорКонтрагента = Информация.ДоговорКонтрагента;
				Если ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаДокумента") Тогда
					СтрокаНабора.Документ1ССуммаДокумента = Информация.СуммаДокумента;
					СтрокаНабора.Документ1ССуммаНДСДокумента = Информация.СуммаНДСДокумента;
					СтрокаНабора.Документ1ССуммаБезНДСДокумента = Информация.СуммаБезНДСДокумента;
				ИначеЕсли ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаТЧТовары") Тогда
					СтрокаНабора.Документ1ССуммаДокумента = Информация.СуммаТовары;
					СтрокаНабора.Документ1ССуммаНДСДокумента = Информация.СуммаНДСТовары;
					СтрокаНабора.Документ1ССуммаБезНДСДокумента = Информация.СуммаБезНДСТовары;
				ИначеЕсли ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаТЧУслуги") Тогда
					СтрокаНабора.Документ1ССуммаДокумента = Информация.СуммаУслуги;
					СтрокаНабора.Документ1ССуммаНДСДокумента = Информация.СуммаНДСУслуги;
					СтрокаНабора.Документ1ССуммаБезНДСДокумента = Информация.СуммаБезНДСУслуги;
				КонецЕсли;
				СтрокаНабора.Документ1СПометкаУдаления = Информация.ПометкаУдаления;
				СтрокаНабора.Документ1СПроведен = Информация.Проведен;
				СтрокаНабора.Документ1СМожетБытьПроведен = Информация.МожетБытьПроведен;
				СтрокаНабора.ВидДокумента1С = Информация.ВидДокумента1С;
				СтрокаНабора.РегистрируетсяВЕРННПокупателем = Информация.РегистрируетсяВЕРННПокупателем;
			КонецЕсли;
		КонецЦикла;
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать(Истина);
	КонецЕсли;
КонецПроцедуры

