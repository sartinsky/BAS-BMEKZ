////////////////////////////////////////////////////////////////////////////////
// Подсистема "Контактная информация Бухгалтерии".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПоказатьНаКартеНажатие(Форма, Элемент, Знач Адрес, ДополнениеАдреса = "") Экспорт
	
	ИмяКартографическогоСервиса = "GoogleMaps";
	ПредставлениеКартографическогоСервиса = НСтр("ru='Google Карты';uk='Google Карти'");
	
	УправлениеКонтактнойИнформациейКлиент.ПоказатьАдресНаКарте(Адрес, ИмяКартографическогоСервиса);
	
	Комментарий = СтрШаблон(НСтр("ru='Объект: %1 Сервис: %2';uk='Об''єкт: %1 Сервіс: %2'"),
		ИмяОбъектаФормы(Форма),
		ПредставлениеКартографическогоСервиса);
		
	ЖурналРегистрацииКлиент.ДобавитьСообщениеДляЖурналаРегистрации(
		НСтр("ru='Переход на карту';uk='Перехід на мапу'"),
		"Информация", Комментарий,
		,
		Истина);

КонецПроцедуры

#Область ИсторияКонтактнойИнформации

Процедура ИсторияИзмененийАдресаНажатие(Форма, ВидКИ) Экспорт
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОтборКИ = Новый Структура("Вид", ВидКИ);
	СтрокиКИ = Форма.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(ОтборКИ);
	Если СтрокиКИ.Количество() = 0 Тогда
		ТекущийАдрес = Неопределено;
	Иначе
		ТекущийАдрес = Новый Структура("Значение, Представление",
			СтрокиКИ[0].Значение, СтрокиКИ[0].Представление);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Вид, ТекущийАдрес, ИсторияИзмененийАдреса, ТолькоПросмотр",
		ВидКИ,
		ТекущийАдрес,
		Объект.ИсторияКонтактнойИнформации,
		Форма.ТолькоПросмотр);
	
	ОткрытьФорму("ОбщаяФорма.РедактированиеИсторииКонтактнойИнформации", ПараметрыФормы, Форма);

КонецПроцедуры

Процедура УстановитьАдресПослеРедактированияИстории(Форма, НаборЗаписей, Элемент) Экспорт
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	Форма.Модифицированность = Истина;
	
	НаборЗаписей.Сортировать("Период");
	
	Объект.ИсторияКонтактнойИнформации.Очистить();
	Если НаборЗаписей.Количество() > 1 Тогда
		Для Каждого ЗаписьНабора Из НаборЗаписей Цикл
			ЗаписьИстории = Объект.ИсторияКонтактнойИнформации.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьИстории, ЗаписьНабора);
		КонецЦикла;
	КонецЕсли;
	
	СтрокаАдреса = НаборЗаписей[НаборЗаписей.Количество()-1];
	ОтборКИ = Новый Структура("ИмяРеквизита", Элемент.Имя);
	СтрокиКИ = Форма.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(ОтборКИ);
	Если СтрокиКИ.Количество() = 0 Тогда
		СтрокаКИ = Форма.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.Добавить();
		СтрокаКИ.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес");
		СтрокаКИ.ИмяРеквизита = Элемент.Имя;
		СтрокаКИ.ИмяЭлементаДляРазмещения = "ГруппаКомпоновкиКонтактнойИнформации";
	Иначе
		СтрокаКИ = СтрокиКИ[0];
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(СтрокаКИ, СтрокаАдреса);
	Форма[Элемент.Имя] = СтрокаАдреса.Представление;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИмяОбъектаФормы(Форма)
	
	Перем ИмяОбъекта, ИмяФормыПоСловам;
	
	ИмяФормыПоСловам = СтрРазделить(Форма.ИмяФормы, ".");
	
	Пока ИмяФормыПоСловам.ВГраница() > 1 Цикл
		ИмяФормыПоСловам.Удалить(ИмяФормыПоСловам.ВГраница());
	КонецЦикла;
	
	Возврат СтрСоединить(ИмяФормыПоСловам, ".");

КонецФункции

#КонецОбласти