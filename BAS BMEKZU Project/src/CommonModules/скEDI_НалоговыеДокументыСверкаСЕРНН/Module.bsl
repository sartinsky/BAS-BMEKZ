Процедура ДобавитьВЗапросВременнуюТаблицуСписокДат(Запрос, СписокДат) Экспорт
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Дата
	               |ПОМЕСТИТЬ ВТДаты
	               |ГДЕ
	               |	ЛОЖЬ";
	Для Каждого ТекДата Из СписокДат Цикл
		ТекстЗапроса = ТекстЗапроса + "
					   |ОБЪЕДИНИТЬ
		               |ВЫБРАТЬ
		               |	ДАТАВРЕМЯ(" + Формат(Год(ТекДата), "ЧГ=0") + ", " + Формат(Месяц(ТекДата), "ЧГ=0") + ", " + Формат(День(ТекДата), "ЧГ=0") + ", 0, 0, 0) КАК Дата";
	КонецЦикла;
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
КонецПроцедуры

Процедура ДобавитьВЗапросВременнуюТаблицуВТЗапросы1(Запрос, ОрганизацияEDI) Экспорт
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВТДаты.Дата КАК Дата,
	               |	скEDI_ЗапросНаПолучениеВедомостейЕРНН.Ссылка КАК Ссылка,
	               |	скEDI_ЗапросНаПолучениеВедомостейЕРНН.ОрганизацияEDI,
	               |	ВЫБОР
	               |		КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРНН.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС)
	               |			ТОГДА 4
	               |		КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРНН.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ОтправленВДФС)
	               |			ТОГДА 3
	               |		КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРНН.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоКвитанциюОтДФС)
	               |			ТОГДА 2
	               |		КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРНН.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтклонениеОтДФС)
	               |			ТОГДА 1
	               |	КОНЕЦ КАК Приоритет,
	               |	ВЫБОР
	               |		КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРНН.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС)
	               |			ТОГДА скEDI_ЗапросНаПолучениеВедомостейЕРНН.ДатаФормированияОтвета
	               |		КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРНН.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ОтправленВДФС)
	               |			ТОГДА скEDI_ЗапросНаПолучениеВедомостейЕРНН.ДатаОтправки
	               |		КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРНН.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоКвитанциюОтДФС)
	               |			ТОГДА скEDI_ЗапросНаПолучениеВедомостейЕРНН.ДатаОтправки
	               |		КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРНН.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтклонениеОтДФС)
	               |			ТОГДА скEDI_ЗапросНаПолучениеВедомостейЕРНН.ДатаОтправки
	               |	КОНЕЦ КАК Приоритет2,
	               |	скEDI_ЗапросНаПолучениеВедомостейЕРНН.ДатаОтправки,
	               |	скEDI_ЗапросНаПолучениеВедомостейЕРНН.Состояние,
	               |	скEDI_ЗапросНаПолучениеВедомостейЕРНН.ДатаФормированияОтвета
	               |ПОМЕСТИТЬ ВТЗапросы1
	               |ИЗ
	               |	ВТДаты КАК ВТДаты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.скEDI_ЗапросНаПолучениеВедомостейЕРНН КАК скEDI_ЗапросНаПолучениеВедомостейЕРНН
	               |		ПО ВТДаты.Дата = скEDI_ЗапросНаПолучениеВедомостейЕРНН.ДокументыНаДату
	               |			И (НЕ скEDI_ЗапросНаПолучениеВедомостейЕРНН.ПометкаУдаления)
	               |			И (скEDI_ЗапросНаПолучениеВедомостейЕРНН.ОрганизацияEDI = &ОрганизацияEDI)
	               |			И (скEDI_ЗапросНаПолучениеВедомостейЕРНН.Документы)
	               |			И (скEDI_ЗапросНаПолучениеВедомостейЕРНН.ДокументыВыданые)
	               |			И (скEDI_ЗапросНаПолучениеВедомостейЕРНН.ДокументыПолученые)
	               |			И (НЕ скEDI_ЗапросНаПолучениеВедомостейЕРНН.ИнформацияПоГлавномуПредприятию)
	               |			И (НЕ скEDI_ЗапросНаПолучениеВедомостейЕРНН.ИнформацияПоГлавномуПредприятиюПокупатель)
	               |			И (НЕ скEDI_ЗапросНаПолучениеВедомостейЕРНН.ИнформацияТолькоПоФилиалу)
	               |			И (НЕ скEDI_ЗапросНаПолучениеВедомостейЕРНН.ИнформацияТолькоПоФилиалуПокупатель)
	               |			И (НЕ скEDI_ЗапросНаПолучениеВедомостейЕРНН.ПоСписку)
	               |			И (НЕ скEDI_ЗапросНаПолучениеВедомостейЕРНН.ИмпортДокументаСКвитанцией)
	               |			И (РАЗНОСТЬДАТ(ВТДаты.Дата, скEDI_ЗапросНаПолучениеВедомостейЕРНН.ДатаОтправки, ДЕНЬ) > 0)";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ОрганизацияEDI", ОрганизацияEDI);
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТЗапросы1";
КонецПроцедуры

Процедура ДобавитьВЗапросВременнуюТаблицуВТЗапросы1Последние(Запрос) Экспорт
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Дата,
	               |	ВложенныйЗапрос.Приоритет,
	               |	ВложенныйЗапрос.Приоритет2,
	               |	ВТЗапросы1.Ссылка,
	               |	ВТЗапросы1.ОрганизацияEDI,
	               |	ВТЗапросы1.ДатаОтправки,
	               |	ВТЗапросы1.Состояние,
	               |	ВТЗапросы1.ДатаФормированияОтвета
	               |ПОМЕСТИТЬ ВТЗапросы1Последние
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВложенныйЗапрос.Дата КАК Дата,
	               |		ВложенныйЗапрос.Приоритет КАК Приоритет,
	               |		ВложенныйЗапрос.Приоритет2 КАК Приоритет2,
	               |		МАКСИМУМ(ВТЗапросы1.Ссылка) КАК Ссылка
	               |	ИЗ
	               |		(ВЫБРАТЬ
	               |			ВложенныйЗапрос.Дата КАК Дата,
	               |			ВложенныйЗапрос.Приоритет КАК Приоритет,
	               |			МАКСИМУМ(ВТЗапросы1.Приоритет2) КАК Приоритет2
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				ВТЗапросы1.Дата КАК Дата,
	               |				МАКСИМУМ(ВТЗапросы1.Приоритет) КАК Приоритет
	               |			ИЗ
	               |				ВТЗапросы1 КАК ВТЗапросы1
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ВТЗапросы1.Дата) КАК ВложенныйЗапрос
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗапросы1 КАК ВТЗапросы1
	               |				ПО ВложенныйЗапрос.Дата = ВТЗапросы1.Дата
	               |					И ВложенныйЗапрос.Приоритет = ВТЗапросы1.Приоритет
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВложенныйЗапрос.Дата,
	               |			ВложенныйЗапрос.Приоритет) КАК ВложенныйЗапрос
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗапросы1 КАК ВТЗапросы1
	               |			ПО ВложенныйЗапрос.Дата = ВТЗапросы1.Дата
	               |				И ВложенныйЗапрос.Приоритет = ВТЗапросы1.Приоритет
	               |				И ВложенныйЗапрос.Приоритет2 = ВТЗапросы1.Приоритет2
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ВложенныйЗапрос.Дата,
	               |		ВложенныйЗапрос.Приоритет,
	               |		ВложенныйЗапрос.Приоритет2) КАК ВложенныйЗапрос
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗапросы1 КАК ВТЗапросы1
	               |		ПО ВложенныйЗапрос.Дата = ВТЗапросы1.Дата
	               |			И ВложенныйЗапрос.Приоритет = ВТЗапросы1.Приоритет
	               |			И ВложенныйЗапрос.Приоритет2 = ВТЗапросы1.Приоритет2
	               |			И ВложенныйЗапрос.Ссылка = ВТЗапросы1.Ссылка
	               |";
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТЗапросы1Последние";
КонецПроцедуры

Процедура ДобавитьВЗапросВременнуюТаблицуВТЗапросы1ИДокументы(Запрос, ОрганизацияEDI) Экспорт
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ТЧЗапрос1.Дата, ЭлектронныеДокумены1С.ДатаРегистрации) КАК Дата,
	               |	ТЧЗапрос1.Ссылка КАК Запрос1,
	               |	ТЧЗапрос1.ВыданыйПолученый КАК ВыданыйПолученый,
	               |	ТЧЗапрос1.ВидДокумента КАК ВидДокумента,
	               |	ЕСТЬNULL(ТЧЗапрос1.ВхИсх, ЭлектронныеДокумены1С.ВхИсх) КАК ВхИсх,
	               |	ЕСТЬNULL(ТЧЗапрос1.ТипДокумента, ЭлектронныеДокумены1С.ВидЭлектронногоДокумента.ТипДокумента) КАК ТипДокумента,
	               |	ТЧЗапрос1.НомерДокумента КАК НомерДокумента,
	               |	ТЧЗапрос1.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	               |	ТЧЗапрос1.Филиал КАК Филиал,
	               |	ТЧЗапрос1.ДатаДокумента КАК ДатаДокумента,
	               |	ТЧЗапрос1.ИННПродавца КАК ИННПродавца,
	               |	ТЧЗапрос1.ИННПродавцаА КАК ИННПродавцаА,
	               |	ТЧЗапрос1.СуммаНДС КАК СуммаНДС,
	               |	ЭлектронныеДокумены1С.Ссылка КАК ЭлектроныйДокумент,
	               |	ВЫБОР
	               |		КОГДА ТЧЗапрос1.Ссылка ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ЕстьЗапрос1,
	               |	ВЫБОР
	               |		КОГДА ЭлектронныеДокумены1С.Ссылка ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ЕстьЭлектронныйДокумент
	               |ПОМЕСТИТЬ ВТЗапросы1ИДокументы
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТЗапросы1Последние.Дата КАК Дата,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокВыданыеДокументы.Ссылка КАК Ссылка,
	               |		ВТЗапросы1Последние.ОрганизацияEDI КАК ОрганизацияEDI,
	               |		""Выданый"" КАК ВыданыйПолученый,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокВыданыеДокументы.ВидДокумента КАК ВидДокумента,
	               |		ЗНАЧЕНИЕ(Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Исходящий) КАК ВхИсх,
	               |		ВЫБОР
	               |			КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокВыданыеДокументы.ВидДокумента = ""ПН""
	               |				ТОГДА ЗНАЧЕНИЕ(Перечисление.скEDI_ТипыЭлектронныхДокументов.НалоговаяНакладная)
	               |			КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокВыданыеДокументы.ВидДокумента = ""РК""
	               |				ТОГДА ЗНАЧЕНИЕ(Перечисление.скEDI_ТипыЭлектронныхДокументов.Приложение2КНалоговойНакладной)
	               |		КОНЕЦ КАК ТипДокумента,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокВыданыеДокументы.НомерДокумента КАК НомерДокумента,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокВыданыеДокументы.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокВыданыеДокументы.Филиал КАК Филиал,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокВыданыеДокументы.ДатаДокумента КАК ДатаДокумента,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокВыданыеДокументы.ИННПродавца КАК ИННПродавца,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокВыданыеДокументы.ИННПродавцаА КАК ИННПродавцаА,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокВыданыеДокументы.СуммаНДС КАК СуммаНДС
	               |	ИЗ
	               |		ВТЗапросы1Последние КАК ВТЗапросы1Последние
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.скEDI_ЗапросНаПолучениеВедомостейЕРНН.ВыпискаСписокВыданыеДокументы КАК скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокВыданыеДокументы
	               |			ПО ВТЗапросы1Последние.Ссылка = скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокВыданыеДокументы.Ссылка
	               |	ГДЕ
	               |		ВТЗапросы1Последние.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС)
	               |	
	               |	ОБЪЕДИНИТЬ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТЗапросы1Последние.Дата,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокПолученыеДокументы.Ссылка,
	               |		ВТЗапросы1Последние.ОрганизацияEDI,
	               |		""Полученый"",
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокПолученыеДокументы.ВидДокумента,
	               |		ЗНАЧЕНИЕ(Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Входящий),
	               |		ВЫБОР
	               |			КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокПолученыеДокументы.ВидДокумента = ""ПН""
	               |				ТОГДА ЗНАЧЕНИЕ(Перечисление.скEDI_ТипыЭлектронныхДокументов.НалоговаяНакладная)
	               |			КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокПолученыеДокументы.ВидДокумента = ""РК""
	               |				ТОГДА ЗНАЧЕНИЕ(Перечисление.скEDI_ТипыЭлектронныхДокументов.Приложение2КНалоговойНакладной)
	               |		КОНЕЦ,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокПолученыеДокументы.НомерДокумента,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокПолученыеДокументы.СпецРежимНалогообложения,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокПолученыеДокументы.Филиал,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокПолученыеДокументы.ДатаДокумента,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокПолученыеДокументы.ИННПродавца,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокПолученыеДокументы.ИННПродавцаА,
	               |		скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокПолученыеДокументы.СуммаНДС
	               |	ИЗ
	               |		ВТЗапросы1Последние КАК ВТЗапросы1Последние
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.скEDI_ЗапросНаПолучениеВедомостейЕРНН.ВыпискаСписокПолученыеДокументы КАК скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокПолученыеДокументы
	               |			ПО ВТЗапросы1Последние.Ссылка = скEDI_ЗапросНаПолучениеВедомостейЕРННВыпискаСписокПолученыеДокументы.Ссылка
	               |	ГДЕ
	               |		ВТЗапросы1Последние.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС)) КАК ТЧЗапрос1
	               |		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВТДаты.Дата КАК ДатаРегистрации,
	               |			скEDI_ЭлектронныйДокумент.Ссылка КАК Ссылка,
	               |			скEDI_ЭлектронныйДокумент.Номер КАК Номер,
	               |			скEDI_ЭлектронныйДокумент.Дата КАК Дата,
	               |			скEDI_ЭлектронныйДокумент.ВхИсх КАК ВхИсх,
	               |			скEDI_ЭлектронныйДокумент.ВидЭлектронногоДокумента КАК ВидЭлектронногоДокумента,
	               |			скEDI_ЭлектронныйДокумент.ЕДРПОУКонтрагента КАК ЕДРПОУКонтрагента,
	               |			скEDI_ЭлектронныйДокумент.ФилиалКонтрагента КАК ФилиалКонтрагента,
	               |			скEDI_ЭлектронныйДокумент.СуммаДокумента КАК СуммаДокумента,
	               |			скEDI_ЭлектронныйДокумент.СуммаНДС КАК СуммаНДС,
	               |			скEDI_ЭлектронныйДокумент.СуммаБезНДС КАК СуммаБезНДС,
	               |			скEDI_ЭлектронныйДокумент.ЗарегистрированВДФС КАК ЗарегистрированВДФС,
	               |			скEDI_ЭлектронныйДокумент.ДатаРегистрацииВДФС КАК ДатаРегистрацииВДФС,
	               |			скEDI_ЭлектронныйДокумент.РегистрационныйНомерДФС КАК РегистрационныйНомерДФС,
	               |			скEDI_ЭлектронныйДокумент.ПричинаОтклоненияДФС КАК ПричинаОтклоненияДФС,
	               |			скEDI_ЭлектронныйДокумент.ПричинаОтклоненияКонтрагентом КАК ПричинаОтклоненияКонтрагентом,
	               |			скEDI_ЭлектронныйДокумент.СостояниеРегистрацияВДФС КАК СостояниеРегистрацияВДФС,
	               |			скEDI_ЭлектронныйДокумент.ЕстьФинальнаяКвитанцияДФС КАК ЕстьФинальнаяКвитанцияДФС,
	               |			скEDI_ЭлектронныйДокумент.ИННПродавца КАК ИННПродавца,
	               |			скEDI_ЭлектронныйДокумент.КодФилиалаПродавца КАК КодФилиалаПродавца,
	               |			скEDI_ЭлектронныйДокумент.ИННПокупателя КАК ИННПокупателя,
	               |			скEDI_ЭлектронныйДокумент.КодФилиалаПокупателя КАК КодФилиалаПокупателя,
	               |			скEDI_ЭлектронныйДокумент.ДатаДокумента КАК ДатаДокумента,
	               |			скEDI_ЭлектронныйДокумент.НомерДокумента КАК НомерДокумента,
	               |			скEDI_ЭлектронныйДокумент.РегистрируетсяВЕРННПокупателем КАК РегистрируетсяВЕРННПокупателем
	               |		ИЗ
	               |			ВТДаты КАК ВТДаты
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.скEDI_ЭлектронныйДокумент КАК скEDI_ЭлектронныйДокумент
	               |				ПО (РАЗНОСТЬДАТ(ВТДаты.Дата, скEDI_ЭлектронныйДокумент.ДатаРегистрацииВДФС, ДЕНЬ) = 0)
	               |					И (скEDI_ЭлектронныйДокумент.ЗарегистрированВДФС)
	               |					И (скEDI_ЭлектронныйДокумент.Организация = &ОрганизацияEDI)
	               |					И (НЕ скEDI_ЭлектронныйДокумент.ПометкаУдаления)) КАК ЭлектронныеДокумены1С
	               |		ПО ТЧЗапрос1.ВхИсх = ЭлектронныеДокумены1С.ВхИсх
	               |			И ТЧЗапрос1.ТипДокумента = ЭлектронныеДокумены1С.ВидЭлектронногоДокумента.ТипДокумента
	               |			И (РАЗНОСТЬДАТ(ТЧЗапрос1.ДатаДокумента, ЭлектронныеДокумены1С.ДатаДокумента, ДЕНЬ) = 0)
	               |			И ТЧЗапрос1.НомерДокумента = ЭлектронныеДокумены1С.НомерДокумента
	               |			И (ТЧЗапрос1.ИННПродавца ПОДОБНО ""_"" + ЭлектронныеДокумены1С.ИННПродавца
	               |				ИЛИ ТЧЗапрос1.ИННПродавца = ЭлектронныеДокумены1С.ИННПродавца)";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ОрганизацияEDI", ОрганизацияEDI);
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТЗапросы1Последние";
КонецПроцедуры

Процедура ДобавитьВЗапросВременнуюТаблицуВТЗапросы1ИДокументыСостояниеЗапроса2(Запрос, ОрганизацияEDI) Экспорт
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Дата,
	               |	ВложенныйЗапрос.Запрос1,
	               |	ВложенныйЗапрос.ВыданыйПолученый,
	               |	ВложенныйЗапрос.ВидДокумента,
	               |	ВложенныйЗапрос.ВхИсх,
	               |	ВложенныйЗапрос.ТипДокумента,
	               |	ВложенныйЗапрос.НомерДокумента,
	               |	ВложенныйЗапрос.СпецРежимНалогообложения,
	               |	ВложенныйЗапрос.Филиал,
	               |	ВложенныйЗапрос.ДатаДокумента,
	               |	ВложенныйЗапрос.ИННПродавца,
	               |	ВложенныйЗапрос.ИННПродавцаА,
	               |	ВложенныйЗапрос.СуммаНДС,
	               |	ВложенныйЗапрос.ЭлектроныйДокумент,
	               |	ВложенныйЗапрос.ЕстьЗапрос1,
	               |	ВложенныйЗапрос.ЕстьЭлектронныйДокумент,
	               |	ВЫБОР
	               |		КОГДА НЕ ВложенныйЗапрос.Запрос2ДатаФормированияОтвета ЕСТЬ NULL
	               |				И ВложенныйЗапрос.Запрос2ДатаФормированияОтвета >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2ДатаФормированияОтвета >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2ДатаФормированияОтвета >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС)
	               |		КОГДА НЕ ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки ЕСТЬ NULL
	               |				И ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2ДатаФормированияОтвета, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ОтправленВДФС)
	               |		КОГДА НЕ ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки ЕСТЬ NULL
	               |				И ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2ДатаФормированияОтвета, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоКвитанциюОтДФС)
	               |		КОГДА НЕ ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки ЕСТЬ NULL
	               |				И ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2ДатаФормированияОтвета, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтклонениеОтДФС)
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПустаяСсылка)
	               |	КОНЕЦ КАК Запрос2Состояние,
	               |	ВЫБОР
	               |		КОГДА НЕ ВложенныйЗапрос.Запрос2ДатаФормированияОтвета ЕСТЬ NULL
	               |				И ВложенныйЗапрос.Запрос2ДатаФормированияОтвета >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2ДатаФормированияОтвета >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2ДатаФормированияОтвета >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |			ТОГДА ВложенныйЗапрос.Запрос2ДатаФормированияОтвета
	               |		КОГДА НЕ ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки ЕСТЬ NULL
	               |				И ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2ДатаФормированияОтвета, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |			ТОГДА ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки
	               |		КОГДА НЕ ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки ЕСТЬ NULL
	               |				И ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2ДатаФормированияОтвета, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |			ТОГДА ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки
	               |		КОГДА НЕ ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки ЕСТЬ NULL
	               |				И ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2ДатаФормированияОтвета, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Отправлен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |				И ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки >= ЕСТЬNULL(ВложенныйЗапрос.Запрос2Доставлен_ДатаОтправки, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	               |			ТОГДА ВложенныйЗапрос.Запрос2Отклонен_ДатаОтправки
	               |	КОНЕЦ КАК Запрос2Дата
	               |ПОМЕСТИТЬ ВТЗапросы1ИДокументыСостояниеЗапроса2
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВЗЗапросы1ИДокументы.Дата КАК Дата,
	               |		ВЗЗапросы1ИДокументы.Запрос1 КАК Запрос1,
	               |		ВЗЗапросы1ИДокументы.ВыданыйПолученый КАК ВыданыйПолученый,
	               |		ВЗЗапросы1ИДокументы.ВидДокумента КАК ВидДокумента,
	               |		ВЗЗапросы1ИДокументы.ВхИсх КАК ВхИсх,
	               |		ВЗЗапросы1ИДокументы.ТипДокумента КАК ТипДокумента,
	               |		ВЗЗапросы1ИДокументы.НомерДокумента КАК НомерДокумента,
	               |		ВЗЗапросы1ИДокументы.СпецРежимНалогообложения КАК СпецРежимНалогообложения,
	               |		ВЗЗапросы1ИДокументы.Филиал КАК Филиал,
	               |		ВЗЗапросы1ИДокументы.ДатаДокумента КАК ДатаДокумента,
	               |		ВЗЗапросы1ИДокументы.ИННПродавца КАК ИННПродавца,
	               |		ВЗЗапросы1ИДокументы.ИННПродавцаА КАК ИННПродавцаА,
	               |		ВЗЗапросы1ИДокументы.СуммаНДС КАК СуммаНДС,
	               |		ВЗЗапросы1ИДокументы.ЭлектроныйДокумент КАК ЭлектроныйДокумент,
	               |		ВЗЗапросы1ИДокументы.ЕстьЗапрос1 КАК ЕстьЗапрос1,
	               |		ВЗЗапросы1ИДокументы.ЕстьЭлектронныйДокумент КАК ЕстьЭлектронныйДокумент,
	               |		МАКСИМУМ(ВЫБОР
	               |				КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Ссылка.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС)
	               |					ТОГДА скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Ссылка.ДатаФормированияОтвета
	               |			КОНЕЦ) КАК Запрос2ДатаФормированияОтвета,
	               |		МАКСИМУМ(ВЫБОР
	               |				КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Ссылка.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ОтправленВДФС)
	               |					ТОГДА скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Ссылка.ДатаОтправки
	               |			КОНЕЦ) КАК Запрос2Отправлен_ДатаОтправки,
	               |		МАКСИМУМ(ВЫБОР
	               |				КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Ссылка.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоКвитанциюОтДФС)
	               |					ТОГДА скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Ссылка.ДатаОтправки
	               |			КОНЕЦ) КАК Запрос2Доставлен_ДатаОтправки,
	               |		МАКСИМУМ(ВЫБОР
	               |				КОГДА скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Ссылка.Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтклонениеОтДФС)
	               |					ТОГДА скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Ссылка.ДатаОтправки
	               |			КОНЕЦ) КАК Запрос2Отклонен_ДатаОтправки
	               |	ИЗ
	               |		ВТЗапросы1ИДокументы КАК ВЗЗапросы1ИДокументы
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.скEDI_ЗапросНаПолучениеВедомостейЕРНН.Список КАК скEDI_ЗапросНаПолучениеВедомостейЕРННСписок
	               |			ПО (ВЗЗапросы1ИДокументы.ЕстьЗапрос1)
	               |				И (НЕ ВЗЗапросы1ИДокументы.ЕстьЭлектронныйДокумент)
	               |				И (РАЗНОСТЬДАТ(ВЗЗапросы1ИДокументы.Дата, скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Ссылка.ДатаОтправки, ДЕНЬ) > 0)
	               |				И (скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Ссылка.ОрганизацияEDI = &ОрганизацияEDI)
	               |				И (скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Ссылка.ПоСписку)
	               |				И (скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Ссылка.ИмпортДокументаСКвитанцией)
	               |				И ВЗЗапросы1ИДокументы.НомерДокумента = скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.НомерДокумента
	               |				И ВЗЗапросы1ИДокументы.СпецРежимНалогообложения = скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.СпецРежимНалогообложения
	               |				И ВЗЗапросы1ИДокументы.Филиал = скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Филиал
	               |				И ВЗЗапросы1ИДокументы.ДатаДокумента = скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.ДатаДокумента
	               |				И ВЗЗапросы1ИДокументы.ВидДокумента = скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.ВидДокумента
	               |				И ВЗЗапросы1ИДокументы.ИННПродавца = скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.ИННПродавца
	               |				И (НЕ скEDI_ЗапросНаПолучениеВедомостейЕРННСписок.Ссылка.ПометкаУдаления)
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ВЗЗапросы1ИДокументы.Запрос1,
	               |		ВЗЗапросы1ИДокументы.Дата,
	               |		ВЗЗапросы1ИДокументы.ВхИсх,
	               |		ВЗЗапросы1ИДокументы.ТипДокумента,
	               |		ВЗЗапросы1ИДокументы.ИННПродавца,
	               |		ВЗЗапросы1ИДокументы.СпецРежимНалогообложения,
	               |		ВЗЗапросы1ИДокументы.ВидДокумента,
	               |		ВЗЗапросы1ИДокументы.ИННПродавцаА,
	               |		ВЗЗапросы1ИДокументы.НомерДокумента,
	               |		ВЗЗапросы1ИДокументы.ЕстьЗапрос1,
	               |		ВЗЗапросы1ИДокументы.ЕстьЭлектронныйДокумент,
	               |		ВЗЗапросы1ИДокументы.ДатаДокумента,
	               |		ВЗЗапросы1ИДокументы.Филиал,
	               |		ВЗЗапросы1ИДокументы.ВыданыйПолученый,
	               |		ВЗЗапросы1ИДокументы.ЭлектроныйДокумент,
	               |		ВЗЗапросы1ИДокументы.СуммаНДС) КАК ВложенныйЗапрос";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ОрганизацияEDI", ОрганизацияEDI);
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТЗапросы1ИДокументыСостояниеЗапроса2";
КонецПроцедуры

Процедура УстановитьТекстЗапросаЗляСпискаСверкаСЕРНН(Запрос) Экспорт
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТДаты.Дата КАК Дата,
	               |	ВТЗапросы1Последние.Ссылка КАК Запрос1,
	               |	ВТЗапросы1Последние.Ссылка.Номер КАК Запрос1Номер,
	               |	ВТЗапросы1Последние.Ссылка.ДатаОтправки КАК Запрос1ДатаОтправки,
	               |	ВТЗапросы1Последние.Ссылка.ДатаФормированияОтвета КАК Запрос1ДатаФормированияОтвета,
	               |	ВТЗапросы1Последние.Ссылка.ДатаПолученияОтвета КАК Запрос1ДатаПолученияОтвета,
	               |	ВТЗапросы1Последние.Ссылка.Состояние КАК Запрос1Состояние,
	               |	ВТЗапросы1Последние.Ссылка.ПричинаОтклоненияДФС КАК Запрос1ПричинаОтклоненияДФС,
	               |	ЕСТЬNULL(ВЗЗапросы1ИДокументы.КоличествоДокументовВВыписке, 0) КАК КоличествоДокументовВВыписке,
	               |	ЕСТЬNULL(ВЗЗапросы1ИДокументы.КоличествоДокументовВВналичии, 0) КАК КоличествоДокументовВВналичии,
	               |	ЕСТЬNULL(ВЗЗапросы1ИДокументы.КоличествоДокументовОтсутствуют, 0) КАК КоличествоДокументовОтсутствуют,
	               |	ЕСТЬNULL(ВЗЗапросы1ИДокументы.КоличествоДокументовНетВыписке, 0) КАК КоличествоДокументовНетВыписке,
	               |	ВЗЗапросы1ИДокументы.Запрос2ДатаПолученияОтветов КАК Запрос2ДатаПолученияОтветов,
	               |	ВЗЗапросы1ИДокументы.Запрос2ДатаОтправкиЗапросов КАК Запрос2ДатаОтправкиЗапросов,
	               |	ВЗЗапросы1ИДокументы.Запрос2ДатаОтправкиЗапросовЗапросДоставлен КАК Запрос2ДатаОтправкиЗапросовЗапросДоставлен,
	               |	ВЗЗапросы1ИДокументы.Запрос2ДатаОтправкиЗапросовЗапросОтклонен КАК Запрос2ДатаОтправкиЗапросовЗапросОтклонен,
	               |	ВЗЗапросы1ИДокументы.Запрос2ЕстьНеобработаныеДокументы КАК Запрос2ЕстьНеобработаныеДокументы
	               |ИЗ
	               |	ВТДаты КАК ВТДаты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗапросы1Последние КАК ВТЗапросы1Последние
	               |		ПО ВТДаты.Дата = ВТЗапросы1Последние.Дата
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВТЗапросы1ИДокументыСостояниеЗапроса2.Дата КАК Дата,
	               |			СУММА(ВЫБОР
	               |					КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЗапрос1
	               |						ТОГДА 1
	               |				КОНЕЦ) КАК КоличествоДокументовВВыписке,
	               |			СУММА(ВЫБОР
	               |					КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЭлектронныйДокумент
	               |						ТОГДА 1
	               |				КОНЕЦ) КАК КоличествоДокументовВВналичии,
	               |			СУММА(ВЫБОР
	               |					КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЗапрос1
	               |							И НЕ ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЭлектронныйДокумент
	               |						ТОГДА 1
	               |				КОНЕЦ) КАК КоличествоДокументовОтсутствуют,
	               |			СУММА(ВЫБОР
	               |					КОГДА НЕ ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЗапрос1
	               |							И ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЭлектронныйДокумент
	               |						ТОГДА 1
	               |				КОНЕЦ) КАК КоличествоДокументовНетВыписке,
	               |			МИНИМУМ(ВЫБОР
	               |					КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЗапрос1
	               |							И НЕ ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЭлектронныйДокумент
	               |						ТОГДА ВЫБОР
	               |								КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС)
	               |									ТОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Дата
	               |							КОНЕЦ
	               |				КОНЕЦ) КАК Запрос2ДатаПолученияОтветов,
	               |			МИНИМУМ(ВЫБОР
	               |					КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЗапрос1
	               |							И НЕ ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЭлектронныйДокумент
	               |						ТОГДА ВЫБОР
	               |								КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ОтправленВДФС)
	               |									ТОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Дата
	               |							КОНЕЦ
	               |				КОНЕЦ) КАК Запрос2ДатаОтправкиЗапросов,
	               |			МИНИМУМ(ВЫБОР
	               |					КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЗапрос1
	               |							И НЕ ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЭлектронныйДокумент
	               |						ТОГДА ВЫБОР
	               |								КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоКвитанциюОтДФС)
	               |									ТОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Дата
	               |							КОНЕЦ
	               |				КОНЕЦ) КАК Запрос2ДатаОтправкиЗапросовЗапросДоставлен,
	               |			МИНИМУМ(ВЫБОР
	               |					КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЗапрос1
	               |							И НЕ ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЭлектронныйДокумент
	               |						ТОГДА ВЫБОР
	               |								КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтклонениеОтДФС)
	               |									ТОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Дата
	               |							КОНЕЦ
	               |				КОНЕЦ) КАК Запрос2ДатаОтправкиЗапросовЗапросОтклонен,
	               |			МАКСИМУМ(ВЫБОР
	               |					КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЗапрос1
	               |							И НЕ ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЭлектронныйДокумент
	               |						ТОГДА ВЫБОР
	               |								КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС)
	               |									ТОГДА ЛОЖЬ
	               |								КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ОтправленВДФС)
	               |									ТОГДА ЛОЖЬ
	               |								КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоКвитанциюОтДФС)
	               |									ТОГДА ЛОЖЬ
	               |								КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтклонениеОтДФС)
	               |									ТОГДА ЛОЖЬ
	               |								ИНАЧЕ ИСТИНА
	               |							КОНЕЦ
	               |				КОНЕЦ) КАК Запрос2ЕстьНеобработаныеДокументы
	               |		ИЗ
	               |			ВТЗапросы1ИДокументыСостояниеЗапроса2 КАК ВТЗапросы1ИДокументыСостояниеЗапроса2
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВТЗапросы1ИДокументыСостояниеЗапроса2.Дата) КАК ВЗЗапросы1ИДокументы
	               |		ПО ВТДаты.Дата = ВЗЗапросы1ИДокументы.Дата
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата УБЫВ";
КонецПроцедуры

Процедура скEDI_СверкаНалоговыхДокументовЕРНН(СтруктураПараметров) Экспорт
	Если не Константы.скEDI_ИспользованиеПодсистемы.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	
	Если ТипЗнч(СтруктураПараметров) <> Тип("Структура") Тогда 
		
		ЗаписьЖурналаРегистрации("скEDI_СверкаНалоговыхДокументовЕРНН" ,,,,"Некорректный тип входящих параметров");
		Отказ = Истина;
		скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Некорректный тип входящих параметров");		
		
	Иначе	
		
		Если НЕ СтруктураПараметров.Свойство("Организация")
			ИЛИ НЕ ЗначениеЗаполнено(СтруктураПараметров.Организация) Тогда 
			
			ЗаписьЖурналаРегистрации("скEDI_СверкаНалоговыхДокументовЕРНН" ,,,,"Не заполнено свойство <Организация>");
			Отказ = Истина;
			скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Не заполнено свойство <Организация>");
			
		КонецЕсли;
		
		Если НЕ СтруктураПараметров.Свойство("НаименованиеФоновогоПроцесса")
			ИЛИ НЕ ЗначениеЗаполнено(СтруктураПараметров.НаименованиеФоновогоПроцесса) Тогда 
			
			ЗаписьЖурналаРегистрации("скEDI_СверкаНалоговыхДокументовЕРНН" ,,,,"Не заполнено свойство <НаименованиеФоновогоПроцесса>");
			Отказ = Истина;
			скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Не заполнено свойство <НаименованиеФоновогоПроцесса>");
			
		КонецЕсли;
		
		//Если НЕ СтруктураПараметров.Свойство("КоличествоФоновыхПроцессов")
		//	ИЛИ НЕ ЗначениеЗаполнено(СтруктураПараметров.КоличествоФоновыхПроцессов) Тогда 
		//	
		//	ЗаписьЖурналаРегистрации("скEDI_СверкаНалоговыхДокументовЕРНН" ,,,,"Не заплнено свойство <КоличествоФоновыхПроцессов>");
		//	Отказ = Истина;
		//	скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Не заплнено свойство <КоличествоФоновыхПроцессов>");
		//	
		//КонецЕсли;
		
		//Если НЕ СтруктураПараметров.Свойство("КоличествоДокументовВОдномПотоке")
		//	ИЛИ НЕ ЗначениеЗаполнено(СтруктураПараметров.КоличествоДокументовВОдномПотоке) Тогда 
		//	
		//	ЗаписьЖурналаРегистрации("скEDI_СверкаНалоговыхДокументовЕРНН" ,,,,"Не заплнено свойство <КоличествоДокументовВОдномПотоке>");
		//	Отказ = Истина;
		//	скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Не заплнено свойство <КоличествоДокументовВОдномПотоке>");
		//	
		//КонецЕсли;

		
		//Если НЕ СтруктураПараметров.Свойство("ВидыЭлектронногоДокумента")
		//	ИЛИ НЕ ЗначениеЗаполнено(СтруктураПараметров.ВидыЭлектронногоДокумента) Тогда 
		//	
		//	ЗаписьЖурналаРегистрации("скEDI_СверкаНалоговыхДокументовЕРНН" ,,,,"Не заплнено свойство <ВидыЭлектронногоДокумента>");
		//	Отказ = Истина;
		//	скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Не заплнено свойство <ВидыЭлектронногоДокумента>");
		//	
		//КонецЕсли;
		
		Если НЕ СтруктураПараметров.Свойство("ТаблицаНеобходимыхПодписейШифрования")
			ИЛИ СтруктураПараметров.ТаблицаНеобходимыхПодписейШифрования.Количество() = 0 Тогда 
			
			ЗаписьЖурналаРегистрации("скEDI_СверкаНалоговыхДокументовЕРНН" ,,,,"Не заполнено свойство <ТаблицаНеобходимыхПодписейШифрования>");
			Отказ = Истина;
			скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Не заполнено свойство <ТаблицаНеобходимыхПодписейШифрования>");
			
		КонецЕсли;
		
		Если НЕ СтруктураПараметров.Свойство("ПериодС") Тогда 
			
			ЗаписьЖурналаРегистрации("скEDI_СверкаНалоговыхДокументовЕРНН" ,,,,"Не заполнено свойство <ПериодС>");
			Отказ = Истина;
			скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Не заполнено свойство <ПериодС>");
			
		КонецЕсли;
		
		Если НЕ СтруктураПараметров.Свойство("ТаблицаНеобходимыхПодписей")
			ИЛИ СтруктураПараметров.ТаблицаНеобходимыхПодписей.Количество() = 0 Тогда 
			
			ЗаписьЖурналаРегистрации("скEDI_СверкаНалоговыхДокументовЕРНН" ,,,,"Не заполнено свойство <ТаблицаНеобходимыхПодписей>");
			Отказ = Истина;
			скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Не заполнено свойство <ТаблицаНеобходимыхПодписей>");
			
		КонецЕсли;
		
	КонецЕсли;	
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	скEDI_ВыполненныеОперацииОбработкиДокументов.ДатаВыполнения
	|ИЗ
	|	РегистрСведений.скEDI_ВыполненныеОперацииОбработкиДокументов КАК скEDI_ВыполненныеОперацииОбработкиДокументов
	|ГДЕ
	|	скEDI_ВыполненныеОперацииОбработкиДокументов.Организация = &Организация";
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		ДатаПоследнегоПолученияВх = Выборка.ДатаВыполнения;
	Иначе
		ЗаписьЖурналаРегистрации("скEDI_СверкаНалоговыхДокументовЕРНН",,,, "Нет данных о получении входящих сообщений");
		Отказ = Истина;
		скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Нет данных о получении входящих сообщений");
		Возврат;
	КонецЕсли;	
	
	Сообщить(НСтр("ru = 'Начато выполнение регламентного задания по Сверке с ЕРНН'; uk = 'Розпочато виконання регламентного завдання по Звірці з ЄРПН'"));
	

	ТекущаяДата = ТекущаяДата();
	
	ТекДата = СтруктураПараметров.ПериодС.Дата;//НачалоДня(ФильтрПериодСверкаСЕРНН.ДатаНачала);
	ДатаОкончания = НачалоДня(ТекущаяДата) - 1*24*60*60;
	СписокДат = Новый Массив;
	Пока ТекДата <= ДатаОкончания Цикл
		СписокДат.Добавить(ТекДата);
		ТекДата = ТекДата + 1*24*60*60;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	скEDI_НалоговыеДокументыСверкаСЕРНН.ДобавитьВЗапросВременнуюТаблицуСписокДат(Запрос, СписокДат);
	скEDI_НалоговыеДокументыСверкаСЕРНН.ДобавитьВЗапросВременнуюТаблицуВТЗапросы1(Запрос, СтруктураПараметров.Организация);
	скEDI_НалоговыеДокументыСверкаСЕРНН.ДобавитьВЗапросВременнуюТаблицуВТЗапросы1Последние(Запрос);
	скEDI_НалоговыеДокументыСверкаСЕРНН.ДобавитьВЗапросВременнуюТаблицуВТЗапросы1ИДокументы(Запрос, СтруктураПараметров.Организация);
	скEDI_НалоговыеДокументыСверкаСЕРНН.ДобавитьВЗапросВременнуюТаблицуВТЗапросы1ИДокументыСостояниеЗапроса2(Запрос, СтруктураПараметров.Организация);
	скEDI_НалоговыеДокументыСверкаСЕРНН.УстановитьТекстЗапросаЗляСпискаСверкаСЕРНН(Запрос);
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	
	ЕстьНеобходимостьОтправитьЗапрос = Ложь;
	СписокДатФормированиеЗапроса1 = Новый Массив;
	СписокДатФормированиеЗапроса2 = Новый Массив;
	Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
		Если ВыборкаРезультатаЗапроса.КоличествоДокументовОтсутствуют > 0 Тогда
			СписокДатФормированиеЗапроса2.Добавить(ВыборкаРезультатаЗапроса.Дата);
		Иначе
			СписокДатФормированиеЗапроса1.Добавить(ВыборкаРезультатаЗапроса.Дата);
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаРезультатаЗапроса.Запрос1Состояние) Тогда
			Если ВыборкаРезультатаЗапроса.Запрос1Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтклонениеОтДФС") Тогда
				ЕстьНеобходимостьОтправитьЗапрос = Истина;
			ИначеЕсли ВыборкаРезультатаЗапроса.Запрос1Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС") Тогда
				Если ВыборкаРезультатаЗапроса.КоличествоДокументовОтсутствуют = 0 Тогда
				Иначе
					Если ВыборкаРезультатаЗапроса.Запрос2ЕстьНеобработаныеДокументы Тогда
						ЕстьНеобходимостьОтправитьЗапрос = Истина;
					ИначеЕсли ЗначениеЗаполнено(ВыборкаРезультатаЗапроса.Запрос2ДатаОтправкиЗапросовЗапросОтклонен) Тогда
						ЕстьНеобходимостьОтправитьЗапрос = Истина;
					Иначе
						МинДата = ДатаПоследнегоПолученияВх;
						СостояниеСтроки = "";
						Если ЗначениеЗаполнено(МинДата) Тогда
							Если ЗначениеЗаполнено(ВыборкаРезультатаЗапроса.Запрос2ДатаПолученияОтветов) Тогда
								Если ВыборкаРезультатаЗапроса.Запрос2ДатаПолученияОтветов <= МинДата Тогда
									МинДата = ВыборкаРезультатаЗапроса.Запрос2ДатаПолученияОтветов;
									СостояниеСтроки = "Запрос на получение документов отпрален.";
								КонецЕсли;
							КонецЕсли;
							Если ЗначениеЗаполнено(ВыборкаРезультатаЗапроса.Запрос2ДатаОтправкиЗапросов) Тогда
								Если ВыборкаРезультатаЗапроса.Запрос2ДатаОтправкиЗапросов <= МинДата Тогда
									МинДата = ВыборкаРезультатаЗапроса.Запрос2ДатаОтправкиЗапросов;
									СостояниеСтроки = "Запрос на получение документов отпрален.";
								КонецЕсли;
							КонецЕсли;
							Если ЗначениеЗаполнено(ВыборкаРезультатаЗапроса.Запрос2ДатаОтправкиЗапросовЗапросДоставлен) Тогда
								Если ВыборкаРезультатаЗапроса.Запрос2ДатаОтправкиЗапросовЗапросДоставлен <= МинДата Тогда
									МинДата = ВыборкаРезультатаЗапроса.Запрос2ДатаОтправкиЗапросовЗапросДоставлен;
									СостояниеСтроки = "Запрос на получение документов отпрален.";
								КонецЕсли;
							КонецЕсли;
							Если ДатаПоследнегоПолученияВх + 10*60 < ТекущаяДата Тогда
								СостояниеСтроки = "Необходимо получить входящие сообщения.";
							ИначеЕсли НачалоДня(МинДата) < НачалоДня(ДатаПоследнегоПолученияВх) Тогда
								СостояниеСтроки = СостояниеСтроки + " Необходимо повторить.";
								ЕстьНеобходимостьОтправитьЗапрос = Истина;
							Иначе
								СостояниеСтроки = "Необходимо получить входящие сообщения.";
							КонецЕсли;
						Иначе
							СостояниеСтроки = "Необходимо получить входящие сообщения.";
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			Иначе
			КонецЕсли;
		Иначе
			СостояниеСтроки = "Необходимо отправить запрос на получение списка документов.";
			ЕстьНеобходимостьОтправитьЗапрос = Истина;
		КонецЕсли;
	КонецЦикла;
	
	
	Если ЕстьНеобходимостьОтправитьЗапрос Тогда
		ВыполняемыеОперации = Новый Массив;
		ВыполняемыеОперации.Добавить("Подпись");
		ВыполняемыеОперации.Добавить("ОтправкаВДФС");
		ТаблицаНастроекПодписей = СтруктураПараметров.ТаблицаНеобходимыхПодписей;
		ТаблицаНастроекПодписейШифрования = СтруктураПараметров.ТаблицаНеобходимыхПодписейШифрования;

		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		скEDI_НалоговыеДокументыСверкаСЕРНН.ДобавитьВЗапросВременнуюТаблицуСписокДат(Запрос, СписокДатФормированиеЗапроса1);
		скEDI_НалоговыеДокументыСверкаСЕРНН.ДобавитьВЗапросВременнуюТаблицуВТЗапросы1(Запрос, СтруктураПараметров.Организация);
		скEDI_НалоговыеДокументыСверкаСЕРНН.ДобавитьВЗапросВременнуюТаблицуВТЗапросы1Последние(Запрос);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВТДаты.Дата КАК Дата,
		               |	ВТЗапросы1Последние.Ссылка,
		               |	ВТЗапросы1Последние.Состояние
		               |ИЗ
		               |	ВТДаты КАК ВТДаты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗапросы1Последние КАК ВТЗапросы1Последние
		               |		ПО ВТДаты.Дата = ВТЗапросы1Последние.Дата
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Дата";
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
			Если ВыборкаРезультатаЗапроса.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ОтправленВДФС") Тогда
				Продолжить;
			ИначеЕсли ВыборкаРезультатаЗапроса.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоКвитанциюОтДФС") Тогда
				Продолжить;
			ИначеЕсли ВыборкаРезультатаЗапроса.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС") Тогда
				Продолжить;
			Иначе
				ДокументЗапросВЕРНН = Документы.скEDI_ЗапросНаПолучениеВедомостейЕРНН.СоздатьДокумент();
				ДокументЗапросВЕРНН.ОрганизацияEDI = СтруктураПараметров.Организация;
				ДокументЗапросВЕРНН.Организация = ДокументЗапросВЕРНН.ОрганизацияEDI.Организация1С;
				ДокументЗапросВЕРНН.Состояние = Перечисления.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.Создан;
				ДокументЗапросВЕРНН.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		        ДокументЗапросВЕРНН.Документы = Истина;
		        ДокументЗапросВЕРНН.ДокументыВыданые = Истина;
		        ДокументЗапросВЕРНН.ДокументыПолученые = Истина;
				ДокументЗапросВЕРНН.ДокументыНаДату = ВыборкаРезультатаЗапроса.Дата;
				ДокументЗапросВЕРНН.Дата = ТекущаяДата();
				ДокументЗапросВЕРНН.УстановитьНовыйНомер();
				
				РезультатСозданияИОтправкиЗапроса = Документы.скEDI_ЗапросНаПолучениеВедомостейЕРНН.ОбработатьЭлектронныйДокумент_Объект(ДокументЗапросВЕРНН, ВыполняемыеОперации, ТаблицаНастроекПодписей, ТаблицаНастроекПодписейШифрования);
				Если РезультатСозданияИОтправкиЗапроса <> Неопределено Тогда
					Сообщить("Запрос не отправлен." + Строка(РезультатСозданияИОтправкиЗапроса));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если Истина Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			скEDI_НалоговыеДокументыСверкаСЕРНН.ДобавитьВЗапросВременнуюТаблицуСписокДат(Запрос, СписокДатФормированиеЗапроса2);
			скEDI_НалоговыеДокументыСверкаСЕРНН.ДобавитьВЗапросВременнуюТаблицуВТЗапросы1(Запрос, СтруктураПараметров.Организация);
			скEDI_НалоговыеДокументыСверкаСЕРНН.ДобавитьВЗапросВременнуюТаблицуВТЗапросы1Последние(Запрос);
			скEDI_НалоговыеДокументыСверкаСЕРНН.ДобавитьВЗапросВременнуюТаблицуВТЗапросы1ИДокументы(Запрос, СтруктураПараметров.Организация);
			скEDI_НалоговыеДокументыСверкаСЕРНН.ДобавитьВЗапросВременнуюТаблицуВТЗапросы1ИДокументыСостояниеЗапроса2(Запрос, СтруктураПараметров.Организация);
			
			Запрос.Текст = "ВЫБРАТЬ
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.Дата,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос1,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.ВыданыйПолученый,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.ВидДокумента,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.ВхИсх,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.ТипДокумента,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.НомерДокумента,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.СпецРежимНалогообложения,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.Филиал,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.ДатаДокумента,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.ИННПродавца,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.ИННПродавцаА,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.СуммаНДС,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.ЭлектроныйДокумент,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЗапрос1,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЭлектронныйДокумент,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Состояние,
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Дата
			               |ИЗ
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2 КАК ВТЗапросы1ИДокументыСостояниеЗапроса2
			               |ГДЕ
			               |	ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЗапрос1
			               |	И НЕ ВТЗапросы1ИДокументыСостояниеЗапроса2.ЕстьЭлектронныйДокумент
			               |	И ВЫБОР
			               |			КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтветОтДФС)
			               |				ТОГДА ВЫБОР
			               |						КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Дата > &ДатаПоследнегоПолученияВх
			               |							ТОГДА ЛОЖЬ
			               |						КОГДА РАЗНОСТЬДАТ(ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Дата, &ТекущаяДата, ДЕНЬ) > 0
			               |							ТОГДА ИСТИНА
			               |						ИНАЧЕ ЛОЖЬ
			               |					КОНЕЦ
			               |			КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ОтправленВДФС)
			               |				ТОГДА ВЫБОР
			               |						КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Дата > &ДатаПоследнегоПолученияВх
			               |							ТОГДА ЛОЖЬ
			               |						КОГДА РАЗНОСТЬДАТ(ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Дата, &ТекущаяДата, ДЕНЬ) > 0
			               |							ТОГДА ИСТИНА
			               |						ИНАЧЕ ЛОЖЬ
			               |					КОНЕЦ
			               |			КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоКвитанциюОтДФС)
			               |				ТОГДА ВЫБОР
			               |						КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Дата > &ДатаПоследнегоПолученияВх
			               |							ТОГДА ЛОЖЬ
			               |						КОГДА РАЗНОСТЬДАТ(ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Дата, &ТекущаяДата, ДЕНЬ) > 0
			               |							ТОГДА ИСТИНА
			               |						ИНАЧЕ ЛОЖЬ
			               |					КОНЕЦ
			               |			КОГДА ВТЗапросы1ИДокументыСостояниеЗапроса2.Запрос2Состояние = ЗНАЧЕНИЕ(Перечисление.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.ПолученоОтклонениеОтДФС)
			               |				ТОГДА ИСТИНА
			               |			ИНАЧЕ ИСТИНА
			               |		КОНЕЦ";
			Запрос.УстановитьПараметр("ДатаПоследнегоПолученияВх", ДатаПоследнегоПолученияВх);
			Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата);
			РезультатЗапроса = Запрос.Выполнить();
			Если не РезультатЗапроса.Пустой() Тогда
				ВыборкаРезультатаЗапроса = РезультатЗапроса.Выбрать();
				
				СоздатьНовыйДокументЗапросВЕРНН = Истина;
				КоличествоСтрокВСписке = 0;
				Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
					Если СоздатьНовыйДокументЗапросВЕРНН Тогда
						ДокументЗапросВЕРНН = Документы.скEDI_ЗапросНаПолучениеВедомостейЕРНН.СоздатьДокумент();
						ДокументЗапросВЕРНН.ОрганизацияEDI = СтруктураПараметров.Организация;
						ДокументЗапросВЕРНН.Организация = ДокументЗапросВЕРНН.ОрганизацияEDI.Организация1С;
						ДокументЗапросВЕРНН.Состояние = Перечисления.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.Создан;
						ДокументЗапросВЕРНН.Ответственный = ПараметрыСеанса.ТекущийПользователь;
						//ДокументЗапросВЕРНН.Документы = Истина;
						//ДокументЗапросВЕРНН.ДокументыВыданые = Истина;
						//ДокументЗапросВЕРНН.ДокументыПолученые = Истина;
						//ДокументЗапросВЕРНН.ДокументыНаДату = СтрокаСпискаСверкаСЕРНН.Дата;
						ДокументЗапросВЕРНН.Дата = ТекущаяДата();
						ДокументЗапросВЕРНН.УстановитьНовыйНомер();
						ДокументЗапросВЕРНН.ПоСписку = Истина;
						ДокументЗапросВЕРНН.ИмпортДокументаСКвитанцией = Истина;
						
						СоздатьНовыйДокументЗапросВЕРНН = Ложь;
						КоличествоСтрокВСписке = 0;
					КонецЕсли;
					
					
					НоваяСтрокаСписок = ДокументЗапросВЕРНН.Список.Добавить();
					НоваяСтрокаСписок.НомерДокумента = ВыборкаРезультатаЗапроса.НомерДокумента;
					НоваяСтрокаСписок.СпецРежимНалогообложения = ВыборкаРезультатаЗапроса.СпецРежимНалогообложения;
					НоваяСтрокаСписок.Филиал = ВыборкаРезультатаЗапроса.Филиал;
					НоваяСтрокаСписок.ДатаДокумента = ВыборкаРезультатаЗапроса.ДатаДокумента;
					НоваяСтрокаСписок.ВидДокумента = ВыборкаРезультатаЗапроса.ВидДокумента;
					НоваяСтрокаСписок.ИННПродавца = ВыборкаРезультатаЗапроса.ИННПродавца;
					КоличествоСтрокВСписке = КоличествоСтрокВСписке + 1;
					
					Если КоличествоСтрокВСписке >= 999 Тогда
						РезультатСозданияИОтправкиЗапроса = Документы.скEDI_ЗапросНаПолучениеВедомостейЕРНН.ОбработатьЭлектронныйДокумент_Объект(ДокументЗапросВЕРНН, ВыполняемыеОперации, ТаблицаНастроекПодписей, ТаблицаНастроекПодписейШифрования);
						Если РезультатСозданияИОтправкиЗапроса <> Неопределено Тогда
							Сообщить("Запрос не отправлен." + Строка(РезультатСозданияИОтправкиЗапроса));
						КонецЕсли;
						СоздатьНовыйДокументЗапросВЕРНН = Истина;
						КоличествоСтрокВСписке = 0;
					КонецЕсли;
				КонецЦикла;
				Если КоличествоСтрокВСписке > 0 Тогда
					РезультатСозданияИОтправкиЗапроса = Документы.скEDI_ЗапросНаПолучениеВедомостейЕРНН.ОбработатьЭлектронныйДокумент_Объект(ДокументЗапросВЕРНН, ВыполняемыеОперации, ТаблицаНастроекПодписей, ТаблицаНастроекПодписейШифрования);
					Если РезультатСозданияИОтправкиЗапроса <> Неопределено Тогда
						Сообщить("Запрос не отправлен." + Строка(РезультатСозданияИОтправкиЗапроса));
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
