#Область ПрограммныйИнтерфейс
 
//
// Функция, возвращает менеджер объектов. 
//
Функция МенеджерОбъектов(СерияКлюча) Экспорт
	
	// Получение объекта компоненты
	Объект = ИНАГРО_СЛК.ОбъектКомпоненты();
	
	// Контроль версии компоненты
	НеобходимаяВерсия = "3.0.24";
	Если НЕ Объект.ПроверитьВерсию(НеобходимаяВерсия) Тогда
		ВызватьИсключение НСтр("ru='(EVersionMismatch) Устаревшая версия СЛК ';uk='(EVersionMismatch) Застаріла версія СЛК '") + НеобходимаяВерсия + НСтр("ru=' или выше';uk=' або вище'");
	КонецЕсли;
	
	// Установка параметров связи с сервером СЛК
	ДанныеПодсистем = ПараметрыСеанса.ИНАГРО_ДанныеПодсистем.Получить();
	
	МассивСерверов = ДанныеПодсистем.МассивСерверовСЛК;
	ИндексПриоритетныйСервер = ДанныеПодсистем.ПриоритетныйСерверСЛК;
	ОписаниеОшибки = "";
	Если МассивСерверов.Количество() = 0 Тогда 
		ПриоритетныйСервер = "";
	ИначеЕсли ИндексПриоритетныйСервер > МассивСерверов.Количество()-1 Тогда 
		ПриоритетныйСервер = МассивСерверов[0];
	Иначе 
		ПриоритетныйСервер = МассивСерверов[ИндексПриоритетныйСервер];
	КонецЕсли;
	Объект.ПараметрыСвязи = ПриоритетныйСервер;
	
	// Запуск: определение серии ключей защиты и установка соединения 
	// с сервером СЛК
	Если НЕ Объект.Запуск(СерияКлюча) Тогда
		ВызватьИсключение Объект.ПолучитьОписаниеОшибки();
	КонецЕсли;
	
	// Получаем имя менеджера объектов
	Имя = Объект.ПолучитьМенеджерОбъектов();
	Если Имя = Неопределено Тогда
		ВызватьИсключение Объект.ПолучитьОписаниеОшибки();
	КонецЕсли;
	
	// Отключаем предупреждения о загрузке обработок из непроверенных источников
	Защита = Неопределено;
	Если ТекущийРежимЗапуска() <> РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Тогда
		Попытка
			Защита = Новый ("ОписаниеЗащитыОтОпасныхДействий");
			Защита.ПредупреждатьОбОпасныхДействиях = Ложь;
		Исключение
			// Исключение возможно на предыдущих версиях платформы без механизма
			// защиты от опасных действий
		КонецПопытки;
	КонецЕсли;
	
	// Создание менеджера объектов
	Попытка
		
		Если Защита = Неопределено Тогда
			МенеджерОбъектов = ВнешниеОбработки.Создать(Имя, БезопасныйРежим());
		Иначе
			МенеджерОбъектов = ВнешниеОбработки.Создать(
				ВнешниеОбработки.Подключить(ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Имя)), , БезопасныйРежим(), Защита));
		КонецЕсли;
		// Настраиваем менеджер объектов, дополнительно передаем объект для отключения
		// предупреждений об опасных действиях
		МенеджерОбъектов.УстановитьОбъектКомпоненты(Объект, Защита);
		
	Исключение
		// Логгируем и получаем описание ошибки
		ВызватьИсключение Объект.ОшибкаСозданияОбъекта(ОписаниеОшибки());
	КонецПопытки;
	
	Если НЕ МенеджерОбъектов.МакетЗагружен("ДанныеСЛК" + СерияКлюча + ПрефиксКонфигурации() + ВерсияКонфигурации()) Тогда
		Макет = Перечисления.ИНАГРО_Подсистемы.ПолучитьМакет("Данные"+СерияКлюча);
		МенеджерОбъектов.ЗагрузитьИзМакета(Макет, "ДанныеСЛК" + СерияКлюча + ПрефиксКонфигурации() + ВерсияКонфигурации()); 
	КонецЕсли;
	
	Возврат МенеджерОбъектов;
КонецФункции

//
// Функция создания защищенного объекта
// 
Функция СоздатьОбъект(Имя) Экспорт
	
	СерияКлюча = ИНАГРО_СЛК.ПолучитьПодсистему(Имя);
	Если СерияКлюча = Неопределено Тогда 
		Возврат Неопределено;
	Иначе 
		Возврат ИНАГРО_СЛК.МенеджерОбъектов(СерияКлюча).СоздатьОбъект("ДанныеСЛК" + СерияКлюча + ПрефиксКонфигурации() + ВерсияКонфигурации() 
			+ "." + Имя);
	КонецЕсли;
	
КонецФункции

Функция ПрефиксКонфигурации() 
	ИмяКонфигурации = Метаданные.Имя;
	Если ИмяКонфигурации = "BASАгроБухгалтерия" Тогда 
		Возврат "_БСПУ";
	ИначеЕсли ИмяКонфигурации = "BASБухгалтерияЭлеватораМельницыИКомбикормовогоЗавода" Тогда 
		Возврат "_БЭМКЗУ";
	ИначеЕсли ИмяКонфигурации = "КомплексноеРешениеСельскохозяйственногоПредприятия" Тогда 
		Возврат "_КРСХП";
	Иначе 
		ВызватьИсключение НСтр("ru = 'СЛК: неизвестная конфигурация!'; uk = 'СЛК: невідома конфігурація!'");
	КонецЕсли;
КонецФункции

Функция ВерсияКонфигурации()
	ВерсияКонфигурации = Метаданные.Версия;
	ВерсияКонфигурации = "_" + СтрЗаменить(ВерсияКонфигурации, ".", "_");
	Возврат ВерсияКонфигурации;
КонецФункции

#КонецОбласти