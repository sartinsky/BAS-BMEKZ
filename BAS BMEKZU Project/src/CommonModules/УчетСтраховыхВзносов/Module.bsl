
Функция ЗаполнитьВзносы(ВременнаяСсылка, МенеджерВременныхТаблиц, Организация, МесяцНачисления, ПоВсемДокументам = Истина) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("МесяцНачисления",МесяцНачисления);
	Запрос.УстановитьПараметр("ВременнаяСсылка",ВременнаяСсылка);
	
	
	Запрос.Текст = 
	   "ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	НачисленияУдержанияПоСотрудникамОбороты.ФизическоеЛицо,
		|	НачисленияУдержанияПоСотрудникамОбороты.НачислениеУдержание.ВидЕСВ КАК ВидЕСВ,
		|	НачисленияУдержанияПоСотрудникамОбороты.НалоговыйПериодЕСВ КАК НалоговыйПериод
		|ПОМЕСТИТЬ ВТНачисленияОбороты
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам.Обороты(
		|			НАЧАЛОПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
		|			КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
		|			,
		|			Организация = &Организация
		|            И ФизическоеЛицо В (ВЫБРАТЬ ФизическиеЛица.ФизическоеЛицо ИЗ ВТФизическиеЛица КАК ФизическиеЛица)
		|			И НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления
		|			И НалоговыйПериодЕСВ <> ДАТАВРЕМЯ(1, 1, 1)) КАК НачисленияУдержанияПоСотрудникамОбороты
		|ГДЕ
		|	НачисленияУдержанияПоСотрудникамОбороты.НачислениеУдержание.ВидЕСВ <> ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.НеУчитывается)
		|";
	
	Если НЕ ПоВсемДокументам Тогда
		ПоляСуммирования = Новый Массив;
		Запрос.Текст = ЗарплатаКадры.ДобавитьОтборПоРегистраторуРегистрНакопленияОбороты(Запрос.Текст, "ВременнаяСсылка",ПоляСуммирования);
	КонецЕсли;	
	Запрос.Выполнить();
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачисленияОбороты.ФизическоеЛицо,
		|	НачисленияОбороты.ВидЕСВ,
		|	НачисленияОбороты.НалоговыйПериод
		|ПОМЕСТИТЬ ВТСтрокиРасчета
		|ИЗ ВТНачисленияОбороты КАК НачисленияОбороты
		|";
	Запрос.Выполнить();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйУчет") Тогда

		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСВДвижения.ФизическоеЛицо,
		|	ЕСВДвижения.Сотрудник,
		|	ЕСВДвижения.КатегорияЕСВ,
		|	ЕСВДвижения.Регистратор,
		|	ВЫБОР
		|		КОГДА ЕСВДвижения.Регистратор ССЫЛКА Документ.Увольнение
		|		ТОГДА КОНЕЦПЕРИОДА(ЕСВДвижения.Период, МЕСЯЦ)
		|		КОГДА ЕСВДвижения.Регистратор ССЫЛКА Документ.ПриемНаРаботу
		|		ТОГДА НАЧАЛОПЕРИОДА(ЕСВДвижения.Период, МЕСЯЦ)
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ЕСВДвижения.Период,ДЕНЬ,-1)
		|	КОНЕЦ КАК Период,
		|	ВЫБОР
		|		КОГДА ЕСВДвижения.Регистратор ССЫЛКА Документ.Увольнение
		|		ТОГДА КОНЕЦПЕРИОДА(ЕСВДвижения.Период, МЕСЯЦ)
		|		КОГДА ЕСВДвижения.Регистратор ССЫЛКА Документ.ПриемНаРаботу
		|		ТОГДА НАЧАЛОПЕРИОДА(ЕСВДвижения.Период, МЕСЯЦ)
		|		ИНАЧЕ ЕСВДвижения.Период
		|	КОНЕЦ КАК ПериодНачало
		|ПОМЕСТИТЬ ВТЕСВДвиженияВсе
		|ИЗ
		|	РегистрСведений.ЕСВСотрудников КАК ЕСВДвижения
		|    ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|    ВТФизическиеЛица КАК ФизическиеЛица
		|    ПО ЕСВДвижения.ФизическоеЛицо = ФизическиеЛица.ФизическоеЛицо
		|     И ЕСВДвижения.Сотрудник.ГоловнаяОрганизация = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтрокиРасчета.ФизическоеЛицо,
		|	СтрокиРасчета.НалоговыйПериод,
		|	ЕСВДвижения.Сотрудник,
		|	МАКСИМУМ(ЕСВДвижения.Период) КАК Период	
		|ПОМЕСТИТЬ ВТМаксимальныеПериоды
		|ИЗ
		|	ВТСтрокиРасчета КАК СтрокиРасчета
		|    ЛЕВОЕ СОЕДИНЕНИЕ
		|    ВТЕСВДвиженияВсе КАК ЕСВДвижения
		|    ПО СтрокиРасчета.ФизическоеЛицо = ЕСВДвижения.ФизическоеЛицо 
		|     И СтрокиРасчета.НалоговыйПериод >= ЕСВДвижения.Период
		|СГРУППИРОВАТЬ ПО
		|	СтрокиРасчета.ФизическоеЛицо,
		|	СтрокиРасчета.НалоговыйПериод,
		|	ЕСВДвижения.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимальныеПериоды.ФизическоеЛицо,
		|	МаксимальныеПериоды.Сотрудник,
		|	МаксимальныеПериоды.НалоговыйПериод,
		|	МаксимальныеПериоды.НалоговыйПериод КАК ДатаНачала,
		|	ЕСВДвижения.КатегорияЕСВ	
		|ПОМЕСТИТЬ ВТЕСВСрез
		|ИЗ
		|	ВТМаксимальныеПериоды КАК МаксимальныеПериоды
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЕСВДвиженияВсе КАК ЕСВДвижения
		|    ПО МаксимальныеПериоды.ФизическоеЛицо = ЕСВДвижения.ФизическоеЛицо 
		|     И МаксимальныеПериоды.Период = ЕСВДвижения.Период
		|     И МаксимальныеПериоды.Сотрудник = ЕСВДвижения.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСВДвижения.ФизическоеЛицо,
		|	ЕСВДвижения.Сотрудник,
		|	СтрокиРасчета.НалоговыйПериод,
		|	ЕСВДвижения.КатегорияЕСВ,
		|	ЕСВДвижения.Период,
		|	ЕСВДвижения.ПериодНачало
		|ПОМЕСТИТЬ ВТЕСВДвижения
		|ИЗ
		|	ВТЕСВДвиженияВсе КАК ЕСВДвижения
		|    ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|    ВТСтрокиРасчета КАК СтрокиРасчета
		|     ПО ЕСВДвижения.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
		|      И ЕСВДвижения.Период >= СтрокиРасчета.НалоговыйПериод
		|      И ЕСВДвижения.Период <= КОНЕЦПЕРИОДА(СтрокиРасчета.НалоговыйПериод, МЕСЯЦ)
		|      И НЕ (ЕСВДвижения.Регистратор ССЫЛКА Документ.ПриемНаРаботу)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСВСрез.ФизическоеЛицо,
		|	ЕСВСрез.Сотрудник,
		|	ЕСВСрез.НалоговыйПериод,
		|	ЕСВСрез.КатегорияЕСВ,
		|	ЕСВСрез.ДатаНачала КАК ДатаНачала	
		|ПОМЕСТИТЬ ВТЕСВНачало
		|ИЗ
		|	ВТЕСВСрез КАК ЕСВСрез
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСВДвижения.ФизическоеЛицо,
		|	ЕСВДвижения.Сотрудник,
		|	ЕСВДвижения.НалоговыйПериод,
		|	ЕСВДвижения.КатегорияЕСВ,
		|	ЕСВДвижения.ПериодНачало КАК ДатаНачала	
		|ИЗ
		|	ВТЕСВДвижения КАК ЕСВДвижения
		|ГДЕ
		|   ЕСВДвижения.КатегорияЕСВ <> ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.ПустаяСсылка)
		|   И ЕСВДвижения.КатегорияЕСВ <> ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.НеУчитывается)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСВНачало.ФизическоеЛицо,
		|	ЕСВНачало.Сотрудник,
		|	ЕСВНачало.КатегорияЕСВ,
		|	ЕСВНачало.ДатаНачала,
		|	ЕСВНачало.НалоговыйПериод,
		|	МИНИМУМ(ЕСВДвижения.Период) КАК ДатаОкончания	
		|ПОМЕСТИТЬ ВТМинимальныеПериоды
		|ИЗ
		|	ВТЕСВНачало КАК ЕСВНачало
		|    ЛЕВОЕ СОЕДИНЕНИЕ
		|    ВТЕСВДвижения КАК ЕСВДвижения
		|    ПО ЕСВНачало.ФизическоеЛицо = ЕСВДвижения.ФизическоеЛицо 
		|     И ЕСВНачало.Сотрудник = ЕСВДвижения.Сотрудник
		|     И ЕСВНачало.НалоговыйПериод = ЕСВДвижения.НалоговыйПериод
		|     И ЕСВНачало.КатегорияЕСВ <> ЕСВДвижения.КатегорияЕСВ
		|     И ЕСВНачало.ДатаНачала < ЕСВДвижения.Период
		|СГРУППИРОВАТЬ ПО
		|	ЕСВНачало.ФизическоеЛицо,
		|	ЕСВНачало.Сотрудник,
		|	ЕСВНачало.НалоговыйПериод,
		|	ЕСВНачало.КатегорияЕСВ,
		|	ЕСВНачало.ДатаНачала
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ 
		|	ЕСВНачало.ФизическоеЛицо,
		|	ЕСВНачало.Сотрудник,
		|	ЕСВНачало.НалоговыйПериод,
		|	ЕСВНачало.КатегорияЕСВ,
		|	ЕСВНачало.ДатаНачала,
		|	ЕСТЬNULL(МинимальныеПериоды.ДатаОкончания, КОНЕЦПЕРИОДА(ЕСВНачало.ДатаНачала, МЕСЯЦ)) КАК ДатаОкончания	
		|ПОМЕСТИТЬ ВТОсновныеКатегории
		|ИЗ
		|	ВТЕСВНачало КАК ЕСВНачало
		|   ЛЕВОЕ СОЕДИНЕНИЕ
		|    ВТМинимальныеПериоды КАК МинимальныеПериоды
		|    ПО ЕСВНачало.ФизическоеЛицо = МинимальныеПериоды.ФизическоеЛицо 
		|     И ЕСВНачало.НалоговыйПериод = МинимальныеПериоды.НалоговыйПериод
		|     И ЕСВНачало.Сотрудник = МинимальныеПериоды.Сотрудник
		|     И ЕСВНачало.КатегорияЕСВ = МинимальныеПериоды.КатегорияЕСВ
		|     И ЕСВНачало.ДатаНачала = МинимальныеПериоды.ДатаНачала
		|";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ  
		|	СтрокиРасчета.ФизическоеЛицо,
		|	СтрокиРасчета.НалоговыйПериод,
		|	ТекущаяТарифнаяСтавкаСотрудников.ТекущаяКатегорияЕСВ КАК КатегорияЕСВ,
		|	НАЧАЛОПЕРИОДА(СтрокиРасчета.НалоговыйПериод, МЕСЯЦ) КАК ДатаНачала,
		|	КОНЕЦПЕРИОДА(СтрокиРасчета.НалоговыйПериод, МЕСЯЦ) КАК ДатаОкончания	
		|ПОМЕСТИТЬ ВТОсновныеКатегории
		|ИЗ
		|	ВТСтрокиРасчета КАК СтрокиРасчета
		|   ЛЕВОЕ СОЕДИНЕНИЕ
		|    РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
		|    ПО СтрокиРасчета.ФизическоеЛицо = ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо 
		|     И ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация = &Организация
		|   ЛЕВОЕ СОЕДИНЕНИЕ
		|    РегистрСведений.ТекущаяТарифнаяСтавкаСотрудников КАК ТекущаяТарифнаяСтавкаСотрудников
		|    ПО ТекущиеКадровыеДанныеСотрудников.Сотрудник = ТекущаяТарифнаяСтавкаСотрудников.Сотрудник 
		|ГДЕ
		|   ТекущиеКадровыеДанныеСотрудников.ДатаПриема <= КОНЕЦПЕРИОДА(СтрокиРасчета.НалоговыйПериод, МЕСЯЦ)
		|   И (ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения >= СтрокиРасчета.НалоговыйПериод
		|      ИЛИ ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1,1,1))
		|   И ТекущаяТарифнаяСтавкаСотрудников.ТекущаяКатегорияЕСВ <> ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.ПустаяСсылка)
		|   И ТекущаяТарифнаяСтавкаСотрудников.ТекущаяКатегорияЕСВ <> ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.НеУчитывается)
		|   И НЕ (ТекущаяТарифнаяСтавкаСотрудников.ТекущаяКатегорияЕСВ ЕСТЬ NULL)
		|
		|";		
	КонецЕсли;
	Запрос.Выполнить();
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтрокиРасчета.ФизическоеЛицо.Наименование КАК Наименование,
		|	СтрокиРасчета.ФизическоеЛицо,
		|	СтрокиРасчета.ВидЕСВ,
		|	ВЫБОР 
		|		КОГДА СтрокиРасчета.ВидЕСВ = ОсновныеКатегории.КатегорияЕСВ.ВидЕСВ
		|	    ТОГДА ОсновныеКатегории.КатегорияЕСВ
		|		КОГДА СтрокиРасчета.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.НачисленияМобилизованным)
        |       ТОГДА
		|           ВЫБОР
		|       	 КОГДА ОсновныеКатегории.КатегорияЕСВ = ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникИнвалид)
		|        	 ТОГДА ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.МобилизованныйРаботникИнвалид)
		|       	 ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.МобилизованныйРаботник)
		|           КОНЕЦ
		|	    ИНАЧЕ ПараметрыКатегорийЕСВ.СвязаннаяКатегория
		|    КОНЕЦ КАК КатегорияЕСВ,
		|	ОсновныеКатегории.ДатаНачала,
		|	ОсновныеКатегории.ДатаОкончания	
		|ПОМЕСТИТЬ ВТВзносы
		|ИЗ
		|	ВТСтрокиРасчета КАК СтрокиРасчета
		|    ЛЕВОЕ СОЕДИНЕНИЕ
		|    ВТОсновныеКатегории КАК ОсновныеКатегории
		|    ПО СтрокиРасчета.ФизическоеЛицо = ОсновныеКатегории.ФизическоеЛицо
		|     И СтрокиРасчета.НалоговыйПериод = ОсновныеКатегории.НалоговыйПериод
		|    ЛЕВОЕ СОЕДИНЕНИЕ
		|    РегистрСведений.ПараметрыКатегорийЕСВ.СрезПоследних(&МесяцНачисления) КАК ПараметрыКатегорийЕСВ
		|    ПО ОсновныеКатегории.КатегорияЕСВ = ПараметрыКатегорийЕСВ.Категория
		|     И СтрокиРасчета.ВидЕСВ = ПараметрыКатегорийЕСВ.Вид
		|ГДЕ НЕ (ОсновныеКатегории.КатегорияЕСВ  ЕСТЬ NULL)
		|    И НЕ (ОсновныеКатегории.КатегорияЕСВ = ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.НеУчитывается))
		|    И НЕ ВЫБОР 
		|		КОГДА СтрокиРасчета.ВидЕСВ = ОсновныеКатегории.КатегорияЕСВ.ВидЕСВ
		|	    ТОГДА ОсновныеКатегории.КатегорияЕСВ
		|		КОГДА СтрокиРасчета.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.НачисленияМобилизованным)
        |       ТОГДА
		|           ВЫБОР
		|       	 КОГДА ОсновныеКатегории.КатегорияЕСВ = ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникИнвалид)
		|        	 ТОГДА ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.МобилизованныйРаботникИнвалид)
		|       	 ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.МобилизованныйРаботник)
		|           КОНЕЦ
		|	    ИНАЧЕ ПараметрыКатегорийЕСВ.СвязаннаяКатегория
		|   КОНЕЦ ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Взносы.Наименование,
		|	Взносы.ФизическоеЛицо,
		|	Взносы.ВидЕСВ,
		|	Взносы.КатегорияЕСВ,
		|	Взносы.ДатаНачала,
		|	Взносы.ДатаОкончания	
		|ИЗ
		|	ВТВзносы КАК Взносы
		|   ЛЕВОЕ СОЕДИНЕНИЕ
	    |   РегистрСведений.ПараметрыКатегорийЕСВ.СрезПоследних(&МесяцНачисления) КАК ПараметрыКатегорийЕСВ
	    |    ПО Взносы.ВидЕСВ = ПараметрыКатегорийЕСВ.Вид
	    |     И Взносы.КатегорияЕСВ = ПараметрыКатегорийЕСВ.Категория
		|ГДЕ
		|   ЕСТЬNULL(ПараметрыКатегорийЕСВ.ЕСВ, ЗНАЧЕНИЕ(Справочник.Налоги.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Налоги.ПустаяСсылка)
		|УПОРЯДОЧИТЬ ПО
		|	Взносы.Наименование,
		|	Взносы.ДатаНачала,
		|	Взносы.ВидЕСВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Взносы.Наименование,
		|	Взносы.ФизическоеЛицо,
		|	Взносы.ВидЕСВ,
		|	Взносы.КатегорияЕСВ,
		|	Взносы.ДатаНачала,
		|	Взносы.ДатаОкончания	
		|ИЗ
		|	ВТВзносы КАК Взносы
		|   ЛЕВОЕ СОЕДИНЕНИЕ
	    |   РегистрСведений.ПараметрыКатегорийЕСВ.СрезПоследних(&МесяцНачисления) КАК ПараметрыКатегорийЕСВ
	    |    ПО Взносы.ВидЕСВ = ПараметрыКатегорийЕСВ.Вид
	    |     И Взносы.КатегорияЕСВ = ПараметрыКатегорийЕСВ.Категория
		|ГДЕ
		|   ЕСТЬNULL(ПараметрыКатегорийЕСВ.ЕСВФОТ, ЗНАЧЕНИЕ(Справочник.Налоги.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Налоги.ПустаяСсылка)
		|УПОРЯДОЧИТЬ ПО
		|	Взносы.Наименование,
		|	Взносы.ДатаНачала,
		|	Взносы.ВидЕСВ";
	
	Взносы = Запрос.ВыполнитьПакет();   
	
	СтруктураВзносы = Новый Структура();
	СтруктураВзносы.Вставить("Взносы", Взносы[1].Выгрузить());
	СтруктураВзносы.Вставить("ВзносыФОТ", Взносы[2].Выгрузить());
	
	Возврат СтруктураВзносы;
	
КонецФункции

Процедура РассчитатьВзносы(ВременнаяСсылка, НаборыЗаписей, ДанныеЗаполнения, ДокументСсылка, Организация, МесяцНачисления, ПоВсемДокументам = Истина) Экспорт

	Если ДанныеЗаполнения.Взносы.Количество() = 0 И ДанныеЗаполнения.ВзносыФОТ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ВременнаяСсылка",ВременнаяСсылка);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("МесяцНачисления",МесяцНачисления);
	Запрос.УстановитьПараметр("МесяцПредыдущий",ДобавитьМесяц(МесяцНачисления,-1));
	Запрос.УстановитьПараметр("Взносы",ДанныеЗаполнения.Взносы);
	Запрос.УстановитьПараметр("ВзносыФОТ",ДанныеЗаполнения.ВзносыФОТ);
	
	Запрос.УстановитьПараметр("НеПрименяетсяМинимальнаяБаза", МесяцНачисления < ДатаИзмененияЕСВ1573());
	Запрос.УстановитьПараметр("НеПрименяетсяКоэффициентСтавки", МесяцНачисления < ДатаИзмененияЕСВ1573());
	
	Применяется1863 = (МесяцНачисления >= ДатаИзмененияЕСВ1863());
	
	Запрос.УстановитьПараметр("Применяется1863", Применяется1863);
	
	Запрос.УстановитьПараметр("МассивНалогиБезКоэффициента",СписокНалогиБезКоэффициента());
	Запрос.УстановитьПараметр("МассивНалогиБезМинимальнойБазы",СписокНалогиБезМинимальнойБазы());
	
	Запрос.УстановитьПараметр("ПоВсемДокументам",ПоВсемДокументам);
	Запрос.УстановитьПараметр("ПрименятьКоэффициентЕСВДляАвансов",ПрименятьКоэффициентЕСВДляАвансов(Организация));
	
	Применяется3688 = (МесяцНачисления >= ДатаИзмененияЕСВ3688());
	
	Запрос.УстановитьПараметр("Применяется3688", Применяется3688);
	
	Запрос.Текст = 
	   "ВЫБРАТЬ
	   |	Взносы.ФизическоеЛицо,
	   |	Взносы.ВидЕСВ,
	   |	НАЧАЛОПЕРИОДА(Взносы.ДатаНачала, МЕСЯЦ) КАК НалоговыйПериод,
	   |	Взносы.ДатаНачала,
	   |	Взносы.ДатаОкончания,
	   |	Взносы.КатегорияЕСВ
	   |ПОМЕСТИТЬ ВТСтрокиРасчетаВзносы
	   |ИЗ
	   |	&Взносы КАК Взносы
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	Взносы.ФизическоеЛицо,
	   |	Взносы.ВидЕСВ,
	   |	НАЧАЛОПЕРИОДА(Взносы.ДатаНачала, МЕСЯЦ) КАК НалоговыйПериод,
	   |	КОНЕЦПЕРИОДА(Взносы.ДатаНачала, МЕСЯЦ) КАК ПериодУчета,
	   |	Взносы.ДатаНачала,
	   |	Взносы.ДатаОкончания,
	   |	Взносы.КатегорияЕСВ
	   |ПОМЕСТИТЬ ВТСтрокиРасчетаВзносыФОТ
	   |ИЗ
	   |	&ВзносыФОТ КАК Взносы
	   |;
       |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	Взносы.ФизическоеЛицо,
	   |	Взносы.ВидЕСВ,
	   |	Взносы.НалоговыйПериод,
	   |	Взносы.ДатаНачала,
	   |	Взносы.ДатаОкончания,
	   |	Взносы.КатегорияЕСВ
	   |ПОМЕСТИТЬ ВТСтрокиРасчета
	   |ИЗ
	   |	ВТСтрокиРасчетаВзносы КАК Взносы
	   |
	   |ОБЪЕДИНИТЬ ВСЕ
	   |
	   |ВЫБРАТЬ
	   |	Взносы.ФизическоеЛицо,
	   |	Взносы.ВидЕСВ,
	   |	Взносы.НалоговыйПериод,
	   |	Взносы.ДатаНачала,
	   |	Взносы.ДатаОкончания,
	   |	Взносы.КатегорияЕСВ
	   |ИЗ
	   |	ВТСтрокиРасчетаВзносыФОТ КАК Взносы";
	Запрос.Выполнить();
	
	//Получим список работающих по основному месту работы
	КадровыйУчет.СоздатьВТОсновныеМестаРаботыФизическихЛиц(МенеджерВременныхТаблиц, Истина, Организация, "ВТОсновныеМестаРаботы", "ВТСтрокиРасчетаВзносыФОТ", "ПериодУчета");
	
	//Запросы к данным регистров - начислениям сотрудников и удержанному ЕСВ.
	//Если не по всем документам - нужен отбор по регистратору
	Запрос.Текст = 
	   "////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	НачисленияУдержанияПоСотрудникамОбороты.ФизическоеЛицо,
	   |	НачисленияУдержанияПоСотрудникамОбороты.НачислениеУдержание.ВидЕСВ КАК ВидЕСВ,
	   |	НачисленияУдержанияПоСотрудникамОбороты.НалоговыйПериодЕСВ КАК НалоговыйПериод,
	   |	СУММА(НачисленияУдержанияПоСотрудникамОбороты.СуммаОборот) КАК База,
	   |	СУММА(ВЫБОР 
	   |     КОГДА НачисленияУдержанияПоСотрудникамОбороты.НачислениеУдержание.КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(ПеречислениЕ.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска)
	   |         И НачисленияУдержанияПоСотрудникамОбороты.Период = &МесяцНачисления
	   |     ТОГДА НачисленияУдержанияПоСотрудникамОбороты.СуммаОборот
	   |     ИНАЧЕ 0
	   |    КОНЕЦ) КАК БазаОтпускные
	   |
	   |ПОМЕСТИТЬ ВТНачисленияОбороты
	   |ИЗ
	   |	РегистрНакопления.НачисленияУдержанияПоСотрудникам.Обороты(
	   |			,
	   |			КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
	   |			МЕСЯЦ,
	   |			Организация = &Организация
	   |				И (ФизическоеЛицо В
	   |					(ВЫБРАТЬ
	   |						СтрокиРасчета.ФизическоеЛицо
	   |					ИЗ
	   |						ВТСтрокиРасчета КАК СтрокиРасчета))
	   |				И НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления
	   |				И НалоговыйПериодЕСВ <> ДАТАВРЕМЯ(1, 1, 1)) КАК НачисленияУдержанияПоСотрудникамОбороты
	   |
	   |СГРУППИРОВАТЬ ПО
	   |	НачисленияУдержанияПоСотрудникамОбороты.ФизическоеЛицо,
	   |	НачисленияУдержанияПоСотрудникамОбороты.НачислениеУдержание.ВидЕСВ,
	   |	НачисленияУдержанияПоСотрудникамОбороты.НалоговыйПериодЕСВ	
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	ЕСВПоСотрудникамОборот.ФизическоеЛицо,
	   |	ЕСВПоСотрудникамОборот.ВидЕСВ КАК ВидЕСВ,
	   |	ЕСВПоСотрудникамОборот.НалоговыйПериод КАК НалоговыйПериод,
	   |	ЕСВПоСотрудникамОборот.СпособРасчета КАК СпособРасчета,
	   |	ЕСВПоСотрудникамОборот.БазаОборот КАК БазаДо,
	   |	ЕСВПоСотрудникамОборот.БазаВзносаОборот КАК БазаВзносаДо
	   |
	   |ПОМЕСТИТЬ ВТЕСВПоСотрудникамОборот
	   |ИЗ
	   |	РегистрНакопления.ЕСВПоСотрудникам.Обороты(
	   |			,
	   |			КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
	   |			,
	   |			Организация = &Организация
	   |				И (ФизическоеЛицо В
	   |					(ВЫБРАТЬ
	   |						СтрокиРасчета.ФизическоеЛицо
	   |					ИЗ
	   |						ВТСтрокиРасчета КАК СтрокиРасчета))) КАК ЕСВПоСотрудникамОборот
	   |";
	
	Если НЕ ПоВсемДокументам Тогда
		ПоляСуммирования = Новый Массив;
		ПоляСуммирования.Добавить("База");
		ПоляСуммирования.Добавить("БазаОтпускные");
		ПоляСуммирования.Добавить("БазаДо");
		ПоляСуммирования.Добавить("БазаВзносаДо");
		Запрос.Текст = ЗарплатаКадры.ДобавитьОтборПоРегистраторуРегистрНакопленияОбороты(Запрос.Текст, "ВременнаяСсылка",ПоляСуммирования);
	КонецЕсли;
	
	Запрос.Выполнить();   
	
	//Базы
	Запрос.Текст = 
	   "////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	   |	НачисленияОбороты.ФизическоеЛицо,
	   |	НачисленияОбороты.ВидЕСВ,
	   |	НачисленияОбороты.НалоговыйПериод,
	   |	НачисленияОбороты.База КАК База,
	   |	НачисленияОбороты.БазаОтпускные КАК БазаОтпускные
	   |ПОМЕСТИТЬ ВТБазаСФильтром
	   |ИЗ
	   |	ВТНачисленияОбороты КАК НачисленияОбороты
	   |    ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	   |    ВТСтрокиРасчета КАК СтрокиРасчета
	   |    ПО СтрокиРасчета.ФизическоеЛицо = НачисленияОбороты.ФизическоеЛицо
	   |     И СтрокиРасчета.ВидЕСВ = НачисленияОбороты.ВидЕСВ
	   |     И СтрокиРасчета.НалоговыйПериод = НачисленияОбороты.НалоговыйПериод
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	БазаСФильтром.ФизическоеЛицо,
	   |	БазаСФильтром.ВидЕСВ,
	   |	БазаСФильтром.НалоговыйПериод,
	   |	СУММА(БазаСФильтром.База) КАК База,
	   |	СУММА(БазаСФильтром.БазаОтпускные) КАК БазаОтпускные
	   |ПОМЕСТИТЬ ВТБаза
	   |ИЗ
	   |	ВТБазаСФильтром КАК БазаСФильтром
	   |СГРУППИРОВАТЬ ПО
	   |	БазаСФильтром.ФизическоеЛицо,
	   |	БазаСФильтром.ВидЕСВ,
	   |	БазаСФильтром.НалоговыйПериод
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ТаблицаБаза.ФизическоеЛицо,
	   |	ТаблицаБаза.ВидЕСВ,
	   |	ТаблицаБаза.НалоговыйПериод,
	   |	СУММА(ТаблицаБазаВычет.База) КАК БазаВычет
	   |ПОМЕСТИТЬ ВТБазаВычет
	   |ИЗ
	   |	ВТБаза КАК ТаблицаБаза
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТНачисленияОбороты КАК ТаблицаБазаВычет
	   |    ПО ТаблицаБаза.ФизическоеЛицо = ТаблицаБазаВычет.ФизическоеЛицо
	   |     И ТаблицаБаза.НалоговыйПериод = ТаблицаБазаВычет.НалоговыйПериод
	   |     И ТаблицаБаза.ВидЕСВ.Порядок > ТаблицаБазаВычет.ВидЕСВ.Порядок
	   |СГРУППИРОВАТЬ ПО
	   |	ТаблицаБаза.ФизическоеЛицо,
	   |	ТаблицаБаза.ВидЕСВ,
	   |	ТаблицаБаза.НалоговыйПериод
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ТаблицаБаза.ФизическоеЛицо,
	   |	ТаблицаБаза.НалоговыйПериод,
	   |	СУММА(ТаблицаБаза.База) КАК БазаПолная
	   |ПОМЕСТИТЬ ВТБазаПолная
	   |ИЗ
	   |	ВТБаза КАК ТаблицаБаза
	   |ГДЕ
	   |	(&Применяется1863
	   |	ИЛИ ТаблицаБаза.ВидЕСВ <> ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ПоДоговорамГПХ))
	   |СГРУППИРОВАТЬ ПО
	   |	ТаблицаБаза.ФизическоеЛицо,
	   |	ТаблицаБаза.НалоговыйПериод
	   |;
	   |";
	Запрос.Выполнить();
	
	//Пределы страховых взносов
	ОтборыОТ = Новый Структура();
	ВыбираемыеПоляОТ = Новый Структура();
	ОтборыРС = Новый Структура();
	ВыбираемыеПоляРС = Новый Структура();
	ВыбираемыеПоляРС.Вставить("Предел","Предел");
	ВыбираемыеПоляРС.Вставить("ПределДия","ПределДия");	
	ВыбираемыеПоляРС.Вставить("МинимальнаяБаза","МинимальнаяБаза");
	ПоляСвязей = Новый Структура();
	ПоляСвязей.Вставить("ВидЕСВ","ВидЕСВ");
	
	Запрос.Текст = ЗарплатаКадры.ЗапросВТСрезПоследнихНаВсеДаты("ВТПределыСтраховыхВзносовСрез", "ВТСтрокиРасчетаВзносыФОТ", ОтборыОТ, ВыбираемыеПоляОТ, "НалоговыйПериод", "РегистрСведений.ПределыСтраховыхВзносов", ОтборыРС, ВыбираемыеПоляРС,"Период", ПоляСвязей, ЛОЖЬ, ЛОЖЬ, ЛОЖЬ);
	Запрос.Выполнить();
	
	//Принятые и уволенные
	Запрос.Текст = 
	   "////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	   |	СтрокиРасчета.ФизическоеЛицо,
	   |	СтрокиРасчета.НалоговыйПериод
	   |ПОМЕСТИТЬ ВТТекущиеКадровыеДанныеСотрудников
	   |ИЗ
	   |	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	   |    ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	   |    ВТСтрокиРасчетаВзносыФОТ КАК СтрокиРасчета
	   |    ПО СтрокиРасчета.ФизическоеЛицо = ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо
	   |     И ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация = &Организация
	   |ГДЕ
	   |   НЕ ТекущиеКадровыеДанныеСотрудников.ДатаПриема > СтрокиРасчета.НалоговыйПериод
	   |    И НЕ ТекущиеКадровыеДанныеСотрудников.ДатаПриема = ДАТАВРЕМЯ(1,1,1)
	   |    И НЕ (КОНЕЦПЕРИОДА(ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения, ДЕНЬ) < КОНЕЦПЕРИОДА(СтрокиРасчета.НалоговыйПериод, МЕСЯЦ)
	   |       И ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения <> ДАТАВРЕМЯ(1,1,1))
	   |    
	   |";
	Запрос.Выполнить();   
	
	
	Запрос.Текст =
	   "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	СтрокиРасчета.ФизическоеЛицо,
	   |	СтрокиРасчета.ВидЕСВ,
	   |	СтрокиРасчета.НалоговыйПериод,
	   |	СтрокиРасчета.ДатаНачала,
	   |	СтрокиРасчета.ДатаОкончания,
	   |	СтрокиРасчета.КатегорияЕСВ,
	   |	ЕСТЬNULL(ТаблицаБаза.База, 0) КАК База,
	   |	0 КАК БазаВзноса,
	   |	ЕСТЬNULL(ТаблицаБаза.БазаОтпускные, 0) КАК БазаОтпускные,
	   |	ЕСТЬNULL(ТаблицаЕСВПоСотрудникамДо.БазаДо, 0) КАК БазаДо,
	   |	ЕСТЬNULL(ТаблицаЕСВПоСотрудникамДо.БазаВзносаДо, 0) КАК БазаВзносаДо,
	   |	0 КАК Результат,
	   |	0 КАК РезультатПолная,
	   |	ЕСТЬNULL(ТаблицаБазаВычет.БазаВычет, 0) КАК БазаВычет,
	   |	ПараметрыКатегорийЕСВ.ЕСВ КАК Налог,
	   |	ЕСТЬNULL(ШкалаСтавокНалоговПоОрганизации.СтатьяНалоговойДекларации,ШкалаСтавокНалогов.СтатьяНалоговойДекларации) КАК СтатьяНалоговойДекларации,
	   |	ЕСТЬNULL(ШкалаСтавокНалоговПоОрганизации.Ставка, ЕСТЬNULL(ШкалаСтавокНалогов.Ставка, 0)) КАК Ставка,
	   |	ЕСТЬNULL(ШкалаСтавокНалоговПоОрганизации.СтавкаПолная, ЕСТЬNULL(ШкалаСтавокНалогов.СтавкаПолная, 0)) КАК СтавкаПолная,
	   |    ВЫБОР
	   |		КОГДА ЕСТЬNULL(СпециальныеРежимыЗарплатаКадры.РезидентДияСити, ЛОЖЬ) И ЕСТЬNULL(ПределыСтраховыхВзносов.ПределДия,0)>0 
	   |			ТОГДА ЕСТЬNULL(ПределыСтраховыхВзносов.ПределДия,0)
	   |			ИНАЧЕ ЕСТЬNULL(ПределыСтраховыхВзносов.Предел,0)
	   |	КОНЕЦ КАК Предел
	   |ИЗ
	   |	ВТСтрокиРасчетаВзносы КАК СтрокиРасчета
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТБаза КАК ТаблицаБаза
	   |    ПО ТаблицаБаза.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |     И ТаблицаБаза.ВидЕСВ = СтрокиРасчета.ВидЕСВ
	   |     И ТаблицаБаза.НалоговыйПериод = СтрокиРасчета.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТЕСВПоСотрудникамОборот КАК ТаблицаЕСВПоСотрудникамДо
	   |    ПО ТаблицаЕСВПоСотрудникамДо.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |     И ТаблицаЕСВПоСотрудникамДо.ВидЕСВ = СтрокиРасчета.ВидЕСВ
	   |     И ТаблицаЕСВПоСотрудникамДо.НалоговыйПериод = СтрокиРасчета.НалоговыйПериод
	   |     И ТаблицаЕСВПоСотрудникамДо.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВзносов.Взносы)
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.ПараметрыКатегорийЕСВ.СрезПоследних(&МесяцНачисления) КАК ПараметрыКатегорийЕСВ
	   |    ПО СтрокиРасчета.ВидЕСВ = ПараметрыКатегорийЕСВ.Вид
	   |     И СтрокиРасчета.КатегорияЕСВ = ПараметрыКатегорийЕСВ.Категория
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТБазаВычет КАК ТаблицаБазаВычет
	   |    ПО ТаблицаБаза.ФизическоеЛицо = ТаблицаБазаВычет.ФизическоеЛицо
	   |     И ТаблицаБаза.НалоговыйПериод = ТаблицаБазаВычет.НалоговыйПериод
	   |     И ТаблицаБаза.ВидЕСВ = ТаблицаБазаВычет.ВидЕСВ
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.ШкалаСтавокНалогов.СрезПоследних(КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),Организация = &Организация И НомерПорога = ЗНАЧЕНИЕ(Перечисление.ПорогиШкалыСтавокНалогов.Порог1)) КАК ШкалаСтавокНалоговПоОрганизации
	   |    ПО ШкалаСтавокНалоговПоОрганизации.Налог = ПараметрыКатегорийЕСВ.ЕСВ
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.ШкалаСтавокНалогов.СрезПоследних(КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) И НомерПорога = ЗНАЧЕНИЕ(Перечисление.ПорогиШкалыСтавокНалогов.Порог1)) КАК ШкалаСтавокНалогов
	   |    ПО ШкалаСтавокНалогов.Налог = ПараметрыКатегорийЕСВ.ЕСВ
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТПределыСтраховыхВзносовСрез КАК ПределыСтраховыхВзносов
	   |    ПО СтрокиРасчета.ВидЕСВ = ПределыСтраховыхВзносов.ВидЕСВ 
	   |     И СтрокиРасчета.НалоговыйПериод = ПределыСтраховыхВзносов.НалоговыйПериод
   	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.СпециальныеРежимыЗарплатаКадры.СрезПоследних(КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ)) КАК СпециальныеРежимыЗарплатаКадры
	   |    ПО СпециальныеРежимыЗарплатаКадры.Организация = &Организация
	   |ГДЕ НЕ (ПараметрыКатегорийЕСВ.ЕСВ ЕСТЬ NULL)
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	СтрокиРасчета.ФизическоеЛицо,
	   |	СтрокиРасчета.ВидЕСВ,
	   |	СтрокиРасчета.НалоговыйПериод,
	   |	СтрокиРасчета.ДатаНачала,
	   |	СтрокиРасчета.ДатаОкончания,
	   |	СтрокиРасчета.КатегорияЕСВ,
	   |	ЕСТЬNULL(ТаблицаБаза.База, 0) КАК База,
	   |	0 КАК БазаВзноса,
	   |	ЕСТЬNULL(ТаблицаБаза.БазаОтпускные, 0) КАК БазаОтпускные,
	   |	0 КАК БазаДоначисление,
	   |	ЕСТЬNULL(ТаблицаЕСВПоСотрудникамДо.БазаДо, 0) КАК БазаДо,
	   |	ЕСТЬNULL(ТаблицаЕСВПоСотрудникамДо.БазаВзносаДо, 0) КАК БазаВзносаДо,
	   |	0 КАК Результат,
	   |	0 КАК РезультатДоначисление,
	   |	0 КАК РезультатПолная,
	   |	ЕСТЬNULL(ТаблицаБазаВычет.БазаВычет, 0) КАК БазаВычет,
	   |	ЕСТЬNULL(ТаблицаБазаПолная.БазаПолная, 0) КАК БазаПолная,
	   |	ПараметрыКатегорийЕСВ.ЕСВФОТ КАК Налог,
	   |	ЕСТЬNULL(ШкалаСтавокНалоговПоОрганизации.СтатьяНалоговойДекларации,ШкалаСтавокНалогов.СтатьяНалоговойДекларации) КАК СтатьяНалоговойДекларации,
	   |	ЕСТЬNULL(ШкалаСтавокНалоговПоОрганизации.Ставка, ЕСТЬNULL(ШкалаСтавокНалогов.Ставка, 0)) КАК Ставка,
	   |	ЕСТЬNULL(ШкалаСтавокНалоговПоОрганизации.СтавкаПолная, ЕСТЬNULL(ШкалаСтавокНалогов.СтавкаПолная, 0)) КАК СтавкаПолная,
	   |    ВЫБОР
	   |		КОГДА ЕСТЬNULL(СпециальныеРежимыЗарплатаКадры.РезидентДияСити, ЛОЖЬ) И ЕСТЬNULL(ПределыСтраховыхВзносов.ПределДия,0)>0 
	   |			ТОГДА ЕСТЬNULL(ПределыСтраховыхВзносов.ПределДия,0)
	   |			ИНАЧЕ ЕСТЬNULL(ПределыСтраховыхВзносов.Предел,0)
	   |	КОНЕЦ КАК Предел,
	   |	ВЫБОР
	   |		КОГДА &НеПрименяетсяМинимальнаяБаза
	   |		 ТОГДА 0
	   |		КОГДА НЕ &ПоВсемДокументам
	   |		 ТОГДА 0
	   |		КОГДА ПараметрыКатегорийЕСВ.ЕСВФОТ  В (&МассивНалогиБезМинимальнойБазы)
	   |		 ТОГДА 0
	   |		КОГДА НЕ ТаблицаОсновныеМестаРаботы.ОсновноеМестоРаботы
	   |		 ТОГДА 0
	   |		КОГДА ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо ЕСТЬ NULL
	   |		 ТОГДА 0
       |	 	КОГДА НАЧАЛОПЕРИОДА(СтрокиРасчета.НалоговыйПериод, МЕСЯЦ) > &МесяцНачисления
	   |	  	 ТОГДА 0
	   |		ИНАЧЕ ЕСТЬNULL(ПределыСтраховыхВзносов.МинимальнаяБаза,0) 
	   |	КОНЕЦ КАК МинимальнаяБаза,
	   |	ВЫБОР
	   |		КОГДА &НеПрименяетсяКоэффициентСтавки
	   |		 ТОГДА 0
	   |		КОГДА НЕ &ПоВсемДокументам И НЕ &ПрименятьКоэффициентЕСВДляАвансов
	   |		 ТОГДА 0
	   |		КОГДА ПараметрыКатегорийЕСВ.ЕСВФОТ  В (&МассивНалогиБезКоэффициента)
	   |		 ТОГДА 0
	   |		КОГДА &Применяется1863
	   |		 ТОГДА ЕСТЬNULL(КоэффициентыСтавкиВзносовФОТ.КоэффициентСтавки,1)
	   |		КОГДА НЕ ТаблицаОсновныеМестаРаботы.ОсновноеМестоРаботы
	   |		 ТОГДА 0
	   |		КОГДА СтрокиРасчета.ВидЕСВ <> ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ОсновнаяЗарплата)И СтрокиРасчета.ВидЕСВ <> ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ПоДоговорамГПХ)
	   |		 ТОГДА 0
	   |		ИНАЧЕ ЕСТЬNULL(КоэффициентыСтавкиВзносовФОТ.КоэффициентСтавки,1) 
	   |	КОНЕЦ КАК КоэффициентСтавки
	   |ИЗ
	   |	ВТСтрокиРасчетаВзносыФОТ КАК СтрокиРасчета
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТОсновныеМестаРаботы КАК ТаблицаОсновныеМестаРаботы
	   |    ПО ТаблицаОсновныеМестаРаботы.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |     И ТаблицаОсновныеМестаРаботы.ПериодУчета = СтрокиРасчета.ПериодУчета
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	   |    ПО ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |     И ТекущиеКадровыеДанныеСотрудников.НалоговыйПериод = СтрокиРасчета.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТБаза КАК ТаблицаБаза
	   |    ПО ТаблицаБаза.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |     И ТаблицаБаза.ВидЕСВ = СтрокиРасчета.ВидЕСВ
	   |     И ТаблицаБаза.НалоговыйПериод = СтрокиРасчета.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТЕСВПоСотрудникамОборот КАК ТаблицаЕСВПоСотрудникамДо
	   |    ПО ТаблицаЕСВПоСотрудникамДо.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |     И ТаблицаЕСВПоСотрудникамДо.ВидЕСВ = СтрокиРасчета.ВидЕСВ
	   |     И ТаблицаЕСВПоСотрудникамДо.НалоговыйПериод = СтрокиРасчета.НалоговыйПериод
	   |     И ТаблицаЕСВПоСотрудникамДо.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВзносов.ВзносыФОТ)
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.ПараметрыКатегорийЕСВ.СрезПоследних(&МесяцНачисления) КАК ПараметрыКатегорийЕСВ
	   |    ПО СтрокиРасчета.ВидЕСВ = ПараметрыКатегорийЕСВ.Вид
	   |     И СтрокиРасчета.КатегорияЕСВ = ПараметрыКатегорийЕСВ.Категория
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТБазаВычет КАК ТаблицаБазаВычет
	   |    ПО ТаблицаБаза.ФизическоеЛицо = ТаблицаБазаВычет.ФизическоеЛицо
	   |     И ТаблицаБаза.НалоговыйПериод = ТаблицаБазаВычет.НалоговыйПериод
	   |     И ТаблицаБаза.ВидЕСВ = ТаблицаБазаВычет.ВидЕСВ
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТБазаПолная КАК ТаблицаБазаПолная
	   |    ПО ТаблицаБаза.ФизическоеЛицо = ТаблицаБазаПолная.ФизическоеЛицо
	   |     И ТаблицаБаза.НалоговыйПериод = ТаблицаБазаПолная.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.ШкалаСтавокНалогов.СрезПоследних(КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),Организация = &Организация И НомерПорога = ЗНАЧЕНИЕ(Перечисление.ПорогиШкалыСтавокНалогов.Порог1)) КАК ШкалаСтавокНалоговПоОрганизации
	   |    ПО ШкалаСтавокНалоговПоОрганизации.Налог = ПараметрыКатегорийЕСВ.ЕСВФОТ
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.ШкалаСтавокНалогов.СрезПоследних(КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) И НомерПорога = ЗНАЧЕНИЕ(Перечисление.ПорогиШкалыСтавокНалогов.Порог1)) КАК ШкалаСтавокНалогов
	   |    ПО ШкалаСтавокНалогов.Налог = ПараметрыКатегорийЕСВ.ЕСВФОТ
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТПределыСтраховыхВзносовСрез КАК ПределыСтраховыхВзносов
	   |    ПО СтрокиРасчета.ВидЕСВ = ПределыСтраховыхВзносов.ВидЕСВ 
	   |     И СтрокиРасчета.НалоговыйПериод = ПределыСтраховыхВзносов.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.КоэффициентыСтавкиВзносовФОТ КАК КоэффициентыСтавкиВзносовФОТ
	   |    ПО КоэффициентыСтавкиВзносовФОТ.Организация = &Организация
	   |     И КоэффициентыСтавкиВзносовФОТ.МесяцНачисления = &МесяцНачисления
	   |     И (СтрокиРасчета.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ОсновнаяЗарплата)
	   |        ИЛИ СтрокиРасчета.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ПоДоговорамГПХ)
	   |        ИЛИ СтрокиРасчета.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.Больничные)
	   |        ИЛИ СтрокиРасчета.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.Декретные))
   	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.СпециальныеРежимыЗарплатаКадры.СрезПоследних(КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ)) КАК СпециальныеРежимыЗарплатаКадры
	   |    ПО СпециальныеРежимыЗарплатаКадры.Организация = &Организация	   
	   |ГДЕ НЕ (ПараметрыКатегорийЕСВ.ЕСВФОТ ЕСТЬ NULL)
	   |";
	   
	РезультатПакета = Запрос.ВыполнитьПакет();   
	   
	Взносы = РезультатПакета[0].Выгрузить();
	ВзносыФОТ = РезультатПакета[1].Выгрузить();
	
	Для Каждого СтрокаВзносов из Взносы Цикл
		
		Коэф = 1; //*
		
		Предел = СтрокаВзносов.Предел;
		Ставка = СтрокаВзносов.Ставка;
	
		БазаДо = СтрокаВзносов.БазаДо;
		БазаВзносаДо = СтрокаВзносов.БазаВзносаДо;

		База = СтрокаВзносов.База;
		БазаВычет = СтрокаВзносов.БазаВычет;
		
		БазаВзноса = Мин(Макс(Предел-БазаВычет,0), База);
		
		База = (База - БазаДо) * Коэф;
		БазаВзноса = (БазаВзноса - БазаВзносаДо) * Коэф;
	
		Результат  = БазаВзноса * Ставка;
		Результат = Окр(Результат,2);
		
		СтрокаВзносов.База = База;
		СтрокаВзносов.БазаВзноса = БазаВзноса;
		СтрокаВзносов.Результат = Результат;
		
	КонецЦикла;
	
	Для Каждого СтрокаВзносовФОТ из ВзносыФОТ Цикл
		
		Коэф = 1; //*
		
		Предел = СтрокаВзносовФОТ.Предел;
		Ставка = СтрокаВзносовФОТ.Ставка;
	    СтавкаПолная = СтрокаВзносовФОТ.СтавкаПолная;
		МинимальнаяБаза = СтрокаВзносовФОТ.МинимальнаяБаза;
		КоэффициентСтавки = СтрокаВзносовФОТ.КоэффициентСтавки;
		
		БазаДо = СтрокаВзносовФОТ.БазаДо;
		БазаВзносаДо = СтрокаВзносовФОТ.БазаВзносаДо;
		
		База = СтрокаВзносовФОТ.База;
		БазаВычет = СтрокаВзносовФОТ.БазаВычет;
		БазаПолная = СтрокаВзносовФОТ.БазаПолная;
		
		БазаВзноса = Мин(Макс(Предел-БазаВычет,0), База);
		
		БазаДоначисление = 0;
		РезультатДоначисление = 0;
		РезультатПолная = 0;
		
		Если МинимальнаяБаза <> 0 И База <> 0 И БазаВычет = 0 Тогда
			БазаДоначисление = Макс(МинимальнаяБаза - БазаПолная,0);
			БазаВзноса = БазаВзноса + БазаДоначисление;
		ИначеЕсли МинимальнаяБаза <> 0 И БазаДо <> 0 И БазаВзносаДо <> 0 И БазаВычет = 0 Тогда
			ДоначисленоРанее = Макс(БазаВзносаДо - БазаДо,0);
			БазаДоначисление = Макс(МинимальнаяБаза - БазаПолная,0) - ДоначисленоРанее;
			БазаВзноса = БазаДоначисление;
		КонецЕсли;
		
		База = (База - БазаДо) * Коэф;
		БазаВзноса = (БазаВзноса - БазаВзносаДо) * Коэф;
	
		Результат  = БазаВзноса * Ставка*?(КоэффициентСтавки = 0, 1, КоэффициентСтавки);
		РезультатДоначисление  = Окр(БазаДоначисление * Ставка * ?(КоэффициентСтавки = 0, 1, КоэффициентСтавки),2);
		
		Результат = Окр((БазаВзноса - БазаДоначисление) * Окр(Ставка * ?(КоэффициентСтавки = 0, 1, КоэффициентСтавки),5),2);
		РезультатДоначисление  = Окр(БазаДоначисление * Ставка,2);
		Результат = Результат + РезультатДоначисление;
		Если (СтавкаПолная > 0) И (СтавкаПолная <> Ставка) Тогда
			РезультатПолная = Окр(БазаВзноса * СтавкаПолная, 2);
		КонецЕсли;	
		
		СтрокаВзносовФОТ.База = База;
		СтрокаВзносовФОТ.БазаВзноса = БазаВзноса;
		СтрокаВзносовФОТ.Результат = Результат;
		
		СтрокаВзносовФОТ.БазаДоначисление = БазаДоначисление;
		СтрокаВзносовФОТ.РезультатДоначисление = РезультатДоначисление;
		СтрокаВзносовФОТ.РезультатПолная = РезультатПолная;
		
	КонецЦикла;
	
	СформироватьДвиженияВзносы(НаборыЗаписей, Ложь, Организация, МесяцНачисления, Перечисления.СпособыРасчетаВзносов.Взносы, Взносы, Ложь);
	СформироватьДвиженияВзносы(НаборыЗаписей, Ложь, Организация, МесяцНачисления, Перечисления.СпособыРасчетаВзносов.ВзносыФОТ, ВзносыФОТ, Истина);
	
	ДанныеЗаполнения.Взносы.Очистить();
	ДанныеЗаполнения.Взносы = Взносы.Скопировать();
	ДанныеЗаполнения.ВзносыФОТ.Очистить();
	ДанныеЗаполнения.ВзносыФОТ = ВзносыФОТ.Скопировать();
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////////
// Формирование движений

Процедура СформироватьДвиженияВзносы(Движения, Отказ, Организация, ПериодРегистрации, СпособРасчета, Взносы, ЗаписыватьДвижения = Ложь) Экспорт
	
	Если Взносы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого Строка Из Взносы Цикл
		НоваяСтрока = Движения.ЕСВПоСотрудникам.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		
		НоваяСтрока.Период = ПериодРегистрации;
		НоваяСтрока.Организация = Организация;
		НоваяСтрока.СпособРасчета = СпособРасчета;
		
		НоваяСтрока.Сумма = Строка.Результат;
		
		Если Строка.Результат = 0 Тогда
			Продолжить;
		КонецЕсли;	
		НоваяСтрокаВзаиморасчеты = Движения.ВзаиморасчетыПоВзносамВФонды.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаВзаиморасчеты, Строка);
		
		НоваяСтрокаВзаиморасчеты.Период = ПериодРегистрации;
		НоваяСтрокаВзаиморасчеты.ПериодВзаиморасчетов = ПериодРегистрации;
		НоваяСтрокаВзаиморасчеты.Организация = Организация;
		
		НоваяСтрокаВзаиморасчеты.ВидДвижения = ВидДвиженияНакопления.Приход;
		
		НоваяСтрокаВзаиморасчеты.Сумма = Строка.Результат;
		
	КонецЦикла;
	
	Движения.ЕСВПоСотрудникам.Записывать = Истина;
	Движения.ВзаиморасчетыПоВзносамВФонды.Записывать = Истина;
	
	
	Если ЗаписыватьДвижения Тогда
		Движения.ЕСВПоСотрудникам.Записать();
		Движения.ЕСВПоСотрудникам.Записывать = Ложь;
		Движения.ВзаиморасчетыПоВзносамВФонды.Записать();
		Движения.ВзаиморасчетыПоВзносамВФонды.Записывать = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьВзаиморасчетыПоВзносам(Движения, Отказ, Организация, ПериодРегистрации, СпособВыплаты, Выплата) Экспорт
	
	Для Каждого СтрокаВыплаты Из Выплата.Взносы Цикл
		
		Если СтрокаВыплаты.Сумма <> 0 Тогда
			
			НоваяСтрокаВзаиморасчеты = Движения.ВзаиморасчетыПоВзносамВФонды.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаВзаиморасчеты, СтрокаВыплаты);
			
			НоваяСтрокаВзаиморасчеты.Период = Выплата.Регистратор.Дата;
			НоваяСтрокаВзаиморасчеты.Организация = Организация;
			
			НоваяСтрокаВзаиморасчеты.ВидДвижения = ВидДвиженияНакопления.Расход;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Движения.ВзаиморасчетыПоВзносамВФонды.Записывать = Истина;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////////
// Заполнение ведомостей

Процедура ЗапросВзносыОчереднаяВзносы(Запрос, СпособВыплаты, ПараметрыЗаполнения) Экспорт
	
	Если СпособВыплаты = Справочники.ВидыВыплат.ОчереднаяПогашениеДолговВзносы Тогда
		ФильтрПериод = "ПериодВзаиморасчетов <= &ПериодВзаиморасчетов";
	Иначе
		ФильтрПериод = "ПериодВзаиморасчетов = &ПериодВзаиморасчетов";
	КонецЕсли;	
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВзаиморасчетыПоВзносамВФондыОстатки.Налог,
	|	ВзаиморасчетыПоВзносамВФондыОстатки.ПериодВзаиморасчетов,
	|	ВзаиморасчетыПоВзносамВФондыОстатки.СтатьяНалоговойДекларации,
	|	ВзаиморасчетыПоВзносамВФондыОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ ВТВзаиморасчетыПоВзносамВФондыОстатки 
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыПоВзносамВФонды.Остатки(
	|		&Дата,
	|		Организация = &Организация
	|		И "+ФильтрПериод+"
	|		) КАК ВзаиморасчетыПоВзносамВФондыОстатки
	|;
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыПоВзносамВФондыОстатки.Налог,
	|	ВзаиморасчетыПоВзносамВФондыОстатки.ПериодВзаиморасчетов,
	|	ВзаиморасчетыПоВзносамВФондыОстатки.СтатьяНалоговойДекларации,
	|	ВзаиморасчетыПоВзносамВФондыОстатки.Сумма
	|ИЗ
	|	ВТВзаиморасчетыПоВзносамВФондыОстатки КАК ВзаиморасчетыПоВзносамВФондыОстатки
    |ГДЕ
	|   ВзаиморасчетыПоВзносамВФондыОстатки.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы)
	|
	|;
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыПоВзносамВФондыОстатки.Налог,
	|	ВзаиморасчетыПоВзносамВФондыОстатки.ПериодВзаиморасчетов,
	|	ВзаиморасчетыПоВзносамВФондыОстатки.СтатьяНалоговойДекларации,
	|	ВзаиморасчетыПоВзносамВФондыОстатки.Сумма
	|ИЗ
	|	ВТВзаиморасчетыПоВзносамВФондыОстатки КАК ВзаиморасчетыПоВзносамВФондыОстатки
    |ГДЕ
	|   ВзаиморасчетыПоВзносамВФондыОстатки.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.ВзносыФОТ)
	|";
	
КонецПроцедуры	

/////////////////////////////////////////////////////////////////////////////////////////
// Перечисление налогов

Функция ПолучитьДанныеВедомостейДляНалогов(ПлатежнаяВедомость, СчетУчета, Субконто1, Субконто2, Субконто3) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ведомость",ПлатежнаяВедомость);
	
	Если ТипЗнч(Субконто1) = Тип("СправочникСсылка.Налоги") Тогда
		Налог = Субконто1;
	ИначеЕсли ТипЗнч(Субконто2) = Тип("СправочникСсылка.Налоги") Тогда
		Налог = Субконто2;
	ИначеЕсли ТипЗнч(Субконто3) = Тип("СправочникСсылка.Налоги") Тогда
		Налог = Субконто3;
	Иначе
		Налог = Справочники.Налоги.ПустаяСсылка();
	КонецЕсли;
	
	Если ТипЗнч(Субконто1) = Тип("СправочникСсылка.СтатьиНалоговыхДеклараций") Тогда
		Статья = Субконто1;
	ИначеЕсли ТипЗнч(Субконто2) = Тип("СправочникСсылка.СтатьиНалоговыхДеклараций") Тогда
		Статья = Субконто2;
	ИначеЕсли ТипЗнч(Субконто3) = Тип("СправочникСсылка.СтатьиНалоговыхДеклараций") Тогда
		Статья = Субконто3;
	Иначе
		Статья = Справочники.СтатьиНалоговыхДеклараций.ПустаяСсылка();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Налог",Налог);
	Запрос.УстановитьПараметр("Статья",Статья);
	
	
	Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|  СУММА(Основной.Результат) КАК Сумма
		|ПОМЕСТИТЬ ВТДанныеВедомостей
		|ИЗ Документ.ВедомостьНаВыплатуЗарплаты.Взносы КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И Основной.Налог = &Налог
		|	И Основной.СтатьяНалоговойДекларации = &Статья
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.Результат) КАК Сумма
		|ИЗ Документ.ВедомостьНаВыплатуЗарплаты.ВзносыФОТ КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И Основной.Налог = &Налог
		|	И Основной.СтатьяНалоговойДекларации = &Статья
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.Сумма) КАК Сумма
		|ИЗ Документ.ВедомостьНаВыплатуЗарплатыВБанк.Взносы КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И Основной.Налог = &Налог
		|	И Основной.СтатьяНалоговойДекларации = &Статья
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.Сумма) КАК Сумма
		|ИЗ Документ.ВедомостьНаВыплатуЗарплатыВБанк.ВзносыФОТ КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И Основной.Налог = &Налог
		|	И Основной.СтатьяНалоговойДекларации = &Статья
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.Сумма) КАК Сумма
		|ИЗ Документ.ВедомостьНаВыплатуЗарплатыВКассу.Взносы КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И Основной.Налог = &Налог
		|	И Основной.СтатьяНалоговойДекларации = &Статья
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.Сумма) КАК Сумма
		|ИЗ Документ.ВедомостьНаВыплатуЗарплатыВкассу.ВзносыФОТ КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И Основной.Налог = &Налог
		|	И Основной.СтатьяНалоговойДекларации = &Статья
		// ИНАГРО ++
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.Результат) КАК Сумма
		|ИЗ Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.Взносы КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И Основной.Налог = &Налог
		|	И Основной.СтатьяНалоговойДекларации = &Статья
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.Результат) КАК Сумма
		|ИЗ Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.ВзносыФОТ КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И Основной.Налог = &Налог
		|	И Основной.СтатьяНалоговойДекларации = &Статья
		// ИНАГРО --
		|;
		|
		|ВЫБРАТЬ
		|  СУММА(ЕстьNULL(ДанныеВедомостей.Сумма,0)) КАК Сумма
		|ИЗ ВТДанныеВедомостей КАК ДанныеВедомостей";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		Возврат 0;
	ИначеЕсли Выборка.Следующий() Тогда
		Возврат Выборка.Сумма;
	КонецЕсли;	
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Важные даты

//Функция возвращает дату ввода Единого социального взноса
//
Функция ДатаВводаЕСВ() Экспорт
	
	Возврат Дата(2011,1,1);
	
КонецФункции

//Функция возвращает дату реформы Единого социального взноса
//
Функция ДатаИзмененияЕСВ1573() Экспорт
	
	Возврат Дата(2015,1,1);
	
КонецФункции

// Функция возвращает дату реформы Единого социального взноса
//
Функция ДатаИзмененияЕСВ1863() Экспорт
	
	Возврат Дата(2015,3,1);
	
КонецФункции

 // Функция возвращает дату реформы Единого социального взноса
//
Функция ДатаИзмененияЕСВ3688() Экспорт
	
	Возврат Дата(2016,1,1);
	
КонецФункции


/////////////////////////////////////////////////////////////////////////////////////////
// Прочее

Функция КатегорияЕСВПоУмолчанию(Организация) Экспорт
	
	НаборЗаписей = РегистрыСведений.НастройкиУчетаЗарплаты.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		Возврат Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникНаОбщихОснованиях;
		
	Иначе	
		Возврат НаборЗаписей[0].ОсновнаяКатегорияЗастрахованныхЛиц;
		
	КонецЕсли;
	
КонецФункции

Функция ПрименятьКоэффициентЕСВДляАвансов(Организация)
	
	НаборЗаписей = РегистрыСведений.НастройкиУчетаЗарплаты.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		Возврат Ложь;
		
	Иначе	
		Возврат НаборЗаписей[0].ПрименятьКоэффициентЕСВДляАвансов;
		
	КонецЕсли;
	
КонецФункции

Функция ОпределитьНалоговыйПериод(ПериодРегистрации, ПериодДействия, ВидЕСВ, КатегорияНачисления) Экспорт
	
	Возврат УчетСтраховыхВзносовПовтИсп.ОпределитьНалоговыйПериод(ПериодРегистрации, ПериодДействия, ВидЕСВ, КатегорияНачисления);
	
КонецФункции	

// Формирует запрос для получения данных о ЕСВ для расчета НДФЛ
// Основные таблицы ВТНачисленияОбороты и ВТСтрокиРасчета
//
Функция ЗапросЕСВДляРасчетаНДФЛ(Запрос, ПоВсемДокументам) Экспорт
	
	Запрос.Текст =	   
	   "////////////////////////////////////////////////////////////////////////////////	
	   |ВЫБРАТЬ
	   |	НачисленияОбороты.ФизическоеЛицо,
	   |	НачисленияОбороты.ДоходНДФЛ,
	   |	НачисленияОбороты.ВидЕСВ,
	   |	НачисленияОбороты.НалоговыйПериодЕСВ КАК НалоговыйПериод,
	   |	СУММА(НачисленияОбороты.СуммаОборот) КАК БазаЕСВ
	   |ПОМЕСТИТЬ ВТБазаЕСВ
	   |ИЗ
	   |	ВТНачисленияОбороты КАК НачисленияОбороты
	   |    ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	   |    ВТСтрокиРасчета КАК СтрокиРасчета
	   |    ПО СтрокиРасчета.ФизическоеЛицо = НачисленияОбороты.ФизическоеЛицо
	   |     И СтрокиРасчета.ДоходНДФЛ = НачисленияОбороты.ДоходНДФЛ
	   |     И СтрокиРасчета.НалоговыйПериод = НачисленияОбороты.НалоговыйПериодЕСВ
	   |ГДЕ
	   |	НачисленияОбороты.ДоходНДФЛ.УчитыватьВзносы
	   |СГРУППИРОВАТЬ ПО
	   |	НачисленияОбороты.ФизическоеЛицо,
	   |	НачисленияОбороты.ДоходНДФЛ,
	   |	НачисленияОбороты.ВидЕСВ,
	   |	НачисленияОбороты.НалоговыйПериодЕСВ
	   |";

	Запрос.Выполнить();
	
	//Запросы к данным регистров - удержанному ЕСВ.
	//Если не по всем документам - нужен отбор по регистратору
	Если ПоВсемДокументам Тогда
		Запрос.Текст = 
	       "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		   |	ЕСВПоСотрудникамОбороты.ФизическоеЛицо,
		   |	ЕСВПоСотрудникамОбороты.ВидЕСВ,
		   |	ЕСВПоСотрудникамОбороты.НалоговыйПериод,
		   |	ЕСВПоСотрудникамОбороты.БазаОборот КАК БазаЕСВ,
		   |	ЕСВПоСотрудникамОбороты.БазаВзносаОборот КАК БазаВзносаЕСВ,
		   |	ЕСВПоСотрудникамОбороты.СуммаОборот КАК СуммаЕСВ
		   |
		   |ПОМЕСТИТЬ ВТСуммаЕСВ
		   |ИЗ
		   |	РегистрНакопления.ЕСВПоСотрудникам.Обороты(
		   |			,
		   |			КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
		   |			,
		   |			Организация = &Организация
		   |			И СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВзносов.Взносы)
		   |				И (ФизическоеЛицо В
		   |					(ВЫБРАТЬ
		   |						СтрокиРасчета.ФизическоеЛицо
		   |					ИЗ
		   |						ВТБазаЕСВ КАК СтрокиРасчета))) КАК ЕСВПоСотрудникамОбороты
		   |";
	   
    Иначе
		Запрос.Текст = 
	       "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		   |	ЕСВПоСотрудникамОбороты.ФизическоеЛицо,
		   |	ЕСВПоСотрудникамОбороты.ВидЕСВ,
		   |	ЕСВПоСотрудникамОбороты.НалоговыйПериод,
		   |	ЕСВПоСотрудникамОбороты.БазаОборот КАК БазаЕСВ,
		   |	ЕСВПоСотрудникамОбороты.БазаВзносаОборот КАК БазаВзносаЕСВ,
		   |	ЕСВПоСотрудникамОбороты.СуммаОборот КАК СуммаЕСВ
		   |
		   |ПОМЕСТИТЬ ВТСуммаЕСВ
		   |ИЗ
		   |	РегистрНакопления.ЕСВПоСотрудникам.Обороты(
		   |			НАЧАЛОПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
		   |			КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
		   |			РЕГИСТРАТОР,
		   |			Организация = &Организация
		   |			И СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВзносов.Взносы)
		   |				И (ФизическоеЛицо В
		   |					(ВЫБРАТЬ
		   |						СтрокиРасчета.ФизическоеЛицо
		   |					ИЗ
		   |						ВТБазаЕСВ КАК СтрокиРасчета))) КАК ЕСВПоСотрудникамОбороты
		   |
		   |ГДЕ
		   |	ЕСВПоСотрудникамОбороты.Регистратор = &ВременнаяСсылка
		   |";
	   
		
	Конецесли;   
	Запрос.Выполнить();
	
	Запрос.Текст =	   
	   "////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ТаблицаБазаЕСВ.ФизическоеЛицо,
	   |	ТаблицаБазаЕСВ.ДоходНДФЛ,
	   |	ТаблицаБазаЕСВ.ВидЕСВ,
	   |	ТаблицаБазаЕСВ.НалоговыйПериод,
	   |	ТаблицаБазаЕСВ.БазаЕСВ КАК ЧастьБазыЕСВ,
	   |	ЕСТЬNULL(ТаблицаСуммаЕСВ.БазаЕСВ, 0) КАК БазаЕСВ,
	   |	ЕСТЬNULL(ТаблицаСуммаЕСВ.БазаВзносаЕСВ, 0) КАК БазаВзносаЕСВ,
	   |	ЕСТЬNULL(ТаблицаСуммаЕСВ.СуммаЕСВ, 0) КАК СуммаЕСВ
	   |ИЗ
	   |	ВТБазаЕСВ КАК ТаблицаБазаЕСВ
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТСуммаЕСВ КАК ТаблицаСуммаЕСВ
	   |    ПО ТаблицаБазаЕСВ.ФизическоеЛицо = ТаблицаСуммаЕСВ.ФизическоеЛицо
	   |     И ТаблицаБазаЕСВ.ВидЕСВ = ТаблицаСуммаЕСВ.ВидЕСВ
	   |     И ТаблицаБазаЕСВ.НалоговыйПериод = ТаблицаСуммаЕСВ.НалоговыйПериод
	   |
	   |;
	   |////////////////////////////////////////////////////////////////////////////////
	   |УНИЧТОЖИТЬ ВТСуммаЕСВ
	   |;
	   |УНИЧТОЖИТЬ ВТБазаЕСВ
	   |";
	Возврат Запрос.Выполнить().Выбрать();	
	
КонецФункции	

Функция РассчитатьКоэффициентСтавки(Организация, МесяцНачисления, БазаСОграничением) Экспорт
	
	Результат = Новый Структура("База,База2014,КоэффициентСтавки");
	
	Если НЕ ЗначениеЗаполнено(Организация) ИЛИ НЕ ЗначениеЗаполнено(МесяцНачисления) Тогда
		Результат.База = 0;
		Результат.База2014 = 0;
		Результат.КоэффициентСтавки = 0;
		Возврат Результат;
	КонецЕсли;
	
	Используется1863 =  (МесяцНачисления >= ДатаИзмененияЕСВ1863());
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("МесяцНачисления", МесяцНачисления);
	Запрос.УстановитьПараметр("СпособРасчета", Перечисления.СпособыРасчетаВзносов.ВзносыФОТ);
	МассивВидовЕСВ = Новый Массив();
	МассивВидовЕСВ.Добавить(Перечисления.ВидыЕСВ.ОсновнаяЗарплата);
	МассивВидовЕСВ.Добавить(Перечисления.ВидыЕСВ.ПоДоговорамГПХ);
	Если Используется1863 Тогда
		МассивВидовЕСВ.Добавить(Перечисления.ВидыЕСВ.Больничные);
		МассивВидовЕСВ.Добавить(Перечисления.ВидыЕСВ.Декретные);	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивВидовЕСВ", МассивВидовЕСВ);
	
	МассивИсключенныхКатегорий = Новый Массив();
	МассивИсключенныхКатегорий.Добавить(Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникИнвалид);
	МассивИсключенныхКатегорий.Добавить(Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникИнвалид50);
	МассивИсключенныхКатегорий.Добавить(Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникИнвалидУТОГУТОС);
	МассивИсключенныхКатегорий.Добавить(Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникИнвалидБольничный);
	МассивИсключенныхКатегорий.Добавить(Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникИнвалидБольничный50);
	МассивИсключенныхКатегорий.Добавить(Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникИнвалидДекретные);
	МассивИсключенныхКатегорий.Добавить(Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникИнвалидДекретные50);
	МассивИсключенныхКатегорий.Добавить(Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникУТОГУТОСБольничный);
	
	Запрос.УстановитьПараметр("МассивИсключенныхКатегорий", МассивИсключенныхКатегорий);
	
	Если НЕ Используется1863 Тогда
	
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   	|	СУММА(ВзносыВФонды.БазаОборот) КАК База2014,
		|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ ВзносыВФонды.Период) КАК Месяцев2014
		|ПОМЕСТИТЬ ВТБаза2014
		|ИЗ
	    |	РегистрНакопления.ЕСВПоСотрудникам.Обороты(ДАТАВРЕМЯ(2014,1,1),ДАТАВРЕМЯ(2014,12,31),МЕСЯЦ,Организация = &Организация И СпособРасчета = &СпособРасчета И ВидЕСВ В (&МассивВидовЕСВ)) КАК ВзносыВФонды
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   	|	СУММА(ВзносыВФонды.БазаОборот) КАК База
		|ПОМЕСТИТЬ ВТБаза
	    |ИЗ
	    |	РегистрНакопления.ЕСВПоСотрудникам.Обороты(НАЧАЛОПЕРИОДА(&МесяцНачисления,МЕСЯЦ),КОНЕЦПЕРИОДА(&МесяцНачисления,МЕСЯЦ),,Организация = &Организация И СпособРасчета = &СпособРасчета И ВидЕСВ В (&МассивВидовЕСВ)) КАК ВзносыВФонды
		|;
		|
		|ВЫБРАТЬ
		|  ЕСТЬNULL(ТаблицаБаза.База, 0) КАК База,
		|  ЕСТЬNULL(ТаблицаБаза2014.База2014, 0) КАК База2014,
		|  ЕСТЬNULL(ТаблицаБаза2014.Месяцев2014, 0) КАК Месяцев2014
		|ИЗ
		|	ВТБаза КАК ТаблицаБаза
		|	ПОЛНОЕ СОЕДИНЕНИЕ
		|	ВТБаза2014 КАК ТаблицаБаза2014
		|	ПО ИСТИНА
		|";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Результат.База2014 = ?(Выборка.Месяцев2014 = 0, 0,Выборка.База2014/Выборка.Месяцев2014 );
			Результат.База = Выборка.База;
			Если Результат.База = 0 Тогда
				Результат.КоэффициентСтавки = 1;
			Иначе
				Результат.КоэффициентСтавки = МИН(МАКС(0.4, Результат.База2014/Результат.База),1);
				Если Используется1863 Тогда
					Результат.КоэффициентСтавки = Окр(Результат.КоэффициентСтавки,3);	
				КонецЕсли;	
			КонецЕсли;	
		Иначе
			Результат.База2014 = 0;
			Результат.База = 0;
			Результат.КоэффициентСтавки = 0;
		КонецЕсли;
		
		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(ВзносыВФонды.Период, МЕСЯЦ) КАК Период,
		|	СУММА(ВзносыВФонды.БазаОборот) КАК База2014,
		|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ ВзносыВФонды.ФизическоеЛицо) КАК Сотрудники2014
		|ПОМЕСТИТЬ ВТБаза2014
		|ИЗ
	    |	РегистрНакопления.ЕСВПоСотрудникам.Обороты(ДАТАВРЕМЯ(2014,1,1),ДАТАВРЕМЯ(2014,12,31),МЕСЯЦ,Организация = &Организация И СпособРасчета = &СпособРасчета И ВидЕСВ В (&МассивВидовЕСВ) И КатегорияЕСВ НЕ В (&МассивИсключенныхКатегорий)) КАК ВзносыВФонды
		|СГРУППИРОВАТЬ ПО
		|    НАЧАЛОПЕРИОДА(ВзносыВФонды.Период, МЕСЯЦ)
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВзносыВФонды.ФизическоеЛицо,
		|	СУММА(ВзносыВФонды.БазаОборот) КАК База
		|ПОМЕСТИТЬ ВТБаза
	    |ИЗ
	    |	РегистрНакопления.ЕСВПоСотрудникам.Обороты(НАЧАЛОПЕРИОДА(&МесяцНачисления,МЕСЯЦ),КОНЕЦПЕРИОДА(&МесяцНачисления,МЕСЯЦ),,Организация = &Организация И СпособРасчета = &СпособРасчета И ВидЕСВ В (&МассивВидовЕСВ) И КатегорияЕСВ НЕ В (&МассивИсключенныхКатегорий)) КАК ВзносыВФонды
		|СГРУППИРОВАТЬ ПО
		|    ВзносыВФонды.ФизическоеЛицо
		|;
		|
	    |ВЫБРАТЬ
	    |   КОЛИЧЕСТВО( РАЗЛИЧНЫЕ ВзносыВФонды.ФизическоеЛицо) КАК КоличествоСотрудников,
	    |   СУММА(ВзносыВФонды.База) КАК База
	    |ИЗ 
	    |   ВТБаза КАК ВзносыВФонды
	    |;
	    |
	    |ВЫБРАТЬ
	    |   СУММА(Взносы.Сотрудники2014)/КОЛИЧЕСТВО(Взносы.Период) КАК Сотрудников2014,
		|   КОЛИЧЕСТВО(Взносы.Период) КАК Месяцев2014,
		|   СУММА(Взносы.База2014) КАК База2014
	    |ИЗ 
	    |   ВТБаза2014 КАК Взносы
		|";	
		
		Если БазаСОграничением Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"ВзносыВФонды.БазаОборот","ВзносыВФонды.БазаВзносаОборот");	
		КонецЕсли;	

		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
	
		Выборка = РезультатЗапроса[2].Выбрать();
		
		Если Выборка.Следующий() Тогда
			Результат.База = ?(Выборка.КоличествоСотрудников = 0, 0,Выборка.База/Выборка.КоличествоСотрудников );
		Иначе
			Результат.База = 0;
		КонецЕсли;
		
		Выборка = РезультатЗапроса[3].Выбрать();
		
		Если Выборка.Следующий() Тогда
			Результат.База2014 = ?(Выборка.Сотрудников2014 = 0 ИЛИ Выборка.Месяцев2014 = 0, 0,Выборка.База2014/Выборка.Месяцев2014/Выборка.Сотрудников2014 );
		Иначе
			Результат.База2014 = 0;
		КонецЕсли;
		
		Если Результат.База = 0 Тогда
			Результат.КоэффициентСтавки = 1;
		Иначе
			Результат.КоэффициентСтавки = Окр(МИН(МАКС(0.4, Результат.База2014/Результат.База),1),3);
		КонецЕсли;
		
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

Функция СписокНалогиБезКоэффициента()
	
	МассивНалогиБезКоэффициента = Новый Массив();
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТГПХУТОГ);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТИнвалиды);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТИнвалиды50);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТИнвалидыУТОГУТОС);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТИнвалидыСР);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТРаботникиУТОГУТОС);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТБольничныеИнвалиды);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТБольничныеИнвалиды50);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТБольничныеУТОГ);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТДекретныеИнвалиды);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТДекретныеИнвалиды50);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТДекретныеУТОГ);

	
	Возврат МассивНалогиБезКоэффициента;
		
КонецФункции

Функция СписокНалогиБезМинимальнойБазы()
	
	МассивНалогиБезБезМинимальнойБазы = Новый Массив();
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТГПХУТОГ);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТИнвалиды);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТИнвалиды50);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТИнвалидыУТОГУТОС);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТИнвалидыСР);	
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТРаботникиУТОГУТОС);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТБольничныеИнвалиды);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТБольничныеИнвалиды50);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТБольничныеУТОГ);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТДекретныеИнвалиды);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТДекретныеИнвалиды50);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТДекретныеУТОГ);

	
	Возврат МассивНалогиБезБезМинимальнойБазы;
		
КонецФункции


/////////////////////////////////////////////////////////////////////////////////////////
// Конвертации

Процедура ЗарегистрироватьДанныеЕСВ(Регистратор, Отказ, Организация, Взносы) Экспорт
	
	Движения = Регистратор.Движения;
	Если Взносы <> Неопределено Тогда
		
		Для Каждого Строка Из Взносы Цикл
			
			НоваяСтрокаВзносы = Движения.ЕСВПоСотрудникам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаВзносы, Строка);
			НоваяСтрокаВзносы.Организация = Организация;
			
		КонецЦикла;
		
		Движения.ЕСВПоСотрудникам.Записывать = Истина;
		Движения.ЕСВПоСотрудникам.Записать();
		Движения.ЕСВПоСотрудникам.Записывать = Ложь;
		
	КонецЕсли
	
КонецПроцедуры

Функция ПолучитьКатегориюЕСВНеДляОсновнойЗарплаты(Налог, ВидРасчета) Экспорт
	Если ВидРасчета = ПланыВидовРасчета.УДАЛИТЬВзносы.ЕСВФОТБольничные Тогда
		Если Налог = Справочники.Налоги.ЕСВФОТБольничныеИнвалиды Тогда 
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникИнвалидБольничный
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТБольничныеИнвалиды50 Тогда
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникИнвалидБольничный50
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТБольничныеУТОГ Тогда
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникУТОГУТОСБольничный
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТБольничные Тогда	
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникБольничный
		КонецЕсли;
	ИначеЕсли ВидРасчета = ПланыВидовРасчета.УДАЛИТЬВзносы.ЕСВФОТДекретные Тогда
		Если Налог = Справочники.Налоги.ЕСВФОТДекретныеИнвалиды Тогда 
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникИнвалидДекретные
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТДекретныеИнвалиды50 Тогда 
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникИнвалидДекретные50
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТДекретныеУТОГ Тогда 
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникДекретныеУТОГУТОС
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТДекретные Тогда 
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникДекретные
		КонецЕсли
	КонецЕсли;
	Возврат КатегорияЕСВ;
КонецФункции	

Функция ПолучитьКатегориюЕСВ(Налог) Экспорт
		//Новая схема
		
		Если Налог = Справочники.Налоги.ЕСВФОТРаботники 
		 или Налог = Справочники.Налоги.ЕСВФОТБюджетники Тогда
			//наймані працівники на загальних підставах
			//в т.ч. бюджетники
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникНаОбщихОснованиях;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТИнвалиды Тогда
			//працюючий інвалід
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникИнвалид;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТЛетчики Тогда
			//особа льотного складу
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникЛетчик;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТРаботникиЗаПределами Тогда
			//громадянин України, який працює за її межами
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникЗаПределамиУкраины;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТРаботникиИностранные Тогда
			//назва: працівник іноземних організацій в Україні
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникВИностранныхОрганизациях;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТРаботникиСР Тогда
			//наймані працівники, які працюють на посадах, робота на яких зараховується до стажу, що дає право на одержання пенсії відповідно до окремих законів України
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникНаСпециальныхРаботах;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТГПХ Тогда
			//особи, які працюють за угодами ЦПХ
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникПоДоговоруГПХ;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТРаботникиУТОГУТОС Тогда
			//особи, які працюють на підприємствах та в організаціях всеукраїнських громадських організацій інвалідів, зокрема товариствах УТОГ та УТОС
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникУТОГУТОС;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТИнвалиды50 Тогда	
			//працюючий інвалід на підприємстві або в організації громадських організацій інвалідів, в яких кількість інвалідів становить понад 50 % 
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникИнвалид50;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТБольничные Тогда		
			//особи, які отримують допомогу по тимчасовій непрацездатності
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникБольничный;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТИнвалидыУТОГУТОС Тогда		
			//найманий працівник-інвалід, який працює на підприємствах та в організаціях всеукраїнських громадських організацій інвалідів, зокрема товариствах УТОГ та УТОС
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникИнвалидУТОГУТОС;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТИнвалидыСР Тогда		
			//Працюючі інваліди, які працюють на посадах, робота на яких зараховується до стажу, що дає право на одержання пенсії відповідно до окремих законів України
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникИнвалидНаСпециальныхРаботах;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТБольничныеИнвалиды Тогда		
			//больничные для инвалидов
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникИнвалидБольничный;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТБольничныеУТОГ Тогда		
			//больничные в организациях УТОГ, УТОС
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникУТОГУТОСБольничный;
        ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТГПХУТОГ Тогда		
			//ГПХ в УТОГ и УТОС
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникПоДоговоруГПХУТОГУТОС;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТБольничныеИнвалиды50 Тогда		
			//больничные для инвалида в организации с 50% инвалидов
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникИнвалидБольничный50;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТДекретные Тогда		
			//особи, які отримують допомогу у зв'язку з вагітністю та пологами
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникДекретные;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТДекретныеИнвалиды Тогда		
			//декретные для инвалида
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникИнвалидДекретные;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТДекретныеУТОГ Тогда		
			//декретные в организациях УТОГ, УТОС
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникДекретныеУТОГУТОС;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТДекретныеИнвалиды50 Тогда		
			//декретные для инвалида в организации с 50% инвалидов
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникИнвалидДекретные50;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТРаботникиФЛ Тогда		
			//особа, яка працює у фізичної особи
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникУФизическогоЛица;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТМобил Тогда		
			// працівник, призваний на строкову військову службу
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.МобилизованныйРаботник;
		ИначеЕсли Налог = Справочники.Налоги.ЕСВФОТМобилКомп Тогда		
			// Виплати, що компенсуються з бюджету в межах середнього заробітку працівників, призваних на військову службу
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.МобилизованныйРаботникКомпенсация;
		КонецЕсли;	
		Возврат КатегорияЕСВ;
КонецФункции
////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "2.0.1.11";
	Обработчик.Процедура = "УчетСтраховыхВзносов.ОбновитьЕСВМобилизованным";
	Обработчик.НачальноеЗаполнение = Истина;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "2.0.11.1";
	Обработчик.Процедура = "УчетСтраховыхВзносов.ОбновитьШкалуСтавок";

	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "2.1.20.2";
	Обработчик.Процедура = "УчетСтраховыхВзносов.ИзменитьЗаписиМобРСПределыСтраховыхВзносов";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "2.1.23.1";
	Обработчик.Процедура = "УчетСтраховыхВзносов.ОбновитьДляДияСити";

КонецПроцедуры

// [2.0.1.11] Потом УДАЛИТЬ
//
Процедура ОбновитьЕСВМобилизованным() Экспорт
	
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("Справочник", "КатегорииЗастрахованныхЛицЕСВ");
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("Справочник", "Налоги");
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("Справочник", "СтатьиНалоговыхДеклараций");
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("РегистрСведений", "ПараметрыКатегорийЕСВ");
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("РегистрСведений", "ПределыСтраховыхВзносов");
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("РегистрСведений", "ШкалаСтавокНалогов");
	
КонецПроцедуры	

Процедура ОбновитьШкалуСтавок() Экспорт
	
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("РегистрСведений", "ШкалаСтавокНалогов");
	
КонецПроцедуры	

Процедура ИзменитьЗаписиМобРСПределыСтраховыхВзносов() Экспорт
	
	Набор = РегистрыСведений.ПределыСтраховыхВзносов.СоздатьМенеджерЗаписи();
	Набор.Период = Дата('20211201');
	Набор.ВидЕСВ = Перечисления.ВидыЕСВ.НачисленияМобилизованным;
	Набор.Прочитать();
	
	Если Набор.Выбран() Тогда
		Набор.МинимальнаяБаза = 6500;
		Набор.Записать();
	КонецЕсли;	
	
	Набор.Период = Дата('20221001');
	Набор.ВидЕСВ = Перечисления.ВидыЕСВ.НачисленияМобилизованным;
	Набор.Прочитать();
	
	Если Набор.Выбран() Тогда
		Набор.МинимальнаяБаза = 6700;
		Набор.Записать();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбновитьДляДияСити() Экспорт
	
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("Справочник", "КатегорииЗастрахованныхЛицЕСВ");
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("РегистрСведений", "ПараметрыКатегорийЕСВ");
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("РегистрСведений", "ПределыСтраховыхВзносов");
	
КонецПроцедуры

