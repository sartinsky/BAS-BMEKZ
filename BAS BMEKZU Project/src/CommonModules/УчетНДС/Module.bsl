
// Определяет, есть ли право на налоговый кредит
//
Функция ЕстьПравоНаНалоговыйКредит(НалоговоеНазначение) Экспорт
	       
	Возврат УчетНДСВызовСервераПовтИсп.ЕстьПравоНаНалоговыйКредит(НалоговоеНазначение);
	
КонецФункции // ЕстьНалоговыйКредит()

//Возвращает вид деятельности по НДС по ставке НДС
//
Функция ПолучитьВидДеятельностиНДС(СтавкаНДС, ДопПараметры = Неопределено) Экспорт
	
	ЕстьДопПараметры = (ТипЗнч(ДопПараметры) = Тип("Структура"));
	
	Если ЕстьДопПараметры Тогда
		
		Если ДопПараметры.Свойство("БартерИЭкспорт") Тогда
			Если ДопПараметры.БартерИЭкспорт = Истина Тогда
			    
				// Вообще-то это "временное" ограничение. Но продлевается
				// каждый год начиная с 2001-го: дату проверки не учитываем
				Возврат Перечисления.ВидыДеятельностиНДС.Необлагаемая;
				
			КонецЕсли; 
		//ИначеЕсли	
		КонецЕсли;
		
	КонецЕсли;	//ЕстьДопПараметры
	
	// по общим правилам
	Если     СтавкаНДС = Перечисления.СтавкиНДС.НДС20 
		 Или СтавкаНДС = Перечисления.СтавкиНДС.СпецСт8 // ИНАГРО
		 Или СтавкаНДС = Перечисления.СтавкиНДС.НДС0  
		 Или СтавкаНДС = Перечисления.СтавкиНДС.НДС7 
		 Или СтавкаНДС = Перечисления.СтавкиНДС.НДС14
		 Тогда
		 
		Возврат Перечисления.ВидыДеятельностиНДС.Облагаемая;
	Иначе
		
		Возврат Перечисления.ВидыДеятельностиНДС.Необлагаемая;
	КонецЕсли; 
	
КонецФункции // ПолучитьВидДеятельностиНДС()
	
////Возвращает схему налогообложения Организации на Дату
//Функция ПолучитьСхемуНалогообложения(Дата, Организация) Экспорт
//	
//
//	
//КонецФункции // ПолучитьСхемуНалогообложения()

//Возвращает параметры налогового учета на Дату
Функция ПолучитьПараметрыНалоговогоУчета(Дата) Экспорт
	
	ПараметрыНУ = РегистрыСведений.ПараметрыНалоговогоУчета.ПолучитьПоследнее(Дата);
	Возврат ПараметрыНУ;
		
КонецФункции // ПолучитьПараметрыНалоговогоУчета()

// Функция возвращает курс ставку НДС
//
// Параметры:
//  Валюта - СправочникСсылка.Валюты, валюта, по которой необходимо получить курс
//  ДатаКурса - Дата, календарная дата, на которую необходимо получить курс валюты
//
// Возвращаемое значение:
//	Курс переданной валюты на переданную дату, 1 в случае отсутствия значения.
//
Функция ПолучитьСтавкуНДС(СтавкаНДС) Экспорт

	Возврат УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДС);

КонецФункции // ПолучитьСтавкуНДС()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ РАБОТЫ СО СТАВКАМИ НАЛОГОВ И ВЗНОСОВ

// Рассчитываем сумму документа со всеми налогами
//
// Параметры: 
//  ДокументОбъект    - объект документа, сумму которого надо рассчитать
//  ИмяТабличнойЧасти - строка, имя табличной части, сумму которой надо рассчитать.
//                      Если она не заполнена, считаем по всем табличным частям, в которых есть "Сумма"
//  НеУчитыватьТару   - булево, если Истина и ИмяТабличнойЧасти неопределено, то в расчете сумм тару не учитываем
//
// Возвращаемое значение:
//  Сумма документа со всеми налогами.
//
Функция ПолучитьСуммуДокументаСНДС(ДокументОбъект, ИмяТабличнойЧасти = Неопределено, НеУчитыватьТару = Истина) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();

	СуммаДокумента = 0;
	Если ИмяТабличнойЧасти <> Неопределено Тогда
		СуммаДокумента = СуммаДокумента + ДокументОбъект[ИмяТабличнойЧасти].Итог("Сумма");
		Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокумента)
		   И ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СуммаНДС", МетаданныеДокумента, ИмяТабличнойЧасти)
		   И Не ДокументОбъект.СуммаВключаетНДС Тогда
			СуммаДокумента = СуммаДокумента + ДокументОбъект[ИмяТабличнойЧасти].Итог("СуммаНДС");
		КонецЕсли; 
	Иначе
		Для каждого ТЧОбъекта Из ДокументОбъект.Метаданные().ТабличныеЧасти Цикл
			Если НеУчитыватьТару и ТЧОбъекта.Имя = "ВозвратнаяТара" Тогда
				Продолжить;
			КонецЕсли;
			Если ТЧОбъекта.Имя = "ВыданныеАвансы" Тогда
				Продолжить;
			КонецЕсли;
			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("Сумма", МетаданныеДокумента, ТЧОбъекта.Имя) Тогда
				СуммаДокумента = СуммаДокумента + ДокументОбъект[ТЧОбъекта.Имя].Итог("Сумма");
				Если  ОбщегоНазначенияБП.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокумента)
					И ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СуммаНДС", МетаданныеДокумента, ТЧОбъекта.Имя)
					И Не ДокументОбъект.СуммаВключаетНДС Тогда
					СуммаДокумента = СуммаДокумента + ДокументОбъект[ТЧОбъекта.Имя].Итог("СуммаНДС");
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;
		Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента("Сумма", МетаданныеДокумента) Тогда
			СуммаДокумента = СуммаДокумента + ДокументОбъект.Сумма;
			Если  ОбщегоНазначенияБП.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокумента)
				И ОбщегоНазначенияБП.ЕстьРеквизитДокумента("СуммаНДС", МетаданныеДокумента)
				И Не ДокументОбъект.СуммаВключаетНДС Тогда
				СуммаДокумента = СуммаДокумента + ДокументОбъект.СуммаНДС;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Возврат СуммаДокумента;

КонецФункции // ПолучитьСуммуДокументаСНДС()

// Рассчитывает сумму НДС исходя из суммы и флагов налогообложения
//
// Параметры: 
//  Сумма            - число, сумма от которой надо рассчитывать налоги, 
//  УчитыватьНДС     - булево, признак учета НДС в сумме, 
//  СуммаВключаетНДС - булево, признак включения НДС в сумму ("внутри" или "сверху"),
//  СтавкаНДС        - число , процентная ставка НДС,
//
// Возвращаемое значение:
//  Число, полученная сумма НДС
//
Функция РассчитатьСуммуНДС(Сумма, УчитыватьНДС, СуммаВключаетНДС, СтавкаНДС) Экспорт

	Если (УчитыватьНДС) И (СуммаВключаетНДС) Тогда
		СуммаБезНДС = 100 * Сумма / (100 + СтавкаНДС);
		СуммаНДС = Сумма - СуммаБезНДС;
	Иначе
		СуммаБезНДС = Сумма;
	КонецЕсли;

	Если УчитыватьНДС Тогда 
		Если НЕ СуммаВключаетНДС Тогда
			СуммаНДС = СуммаБезНДС * СтавкаНДС / 100;
		КонецЕсли;
	Иначе
		СуммаНДС = 0;
	КонецЕсли;

	Возврат СуммаНДС;

КонецФункции // РассчитатьСуммуНДС()

// Рассчитываем сумму НДС документа
//
// Параметры: 
//  ДокументОбъект    - объект документа, сумму которого надо рассчитать
//  ИмяТабличнойЧасти - строка, имя табличной части, сумму которой надо рассчитать.
//                      Если она не заполнена, считаем по всем табличным частям, в которых есть "Сумма"
//
// Возвращаемое значение:
//  НДС документа
//
Функция ПолучитьНДСДокумента(ДокументОбъект, ИмяТабличнойЧасти = Неопределено) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();

	СуммаНДС = 0;

	Если ИмяТабличнойЧасти <> Неопределено Тогда
		СуммаНДС = СуммаНДС + ДокументОбъект[ИмяТабличнойЧасти].Итог("СуммаНДС");
	Иначе
		Для каждого ТЧОбъекта Из ДокументОбъект.Метаданные().ТабличныеЧасти Цикл
			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СуммаНДС", МетаданныеДокумента, ТЧОбъекта.Имя) Тогда
				СуммаНДС = СуммаНДС + ДокументОбъект[ТЧОбъекта.Имя].Итог("СуммаНДС");
			КонецЕсли;
		КонецЦикла;
		Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента("СуммаНДС", МетаданныеДокумента) Тогда
			СуммаНДС = СуммаНДС + ДокументОбъект.СуммаНДС;
		КонецЕсли;
	КонецЕсли;

	Возврат СуммаНДС;

КонецФункции

// Рассчитываем сумму документа со всеми налогами и без учета скидки
//
// Параметры: 
//  ТабличнаяЧасть   - табличная часть, в котором надо посчитать сумму без скидки,
//  УчитыватьНДС     - булево, признак учета НДС в сумме, 
//  СуммаВключаетНДС - булево, признак включения НДС в сумму ("внутри" или "сверху"),
//
// Возвращаемое значение:
//  Сумма документа со всеми налогамии без учета скидки
//
Функция ПолучитьСуммуДокументаСНДСБезСкидки(ТабличнаяЧасть, УчитыватьНДС, СуммаВключаетНДС) Экспорт

	СуммаДокумента = 0;

	Для каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		СуммаПоСтроке = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
		СуммаДокумента = СуммаДокумента + СуммаПоСтроке;
		СуммаНДС = 0;

		Если УчитыватьНДС Тогда
			РассчитатьСуммуНДС(СуммаПоСтроке, УчитыватьНДС, СуммаВключаетНДС, 
			                        УчетНДС.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС));

			Если УчитыватьНДС И (Не СуммаВключаетНДС) Тогда
				СуммаДокумента = СуммаДокумента + СуммаНДС;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	Возврат СуммаДокумента;

КонецФункции // ПолучитьСуммуДокументаСНДСБезСкидки()

// Рассчитываем сумму документа со всеми налогами в разрезе ставок НДС
//
// Параметры:
//  ДокументОбъект    - ссылка документа, сумму которого надо рассчитать
//  ИмяТабличнойЧасти - строка, имя табличной части, сумму которой надо рассчитать.
//                      Если она не заполнена, считаем по всем табличным частям, в которых есть "Сумма"
//  НеУчитыватьТару   - булево, если Истина и ИмяТабличнойЧасти неопределено, то в расчете сумм тару не учитываем
//
// Возвращаемое значение:
//  ТаблицаЗначений
//		Колонки:
//			Сумма		- Сумма документа со всеми налогами
//			СтавкаНДС	- ПеречислениеСсылка.СтавкиНДС
//			СуммаНДС	- Сумма НДС по ставке
//
Функция ПолучитьСуммуДокументаСНДСВРазрезеСтавокНДС(ДокументОбъект, ИмяТабличнойЧасти = Неопределено, НеУчитыватьТару = Истина) Экспорт

	МетаданныеДокумента = ДокументОбъект.Метаданные();
	СуммаДокументаПоСтавкам = Новый ТаблицаЗначений();
	СуммаДокументаПоСтавкам.Колонки.Добавить("Сумма",     ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15,2));
	СуммаДокументаПоСтавкам.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	СуммаДокументаПоСтавкам.Колонки.Добавить("СуммаНДС",  ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15,2));
	СуммаДокументаПоСтавкам.Индексы.Добавить("СтавкаНДС");

	Если НЕ (ИмяТабличнойЧасти = Неопределено) Тогда

		Для каждого СтрокаДокумента Из ДокументОбъект[ИмяТабличнойЧасти] Цикл

			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("Сумма", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
				СуммаДокумента = СтрокаДокумента.Сумма;
			Иначе
				СуммаДокумента = 0;
			КонецЕсли;

			СуммаНДС  = 0;
			СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка();

			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СуммаНДС", МетаданныеДокумента, ИмяТабличнойЧасти) тогда
				СуммаНДС = СтрокаДокумента.СуммаНДС;
			КонецЕсли;

			Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", МетаданныеДокумента, ИмяТабличнойЧасти) тогда
				СтавкаНДС = СтрокаДокумента.СтавкаНДС;
			КонецЕсли;

			Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокумента)
			   И Не ДокументОбъект.СуммаВключаетНДС Тогда

				СуммаДокумента = СуммаДокумента + СуммаНДС;

			КонецЕслИ;

			СтрокаТаблицыИтогов = СуммаДокументаПоСтавкам.Найти(СтавкаНДС,"СтавкаНДС");

			Если СтрокаТаблицыИтогов = Неопределено тогда
				СтрокаТаблицыИтогов = СуммаДокументаПоСтавкам.Добавить();
				СтрокаТаблицыИтогов.СтавкаНДС = СтавкаНДС;
			КонецЕсли;

			СтрокаТаблицыИтогов.Сумма    = СтрокаТаблицыИтогов.Сумма    + СуммаДокумента;
			СтрокаТаблицыИтогов.СуммаНДС = СтрокаТаблицыИтогов.СуммаНДС + СуммаНДС;

		КонецЦикла;

	Иначе

		Для каждого ТЧОбъекта Из ДокументОбъект.Метаданные().ТабличныеЧасти Цикл

			Если НеУчитыватьТару и ТЧОбъекта.Имя = "ВозвратнаяТара" Тогда
				Продолжить;
			КонецЕсли;

			ИмяТабличнойЧасти = ТЧОбъекта.Имя;

			Для каждого СтрокаДокумента  Из ДокументОбъект[ИмяТабличнойЧасти] Цикл

				Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("Сумма", МетаданныеДокумента, ИмяТабличнойЧасти) Тогда
					СуммаДокумента = СтрокаДокумента.Сумма;
				Иначе
					СуммаДокумента = 0;
				КонецЕсли;

				СуммаНДС  = 0;
				СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка();

				Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СуммаНДС", МетаданныеДокумента, ИмяТабличнойЧасти) тогда
					СуммаНДС = СтрокаДокумента.СуммаНДС;
				КонецЕсли;

				Если ОбщегоНазначенияБП.ЕстьРеквизитТабЧастиДокумента("СтавкаНДС", МетаданныеДокумента, ИмяТабличнойЧасти) тогда
					СтавкаНДС = СтрокаДокумента.СтавкаНДС;
				КонецЕсли;

				Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокумента)
				   И НЕ ДокументОбъект.СуммаВключаетНДС Тогда
					СуммаДокумента = СуммаДокумента+СуммаНДС;
				КонецЕслИ;

				СтрокаТаблицыИтогов = СуммаДокументаПоСтавкам.Найти(СтавкаНДС,"СтавкаНДС");

				Если СтрокаТаблицыИтогов = Неопределено тогда
					СтрокаТаблицыИтогов = СуммаДокументаПоСтавкам.Добавить();
					СтрокаТаблицыИтогов.СтавкаНДС = СтавкаНДС;
				КонецЕсли;

				СтрокаТаблицыИтогов.Сумма    = СтрокаТаблицыИтогов.Сумма    + СуммаДокумента;
				СтрокаТаблицыИтогов.СуммаНДС = СтрокаТаблицыИтогов.СуммаНДС + СуммаНДС;

			КонецЦикла;

		КонецЦикла;

	КонецЕсли;

	СтрокиКУдалению = Новый Массив;

	Для каждого СтрокаТаблицы Из СуммаДокументаПоСтавкам Цикл
	    Если СтрокаТаблицы.Сумма = 0 и СтрокаТаблицы.СуммаНДС = 0  Тогда
			СтрокиКУдалению.Добавить( СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;

	Для НомерСтроки = 1 По СтрокиКУдалению.Количество() Цикл
		СуммаДокументаПоСтавкам.Удалить(СтрокиКУдалению[НомерСтроки-1]);
	КонецЦикла;

	Возврат СуммаДокументаПоСтавкам;

КонецФункции // ПолучитьСуммуДокументаСНДС()

// Из Фиесты 1.2
Функция КодЕдиницыИзмеренияДляПечатиНалоговых(Код) Экспорт

	Код = СтрЗаменить(Строка(Код), " ", "");
	
	Если НЕ СтрДлина(Код) = 4 Тогда
	
		Возврат "";	
		
	Иначе
		
		Для НомСимв = 1 По 4 Цикл
			КодСимвола = КодСимвола(Код, НомСимв);
			Если НЕ (КодСимвола >= 48 И КодСимвола <= 57) Тогда
				Возврат "";
			КонецЕсли; 
		КонецЦикла; 		
		
		Возврат Код;
		
	КонецЕсли;	

КонецФункции
 

Процедура ЗаполнитьСписокВыбораСпецРежимаНалогообложения(СписокВыбора) Экспорт
	
	СписокВыбора.Добавить(0, "- спец. режим не застосовується");
	СписокВыбора.Добавить(2, "2-Платники, включені до реєстру отримувачів бюджетної дотації. " +
							 "До 01.03.2017: сільськогосподарські підприємства, які застосовують " +
	                         "спеціальний режим оподаткування діяльності у сфері сільського та " +
	                         "лісового господарства, а також рибальства відповідно до статті 209 Кодексу");
							  
	СписокВыбора.Добавить(3, "(до 01.01.2017) 3-сільськогосподарські підприємства усіх форм власності, " +
	                         "які відповідають критеріям, визначеним статтею 209 Кодексу, " +
	                         "але які не обрали спеціальний режим оподаткування " +
	                         "діяльності у сфері сільського, лісового господарства та рибальства " +
	                         "та реалізують молоко, худобу, птицю, вовну власного виробництва, а " +
	                         "також молочні продукти, молочну сировину та м'ясопродукти, " +
	                         "вироблені у власних переробних цехах");
								
	СписокВыбора.Добавить(4, "(до 01.01.2015) 4-переробні підприємства усіх форм власності, які згідно з " +
	                         "пунктом 1 підрозділу 2 розділу XX Кодексу за " +
	                         "реалізовані ними молоко, молочну сировину та молочні продукти, " +
	                         "м'ясо та м'ясопродукти, іншу продукцію переробних тварин, " +
	                         "закуплених у живій вазі (шкури, субпродукти, м'ясо-кісткове " +
	                         "борошно), у повному обсязі спрямовують суми податку на додану " +
	                         "вартість до спеціального фонду державного бюджету");
	
	СписокВыбора.Добавить(6, "6-складання податкової накладної для операцій з постачання товарів, " +
	                         "базою оподаткування для яких встановлено максимальні роздрібні ціни");
	
КонецПроцедуры

Процедура ЗаполнитьСписокВыбораТипПричиныНевыдачиПокупателю(СписокВыбора, ТипДокумента = "НалоговаяНакладная") Экспорт
	
	СписокВыбора.Добавить(0, " - Податкова накладна видається покупцю");
	СписокВыбора.Добавить(1, "01-Складена на суму збільшення компенсації вартості поставлених товарів/послуг (для податкових накладних, особливості заповнення яких викладені в пункті 13 цього Порядку)");
	СписокВыбора.Добавить(2, "02-Постачання неплатнику податку");
	СписокВыбора.Добавить(3, "03-Натуральна виплата в рахунок оплати праці фізичним особам");
	СписокВыбора.Добавить(4, "04-Постачання у межах балансу для невиробничого використання");
	СписокВыбора.Добавить(5, "05-Ліквідація основних фондів за самостійним рішенням платника податку");
	СписокВыбора.Добавить(6, "06-Переведення основних фондів до складу невиробничих");
	СписокВыбора.Добавить(7, "07-Експортні постачання");
	СписокВыбора.Добавить(8, "08-Постачання для операцій, які не є об'єктом оподаткування податком на додану вартість");
	СписокВыбора.Добавить(9, "09-Постачання для операцій, які звільнені від оподаткування податком на додану вартість");
	СписокВыбора.Добавить(10, "10-Визнання умовного постачання товарних залишків та/або основних фондів, що перебувають 
		|в обліку платника податку на день анулювання його реєстрації як платника податку на додану вартість,
		|щодо яких був нарахований податковий кредит у минулих або поточному податкових періодах
		|при анулюванні реєстрації платника податку на додану вартість");
	СписокВыбора.Добавить(11, "11-Виписана за щоденними підсумками операцій"); 
	СписокВыбора.Добавить(12, "12-Складена на постачання неплатнику, в якій зазначається назва покупця (для податкових накладних, особливості заповнення яких викладені в пункті 10 цього Порядку)");
	СписокВыбора.Добавить(13, "13-Використання виробничих або невиробничих засобів, інших товарів/послуг не у господарській діяльності"); 
	СписокВыбора.Добавить(14, "14-Виписана покупцем (отримувачем) послуг від нерезидента"); 
	Если ТипДокумента = "Приложение2КНалоговойНакладной" Тогда
		СписокВыбора.Добавить(15, "15-Складена на суму перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання");
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьСписокВыбораТипПричиныНевыдачиПокупателюПриПродажеНижеОбычнойЦены(СписокВыбора) Экспорт
	СписокВыбора.Добавить(15, "15-Складена на суму перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання");

КонецПроцедуры

Процедура ЗаполнитьСписокВыбораТекстДополненияКНаименованиюПриПродажеНижеОбычнойЦены(СписокВыбора) Экспорт
	
	СписокВыбора.Добавить(15,  "(перевищення бази оподаткування, визначеної відповідно до статей 188 і 189 Податкового кодексу України, над фактичною ціною постачання)");

КонецПроцедуры


Процедура ЗаполнитьСписокВыбораКодПризнакаСводной(СписокВыбора) Экспорт
	
	СписокВыбора.Добавить(0, "- не є зведеною накладною");
	СписокВыбора.Добавить(1, "1 - відповідно до пункту 198.5 статті 198 ПКУ (умовний продаж)");
	СписокВыбора.Добавить(2, "2 - відповідно до пункту 199.1 статті 199 ПКУ (частковий умовний продаж)");
	СписокВыбора.Добавить(3, "3 - з особливостями заповнення п. 15 Порядку (перевищення бази над ціною поставки)");
	СписокВыбора.Добавить(4, "4 - з особливостями заповнення п. 19 Порядку (постачання що має безперервний або ритмічний характер)");

КонецПроцедуры

Функция РазрешенаВыгрузкаПечатьНалоговогоДокумента(ДокументОбъект) Экспорт
	
	Результат = Истина;
	
	Возврат Результат;
	
КонецФункции