
// Формирует запрос на дополнительные параметры, нужные при проведении документа.
//
// Параметры: 
//  ДокументОбъект                 - объект проводимого документа, 
//  ДеревоПолейЗапросаПоШапке      - дерево значений, содержащего имена полей, 
//                                   которые нужно заполнить в запросе по шапке документа.
//  СтруктураШапкиДокумента        - структура, содержащая значения реквизитов, относящихся к шапке документа,
//                                   необходимых для его проведения.
//  ВалютаРегламентированногоУчета - валюта регламентированного учета
//
// Возвращаемое значение:
//  Дополненная по результату запроса структура СтруктураШапкиДокумента.
//
Функция СформироватьЗапросПоДеревуПолей(ДокументОбъект, ДеревоПолейЗапросаПоШапке, СтруктураШапкиДокумента, ВалютаРегламентированногоУчета)  Экспорт

	Если ДеревоПолейЗапросаПоШапке.Строки.Количество()=0 тогда
		Возврат СтруктураШапкиДокумента;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ";

	СтрокиЗапроса           = "";
	ТаблицыЗапроса          = "";
	НуженКурсВалютыУпрУчета = Ложь;
	ЕстьУчетнаяПолитика     = Ложь;

	// Реквизиты договора взаиморасчетов.
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("ДоговорыКонтрагентов", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			Если СтрокаПоля.Поле = "НеОтноситьНаЗатратыПоНУ" И СтруктураШапкиДокумента.Дата >= '20120101' Тогда
				
				СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
				Символы.Таб + "ЛОЖЬ" + ?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), " КАК " + СокрЛП(СтрокаПоля.Поле), " КАК " + СокрЛП(СтрокаПоля.Псевдоним));
				
			Иначе
				
				СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
				Символы.Таб + "Док.ДоговорКонтрагента." + СокрЛП(СтрокаПоля.Поле) +
				?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));
				
			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

	// Реквизиты договора взаиморасчетов регл.
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("ДоговорыКонтрагентовРегл", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.ДоговорКонтрагентаРегл." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));

		КонецЦикла;

	КонецЕсли;

	// Реквизиты сделки.
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("Сделка", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		Если ЗначениеЗаполнено(ДокументОбъект.Сделка) Тогда
			СделкаМетаданные = ДокументОбъект.Сделка.Метаданные();
		Иначе
			СделкаМетаданные = Неопределено;
		КонецЕсли;
		
		// В цикле по вложенным строкам формируем строки запроса.
		Для Каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + ?(СделкаМетаданные = Неопределено ИЛИ СделкаМетаданные.Реквизиты.Найти(СокрЛП(СтрокаПоля.Поле)) = Неопределено,
								"NULL",
								"ВЫРАЗИТЬ(Док.Сделка КАК Документ." + СделкаМетаданные.Имя + ")." + СокрЛП(СтрокаПоля.Поле)) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));

		КонецЦикла;

	КонецЕсли;

	// Реквизиты документа-основания.
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("ДокументОснование", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.ДокументОснование." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));

		КонецЦикла;

	КонецЕсли;
	
	// Реквизиты склада.
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("Склад", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.Склад." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));

		КонецЦикла;

	КонецЕсли;

	// Реквизиты склада-отправителя
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("СкладОтправитель", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.СкладОтправитель." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));

		КонецЦикла;

	КонецЕсли;

	// Реквизиты склада-получателя
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("СкладПолучатель", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.СкладПолучатель." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));

		КонецЦикла;

	КонецЕсли;

	// Реквизиты склада-ордера
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("СкладОрдер", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.СкладОрдер." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));

		КонецЦикла;

	КонецЕсли;

	// Реквизиты номенклатуры
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("Номенклатура", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.Номенклатура." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));

		КонецЦикла;

	КонецЕсли;
	
	// Реквизиты Схемы реализации
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("СхемаРеализацииПоВознаграждению", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для Каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.СхемаРеализацииПоВознаграждению." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));
			
		КонецЦикла;

	КонецЕсли;
	
	// Реквизиты Услуги по вознаграждению
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("УслугаПоВознаграждению", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для Каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.УслугаПоВознаграждению." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));
			
		КонецЦикла;

	КонецЕсли;
	
	// Реквизиты НалоговоеНазначение по вознаграждению
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("НалоговоеНазначениеДоходовИЗатратПоВознаграждению", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для Каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.НалоговоеНазначениеДоходовИЗатратПоВознаграждению." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));
			
		КонецЦикла;

	КонецЕсли;
	
	// Реквизиты НалоговоеНазначение
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("НалоговоеНазначение", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для Каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.НалоговоеНазначение." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));
			
		КонецЦикла;

	КонецЕсли;

	// Реквизиты НалоговоеНазначение по вознаграждению
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("НалоговоеНазначениеДоходовИЗатрат", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для Каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.НалоговоеНазначениеДоходовИЗатрат." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));
			
		КонецЦикла;

	КонецЕсли;
	
	// Реквизиты состояния ОС
	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("Состояние", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.Состояние." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));

		КонецЦикла;

	КонецЕсли;

	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("СостояниеВводаВЭксплуатацию", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда

		// В цикле по вложенным строкам формируем строки запроса.
		Для каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Док.СостояниеВводаВЭксплуатацию." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));

		КонецЦикла;

	КонецЕсли;
	
	// Константы.

	СтрокаОбъекта = ДеревоПолейЗапросаПоШапке.Строки.Найти("Константы", "Объект");
	Если СтрокаОбъекта <> Неопределено Тогда
		ТаблицыЗапроса = ТаблицыЗапроса + ", Константы";

		// В цикле по вложенным строкам формируем строки запроса.
		Для каждого СтрокаПоля Из СтрокаОбъекта.Строки Цикл

			СтрокиЗапроса = СтрокиЗапроса + "," + Символы.ПС +
			Символы.Таб + "Константы." + СокрЛП(СтрокаПоля.Поле) +
			?(НЕ ЗначениеЗаполнено(СтрокаПоля.Псевдоним), "", " КАК " + СокрЛП(СтрокаПоля.Псевдоним));

		КонецЦикла;

	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ " + Сред(СтрокиЗапроса, 2) + "
	                | ИЗ 
	                |      Документ." + ДокументОбъект.Метаданные().Имя + " КАК Док "+ ТаблицыЗапроса +"
	                |     ГДЕ Док.Ссылка = &ДокументСсылка";

	// Установим параметры запроса.
	Запрос.УстановитьПараметр("ДокументСсылка" , ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", ДокументОбъект.Дата);

	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();

	Для каждого Колонка из ТаблицаЗапроса.Колонки Цикл
		СтруктураШапкиДокумента.Вставить(Колонка.Имя, ТаблицаЗапроса[0][Колонка.Имя]);
	КонецЦикла;

	Возврат СтруктураШапкиДокумента;

КонецФункции // СформироватьЗапросПоДеревуПолей()




