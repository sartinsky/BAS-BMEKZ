////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции документа Депонирование зарплаты

/// Обработчики событий модуля объекта документов Депонирование зарплаты

Процедура ДепонированиеЗарплатыОбработкаПроведения(ДокументОбъект, Отказ) Экспорт
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ДокументОбъект);
	
	ДанныеДляПроведения = УчетДепонированнойЗарплаты.ДепонированиеЗарплатыДанныеДляПроведения(ДокументОбъект);

	ВзаиморасчетыССотрудниками.ПроверитьОплатуВедомостейДокументом(ДокументОбъект.Ссылка, Отказ, ДанныеДляПроведения.Оплата);
	
	Если НЕ Отказ Тогда
		ВзаиморасчетыССотрудниками.ЗарегистрироватьОплатуВедомостейДокументом(ДокументОбъект, Отказ, ДанныеДляПроведения.Оплата);
	КонецЕсли;
		
	Если НЕ Отказ Тогда
		УчетДепонированнойЗарплаты.ЗарегистрироватьДепонированнуюЗарплату(ДокументОбъект.Движения, Отказ, ДанныеДляПроведения.Депоненты, Истина);
	КонецЕсли;
	
КонецПроцедуры

/// Методы доступа к документу депонирования

 Функция ДепонированиеЗарплатыДанныеДляПроведения(ДокументОбъект) Экспорт
	 
	 // Получаем данные депонируемых строк ведомости
	
	Ведомости = Новый Массив;
	Ведомости.Добавить(ДокументОбъект.Ведомость);
	ТаблицаВыплат = ВзаиморасчетыССотрудниками.ДанныеВедомостейДляОплатыДокументом(ДокументОбъект.Ссылка, Ведомости, ДокументОбъект.Депоненты.ВыгрузитьКолонку("ФизическоеЛицо"), Неопределено);
	
	// Менеджер временных таблиц с временной таблицей для передачи в Учет НДФЛ
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаСуммВыплат", ТаблицаВыплат);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСуммВыплат.ФизическоеЛицо,
//++ БУ ЗИК
	|	ТаблицаСуммВыплат.СчетУчета,
//~	|	ТаблицаСуммВыплат.ГруппаУчетаНачислений,
//-- БУ ЗИК
	|	ТаблицаСуммВыплат.СуммаКВыплате КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТСписокСотрудников
	|ИЗ
	|	&ТаблицаСуммВыплат КАК ТаблицаСуммВыплат";
	
	Запрос.Выполнить();

	// Таблица депонирования
	
	ТаблицаДепонентов = ТаблицаВыплат.Скопировать();
	
	ТаблицаДепонентов.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДепонентов.ЗаполнитьЗначения(ДокументОбъект.Организация, "Организация");
	
	ТаблицаДепонентов.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	ТаблицаДепонентов.ЗаполнитьЗначения(ДокументОбъект.Дата, "Дата");
	
	ТаблицаДепонентов.Колонки.Добавить("Сумма", ТаблицаДепонентов.Колонки.СуммаКВыплате.ТипЗначения);
	Для Каждого Депонент Из ТаблицаДепонентов Цикл
		Депонент.Сумма = Депонент.СуммаКВыплате
	КонецЦикла;	
	
	ТаблицаДепонентов.Колонки.Удалить(ТаблицаДепонентов.Колонки.Индекс(ТаблицаДепонентов.Колонки.СуммаКВыплате));
	
	// Таблица оплаты
	
//++ БУ ЗИК
	КолонкиТаблицыОплаты = "Ведомость, ФизическоеЛицо, СчетУчета";
//~	КолонкиТаблицыОплаты = "Ведомость, ФизическоеЛицо, ГруппаУчетаНачислений";
//-- БУ ЗИК
	ТаблицаОплат = ТаблицаВыплат.Скопировать(, КолонкиТаблицыОплаты);
	ТаблицаОплат.Свернуть(КолонкиТаблицыОплаты);
	
	ДанныеДляПроведения = Новый Структура;
	ДанныеДляПроведения.Вставить("МенеджерТаблиц",	Запрос.МенеджерВременныхТаблиц);
	ДанныеДляПроведения.Вставить("Депоненты",		ТаблицаДепонентов);
	ДанныеДляПроведения.Вставить("Оплата",			ТаблицаОплат);
	
	Возврат ДанныеДляПроведения
	
КонецФункции
