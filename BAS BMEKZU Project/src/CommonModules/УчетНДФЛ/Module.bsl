/////////////////////////////////////////////////////////////////////////////////////////
// Расчет НДФЛ

// Формирует запрос для получения льгот сотрудников
// Основная таблица ВТСтрокиРасчетаСДанными
// Возвращаемая таблица ВТЛьготыСотрудников
//
Процедура ПолучитьСписокЛьгот(Запрос, Организация, ПрименятьЛьготы)
	
	Если НЕ ПрименятьЛьготы Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтрокиРасчета.ФизическоеЛицо,
		|	СтрокиРасчета.НалоговыйПериод,
		|	NULL КАК Льгота,
		|	0 КАК КоличествоЛьгот,
		|	0 КАК КоличествоПороговЛьгот,
		|   0 КАК ПорогЛьготНДФЛ,
		|   0 КАК СтавкаЛьготНДФЛ,
		|   0 КАК РазмерПрожиточныеМинимумы,
		|   0 КАК ДоходЛьготы
		|ПОМЕСТИТЬ ВТЛьготыСотрудников
		|ИЗ
		|	ВТСтрокиРасчетаСДанными КАК СтрокиРасчета
		|ГДЕ ЛОЖЬ
		|
		|";
		Запрос.Выполнить();
		Возврат;
		
	КонецЕсли;	
	
	ОтборыОТ = Новый Структура();
	ВыбираемыеПоляОТ = Новый Структура();
	ОтборыРС = Новый Структура();
	ОтборыРС.Вставить("Актуальность","= Истина");
	ОтборыРС.Вставить("Организация","= &Организация");
	ВыбираемыеПоляРС = Новый Структура();
	ВыбираемыеПоляРС.Вставить("Льгота","Льгота");
	ВыбираемыеПоляРС.Вставить("Актуальность","Актуальность");
	ВыбираемыеПоляРС.Вставить("Организация","Организация");
	ПоляСвязей = Новый Структура();
	ПоляСвязей.Вставить("ФизическоеЛицо","ФизическоеЛицо");
	
	Запрос.Текст = ЗарплатаКадры.ЗапросВТСрезПоследнихНаВсеДаты("ВТЛьготыСотрудниковСписок", "ВТСтрокиРасчетаСДанными", ОтборыОТ, ВыбираемыеПоляОТ, "НалоговыйПериод", "РегистрСведений.ЛьготыПоНДФЛСотрудников", ОтборыРС, ВыбираемыеПоляРС,"Период", ПоляСвязей, ИСТИНА, ЛОЖЬ, ИСТИНА);
	Запрос.Выполнить();
	
	ПолучитьСписокДетей(Запрос);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	ЛьготыСотрудников.Льгота,
	|	ВЫРАЗИТЬ( 
	|		ВЫБОР КОГДА ЛьготыСотрудников.Льгота.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.Основной) 
	|			ТОГДА ЛьготыСотрудников.Льгота.РазмерНДФЛ 
	|			КОГДА ЛьготыСотрудников.Льгота.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаКаждогоРебенка) 
	|			ТОГДА ЛьготыСотрудников.Льгота.РазмерНДФЛ * ЕСТЬNULL(ДетиСотрудников.КоличествоДетей, 0) 
	|			КОГДА ЛьготыСотрудников.Льгота.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаКаждогоРебенкаИнвалида) 
	|			ТОГДА ЛьготыСотрудников.Льгота.РазмерНДФЛ * ЕСТЬNULL(ДетиСотрудников.КоличествоДетейИнвалидов, 0) 
	|			КОГДА ЛьготыСотрудников.Льгота.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаТроихДетей)
	|				И ЕСТЬNULL(ДетиСотрудников.КоличествоДетей, 0) >= 3
	|			ТОГДА ЛьготыСотрудников.Льгота.РазмерНДФЛ * ЕСТЬNULL(ДетиСотрудников.КоличествоДетей, 0) 
	|      		ИНАЧЕ 0
	|  		КОНЕЦ
	|	КАК ЧИСЛО(5,2) ) КАК КоличествоЛьгот,
	|	ВЫРАЗИТЬ( 
	|		ВЫБОР КОГДА ЛьготыСотрудников.Льгота.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.Основной) 
	|				ИЛИ ЛьготыСотрудников.Льгота = ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.НДФЛ_16912ВР)
	|			ТОГДА 1 
	|			КОГДА ЛьготыСотрудников.Льгота.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаКаждогоРебенка) 
	|			ТОГДА ЕСТЬNULL(ДетиСотрудников.КоличествоДетей, 0) 
	|			КОГДА ЛьготыСотрудников.Льгота.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаКаждогоРебенкаИнвалида) 
	|			ТОГДА ЕСТЬNULL(ДетиСотрудников.КоличествоДетейИнвалидов, 0) 
	|			КОГДА ЛьготыСотрудников.Льгота.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаТроихДетей)
	|				И ЕСТЬNULL(ДетиСотрудников.КоличествоДетей, 0) >= 3
	|			ТОГДА ЕСТЬNULL(ДетиСотрудников.КоличествоДетей, 0) 
	|      		ИНАЧЕ 1
	|  		КОНЕЦ
	|	КАК ЧИСЛО(5,2) ) КАК КоличествоПороговЛьгот
	|ПОМЕСТИТЬ ВТЛьготыСотрудниковКоличество
	|ИЗ
	|	ВТЛьготыСотрудниковСписок КАК ЛьготыСотрудников
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТДетиСотрудников КАК ДетиСотрудников
	|	ПО ЛьготыСотрудников.НалоговыйПериод = ДетиСотрудников.НалоговыйПериод
	|	 И ЛьготыСотрудников.ФизическоеЛицо = ДетиСотрудников.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.Гр16912_16913б) КАК Льгота,
	|	СУММА(
	|		ВЫБОР
	|			КОГДА ЛьготыСотрудников.Льгота = ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.НДФЛ_612б) 
	|				ТОГДА ЛьготыСотрудников.КоличествоЛьгот -1 
	|			ИНАЧЕ ЛьготыСотрудников.КоличествоЛьгот
	|		КОНЕЦ) КАК КоличествоЛьгот,
	|	МАКСИМУМ(ЛьготыСотрудников.КоличествоПороговЛьгот) КАК КоличествоПороговЛьгот
	|ПОМЕСТИТЬ ВТЛьготыСотрудниковРазрешенныеДубли
	|ИЗ
	|	ВТЛьготыСотрудниковКоличество КАК ЛьготыСотрудников
	|   ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ВТЛьготыСотрудниковКоличество КАК ЛьготыСотрудниковДубли
	|	ПО ЛьготыСотрудников.НалоговыйПериод = ЛьготыСотрудниковДубли.НалоговыйПериод
	|	 И ЛьготыСотрудников.ФизическоеЛицо = ЛьготыСотрудниковДубли.ФизическоеЛицо
	|	 И ((ЛьготыСотрудников.Льгота = ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.НДФЛ_16912)
	|	  И ЛьготыСотрудниковДубли.Льгота = ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.НДФЛ_612б))
	|	  ИЛИ (ЛьготыСотрудников.Льгота = ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.НДФЛ_612б)
	|	  И ЛьготыСотрудниковДубли.Льгота = ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.НДФЛ_16912)))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.Гр16912_16913б)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	ЛьготыСотрудников.Льгота,
	|	ЛьготыСотрудников.КоличествоЛьгот,
	|	ЛьготыСотрудников.КоличествоПороговЛьгот
	|ПОМЕСТИТЬ ВТЛьготыСотрудниковКоличествоПолное
	|ИЗ
	|	ВТЛьготыСотрудниковКоличество КАК ЛьготыСотрудников
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	ЛьготыСотрудников.Льгота,
	|	ЛьготыСотрудников.КоличествоЛьгот,
	|	ЛьготыСотрудников.КоличествоПороговЛьгот
	|ИЗ
	|	ВТЛьготыСотрудниковРазрешенныеДубли КАК ЛьготыСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	МАКСИМУМ(ЛьготыСотрудников.КоличествоЛьгот) КАК КоличествоЛьгот,
	|	МАКСИМУМ(ЛьготыСотрудников.КоличествоПороговЛьгот) КАК КоличествоПороговЛьгот
	|ПОМЕСТИТЬ ВТЛьготыСотрудниковМаксимум
	|ИЗ
	|	ВТЛьготыСотрудниковКоличествоПолное КАК ЛьготыСотрудников
	|СГРУППИРОВАТЬ ПО
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	НАЧАЛОПЕРИОДА(ЛьготыСотрудников.НалоговыйПериод, ГОД) КАК НалоговыйПериодГод,
	|	МАКСИМУМ(ЛьготыСотрудников.Льгота) КАК Льгота,
	|	МАКСИМУМ(ЛьготыСотрудников.КоличествоЛьгот) КАК КоличествоЛьгот,
	|	МАКСИМУМ(ЛьготыСотрудников.КоличествоПороговЛьгот) КАК КоличествоПороговЛьгот
	|ПОМЕСТИТЬ ВТЛьготыСотрудниковДанные
	|ИЗ
	|	ВТЛьготыСотрудниковКоличествоПолное КАК ЛьготыСотрудников
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ВТЛьготыСотрудниковМаксимум КАК ЛьготыСотрудниковМаксимум
	|	ПО ЛьготыСотрудников.ФизическоеЛицо = ЛьготыСотрудниковМаксимум.ФизическоеЛицо
	|	 И ЛьготыСотрудников.НалоговыйПериод = ЛьготыСотрудниковМаксимум.НалоговыйПериод
	|	 И ЛьготыСотрудников.КоличествоЛьгот = ЛьготыСотрудниковМаксимум.КоличествоЛьгот
	|	 И ЛьготыСотрудников.КоличествоПороговЛьгот = ЛьготыСотрудниковМаксимум.КоличествоПороговЛьгот
	|СГРУППИРОВАТЬ ПО
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЛьготыСотрудниковСписок
	|;
	|УНИЧТОЖИТЬ ВТЛьготыСотрудниковМаксимум
	|;
	|УНИЧТОЖИТЬ ВТЛьготыСотрудниковРазрешенныеДубли
	|;
	|УНИЧТОЖИТЬ ВТЛьготыСотрудниковКоличествоПолное
	|;
	|УНИЧТОЖИТЬ ВТЛьготыСотрудниковКоличество
	|";
	
	Запрос.Выполнить();
	

	ОтборыОТ = Новый Структура();
	ВыбираемыеПоляОТ = Новый Структура();
	ОтборыРС = Новый Структура();
	ОтборыРС.Вставить("ДоходНДФЛ","= ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код01)");
	ВыбираемыеПоляРС = Новый Структура();
	ВыбираемыеПоляРС.Вставить("Порог","Порог");
	ВыбираемыеПоляРС.Вставить("Ставка","Ставка");
	ВыбираемыеПоляРС.Вставить("ДоходНДФЛ","ДоходНДФЛ");
	ПоляСвязей = Новый Структура();
	
	Запрос.Текст = ЗарплатаКадры.ЗапросВТСрезПоследнихНаВсеДаты("ВТРазмерыЛьготНДФЛ", "ВТЛьготыСотрудниковДанные", ОтборыОТ, ВыбираемыеПоляОТ, "НалоговыйПериод", "РегистрСведений.РазмерыЛьготНДФЛ", ОтборыРС, ВыбираемыеПоляРС,"Период", ПоляСвязей, ЛОЖЬ, ЛОЖЬ, ЛОЖЬ);
	Запрос.Выполнить();
	
	ОтборыОТ = Новый Структура();
	ВыбираемыеПоляОТ = Новый Структура();
	ОтборыРС = Новый Структура();
	ОтборыРС.Вставить("СоциальнаяГруппа","= ЗНАЧЕНИЕ(Перечисление.СоциальныеГруппыНаселения.Трудоспособные)");
	ВыбираемыеПоляРС = Новый Структура();
	ВыбираемыеПоляРС.Вставить("Размер","Размер");
	ВыбираемыеПоляРС.Вставить("СоциальнаяГруппа","СоциальнаяГруппа");
	ПоляСвязей = Новый Структура();
	
	Запрос.Текст = ЗарплатаКадры.ЗапросВТСрезПоследнихНаВсеДаты("ВТПрожиточныеМинимумы", "ВТЛьготыСотрудниковДанные", ОтборыОТ, ВыбираемыеПоляОТ, "НалоговыйПериодГод", "РегистрСведений.ПрожиточныеМинимумы", ОтборыРС, ВыбираемыеПоляРС,"Период", ПоляСвязей, ЛОЖЬ, ЛОЖЬ, ЛОЖЬ);
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтрокиРасчета.ФизическоеЛицо,
	|	СтрокиРасчета.НалоговыйПериод,
	|	СУММА(СтрокиРасчета.Доход) КАК ОбщийДоход 
	|ПОМЕСТИТЬ ВТОбщийДоходПоЛьготам
	|ИЗ
	|	ВТСтрокиРасчетаСДанными КАК СтрокиРасчета
	|	
	|ГДЕ
	|   СтрокиРасчета.ДоходНДФЛ.УчитыватьНСЛ
	|СГРУППИРОВАТЬ ПО
	|	СтрокиРасчета.ФизическоеЛицо,
	|	СтрокиРасчета.НалоговыйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	ЛьготыСотрудников.Льгота,
	|	ЛьготыСотрудников.КоличествоЛьгот,
	|	ЛьготыСотрудников.КоличествоПороговЛьгот,
	|   ЕСТЬNULL(РазмерыЛьготНДФЛ.Порог, 0) КАК ПорогЛьготНДФЛ,
	|   ЕСТЬNULL(РазмерыЛьготНДФЛ.Ставка, 0) КАК СтавкаЛьготНДФЛ,
	|   ЕСТЬNULL(ПрожиточныеМинимумы.Размер, 0) КАК РазмерПрожиточныеМинимумы,
	|   ЕСТЬNULL(ОбщийДоходПоЛьготам.ОбщийДоход, 0) КАК ДоходЛьготы
	|ПОМЕСТИТЬ ВТЛьготыСотрудников
	|ИЗ
	|	ВТЛьготыСотрудниковДанные КАК ЛьготыСотрудников
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыЛьготНДФЛ КАК РазмерыЛьготНДФЛ
	|	ПО ЛьготыСотрудников.НалоговыйПериод = РазмерыЛьготНДФЛ.НалоговыйПериод
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПрожиточныеМинимумы КАК ПрожиточныеМинимумы
	|	ПО ЛьготыСотрудников.НалоговыйПериодГод = ПрожиточныеМинимумы.НалоговыйПериодГод
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОбщийДоходПоЛьготам КАК ОбщийДоходПоЛьготам
	|	ПО ЛьготыСотрудников.НалоговыйПериод = ОбщийДоходПоЛьготам.НалоговыйПериод
	|	 И ЛьготыСотрудников.ФизическоеЛицо = ОбщийДоходПоЛьготам.ФизическоеЛицо
	|ГДЕ
	|  ЛьготыСотрудников.НалоговыйПериод <= &МесяцНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРазмерыЛьготНДФЛ
	|;
	|УНИЧТОЖИТЬ ВТПрожиточныеМинимумы
	|;
	|УНИЧТОЖИТЬ ВТЛьготыСотрудниковДанные
	|;
	|УНИЧТОЖИТЬ ВТОбщийДоходПоЛьготам
	|
	|";

	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует запрос для получения данных о детях сотрудников
// Основная таблица ВТЛьготыСотрудниковСписок
// Возвращаемая таблица ВТДетиСотрудников
//
Процедура ПолучитьСписокДетей(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиРасчета.ФизическоеЛицо,
	|	СтрокиРасчета.НалоговыйПериод
	|ПОМЕСТИТЬ ВТСтрокиРасчетаДляДетей
	|ИЗ
	|	ВТЛьготыСотрудниковСписок КАК СтрокиРасчета
	|	
	|ГДЕ
	|   СтрокиРасчета.Льгота.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаКаждогоРебенка)
	|   ИЛИ СтрокиРасчета.Льгота.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаКаждогоРебенкаИнвалида)
	|   ИЛИ СтрокиРасчета.Льгота.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаТроихДетей)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	СоставСемьи.Ссылка КАК ФизическоеЛицо,
	|	СоставСемьи.НомерСтроки КАК НомерСтроки,
	|	СоставСемьи.ФизЛицо КАК Ребенок,
	|	СоставСемьи.ФизЛицо.ДатаРождения КАК ДатаРождения,
	|	СоставСемьи.ГодРождения
	|ПОМЕСТИТЬ ВТСписокДети
	|ИЗ
	|	Справочник.ФизическиеЛица.СоставСемьи КАК СоставСемьи
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтрокиРасчетаДляДетей КАК СтрокиРасчета
	|	ПО СоставСемьи.Ссылка = СтрокиРасчета.ФизическоеЛицо
	|	
	|ГДЕ
	|   СоставСемьи.СтепеньРодства = ЗНАЧЕНИЕ(Справочник.СтепениРодстваФизЛиц.Ребенок)
	|   И СоставСемьи.Иждивенец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиРасчета.ФизическоеЛицо,
	|	СтрокиРасчета.НалоговыйПериод
	|ПОМЕСТИТЬ ВТСотрудникиИПериоды
	|ИЗ
	|	ВТСтрокиРасчетаДляДетей КАК СтрокиРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиИПериоды.ФизическоеЛицо,
	|	СотрудникиИПериоды.НалоговыйПериод,
	|	КОНЕЦПЕРИОДА(СотрудникиИПериоды.НалоговыйПериод, МЕСЯЦ) КАК КонецПериода,
	|	СписокДети.Ребенок
	|ПОМЕСТИТЬ ВТСписокАктуальныеДети
	|ИЗ
	|	ВТСотрудникиИПериоды КАК СотрудникиИПериоды
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСписокДети КАК СписокДети
	|	ПО СотрудникиИПериоды.ФизическоеЛицо = СписокДети.ФизическоеЛицо
	|ГДЕ
	|   (СписокДети.Ребенок = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|     И (СписокДети.ГодРождения+18) >= ГОД(СотрудникиИПериоды.НалоговыйПериод)
	|     И	СписокДети.ГодРождения <= ГОД(СотрудникиИПериоды.НалоговыйПериод))
	|   ИЛИ
	|   (СписокДети.Ребенок <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|     И ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(СписокДети.ДатаРождения, ГОД), ГОД, 18) >= НАЧАЛОПЕРИОДА(СотрудникиИПериоды.НалоговыйПериод, ГОД)
	|     И	СписокДети.ДатаРождения <= КОНЕЦПЕРИОДА(СотрудникиИПериоды.НалоговыйПериод, МЕСЯЦ))
	|;
	|";
	
	Запрос.Выполнить();
	
	ОтборыОТ = Новый Структура();
	ВыбираемыеПоляОТ = Новый Структура();
	ВыбираемыеПоляОТ.Вставить("ФизическоеЛицо","ФизическоеЛицо");
	ВыбираемыеПоляОТ.Вставить("НалоговыйПериод","НалоговыйПериод");
	ОтборыРС = Новый Структура();
	ОтборыРС.Вставить("Инвалидность"," = ИСТИНА");
	ВыбираемыеПоляРС = Новый Структура();
	ВыбираемыеПоляРС.Вставить("Инвалидность","Инвалидность");
	ПоляСвязей = Новый Структура();
	ПоляСвязей.Вставить("Ребенок","ФизическоеЛицо");
	
	Запрос.Текст = ЗарплатаКадры.ЗапросВТСрезПоследнихНаВсеДаты("ВТДетиИнвалиды", "ВТСписокАктуальныеДети", ОтборыОТ, ВыбираемыеПоляОТ, "КонецПериода", "РегистрСведений.СведенияОбИнвалидностиФизическихЛиц", ОтборыРС, ВыбираемыеПоляРС,"Период", ПоляСвязей, ИСТИНА, ИСТИНА, ИСТИНА);
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокАктуальныеДети.ФизическоеЛицо,
	|	СписокАктуальныеДети.НалоговыйПериод,
	|	СУММА(1) КАК КоличествоДетей,
	|	СУММА(
	|    ВЫБОР
	|     КОГДА ЕСТЬNULL(ДетиИнвалиды.Инвалидность,ЛОЖЬ)
	|      ТОГДА 1
	|     ИНАЧЕ 0
	|    КОНЕЦ) КАК КоличествоДетейИнвалидов
	|ПОМЕСТИТЬ ВТДетиСотрудников
	|ИЗ
	|	ВТСписокАктуальныеДети КАК СписокАктуальныеДети
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТДетиИнвалиды КАК ДетиИнвалиды
	|	ПО СписокАктуальныеДети.ФизическоеЛицо = ДетиИнвалиды.ФизическоеЛицо
	|	 И СписокАктуальныеДети.НалоговыйПериод = ДетиИнвалиды.НалоговыйПериод
	|	 И СписокАктуальныеДети.Ребенок = ДетиИнвалиды.Ребенок
	|СГРУППИРОВАТЬ ПО
	|	СписокАктуальныеДети.ФизическоеЛицо,
	|	СписокАктуальныеДети.НалоговыйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСписокДети
	|;
	|УНИЧТОЖИТЬ ВТСотрудникиИПериоды
	|;
	|УНИЧТОЖИТЬ ВТДетиИнвалиды
	|;
	|УНИЧТОЖИТЬ ВТСписокАктуальныеДети
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует запрос для получения сотрудников-шахтеров
// Основная таблица ВТСтрокиРасчета
// Возвращаемая таблица ВТСписокШахтеров
//
Процедура ПолучитьСписокШахтеров(Запрос)
	
	Если ПолучитьФункциональнуюОпцию("ИспользуетсяТрудШахтеров") Тогда 
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрСведений.Период,
		|	РегистрСведений.ФизическоеЛицо,
		|	РегистрСведений.Организация,
		|	РегистрСведений.Подразделение,
		|	РегистрСведений.Должность,
		|	РегистрСведений.ВидСобытия,
		|	РегистрСведений.ВидЗанятости
		|ПОМЕСТИТЬ ВТКадроваяИсторияДляШахтеров
		|ИЗ
		|	РегистрСведений.КадроваяИсторияСотрудников КАК РегистрСведений
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтрокиРасчета КАК СтрокиРасчета
		|	ПО РегистрСведений.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
		|	
		|ГДЕ
		|   РегистрСведений.Организация = &Организация
		|   И РегистрСведений.Период <= КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ)
		|   И РегистрСведений.ВидСобытия <> ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Увольнение)
		|   И РегистрСведений.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтрокиРасчета.ФизическоеЛицо,
		|	СтрокиРасчета.НалоговыйПериод,
		|	МАКСИМУМ(РегистрСведений.Период) КАК Период
		|ПОМЕСТИТЬ ВТМаксимальныеПериодыДляШахтеров
		|ИЗ
		|	ВТСтрокиРасчета КАК СтрокиРасчета
		|   ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВТКадроваяИсторияДляШахтеров КАК РегистрСведений
		|	ПО РегистрСведений.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
		|	 И РегистрСведений.Период = КОНЕЦПЕРИОДА(СтрокиРасчета.НалоговыйПериод, МЕСЯЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтрокиРасчета.ФизическоеЛицо,
		|	СтрокиРасчета.НалоговыйПериод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимальныеПериоды.ФизическоеЛицо,
		|	МаксимальныеПериоды.НалоговыйПериод,
		|	ИСТИНА КАК Шахтер
		|ПОМЕСТИТЬ ВТСписокШахтеров
		|ИЗ
		|	ВТМаксимальныеПериодыДляШахтеров КАК МаксимальныеПериоды
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТКадроваяИсторияДляШахтеров КАК РегистрСведений
		|	ПО РегистрСведений.Период = МаксимальныеПериоды.Период
		|	 И РегистрСведений.ФизическоеЛицо = МаксимальныеПериоды.ФизическоеЛицо
		|ГДЕ
		|	НЕ РегистрСведений.Период ЕСТЬ NULL
		|   И РегистрСведений.Должность.ЯвляетсяШахтерскойДолжностью
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТКадроваяИсторияДляШахтеров
		|;
		|УНИЧТОЖИТЬ ВТМаксимальныеПериодыДляШахтеров
		|";
		
	Иначе
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтрокиРасчета.ФизическоеЛицо,
		|	СтрокиРасчета.НалоговыйПериод,
		|	ЛОЖЬ КАК Шахтер
		|ПОМЕСТИТЬ ВТСписокШахтеров
		|ИЗ
		|	ВТСтрокиРасчета КАК СтрокиРасчета
		|";
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры	

Функция ЗаполнитьНДФЛ(ВременнаяСсылка, МенеджерВременныхТаблиц, Организация, МесяцНачисления, ПересчетНДФЛ = Ложь, ПоВсемДокументам = Ложь) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ВременнаяСсылка",ВременнаяСсылка);
	Если ПересчетНДФЛ Тогда
		Запрос.УстановитьПараметр("НачалоПериода",НачалоГода(МесяцНачисления));
		Запрос.УстановитьПараметр("КонецПериода",КонецГода(МесяцНачисления));
	Иначе	
		Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(МесяцНачисления));
		Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(МесяцНачисления));
	Конецесли;
	Запрос.УстановитьПараметр("ПериодРегистрации",НачалоМесяца(МесяцНачисления));
	Запрос.УстановитьПараметр("ДоходВоенныйСбор",ЗначенияВоенныйСбор().ВидДохода);
	Запрос.УстановитьПараметр("СтавкаВоенныйСбор",ЗначенияВоенныйСбор().ВидСтавки);
	
	Запрос.Текст = 
	   "ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	НачисленияУдержанияПоСотрудникамОбороты.ФизическоеЛицо,
		|	НачисленияУдержанияПоСотрудникамОбороты.ФизическоеЛицо.Наименование КАК ФизическоеЛицоНаименование,
		|	НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникамОбороты.Период, МЕСЯЦ) КАК Период,
		|	ВидыДоходовНДФЛ.Ссылка КАК ДоходНДФЛ,
		|	ВидыДоходовНДФЛ.Код КАК ДоходНДФЛКод,
		|	ВидыДоходовНДФЛ.ВидСтавкиВоенныйСбор КАК ВидСтавкиВоенныйСбор,
		|	НачисленияУдержанияПоСотрудникамОбороты.НалоговыйПериодНДФЛ КАК НалоговыйПериод
		|ПОМЕСТИТЬ ВТОборотыДляНДФЛ
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			МЕСЯЦ,
		|			Организация = &Организация
		|            И ФизическоеЛицо В (ВЫБРАТЬ ФизическиеЛица.ФизическоеЛицо ИЗ ВТФизическиеЛица КАК ФизическиеЛица)
		|			И НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления
		|			И НалоговыйПериодНДФЛ <> ДАТАВРЕМЯ(1, 1, 1)) КАК НачисленияУдержанияПоСотрудникамОбороты
		|  ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|  Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
		|  ПО НачисленияУдержанияПоСотрудникамОбороты.НачислениеУдержание.ДоходНДФЛ = ВидыДоходовНДФЛ.Ссылка
		|ГДЕ
		|	НачисленияУдержанияПоСотрудникамОбороты.НачислениеУдержание.ДоходНДФЛ <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
		|";
		
	Если НЕ ПоВсемДокументам Тогда
		ПоляСуммирования = Новый Массив;
		Запрос.Текст = ЗарплатаКадры.ДобавитьОтборПоРегистраторуРегистрНакопленияОбороты(Запрос.Текст, "ВременнаяСсылка",ПоляСуммирования);
	КонецЕсли;
	
	Запрос.Выполнить();	
	
	Если МесяцНачисления < ДатаИзмененияСхемыУчетаВС() Тогда 
		Запрос.Текст = 
		   "ВЫБРАТЬ 
			|	ОборотыДляНДФЛ.ФизическоеЛицо,
			|	ОборотыДляНДФЛ.ФизическоеЛицоНаименование,
			|	&ДоходВоенныйСбор КАК ДоходНДФЛ,
			|	&СтавкаВоенныйСбор КАК СтавкаВоенныйСбор,
			|	ОборотыДляНДФЛ.Период КАК НалоговыйПериод
			|ПОМЕСТИТЬ ВТОборотыДляВЗ
			|ИЗ
			|	ВТОборотыДляНДФЛ КАК ОборотыДляНДФЛ
			|";
	Иначе
		Запрос.Текст = 
		   "ВЫБРАТЬ РАЗЛИЧНЫЕ 
			|	ОборотыДляНДФЛ.ФизическоеЛицо,
			|	ОборотыДляНДФЛ.ФизическоеЛицоНаименование,
			|	ОборотыДляНДФЛ.ДоходНДФЛ.ОблагаетсяВоеннымСбором2021 КАК ДоходНДФЛ,
			|	ОборотыДляНДФЛ.ДоходНДФЛ.ОблагаетсяВоеннымСбором2021.ВидСтавкиРезидента КАК СтавкаВоенныйСбор,
			|	ОборотыДляНДФЛ.Период КАК НалоговыйПериод
			|ПОМЕСТИТЬ ВТОборотыДляВЗ
			|ИЗ
			|	ВТОборотыДляНДФЛ КАК ОборотыДляНДФЛ
			|";
	Конецесли;	
	Запрос.Выполнить();	

	ОтборыОТ = Новый Структура();
	ВыбираемыеПоляОТ = Новый Структура();
	ОтборыРС = Новый Структура();
	ВыбираемыеПоляРС = Новый Структура();
	ВыбираемыеПоляРС.Вставить("Ставка","Ставка");
	ПоляСвязей = Новый Структура();
	ПоляСвязей.Вставить("СтавкаВоенныйСбор","ВидСтавки");
	
	Запрос.Текст = ЗарплатаКадры.ЗапросВТСрезПоследнихНаВсеДаты("ВТСтавкиВоенногоСбора", "ВТОборотыДляВЗ", ОтборыОТ, ВыбираемыеПоляОТ, "НалоговыйПериод", "РегистрСведений.СтавкиНДФЛ", ОтборыРС, ВыбираемыеПоляРС,"Период", ПоляСвязей, ЛОЖЬ, ЛОЖЬ, ЛОЖЬ);
	Запрос.Выполнить();

	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОборотыДляНДФЛ.ФизическоеЛицо,
		|	ОборотыДляНДФЛ.ФизическоеЛицоНаименование,
		|	ОборотыДляНДФЛ.ДоходНДФЛ,
		|	ОборотыДляНДФЛ.ДоходНДФЛ.Код КАК ДоходНДФЛКод,
		|	ОборотыДляНДФЛ.НалоговыйПериод
		|ИЗ
		|	ВТОборотыДляНДФЛ КАК ОборотыДляНДФЛ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОборотыДляВЗ.ФизическоеЛицо,
		|	ОборотыДляВЗ.ФизическоеЛицоНаименование,
		|	ОборотыДляВЗ.ДоходНДФЛ,
		|	ОборотыДляВЗ.ДоходНДФЛ.Код,
		|	ОборотыДляВЗ.НалоговыйПериод
		|ИЗ
		|	ВТОборотыДляВЗ КАК ОборотыДляВЗ
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВТСтавкиВоенногоСбора КАК СтавкиВоенногоСбора
		|	ПО ОборотыДляВЗ.НалоговыйПериод = СтавкиВоенногоСбора.НалоговыйПериод
		|	 И ОборотыДляВЗ.СтавкаВоенныйСбор = СтавкиВоенногоСбора.СтавкаВоенныйСбор
		|ГДЕ
		|	ЕСТЬNULL(СтавкиВоенногоСбора.Ставка, 0) > 0
		|
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицоНаименование,
		|	НалоговыйПериод,
		|	ДоходНДФЛКод
		|";

	    
	   
	НДФЛ = Запрос.Выполнить().Выгрузить();   
	Возврат НДФЛ;
	
КонецФункции

Процедура РассчитатьНДФЛ(ВременнаяСсылка, НаборыЗаписей, ДанныеЗаполнения, ДокументСсылка, Организация, МесяцНачисления, ПоВсемДокументам = Истина) Экспорт

	Если ДанныеЗаполнения.НДФЛ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("МесяцНачисления",МесяцНачисления);
	Запрос.УстановитьПараметр("НДФЛ",ДанныеЗаполнения.НДФЛ);
	Запрос.УстановитьПараметр("ВременнаяСсылка",ВременнаяСсылка);
	
	ВоенныйСбор = ЗначенияВоенныйСбор();
	
	Запрос.УстановитьПараметр("ДоходВоенныйСбор",ВоенныйСбор.ВидДохода);
	Запрос.УстановитьПараметр("ДоходВоенныйСборСписок",ВоенныйСбор.ВидДоходаСписок);
	Запрос.УстановитьПараметр("СтавкаВоенныйСбор",ВоенныйСбор.ВидСтавки);
	Запрос.УстановитьПараметр("ИспользуетсяНК1578",(МесяцНачисления >= ДатаИзмененияНК1578()));
	
	Запрос.Текст = 
	   "ВЫБРАТЬ
	   |	НДФЛ.ФизическоеЛицо,
	   |	НДФЛ.ДоходНДФЛ,
	   |	НДФЛ.НалоговыйПериод
	   |ПОМЕСТИТЬ ВТСтрокиРасчета
	   |ИЗ
	   |	&НДФЛ КАК НДФЛ
	   |";
	Запрос.Выполнить();   
	
	ПолучитьСписокШахтеров(Запрос);
	
	//Запросы к данным регистров - начислениям сотрудников и удержанному НДФЛ.
	//Если не по всем документам - нужен отбор по регистратору
	Запрос.Текст = 
	   "////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	НачисленияУдержанияПоСотрудникамОбороты.ФизическоеЛицо,
	   |	НачисленияУдержанияПоСотрудникамОбороты.НачислениеУдержание.ДоходНДФЛ КАК ДоходНДФЛ,
	   |	НачисленияУдержанияПоСотрудникамОбороты.НачислениеУдержание.ВидЕСВ КАК ВидЕСВ,
	   |	НачисленияУдержанияПоСотрудникамОбороты.НалоговыйПериодНДФЛ КАК НалоговыйПериодНДФЛ,
	   |	НачисленияУдержанияПоСотрудникамОбороты.НалоговыйПериодЕСВ КАК НалоговыйПериодЕСВ,
	   |	НачисленияУдержанияПоСотрудникамОбороты.СуммаОборот КАК СуммаОборот
	   |
	   |ПОМЕСТИТЬ ВТНачисленияОбороты
	   |ИЗ
	   |	РегистрНакопления.НачисленияУдержанияПоСотрудникам.Обороты(
	   |			,
	   |			КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
	   |			,
	   |			Организация = &Организация
	   |				И (ФизическоеЛицо В
	   |					(ВЫБРАТЬ
	   |						СтрокиРасчета.ФизическоеЛицо
	   |					ИЗ
	   |						ВТСтрокиРасчета КАК СтрокиРасчета))
	   |				И НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления) КАК НачисленияУдержанияПоСотрудникамОбороты
	   |;
	   |
	   |///////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	НДФЛПоСотрудникамОборот.ФизическоеЛицо,
	   |	НДФЛПоСотрудникамОборот.ДоходНДФЛ КАК ДоходНДФЛ,
	   |	НДФЛПоСотрудникамОборот.НалоговыйПериод КАК НалоговыйПериод,
	   |	НДФЛПоСотрудникамОборот.ДоходОборот КАК ДоходДо,
	   |	НДФЛПоСотрудникамОборот.НалогОборот КАК НалогДо
	   |
	   |ПОМЕСТИТЬ ВТНДФЛПоСотрудникамОборот
	   |ИЗ
	   |	РегистрНакопления.НДФЛПоСотрудникам.Обороты(
	   |			,
	   |			КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
	   |			,
	   |			Организация = &Организация
	   |				И (ФизическоеЛицо В
	   |					(ВЫБРАТЬ
	   |						СтрокиРасчета.ФизическоеЛицо
	   |					ИЗ
	   |						ВТСтрокиРасчета КАК СтрокиРасчета))) КАК НДФЛПоСотрудникамОборот
	   |";	
	
	Если НЕ ПоВсемДокументам Тогда
		ПоляСуммирования = Новый Массив;
		ПоляСуммирования.Добавить("СуммаОборот");
		ПоляСуммирования.Добавить("ДоходДо");
		ПоляСуммирования.Добавить("НалогДо");
		Запрос.Текст = ЗарплатаКадры.ДобавитьОтборПоРегистраторуРегистрНакопленияОбороты(Запрос.Текст, "ВременнаяСсылка",ПоляСуммирования);
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Если МесяцНачисления < ДатаИзмененияСхемыУчетаВС() Тогда
		Запрос.Текст = 
		   "///////////////////////////////////////////////////////////////////////////////
		   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		   |	НачисленияУдержанияПоСотрудникамОбороты.ФизическоеЛицо,
		   |	&ДоходВоенныйСбор КАК ДоходНДФЛ,
		   |	НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникамОбороты.Период, МЕСЯЦ) КАК НалоговыйПериодНДФЛ,
		   |	НачисленияУдержанияПоСотрудникамОбороты.СуммаОборот КАК СуммаОборот
		   |
		   |ПОМЕСТИТЬ ВТНачисленияОборотыВЗ
		   |ИЗ
		   |	РегистрНакопления.НачисленияУдержанияПоСотрудникам.Обороты(
		   |			,
		   |			КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
		   |			МЕСЯЦ,
		   |			Организация = &Организация
		   |				И (ФизическоеЛицо В
		   |					(ВЫБРАТЬ
		   |						СтрокиРасчета.ФизическоеЛицо
		   |					ИЗ
		   |						ВТСтрокиРасчета КАК СтрокиРасчета))
		   |				И НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления) КАК НачисленияУдержанияПоСотрудникамОбороты
		   |ГДЕ
		   |	(НачисленияУдержанияПоСотрудникамОбороты.НачислениеУдержание.ДоходНДФЛ.ВидСтавкиВоенныйСбор = &СтавкаВоенныйСбор
		   |    ИЛИ (&ИспользуетсяНК1578 И НачисленияУдержанияПоСотрудникамОбороты.НачислениеУдержание.ДоходНДФЛ.ВидСтавкиВоенныйСбор <> ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДФЛ.НеОблагается)))
		   |
		   |";
	Иначе
		Запрос.Текст = 
		   "///////////////////////////////////////////////////////////////////////////////
		   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		   |	НачисленияУдержанияПоСотрудникамОбороты.ФизическоеЛицо,
		   |	НачисленияУдержанияПоСотрудникамОбороты.НачислениеУдержание.ДоходНДФЛ.ОблагаетсяВоеннымСбором2021 КАК ДоходНДФЛ,
		   |	НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникамОбороты.Период, МЕСЯЦ) КАК НалоговыйПериодНДФЛ,
		   |	НачисленияУдержанияПоСотрудникамОбороты.СуммаОборот КАК СуммаОборот
		   |
		   |ПОМЕСТИТЬ ВТНачисленияОборотыВЗПромежуточная
		   |ИЗ
		   |	РегистрНакопления.НачисленияУдержанияПоСотрудникам.Обороты(
		   |			,
		   |			КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
		   |			МЕСЯЦ,
		   |			Организация = &Организация
		   |				И (ФизическоеЛицо В
		   |					(ВЫБРАТЬ
		   |						СтрокиРасчета.ФизическоеЛицо
		   |					ИЗ
		   |						ВТСтрокиРасчета КАК СтрокиРасчета))
		   |				И НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления) КАК НачисленияУдержанияПоСотрудникамОбороты
		   |ГДЕ
		   |	НачисленияУдержанияПоСотрудникамОбороты.НачислениеУдержание.ДоходНДФЛ.ОблагаетсяВоеннымСбором2021 <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
		   |;
		   |
		   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		   |	НачисленияОбороты.ФизическоеЛицо,
		   |	НачисленияОбороты.ДоходНДФЛ,
		   |	НачисленияОбороты.НалоговыйПериодНДФЛ,
		   |	СУММА(НачисленияОбороты.СуммаОборот) КАК СуммаОборот
		   |
		   |ПОМЕСТИТЬ ВТНачисленияОборотыВЗ
		   |ИЗ
		   |	ВТНачисленияОборотыВЗПромежуточная КАК НачисленияОбороты
		   |СГРУППИРОВАТЬ ПО
		   |	НачисленияОбороты.ФизическоеЛицо,
		   |	НачисленияОбороты.ДоходНДФЛ,
		   |	НачисленияОбороты.НалоговыйПериодНДФЛ
		   |";
		   
	КонецЕсли;
	
	Если НЕ ПоВсемДокументам Тогда
		ПоляСуммирования = Новый Массив;
		ПоляСуммирования.Добавить("СуммаОборот");
		ПоляСуммирования.Добавить("ДоходДо");
		ПоляСуммирования.Добавить("НалогДо");
		Запрос.Текст = ЗарплатаКадры.ДобавитьОтборПоРегистраторуРегистрНакопленияОбороты(Запрос.Текст, "ВременнаяСсылка",ПоляСуммирования);
	КонецЕсли;
	
	Запрос.Выполнить();
	
	
	ОтборыОТ = Новый Структура();
	ВыбираемыеПоляОТ = Новый Структура();
	ОтборыРС = Новый Структура();
	ВыбираемыеПоляРС = Новый Структура();
	ВыбираемыеПоляРС.Вставить("ВидСтавки","ВидСтавкиНДФЛ");
	ВыбираемыеПоляРС.Вставить("Ставка","СтавкаНДФЛ");
	ВыбираемыеПоляРС.Вставить("Порог","ПорогСтавкаНДФЛ");
	ПоляСвязей = Новый Структура();
	
	Запрос.Текст = ЗарплатаКадры.ЗапросВТСрезПоследнихНаВсеДаты("ВТИсторияНормативныхВеличин", "ВТСтрокиРасчета", ОтборыОТ, ВыбираемыеПоляОТ, "НалоговыйПериод", "РегистрСведений.СтавкиНДФЛ", ОтборыРС, ВыбираемыеПоляРС,"Период", ПоляСвязей, ЛОЖЬ, ЛОЖЬ, ЛОЖЬ);
	Запрос.Выполнить();

	Запрос.Текст = 
	   //|////////////////////////////////////////////////////////////////////////////////
	   "ВЫБРАТЬ
	   |	НачисленияОбороты.ФизическоеЛицо,
	   |	НачисленияОбороты.ДоходНДФЛ,
	   |	НачисленияОбороты.НалоговыйПериодНДФЛ КАК НалоговыйПериод,
	   |	СУММА(НачисленияОбороты.СуммаОборот) КАК Доход
	   |ПОМЕСТИТЬ ВТБаза
	   |ИЗ
	   |	ВТНачисленияОбороты КАК НачисленияОбороты
	   |    ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	   |    ВТСтрокиРасчета КАК СтрокиРасчета
	   |    ПО СтрокиРасчета.ФизическоеЛицо = НачисленияОбороты.ФизическоеЛицо
	   |     И СтрокиРасчета.ДоходНДФЛ = НачисленияОбороты.ДоходНДФЛ
	   |     И СтрокиРасчета.НалоговыйПериод = НачисленияОбороты.НалоговыйПериодНДФЛ
	   |СГРУППИРОВАТЬ ПО
	   |	НачисленияОбороты.ФизическоеЛицо,
	   |	НачисленияОбороты.ДоходНДФЛ,
	   |	НачисленияОбороты.НалоговыйПериодНДФЛ
	   |;
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	НачисленияОбороты.ФизическоеЛицо,
	   |	НачисленияОбороты.ДоходНДФЛ,
	   |	НачисленияОбороты.НалоговыйПериодНДФЛ КАК НалоговыйПериод,
	   |	СУММА(НачисленияОбороты.СуммаОборот) КАК Доход
	   |ПОМЕСТИТЬ ВТБазаВЗ
	   |ИЗ
	   |	ВТНачисленияОборотыВЗ КАК НачисленияОбороты
	   |    ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	   |    ВТСтрокиРасчета КАК СтрокиРасчета
	   |    ПО СтрокиРасчета.ФизическоеЛицо = НачисленияОбороты.ФизическоеЛицо
	   |     И СтрокиРасчета.ДоходНДФЛ = НачисленияОбороты.ДоходНДФЛ
	   |     И СтрокиРасчета.НалоговыйПериод = НачисленияОбороты.НалоговыйПериодНДФЛ
	   |СГРУППИРОВАТЬ ПО
	   |	НачисленияОбороты.ФизическоеЛицо,
	   |	НачисленияОбороты.ДоходНДФЛ,
	   |	НачисленияОбороты.НалоговыйПериодНДФЛ
	   |;
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ТаблицаБаза.ФизическоеЛицо,
	   |	ТаблицаБаза.НалоговыйПериод,
	   |	СУММА(ТаблицаБаза.Доход) КАК ДоходПолный
	   |ПОМЕСТИТЬ ВТБазаПолная
	   |ИЗ
	   |	ВТБаза КАК ТаблицаБаза
	   |СГРУППИРОВАТЬ ПО
	   |	ТаблицаБаза.ФизическоеЛицо,
	   |	ТаблицаБаза.НалоговыйПериод
	   |;
	   |	   
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	СтрокиРасчета.ФизическоеЛицо,
	   |	СтрокиРасчета.ДоходНДФЛ,
	   |	СтрокиРасчета.НалоговыйПериод,
	   |	ВЫБОР
	   |	 КОГДА
	   |	  СтрокиРасчета.ДоходНДФЛ В (&ДоходВоенныйСборСписок)
	   |	 ТОГДА ЕСТЬNULL(ТаблицаБазаВЗ.Доход, 0)
	   |	 ИНАЧЕ ЕСТЬNULL(ТаблицаБаза.Доход, 0)
	   |	КОНЕЦ КАК Доход,
	   |	ЕСТЬNULL(ТаблицаБазаПолная.ДоходПолный, 0 ) КАК ДоходПолный,
	   |	ЕСТЬNULL(ТаблицаДоходНалогДо.ДоходДо, 0) КАК ДоходДо,
	   |	ЕСТЬNULL(ТаблицаДоходНалогДо.НалогДо, 0) КАК НалогДо,
	   |    ВЫБОР 
	   |     КОГДА НЕ ЕСТЬNULL(СписокШахтеров.Шахтер, ЛОЖЬ) 
	   |	  ТОГДА ВидыДоходовНДФЛ.ВидСтавкиРезидента
	   |	  ИНАЧЕ ВидыДоходовНДФЛ.ВидСтавкиШахтера
	   |	КОНЕЦ КАК ВидСтавки,
	   |    ВЫБОР 
	   |     КОГДА НЕ ЕСТЬNULL(СписокШахтеров.Шахтер, ЛОЖЬ) 
	   |	  ТОГДА ВидыДоходовНДФЛ.ВидСтавкиУвеличенная
	   |	  ИНАЧЕ ВидыДоходовНДФЛ.ВидСтавкиШахтера
	   |	КОНЕЦ КАК УвеличеннаяСтавка,
	   |    ВЫБОР 
	   |     КОГДА НЕ ЕСТЬNULL(СписокШахтеров.Шахтер, ЛОЖЬ) 
	   |	  ТОГДА ЕСТЬNULL(История1.СтавкаНДФЛ, 0)
	   |	  ИНАЧЕ ЕСТЬNULL(История3.СтавкаНДФЛ, 0)
	   |	КОНЕЦ КАК СтавкаНДФЛ,
	   |    ВЫБОР 
	   |     КОГДА НЕ ЕСТЬNULL(СписокШахтеров.Шахтер, ЛОЖЬ) 
	   |	  ТОГДА ЕСТЬNULL(История2.СтавкаНДФЛ, 0)
	   |	  ИНАЧЕ ЕСТЬNULL(История3.СтавкаНДФЛ, 0)
	   |	КОНЕЦ КАК СтавкаНДФЛУвеличенная,
	   |    ВЫБОР 
	   |     КОГДА НЕ ЕСТЬNULL(СписокШахтеров.Шахтер, ЛОЖЬ) 
	   |	  ТОГДА ЕСТЬNULL(История2.ПорогСтавкаНДФЛ, 0)
	   |	  ИНАЧЕ ЕСТЬNULL(История3.ПорогСтавкаНДФЛ, 0)
	   |	КОНЕЦ КАК ПорогСтавкаНДФЛУвеличенная
	   |ПОМЕСТИТЬ ВТСтрокиРасчетаСДанными 
	   |ИЗ
	   |	ВТСтрокиРасчета КАК СтрокиРасчета
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТСписокШахтеров КАК СписокШахтеров
	   |    ПО СтрокиРасчета.ФизическоеЛицо = СписокШахтеров.ФизическоеЛицо
	   |     И СтрокиРасчета.НалоговыйПериод = СписокШахтеров.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
	   |    ПО СтрокиРасчета.ДоходНДФЛ = ВидыДоходовНДФЛ.Ссылка
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТБаза КАК ТаблицаБаза
	   |    ПО СтрокиРасчета.ФизическоеЛицо = ТаблицаБаза.ФизическоеЛицо
	   |     И СтрокиРасчета.ДоходНДФЛ = ТаблицаБаза.ДоходНДФЛ
	   |     И СтрокиРасчета.НалоговыйПериод = ТаблицаБаза.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТБазаВЗ КАК ТаблицаБазаВЗ
	   |    ПО СтрокиРасчета.ФизическоеЛицо = ТаблицаБазаВЗ.ФизическоеЛицо
	   |     И СтрокиРасчета.ДоходНДФЛ = ТаблицаБазаВЗ.ДоходНДФЛ
	   |     И СтрокиРасчета.НалоговыйПериод = ТаблицаБазаВЗ.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТБазаПолная КАК ТаблицаБазаПолная
	   |    ПО СтрокиРасчета.ФизическоеЛицо = ТаблицаБазаПолная.ФизическоеЛицо
	   |     И СтрокиРасчета.НалоговыйПериод = ТаблицаБазаПолная.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТНДФЛПоСотрудникамОборот КАК ТаблицаДоходНалогДо
	   |    ПО СтрокиРасчета.ФизическоеЛицо = ТаблицаДоходНалогДо.ФизическоеЛицо
	   |     И СтрокиРасчета.ДоходНДФЛ = ТаблицаДоходНалогДо.ДоходНДФЛ
	   |     И СтрокиРасчета.НалоговыйПериод = ТаблицаДоходНалогДо.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТИсторияНормативныхВеличин КАК История1
	   |    ПО ВидыДоходовНДФЛ.ВидСтавкиРезидента = История1.ВидСтавкиНДФЛ
	   |     И СтрокиРасчета.НалоговыйПериод = История1.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТИсторияНормативныхВеличин КАК История2
	   |    ПО ВидыДоходовНДФЛ.ВидСтавкиУвеличенная = История2.ВидСтавкиНДФЛ
	   |     И СтрокиРасчета.НалоговыйПериод = История2.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТИсторияНормативныхВеличин КАК История3
	   |    ПО ВидыДоходовНДФЛ.ВидСтавкиШахтера = История3.ВидСтавкиНДФЛ
	   |     И СтрокиРасчета.НалоговыйПериод = История3.НалоговыйПериод
	   |	
	   |;
	   |";
	   
	Запрос.Выполнить();
	
	ПолучитьСписокЛьгот(Запрос, Организация, ПоВсемДокументам);
	
	Запрос.Текст = 
	   "////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	СтрокиРасчета.ФизическоеЛицо,
	   |	СтрокиРасчета.ДоходНДФЛ,
	   |	СтрокиРасчета.НалоговыйПериод,
	   |	СтрокиРасчета.Доход,
	   |	СтрокиРасчета.ДоходПолный,
	   |	СтрокиРасчета.ДоходДо,
	   |	СтрокиРасчета.НалогДо,
	   |    СтрокиРасчета.ВидСтавки,
	   |    СтрокиРасчета.УвеличеннаяСтавка,
	   |    СтрокиРасчета.СтавкаНДФЛ,
	   |    СтрокиРасчета.СтавкаНДФЛУвеличенная,
	   |    СтрокиРасчета.ПорогСтавкаНДФЛУвеличенная,
	   |	ЕСТЬNULL(ЛьготыСотрудников.Льгота, ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.ПустаяСсылка)) КАК Льгота,
	   |	ЕСТЬNULL(ЛьготыСотрудников.КоличествоЛьгот, 0) КАК КоличествоЛьгот,
	   |	ЕСТЬNULL(ЛьготыСотрудников.КоличествоПороговЛьгот, 0) КАК КоличествоПороговЛьгот,
	   |    ЕСТЬNULL(ЛьготыСотрудников.ПорогЛьготНДФЛ, 0) КАК ПорогЛьготНДФЛ,
	   |    ЕСТЬNULL(ЛьготыСотрудников.СтавкаЛьготНДФЛ, 0) КАК СтавкаЛьготНДФЛ,
	   |    ЕСТЬNULL(ЛьготыСотрудников.РазмерПрожиточныеМинимумы, 0) КАК РазмерПрожиточныеМинимумы,
	   |    ЕСТЬNULL(ЛьготыСотрудников.ДоходЛьготы, 0) КАК ДоходЛьготы
	   |ИЗ
	   |	ВТСтрокиРасчетаСДанными КАК СтрокиРасчета
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТЛьготыСотрудников КАК ЛьготыСотрудников
	   |	ПО ЛьготыСотрудников.НалоговыйПериод = СтрокиРасчета.НалоговыйПериод
	   |	 И ЛьготыСотрудников.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |	 И СтрокиРасчета.ДоходНДФЛ.УчитыватьНСЛ
	   |";
	
	ВыборкаНДФЛ = Запрос.Выполнить().Выбрать();	   
	
	ВыборкаЕСВ = УчетСтраховыхВзносов.ЗапросЕСВДляРасчетаНДФЛ(Запрос, ПоВсемДокументам);
	   
	   
	ДанныеЗаполнения.НДФЛ.Очистить();
	
	Пока ВыборкаНДФЛ.Следующий() Цикл
		
		СтрокаНДФЛ = ДанныеЗаполнения.НДФЛ.Добавить();
		ЗаполнитьЗначениясвойств(СтрокаНДФЛ, ВыборкаНДФЛ);
		
		
		//Данные запроса
		ДоходДо			= ВыборкаНДФЛ.ДоходДо;
		НалогДо			= ВыборкаНДФЛ.НалогДо;
		Доход			= ВыборкаНДФЛ.Доход;
		ДоходПолный		= ВыборкаНДФЛ.ДоходПолный;
		
		СтавкаНДФЛ					= ВыборкаНДФЛ.СтавкаНДФЛ;
		СтавкаНДФЛУвеличенная		= ВыборкаНДФЛ.СтавкаНДФЛУвеличенная;
		ПорогСтавкаНДФЛУвеличенная	= ВыборкаНДФЛ.ПорогСтавкаНДФЛУвеличенная;
		
		Льгота					= ВыборкаНДФЛ.Льгота;
		КоличествоЛьгот			= ВыборкаНДФЛ.КоличествоЛьгот;
		КоличествоПороговЛьгот	= ВыборкаНДФЛ.КоличествоПороговЛьгот;
		ПорогЛьготНДФЛ			= ВыборкаНДФЛ.ПорогЛьготНДФЛ;
		СтавкаЛьготНДФЛ			= ВыборкаНДФЛ.СтавкаЛьготНДФЛ;
		РазмерПМ				= ВыборкаНДФЛ.РазмерПрожиточныеМинимумы;
		ДоходЛьготы				= ВыборкаНДФЛ.ДоходЛьготы;
		
		//Учет ЕСВ 
		ВзносыВсего = 0;  //Всего учитываеться взносов для работника в этом периоде
		СуммаВзносов = 0; //в т.ч. по данному виду дохода НДФЛ
		ВыборкаЕСВ.Сбросить();
		СтуктураПоиска = Новый Структура("ФизическоеЛицо, НалоговыйПериод");
		СтуктураПоиска.ФизическоеЛицо = ВыборкаНДФЛ.ФизическоеЛицо;
		СтуктураПоиска.НалоговыйПериод = ВыборкаНДФЛ.НалоговыйПериод;
		Пока ВыборкаЕСВ.НайтиСледующий(СтуктураПоиска) Цикл
			
			Если ВыборкаЕСВ.ЧастьБазыЕСВ = 0 ИЛИ ВыборкаЕСВ.БазаЕСВ = 0 Тогда
				Продолжить;
			КонецЕсли;	
			
			К = 1;
			Если ВыборкаЕСВ.ЧастьБазыЕСВ = ВыборкаЕСВ.БазаЕСВ Тогда
				//Если весь ЕСВ данного вида относится к данному виду дохода НДФЛ - учитываем полностью
				К = 1;
			ИначеЕсли ВыборкаЕСВ.ЧастьБазыЕСВ < ВыборкаЕСВ.БазаЕСВ Тогда	
				К = ВыборкаЕСВ.ЧастьБазыЕСВ/ВыборкаЕСВ.БазаЕСВ;
			КонецЕсли;	
			
			ВзносыВсего = ВзносыВсего + К*ВыборкаЕСВ.СуммаЕСВ;
			Если ВыборкаНДФЛ.ДоходНДФЛ = ВыборкаЕСВ.ДоходНДФЛ Тогда
				СуммаВзносов = СуммаВзносов + К*ВыборкаЕСВ.СуммаЕСВ;
			КонецЕсли;	

		КонецЦикла;
		ВзносыВсего  = Окр(ВзносыВсего, 2);
		СуммаВзносов = Окр(СуммаВзносов, 2);
		
		//Расчет льгот
		СуммаЛьготы = 0;
		Если ЗначениеЗаполнено(Льгота) 
		   И ДоходЛьготы <= КоличествоПороговЛьгот * ПорогЛьготНДФЛ 
		   И Доход <> 0
		   Тогда			
			КоэфЛьготы = ?(ДоходЛьготы = 0, 0, Окр(Доход/ДоходЛьготы,5));
			СуммаЛьготы = Окр(КоличествоЛьгот * РазмерПМ * СтавкаЛьготНДФЛ * КоэфЛьготы,2);
		Иначе
				
			КоличествоЛьгот = 0;
			Льгота	= Справочники.ВидыЛьготПоНДФЛ.ПустаяСсылка();
			
		КонецЕсли;		
		
		//Расчет
		БазаНалога = Окр(Доход, 2) - СуммаЛьготы - СуммаВзносов;
		Налог = Окр(Макс(БазаНалога * СтавкаНДФЛ, 0), 5);
		
		//ст. 167.1 Налогового кодекса - если общий доход превышает 10-ти кратный размер минимальной зарплаты,
		//то к сумме превышения применяется ставка 17%.
		//Т.е. к налогу по ставке 15% (уже рассчитано) надо доначислить 2% от суммы превышения.
		//Если в месяце есть несколько видов дохода - учтем по каждому пропорционально?
		Если СтавкаНДФЛУвеличенная <> 0 И СтавкаНДФЛУвеличенная <> СтавкаНДФЛ И ДоходПолный <> 0 И (ДоходПолный <> ВзносыВсего) И Доход <> 0 Тогда
			Превышение = Макс(ДоходПолный - ВзносыВсего - ПорогСтавкаНДФЛУвеличенная,0)*БазаНалога/(ДоходПолный - ВзносыВсего);
			СтавкаПревышение = Макс(СтавкаНДФЛУвеличенная - СтавкаНДФЛ,0);
			НалогПревышение = Окр(Превышение*СтавкаПревышение,5);
			Налог = Налог + НалогПревышение;
		Иначе
			Превышение = 0;
			НалогПревышение = 0;
		КонецЕсли;
		
		Налог = Окр(Налог,2);
		
		//Запись расчетных величин
		СтрокаНДФЛ.Доход = Доход - ДоходДо;
		СтрокаНДФЛ.Налог = Налог - НалогДо;
		СтрокаНДФЛ.Льгота = ?(СуммаЛьготы = 0, "", Льгота);
		СтрокаНДФЛ.КоличествоЛьгот = КоличествоЛьгот;
		СтрокаНДФЛ.СуммаЛьготы = МИН(СуммаЛьготы, Доход);
		СтрокаНДФЛ.ДоходПолный = ДоходПолный;
		
	КонецЦикла;	
	
	СформироватьДвиженияНДФЛ(НаборыЗаписей, Ложь, Организация, МесяцНачисления, ДанныеЗаполнения.НДФЛ, Истина);
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////////
// Формирование движений

Процедура СформироватьДвиженияНДФЛ(Движения, Отказ, Организация, ПериодРегистрации, НДФЛ, ЗаписыватьДвижения = Ложь) Экспорт
	
	Если НДФЛ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого Строка Из НДФЛ Цикл
		НоваяСтрока = Движения.НДФЛПоСотрудникам.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		
		НоваяСтрока.Период = ПериодРегистрации;
		НоваяСтрока.Организация = Организация;
		
		НоваяСтрокаВзаиморасчеты = Движения.ВзаиморасчетыПоНДФЛ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаВзаиморасчеты, Строка);
		
		НоваяСтрокаВзаиморасчеты.Период = ПериодРегистрации;
		НоваяСтрокаВзаиморасчеты.ПериодВзаиморасчетов = ПериодРегистрации;
		НоваяСтрокаВзаиморасчеты.Организация = Организация;
		НоваяСтрокаВзаиморасчеты.Контрагент = Строка.ФизическоеЛицо;
		
		НоваяСтрокаВзаиморасчеты.ВидДвижения = ВидДвиженияНакопления.Приход;
		
	КонецЦикла;
	
	Движения.НДФЛПоСотрудникам.Записывать = Истина;
	Движения.ВзаиморасчетыПоНДФЛ.Записывать = Истина;
	
	
	Если ЗаписыватьДвижения Тогда
		Движения.НДФЛПоСотрудникам.Записать();
		Движения.НДФЛПоСотрудникам.Записывать = Ложь;
		Движения.ВзаиморасчетыПоНДФЛ.Записать();
		Движения.ВзаиморасчетыПоНДФЛ.Записывать = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьВзаиморасчетыПоНДФЛ(Движения, Отказ, Организация, ПериодРегистрации, СпособВыплаты, Выплата) Экспорт
	
	Для Каждого СтрокаВыплаты Из Выплата.НДФЛ Цикл
		
		Если СтрокаВыплаты.Доход <> 0 ИЛИ СтрокаВыплаты.Налог <> 0 Тогда
			
			НоваяСтрокаВзаиморасчеты = Движения.ВзаиморасчетыПоНДФЛ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаВзаиморасчеты, СтрокаВыплаты);
			
			НоваяСтрокаВзаиморасчеты.Период = Выплата.Регистратор.Дата;
			НоваяСтрокаВзаиморасчеты.Организация = Организация;
			
			НоваяСтрокаВзаиморасчеты.ВидДвижения = ВидДвиженияНакопления.Расход;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Движения.ВзаиморасчетыПоНДФЛ.Записывать = Истина;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////////
// Заполнение ведомостей

Процедура ЗапросНДФЛОчередная(Запрос, СпособВыплаты, ПараметрыЗаполнения) Экспорт
	
	Если СпособВыплаты = Справочники.ВидыВыплат.ОчереднаяПогашениеДолгов Тогда
		ФильтрПериод = "ПериодВзаиморасчетов <= &ПериодВзаиморасчетов";
	Иначе
		ФильтрПериод = "ПериодВзаиморасчетов = &ПериодВзаиморасчетов";
	КонецЕсли;	
	
	Если СпособВыплаты = Справочники.ВидыВыплат.НДФЛБезВыплатыЗарплаты Тогда
		ДоходОстаток = "0";
	Иначе
		ДоходОстаток = "ВзаиморасчетыПоНДФЛОстатки.ДоходОстаток";
	КонецЕсли;	
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВзаиморасчетыПоНДФЛОстатки.Контрагент,
	|	ВзаиморасчетыПоНДФЛОстатки.ПериодВзаиморасчетов,
	|	ВзаиморасчетыПоНДФЛОстатки.НалоговыйПериод,
	|	ВзаиморасчетыПоНДФЛОстатки.ДоходНДФЛ,
	|	ВзаиморасчетыПоНДФЛОстатки.НалогОстаток КАК Налог,
	|	"+ДоходОстаток+" КАК Доход
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыПоНДФЛ.Остатки(
	|		&Дата,
	|		Организация = &Организация
	|		И "+ФильтрПериод+"
	|		И (Контрагент В
	|			(ВЫБРАТЬ
	|				Сотрудники.ФизическоеЛицо
	|			ИЗ
	|				ВТСотрудникиПоМестуВыплаты КАК Сотрудники)
	|         ИЛИ
	|		  Контрагент В
	|			(ВЫБРАТЬ
	|				Сотрудники.Сотрудник
	|			ИЗ
	|				ВТСотрудникиПоМестуВыплаты КАК Сотрудники))
	|) КАК ВзаиморасчетыПоНДФЛОстатки
	|";
	
	
	
КонецПроцедуры	

Процедура ЗапросНДФЛКонтрагентам(Запрос, СпособВыплаты, ПараметрыЗаполнения) Экспорт
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВзаиморасчетыПоНДФЛОстатки.Контрагент,
	|	ВзаиморасчетыПоНДФЛОстатки.ПериодВзаиморасчетов,
	|	ВзаиморасчетыПоНДФЛОстатки.НалоговыйПериод,
	|	ВзаиморасчетыПоНДФЛОстатки.ДоходНДФЛ,
	|	ВзаиморасчетыПоНДФЛОстатки.НалогОстаток КАК Налог,
	|	ВзаиморасчетыПоНДФЛОстатки.ДоходОстаток КАК Доход
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыПоНДФЛ.Остатки(
	|		&Дата,
	|		Организация = &Организация
	|		И Контрагент ССЫЛКА Справочник.Контрагенты) КАК ВзаиморасчетыПоНДФЛОстатки
	|
	|";
	
КонецПроцедуры	

/////////////////////////////////////////////////////////////////////////////////////////
// Перечисление налогов

Функция ПолучитьДанныеВедомостейДляНалогов(ПлатежнаяВедомость, СчетУчета, Субконто1, Субконто2, Субконто3) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ведомость",ПлатежнаяВедомость);
	Запрос.УстановитьПараметр("ДоходВоенныйСбор",   ЗначенияВоенныйСбор().ВидДоходаСписок);
	
	Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|  СУММА(Основной.Налог) КАК Сумма
		|ПОМЕСТИТЬ ВТДанныеВедомостей
		|ИЗ Документ.ВедомостьНаВыплатуЗарплаты.НДФЛ КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И НЕ Основной.ДоходНДФЛ В (&ДоходВоенныйСбор)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.Налог) КАК Сумма
		|ИЗ Документ.ВедомостьНаВыплатуЗарплатыВБанк.НДФЛ КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И НЕ Основной.ДоходНДФЛ В (&ДоходВоенныйСбор)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.Налог) КАК Сумма
		|ИЗ Документ.ВедомостьНаВыплатуЗарплатыВКассу.НДФЛ КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И НЕ Основной.ДоходНДФЛ В (&ДоходВоенныйСбор)
		|
	// ИНАГРО ++
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.Налог) КАК Сумма
		|ИЗ Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.НДФЛ КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И НЕ Основной.ДоходНДФЛ В (&ДоходВоенныйСбор)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(ЕСТЬNULL(Основной.УдержаноНДФЛ, 0)) КАК Сумма
		|ИЗ Документ.ИНАГРО_ВедомостьРеализация.Товары КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость";
		Если ИНАГРО_ОбщийВызовСервераПовтИсп.ЕстьБСПУ() Тогда
			Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(ЕСТЬNULL(Основной.СуммаНДФЛ,0)) КАК Сумма
		|ИЗ Документ.ИНАГРО_ВедомостьВыплатПайщикам.СписокПайщиков КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		// ИНАГРО --
		|;
		|
		|ВЫБРАТЬ
		|  СУММА(ЕстьNULL(ДанныеВедомостей.Сумма,0)) КАК Сумма
		|ИЗ ВТДанныеВедомостей КАК ДанныеВедомостей";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		Возврат 0;
	ИначеЕсли Выборка.Следующий() Тогда
		Возврат Выборка.Сумма;
	КонецЕсли;	
	
КонецФункции

Функция ПолучитьДанныеВедомостейДляНалоговВоенныйСбор(ПлатежнаяВедомость, СчетУчета, Субконто1, Субконто2, Субконто3) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ведомость",ПлатежнаяВедомость);
	Запрос.УстановитьПараметр("ДоходВоенныйСбор",  ЗначенияВоенныйСбор().ВидДоходаСписок);
	
	Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|  СУММА(Основной.Налог) КАК Сумма
		|ПОМЕСТИТЬ ВТДанныеВедомостей
		|ИЗ Документ.ВедомостьНаВыплатуЗарплаты.НДФЛ КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И Основной.ДоходНДФЛ В (&ДоходВоенныйСбор)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.Налог) КАК Сумма
		|ИЗ Документ.ВедомостьНаВыплатуЗарплатыВБанк.НДФЛ КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И Основной.ДоходНДФЛ В (&ДоходВоенныйСбор)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.Налог) КАК Сумма
		|ИЗ Документ.ВедомостьНаВыплатуЗарплатыВКассу.НДФЛ КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И Основной.ДоходНДФЛ В (&ДоходВоенныйСбор)
		|
	// ИНАГРО ++
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.Налог) КАК Сумма
		|ИЗ Документ.ИНАГРО_ЗарплатаКВыплатеОрганизаций.НДФЛ КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|	И Основной.ДоходНДФЛ В (&ДоходВоенныйСбор)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(ЕСТЬNULL(Основной.УдержаноВС, 0)) КАК Сумма
		|ИЗ Документ.ИНАГРО_ВедомостьРеализация.Товары КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость";
		//|	И Основной.ДоходНДФЛ = &ДоходВоенныйСбор";
	Если ИНАГРО_ОбщийВызовСервераПовтИсп.ЕстьБСПУ() Тогда
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.УдержаноВС) КАК Сумма
		|ИЗ Документ.ИНАГРО_НачислениеПоПаям.Товары КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(Основной.УдержаноВС) КАК Сумма
		|ИЗ Документ.ИНАГРО_НачислениеДругихВыплат.Товары КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|  СУММА(ЕСТЬNULL(Основной.СуммаВС,0)) КАК Сумма
		|ИЗ Документ.ИНАГРО_ВедомостьВыплатПайщикам.СписокПайщиков КАК Основной
		|ГДЕ Основной.Ссылка = &Ведомость";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	// ИНАГРО --
		|;
		|
		|ВЫБРАТЬ
		|  СУММА(ЕстьNULL(ДанныеВедомостей.Сумма,0)) КАК Сумма
		|ИЗ ВТДанныеВедомостей КАК ДанныеВедомостей";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		Возврат 0;
	ИначеЕсли Выборка.Следующий() Тогда
		Возврат Выборка.Сумма;
	КонецЕсли;	
	
КонецФункции

/////////////////////////////////////////////////////////////////////////////////////////
// Специальные предопределенные значение

Функция ЗначенияВоенныйСбор() Экспорт
	
	ВоенныйСбор = Новый Структура();
	ВоенныйСбор.Вставить("Налог", Справочники.Налоги.ВоенныйСбор);
	ВоенныйСбор.Вставить("ВидСтавки", Перечисления.ВидыСтавокНДФЛ.ВоенныйСбор);
	ВоенныйСбор.Вставить("ВидДохода", Справочники.ВидыДоходовНДФЛ.ВоенныйСбор);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ВидСтавки", Перечисления.ВидыСтавокНДФЛ.ВоенныйСбор); 
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыДоходовНДФЛ.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
	               |ГДЕ
	               |	ВидыДоходовНДФЛ.ВидСтавкиРезидента = &ВидСтавки";
	Результат = Запрос.Выполнить().Выгрузить();
	
	ВоенныйСбор.Вставить("ВидДоходаСписок", Результат.ВыгрузитьКолонку("Ссылка"));

	Возврат ВоенныйСбор;
	
КонецФункции	

////////////////////////////////////////////////////////////////////////////////
// Важные даты

//Функция возвращает дату ввода Налогового кодекса
//
Функция ДатаВводаНК() Экспорт
	
	Возврат Дата(2011,1,1);
	
КонецФункции

//Функция возвращает дату изменения Налогового кодекса Законом №1578
//
Функция ДатаИзмененияНК1578() Экспорт
	
	Возврат Дата(2015,1,1);
	
КонецФункции
	
Функция ДатаИзмененияСхемыУчетаВС() Экспорт
	
	Возврат Дата(2021, 1, 1);
	
КонецФункции


/////////////////////////////////////////////////////////////////////////////////////////
// Прочее

Функция ОпределитьНалоговыйПериод(ПериодРегистрации, ПериодДействия, ДоходНДФЛ, КатегорияНачисления) Экспорт
	
	Возврат УчетНДФЛПовтИсп.ОпределитьНалоговыйПериод(ПериодРегистрации, ПериодДействия, ДоходНДФЛ, КатегорияНачисления);
	
КонецФункции


/////////////////////////////////////////////////////////////////////////////////////////
// Конвертации

Процедура ЗарегистрироватьДанныеВзаиморасчетовПоНДФЛ(Регистратор, Отказ, Организация, ДанныеПоНДФЛ) Экспорт
	
	Движения = Регистратор.Движения;
	Если ДанныеПоНДФЛ <> Неопределено Тогда
		
		Для Каждого Строка Из ДанныеПоНДФЛ Цикл
			
			НоваяСтрокаНДФЛ = Движения.НДФЛПоСотрудникам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаНДФЛ, Строка);
			НоваяСтрокаНДФЛ.Организация = Организация;
			
		КонецЦикла;
		
		Движения.НДФЛПоСотрудникам.Записывать = Истина;
		Движения.НДФЛПоСотрудникам.Записать();
		Движения.НДФЛПоСотрудникам.Записывать = Ложь;
		
	КонецЕсли

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "2.0.3.1";
	Обработчик.Процедура = "ЗарплатаКадрыОбновлениеСПредыдущейРедакции.КонвертироватьРНВзаиморасчетыПоНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "2.0.9.1";
	Обработчик.Процедура = "УчетНДФЛ.ИсправитьВСНеоблагается";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "2.0.14.1";
	Обработчик.Процедура = "УчетНДФЛ.ИсправитьНалоговыйПериод";
	
	// ИНАГРО ++
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "2.0.15.2";
	Обработчик.Процедура = "ЗарплатаКадрыОбновлениеСПредыдущейРедакции.КонвертироватьРНВзаиморасчетыПоНДФЛ";   
	
	/// Процедуры при переходе с 2.0 на 2.1
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия 		= "2.0.28.1";
	Обработчик.Процедура 	= "ЗарплатаКадрыОбновлениеСПредыдущейРедакции.ОбновитьДанныеРегистров_2_0_28_1"; 

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия 		= "2.0.28.1";
	Обработчик.Процедура 	= "ЗарплатаКадрыОбновлениеСПредыдущейРедакции.ЗаполнитьФлагиРегистраСхемНалогообложенияКонтрагентов"; 
	// ИНАГРО --  
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "2.1.9.1";
	Обработчик.Процедура = "УчетНДФЛ.ОбновитьВидыДоходовНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "2.1.23.1";
	Обработчик.Процедура = "УчетНДФЛ.ОбновитьВидыДоходовНДФЛДляДияСити";


КонецПроцедуры

Процедура ИсправитьВСНеоблагается() Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыДоходовНДФЛ.Ссылка
	               |ИЗ
	               |	Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
	               |ГДЕ
	               |	ВидыДоходовНДФЛ.ВидСтавкиРезидента = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДФЛ.НеОблагается)
	               |	И ВидыДоходовНДФЛ.ВидСтавкиВоенныйСбор = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДФЛ.ПустаяСсылка)
	               |	И ВидыДоходовНДФЛ.Предопределенный";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ОбъектВидДохода = Выборка.Ссылка.ПолучитьОбъект();
		ОбъектВидДохода.ВидСтавкиВоенныйСбор = Перечисления.ВидыСтавокНДФЛ.НеОблагается;
		ОбъектВидДохода.Записать();
	КонецЦикла;	
					   
	
КонецПроцедуры	

Процедура ИсправитьНалоговыйПериод() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый Менеджервременныхтаблиц();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НачислениеЗарплаты.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.НачислениеЗарплаты КАК НачислениеЗарплаты
	|ГДЕ
	|	НачислениеЗарплаты.Проведен
	|	И НачислениеЗарплаты.РучнаяКорректировка
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НДФЛПоСотрудникам.Регистратор КАК Регистратор,
	|   МАКСИМУМ(НДФЛПоСотрудникам.НалоговыйПериод) КАК НалоговыйПериод
	|ПОМЕСТИТЬ ВТДвижения
	|ИЗ
	|	РегистрНакопления.НДФЛПоСотрудникам КАК НДФЛПоСотрудникам
	|   ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ВТДокументы КАК Документы
	|   ПО НДФЛПоСотрудникам.Регистратор = Документы.Регистратор 
	|СГРУППИРОВАТЬ ПО
	|	НДФЛПоСотрудникам.Регистратор
	|;
	|
	|ВЫБРАТЬ
	|	НДФЛПоСотрудникам.Регистратор КАК Регистратор
	|ИЗ
	|	ВТДвижения КАК НДФЛПоСотрудникам
	|ГДЕ
	|   НДФЛПоСотрудникам.НалоговыйПериод = ДАТАВРЕМЯ(1,1,1)
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
		
		НаборЗаписей = РегистрыНакопления.ВзаиморасчетыПоНДФЛ.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.Прочитать();
		ТЗ = НаборЗаписей.Выгрузить();
		ТЗ.Колонки.Контрагент.Имя = "ФизическоеЛицо";
		
		Для Каждого СтрокаТЗ из ТЗ Цикл
			Если ЗначениеЗаполнено(СтрокаТЗ.ФизическоеЛицо) И ТипЗнч(СтрокаТЗ.ФизическоеЛицо) = Тип("СправочникСсылка.Сотрудники") Тогда
				СтрокаТЗ.ФизическоеЛицо = СтрокаТЗ.ФизическоеЛицо.ФизическоеЛицо;
			КонецЕсли;	
		КонецЦикла;	
		
		Попытка
			Документ = Выборка.Регистратор.ПолучитьОбъект();
			Документ.Движения.НДФЛПоСотрудникам.Очистить();
			УчетНДФЛ.ЗарегистрироватьДанныеВзаиморасчетовПоНДФЛ(Документ, Ложь, Документ.Организация, ТЗ);
		Исключение
			
		КонецПопытки;	
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьВидыДоходовНДФЛ() Экспорт

	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("Справочник","ВидыДоходовНДФЛ");
	
КонецПроцедуры	

Процедура ОбновитьВидыДоходовНДФЛДляДияСити() Экспорт

	ВидДохода = Справочники.ВидыДоходовНДФЛ.Код01.ПолучитьОбъект();
	ВидДохода.ВидСтавкиДия = Перечисления.ВидыСтавокНДФЛ.Уменьшенная;
	ВидДохода.Записать();
	
	ВидДохода = Справочники.ВидыДоходовНДФЛ.Код02.ПолучитьОбъект();
	ВидДохода.ВидСтавкиДия = Перечисления.ВидыСтавокНДФЛ.Уменьшенная;
	ВидДохода.Записать();

	ВидДохода = Справочники.ВидыДоходовНДФЛ.КодГиг.ПолучитьОбъект();
	ВидДохода.Наименование = НСтр("ru='Оплата по гиг-контрактам';uk='Оплата по гіг-контрактам'",Локализация.КодЯзыкаИнформационнойБазы());
	ВидДохода.ВидСтавкиРезидента = Перечисления.ВидыСтавокНДФЛ.Уменьшенная;
	ВидДохода.ВидСтавкиУвеличенная = Перечисления.ВидыСтавокНДФЛ.Уменьшенная;
	ВидДохода.ОблагаетсяВоеннымСбором2021 = Справочники.ВидыДоходовНДФЛ.ВоенныйСборГиг;
	ВидДохода.СпособОтраженияВРеглУчете = Справочники.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеНДФЛ;
	ВидДохода.Записать();

	ВидДохода = Справочники.ВидыДоходовНДФЛ.ВоенныйСборГиг.ПолучитьОбъект();
	ВидДохода.Наименование = НСтр("ru='Военный сбор (гиг-контракты)';uk='Військовий збір (гіг-контракти)'",Локализация.КодЯзыкаИнформационнойБазы());
	ВидДохода.ВидСтавкиРезидента = Перечисления.ВидыСтавокНДФЛ.ВоенныйСбор;
	ВидДохода.ВидСтавкиУвеличенная = Перечисления.ВидыСтавокНДФЛ.ВоенныйСбор;
	ВидДохода.ВидСтавкиВоенныйСбор = Перечисления.ВидыСтавокНДФЛ.ВоенныйСбор;
	ВидДохода.СпособОтраженияВРеглУчете = Справочники.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеВоенногоСбора;
	ВидДохода.Записать();
	
КонецПроцедуры