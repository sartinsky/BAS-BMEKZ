////////////////////////////////////////////////////////////////////////////////
// Отражение зарплаты в учете
// 
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает таблицу значений с данными для отражения в учете удержаний
//
Функция ДанныеДляОтражениеВУчетеУдержаний(ПериодРегистрации, Организация = Неопределено, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	//Создание таблицы значений с нужной структурой
	ТаблицаУдержаннаяЗарплата = НоваяТаблицаУдержаннаяЗарплата();
	
	Если РезультатыРасчетаЗарплаты <> Неопределено и РезультатыРасчетаЗарплаты.Свойство("НачисленияУдержанияПоСотрудникам") Тогда
		НачисленияУдержанияПоСотрудникам = РезультатыРасчетаЗарплаты.НачисленияУдержанияПоСотрудникам;
		ВзаиморасчетыПоУдержаниям = РезультатыРасчетаЗарплаты.ВзаиморасчетыПоУдержаниям;
	Иначе
		НачисленияУдержанияПоСотрудникам = Неопределено;
		ВзаиморасчетыПоУдержаниям = Неопределено;
	КонецЕсли;
	
	ЗаполнитьТаблицуУдержаннаяЗарплата(ТаблицаУдержаннаяЗарплата, ПериодРегистрации, Организация, НачисленияУдержанияПоСотрудникам, ВзаиморасчетыПоУдержаниям);

	Возврат ТаблицаУдержаннаяЗарплата;
	
КонецФункции

Функция ДанныеДляОтражениеВУчетеНДФЛ(ПериодРегистрации, Организация = Неопределено, РезультатыРасчетаЗарплаты = Неопределено) Экспорт
	
	//Создание таблицы значений с нужной структурой
	ТаблицаНДФЛ = НоваяТаблицаНДФЛ();
	
	ДанныеНДФЛ= Новый Структура;
	ДанныеНДФЛ.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
	ДанныеНДФЛ.Вставить("ТаблицаНДФЛ", ТаблицаНДФЛ);
	
	Если РезультатыРасчетаЗарплаты <> Неопределено и РезультатыРасчетаЗарплаты.Свойство("НДФЛПоСотрудникам") Тогда
		НДФЛПоСотрудникам = РезультатыРасчетаЗарплаты.НДФЛПоСотрудникам;
		ВзаиморасчетыПоУдержаниям = РезультатыРасчетаЗарплаты.ВзаиморасчетыПоУдержаниям;
	Иначе
		НДФЛПоСотрудникам = Неопределено;
		ВзаиморасчетыПоУдержаниям = Неопределено;
	КонецЕсли;
	
	ЗаполнитьТаблицуНДФЛ(ДанныеНДФЛ, ПериодРегистрации, Организация, НДФЛПоСотрудникам, ВзаиморасчетыПоУдержаниям);

	Возврат ДанныеНДФЛ;
	
КонецФункции

Функция ДанныеДляОтражениеВУчетеНачислений(ПериодРегистрации, Организация = Неопределено, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	//Создание таблицы значений с нужной структурой
	ТаблицаНачислений = НоваяТаблицаНачислений();
	
	Если РезультатыРасчетаЗарплаты <> Неопределено и РезультатыРасчетаЗарплаты.Свойство("НачисленияУдержанияПоСотрудникам") Тогда
		НачисленияУдержанияПоСотрудникам = РезультатыРасчетаЗарплаты.НачисленияУдержанияПоСотрудникам;
	Иначе
		НачисленияУдержанияПоСотрудникам = Неопределено;
	КонецЕсли;
	
	ЗаполнитьТаблицуНачислений(ТаблицаНачислений, ПериодРегистрации, Организация, НачисленияУдержанияПоСотрудникам);

	Возврат ТаблицаНачислений;


КонецФункции

Функция ДанныеДляОтражениеВУчетеВзносов(ПериодРегистрации, Организация = Неопределено, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	//Создание таблицы значений с нужной структурой
	ТаблицаВзносов = НоваяТаблицаСтраховыеВзносы();
	
	ДанныеВзносов = Новый Структура;
	ДанныеВзносов.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
	ДанныеВзносов.Вставить("ТаблицаВзносов", ТаблицаВзносов);
	
	Если РезультатыРасчетаЗарплаты <> Неопределено и РезультатыРасчетаЗарплаты.Свойство("ЕСВПоСотрудникам") Тогда
		ЕСВПоСотрудникам = РезультатыРасчетаЗарплаты.ЕСВПоСотрудникам;
	Иначе
		ЕСВПоСотрудникам = Неопределено;
	КонецЕсли;
	
	ЗаполнитьДанныеВзносов(ДанныеВзносов, ПериодРегистрации, Организация, ЕСВПоСотрудникам);

	Возврат ДанныеВзносов;

КонецФункции

Функция ДанныеДляОтражениеВУчетеЕСВ(ПериодРегистрации, Организация = Неопределено, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	//Создание таблицы значений с нужной структурой
	ТаблицаВзносов = НоваяТаблицаЕСВ();
	
	ДанныеВзносов = Новый Структура;
	ДанныеВзносов.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
	ДанныеВзносов.Вставить("ТаблицаВзносов", ТаблицаВзносов);
	
	Если РезультатыРасчетаЗарплаты <> Неопределено и РезультатыРасчетаЗарплаты.Свойство("ЕСВПоСотрудникам") Тогда
		ЕСВПоСотрудникам = РезультатыРасчетаЗарплаты.ЕСВПоСотрудникам;
		ВзаиморасчетыПоУдержаниям = РезультатыРасчетаЗарплаты.ВзаиморасчетыПоУдержаниям;
	Иначе
		ЕСВПоСотрудникам = Неопределено;
		ВзаиморасчетыПоУдержаниям = Неопределено;
	КонецЕсли;
	
	ЗаполнитьДанныеЕСВ(ДанныеВзносов, ПериодРегистрации, Организация, ЕСВПоСотрудникам, ВзаиморасчетыПоУдержаниям);

	Возврат ДанныеВзносов;

КонецФункции 

// Функция формирует структуру с данными отражения зарплаты в учете
//
// Параметры
//  ПериодРегистрации – тип дата, первое число месяца
//  Организация, тип СправочникСсылка.Организации
//  РезультатыРасчетаЗарплаты - Структура, ключ - имя регистра, значение - таблица значений с движениями документа
//						это источник данных, если Неопределено, тогда источник данных - движения регистров
//
// Возвращаемое значение
// 		Структура ДанныеДляОтражения
//			Ключ - имя таблицы, соответствует именам разделов данных
//			Значение - таблица значений
//
Функция ДанныеДляОтраженияЗарплатыВУчете(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты = Неопределено) Экспорт
	
	ТаблицаНачислений = ДанныеДляОтражениеВУчетеНачислений(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	ДанныеВзносов     = ДанныеДляОтражениеВУчетеВзносов(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	ТаблицаНачисленныйНДФЛ    = ДанныеДляОтражениеВУчетеНДФЛ(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	ТаблицаУдержаннаяЗарплата = ДанныеДляОтражениеВУчетеУдержаний(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
				
	ДанныеДляОтражения = Новый Структура;
	ДанныеДляОтражения.Вставить("НачисленнаяЗарплата", ТаблицаНачислений);
	ДанныеДляОтражения.Вставить("ДанныеВзносов", ДанныеВзносов);
	ДанныеДляОтражения.Вставить("НачисленныйНДФЛ", ТаблицаНачисленныйНДФЛ);
	ДанныеДляОтражения.Вставить("УдержаннаяЗарплата", ТаблицаУдержаннаяЗарплата);
	
	Возврат ДанныеДляОтражения;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция РаспределитьТаблицуПропорциональноТаблицеКоэффициентов(ИсходнаяТаблица, ИмяПоляСумма, ТаблицаКоэффициентов, ИмяПоляКоэффициент, ПоляРазрез, ПоляСвязи, Точность = 2) Экспорт
	
	//Итоговая таблица повторяет структуру исходной таблицы плюс колонки из таблицы коэффициентов, которые указаны как разрезы
	Результат = ИсходнаяТаблица.СкопироватьКолонки();
	Для Каждого ИмяКолонки из ПоляРазрез Цикл
		Колонка = ТаблицаКоэффициентов.Колонки.Найти(ИмяКолонки);
		Результат.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения, Колонка.Заголовок);
	КонецЦикла;	
	
	//Индексация таблицы коэффициентов для быстрого поиска
	Для Каждого Поле из ПоляСвязи Цикл
		ТаблицаКоэффициентов.Индексы.Добавить(Поле.Значение);
	КонецЦикла;
	
	Для Каждого СтрокаИсходнаяТаблица Из ИсходнаяТаблица Цикл
		//Отбор по структуре полей связи
		Отбор = Новый Структура();
		Для Каждого Поле из ПоляСвязи Цикл
			Отбор.Вставить(Поле.Значение, СтрокаИсходнаяТаблица[Поле.Ключ]);
		КонецЦикла;
		
		//Поиск в таблице коэффициентов
		СтрокиКоэффициентов = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
		Если СтрокиКоэффициентов = Неопределено Тогда
			//Ничего не найдено, просто дублируем строку
			СтрокаРезультат = Результат.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультат,СтрокаИсходнаяТаблица);
			Продолжить;
		КонецЕсли;
		
		//Распределение по коэффициентам
		Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиКоэффициентов,ИмяПоляКоэффициент);
		РезультатыРаспределения = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаИсходнаяТаблица[ИмяПоляСумма], Коэффициенты, Точность);
		
		Если РезультатыРаспределения = Неопределено Тогда
			//Не получилось
			СтрокаРезультат = Результат.Добавить();
			//Основные поля из исходной таблицы
			ЗаполнитьЗначенияСвойств(СтрокаРезультат, СтрокаИсходнаяТаблица);
			Продолжить;
		КонецЕсли;
		
		//Если строк коэффициентов нет - оставляем исходную строку
		Если СтрокиКоэффициентов.Количество() = 0 Тогда
			СтрокаРезультат = Результат.Добавить();
			//Основные поля из исходной таблицы
			ЗаполнитьЗначенияСвойств(СтрокаРезультат, СтрокаИсходнаяТаблица);
		КонецЕсли;	
		
		Индекс = 0;
		Для Каждого СтрокаКоэффициентов Из СтрокиКоэффициентов Цикл
			СтрокаРезультат = Результат.Добавить();
			//Основные поля из исходной таблицы
			ЗаполнитьЗначенияСвойств(СтрокаРезультат, СтрокаИсходнаяТаблица);
			//Поля разрезов из таблицы коэффициентов
			Для Каждого ИмяКолонки из ПоляРазрез Цикл
				СтрокаРезультат[ИмяКолонки] = СтрокаКоэффициентов[ИмяКолонки];
			КонецЦикла;
			//Поле суммы из результатов распределения
			СтрокаРезультат[ИмяПоляСумма] = РезультатыРаспределения[Индекс];
			Индекс = Индекс + 1;
		КонецЦикла;
	КонецЦикла;	
	
	Возврат Результат
	
КонецФункции	

// Процедура заполняет таблицу значений ТаблицаУдержаннаяЗарплата
Процедура ЗаполнитьТаблицуУдержаннаяЗарплата(ТаблицаУдержаннаяЗарплата, ПериодРегистрации, Организация, НачисленияУдержанияПоСотрудникам, ВзаиморасчетыПоУдержаниям) 
	
	ЕстьДанныеПоУдержаниям = НачисленияУдержанияПоСотрудникам <> Неопределено;
	ПоВсемОрганизациям = (Организация = Неопределено);
	
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	// Создание таблицы ВТУдержанияПоСотрудникам
	Если ЕстьДанныеПоУдержаниям Тогда
		
		НачисленияУдержанияПоСотрудникам.Свернуть("Организация, Сотрудник, ФизическоеЛицо, Подразделение, НачислениеУдержание, Контрагент, ДокументОснование", "Сумма");
		
		Запрос.УстановитьПараметр("НачисленияУдержанияПоСотрудникам", НачисленияУдержанияПоСотрудникам);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачисленияУдержанияПоСотрудникам.Организация,
		|	НачисленияУдержанияПоСотрудникам.Сотрудник,
		|	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо,
		|	НачисленияУдержанияПоСотрудникам.Подразделение,
		|	НачисленияУдержанияПоСотрудникам.НачислениеУдержание,
		|	НачисленияУдержанияПоСотрудникам.Контрагент,
		|	НачисленияУдержанияПоСотрудникам.ДокументОснование,
		|	НачисленияУдержанияПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТНачисленияУдержанияПоСотрудникам
		|ИЗ
		|	&НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачисленияУдержанияПоСотрудникам.Организация,
		|	НачисленияУдержанияПоСотрудникам.Сотрудник,
		|	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо,
		|	НачисленияУдержанияПоСотрудникам.Подразделение,
		|	НачисленияУдержанияПоСотрудникам.НачислениеУдержание,
		|	НачисленияУдержанияПоСотрудникам.Контрагент,
		|	НачисленияУдержанияПоСотрудникам.ДокументОснование,
		|	НачисленияУдержанияПоСотрудникам.Сумма
		|ИЗ
		|	ВТНачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
		|ГДЕ
		|	НачисленияУдержанияПоСотрудникам.НачислениеУдержание ССЫЛКА ПланВидовРасчета.Удержания
		|";

		
		ТаблицаУдержаний = Запрос.Выполнить().Выгрузить();
		
		ПоляРазрез = Новый Массив();
		ПоляРазрез.Добавить("СчетУчета");
		ПоляСвязи = Новый Структура();
		ПоляСвязи.Вставить("Организация","Организация");
		ПоляСвязи.Вставить("ФизическоеЛицо","ФизическоеЛицо");
		ПоляСвязи.Вставить("НачислениеУдержание","ВидУдержания");
		
		ТаблицаРаспределения = РаспределитьТаблицуПропорциональноТаблицеКоэффициентов(ТаблицаУдержаний, "Сумма", ВзаиморасчетыПоУдержаниям, "СуммаВзаиморасчетов", ПоляРазрез, ПоляСвязи);
		ТаблицаРаспределения.Свернуть("Организация, Сотрудник, ФизическоеЛицо, Подразделение, НачислениеУдержание, Контрагент, ДокументОснование, СчетУчета", "Сумма");

		Запрос.УстановитьПараметр("УдержанияПоСотрудникам", ТаблицаРаспределения);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УдержанияПоСотрудникам.Организация,
		|	УдержанияПоСотрудникам.Сотрудник,
		|	УдержанияПоСотрудникам.ФизическоеЛицо,
		|	УдержанияПоСотрудникам.Подразделение,
		|	УдержанияПоСотрудникам.НачислениеУдержание,
		|	УдержанияПоСотрудникам.Контрагент,
		|	УдержанияПоСотрудникам.ДокументОснование,
		|	УдержанияПоСотрудникам.СчетУчета,
		|	УдержанияПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТУдержанияПоСотрудникам
		|ИЗ
		|	&УдержанияПоСотрудникам КАК УдержанияПоСотрудникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УдержанияПоСотрудникам.Организация,
		|	УдержанияПоСотрудникам.Сотрудник,
		|	УдержанияПоСотрудникам.ФизическоеЛицо,
		|	УдержанияПоСотрудникам.Подразделение,
		|	УдержанияПоСотрудникам.НачислениеУдержание,
		|	УдержанияПоСотрудникам.Контрагент,
		|	УдержанияПоСотрудникам.ДокументОснование,
		|	УдержанияПоСотрудникам.СчетУчета,
		|	УдержанияПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТУдержания
		|ИЗ
		|	ВТУдержанияПоСотрудникам КАК УдержанияПоСотрудникам
		|";
		
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПоВсемОрганизациям", ПоВсемОрганизациям);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Удержания.Организация,
		|	Удержания.Сотрудник КАК Сотрудник,
		|	Удержания.ФизическоеЛицо,
		|	Удержания.Подразделение,
		|	Удержания.НачислениеУдержание,
		|	Удержания.ДатаНачала,
		|	Удержания.ДатаОкончания,
		|	Удержания.Контрагент,
		|	Удержания.ДокументОснование,
		|	Удержания.Сумма
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК Удержания
		|ГДЕ
		|	(&ПоВсемОрганизациям
		|			ИЛИ Удержания.Организация = &Организация)
		|	И НАЧАЛОПЕРИОДА(Удержания.Период, МЕСЯЦ) = &ПериодРегистрации
		|	И Удержания.НачислениеУдержание ССЫЛКА ПланВидовРасчета.Удержания
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВзаиморасчетыПоУдержаниям.Организация,
		|	ВзаиморасчетыПоУдержаниям.ФизическоеЛицо,
		|	ВзаиморасчетыПоУдержаниям.ВидУдержания,
		|	ВзаиморасчетыПоУдержаниям.СчетУчета,
		|	ВзаиморасчетыПоУдержаниям.СуммаВзаиморасчетовОборот КАК СуммаВзаиморасчетов
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыПоУдержаниям.Обороты(НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),, (&ПоВсемОрганизациям ИЛИ Организация = &Организация) И (КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийВзаиморасчетыСРаботникамиОрганизаций.Удержания))) КАК ВзаиморасчетыПоУдержаниям
		|";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		ТаблицаУдержаний = РезультатЗапроса[0].Выгрузить();
		ТаблицаВзаиморасчетыПоУдержаниям = РезультатЗапроса[1].Выгрузить();
		
		Запрос.Выполнить();

		ПоляРазрез = Новый Массив();
		ПоляРазрез.Добавить("СчетУчета");
		ПоляСвязи = Новый Структура();
		ПоляСвязи.Вставить("Организация","Организация");
		ПоляСвязи.Вставить("ФизическоеЛицо","ФизическоеЛицо");
		ПоляСвязи.Вставить("НачислениеУдержание","ВидУдержания");
		
		ТаблицаРаспределения = РаспределитьТаблицуПропорциональноТаблицеКоэффициентов(ТаблицаУдержаний, "Сумма", ТаблицаВзаиморасчетыПоУдержаниям, "СуммаВзаиморасчетов", ПоляРазрез, ПоляСвязи);
		ТаблицаРаспределения.Свернуть("Организация, Сотрудник, ФизическоеЛицо, Подразделение, НачислениеУдержание, Контрагент, ДокументОснование, СчетУчета", "Сумма");

		Запрос.УстановитьПараметр("УдержанияПоСотрудникам", ТаблицаРаспределения);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	УдержанияПоСотрудникам.Организация,
		|	УдержанияПоСотрудникам.Сотрудник,
		|	УдержанияПоСотрудникам.ФизическоеЛицо,
		|	УдержанияПоСотрудникам.Подразделение,
		|	УдержанияПоСотрудникам.НачислениеУдержание,
		|	УдержанияПоСотрудникам.Контрагент,
		|	УдержанияПоСотрудникам.ДокументОснование,
		|	УдержанияПоСотрудникам.СчетУчета,
		|	УдержанияПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТУдержанияПоСотрудникам
		|ИЗ
		|	&УдержанияПоСотрудникам КАК УдержанияПоСотрудникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УдержанияПоСотрудникам.Организация,
		|	УдержанияПоСотрудникам.Сотрудник,
		|	УдержанияПоСотрудникам.ФизическоеЛицо,
		|	УдержанияПоСотрудникам.Подразделение,
		|	УдержанияПоСотрудникам.НачислениеУдержание,
		|	УдержанияПоСотрудникам.Контрагент,
		|	УдержанияПоСотрудникам.ДокументОснование,
		|	УдержанияПоСотрудникам.СчетУчета,
		|	УдержанияПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТУдержания
		|ИЗ
		|	ВТУдержанияПоСотрудникам КАК УдержанияПоСотрудникам
		|";
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	ОтражениеЗарплатыВУчетеВнутренний.СоздатьВТУдержанияВидОперации(МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.Организация КАК Организация,
	|	Удержания.Сотрудник КАК Сотрудник,
	|	Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Удержания.Подразделение КАК Подразделение,
	|	УдержанияВидОперации.ВидОперации КАК ВидОперации,
	|	Удержания.НачислениеУдержание КАК Удержание,
	|	Удержания.Контрагент КАК Контрагент,
	|	Удержания.ДокументОснование КАК ДокументОснование,
	|	Удержания.СчетУчета КАК СчетУчета,
	|	СУММА(Удержания.Сумма) КАК Сумма
	|ИЗ
	|	ВТУдержания КАК Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержанияВидОперации КАК УдержанияВидОперации
	|		ПО Удержания.НачислениеУдержание = УдержанияВидОперации.НачислениеУдержание
	|
	|СГРУППИРОВАТЬ ПО
	|	Удержания.Организация,
	|	Удержания.Сотрудник,
	|	Удержания.ФизическоеЛицо,
	|	Удержания.Подразделение,
	|	УдержанияВидОперации.ВидОперации,
	|	Удержания.НачислениеУдержание,
	|	Удержания.Контрагент,
	|	Удержания.ДокументОснование,
	|	Удержания.СчетУчета
	|
	|ИМЕЮЩИЕ
	|	СУММА(Удержания.Сумма) <> 0";
	
	Результат = Запрос.Выполнить().Выгрузить();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ТаблицаУдержаннаяЗарплата);
	
КонецПроцедуры

// Процедура заполняет таблицу значений ТаблицаНДФЛ
Процедура ЗаполнитьТаблицуНДФЛ(ДанныеНДФЛ, ПериодРегистрации, Организация, НДФЛПоСотрудникам, ВзаиморасчетыПоУдержаниям)

	ЕстьДанныеПоНДФЛ = НДФЛПоСотрудникам <> Неопределено;
	ПоВсемОрганизациям = (Организация = Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеНДФЛ.МенеджерВременныхТаблиц;
	
	Если ЕстьДанныеПоНДФЛ Тогда
		
		НДФЛПоСотрудникам.Свернуть("Организация, ФизическоеЛицо, ДоходНДФЛ", "Налог");
		
		ПоляРазрез = Новый Массив();
		ПоляРазрез.Добавить("СчетУчета");
		ПоляСвязи = Новый Структура();
		ПоляСвязи.Вставить("Организация","Организация");
		ПоляСвязи.Вставить("ФизическоеЛицо","ФизическоеЛицо");
		ПоляСвязи.Вставить("ДоходНДФЛ","ВидУдержания");
		
		ТаблицаРаспределения = РаспределитьТаблицуПропорциональноТаблицеКоэффициентов(НДФЛПоСотрудникам, "Налог", ВзаиморасчетыПоУдержаниям, "СуммаВзаиморасчетов", ПоляРазрез, ПоляСвязи);
		ТаблицаРаспределения.Свернуть("Организация, ФизическоеЛицо, ДоходНДФЛ, СчетУчета", "Налог");
		
		Запрос.УстановитьПараметр("НДФЛПоСотрудникам", ТаблицаРаспределения);
		Запрос.УстановитьПараметр("ВЗ",УчетНДФЛ.ЗначенияВоенныйСбор().ВидДоходаСписок);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДФЛПоСотрудникам.Организация,
		|	НДФЛПоСотрудникам.ФизическоеЛицо,
		|	НДФЛПоСотрудникам.ДоходНДФЛ,
		|	НДФЛПоСотрудникам.СчетУчета,
		|	НДФЛПоСотрудникам.Налог
		|ПОМЕСТИТЬ ВТНДФЛПоСотрудникам
		|ИЗ
		|	&НДФЛПоСотрудникам КАК НДФЛПоСотрудникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛПоСотрудникам.Организация,
		|	НДФЛПоСотрудникам.ФизическоеЛицо,
		|	НДФЛПоСотрудникам.ДоходНДФЛ,
		|	НДФЛПоСотрудникам.СчетУчета,
		|	НДФЛПоСотрудникам.Налог КАК Сумма,
		|	ВЫБОР
		|		КОГДА НДФЛПоСотрудникам.ДоходНДФЛ В (&ВЗ)
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ВоенныйСбор)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛ) 
		|	КОНЕЦ КАК ВидОперации
		|ПОМЕСТИТЬ ВТТаблицаНДФЛ
		|ИЗ
		|	ВТНДФЛПоСотрудникам КАК НДФЛПоСотрудникам
		|";
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПоВсемОрганизациям", ПоВсемОрганизациям);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДФЛПоСотрудникам.Организация КАК Организация,
		|	НДФЛПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НДФЛПоСотрудникам.ДоходНДФЛ КАК ДоходНДФЛ,
		|	НДФЛПоСотрудникам.НалогОборот КАК Налог
		|ИЗ
		|	РегистрНакопления.НДФЛПоСотрудникам.Обороты(НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ) , Запись,(&ПоВсемОрганизациям ИЛИ Организация = &Организация)) КАК НДФЛПоСотрудникам
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВзаиморасчетыПоУдержаниям.Организация,
		|	ВзаиморасчетыПоУдержаниям.ФизическоеЛицо,
		|	ВзаиморасчетыПоУдержаниям.ВидУдержания,
		|	ВзаиморасчетыПоУдержаниям.СчетУчета,
		|	ВзаиморасчетыПоУдержаниям.СуммаВзаиморасчетовОборот КАК СуммаВзаиморасчетов
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыПоУдержаниям.Обороты(НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),, (&ПоВсемОрганизациям ИЛИ Организация = &Организация) И (КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийВзаиморасчетыСРаботникамиОрганизаций.НДФЛ))) КАК ВзаиморасчетыПоУдержаниям
		|";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		НДФЛПоСотрудникам = РезультатЗапроса[0].Выгрузить();
		ТаблицаВзаиморасчетыПоУдержаниям = РезультатЗапроса[1].Выгрузить();
		
		ПоляРазрез = Новый Массив();
		ПоляРазрез.Добавить("СчетУчета");
		ПоляСвязи = Новый Структура();
		ПоляСвязи.Вставить("Организация","Организация");
		ПоляСвязи.Вставить("ФизическоеЛицо","ФизическоеЛицо");
		ПоляСвязи.Вставить("ДоходНДФЛ","ВидУдержания");
		
		ТаблицаРаспределения = РаспределитьТаблицуПропорциональноТаблицеКоэффициентов(НДФЛПоСотрудникам, "Налог", ТаблицаВзаиморасчетыПоУдержаниям, "СуммаВзаиморасчетов", ПоляРазрез, ПоляСвязи);
		ТаблицаРаспределения.Свернуть("Организация, ФизическоеЛицо, ДоходНДФЛ, СчетУчета", "Налог");
		
		Запрос.УстановитьПараметр("НДФЛПоСотрудникам", ТаблицаРаспределения);
		Запрос.УстановитьПараметр("ВЗ",УчетНДФЛ.ЗначенияВоенныйСбор().ВидДоходаСписок);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДФЛПоСотрудникам.Организация,
		|	НДФЛПоСотрудникам.ФизическоеЛицо,
		|	НДФЛПоСотрудникам.ДоходНДФЛ,
		|	НДФЛПоСотрудникам.СчетУчета,
		|	НДФЛПоСотрудникам.Налог
		|ПОМЕСТИТЬ ВТНДФЛПоСотрудникам
		|ИЗ
		|	&НДФЛПоСотрудникам КАК НДФЛПоСотрудникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НДФЛПоСотрудникам.Организация,
		|	НДФЛПоСотрудникам.ФизическоеЛицо,
		|	НДФЛПоСотрудникам.ДоходНДФЛ,
		|	НДФЛПоСотрудникам.СчетУчета,
		|	НДФЛПоСотрудникам.Налог КАК Сумма,
		|	ВЫБОР
		|		КОГДА НДФЛПоСотрудникам.ДоходНДФЛ В (&ВЗ)
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ВоенныйСбор)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛ) 
		|	КОНЕЦ КАК ВидОперации
		|ПОМЕСТИТЬ ВТТаблицаНДФЛ
		|ИЗ
		|	ВТНДФЛПоСотрудникам КАК НДФЛПоСотрудникам
		|";
		Запрос.Выполнить();		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.Организация,
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.ДоходНДФЛ,
	|	ТаблицаНДФЛ.СчетУчета,
	|	ТаблицаНДФЛ.Сумма,
	|	ТаблицаНДФЛ.ВидОперации
	|ИЗ
	|	ВТТаблицаНДФЛ КАК ТаблицаНДФЛ
	|";
	
	Результат = Запрос.Выполнить().Выгрузить();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ДанныеНДФЛ.ТаблицаНДФЛ);

КонецПроцедуры

Процедура ЗаполнитьТаблицуНачислений(ТаблицаНачислений, ПериодРегистрации, Организация, НачисленияУдержанияПоСотрудникам)

	ЕстьДанныеПоНачислениям = НачисленияУдержанияПоСотрудникам <> Неопределено;
	ПоВсемОрганизациям = (Организация = Неопределено);

	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	Если ЕстьДанныеПоНачислениям Тогда
		
		Запрос.УстановитьПараметр("НачисленияУдержанияПоСотрудникам", НачисленияУдержанияПоСотрудникам);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачисленияУдержанияПоСотрудникам.Организация,
		|	НачисленияУдержанияПоСотрудникам.Сотрудник КАК Сотрудник,
		|	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо,
		|	НачисленияУдержанияПоСотрудникам.Подразделение,
		|	НачисленияУдержанияПоСотрудникам.ПериодДействия,
		|	НачисленияУдержанияПоСотрудникам.НачислениеУдержание,
		|	НачисленияУдержанияПоСотрудникам.ДатаНачала,
		|	НачисленияУдержанияПоСотрудникам.ДатаОкончания,
		|	НачисленияУдержанияПоСотрудникам.НалоговыйПериодЕСВ,
		|	НачисленияУдержанияПоСотрудникам.НалоговыйПериодНДФЛ,
		|	НачисленияУдержанияПоСотрудникам.ДокументОснование,
		|	НачисленияУдержанияПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТНачисленияУдержанияПоСотрудникам
		|ИЗ
		|	&НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачисленияУдержанияПоСотрудникам.Организация,
		|	НачисленияУдержанияПоСотрудникам.Сотрудник,
		|	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо,
		|	НачисленияУдержанияПоСотрудникам.Подразделение,
		|	НачисленияУдержанияПоСотрудникам.ПериодДействия,
		|	НачисленияУдержанияПоСотрудникам.НачислениеУдержание,
		|	НачисленияУдержанияПоСотрудникам.ДатаНачала,
		|	НачисленияУдержанияПоСотрудникам.ДатаОкончания,
		|	НачисленияУдержанияПоСотрудникам.НалоговыйПериодЕСВ,
		|	НачисленияУдержанияПоСотрудникам.НалоговыйПериодНДФЛ,
		|	Начисления.ВидЕСВ,
		|	НачисленияУдержанияПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ
		|	ВТНачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
		|   ЛЕВОЕ СОЕДИНЕНИЕ
		|   ПланВидовРасчета.Начисления КАК Начисления
		|   ПО НачисленияУдержанияПоСотрудникам.НачислениеУдержание = Начисления.Ссылка 
		|ГДЕ
		|	НачисленияУдержанияПоСотрудникам.НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТНачисленияУдержанияПоСотрудникам";
		
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПоВсемОрганизациям", ПоВсемОрганизациям);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НачисленияУдержанияПоСотрудникам.Организация,
		|	НачисленияУдержанияПоСотрудникам.Сотрудник КАК Сотрудник,
		|	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо,
		|	НачисленияУдержанияПоСотрудникам.Подразделение,
		|	НачисленияУдержанияПоСотрудникам.НачислениеУдержание,
		|	НачисленияУдержанияПоСотрудникам.НалоговыйПериодЕСВ,
		|	Начисления.ВидЕСВ,
		|	НачисленияУдержанияПоСотрудникам.СуммаОборот КАК Сумма
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам.Обороты(НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),,(&ПоВсемОрганизациям ИЛИ Организация = &Организация) И (НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления)) КАК НачисленияУдержанияПоСотрудникам
		|   ЛЕВОЕ СОЕДИНЕНИЕ
		|   ПланВидовРасчета.Начисления КАК Начисления
		|   ПО НачисленияУдержанияПоСотрудникам.НачислениеУдержание = Начисления.Ссылка 
		|";
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	ОтражениеЗарплатыВУчетеВнутренний.СоздатьВТНачисленияВидОперации(МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Организация КАК Организация,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.НалоговыйПериодЕСВ,
	|	НачисленияВидОперации.ВидОперации КАК ВидОперации,
	|	Начисления.НачислениеУдержание КАК Начисление,
	|	Начисления.ВидЕСВ,
	|	СУММА(Начисления.Сумма) КАК Сумма
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияВидОперации КАК НачисленияВидОперации
	|		ПО Начисления.НачислениеУдержание = НачисленияВидОперации.НачислениеУдержание
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.НачислениеУдержание,
	|	Начисления.НалоговыйПериодЕСВ,
	|	Начисления.ВидЕСВ,
	|	НачисленияВидОперации.ВидОперации
	|
	|ИМЕЮЩИЕ
	|	СУММА(Начисления.Сумма) <> 0";
	
	Результат = Запрос.Выполнить().Выгрузить();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ТаблицаНачислений);
	
КонецПроцедуры

Процедура ЗаполнитьДанныеВзносов(ДанныеВзносов, ПериодРегистрации, Организация, ЕСВПоСотрудникам)

	ЕстьДанныеПоВзносам = ЕСВПоСотрудникам <> Неопределено;
	ПоВсемОрганизациям = (Организация = Неопределено);

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеВзносов.МенеджерВременныхТаблиц;
	
	Если ЕстьДанныеПоВзносам Тогда
		
		Запрос.УстановитьПараметр("ЕСВПоСотрудникам", ЕСВПоСотрудникам);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСВПоСотрудникам.Организация,
		|	ЕСВПоСотрудникам.Период,
		|	ЕСВПоСотрудникам.ФизическоеЛицо,
		|	ЕСВПоСотрудникам.СпособРасчета,
		|	ЕСВПоСотрудникам.ВидЕСВ,
		|	ЕСВПоСотрудникам.КатегорияЕСВ,
		|	ЕСВПоСотрудникам.НалоговыйПериод,
		|	ЕСВПоСотрудникам.СтатьяНалоговойДекларации,
		|	ЕСВПоСотрудникам.Налог,
		|	ЕСВПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТЕСВПоСотрудникамИЗТЧ
		|ИЗ
		|	&ЕСВПоСотрудникам КАК ЕСВПоСотрудникам
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСВПоСотрудникам.Организация,
		|	ЕСВПоСотрудникам.Период,
		|	ЕСВПоСотрудникам.ФизическоеЛицо,
		|	ЕСВПоСотрудникам.ВидЕСВ,
		|	ЕСВПоСотрудникам.КатегорияЕСВ,
		|	ЕСВПоСотрудникам.НалоговыйПериод,
		|	ЕСВПоСотрудникам.СтатьяНалоговойДекларации,
		|	ЕСВПоСотрудникам.Налог,
		|	ЕСВПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТЕСВФОТПоСотрудникам
		|ИЗ
		|	ВТЕСВПоСотрудникамИЗТЧ КАК ЕСВПоСотрудникам
        |ГДЕ
		|   ЕСВПоСотрудникам.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВзносов.ВзносыФОТ)
		|";
		
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПоВсемОрганизациям", ПоВсемОрганизациям);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСВПоСотрудникам.Организация,
		|	&ПериодРегистрации КАК Период,
		|	ЕСВПоСотрудникам.ФизическоеЛицо,
		|	ЕСВПоСотрудникам.ВидЕСВ,
		|	ЕСВПоСотрудникам.КатегорияЕСВ,
		|	ЕСВПоСотрудникам.НалоговыйПериод,
		|	ЕСВПоСотрудникам.Налог,
		|	ЕСВПоСотрудникам.СтатьяНалоговойДекларации,
		|	ЕСВПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТЕСВФОТПоСотрудникам
		|ИЗ
		|	РегистрНакопления.ЕСВПоСотрудникам КАК ЕСВПоСотрудникам
		|ГДЕ
		|	(&ПоВсемОрганизациям
		|			ИЛИ ЕСВПоСотрудникам.Организация = &Организация)
		|	И НАЧАЛОПЕРИОДА(ЕСВПоСотрудникам.Период, МЕСЯЦ) = &ПериодРегистрации
		|	И ЕСВПоСотрудникам.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВзносов.ВзносыФОТ)
		|";
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСВПоСотрудникам.Организация,
	|	ЕСВПоСотрудникам.Период,
	|	ЕСВПоСотрудникам.ФизическоеЛицо,
	|	ЕСВПоСотрудникам.ВидЕСВ,
	|	ЕСВПоСотрудникам.КатегорияЕСВ,
	|	ЕСВПоСотрудникам.НалоговыйПериод,
	|	ЕСВПоСотрудникам.СтатьяНалоговойДекларации,
	|	ЕСВПоСотрудникам.Налог,
	|	ЕСВПоСотрудникам.Сумма
	|ИЗ
	|	ВТЕСВФОТПоСотрудникам КАК ЕСВПоСотрудникам
	|";
	
	Результат = Запрос.Выполнить().Выгрузить();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ДанныеВзносов.ТаблицаВзносов);
	
КонецПроцедуры

Процедура ЗаполнитьДанныеЕСВ(ДанныеВзносов, ПериодРегистрации, Организация, ЕСВПоСотрудникам, ВзаиморасчетыПоУдержаниям)

	ЕстьДанныеПоВзносам = ЕСВПоСотрудникам <> Неопределено;
	ПоВсемОрганизациям = (Организация = Неопределено);

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеВзносов.МенеджерВременныхТаблиц;
	
	Если ЕстьДанныеПоВзносам Тогда
		
		Отбор = Новый Структура("СпособРасчета");
		Отбор.СпособРасчета = Перечисления.СпособыРасчетаВзносов.Взносы;
		ЕСВПоСотрудникам.Индексы.Добавить("СпособРасчета");
		СтрокиЕСВ = ЕСВПоСотрудникам.НайтиСтроки(Отбор);
		
		ТаблицаЕСВ = ЕСВПоСотрудникам.Скопировать(СтрокиЕСВ);
		ТаблицаЕСВ.Свернуть("Организация, ФизическоеЛицо, СпособРасчета, ВидЕСВ, КатегорияЕСВ, СтатьяНалоговойДекларации, Налог", "Сумма");
		
		ПоляРазрез = Новый Массив();
		ПоляРазрез.Добавить("СчетУчета");
		ПоляСвязи = Новый Структура();
		ПоляСвязи.Вставить("Организация","Организация");
		ПоляСвязи.Вставить("ФизическоеЛицо","ФизическоеЛицо");
		ПоляСвязи.Вставить("ВидЕСВ","ВидУдержания");
		
		ТаблицаРаспределения = РаспределитьТаблицуПропорциональноТаблицеКоэффициентов(ТаблицаЕСВ, "Сумма", ВзаиморасчетыПоУдержаниям, "СуммаВзаиморасчетов", ПоляРазрез, ПоляСвязи);
		ТаблицаРаспределения.Свернуть("Организация, ФизическоеЛицо, СпособРасчета, ВидЕСВ, КатегорияЕСВ, СтатьяНалоговойДекларации, Налог, СчетУчета", "Сумма");
		
		Запрос.УстановитьПараметр("ЕСВПоСотрудникам", ТаблицаРаспределения);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСВПоСотрудникам.Организация,
		|	ЕСВПоСотрудникам.ФизическоеЛицо,
		|	ЕСВПоСотрудникам.СпособРасчета,
		|	ЕСВПоСотрудникам.ВидЕСВ,
		|	ЕСВПоСотрудникам.КатегорияЕСВ,
		|	ЕСВПоСотрудникам.СтатьяНалоговойДекларации,
		|	ЕСВПоСотрудникам.Налог,
		|	ЕСВПоСотрудникам.СчетУчета,
		|	ЕСВПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТЕСВПоСотрудникамТЧ
		|ИЗ
		|	&ЕСВПоСотрудникам КАК ЕСВПоСотрудникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСВПоСотрудникам.Организация,
		|	ЕСВПоСотрудникам.ФизическоеЛицо,
		|	ЕСВПоСотрудникам.СпособРасчета,
		|	ЕСВПоСотрудникам.ВидЕСВ,
		|	ЕСВПоСотрудникам.КатегорияЕСВ,
		|	ЕСВПоСотрудникам.СтатьяНалоговойДекларации,
		|	ЕСВПоСотрудникам.Налог,
		|	ЕСВПоСотрудникам.СчетУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.УдержаниеЕСВ) КАК ВидОперации,
		|	ЕСВПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТЕСВПоСотрудникам
		|ИЗ
		|	ВТЕСВПоСотрудникамТЧ КАК ЕСВПоСотрудникам
		|";
		Запрос.Выполнить();

	Иначе
		
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПоВсемОрганизациям", ПоВсемОрганизациям);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСВПоСотрудникам.Организация,
		|	ЕСВПоСотрудникам.ФизическоеЛицо,
		|	ЕСВПоСотрудникам.ВидЕСВ,
		|	ЕСВПоСотрудникам.СпособРасчета,
		|	ЕСВПоСотрудникам.КатегорияЕСВ,
		|	ЕСВПоСотрудникам.НалоговыйПериод,
		|	ЕСВПоСотрудникам.Налог,
		|	ЕСВПоСотрудникам.СтатьяНалоговойДекларации,
		|	ЕСВПоСотрудникам.Сумма
		|ИЗ
		|	РегистрНакопления.ЕСВПоСотрудникам КАК ЕСВПоСотрудникам
		|ГДЕ
		|	(&ПоВсемОрганизациям
		|			ИЛИ ЕСВПоСотрудникам.Организация = &Организация)
		|	И НАЧАЛОПЕРИОДА(ЕСВПоСотрудникам.Период, МЕСЯЦ) = &ПериодРегистрации
		|	И ЕСВПоСотрудникам.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВзносов.Взносы)
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВзаиморасчетыПоУдержаниям.Организация,
		|	ВзаиморасчетыПоУдержаниям.ФизическоеЛицо,
		|	ВзаиморасчетыПоУдержаниям.ВидУдержания,
		|	ВзаиморасчетыПоУдержаниям.СчетУчета,
		|	ВзаиморасчетыПоУдержаниям.СуммаВзаиморасчетовОборот КАК СуммаВзаиморасчетов
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыПоУдержаниям.Обороты(НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),, (&ПоВсемОрганизациям ИЛИ Организация = &Организация) И (КодОперации = ЗНАЧЕНИЕ(Перечисление.КодыОперацийВзаиморасчетыСРаботникамиОрганизаций.Взносы))) КАК ВзаиморасчетыПоУдержаниям
		|";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		ТаблицаЕСВ = РезультатЗапроса[0].Выгрузить();
		ТаблицаВзаиморасчетыПоУдержаниям = РезультатЗапроса[1].Выгрузить();
		
		ПоляРазрез = Новый Массив();
		ПоляРазрез.Добавить("СчетУчета");
		ПоляСвязи = Новый Структура();
		ПоляСвязи.Вставить("Организация","Организация");
		ПоляСвязи.Вставить("ФизическоеЛицо","ФизическоеЛицо");
		ПоляСвязи.Вставить("ВидЕСВ","ВидУдержания");
		
		ТаблицаРаспределения = РаспределитьТаблицуПропорциональноТаблицеКоэффициентов(ТаблицаЕСВ, "Сумма", ТаблицаВзаиморасчетыПоУдержаниям, "СуммаВзаиморасчетов", ПоляРазрез, ПоляСвязи);
		ТаблицаРаспределения.Свернуть("Организация, ФизическоеЛицо, СпособРасчета, ВидЕСВ, КатегорияЕСВ, СтатьяНалоговойДекларации, Налог, СчетУчета", "Сумма");
		
		Запрос.УстановитьПараметр("ЕСВПоСотрудникам", ТаблицаРаспределения);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСВПоСотрудникам.Организация,
		|	ЕСВПоСотрудникам.ФизическоеЛицо,
		|	ЕСВПоСотрудникам.СпособРасчета,
		|	ЕСВПоСотрудникам.ВидЕСВ,
		|	ЕСВПоСотрудникам.КатегорияЕСВ,
		|	ЕСВПоСотрудникам.СтатьяНалоговойДекларации,
		|	ЕСВПоСотрудникам.Налог,
		|	ЕСВПоСотрудникам.СчетУчета,
		|	ЕСВПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТЕСВПоСотрудникамТЧ
		|ИЗ
		|	&ЕСВПоСотрудникам КАК ЕСВПоСотрудникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСВПоСотрудникам.Организация,
		|	ЕСВПоСотрудникам.ФизическоеЛицо,
		|	ЕСВПоСотрудникам.СпособРасчета,
		|	ЕСВПоСотрудникам.ВидЕСВ,
		|	ЕСВПоСотрудникам.КатегорияЕСВ,
		|	ЕСВПоСотрудникам.СтатьяНалоговойДекларации,
		|	ЕСВПоСотрудникам.Налог,
		|	ЕСВПоСотрудникам.СчетУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.УдержаниеЕСВ) КАК ВидОперации,
		|	ЕСВПоСотрудникам.Сумма
		|ПОМЕСТИТЬ ВТЕСВПоСотрудникам
		|ИЗ
		|	ВТЕСВПоСотрудникамТЧ КАК ЕСВПоСотрудникам
		|";
		Запрос.Выполнить();

		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСВПоСотрудникам.Организация,
	|	ЕСВПоСотрудникам.ФизическоеЛицо,
	|	ЕСВПоСотрудникам.ВидЕСВ,
	|	ЕСВПоСотрудникам.КатегорияЕСВ,
	|	ЕСВПоСотрудникам.СчетУчета,
	|	ЕСВПоСотрудникам.СтатьяНалоговойДекларации,
	|	ЕСВПоСотрудникам.Налог,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.УдержаниеЕСВ) КАК ВидОперации,
	|	ЕСВПоСотрудникам.Сумма
	|ИЗ
	|	ВТЕСВПоСотрудникам КАК ЕСВПоСотрудникам
	|";
	
	Результат = Запрос.Выполнить().Выгрузить();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат, ДанныеВзносов.ТаблицаВзносов);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Инициализация таблиц значений

Функция НоваяТаблицаНДФЛ() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("ДоходНДФЛ", Новый ОписаниеТипов("СправочникСсылка.ВидыДоходовНДФЛ"));
	Таблица.Колонки.Добавить("СчетУчета", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаУдержаннаяЗарплата()
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Удержание", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.Удержания"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Таблица.Колонки.Добавить("СчетУчета", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаНачислений() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник",  Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), НСтр("ru='Сотрудник';uk='Співробітник'"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("ВидЕСВ", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЕСВ"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.Начисления"));
	Таблица.Колонки.Добавить("НалоговыйПериодЕСВ", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаСтраховыеВзносы() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), НСтр("ru='Сотрудник';uk='Співробітник'"));
	Таблица.Колонки.Добавить("ВидЕСВ", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЕСВ"));
	Таблица.Колонки.Добавить("СтатьяНалоговойДекларации", Новый ОписаниеТипов("СправочникСсылка.СтатьиНалоговыхДеклараций"));
	Таблица.Колонки.Добавить("Налог", Новый ОписаниеТипов("СправочникСсылка.Налоги"));
	Таблица.Колонки.Добавить("НалоговыйПериод", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаЕСВ() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"), НСтр("ru='Сотрудник';uk='Співробітник'"));
	Таблица.Колонки.Добавить("ВидЕСВ", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЕСВ"));
	Таблица.Колонки.Добавить("СтатьяНалоговойДекларации", Новый ОписаниеТипов("СправочникСсылка.СтатьиНалоговыхДеклараций"));
	Таблица.Колонки.Добавить("Налог", Новый ОписаниеТипов("СправочникСсылка.Налоги"));
	Таблица.Колонки.Добавить("СчетУчета", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;
	
КонецФункции
