////////////////////////////////////////////////////////////////////////////////
// Ответственные лица: процедуры и функции для работы с ответственным лицами.
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция подбирает вероятную должность ответственного лица из справочника "Должности".
// 
Функция ПодобратьВероятнуюДолжностьОтветственногоЛица(ОтветственноеЛицо) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ОтветственноеЛицо) Тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	Если ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.Руководитель Тогда
		НаименованиеДолжности1	= НСтр("ru='Генеральный директор';uk='Генеральний директор'");
		НаименованиеДолжности2	= НСтр("ru='%[Дд]иректор%';uk='%[Дд]иректор%'");
	ИначеЕсли ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер Тогда
		НаименованиеДолжности1	= НСтр("ru='Главный бухгалтер';uk='Головний бухгалтер'");
		НаименованиеДолжности2	= НСтр("ru='%[Бб]ухгалтер%';uk='%[Бб]ухгалтер%'");
	ИначеЕсли ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.Кассир Тогда
		НаименованиеДолжности1	= НСтр("ru='Кассир';uk='Касир'");
		НаименованиеДолжности2	= НСтр("ru='%[Кк]ассир%';uk='%[Кк]ассир%'");
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос	= Новый Запрос;
	
	Запрос.УстановитьПараметр("НаименованиеДолжности1", НаименованиеДолжности1);
	Запрос.УстановитьПараметр("НаименованиеДолжности2", НаименованиеДолжности2);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	Должности.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Должности КАК Должности
	|ГДЕ
	|	Должности.Наименование ПОДОБНО &НаименованиеДолжности1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	Должности.Ссылка
	|ИЗ
	|	Справочник.Должности КАК Должности
	|ГДЕ
	|	Должности.Наименование ПОДОБНО &НаименованиеДолжности2
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка	= РезультатЗапроса.Выбрать();
	Если НЕ Выборка.Следующий() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Выборка.Ссылка;
	
КонецФункции

// Функция возвращает пустую структуру со сведениями об ответственных лицах.
//
// Возвращаемое значение:
//	Структура с ключами, соответствующими имени значений перечисления ОтветственныеЛица вида
//		"Руководитель" - СправочникСсылка.ФизическиеЛица
//		"РуководительФИО" - структура (Фамилия, Имя, Отчество, Представление)
//		"РуководительПредставление" - строка, Фамилия И.О.
//		"РуководительДолжность" - СправочникСсылка.Должности
//		"РуководительДолжностьПредставление" - строка, название должности
//
Функция ПустаяСтруктураОтветственныхЛиц() Экспорт

	ПустоеФизЛицо	 = Справочники.ФизическиеЛица.ПустаяСсылка();
	ПустаяДолжность	 = Справочники.Должности.ПустаяСсылка();

	МассивОтветственныхЛиц = Новый Массив;
	МассивОтветственныхЛиц.Добавить("Руководитель");
	МассивОтветственныхЛиц.Добавить("ГлавныйБухгалтер");
	МассивОтветственныхЛиц.Добавить("РуководительКадровойСлужбы");
	МассивОтветственныхЛиц.Добавить("Кассир");
	МассивОтветственныхЛиц.Добавить("ОтветственныйЗаБухгалтерскиеРегистры");
	МассивОтветственныхЛиц.Добавить("ОтветственныйЗаНалоговыеРегистры");    
	МассивОтветственныхЛиц.Добавить("УполномоченныйПредставитель");
	МассивОтветственныхЛиц.Добавить("Исполнитель");

	Результат = Новый Структура();
	
	Для Каждого ВидОтветственногоЛица Из МассивОтветственныхЛиц Цикл
	
		ФИО = Новый Структура;
		ФИО.Вставить("Фамилия", 		"");
		ФИО.Вставить("Имя", 			"");
		ФИО.Вставить("Отчество", 		"");
		ФИО.Вставить("Представление", 	""); // Фамилия И.О.
	
		Результат.Вставить(ВидОтветственногоЛица, 					ПустоеФизлицо);
		Результат.Вставить(ВидОтветственногоЛица + "ФИО", 			ФИО);
		Результат.Вставить(ВидОтветственногоЛица + "Представление", ""); 				// Фамилия И.О.
		Результат.Вставить(ВидОтветственногоЛица + "Должность", 	ПустаяДолжность);   
		Результат.Вставить(ВидОтветственногоЛица + "ДолжностьПредставление", "");		// Наименование должности
	
	КонецЦикла;

	Возврат Результат;

КонецФункции

// Функция возвращает структуру со сведениями об ответственных лицах.
//
// Параметры:
//  Организация - организация, для которой нужно определить ответственных лиц.
//	ДатаСреза - дата со временем, на которые необходимо определить сведения.
//	Подразделение - подразделение, для которого необходимо определить ответственных лиц.
//
// Возвращаемое значение:
//	Структура с ключами, соответствующими имени значений перечисления ОтветственныеЛица вида
//		"Руководитель" - СправочникСсылка.ФизическиеЛица
//		"РуководительФИО" - структура (Фамилия, Имя, Отчество, Представление)
//		"РуководительПредставление" - строка, Фамилия И.О.
//		"РуководительДолжность" - СправочникСсылка.Должности
//		"РуководительДолжностьПредставление" - строка, название должности
//
Функция ОтветственныеЛица(Организация, ДатаСреза, Подразделение = Неопределено) Экспорт

	// В текущую функцию в качестве ДатаСреза обычно передается дата самого документа 
	// вместе со временем. Чтобы уменьшить число разных значений в кэше повторно используемых
	// вызовов, получим для этой даты значение последнего изменения в ответственных лица
	// и для него уже вызовем функцию из модуля с повторным использованием возвращаемых значений.
	ПриведеннаяДатаСреза = '0001-01-01';
	
	МассивДатИзменения = ОтветственныеЛицаБППовтИсп.ДатыИзмененияОтветственныхЛицОрганизаций(Организация);
	Для Каждого ДатаИзменения Из МассивДатИзменения Цикл
		Если ДатаИзменения <= ДатаСреза Тогда
			ПриведеннаяДатаСреза = Макс(ПриведеннаяДатаСреза, ДатаИзменения);
		КонецЕсли;
	КонецЦикла;
	
	Результат = ОтветственныеЛицаБППовтИсп.ОтветственныеЛица(Организация, ПриведеннаяДатаСреза, Подразделение);

	Возврат Результат;

КонецФункции

// Функция возвращает структуру со сведениями об ответственных лицах контрагента.
//
// Параметры:
//  Контрагент - контрагент, для которого нужно определить ответственных лиц.
//	ДатаСреза - дата со временем, на которые необходимо определить сведения.
//	Подразделение - подразделение, для которого необходимо определить ответственных лиц.
//
// Возвращаемое значение:
//	Структура с ключами, соответствующими имени значений перечисления ОтветственныеЛица вида
//		"Руководитель" - СправочникСсылка.ФизическиеЛица
//		"РуководительФИО" - структура (Фамилия, Имя, Отчество, Представление)
//		"РуководительПредставление" - строка, Фамилия И.О.
//		"РуководительДолжность" - СправочникСсылка.Должности
//		"РуководительДолжностьПредставление" - строка, название должности
//
Функция ОтветственныеЛицаКонтрагента(Контрагент, ДатаСреза) Экспорт

	// В текущую функцию в качестве ДатаСреза обычно передается дата самого документа 
	// вместе со временем. Чтобы уменьшить число разных значений в кэше повторно используемых
	// вызовов, получим для этой даты значение последнего изменения в ответственных лица
	// и для него уже вызовем функцию из модуля с повторным использованием возвращаемых значений.
	ПриведеннаяДатаСреза = '0001-01-01';
	
	МассивДатИзменения = ОтветственныеЛицаБППовтИсп.ДатыИзмененияОтветственныхЛицКонтрагента(Контрагент);
	Для Каждого ДатаИзменения Из МассивДатИзменения Цикл
		Если ДатаИзменения <= ДатаСреза Тогда
			ПриведеннаяДатаСреза = Макс(ПриведеннаяДатаСреза, ДатаИзменения);
		КонецЕсли;
	КонецЦикла;
	
	Результат = ОтветственныеЛицаБППовтИсп.ОтветственныеЛицаКонтрагента(Контрагент, ПриведеннаяДатаСреза);

	Возврат Результат;

КонецФункции

// Функция возвращает структуру со сведениями об ответственных лицах.
//
// Параметры:
//  Организация - организация, для которой нужно определить ответственных лиц.
//	ДатаСреза - дата со временем, на которые необходимо определить сведения.
//	Подразделение - подразделение, для которого необходимо определить ответственных лиц.
//
// Возвращаемое значение:
//	Структура с ключами, соответствующими имени значений перечисления ОтветственныеЛица вида
//		"Руководитель" - СправочникСсылка.ФизическиеЛица
//		"РуководительФИО" - структура (Фамилия, Имя, Отчество, Представление)
//		"РуководительПредставление" - строка, Фамилия И.О.
//		"РуководительДолжность" - СправочникСсылка.Должности
//		"РуководительДолжностьПредставление" - строка, название должности
//
Функция ОтветственныеЛицаОбособленногоПодразделения(ОбособленноеПодразделениеОрганизации, ДатаСреза) Экспорт

	// В текущую функцию в качестве ДатаСреза обычно передается дата самого документа 
	// вместе со временем. Чтобы уменьшить число разных значений в кэше повторно используемых
	// вызовов, получим для этой даты значение последнего изменения в ответственных лица
	// и для него уже вызовем функцию из модуля с повторным использованием возвращаемых значений.
	ПриведеннаяДатаСреза = '0001-01-01';
	
	МассивДатИзменения = ОтветственныеЛицаБППовтИсп.ДатыИзмененияОтветственныхЛицОбособленногоПодразделения(ОбособленноеПодразделениеОрганизации);
	Для Каждого ДатаИзменения Из МассивДатИзменения Цикл
		Если ДатаИзменения <= ДатаСреза Тогда
			ПриведеннаяДатаСреза = Макс(ПриведеннаяДатаСреза, ДатаИзменения);
		КонецЕсли;
	КонецЦикла;
	
	Результат = ОтветственныеЛицаБППовтИсп.ОтветственныеЛицаОбособленногоПодразделения(ОбособленноеПодразделениеОрганизации, ПриведеннаяДатаСреза);

	Возврат Результат;

КонецФункции


// Возвращает ответственное лицо на складе на указанную дату
//
Функция ОтветственноеЛицоНаСкладе(Склад, Дата) Экспорт
	
	Возврат ОтветственныеЛицаБППереопределяемый.ОтветственноеЛицоНаСкладе(Склад, Дата);

КонецФункции
