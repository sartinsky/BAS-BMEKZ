////////////////////////////////////////////////////////////////////////////////
// Подсистема "ПодсистемыЦККВМоделиСервиса".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс     

// Создает структуру описания типа инцидента, которую требуется заполнить и передать функции СоздатьЗаписьТипа.
// @skip-warning ПустойМетод - особенность реализации.
//
// Параметры:
//  ИмяТипа	 - Строка - Имя типа инцидента. Имя должно быть уникальным, например: Конфигурация1.ПОдсистема1.Инцидент1.
// 
// Возвращаемое значение:
//   - Структура - поля структуры:
// 		- ТипИнцидента (строка): имя типа
//		- УровеньИнцидента (строка): "Информация", "Предупреждение" (по умолчанию), "Ошибка", "КритическаяОшибка"
//		- Подсистема (строка): подсистема с точки зрения ЦКК
//		- КонтекстИнформационнойБазы (булево): определять контекст подключения. По умолчанию нет.
//		- ПроцедураПроверки (строка): имя процедуры, которая будет вызываться периодически, если есть открытые инциденты указанного типа для проверки
//			их актуальности. Если указано "Авто", будет использована проверка по полю "Актуален" из регистра открытых инцидентов
//		- МинутМеждуИнцидентами (число): ограничивать частоту отсылки инцидентов. По умолчанию 0: не ограничивать
//		- Теги (структура) с булевыми полями Оборудование, Доступность, Производительность, ПрикладнаяОшибка и строкой Дополнительные. В строку можно
//			разместить произвольные теги, разделенные пробелом.
Функция СоздатьОписаниеТипаИнцидента(ИмяТипа) Экспорт
КонецФункции

// Создает запись типа инцидента и помещает ее в словарь. Если в словаре тип уже зарегистрирован, он будет перезаписан.
// @skip-warning ПустойМетод - особенность реализации.
//
// Параметры:
//  СловарьТипов	- Соответствие - Ключ: имя типа инцидента, Значение: структура с описанием типа (создается)
//	Описание		- Структура - см. СоздатьОписаниеТипаИнцидента.
Процедура СоздатьЗаписьТипа(Знач СловарьТипов, Знач Описание) Экспорт
КонецПроцедуры

// Регистрирует инциденты в ЦКК. Требуется ее вызвать по факту установки не-пустых значений констант доступа к внешнему ЦКК.
// Параметр нужен для отложенного способа вызова обработчиков ИБ.

// Регистрирует типы инцидентов в ИБ.
// @skip-warning ПустойМетод - особенность реализации.
//
// Параметры:
//  ПараметрыОбработчика - Структура, параметры обработчика.
//
Процедура ЗарегистрироватьТипыИнцидентовВЦКК() Экспорт
КонецПроцедуры

// Открывает инцидент. Если адрес ЦКК не указан, ничего не делает. Если инцидент отсылается чаще 
// указанных в типе ограничений, такая отсылка будет проигнорирована без вызова исключений. 
// Если указано Асинхронно=Истина, то метод будет выполнен с помощью менеджера фоновых заданий.
// @skip-warning ПустойМетод - особенность реализации.
//
// Параметры:
//  ТипИнцидента		- Строка - Идентификатор типа инцидента. Должен быть среди зарегистрированных типов.
//  КодИнцидента		- Строка - Строковый идентификатор инцидента. Должен быть уникален внутри типа. Если повторяется, считается, что инцидент еще раз и счетчик срабатываний его в ЦКК увеличится.
//  ТекстСообщения		- Строка - текст сообщения инцидента
//  ИнформационнаяБаза	- Строка - контекст информационной базы для инцидента
//  Кластер				- Строка - контекст кластера для инцидента.
//
Процедура ОткрытьИнцидент(Знач ТипИнцидента, Знач КодИнцидента, Знач ТекстСообщения, Знач Асинхронно = Ложь) Экспорт
КонецПроцедуры

// Процедура - Помечает инцидент в регистре ИнцидентыОткрытые как неактуальный. Инцидент закроется в ЦКК при следующем вызове проверки на актуальность.
// @skip-warning ПустойМетод - особенность реализации.
//
// Параметры:
//  ТипИнцидента - Строка - Идентификатор типа инцидента.
//  КодИнцидента - Строка - Идентификатор инцидента. 
//
Процедура ПометитьИнцидентКакНеактуальный(Знач ТипИнцидента, Знач КодИнцидента) Экспорт
КонецПроцедуры

// Отсылает счетчик в ЦКК, используя InputStatistics/InputStatisticsDate (СИНХРОННАЯ ОТСЫЛКА СЧЕТЧИКА).
// @skip-warning ПустойМетод - особенность реализации.
//
// Параметры:
//  ИдентификаторСчетчика	- Строка - Идентификатор счетчика для ЦКК, разделенные точками
//  ЗначениеСчетчика		- Число - Значение счетчика на передаваемый (указанный) момент времени
//  Данные					- Соответствие: ключ - идентификатор счетчика, значение - значение счетчика (если указано, имеет приоритет)
//  ДатаСчетчика			- Дата - Если указано, используется InputStatisticsDate, иначе - InputStatistics.
//
// Когда указаны массивы в параметрах ИдентификаторСчетчика/ЗначениеСчетчика, происходит передача всего
// массива за один вызов.
Процедура ОтослатьСтатистику(Знач ИдентификаторСчетчика, Знач ЗначениеСчетчика, Знач Данные = неопределено, Знач ДатаСчетчика = неопределено) Экспорт
КонецПроцедуры


#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс


// Вызывается из регламентной процедуры МониторингЦКК 
// @skip-warning ПустойМетод - особенность реализации.
Процедура ВыполнитьМониторингЦКК() Экспорт
КонецПроцедуры

Функция ПериодВызоваРегламентногоЗадания() Экспорт
	Возврат 60;
КонецФункции

#КонецОбласти
