
Процедура скEDI_ОтправкаЗапросаНаПолучениеЛимитаРегистрацииВЕРНН(СтруктураПараметров) Экспорт
	Если не Константы.скEDI_ИспользованиеПодсистемы.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	
	Если ТипЗнч(СтруктураПараметров) <> Тип("Структура") Тогда 
		
		ЗаписьЖурналаРегистрации("скEDI_ОтправкаЗапросаНаПолучениеЛимитаРегистрацииВЕРНН" ,,,,"Некорректный тип входящих параметров");
		Отказ = Истина;
		скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Некорректный тип входящих параметров");		
		
	Иначе	
		
		Если НЕ СтруктураПараметров.Свойство("Организация")
			ИЛИ НЕ ЗначениеЗаполнено(СтруктураПараметров.Организация) Тогда 
			
			ЗаписьЖурналаРегистрации("скEDI_ОтправкаЗапросаНаПолучениеЛимитаРегистрацииВЕРНН" ,,,,"Не заполнено свойство <Организация>");
			Отказ = Истина;
			скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Не заполнено свойство <Организация>");
			
		КонецЕсли;
		
		Если НЕ СтруктураПараметров.Свойство("НаименованиеФоновогоПроцесса")
			ИЛИ НЕ ЗначениеЗаполнено(СтруктураПараметров.НаименованиеФоновогоПроцесса) Тогда 
			
			ЗаписьЖурналаРегистрации("скEDI_ОтправкаЗапросаНаПолучениеЛимитаРегистрацииВЕРНН" ,,,,"Не заполнено свойство <НаименованиеФоновогоПроцесса>");
			Отказ = Истина;
			скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Не заполнено свойство <НаименованиеФоновогоПроцесса>");
			
		КонецЕсли;
		
		Если НЕ СтруктураПараметров.Свойство("ТаблицаНеобходимыхПодписейШифрования")
			ИЛИ СтруктураПараметров.ТаблицаНеобходимыхПодписейШифрования.Количество() = 0 Тогда 
			
			ЗаписьЖурналаРегистрации("скEDI_СверкаНалоговыхДокументовЕРНН" ,,,,"Не заполнено свойство <ТаблицаНеобходимыхПодписейШифрования>");
			Отказ = Истина;
			скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Не заполнено свойство <ТаблицаНеобходимыхПодписейШифрования>");
			
		КонецЕсли;
		
		Если НЕ СтруктураПараметров.Свойство("ТаблицаНеобходимыхПодписей")
			ИЛИ СтруктураПараметров.ТаблицаНеобходимыхПодписей.Количество() = 0 Тогда 
			
			ЗаписьЖурналаРегистрации("скEDI_СверкаНалоговыхДокументовЕРНН" ,,,,"Не заполнено свойство <ТаблицаНеобходимыхПодписей>");
			Отказ = Истина;
			скEDI_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОШИБКА: Не заполнено свойство <ТаблицаНеобходимыхПодписей>");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ВыполняемыеОперации = Новый Массив;
	ВыполняемыеОперации.Добавить("Подпись");
	ВыполняемыеОперации.Добавить("ОтправкаВДФС");
	ТаблицаНастроекПодписей = СтруктураПараметров.ТаблицаНеобходимыхПодписей;
	ТаблицаНастроекПодписейШифрования = СтруктураПараметров.ТаблицаНеобходимыхПодписейШифрования;
	
	ДокументЗапросВЕРНН = Документы.скEDI_ЗапросНаПолучениеЛимитаРегистрацииВЕРНН.СоздатьДокумент();
	ДокументЗапросВЕРНН.ОрганизацияEDI = СтруктураПараметров.Организация;
	ДокументЗапросВЕРНН.Организация = ДокументЗапросВЕРНН.ОрганизацияEDI.Организация1С;
	ДокументЗапросВЕРНН.Состояние = Перечисления.скEDI_СостоянияДополнительныхЭлектронныхДокументовДФС.Создан;
	ДокументЗапросВЕРНН.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	ДокументЗапросВЕРНН.Дата = ТекущаяДата();
	ДокументЗапросВЕРНН.УстановитьНовыйНомер();
	
	РезультатСозданияИОтправкиЗапроса = Документы.скEDI_ЗапросНаПолучениеЛимитаРегистрацииВЕРНН.ОбработатьЭлектронныйДокумент_Объект(ДокументЗапросВЕРНН, ВыполняемыеОперации, ТаблицаНастроекПодписей, ТаблицаНастроекПодписейШифрования);
	Если РезультатСозданияИОтправкиЗапроса <> Неопределено Тогда
		Сообщить("Запрос не отправлен." + Строка(РезультатСозданияИОтправкиЗапроса));
	КонецЕсли;
	
КонецПроцедуры
