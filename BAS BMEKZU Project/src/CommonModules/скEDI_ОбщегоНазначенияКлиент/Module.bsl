
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ФайлВСтрокуBase64(ИмяФайла) Экспорт
	Перем лРезультат;
	
	лМенеджерФайла = Новый Файл(ИмяФайла);
	Если лМенеджерФайла.Существует() Тогда
		
		лДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайла);
		лРезультат = Base64Строка(лДвоичныеДанные);
		
	КонецЕсли;
	
	Возврат лРезультат;
	
КонецФункции // ФайлВСтрокуBase64()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура СоздатьФайлИзСтрокиBase64(СтрокаBase64, ИмяФайла, СчётчикПопыток = 0) Экспорт
	
	лДвоичныеДанные = Base64Значение(СтрокаBase64);
	Попытка
		
		лДвоичныеДанные.Записать(ИмяФайла);
		
	Исключение
		
		Сообщить(НСтр("ru = 'Не удалось записать временный файл PDF представления электронного документа по адресу: ';
						|uk = 'Не вдалось записати тимчасовий файл PDF представлення електронного документа за адресою: '") + ИмяФайла);
		
	КонецПопытки;
	
КонецПроцедуры // СоздатьФайлИзСтрокиBase64()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
функция ПолучитьДоступныеКоманды(МассивДокументов) Экспорт
	Результат = Новый Структура;
	
	Результат.Вставить("Подписать", Ложь);
	Результат.Вставить("ПодписатьИОтправить", Ложь);
	Результат.Вставить("ПодписатьИОтправитьТолькоСсылку", Ложь);
	Результат.Вставить("ОтправитьНаДоподписание", Ложь);
	Результат.Вставить("ПодписатьИОтправитьВДФС", Ложь);
	Результат.Вставить("Подтвердить", Ложь);
	Результат.Вставить("Отклонить", Ложь);
	Результат.Вставить("Отозвать", Ложь);
	Результат.Вставить("ПовторнаяОтправка", Ложь);
	Результат.Вставить("СоздатьДокумент1С", Ложь);
	Результат.Вставить("НайтиДокумент1С", Ложь);
	Результат.Вставить("ПровестиДокумент1С", Ложь);
	Результат.Вставить("СоздатьНовыйЭлектронныйДокумент", Ложь);
	Результат.Вставить("СнятьПодписи", Ложь);
	Результат.Вставить("Проверить", Ложь);
	Результат.Вставить("ЭкспортДокументов", Ложь);
	Результат.Вставить("ОтправитьЗапросОСостоянииРегистрации", Ложь);
	Результат.Вставить("СформироватьНовыйВариантЭлектронногоДокумента", Ложь);
	Результат.Вставить("ОтредактироватьДокумент", Ложь);
	Результат.Вставить("УстановитьОсновнойВариантЭлектронногоДокумента", Ложь);
	Результат.Вставить("Аннулировать", Ложь);
	Результат.Вставить("ПовторноеУтверждение", Ложь);
	//Дата,ВидЭлектронногоДокумента,ТипДокумента,Документ1С,ЭлектронныйДокумент,ВхИсх,ГдеСоздан,Состояние,СостояниеРегистрацияВДФС,ЕстьФинальнаяКвитанцияДФС,ВидДокумента1С,СоответствиеДокументов,НеобходимоПроведениеДокумента1С,Документ1СПроведен,Обработано,ДатаОбработки,РегистрируетсяВЕРННПокупателем,ЭтоОсновнойВариант,ОшибкаШифрованияПриОтправке
	 
	ЭтоПервыйДокумент = Истина;
	Для Каждого Документ Из МассивДокументов Цикл
		Подписать = Ложь;
		ПодписатьИОтправить = Ложь;
		ПодписатьИОтправитьТолькоСсылку = Ложь;
		ОтправитьНаДоподписание = Ложь;
		ПодписатьИОтправитьВДФС = Ложь;
		Подтвердить = Ложь;
		Отклонить = Ложь;
		Отозвать = Ложь;
		ПовторнаяОтправка = Ложь;
		СоздатьДокумент1С = Ложь;
		НайтиДокумент1С = Ложь;
		ПровестиДокумент1С = Ложь;
		СоздатьНовыйЭлектронныйДокумент = Ложь;
		СнятьПодписи = Ложь;
		Проверить = Ложь;
		ЭкспортДокументов = Ложь;
		ОтправитьЗапросОСостоянииРегистрации = Ложь;
		СформироватьНовыйВариантЭлектронногоДокумента = Ложь;
		ОтредактироватьДокумент = Ложь;
		УстановитьОсновнойВариантЭлектронногоДокумента = Ложь;
		Аннулировать = Ложь;
		ПовторноеУтверждение = Ложь;
		
		Если Документ.ТипДокумента = ПредопределенноеЗначение("Перечисление.скEDI_ТипыЭлектронныхДокументов.НалоговаяНакладная") Тогда
			Если Документ.ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Исходящий") Тогда
				Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПустаяСсылка") Тогда
					Подписать = Истина;
					ПодписатьИОтправить = Истина;
					//ПодписатьИОтправитьВДФС = Истина;
					Проверить = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ЕстьТолькоДокумент1С") Тогда
					Подписать = Истина;
					ПодписатьИОтправить = Истина;
					//ПодписатьИОтправитьВДФС = Истина;
					Проверить = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Создан") Тогда
					Подписать = Истина;
					ПодписатьИОтправить = Истина;
					//ПодписатьИОтправитьВДФС = Истина;
					Проверить = Истина;
					//СоздатьНовыйЭлектронныйДокумент = Истина;
					//СнятьПодписи = Истина;
				//ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") Тогда
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью") Тогда
					Подписать = Истина;
					ПодписатьИОтправить = Истина;
					//ПодписатьИОтправитьВДФС = Истина;
					СоздатьНовыйЭлектронныйДокумент = Истина;
					СнятьПодписи = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан") Тогда
					ПодписатьИОтправить = Истина;
					//ПодписатьИОтправитьВДФС = Истина;
					СоздатьНовыйЭлектронныйДокумент = Истина;
					СнятьПодписи = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Отправлен") Тогда
					//Отозвать = Истина;
					//ПодписатьИОтправитьВДФС = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоСообщениеОДоставке") Тогда
					//ПодписатьИОтправитьВДФС = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоПодтверждение") Тогда
					//ПодписатьИОтправитьВДФС = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонение") Тогда
				//	ПодписатьИОтправитьВДФС = Истина;
					СоздатьНовыйЭлектронныйДокумент = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоПодтверждениеОтДФС") Тогда
					ПодписатьИОтправить = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленКонтрагентуДляРегистрацииВЕРПН") Тогда
					//Отозвать = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонениеОтДФС") Тогда
					СоздатьНовыйЭлектронныйДокумент = Истина;
				КонецЕсли;
				Если Документ.СостояниеРегистрацияВДФС = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументовРегистрацияВДФС.ПустаяСсылка")
					//или Документ.СостояниеРегистрацияВДФС = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументовРегистрацияВДФС.ОтправленВДФС")
					Тогда
					
					Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонение") Тогда
						Если Документ.ЭтоОсновнойВариант Тогда
							СформироватьНовыйВариантЭлектронногоДокумента = Истина;
						КонецЕсли;
					Иначе
						ПодписатьИОтправитьВДФС = Истина;
					КонецЕсли;
				ИначеЕсли Документ.СостояниеРегистрацияВДФС = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументовРегистрацияВДФС.ПолученоОтклонениеОтДФС") Тогда
					Если Документ.ЭтоОсновнойВариант Тогда
						СформироватьНовыйВариантЭлектронногоДокумента = Истина;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Документ.ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Входящий") Тогда
				Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Получен") Тогда
					Подписать = Истина;
					Подтвердить = Истина;
					Отклонить = Истина;
					Проверить = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью") Тогда
					Подписать = Истина;
					Подтвердить = Истина;
					Отклонить = Истина;
					СнятьПодписи = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан") Тогда
					Подтвердить = Истина;
					Отклонить = Истина;
					СнятьПодписи = Истина;
				КонецЕсли;
			КонецЕсли;
			ОтправитьЗапросОСостоянииРегистрации = Истина;
			Проверить = Истина;
		ИначеЕсли Документ.ТипДокумента = ПредопределенноеЗначение("Перечисление.скEDI_ТипыЭлектронныхДокументов.Приложение2КНалоговойНакладной") Тогда
			Если Документ.ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Исходящий") Тогда
				Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПустаяСсылка") Тогда
					Подписать = Истина;
					ПодписатьИОтправить = Истина;
					//Если не Документ.РегистрируетсяВЕРННПокупателем Тогда
					//	ПодписатьИОтправитьВДФС = Истина;
					//КонецЕсли;
					Проверить = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ЕстьТолькоДокумент1С") Тогда
					Подписать = Истина;
					ПодписатьИОтправить = Истина;
					//Если не Документ.РегистрируетсяВЕРННПокупателем Тогда
					//	ПодписатьИОтправитьВДФС = Истина;
					//КонецЕсли;
					Проверить = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Создан") Тогда
					Подписать = Истина;
					ПодписатьИОтправить = Истина;
					//Если не Документ.РегистрируетсяВЕРННПокупателем Тогда
					//	ПодписатьИОтправитьВДФС = Истина;
					//КонецЕсли;
					//СнятьПодписи = Истина;
					//СоздатьНовыйЭлектронныйДокумент = Истина;
					Проверить = Истина;
				//ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") Тогда
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью") Тогда
					Подписать = Истина;
					ПодписатьИОтправить = Истина;
					//Если не Документ.РегистрируетсяВЕРННПокупателем Тогда
					//	ПодписатьИОтправитьВДФС = Истина;
					//КонецЕсли;
					СоздатьНовыйЭлектронныйДокумент = Истина;
					СнятьПодписи = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан") Тогда
					ПодписатьИОтправить = Истина;
					//Если не Документ.РегистрируетсяВЕРННПокупателем Тогда
					//	ПодписатьИОтправитьВДФС = Истина;
					//КонецЕсли;
					СоздатьНовыйЭлектронныйДокумент = Истина;
					СнятьПодписи = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Отправлен") Тогда
					//Отозвать = Истина;
					//Если не Документ.РегистрируетсяВЕРННПокупателем Тогда
					//	ПодписатьИОтправитьВДФС = Истина;
					//КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоСообщениеОДоставке") Тогда
					//Если не Документ.РегистрируетсяВЕРННПокупателем Тогда
					//	ПодписатьИОтправитьВДФС = Истина;
					//КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоПодтверждение") Тогда
					//Если не Документ.РегистрируетсяВЕРННПокупателем Тогда
					//	ПодписатьИОтправитьВДФС = Истина;
					//КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонение") Тогда
					//Если не Документ.РегистрируетсяВЕРННПокупателем Тогда
					//	//ПодписатьИОтправитьВДФС = Истина;
					//КонецЕсли;
					СоздатьНовыйЭлектронныйДокумент = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоПодтверждениеОтДФС") Тогда
					Если не Документ.РегистрируетсяВЕРННПокупателем Тогда
						ПодписатьИОтправить = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонениеОтДФС") Тогда
					СоздатьНовыйЭлектронныйДокумент = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленКонтрагентуДляРегистрацииВЕРПН") Тогда
					//Отозвать = Истина;
				КонецЕсли;
				Если Документ.СостояниеРегистрацияВДФС = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументовРегистрацияВДФС.ПустаяСсылка")
					//или Документ.СостояниеРегистрацияВДФС = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументовРегистрацияВДФС.ОтправленВДФС")
					Тогда
					
					Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонение") Тогда
						Если Документ.ЭтоОсновнойВариант Тогда
							СформироватьНовыйВариантЭлектронногоДокумента = Истина;
						КонецЕсли;
					Иначе
						Если не Документ.РегистрируетсяВЕРННПокупателем Тогда
							ПодписатьИОтправитьВДФС = Истина;
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли Документ.СостояниеРегистрацияВДФС = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументовРегистрацияВДФС.ПолученоОтклонениеОтДФС") Тогда
					Если Документ.ЭтоОсновнойВариант Тогда
						СформироватьНовыйВариантЭлектронногоДокумента = Истина;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Документ.ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Входящий") Тогда
				Если Документ.РегистрируетсяВЕРННПокупателем Тогда
					Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Получен") Тогда
						Подписать = Истина;
						//Подтвердить = Истина;
						Отклонить = Истина;
						//ПодписатьИОтправитьВДФС = Истина;
						Проверить = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью") Тогда
						Подписать = Истина;
						Отклонить = Истина;
						//ПодписатьИОтправитьВДФС = Истина;
						СнятьПодписи = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан") Тогда
						Отклонить = Истина;
						//ПодписатьИОтправитьВДФС = Истина;
						СнятьПодписи = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоПодтверждениеОтДФС") Тогда
						ПодписатьИОтправить = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонениеОтДФС") Тогда
						ПодписатьИОтправить = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоПодтверждениеОтДФС_РегистрацияОстановлена") Тогда
						ПодписатьИОтправить = Истина;
					КонецЕсли;
					Если (Документ.СостояниеРегистрацияВДФС = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументовРегистрацияВДФС.ПустаяСсылка")
						//или Документ.СостояниеРегистрацияВДФС = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументовРегистрацияВДФС.ОтправленВДФС")
						)
						и Документ.Состояние <> ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоОтклонение")
						Тогда
						ПодписатьИОтправитьВДФС = Истина;
					КонецЕсли;
				Иначе
					Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Получен") Тогда
						Подписать = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						Проверить = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью") Тогда
						Подписать = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						//СнятьПодписи = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан") Тогда
						Подтвердить = Истина;
						Отклонить = Истина;
						//СнятьПодписи = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			ОтправитьЗапросОСостоянииРегистрации = Истина;
			Проверить = Истина;
		ИначеЕсли Документ.ТипДокумента = ПредопределенноеЗначение("Перечисление.скEDI_ТипыЭлектронныхДокументов.ПервичныйДокумент") Тогда
			Если Документ.ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Исходящий") Тогда
				Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПустаяСсылка") Тогда
					Подписать = Истина;
					ОтправитьНаДоподписание = Истина;
					ПодписатьИОтправить = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ЕстьТолькоДокумент1С") Тогда
					Подписать = Истина;
					ОтправитьНаДоподписание = Истина;
					ПодписатьИОтправить = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Создан") Тогда
					Подписать = Истина;
					ОтправитьНаДоподписание = Истина;
					ПодписатьИОтправить = Истина;
					//СнятьПодписи = Истина;
					//СоздатьНовыйЭлектронныйДокумент = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью") Тогда
					
					Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						ОтредактироватьДокумент = Ложь;//Истина;
						СнятьПодписи = Истина;
					Иначе
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						ПодписатьИОтправить = Истина;
						//СоздатьНовыйЭлектронныйДокумент = Истина;
						СнятьПодписи = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан") Тогда
					Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
						//Подписать = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						ОтредактироватьДокумент = Ложь;//Истина;
						СнятьПодписи = Истина;
					Иначе
						ПодписатьИОтправить = Истина;
						//СоздатьНовыйЭлектронныйДокумент = Истина;
						СнятьПодписи = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Отправлен") Тогда
					Отозвать = Истина;
					ПовторнаяОтправка = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоСообщениеОДоставке") Тогда
					Отозвать = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонение") Тогда
					СоздатьНовыйЭлектронныйДокумент = Истина;
					Если Документ.ЭтоОсновнойВариант Тогда
						СформироватьНовыйВариантЭлектронногоДокумента = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ДокументОтозван") Тогда
					СоздатьНовыйЭлектронныйДокумент = Истина;
					Если Документ.ЭтоОсновнойВариант Тогда
						СформироватьНовыйВариантЭлектронногоДокумента = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Получен") Тогда
					Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						ОтредактироватьДокумент = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоПодтверждение") Тогда
					Аннулировать = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоПодтверждение") Тогда
					Аннулировать = Истина;
				КонецЕсли;
				Если ПодписатьИОтправить Тогда
					Если Документ.ОшибкаШифрованияПриОтправке Тогда
						ПодписатьИОтправитьТолькоСсылку = Истина;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Документ.ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Входящий") Тогда
				НайтиДокумент1С = Истина;
				Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ВДаннойИнформационнойБазе") Тогда
					Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПустаяСсылка") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						ПодписатьИОтправить = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ЕстьТолькоДокумент1С") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						ПодписатьИОтправить = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Создан") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						ПодписатьИОтправить = Истина;
						//СнятьПодписи = Истина;
						//СоздатьНовыйЭлектронныйДокумент = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью") Тогда
						
						Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
							Подписать = Истина;
							ОтправитьНаДоподписание = Истина;
							Подтвердить = Истина;
							Отклонить = Истина;
							СнятьПодписи = Истина;
						Иначе
							Подписать = Истина;
							ОтправитьНаДоподписание = Истина;
							ПодписатьИОтправить = Истина;
							//СоздатьНовыйЭлектронныйДокумент = Истина;
							СнятьПодписи = Истина;
						КонецЕсли;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан") Тогда
						Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
							//Подписать = Истина;
							Подтвердить = Истина;
							Отклонить = Истина;
							СнятьПодписи = Истина;
						Иначе
							ПодписатьИОтправить = Истина;
							//СоздатьНовыйЭлектронныйДокумент = Истина;
							СнятьПодписи = Истина;
						КонецЕсли;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Отправлен") Тогда
						Отозвать = Истина;
						ПовторнаяОтправка = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоСообщениеОДоставке") Тогда
						Отозвать = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонение") Тогда
						СоздатьНовыйЭлектронныйДокумент = Истина;
						Если Документ.ЭтоОсновнойВариант Тогда
							СформироватьНовыйВариантЭлектронногоДокумента = Истина;
						КонецЕсли;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ДокументОтозван") Тогда
						СоздатьНовыйЭлектронныйДокумент = Истина;
						Если Документ.ЭтоОсновнойВариант Тогда
							СформироватьНовыйВариантЭлектронногоДокумента = Истина;
						КонецЕсли;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Получен") Тогда
						Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
							Подписать = Истина;
							ОтправитьНаДоподписание = Истина;
							Подтвердить = Истина;
							Отклонить = Истина;
						КонецЕсли;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоПодтверждение") Тогда
						Аннулировать = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоПодтверждение") Тогда
						Аннулировать = Истина;
					КонецЕсли;
					Если ПодписатьИОтправить Тогда
						Если Документ.ОшибкаШифрованияПриОтправке Тогда
							ПодписатьИОтправитьТолькоСсылку = Истина;
						КонецЕсли;
					КонецЕсли;
				
				Иначе
					Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Получен") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						ОтредактироватьДокумент = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью") Тогда
						
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						ОтредактироватьДокумент = Ложь;//Истина;
						СнятьПодписи = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан") Тогда
						Подтвердить = Истина;
						Отклонить = Истина;
						ОтредактироватьДокумент = Ложь;//Истина;
						СнятьПодписи = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоОтклонение") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоПодтверждение") Тогда
						
						ПовторнаяОтправка = Истина;
						Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоПодтверждение") Тогда
							Аннулировать = Истина;
						КонецЕсли;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоПодтверждение") Тогда
						Аннулировать = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоПодтверждение") Тогда
						Аннулировать = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ТребуетПовторногоУтверждения") Тогда
				Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ВДаннойИнформационнойБазе") Тогда
					Если Документ.ЭтоОсновнойВариант Тогда
						ПовторноеУтверждение = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Документ.ТипДокумента = ПредопределенноеЗначение("Перечисление.скEDI_ТипыЭлектронныхДокументов.СоглашениеОАнулированииДокумента") Тогда
			Если Документ.ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Исходящий") Тогда
				Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПустаяСсылка") Тогда
					Подписать = Истина;
					ОтправитьНаДоподписание = Истина;
					ПодписатьИОтправить = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ЕстьТолькоДокумент1С") Тогда
					Подписать = Истина;
					ОтправитьНаДоподписание = Истина;
					ПодписатьИОтправить = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Создан") Тогда
					Подписать = Истина;
					ОтправитьНаДоподписание = Истина;
					ПодписатьИОтправить = Истина;
					//СнятьПодписи = Истина;
					//СоздатьНовыйЭлектронныйДокумент = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью") Тогда
					
					Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						ОтредактироватьДокумент = Ложь;//Истина;
						СнятьПодписи = Истина;
					Иначе
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						ПодписатьИОтправить = Истина;
						//СоздатьНовыйЭлектронныйДокумент = Истина;
						СнятьПодписи = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан") Тогда
					Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
						//Подписать = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						ОтредактироватьДокумент = Ложь;//Истина;
						СнятьПодписи = Истина;
					Иначе
						ПодписатьИОтправить = Истина;
						//СоздатьНовыйЭлектронныйДокумент = Истина;
						СнятьПодписи = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Отправлен") Тогда
					//Отозвать = Истина;
					//ПовторнаяОтправка = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоСообщениеОДоставке") Тогда
					//Отозвать = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонение") Тогда
					СоздатьНовыйЭлектронныйДокумент = Истина;
					Если Документ.ЭтоОсновнойВариант Тогда
						СформироватьНовыйВариантЭлектронногоДокумента = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ДокументОтозван") Тогда
					СоздатьНовыйЭлектронныйДокумент = Истина;
					Если Документ.ЭтоОсновнойВариант Тогда
						СформироватьНовыйВариантЭлектронногоДокумента = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Получен") Тогда
					Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						ОтредактироватьДокумент = Истина;
					КонецЕсли;
				КонецЕсли;
				Если ПодписатьИОтправить Тогда
					Если Документ.ОшибкаШифрованияПриОтправке Тогда
						ПодписатьИОтправитьТолькоСсылку = Истина;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Документ.ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Входящий") Тогда
				Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ВДаннойИнформационнойБазе") Тогда
					Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПустаяСсылка") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						ПодписатьИОтправить = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ЕстьТолькоДокумент1С") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						ПодписатьИОтправить = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Создан") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						ПодписатьИОтправить = Истина;
						//СнятьПодписи = Истина;
						//СоздатьНовыйЭлектронныйДокумент = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью") Тогда
						
						Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
							Подписать = Истина;
							ОтправитьНаДоподписание = Истина;
							Подтвердить = Истина;
							Отклонить = Истина;
							СнятьПодписи = Истина;
						Иначе
							Подписать = Истина;
							ОтправитьНаДоподписание = Истина;
							ПодписатьИОтправить = Истина;
							//СоздатьНовыйЭлектронныйДокумент = Истина;
							СнятьПодписи = Истина;
						КонецЕсли;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан") Тогда
						Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
							//Подписать = Истина;
							Подтвердить = Истина;
							Отклонить = Истина;
							СнятьПодписи = Истина;
						Иначе
							ПодписатьИОтправить = Истина;
							//СоздатьНовыйЭлектронныйДокумент = Истина;
							СнятьПодписи = Истина;
						КонецЕсли;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Отправлен") Тогда
						//Отозвать = Истина;
						//ПовторнаяОтправка = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоСообщениеОДоставке") Тогда
						//Отозвать = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонение") Тогда
						СоздатьНовыйЭлектронныйДокумент = Истина;
						Если Документ.ЭтоОсновнойВариант Тогда
							СформироватьНовыйВариантЭлектронногоДокумента = Истина;
						КонецЕсли;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ДокументОтозван") Тогда
						СоздатьНовыйЭлектронныйДокумент = Истина;
						Если Документ.ЭтоОсновнойВариант Тогда
							СформироватьНовыйВариантЭлектронногоДокумента = Истина;
						КонецЕсли;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Получен") Тогда
						Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
							Подписать = Истина;
							ОтправитьНаДоподписание = Истина;
							Подтвердить = Истина;
							Отклонить = Истина;
						КонецЕсли;
					КонецЕсли;
					Если ПодписатьИОтправить Тогда
						Если Документ.ОшибкаШифрованияПриОтправке Тогда
							ПодписатьИОтправитьТолькоСсылку = Истина;
						КонецЕсли;
					КонецЕсли;
				
				Иначе
					Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Получен") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						ОтредактироватьДокумент = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью") Тогда
						
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						ОтредактироватьДокумент = Ложь;//Истина;
						СнятьПодписи = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан") Тогда
						Подтвердить = Истина;
						Отклонить = Истина;
						ОтредактироватьДокумент = Ложь;//Истина;
						СнятьПодписи = Истина;
					ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоОтклонение") 
						или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоПодтверждение") Тогда
						
						ПовторнаяОтправка = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ТребуетПовторногоУтверждения") Тогда
				Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ВДаннойИнформационнойБазе") Тогда
					Если Документ.ЭтоОсновнойВариант Тогда
						ПовторноеУтверждение = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Документ.ТипДокумента = ПредопределенноеЗначение("Перечисление.скEDI_ТипыЭлектронныхДокументов.ДокументСВложениями") Тогда
			Если Документ.ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Исходящий") Тогда
				Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПустаяСсылка") Тогда
					Подписать = Истина;
					ОтправитьНаДоподписание = Истина;
					ПодписатьИОтправить = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ЕстьТолькоДокумент1С") Тогда
					Подписать = Истина;
					ОтправитьНаДоподписание = Истина;
					ПодписатьИОтправить = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Создан") Тогда
					Подписать = Истина;
					ОтправитьНаДоподписание = Истина;
					ПодписатьИОтправить = Истина;
					//СнятьПодписи = Истина;
					//СоздатьНовыйЭлектронныйДокумент = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью") Тогда
					
					Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						СнятьПодписи = Истина;
					Иначе
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						ПодписатьИОтправить = Истина;
						//СоздатьНовыйЭлектронныйДокумент = Истина;
						СнятьПодписи = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан") Тогда
					Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
						//Подписать = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
						СнятьПодписи = Истина;
					Иначе
						ПодписатьИОтправить = Истина;
						//СоздатьНовыйЭлектронныйДокумент = Истина;
						СнятьПодписи = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Отправлен") Тогда
					Отозвать = Истина;
					ПовторнаяОтправка = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоСообщениеОДоставке") Тогда
					Отозвать = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонение") Тогда
					СоздатьНовыйЭлектронныйДокумент = Истина;
					//Если Документ.ЭтоОсновнойВариант Тогда
					//	СформироватьНовыйВариантЭлектронногоДокумента = Истина;
					//КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ДокументОтозван") Тогда
					СоздатьНовыйЭлектронныйДокумент = Истина;
					//Если Документ.ЭтоОсновнойВариант Тогда
					//	СформироватьНовыйВариантЭлектронногоДокумента = Истина;
					//КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Получен") Тогда
					Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПолученОтКонтрагента") Тогда
						Подписать = Истина;
						ОтправитьНаДоподписание = Истина;
						Подтвердить = Истина;
						Отклонить = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоПодтверждение") Тогда
					Аннулировать = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоПодтверждение") Тогда
					Аннулировать = Истина;
				КонецЕсли;
				Если ПодписатьИОтправить Тогда
					Если Документ.ОшибкаШифрованияПриОтправке Тогда
						ПодписатьИОтправитьТолькоСсылку = Истина;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Документ.ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Входящий") Тогда
				Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Получен") Тогда
					Подписать = Истина;
					ОтправитьНаДоподписание = Истина;
					Подтвердить = Истина;
					Отклонить = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью") Тогда
					
					Подписать = Истина;
					ОтправитьНаДоподписание = Истина;
					Подтвердить = Истина;
					Отклонить = Истина;
					СнятьПодписи = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан") Тогда
					Подтвердить = Истина;
					Отклонить = Истина;
					СнятьПодписи = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоОтклонение") 
					или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоПодтверждение") Тогда
					
					ПовторнаяОтправка = Истина;
					Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоПодтверждение") Тогда
						Аннулировать = Истина;
					КонецЕсли;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоПодтверждение") Тогда
					Аннулировать = Истина;
				ИначеЕсли Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоПодтверждение") Тогда
					Аннулировать = Истина;
				КонецЕсли;
			КонецЕсли;
			
			Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ТребуетПовторногоУтверждения") Тогда
				Если Документ.ГдеСоздан = ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ВДаннойИнформационнойБазе") Тогда
					Если Документ.ЭтоОсновнойВариант Тогда
						ПовторноеУтверждение = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если Документ.СоответствиеДокументов = ПредопределенноеЗначение("Перечисление.скEDI_СоответствиеДокументов1СиЭлектронныхДокументов.ЕстьЭлектронныйДокументНетДокумент1С") Тогда
			СоздатьДокумент1С = Истина;
		КонецЕсли;
		Если Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично") 
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьБухгалтеру") 
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьДиректору") 
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПодписанЧастично_НаПодписьПечатью")  
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Подписан")  
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Отправлен")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоСообщениеОДоставке")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоПодтверждение")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонение")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Получен")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоПодтверждение")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленоОтклонение")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтозванОтправителем")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ДокументОтозван")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.Аннулировано")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ЗаявленоКАннулированию")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленВДФС")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоКвитанциюОтДФС")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоПодтверждениеОтДФС")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученоОтклонениеОтДФС")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПолученОтКонтрагентаЗарегистрированыйВЕРПН")
			или Документ.Состояние = ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ОтправленКонтрагентуДляРегистрацииВЕРПН") Тогда
			
			ЭкспортДокументов = Истина;
		КонецЕсли;
		Если Документ.НеобходимоПроведениеДокумента1С Тогда
			ПровестиДокумент1С = Истина;
		КонецЕсли; 
		Если Документ.ЭтоОсновнойВариант = Ложь Тогда
			УстановитьОсновнойВариантЭлектронногоДокумента = Истина;
		КонецЕсли;
		
		Если ЭтоПервыйДокумент Тогда
			Результат.Подписать = Подписать;
			Результат.ПодписатьИОтправить = ПодписатьИОтправить;
			Результат.ПодписатьИОтправитьТолькоСсылку = ПодписатьИОтправитьТолькоСсылку;
			Результат.ОтправитьНаДоподписание = ОтправитьНаДоподписание;
			Результат.ПодписатьИОтправитьВДФС = ПодписатьИОтправитьВДФС;
			Результат.Подтвердить = Подтвердить;
			Результат.Отклонить = Отклонить;
			Результат.Отозвать = Отозвать;
			Результат.ПовторнаяОтправка = ПовторнаяОтправка;
			Результат.СоздатьДокумент1С = СоздатьДокумент1С;
			Результат.НайтиДокумент1С = НайтиДокумент1С;
			Результат.ПровестиДокумент1С = ПровестиДокумент1С;
			Результат.СоздатьНовыйЭлектронныйДокумент = СоздатьНовыйЭлектронныйДокумент;
			Результат.СнятьПодписи = СнятьПодписи;
			Результат.Проверить = Проверить;
			Результат.ЭкспортДокументов = ЭкспортДокументов;
			Результат.ОтправитьЗапросОСостоянииРегистрации = ОтправитьЗапросОСостоянииРегистрации;
			Результат.СформироватьНовыйВариантЭлектронногоДокумента = СформироватьНовыйВариантЭлектронногоДокумента;
			Результат.ОтредактироватьДокумент = ОтредактироватьДокумент;
			Результат.УстановитьОсновнойВариантЭлектронногоДокумента = УстановитьОсновнойВариантЭлектронногоДокумента;
			Результат.Аннулировать = Аннулировать;
			Результат.ПовторноеУтверждение = ПовторноеУтверждение;
		Иначе
			Если Не Подписать Тогда
				Результат.Подписать = Ложь;
			КонецЕсли;
			Если Не ПодписатьИОтправить Тогда
				Результат.ПодписатьИОтправить = Ложь;
			КонецЕсли;
			Если Не ПодписатьИОтправитьТолькоСсылку Тогда
				Результат.ПодписатьИОтправитьТолькоСсылку = Ложь;
			КонецЕсли;
			Если Не ОтправитьНаДоподписание Тогда
				Результат.ОтправитьНаДоподписание = Ложь;
			КонецЕсли;
			Если Не ПодписатьИОтправитьВДФС Тогда
				Результат.ПодписатьИОтправитьВДФС = Ложь;
			КонецЕсли;
			Если Не Подтвердить Тогда
				Результат.Подтвердить = Ложь;
			КонецЕсли;
			Если Не Отклонить Тогда
				Результат.Отклонить = Ложь;
			КонецЕсли;
			Если Не Отозвать Тогда
				Результат.Отозвать = Ложь;
			КонецЕсли;
			Если Не ПовторнаяОтправка Тогда
				Результат.ПовторнаяОтправка = Ложь;
			КонецЕсли;
			Если Не СоздатьДокумент1С Тогда
				Результат.СоздатьДокумент1С = Ложь;
			КонецЕсли;
			Если Не ПровестиДокумент1С Тогда
				Результат.ПровестиДокумент1С = Ложь;
			КонецЕсли;
			Результат.СоздатьНовыйЭлектронныйДокумент = Ложь;
			Если Не СнятьПодписи Тогда
				Результат.СнятьПодписи = Ложь;
			КонецЕсли;
			Если Не Проверить Тогда
				Результат.Проверить = Ложь;
			КонецЕсли;
			Если Не ЭкспортДокументов Тогда
				Результат.ЭкспортДокументов = Ложь;
			КонецЕсли;
			Если Не ОтправитьЗапросОСостоянииРегистрации Тогда
				Результат.ОтправитьЗапросОСостоянииРегистрации = Ложь;
			КонецЕсли;
			Если Не СформироватьНовыйВариантЭлектронногоДокумента Тогда
				Результат.СформироватьНовыйВариантЭлектронногоДокумента = Ложь;
			КонецЕсли;
			Результат.ОтредактироватьДокумент = Ложь;
			Если Не УстановитьОсновнойВариантЭлектронногоДокумента Тогда
				Результат.УстановитьОсновнойВариантЭлектронногоДокумента = Ложь;
			КонецЕсли;
			//Если Не Аннулировать Тогда
				Результат.Аннулировать = Ложь;
			//КонецЕсли;
			Результат.НайтиДокумент1С = Ложь;
			Если Не ПовторноеУтверждение Тогда
				Результат.ПовторноеУтверждение = Ложь;
			КонецЕсли;
		КонецЕсли;
		ЭтоПервыйДокумент = Ложь;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Процедура ЗагрузитьСертификатыИзИнтернетаПоОрганизации(СписокЕДРПОУ, ТекЕДРПОУ, Организация, Владелец, ОповеститьОЗавершении = Ложь) Экспорт
	
	СтруктураПараметров = Новый Структура("Организация, Владелец", Организация, Владелец);
	ТекЭлемент = Неопределено;
	Для каждого ЭлементСпискаЗначений Из СписокЕДРПОУ Цикл
		Если ЭлементСпискаЗначений.Значение = ТекЕДРПОУ Тогда
			ТекЭлемент = ЭлементСпискаЗначений;
			Прервать;
		КонецЕсли;
	КонецЦикла; 
	
	Если скEDI_ОбщегоНазначения.ЭтоПлатформа82() Тогда 
		ВыбраныйЭлементСписка = СписокЕДРПОУ.ВыбратьЭлемент(НСтр("ru = 'Искать сертификаты по ЕДРПОУ'; uk = 'Шукати сертифікати по ЄДРПОУ'"), ТекЭлемент);
		ЗагрузитьСертификатыИзИнтернета_ПослеВыбораЕДРПОУ(ВыбраныйЭлементСписка, СтруктураПараметров);
	Иначе
		СтруктураПараметров.Вставить("ОповеститьОЗавершении" , ОповеститьОЗавершении);
		скEDI_ОткрытиеФормБезМодальности.ОткрытьФормуВыбораЕДРПОУизСпискаДляЗагрузкиСертификатов(СписокЕДРПОУ, ТекЭлемент, СтруктураПараметров);
	КонецЕсли;
КонецПроцедуры

Процедура ЗагрузитьСертификатыИзИнтернета_ПослеВыбораЕДРПОУ(ВыбраныйЭлементСписка, ДополнительныеПараметры) Экспорт
	Если ВыбраныйЭлементСписка <> Неопределено Тогда
		тОрганизация = ДополнительныеПараметры.Организация;
		ОрганизацияНастроена = Ложь;
		ПолучитьИОбработатьМассивСертификатовИзИнтернета(ВыбраныйЭлементСписка.Значение, тОрганизация, ОрганизацияНастроена, ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры

Процедура ПолучитьИОбработатьМассивСертификатовИзИнтернета(ЕДРПОУ, Организация, ОрганизацияНастроена, ДополнительныеПараметры) Экспорт
	
	лПараметрыКомандыEDIПровайдеру = Новый Структура;
	лПараметрыКомандыEDIПровайдеру.Вставить("Edrpou", ЕДРПОУ);
	
	лСтруктураСОтветомEDIПровайдера = скEDI_КомандыEDIПровайдеру.ПолучитьРезультатКомандыEDIПровайдеру("svc/getcert", лПараметрыКомандыEDIПровайдеру);
	Если лСтруктураСОтветомEDIПровайдера.Code <> 0 Тогда
		//Сообщить("Ошибка получения информации о сертификатах: " + лСтруктураСОтветомEDIПровайдера.Message + " (код ошибки: " + лСтруктураСОтветомEDIПровайдера.Code + ")");
		Сообщить("Ошибка получения информации о сертификатах: " + лСтруктураСОтветомEDIПровайдера.Message);
	Иначе
		МассивСертификатов = Новый Массив;
		Для Каждого ТекСертификат Из лСтруктураСОтветомEDIПровайдера.Certs Цикл
			лИнформацияОСертификате = ПолучитьИнформациюОСертификате(ТекСертификат);
			Если ЗначениеЗаполнено(лИнформацияОСертификате) Тогда
				//Если ЗначениеЗаполнено(лИнформацияОСертификате.EDRPOU) Тогда
					Сертификат = Новый Структура;
					//Сертификат.Вставить("ПутьКФайлу", ТекФайл);
					Сертификат.Вставить("Информация", лИнформацияОСертификате);
					Сертификат.Вставить("ТелоСертификата", ТекСертификат);
					МассивСертификатов.Добавить(Сертификат);
				//КонецЕсли; 
			КонецЕсли; 
		КонецЦикла;
		Если МассивСертификатов.Количество() = 0 Тогда
			Сообщить(НСтр("ru = 'По ЕДРПОУ ""'; uk = 'По ЄДРПОУ ""'") + ЕДРПОУ + НСтр("ru = '"" сертификаты не найдены.'; uk = '"" сертифікати не знайдені.'"));
		Иначе
			ОбработатьМассивСертификатов(МассивСертификатов, Организация, ОрганизацияНастроена, ДополнительныеПараметры);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ОбработатьМассивФайловСертификатов

Процедура ЗагрузитьСертификатыИзФайлаПоОрганизации(Организация, Владелец, ОповеститьОЗавершении = Ложь) Экспорт
	
	СтруктураПараметров = Новый Структура("Организация, Владелец", Организация, Владелец);
	лДиалогВыбораФайлов = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	лДиалогВыбораФайлов.ПолноеИмяФайла = "";
	лДиалогВыбораФайлов.Фильтр = НСтр("ru = 'Сертификат '; en = 'Сертифікат '")	+ "(*.cer; *.crt)|*.cer;*.crt";
	лДиалогВыбораФайлов.МножественныйВыбор = Истина;
	лДиалогВыбораФайлов.Заголовок = "Выберите файлы сертификатов";
	Если скEDI_ОбщегоНазначения.ЭтоПлатформа82() Тогда 
		лДиалогВыбораФайлов.Выбрать();
		ЗагрузитьСертификатыИзФайла_ПослеВыбораФайлов(лДиалогВыбораФайлов.ВыбранныеФайлы, СтруктураПараметров);	
	Иначе
		
		СтруктураПараметров.Вставить("ОповеститьОЗавершении" , ОповеститьОЗавершении);
		
		скEDI_ОткрытиеФормБезМодальности.ОткрытьФормуВыбораФайловСертификатов(лДиалогВыбораФайлов, СтруктураПараметров);
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗагрузитьСертификатыИзФайла() Экспорт
	ЗагрузитьСертификатыИзФайлаПоОрганизации(ПредопределенноеЗначение("Справочник.скEDI_Организации.ПустаяСсылка"), Неопределено);
КонецПроцедуры

Процедура ЗагрузитьСертификатыИзФайла_ПослеВыбораФайлов(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	Если ВыбранныеФайлы <> Неопределено Тогда
		тОрганизация = ДополнительныеПараметры.Организация;
		ОрганизацияНастроена = Ложь;
		ОбработатьМассивФайловСертификатов(ВыбранныеФайлы, тОрганизация, ОрганизацияНастроена, ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьИнформациюОСертификате(СтрокаBase64_Сертификат)
	ИнформацияОСертификате = Неопределено;
	
	лПараметрыКомандыEDIПровайдеру = Новый Структура;
	лПараметрыКомандыEDIПровайдеру.Вставить("Cert", СтрокаBase64_Сертификат);
	
	лСтруктураСОтветомEDIПровайдера = скEDI_КомандыEDIПровайдеру.ПолучитьРезультатКомандыEDIПровайдеру("getcertinfo", лПараметрыКомандыEDIПровайдеру);
	
	Если лСтруктураСОтветомEDIПровайдера.Code <> 0 Тогда
		
		//Сообщить("Ошибка получения информации о сертификате: " + лСтруктураСОтветомEDIПровайдера.Message + " (код ошибки: " + лСтруктураСОтветомEDIПровайдера.Code + ")");
		Сообщить("Ошибка получения информации о сертификате: " + лСтруктураСОтветомEDIПровайдера.Message);
		
	Иначе
		
		ИнформацияОСертификате = лСтруктураСОтветомEDIПровайдера.Info;
		
	КонецЕсли;
	
	Возврат ИнформацияОСертификате;
	
КонецФункции // ПолучитьИнформациюОСертификате()

Процедура ОбработатьМассивФайловСертификатов(МассивФайловСертификатов, Организация, ОрганизацияНастроена, ДополнительныеПараметры)
	МассивСертификатов = Новый Массив;
	Для Каждого ТекФайл Из МассивФайловСертификатов Цикл
		ТекФайлОбъект = Новый Файл(ТекФайл);
		Если ТекФайлОбъект.Существует() Тогда
			лСтрокаBase64_Сертификат = Base64Строка(Новый ДвоичныеДанные(ТекФайл));
			лИнформацияОСертификате = ПолучитьИнформациюОСертификате(лСтрокаBase64_Сертификат);
			Если ЗначениеЗаполнено(лИнформацияОСертификате) Тогда
				//2018-02-26 Если ЗначениеЗаполнено(лИнформацияОСертификате.EDRPOU) Тогда
				Если ЗначениеЗаполнено(лИнформацияОСертификате.EDRPOU) или ЗначениеЗаполнено(лИнформацияОСертификате.DRFO) Тогда
					Сертификат = Новый Структура;
					Сертификат.Вставить("ПутьКФайлу", ТекФайл);
					Сертификат.Вставить("Информация", лИнформацияОСертификате);
					Сертификат.Вставить("ТелоСертификата", лСтрокаBase64_Сертификат);
					МассивСертификатов.Добавить(Сертификат);
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
	ОбработатьМассивСертификатов(МассивСертификатов, Организация, ОрганизацияНастроена, ДополнительныеПараметры);
КонецПроцедуры // ОбработатьМассивФайловСертификатов

Процедура ОбработатьМассивСертификатов(МассивСертификатов, Организация, БылаПроведенаНастройкаОрганизации, ДополнительныеПараметры)
	БылаПроведенаНастройкаОрганизации = Ложь;
	
	ЕДРПОУ = скEDI_ОбщегоНазначения.ПолучитьРеквизитСсылки(Организация, "Код");

	Если СтрДлина(СокрЛП(ЕДРПОУ)) >= 8 Тогда
		ОрганизацияНастроена = Истина;
	Иначе
		ОрганизацияНастроена = Ложь;
	КонецЕсли; 
	НастроитьОрганизациюЕДРПОУ = "";
	НастроитьОрганизациюНаименование = "";
	
	Если Не ОрганизацияНастроена Тогда
		СписокОрганизацийЕДРПОУ = Новый СписокЗначений;
		Для Каждого ТекСертификат Из МассивСертификатов Цикл
			Если ЗначениеЗаполнено(ТекСертификат.Информация.EDRPOU) Тогда
				Если СписокОрганизацийЕДРПОУ.НайтиПоЗначению(ТекСертификат.Информация.EDRPOU) = Неопределено Тогда
					НоваяСтрока = СписокОрганизацийЕДРПОУ.Добавить();
					НоваяСтрока.Значение 	  = ТекСертификат.Информация.EDRPOU;
					НоваяСтрока.Представление = "(" + ТекСертификат.Информация.EDRPOU + ") " + ТекСертификат.Информация.OrganizationName;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		СтруктураДополнительныхПараметров = Новый Структура("ОрганизацияНастроена, МассивСертификатов, Организация, БылаПроведенаНастройкаОрганизации, Владелец",
															 ОрганизацияНастроена, МассивСертификатов, Организация, БылаПроведенаНастройкаОрганизации, ДополнительныеПараметры.Владелец);
															 
		Если ДополнительныеПараметры.Свойство("ОповеститьОЗавершении") И ДополнительныеПараметры.ОповеститьОЗавершении Тогда 
			СтруктураДополнительныхПараметров.Вставить("ОповеститьОЗавершении" , ДополнительныеПараметры.ОповеститьОЗавершении);	
		КонецЕсли;	
													 
		Если скEDI_ОбщегоНазначения.ЭтоПлатформа82() Тогда
			ВыбранаяСтрокаСписка = СписокОрганизацийЕДРПОУ.ВыбратьЭлемент("По данной Организации будет настроен электронный документооборот");
			ПослеВыбораОрганизацииEDI(ВыбранаяСтрокаСписка, СтруктураДополнительныхПараметров);	
		Иначе
			ПараметрыОткрытия = Новый Структура("СписокОрганизацийЕДРПОУ", СписокОрганизацийЕДРПОУ);
			скEDI_ОткрытиеФормБезМодальности.ОткрытьФормуВыбораОрганизацииEDIПриОбработкеСертификатов(ПараметрыОткрытия, СтруктураДополнительныхПараметров);
		КонецЕсли;
	Иначе
		скEDI_ОбщегоНазначения.ОбработатьМассивСертификатовНаСервере(МассивСертификатов, Организация, ОрганизацияНастроена, НастроитьОрганизациюЕДРПОУ, НастроитьОрганизациюНаименование, БылаПроведенаНастройкаОрганизации);	
		ДополнительныеПараметры.Владелец.Элементы.Подписи.Обновить();	
	КонецЕсли;
КонецПроцедуры

Процедура ПослеВыбораОрганизацииEDI(ВыбранныйЭлемент, СтруктураДополнительныхПараметров) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		НастроитьОрганизациюЕДРПОУ 		 = ВыбранныйЭлемент.Значение;
		НастроитьОрганизациюНаименование = СтрЗаменить(ВыбранныйЭлемент.Представление, "(" + НастроитьОрганизациюЕДРПОУ + ") ", "");
	КонецЕсли;

	ОрганизацияНастроена = Ложь;
	СтруктураДополнительныхПараметров.Свойство("ОрганизацияНастроена", ОрганизацияНастроена);
	
	Если НЕ ОрганизацияНастроена И НЕ ЗначениеЗаполнено(НастроитьОрганизациюЕДРПОУ) Тогда
		Сообщить(НСтр("ru = 'Организация не выбрана'; uk = 'Організація не вибрана'"));
		Возврат;
	КонецЕсли;
		
	МассивСертификатов = Новый Массив;
	СтруктураДополнительныхПараметров.Свойство("МассивСертификатов", МассивСертификатов);
	
	Организация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
	СтруктураДополнительныхПараметров.Свойство("Организация", Организация);
	
	БылаПроведенаНастройкаОрганизации = Ложь;
	СтруктураДополнительныхПараметров.Свойство("БылаПроведенаНастройкаОрганизации", БылаПроведенаНастройкаОрганизации);
	
	скEDI_ОбщегоНазначения.ОбработатьМассивСертификатовНаСервере(МассивСертификатов, Организация, ОрганизацияНастроена, НастроитьОрганизациюЕДРПОУ, НастроитьОрганизациюНаименование, БылаПроведенаНастройкаОрганизации);	
	
	Если СтруктураДополнительныхПараметров.Владелец <> Неопределено Тогда
		СтруктураДополнительныхПараметров.Владелец.УстановитьВыбрануюОрганизацию(Организация);
		Если БылаПроведенаНастройкаОрганизации Тогда
			ПараметрыЗагрузкиНастроекПоШаблону = Новый Структура("ОрганизацияEDI", Организация);
			
			Если СтруктураДополнительныхПараметров.Свойство("ОповеститьОЗавершении") И СтруктураДополнительныхПараметров.ОповеститьОЗавершении Тогда 
				ПараметрыЗагрузкиНастроекПоШаблону.Вставить("ОповеститьОЗавершении" , СтруктураДополнительныхПараметров.ОповеститьОЗавершении);	
			КонецЕсли;
			
			Если скEDI_ОбщегоНазначения.ЭтоПлатформа82() Тогда
				ОткрытьФормуМодально("Справочник.скEDI_ВидыЭлектронныхДокументов.Форма.ФормаЗагрузкиНастроекПоШаблону", ПараметрыЗагрузкиНастроекПоШаблону, СтруктураДополнительныхПараметров.Владелец);
			Иначе
				скEDI_ОткрытиеФормБезМодальности.ОткрытьФормуЗагрузкиНастроекПоШаблону(ПараметрыЗагрузкиНастроекПоШаблону, СтруктураДополнительныхПараметров.Владелец);
			КонецЕсли;
		КонецЕсли;
	Иначе
				
		Если БылаПроведенаНастройкаОрганизации Тогда
			ПараметрыПодбора = Новый Структура("ОрганизацияEDI", Организация);
			
			Если СтруктураДополнительныхПараметров.Свойство("ОповеститьОЗавершении") И СтруктураДополнительныхПараметров.ОповеститьОЗавершении Тогда 
				ПараметрыПодбора.Вставить("ОповеститьОЗавершении" , СтруктураДополнительныхПараметров.ОповеститьОЗавершении);	
			КонецЕсли;
			Если скEDI_ОбщегоНазначения.ЭтоПлатформа82() Тогда
				ОткрытьФормуМодально("Справочник.скEDI_ВидыЭлектронныхДокументов.Форма.ФормаЗагрузкиНастроекПоШаблону", ПараметрыПодбора);
			Иначе
				скEDI_ОткрытиеФормБезМодальности.ОткрытьФормуЗагрузкиНастроекПоШаблону(ПараметрыПодбора, СтруктураДополнительныхПараметров.Владелец);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

Функция ПолучитьСтруктуруДанныхПоЭлектронномуДокументу() Экспорт
	Возврат Новый Структура("Организация, Документ1С, ВидЭлектронногоДокумента, 
	|ЭлектронныйДокумент, ВидДокумента1С,
	|Состояние, РегистрируетсяВЕРННПокупателем,
	|ВхИсх,ГдеСоздан,
	|ДатаСозданияДокумента,
	|ТелоДокумента, ИзображениеДокумента,
	|ВложениеДокумента1, ИмяФайлаВложениеДокумента1, ВложениеДокументаФайл1,
	|ВложениеДокумента2, ИмяФайлаВложениеДокумента2, ВложениеДокументаФайл2,
	|ВложениеДокумента3, ИмяФайлаВложениеДокумента3, ВложениеДокументаФайл3,
	|МассивВложенийДокумента4,
	|МассивНастроекОтправкаСсылкиНаДокумент,
	|Примечание,
	|ПроверкаВыполнена, ЕстьОшибки, ЕстьЗамечания, ОписаниеОшибок",
	ПредопределенноеЗначение("Справочник.скEDI_Организации.ПустаяСсылка"),
	Неопределено,
	ПредопределенноеЗначение("Справочник.скEDI_ВидыЭлектронныхДокументов.ПустаяСсылка"),
	ПредопределенноеЗначение("Документ.скEDI_ЭлектронныйДокумент.ПустаяСсылка"),
	ПредопределенноеЗначение("Перечисление.скEDI_ВидыДокументов1С.ПустаяСсылка"),
	ПредопределенноеЗначение("Перечисление.скEDI_СостоянияЭлектронныхДокументов.ПустаяСсылка"),
	Ложь,
	ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.ПустаяСсылка"),
	ПредопределенноеЗначение("Перечисление.скEDI_ГдеСоздан.ПустаяСсылка"),
	Неопределено,
	"", "",
	"", "", Неопределено, "", "", Неопределено, "", "", Неопределено,
	Неопределено,
	Неопределено,
	"",
	Ложь, Ложь, Ложь, "");
КонецФункции

Функция ЭтоТолстыйКлиент() Экспорт
	
	#Если ТолстыйКлиентУправляемоеПриложение ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ТонкийКлиентОбычноеПриложение Тогда
		Возврат Истина;
	#Иначе
		Возврат Ложь;
	#КонецЕсли
	
КонецФункции

Процедура ПоказатьПредупреждение_(ТекстПредупреждение) Экспорт
	Если скEDI_ОбщегоНазначения.ЭтоПлатформа82() Тогда 
		Предупреждение(ТекстПредупреждение);
	Иначе
		скEDI_ОткрытиеФормБезМодальности.ПоказатьПредупреждение_83(ТекстПредупреждение);
	КонецЕсли;
КонецПроцедуры
