
#Область ПрограммныйИнтерфейс

// Открывает диалог выбора файла для загрузки с последующим распознаванием данных файла.
//
// Параметры: 
//   ПараметрыЗагрузки   - Структура           - см. ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных.
//   ОповещениеОЗагрузке - ОписаниеОповещения  - оповещение, которое будет вызвано после загрузки данных.
//
Процедура ВыбратьФайлДляЗагрузки(ИмяОткрываемойФормы, УникальныйИдентификатор) Экспорт
	
	Параметры = Новый Структура("ИмяФормы, УникальныйИдентификатор", ИмяОткрываемойФормы, УникальныйИдентификатор);
	Оповещение = Новый ОписаниеОповещения("ОбработкаВыбораФайла", ЭтотОбъект, Параметры);
	
	ПараметрыЗагрузки = ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.Диалог.Фильтр = НСтр("ru='Все поддерживаемые форматы файлов(*.xls;*.xlsx;*.ods;*.mxl;*.csv)|*.xls;*.xlsx;*.ods;*.mxl;*.csv';uk='Всі формати файлів, що підтримуються (*.xls;*.xlsx;*.ods;*.mxl;*.csv)|*.xls;*.xlsx;*.ods;*.mxl;*.csv'");
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	
	ЗагрузитьФайл(Оповещение, ПараметрыЗагрузки);
	
КонецПроцедуры

// Показывает диалог выбора файла и помещает выбранный файл во временное хранилище.
// Совмещает работу методов глобального контекста НачатьПомещениеФайла и НачатьПомещениеФайлов,
// возвращая идентичный результат вне зависимости от того, подключено расширение работы с файлами или нет.
// Ограничения:
//   Не используется для выбора каталогов - эта опция не поддерживается веб-клиентом.
//
// Параметры:
//   ОбработчикЗавершения- ОписаниеОповещения - содержит описание процедуры, которая будет вызвана после
//                             загрузки файла со следующими параметрами:
//      * ПомещенныйФайл - Неопределено - пользователь отказался от выбора.
//                        - Структура    - пользователь выбрал файл.
//                            ** Хранение - Строка - расположение данных во временном хранилище.
//                            ** Имя      - Строка - локальный путь, по которому должен быть получен файл.
//      * ДополнительныеПараметры - Произвольный - значение, которое было указано при создании объекта
//                                ОписаниеОповещения.
//   ПараметрыЗагрузки         - Структура - См. ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла.
//   ИмяФайла                  - Строка - полный путь к файлу, который будет предложен пользователю в начале
//                             интерактивного выбора или помещен во временное хранилище в неинтерактивном. Если
//                             выбран неинтерактивный режим и параметр не заполнен, будет вызвано исключение.
//   АдресВоВременномХранилище - Строка - адрес, по которому будет сохранен файл.
//
// Пример:
//   Оповещение = Новый ОписаниеОповещения("ВыбратьФайлПослеПомещенияФайла", ЭтотОбъект, Контекст);
//   ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
//   ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
//   ФайловаяСистемаКлиент.ЗагрузитьФайл(Оповещение, ПараметрыЗагрузки);
//
Процедура ЗагрузитьФайл(
		ОбработчикЗавершения, 
		ПараметрыЗагрузки = Неопределено, 
		ИмяФайла = "",
		АдресВоВременномХранилище = "") Экспорт
	
	Если ПараметрыЗагрузки = Неопределено Тогда
		ПараметрыЗагрузки = ПараметрыЗагрузкиФайла();
	ИначеЕсли Не ПараметрыЗагрузки.Интерактивно
		И ПустаяСтрока(ИмяФайла) Тогда
		ВызватьИсключение НСтр("ru='Не указано имя файла для загрузки в неинтерактивном режиме.';uk='Не зазначено ім''я файлу для завантаження в неінтерактивному режимі.'");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПараметрыЗагрузки.ИдентификаторФормы) Тогда
		ПараметрыЗагрузки.ИдентификаторФормы = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	ОписаниеФайла    = Новый ОписаниеПередаваемогоФайла(ИмяФайла, АдресВоВременномХранилище);
	ЗагружаемыеФайлы = Новый Массив;
	ЗагружаемыеФайлы.Добавить(ОписаниеФайла);
	ПараметрыЗагрузки.Вставить("ЗагружаемыеФайлы", ЗагружаемыеФайлы);
	
	ПараметрыЗагрузки.Диалог.ПолноеИмяФайла     = ИмяФайла;
	ПараметрыЗагрузки.Диалог.МножественныйВыбор = Ложь;
	СтандартныеПодсистемыКлиент.ПоказатьПомещениеФайла(ОбработчикЗавершения,ПараметрыЗагрузки.ИдентификаторФормы,ИмяФайла, ПараметрыЗагрузки);
	
КонецПроцедуры

// Инициализирует структуру параметров для загрузки файла из файловой системы.
// Для использования в ФайловаяСистемаКлиент.ЗагрузитьФайл и ФайловаяСистемаКлиент.ЗагрузитьФайлы
//
// Возвращаемое значение:
//  Структура - со свойствами:
//    * ИдентификаторФормы - УникальныйИдентификатор - Уникальный идентификатор формы, из
//                         которой выполняется размещение файла. Если параметр не заполнен,
//                         необходимо вызывать метод глобального контекста УдалитьИзВременногоХранилища
//                         после завершения работы с полученными двоичными данными. Значение по
//                         умолчанию - Неопределено.
//    * Интерактивно       - Булево - Указывает использование интерактивного режима, при котором
//                         пользователю показывается диалог выбора файлов. Значение по
//                         умолчанию - Истина.
//    * Диалог             - ДиалогВыбораФайла - свойства см. в синтакс-помощнике.
//                         Используется, если свойство Интерактивно принимает значение Истина и
//                         удалось подключить расширение работы с файлами.
//    * ТекстПредложения   - Строка - текст предложения об установке расширения. Если параметр
//                         принимает значение "", будет выведен стандартный текст предложения.
//                         Значение по умолчанию - "".
//
// Пример:
//  ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
//  ПараметрыЗагрузки.Диалог.Заголовок = НСтр("ru='Выберите документ'");
//  ПараметрыЗагрузки.Диалог.Фильтр = НСтр("ru='Файлы MS Word (*.doc;*.docx)|*.doc;*.docx|Все файлы(*.*)|*.*'");
//  ФайловаяСистемаКлиент.ЗагрузитьФайл(Оповещение, ПараметрыЗагрузки);
//
Функция ПараметрыЗагрузкиФайла() Экспорт
	
	ПараметрыЗагрузки = КонтекстОперации(РежимДиалогаВыбораФайла.Открытие);
	ПараметрыЗагрузки.Вставить("ИдентификаторФормы", Неопределено);
	Возврат ПараметрыЗагрузки;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Проверяет, что для всех колонок табличного документа указан соответствующий реквизит.
//
// Параметры:
//   ТабличныйДокумент - ТабличныйДокумент - проверяемый табличный документ.
//   ИмяРеквизитаФормы - Строка - имя реквизита, к которому будут привязаны выводимые сообщения об ошибках.
//   ОписаниеКолонок - ДанныеФормыКоллекция - таблица значений, содержащая описание загружаемых колонок.
//                                            См. ЗагрузкаДанныхИзВнешнихФайлов.НовыйОписаниеЗагружаемыхКолонок()
//
// Возвращаемое значение:
//   Булево - результат проверки:
//      * Истина - если все колонки сопоставлены с реквизитами и сопоставлены обязательные реквизиты;
//      * Ложь - в противном случае.
//
Функция ЗаполненыВсеЗаголовкиКолонок(ТабличныйДокумент, ИмяРеквизитаФормы, Знач ОписаниеКолонок) Экспорт
	
	Если ТипЗнч(ОписаниеКолонок) <> Тип("ДанныеФормыКоллекция") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ОбязательныеКолонки = ОбязательныеКолонки(ОписаниеКолонок);
	
	ЕстьНезаполненныйЗаголовок = Ложь;
	ШиринаТаблицы = ТабличныйДокумент.ШиринаТаблицы;
	ТекстНезаполненныйЗаголовок = ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.ТекстЗаголовкаНесопоставленнойКолонки();
	
	Для НомерКолонки = 1 по ШиринаТаблицы Цикл
		
		Ячейка = ТабличныйДокумент.Область("R1C" + НомерКолонки);
		
		Если Ячейка.Текст = ТекстНезаполненныйЗаголовок Тогда
			ЕстьНезаполненныйЗаголовок = Истина;
			Продолжить;
		КонецЕсли;
		
		ОбязательнаяКолонка = ОбязательныеКолонки.Найти(Ячейка.ПараметрРасшифровки);
		Если ОбязательнаяКолонка <> Неопределено Тогда
			ОбязательныеКолонки.Удалить(ОбязательнаяКолонка);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьНезаполненныйЗаголовок Тогда
		ТекстСообщения = НСтр("ru='Укажите названия реквизитов в заголовках колонок. Если колонку не требуется загружать, удалите ее.';uk='Вкажіть назви реквізитів у заголовках колонок. Якщо колонку не потрібно завантажувати, вилучіть її.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ИмяРеквизитаФормы);
	КонецЕсли;
	
	Для Каждого ОбязательнаяКолонка Из ОбязательныеКолонки Цикл
		ТекстСообщения = СтрШаблон(НСтр("ru='Не указана колонка %1.';uk='Не зазначена колонка %1.'"), ОписаниеКолонок[0].ПредставлениеКолонки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, ИмяРеквизитаФормы);
	КонецЦикла;
	
	ЕстьОшибки = ЕстьНезаполненныйЗаголовок Или ОбязательныеКолонки.Количество() > 0;
	
	Возврат Не ЕстьОшибки;
	
КонецФункции

Функция ОбязательныеКолонки(ОписаниеКолонок)
	
	ОбязательныеКолонки = Новый Массив;
	
	Для Каждого Колонка Из ОписаниеКолонок Цикл
	
		Если Колонка.ОбязательнаДляЗаполнения Тогда

			ОбязательныеКолонки.Добавить(Колонка.Идентификатор);

		КонецЕсли;
	
	КонецЦикла;
	
	Возврат ОбязательныеКолонки;
	
КонецФункции

Процедура ОбработкаВыбораФайла(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РасширениеФайла = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(Результат[0].Имя);
	Если Не ЗагрузкаДанныхИзВнешнихФайловКлиентСервер.РасширениеФайлаПоддерживается(РасширениеФайла) Тогда
		ТекстСообщения = НСтр("ru='Загрузка возможна только из файлов с расширениями xls, xlsx, mxl, csv, ods.';uk='Завантаження можливе тільки із файлів з розширенням xls, xlsx, mxl, csv, ods.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресФайла", Результат[0].Хранение);
	ПараметрыФормы.Вставить("РасширениеФайла", РасширениеФайла);
	
	ОткрытьФорму(ДополнительныеПараметры.ИмяФормы, ПараметрыФормы);
	
КонецПроцедуры
 
// Инициализирует структуру параметров для взаимодействия с файловой системой.
//
// Параметры:
//  РежимДиалога - РежимДиалогаВыбораФайла - режим работы конструируемого диалога выбора файлов. 
//
// Возвращаемое значение:
//  Структура - См ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла и ФайловаяСистемаКлиент.ПараметрыСохраненияФайла
//
Функция КонтекстОперации(РежимДиалога)
	
	Контекст = Новый Структура();
	Контекст.Вставить("Диалог", Новый ДиалогВыбораФайла(РежимДиалога));
	Контекст.Вставить("Интерактивно", Истина);
	Контекст.Вставить("ТекстПредложения", "");
	
	Возврат Контекст;
	
КонецФункции

#КонецОбласти
