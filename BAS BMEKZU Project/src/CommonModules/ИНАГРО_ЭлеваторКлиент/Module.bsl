#Область ПрограммныйИнтерфейс

#Область СоздатьДокументНаОсновании

// Ввод документов на основании. 
//
//  Параметры:
// 		Форма              - Форма объекта
//  	ЗначенияЗаполнения - Структура - параметры заполнения
//
Процедура СоздатьДокументНаОсновании(Знач Форма, Знач ЗначенияЗаполнения) Экспорт
	
	Объект = Форма.Объект;		
	
	СоздатьЛабораторныйАнализ = Ложь;
	СоздатьСкладскаяКвитанция = Ложь;
	СоздатьТТНВнутренняя      = Ложь;	
	СоздатьПереоформление     = Ложь;
	СоздатьТТНВывоз           = Ложь;
	СоздатьТТНВывозЖД         = Ложь;
	ИмяДокумента              = "";
	
	Если ЗначенияЗаполнения.Свойство("Ссылка") <> Неопределено Тогда
		Если      ТипЗнч(ЗначенияЗаполнения.Ссылка) = Тип("ДокументСсылка.ИНАГРО_ЛабораторныйАнализ") Тогда
			СоздатьЛабораторныйАнализ = Истина;
		ИначеЕсли ТипЗнч(ЗначенияЗаполнения.Ссылка) = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанция") Тогда
			СоздатьСкладскаяКвитанция = Истина;
			ИмяДокумента              = "ИНАГРО_СкладскаяКвитанция";
		ИначеЕсли ТипЗнч(ЗначенияЗаполнения.Ссылка) = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанцияДвойная") Тогда
			СоздатьСкладскаяКвитанция = Истина;
			ИмяДокумента              = "ИНАГРО_СкладскаяКвитанцияДвойная";
		ИначеЕсли ТипЗнч(ЗначенияЗаполнения.Ссылка) = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанцияПростая") Тогда
			СоздатьСкладскаяКвитанция = Истина;
			ИмяДокумента              = "ИНАГРО_СкладскаяКвитанцияПростая";
		ИначеЕсли ТипЗнч(ЗначенияЗаполнения.Ссылка) = Тип("ДокументСсылка.ИНАГРО_ТТНВнутр") Тогда
			СоздатьТТНВнутренняя      = Истина;
		ИначеЕсли ТипЗнч(ЗначенияЗаполнения.Ссылка) = Тип("ДокументСсылка.ИНАГРО_Переоформление") Тогда
			СоздатьПереоформление     = Истина;
		ИначеЕсли ТипЗнч(ЗначенияЗаполнения.Ссылка) = Тип("ДокументСсылка.ИНАГРО_ТТНВывоз") Тогда
			СоздатьТТНВывоз           = Истина;
		ИначеЕсли ТипЗнч(ЗначенияЗаполнения.Ссылка) = Тип("ДокументСсылка.ИНАГРО_ТТНВывозЖД") Тогда
			СоздатьТТНВывозЖД         = Истина;			
		КонецЕсли;				
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                     Форма);
	ДополнительныеПараметры.Вставить("ЗначенияЗаполнения",        ЗначенияЗаполнения);
	ДополнительныеПараметры.Вставить("СоздатьЛабораторныйАнализ", СоздатьЛабораторныйАнализ);
	ДополнительныеПараметры.Вставить("СоздатьСкладскаяКвитанция", СоздатьСкладскаяКвитанция);
	ДополнительныеПараметры.Вставить("СоздатьТТНВнутренняя",      СоздатьТТНВнутренняя);	
	ДополнительныеПараметры.Вставить("СоздатьПереоформление",     СоздатьПереоформление);
	ДополнительныеПараметры.Вставить("СоздатьТТНВывоз",           СоздатьТТНВывоз);
	ДополнительныеПараметры.Вставить("СоздатьТТНВывозЖД",         СоздатьТТНВывозЖД);
	ДополнительныеПараметры.Вставить("ИмяДокумента",              ИмяДокумента);

	Если Объект.Ссылка.Пустая() Тогда 		
		
		Если СоздатьЛабораторныйАнализ Тогда
			ЗапретитьСозданиеЛабАнализа = ИНАГРО_Элеватор.ПолучитьПараметрУчетаЭлеватора(Объект.Дата, "ЗапретитьСозданиеЛабАнализа", Ложь);
			Если НЕ ЗапретитьСозданиеЛабАнализа Тогда
				СоздатьЛабораторныйАнализЗавершение(ДополнительныеПараметры);
				Возврат;
			Иначе
				ТекстСтрокиСообщения = НСтр("ru = 'Лабораторный анализ: создать на основании'; uk = 'Лабораторний аналіз: створити на підставі'");
			КонецЕсли;
		ИначеЕсли СоздатьСкладскаяКвитанция Тогда 
			ТекстСтрокиСообщения = НСтр("ru = 'Складская квитанция: создать на основании'; uk = 'Складська квитанція: створити на підставі'");
		ИначеЕсли СоздатьТТНВнутренняя Тогда 
			ТекстСтрокиСообщения = НСтр("ru = 'Товарно-транспортная накладная (внутренняя): создать на основании'; uk = 'Товарно-транспортна накладна (внутрішня): створити на підставі'");	
		ИначеЕсли СоздатьПереоформление Тогда 
			ТекстСтрокиСообщения = НСтр("ru = 'Переоформление: создать на основании'; uk = 'Переоформлення: створити на підставі'");
		ИначеЕсли СоздатьТТНВывоз Тогда 
			ТекстСтрокиСообщения = НСтр("ru = 'Товарно-транспортная накладная (вывоз): создать на основании'; uk = 'Товарно-транспортна накладна (вивезення): створити на підставі'");
		ИначеЕсли СоздатьТТНВывозЖД Тогда 
			ТекстСтрокиСообщения = НСтр("ru = 'Товарно-транспортная накладная (вывоз) Ж/Д: создать на основании'; uk = 'Товарно-транспортна накладна (вивезення) Ж/Д: створити на підставі'");
		КонецЕсли;
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Данные еще не записаны.
                 |Выполнение действия ""%1"" возможно только после записи данных.
		         |Данные будут записаны.';uk='Дані ще не записані.
		         |Виконання дії ""%1"" можливо тільки після запису даних.
		         |Дані будуть записані.'"), ТекстСтрокиСообщения);
			
		ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьДокументНаОснованииПодтверждениеЗаписи", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);		
						
	Иначе
			
		СоздатьДокументНаОснованииПодтверждениеЗаписи(КодВозвратаДиалога.ОК, ДополнительныеПараметры);
		
	КонецЕсли;		
	
КонецПроцедуры

// Подтверждение записи при вводе на основании. 
//
//  Параметры:
// 		РезультатВопроса        - КодВозвратаДиалога - ответ на вопрос
//  	ДополнительныеПараметры - Структура - структура дополнительных параметров 
//
Процедура СоздатьДокументНаОснованииПодтверждениеЗаписи(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Форма  = ДополнительныеПараметры.Форма;	
	Объект = Форма.Объект;

	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		Форма.Записать(); 
		Если Объект.Ссылка.Пустая() ИЛИ Форма.Модифицированность Тогда
			Возврат; // запись не удалась, сообщения о причинах выводит платформа
		КонецЕсли;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.СоздатьЛабораторныйАнализ Тогда	
		СоздатьЛабораторныйАнализЗавершение(ДополнительныеПараметры);
	ИначеЕсли ДополнительныеПараметры.СоздатьСкладскаяКвитанция Тогда
		Форма.СоздатьСкладскуюКвитанциюЗавершение(ДополнительныеПараметры.ИмяДокумента);
	ИначеЕсли ДополнительныеПараметры.СоздатьТТНВнутренняя Тогда
		Форма.СоздатьТТНВнутренняяВыборКультуры();
	ИначеЕсли ДополнительныеПараметры.СоздатьПереоформление Тогда
		Форма.СоздатьПереоформлениеВыборКультуры();	
	ИначеЕсли ДополнительныеПараметры.СоздатьТТНВывоз Тогда
		Форма.СоздатьТТНВывозВыборКультуры();	
	ИначеЕсли ДополнительныеПараметры.СоздатьТТНВывозЖД Тогда
		Форма.СоздатьТТНВывозЖДВыборКультуры();	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрочийФункционал

// Функция возвращает Истина, если при изменении даты документа требуется перечитать 
// настройки из базы данных на сервере.
//
//	Параметры:
//		НоваяДата	   - Дата
//      ПредыдущаяДата - Дата
//	Возвращаемое значение:
//  	Булево         
//
Функция ТребуетсяВызовСервераПриИзмененииДатыДокумента(НоваяДата, ПредыдущаяДата) Экспорт

	Результат = Ложь;
	
	Если НачалоДня(НоваяДата) = НачалоДня(ПредыдущаяДата) Тогда
		// Ничего не изменилось либо изменилось только время, от которого ничего не зависит
		Возврат Ложь;
	Иначе
		// Параметры учета элеватора задаются с периодичностью до дня
		Результат = Истина;
	КонецЕсли;	
		
	Возврат Результат;
	
КонецФункции

// Функция возвращает Истина, если при изменении даты документа требуется перечитать 
// настройки из базы данных на сервере.
//
Процедура ВладелецНачалоВыбораЗавершение() Экспорт
	
	ТекстПредупреждения = НСтр("ru='Для ручного ввода реквизита необходимо отключить ""Дополнительный контроль договоров""';uk='Для ручного введення реквізиту необхідно вимкнути ""Додатковий контроль договорів""'");
	ПоказатьПредупреждение( , ТекстПредупреждения); 

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СоздатьЛабораторныйАнализЗавершение(ДополнительныеПараметры)
	
	ЭтаФорма           = ДополнительныеПараметры.Форма;
	ЗначенияЗаполнения = ДополнительныеПараметры.ЗначенияЗаполнения;
	
	Объект = ЭтаФорма.Объект;
	ЗначенияЗаполнения.Вставить("ВладелецЛабАнализа", Объект.Ссылка);

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения); 
	
	ОткрытьФорму("Документ.ИНАГРО_ЛабораторныйАнализ.Форма.ФормаДокумента", ПараметрыФормы, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти