
Функция ПолучитьЗначениеИзСтрокиВнутр(Значение) Экспорт
	Возврат ЗначениеИзСтрокиВнутр(Значение);	
КонецФункции

Функция мПривестиКЧислу(Представление, Знач ОписаниеТипов = Неопределено, Примечание = "") Экспорт
	
	Если ОписаниеТипов = Неопределено Тогда
		ОписаниеТипов = Новый ОписаниеТипов("Число");
	КонецЕсли;
	
	НРегПредставление = НРег(Представление);
	Если НРегПредставление = "да" или НРегПредставление = "истина" или НРегПредставление = "включено" Тогда
		Возврат 1;
	ИначеЕсли НРегПредставление = "нет" или НРегПредставление = "ложь" или НРегПредставление = "выключено" Тогда
		Возврат 0;
	КонецЕсли;
	
	Результат = СтрЗаменить(Представление, " ", "");
	Попытка
		Результат = Число(Результат);
	Исключение
		Примечание = "Неправильный формат числа";
		Возврат 0;
	КонецПопытки;
	
	Результат1 = ОписаниеТипов.ПривестиЗначение(Результат);
	
	Если Не Результат1 = Результат Тогда
		Примечание = "Недопустимое числовое значение";
	КонецЕсли;
	
	Возврат Результат1;
	
КонецФункции // мПривестиКЧислу()

Функция мПривестиКДате(Представление, ТипРеквизита, Примечание = "") Экспорт
	
	Результат = ТипРеквизита.ПривестиЗначение(Представление);
	Если Результат = '00010101' Тогда
		
		МассивЧастей = ПолучитьЧастиПредставленияДаты(Представление);
		Если ТипРеквизита.КвалификаторыДаты.ЧастиДаты = ЧастиДаты.Время Тогда
			
			Попытка
				
				Если МассивЧастей.Количество() = 3 Тогда
					Результат = Дата(1,1,1, МассивЧастей[0],МассивЧастей[1],МассивЧастей[2]);
				ИначеЕсли МассивЧастей.Количество() = 6 Тогда
					Результат = Дата(1,1,1, МассивЧастей[3],МассивЧастей[4],МассивЧастей[5]);
				КонецЕсли;
				
			Исключение
				Примечание = "Неправильный формат даты";
			КонецПопытки;
			
		ИначеЕсли МассивЧастей.Количество() = 3 или МассивЧастей.Количество() = 6 Тогда
			
			Если МассивЧастей[0] >= 1000 Тогда
				Временно = МассивЧастей[0];
				МассивЧастей[0] = МассивЧастей[2];
				МассивЧастей[2] = Временно;
			КонецЕсли;
			
			Если МассивЧастей[2] < 100 Тогда
				МассивЧастей[2] = МассивЧастей[2] + ?(МассивЧастей[2] < 30, 2000,1900);
			КонецЕсли;
			
			Попытка
				Если МассивЧастей.Количество() = 3 или ТипРеквизита.КвалификаторыДаты.ЧастиДаты = ЧастиДаты.Дата Тогда
					Результат = Дата(МассивЧастей[2],МассивЧастей[1],МассивЧастей[0]);
				Иначе
					Результат = Дата(МассивЧастей[2],МассивЧастей[1],МассивЧастей[0],МассивЧастей[3],МассивЧастей[4],МассивЧастей[5]);
				КонецЕсли;
			Исключение
				Примечание = "Неправильный формат даты";
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьЧастиПредставленияДаты(ЗНАЧ Представление) Экспорт
	
	МассивЧастей = Новый Массив;
	НачалоЦифры = 0;
	Для к = 1 По СтрДлина(Представление) Цикл
		
		Символ = Сред(Представление, к ,1);
		ЭтоЦифра = Символ >= "0" и Символ <= "9";
		
		Если ЭтоЦифра Тогда
			
			Если НачалоЦифры = 0 Тогда
				НачалоЦифры = к;
			КонецЕсли;
			
		Иначе
			
			Если Не НачалоЦифры = 0 Тогда
				МассивЧастей.Добавить(Число(Сред(Представление,НачалоЦифры, к - НачалоЦифры)));
			КонецЕсли;
			
			НачалоЦифры = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не НачалоЦифры = 0 Тогда
		МассивЧастей.Добавить(Число(Сред(Представление,НачалоЦифры)));
	КонецЕсли;
	
	Возврат МассивЧастей;
КонецФункции // ()

Функция ПолучитьМенеджераПоТипу(ТипЗначения) Экспорт
	
	Если Не ТипЗначения = Неопределено Тогда
		МенеджерыОбъектовМетаданных = Новый Структура("Справочники, Перечисления, Документы, ПланыВидовХарактеристик, ПланыСчетов, ПланыВидовРасчета, БизнесПроцессы, Задачи",
				Справочники,
				Перечисления,
				Документы,
				ПланыВидовХарактеристик,
				ПланыСчетов,
				ПланыВидовРасчета,
				БизнесПроцессы,
				Задачи);
		Для Каждого МенеджерОбъектаМетаданных Из МенеджерыОбъектовМетаданных Цикл
			Если МенеджерОбъектаМетаданных.Значение.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
				Менеджер = МенеджерОбъектаМетаданных.Значение[Метаданные.НайтиПоТипу(ТипЗначения).Имя];
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Возврат Менеджер;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьОписаниеТипа(ОписаниеТиповРеквизита) Экспорт
	
	ОписаниеТипов = "";
	
	Для каждого Тип Из ОписаниеТиповРеквизита.Типы() Цикл
		МетаданныеТипа = Метаданные.НайтиПоТипу(Тип);
		Если Не МетаданныеТипа = Неопределено Тогда
			ОписаниеТипа = МетаданныеТипа.ПолноеИмя();
		ИначеЕсли Тип = Тип("Строка") Тогда
			
			ОписаниеТипа = "Строка";
			Если ОписаниеТиповРеквизита.КвалификаторыСтроки.Длина Тогда
				ОписаниеТипа = ОписаниеТипа + ", " + ОписаниеТиповРеквизита.КвалификаторыСтроки.Длина;
				Если ОписаниеТиповРеквизита.КвалификаторыСтроки.ДопустимаяДлина = ДопустимаяДлина.Фиксированная Тогда
					ОписаниеТипа = ОписаниеТипа + ", " + ДопустимаяДлина.Фиксированная;
				КонецЕсли;
				
				
			КонецЕсли;
			
		ИначеЕсли Тип = Тип("Число") Тогда
			ОписаниеТипа = "Число"
			+ ", "+ ОписаниеТиповРеквизита.КвалификаторыЧисла.Разрядность
			+ ", "+ ОписаниеТиповРеквизита.КвалификаторыЧисла.РазрядностьДробнойЧасти
			+ ?(ОписаниеТиповРеквизита.КвалификаторыЧисла.ДопустимыйЗнак = ДопустимыйЗнак.Неотрицательный,", Неотрицательный","");
		ИначеЕсли Тип = Тип("Дата") Тогда
			ОписаниеТипа = "" + ОписаниеТиповРеквизита.КвалификаторыДаты.ЧастиДаты;
		ИначеЕсли Тип = Тип("Булево") Тогда
			ОписаниеТипа = "Булево";
		Иначе
			Продолжить;
		КонецЕсли;
		
		ОписаниеТипов = ?(ПустаяСтрока(ОписаниеТипов),"",ОписаниеТипов +Символы.ПС) + ОписаниеТипа;
		
	КонецЦикла;	
	
	Возврат ОписаниеТипов;

КонецФункции // ПолучитьОписаниеТипа()

Процедура ОтработатьСобытиеПоискДокумента(Знач Выражение, СсылкаНаДокумент, Знач Организация, Переменная, Знач ДанныеТаблицы, 
	Знач МассивДанныхТаблицы1, Знач МассивДанныхТаблицы2, Знач МассивДанныхТаблицы3, Знач МассивДанныхТаблицы4, Знач МассивДанныхТаблицы5, Отказ, ПродолжатьСтандартнуюОбработку, СтандартнаяОбработкаПоискДокумента, РедактироватьНайденыйДокумент)
	Отказ = Ложь;
	//ОписаниеОшибки = "";
	//Попытка
		Выполнить(Выражение);
	//Исключение
	//	мСообщитьОбОшибке(ОписаниеОшибки());
	//КонецПопытки;
	//
	//Возврат Новый Структура("Результат,ОписаниеОшибки",Результат,ОписаниеОшибки);
КонецПроцедуры

Процедура ОтработатьСобытиеПриСозданииДокумента(Знач Выражение, Знач Объект, Знач Организация, Переменная, Знач ТекущиеДанные, Знач ДанныеТаблицы, 
	Знач МассивДанныхТаблицы1, Знач МассивДанныхТаблицы2, Знач МассивДанныхТаблицы3, Знач МассивДанныхТаблицы4, Знач МассивДанныхТаблицы5, Отказ)
	Отказ = Ложь;
	//ОписаниеОшибки = "";
	//Попытка
		Выполнить(Выражение);
	//Исключение
	//	мСообщитьОбОшибке(ОписаниеОшибки());
	//КонецПопытки;
	//
	//Возврат Новый Структура("Результат,ОписаниеОшибки",Результат,ОписаниеОшибки);
КонецПроцедуры

Процедура ОтработатьСобытиеПослеДобавленияСтрокиТабличнойЧасти(Знач Выражение, Знач Объект, Знач Организация, Переменная, Знач ТекущиеДанные, Знач ДанныеТаблицы, Знач ДанныеТаблицы0, Отказ)
	Отказ = Ложь;
	//ОписаниеОшибки = "";
	//Попытка
		Выполнить(Выражение);
	//Исключение
	//	мСообщитьОбОшибке(ОписаниеОшибки());
	//КонецПопытки;
	//
	//Возврат Новый Структура("Результат,ОписаниеОшибки",Результат,ОписаниеОшибки);
КонецПроцедуры

Процедура ОтработатьСобытиеПередЗаписьюДокумента(Знач Выражение, Знач Объект, Знач Организация, Переменная, Знач ТекущиеДанные, Знач ДанныеТаблицы
	, Знач МассивДанныхТаблицы1, Знач МассивДанныхТаблицы2, Знач МассивДанныхТаблицы3, Знач МассивДанныхТаблицы4, Знач МассивДанныхТаблицы5, Отказ)
	Отказ = Ложь;
	//ОписаниеОшибки = "";
	//Попытка
		Выполнить(Выражение);
	//Исключение
	//	мСообщитьОбОшибке(ОписаниеОшибки());
	//КонецПопытки;
	//
	//Возврат Новый Структура("Результат,ОписаниеОшибки",Результат,ОписаниеОшибки);
КонецПроцедуры

Процедура ОтработатьСобытиеПриЗаписиДокумента(Знач Выражение, Знач Объект, Знач Организация, Переменная, Знач ТекущиеДанные, Знач ДанныеТаблицы
	, Знач МассивДанныхТаблицы1, Знач МассивДанныхТаблицы2, Знач МассивДанныхТаблицы3, Знач МассивДанныхТаблицы4, Знач МассивДанныхТаблицы5)
	Отказ = Ложь;
	//ОписаниеОшибки = "";
	//Попытка
		Выполнить(Выражение);
	//Исключение
	//	мСообщитьОбОшибке(ОписаниеОшибки());
	//КонецПопытки;
	//
	//Возврат Новый Структура("Результат,ОписаниеОшибки",Результат,ОписаниеОшибки);
КонецПроцедуры

Функция ПривестиЗначениеРеквизитаШаблона(Значение, НастройкаРеквизита, РеквизитыДокумента1С)
	
	ВозможныеЗначения = Новый Массив;
	ПримитивныеТипы = Новый Структура ("Число, Строка, Дата, Булево", Тип("Число"), Тип("Строка"), Тип("Дата"), Тип("Булево"));
	Примечание = "";
	
	Для каждого ТипРеквизита Из НастройкаРеквизита.ОписаниеТипов.Типы() Цикл
		
		Если ТипРеквизита = ПримитивныеТипы.Число Или ТипРеквизита = ПримитивныеТипы.Булево Тогда
			ВозможныеЗначения.Добавить(мПривестиКЧислу(Значение, НастройкаРеквизита.ОписаниеТипов, Примечание));
		ИначеЕсли ТипРеквизита = ПримитивныеТипы.Строка или ТипРеквизита = ПримитивныеТипы.Дата Тогда
			ВозможныеЗначения.Добавить(мПривестиКДате(Значение, НастройкаРеквизита.ОписаниеТипов, Примечание));
		Иначе
			МетаданныеТипа = Метаданные.НайтиПоТипу(ТипРеквизита);
			
			Если Перечисления.ТипВсеСсылки().СодержитТип(ТипРеквизита) Тогда
				//Это Перечисление
				Для каждого Перечисление Из ПолучитьМенеджераПоТипу(ТипРеквизита) Цикл
					Если Строка(Перечисление) = Значение Тогда
						ВозможныеЗначения.Добавить(Перечисление);
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипРеквизита) Тогда
			//	//Это документ
			//	
			//	Менеджер = ПолучитьМенеджераПоТипу(ТипРеквизита);
			//	Если Колонка.ИскатьПо = "Номер" Тогда
			//		//НайденноеЗначение = Менеджер.НайтиПоКоду(Представление);
			//	ИначеЕсли Колонка.ИскатьПо = "Дата" Тогда
			//		//НайденноеЗначение = Менеджер.Найти
			//	Иначе
			//			
			//		ДлиннаСинонима = СтрДлина(""+МетаданныеТипа);
			//			
			//		Если Лев(Представление, ДлиннаСинонима) = ""+МетаданныеТипа Тогда
			//			НомерИДата = СокрЛП(Сред(Представление, ДлиннаСинонима+1));
			//			ПозицияОт = Найти(НомерИДата, " от ");
			//			Если Не ПозицияОт = 0 Тогда
			//				НомерДок = Лев(НомерИДата, ПозицияОт-1);
			//				Попытка
			//					ДатаДок  = Дата(Сред(НомерИДата, ПозицияОт+4));
			//				Исключение
			//					ДатаДок = Неопределено;
			//				КонецПопытки;
			//				Если Не ДатаДок = Неопределено Тогда
			//					НайденноеЗначение = Менеджер.НайтиПоНомеру(НомерДок, ДатаДок);
			//					Если Не НайденноеЗначение.Пустая() Тогда
			//						НайденныеЗначения.Добавить(НайденноеЗначение);
			//					КонецЕсли;
			//				КонецЕсли;
			//			КонецЕсли;
			//		КонецЕсли;
			//			
			//	КонецЕсли;
			//		
			ИначеЕсли Не МетаданныеТипа = Неопределено Тогда
				
				ИскатьПо = НастройкаРеквизита.ИскатьПо;
				ЭтоСправочник = Справочники.ТипВсеСсылки().СодержитТип(ТипРеквизита);
				Если ПустаяСтрока(ИскатьПо) Тогда
					СтрокаОсновногоПредставления = Строка(МетаданныеТипа.ОсновноеПредставление);
					
					Если СтрокаОсновногоПредставления = "ВВидеКода" Тогда
						ИскатьПо = "Код";
					ИначеЕсли СтрокаОсновногоПредставления = "ВВидеНаименования" Тогда
						ИскатьПо = "Наименование";
					ИначеЕсли СтрокаОсновногоПредставления = "ВВидеНомера" Тогда
						ИскатьПо = "Номер";
					КонецЕсли;
				КонецЕсли;
				
				Запрос = Новый Запрос;
				Запрос.Текст =
				"ВЫБРАТЬ
				|	_Таблица.Ссылка
				|ИЗ
				|	" + МетаданныеТипа.ПолноеИмя() + " КАК _Таблица
				|ГДЕ _Таблица." + ИскатьПо + " = &Представление";
				Запрос.УстановитьПараметр("Представление", Значение);

				Если ЭтоСправочник и Не ПустаяСтрока(НастройкаРеквизита.СвязьПоВладельцу) и МетаданныеТипа.Владельцы.Количество() Тогда
					
					СвязьПоВладельцу = Неопределено;
					Если ТипЗнч(НастройкаРеквизита.СвязьПоВладельцу) = Тип("Строка") Тогда
						СвязьПоВладельцу = РеквизитыДокумента1С[НастройкаРеквизита.СвязьПоВладельцу];
					Иначе
						СвязьПоВладельцу = НастройкаРеквизита.СвязьПоВладельцу;
					КонецЕсли;
					
					Если Не СвязьПоВладельцу = Неопределено Тогда
						Запрос.Текст = Запрос.Текст + "
						|	И _Таблица.Владелец = &СвязьПоВладельцу";
						Запрос.УстановитьПараметр("СвязьПоВладельцу",СвязьПоВладельцу);
					КонецЕсли;
					
				КонецЕсли;
				
				ВыборкаРезультатаЗапроса =  Запрос.Выполнить().Выбрать();
				Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
					ВозможныеЗначения.Добавить(ВыборкаРезультатаЗапроса.Ссылка);
				КонецЦикла;
			Иначе
				Сообщить("Не описан способ поиска");
				//Примечание = "Для Колонки не определен тип значения";
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ВозможныеЗначения.Количество() = 0 Тогда
		Возврат Неопределено;
	ИначеЕсли ВозможныеЗначения.Количество() = 1 Тогда
		Возврат ВозможныеЗначения[0];
	Иначе
		Сообщить("Неоднозначная интерпретация реквизита");
		Возврат ВозможныеЗначения[0];
	КонецЕсли; 
КонецФункции

Процедура ВычислитьЗначениеРеквизита(Знач Выражение, Результат, Знач РеквизитыДокумента, Знач РеквизитыДокумента0, Знач ДанныеТаблицы, Знач ДанныеТаблицы0 = Неопределено, Переменная)
	//ОписаниеОшибки = "";
	//Попытка
	    Выполнить(Выражение);
	//Исключение
	//	мСообщитьОбОшибке(ОписаниеОшибки());
	//КонецПопытки;
	//
	//Возврат Новый Структура("Результат,ОписаниеОшибки",Результат,ОписаниеОшибки);
КонецПроцедуры

Процедура ВычислитьЗначениеПоляШаблона(Знач Выражение, Результат, Знач ДанныеТаблицы, Знач ДанныеТаблицы0 = Неопределено)
	//ОписаниеОшибки = "";
	//Попытка
	    Выполнить(Выражение);
	//Исключение
	//	мСообщитьОбОшибке(ОписаниеОшибки());
	//КонецПопытки;
	//
	//Возврат Новый Структура("Результат,ОписаниеОшибки",Результат,ОписаниеОшибки);
КонецПроцедуры

Функция НайтиПравилаЗагрузкиВходящихДокументов(Организация, ЕДРПОУВладельцаШаблона, ИмяШаблона, ВерсияШаблона, ТолькоТиповыеСхеммы, ВидДокумента1С, ПравилаЗагрузки, Коментарий)
	Коментарий = "";
	Запрос = Новый Запрос;
	ЗапросТекст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона КАК ЕДРПОУВладельцаШаблона,
	|	скEDI_ПравилаЗагрузки.ИмяШаблона КАК ИмяШаблона,
	|	скEDI_ПравилаЗагрузки.ВерсияШаблона КАК ВерсияШаблона,
	|	ВЫБОР
	|		КОГДА скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона <> """"
	|				И скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = &ЕДРПОУВладельцаШаблона
	|				И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
	|				И скEDI_ПравилаЗагрузки.ВерсияШаблона <> """"
	|				И скEDI_ПравилаЗагрузки.ВерсияШаблона = &ВерсияШаблона
	|			ТОГДА 10
	|		КОГДА скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = """"
	|				И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
	|				И скEDI_ПравилаЗагрузки.ВерсияШаблона <> """"
	|				И скEDI_ПравилаЗагрузки.ВерсияШаблона = &ВерсияШаблона
	|			ТОГДА 9
	|		КОГДА скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона <> """"
	|				И скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = &ЕДРПОУВладельцаШаблона
	|				И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
	|				И скEDI_ПравилаЗагрузки.ВерсияШаблона = """"
	|			ТОГДА 8
	|		КОГДА скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = """"
	|				И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
	|				И скEDI_ПравилаЗагрузки.ВерсияШаблона = """"
	|			ТОГДА 7
	|	КОНЕЦ КАК ПриоритетПоСоответствию,
	|	скEDI_ПравилаЗагрузки.ВидДокумента1С КАК ВидДокумента,
	|	скEDI_ПравилаЗагрузки.Схема КАК СхемаЗагрузки,
	|	скEDI_ПравилаЗагрузки.НеИскатьАвтоматически КАК НеИскатьАвтоматически,
	|	скEDI_ПравилаЗагрузки.ТиповаяСхемма КАК ТиповаяСхемма
	|ИЗ
	|	РегистрСведений.скEDI_ПравилаЗагрузки КАК скEDI_ПравилаЗагрузки
	|ГДЕ
	|	скEDI_ПравилаЗагрузки.Организация = &Организация
	|	И (скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = """"
	|			ИЛИ скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = &ЕДРПОУВладельцаШаблона)
	|	И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
	|	И (скEDI_ПравилаЗагрузки.ВерсияШаблона = """"
	|			ИЛИ скEDI_ПравилаЗагрузки.ВерсияШаблона = &ВерсияШаблона)
	|	И скEDI_ПравилаЗагрузки.Использование
	|	И &ТолькоТиповыеСхеммы
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПриоритетПоСоответствию УБЫВ,
	|	скEDI_ПравилаЗагрузки.Приоритет УБЫВ";
	
	Если ТолькоТиповыеСхеммы Тогда
		ЗапросТекст = СтрЗаменить(ЗапросТекст, "&ТолькоТиповыеСхеммы", "скEDI_ПравилаЗагрузки.ТиповаяСхемма И скEDI_ПравилаЗагрузки.ВидДокумента1С = &ВидДокумента1С");
	Иначе
		ЗапросТекст = СтрЗаменить(ЗапросТекст, "&ТолькоТиповыеСхеммы", "Истина");
	КонецЕсли;
	Запрос.Текст = ЗапросТекст;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ЕДРПОУВладельцаШаблона", ЕДРПОУВладельцаШаблона);
	Запрос.УстановитьПараметр("ИмяШаблона", ИмяШаблона);
	Запрос.УстановитьПараметр("ВерсияШаблона", Строка(ВерсияШаблона));
	Если ТолькоТиповыеСхеммы Тогда
		Запрос.УстановитьПараметр("ВидДокумента1С", ВидДокумента1С);
	КонецЕсли;
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		ПравилаЗагрузки = ВыборкаРезультатаЗапроса;
		Возврат Истина;
	Иначе
		Коментарий = "Шаблон """ + ИмяШаблона + """ не зарегистрирован за организацией """ + Строка(Организация) + """ (Правила загрузки)";
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Функция ЗагрузитьДокумент1С(Документ1С, Организация, ВидЭлектронногоДокумента, ВхИсх, ЭлектронныйДокументОбъектСсылка,
	ЕДРПОУВладельцаШаблона, ИмяШаблона, ВерсияШаблона,
	СоответствиеЗначений, Коментарий, ТолькоПоиск = Ложь, ЭтоАвтоматическаяОбработка = Ложь) экспорт
	
	Если ВидЭлектронногоДокумента.ТипДокумента = Перечисления.скEDI_ТипыЭлектронныхДокументов.НалоговаяНакладная Тогда
		ДокументБылСоздан = Ложь;
		Возврат скEDI_НастройкиПодКонфигурациюНалоговыеДокументы.ЗагрузитьНалоговыйДокумент1С(Документ1С, Организация, ВидЭлектронногоДокумента,
			Перечисления.скEDI_ТипыЭлектронныхДокументов.НалоговаяНакладная, ВхИсх, ЭлектронныйДокументОбъектСсылка,
			ИмяШаблона, СоответствиеЗначений, Коментарий, ДокументБылСоздан, ТолькоПоиск, ЭтоАвтоматическаяОбработка);
	ИначеЕсли ВидЭлектронногоДокумента.ТипДокумента = Перечисления.скEDI_ТипыЭлектронныхДокументов.Приложение2КНалоговойНакладной Тогда
		ДокументБылСоздан = Ложь;
		Возврат скEDI_НастройкиПодКонфигурациюНалоговыеДокументы.ЗагрузитьНалоговыйДокумент1С(Документ1С, Организация, ВидЭлектронногоДокумента,
			Перечисления.скEDI_ТипыЭлектронныхДокументов.Приложение2КНалоговойНакладной, ВхИсх, ЭлектронныйДокументОбъектСсылка,
			ИмяШаблона, СоответствиеЗначений, Коментарий, ДокументБылСоздан, ТолькоПоиск, ЭтоАвтоматическаяОбработка);
	ИначеЕсли ВхИсх = Перечисления.скEDI_ВхИсхЭлектронныйДокумент.Входящий Тогда
		Коментарий = "";
		//Запрос = Новый Запрос;
		//Запрос.Текст = 
		//"ВЫБРАТЬ ПЕРВЫЕ 1
		//|	скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона КАК ЕДРПОУВладельцаШаблона,
		//|	скEDI_ПравилаЗагрузки.ИмяШаблона КАК ИмяШаблона,
		//|	скEDI_ПравилаЗагрузки.ВерсияШаблона КАК ВерсияШаблона,
		//|	ВЫБОР
		//|		КОГДА скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона <> """"
		//|				И скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = &ЕДРПОУВладельцаШаблона
		//|				И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
		//|				И скEDI_ПравилаЗагрузки.ВерсияШаблона <> """"
		//|				И скEDI_ПравилаЗагрузки.ВерсияШаблона = &ВерсияШаблона
		//|			ТОГДА 10
		//|		КОГДА скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = """"
		//|				И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
		//|				И скEDI_ПравилаЗагрузки.ВерсияШаблона <> """"
		//|				И скEDI_ПравилаЗагрузки.ВерсияШаблона = &ВерсияШаблона
		//|			ТОГДА 9
		//|		КОГДА скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона <> """"
		//|				И скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = &ЕДРПОУВладельцаШаблона
		//|				И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
		//|				И скEDI_ПравилаЗагрузки.ВерсияШаблона = """"
		//|			ТОГДА 8
		//|		КОГДА скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = """"
		//|				И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
		//|				И скEDI_ПравилаЗагрузки.ВерсияШаблона = """"
		//|			ТОГДА 7
		//|	КОНЕЦ КАК ПриоритетПоСоответствию,
		//|	скEDI_ПравилаЗагрузки.ВидДокумента1С КАК ВидДокумента,
		//|	скEDI_ПравилаЗагрузки.Схема КАК СхемаЗагрузки,
		//|	скEDI_ПравилаЗагрузки.НеИскатьАвтоматически
		//|ИЗ
		//|	РегистрСведений.скEDI_ПравилаЗагрузки КАК скEDI_ПравилаЗагрузки
		//|ГДЕ
		//|	скEDI_ПравилаЗагрузки.Организация = &Организация
		//|	И (скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = """"
		//|			ИЛИ скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = &ЕДРПОУВладельцаШаблона)
		//|	И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
		//|	И (скEDI_ПравилаЗагрузки.ВерсияШаблона = """"
		//|			ИЛИ скEDI_ПравилаЗагрузки.ВерсияШаблона = &ВерсияШаблона)
		//|	И скEDI_ПравилаЗагрузки.Использование
		//|
		//|УПОРЯДОЧИТЬ ПО
		//|	ПриоритетПоСоответствию УБЫВ,
		//|	скEDI_ПравилаЗагрузки.Приоритет УБЫВ";
		//Запрос.УстановитьПараметр("Организация", Организация);
		//Запрос.УстановитьПараметр("ЕДРПОУВладельцаШаблона", ЕДРПОУВладельцаШаблона);
		//Запрос.УстановитьПараметр("ИмяШаблона", ИмяШаблона);
		//Запрос.УстановитьПараметр("ВерсияШаблона", Строка(ВерсияШаблона));
		//ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		//Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		//	Если ЭтоАвтоматическаяОбработка и ВыборкаРезультатаЗапроса.НеИскатьАвтоматически Тогда
		//		Возврат Ложь;
		//	КонецЕсли;
		//	Возврат ЗагрузитьДокумент1СпоСхемеЗагрузки(Документ1С, ВыборкаРезультатаЗапроса.ВидДокумента, ВыборкаРезультатаЗапроса.СхемаЗагрузки.Получить(), Организация, ИмяШаблона, СоответствиеЗначений, Коментарий, ТолькоПоиск);
		//Иначе
		//	Коментарий = "Шаблон """ + ИмяШаблона + """ не зарегистрирован за организацией """ + Строка(Организация) + """ (Правила загрузки)";
		//	Возврат Ложь;
		//КонецЕсли;
		ПравилаЗагрузки = Неопределено;
		Если НайтиПравилаЗагрузкиВходящихДокументов(Организация, ЕДРПОУВладельцаШаблона, ИмяШаблона, ВерсияШаблона, Ложь, Неопределено, ПравилаЗагрузки, Коментарий) Тогда
			Если ЭтоАвтоматическаяОбработка и ПравилаЗагрузки.НеИскатьАвтоматически Тогда
				Возврат Ложь;
			КонецЕсли;
			Возврат ЗагрузитьДокумент1СпоСхемеЗагрузки(Документ1С, ПравилаЗагрузки.ВидДокумента, ПравилаЗагрузки.СхемаЗагрузки.Получить(), Организация, ИмяШаблона, СоответствиеЗначений, ЭлектронныйДокументОбъектСсылка, Коментарий, ТолькоПоиск);
		Иначе
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Коментарий = "Шаблон """ + ИмяШаблона + """ не зарегистрирован за организацией """ + Строка(Организация) + """ (Правила загрузки)";
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Функция ЗагрузитьДокумент1СпоСхемеЗагрузки(Документ1С, ВидДокумента, Настройки, Организация, ИмяШаблона, ОсновноеСоответствиеЗначений, ЭлектронныйДокументОбъектСсылка, Коментарий, ТолькоПоиск = Ложь) экспорт
	Коментарий = "";
	ОсновнаяСтруктураНастроек = Неопределено;
	СтруктураНастроек = Неопределено;
	тИмяШаблона = "";
	Если скEDI_СозданиеДокументов.ОбработатьНастройки(Настройки, тИмяШаблона, ОсновнаяСтруктураНастроек) Тогда
		Если ИмяШаблона <> тИмяШаблона Тогда
			Коментарий = "Настройки не соответствуют шаблону: " + тИмяШаблона + "<>" + ИмяШаблона;
			Возврат Ложь;
		КонецЕсли;
		
		ТипДокумента = скEDI_НастройкиПодКонфигурацию.ПолучитьТипДокументаПоВиду(ВидДокумента);
		МетаданныеТипаДокумента = Метаданные.НайтиПоТипу(ТипДокумента);
		Если МетаданныеТипаДокумента = Неопределено Тогда
			Коментарий = "Не удалось определить метаданные Документа1С: " + Строка(ВидДокумента);
			Возврат Ложь;
		КонецЕсли;
		МенеджерТипаДокумента = ПолучитьМенеджераПоТипу(ТипДокумента);
		
		Если МенеджерТипаДокумента = Неопределено Тогда
			Коментарий = "Не удалось определить МенеджераТипа Документа1С: " + Строка(ВидДокумента);
			Возврат Ложь;
		КонецЕсли;
		ЭтоСправочник = Справочники.ТипВсеСсылки().СодержитТип(ТипДокумента);
		ЭтоДокумент = Документы.ТипВсеСсылки().СодержитТип(ТипДокумента);
		
		Если ОсновнаяСтруктураНастроек.ПоТиповойСхемме Тогда
			ПравилаЗагрузки = Неопределено;
			Если НайтиПравилаЗагрузкиВходящихДокументов(Организация, ОсновнаяСтруктураНастроек.ПоТиповойСхеммеЕДРПОУВладельцаШаблона, ОсновнаяСтруктураНастроек.ПоТиповойСхеммеИмяШаблона, ОсновнаяСтруктураНастроек.ПоТиповойСхеммеВерсияШаблона, Истина, ВидДокумента, ПравилаЗагрузки, Коментарий) Тогда
				НастройкиТиповойСхеммы = ПравилаЗагрузки.СхемаЗагрузки.Получить();
				СтруктураНастроекТиповойСхеммы = Неопределено;
				тИмяШаблона = "";
				Если скEDI_СозданиеДокументов.ОбработатьНастройки(НастройкиТиповойСхеммы, тИмяШаблона, СтруктураНастроекТиповойСхеммы) Тогда
					Если ОсновнаяСтруктураНастроек.ПоТиповойСхеммеИмяШаблона <> тИмяШаблона Тогда
						Коментарий = "Настройки не соответствуют шаблону: " + тИмяШаблона + "<>" + ОсновнаяСтруктураНастроек.ПоТиповойСхеммеИмяШаблона;
						Возврат Ложь;
					КонецЕсли;
					
					СоответствиеЗначенийТиповойСхеммы = Новый Соответствие;
					
					Для Каждого НастройкиТиповойСхеммы_Таблица из ОсновнаяСтруктураНастроек.НастройкиТиповойСхеммы_Таблицы Цикл
						Если ЗначениеЗаполнено(НастройкиТиповойСхеммы_Таблица.НастройкаИмяТаблицы) Тогда
							ИдентификаторТаблицы = Формат(НастройкиТиповойСхеммы_Таблица.НомерТаблицы, "ЧН=0; ЧГ=0");
							ИдентификаторТаблицыНастройка = Формат(НастройкиТиповойСхеммы_Таблица.НастройкаНомерТаблицы, "ЧН=0; ЧГ=0");
							
							МассивДанныхОсновнойТаблицы = ОсновноеСоответствиеЗначений.Получить(ИдентификаторТаблицыНастройка);
							Если ТипЗнч(МассивДанныхОсновнойТаблицы) = Тип("Массив") Тогда
								МассивДанных = Новый Массив;
								
								Для Каждого ЭлементМассиваДанныхОсновнойТаблицы из МассивДанныхОсновнойТаблицы Цикл
									ЭлементМассиваДанных = Новый Соответствие;
									
									Для Каждого НастройкиТиповойСхеммыМассивПолей Из НастройкиТиповойСхеммы_Таблица.МассивПолей Цикл
										Если ЗначениеЗаполнено(НастройкиТиповойСхеммыМассивПолей.НастройкаВыражение) Тогда
											Результат = Неопределено;
											МассивДанныхТаблицы0 = ОсновноеСоответствиеЗначений.Получить("0");
											Если ТипЗнч(МассивДанныхТаблицы0) = Тип("Массив") Тогда
												Если МассивДанныхТаблицы0.Количество() > 0 Тогда
													ЭлементМассиваДанныхТаблицы0 = МассивДанныхТаблицы0[0];
												Иначе
													ЭлементМассиваДанныхТаблицы0 = Новый Соответствие;
												КонецЕсли;
											Иначе
												ЭлементМассиваДанныхТаблицы0 = Новый Соответствие;
											КонецЕсли;
											
											ВычислитьЗначениеПоляШаблона(НастройкиТиповойСхеммыМассивПолей.НастройкаВыражение, Результат, ЭлементМассиваДанныхОсновнойТаблицы, ЭлементМассиваДанныхТаблицы0);
											ЭлементМассиваДанных.Вставить(НастройкиТиповойСхеммыМассивПолей.ИмяРеквизита, Результат);
										ИначеЕсли ЗначениеЗаполнено(НастройкиТиповойСхеммыМассивПолей.НастройкаИмяРеквизита) Тогда
											РеквизитИдентификаторТаблицыНастройка = Формат(НастройкиТиповойСхеммыМассивПолей.НастройкаНомерТаблицы, "ЧН=0; ЧГ=0");
											Если РеквизитИдентификаторТаблицыНастройка = ИдентификаторТаблицыНастройка Тогда
												ЗначениеПоляСтрокиОсновнойТаблицы = ЭлементМассиваДанныхОсновнойТаблицы.Получить(НастройкиТиповойСхеммыМассивПолей.НастройкаИмяРеквизита);
											Иначе
												ЗначениеПоляСтрокиОсновнойТаблицы = Неопределено;
												МассивДанныхОсновнойТаблицыПоПолю = ОсновноеСоответствиеЗначений.Получить(РеквизитИдентификаторТаблицыНастройка);
												Если ТипЗнч(МассивДанныхОсновнойТаблицыПоПолю) = Тип("Массив") Тогда
													Если МассивДанныхОсновнойТаблицыПоПолю.Количество() > 0 Тогда
														ЭлементМассиваДанныхОсновнойТаблицыПоПолю = МассивДанныхОсновнойТаблицыПоПолю[0];
														ЗначениеПоляСтрокиОсновнойТаблицы = ЭлементМассиваДанныхОсновнойТаблицыПоПолю.Получить(НастройкиТиповойСхеммыМассивПолей.НастройкаИмяРеквизита);
													КонецЕсли;
												КонецЕсли;
											КонецЕсли;
											ЭлементМассиваДанных.Вставить(НастройкиТиповойСхеммыМассивПолей.ИмяРеквизита, ЗначениеПоляСтрокиОсновнойТаблицы);
										КонецЕсли;
									КонецЦикла;
									
									МассивДанных.Добавить(ЭлементМассиваДанных);
								КонецЦикла;
								
								СоответствиеЗначенийТиповойСхеммы.Вставить(ИдентификаторТаблицы, МассивДанных);
							Иначе
								
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					
	//+"ПоТиповойСхемме,ПоТиповойСхеммеЕДРПОУВладельцаШаблона,ПоТиповойСхеммеИмяШаблона,"
	//+"ПоТиповойСхеммеВерсияШаблона,ПоТиповойСхеммеВидДокумента1С,НастройкиТиповойСхеммы_Таблицы");
					
					СтруктураНастроек = СтруктураНастроекТиповойСхеммы;
					СоответствиеЗначений = СоответствиеЗначенийТиповойСхеммы;
				Иначе
					Коментарий = НСтр("ru = 'Некорректные настройки Схемы загрузки по шаблону'; uk = 'Некоректні налаштування Схеми завантаження по шаблону'") + ": " + ОсновнаяСтруктураНастроек.ПоТиповойСхеммеИмяШаблона;
				КонецЕсли;
			Иначе
				Возврат Ложь;
			КонецЕсли;
		Иначе
			СтруктураНастроек = ОсновнаяСтруктураНастроек;
			СоответствиеЗначений = ОсновноеСоответствиеЗначений;
		КонецЕсли;
		
		МассивДанных = СоответствиеЗначений.Получить("0");
		Если МассивДанных = Неопределено Тогда
			Коментарий = "Нет Таблицы ""0""";
			Возврат Ложь;
		КонецЕсли;
		Если МассивДанных.Количество() = 0 Тогда
			Коментарий = "Таблице ""0"" нет данных";
			Возврат Ложь;
		КонецЕсли;
		
		ДанныеТаблицы0 = МассивДанных[0];
		/////////////////
		Переменная = Неопределено;
		Документ1С_Объект = Неопределено;
		Документ1ССсылка = МенеджерТипаДокумента.ПустаяСсылка();
		СтандартнаяОбработкаПоискДокумента = Истина;
		ПродолжатьСтандартнуюОбработку = Истина;
		РедактироватьНайденыйДокумент = СтруктураНастроек.РедактироватьНайденыйДокумент;
		Если не ПустаяСтрока(СтруктураНастроек.ПоискДокумента) Тогда
			МассивДанныхТаблицы1 = СоответствиеЗначений.Получить("1");
			МассивДанныхТаблицы2 = СоответствиеЗначений.Получить("2");
			МассивДанныхТаблицы3 = СоответствиеЗначений.Получить("3");
			МассивДанныхТаблицы4 = СоответствиеЗначений.Получить("4");
			МассивДанныхТаблицы5 = СоответствиеЗначений.Получить("5");
			
			ОтказПриПоискеДокумента = Ложь;
			СтандартнаяОбработкаПоискДокумента = Ложь;
			ОтработатьСобытиеПоискДокумента(СтруктураНастроек.ПоискДокумента, Документ1ССсылка, Организация, Переменная, ДанныеТаблицы0,
				МассивДанныхТаблицы1, МассивДанныхТаблицы2, МассивДанныхТаблицы3, МассивДанныхТаблицы4, МассивДанныхТаблицы5, ОтказПриПоискеДокумента, ПродолжатьСтандартнуюОбработку, СтандартнаяОбработкаПоискДокумента, РедактироватьНайденыйДокумент);
			Если ОтказПриПоискеДокумента Тогда
				Коментарий = "В событии ПоискДокумента получен Отказ";
				Возврат Ложь;
			КонецЕсли;
			Если Не ПродолжатьСтандартнуюОбработку Тогда
				Если Документ1ССсылка = МенеджерТипаДокумента.ПустаяСсылка() Тогда
					Документ1ССсылка = Неопределено;
				КонецЕсли;
				Документ1С = Документ1ССсылка;
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
		/////////////////
		РеквизитыДокумента1С = Неопределено;
		Если не ПолучитьЗначенияРеквизитовДокумента1С(РеквизитыДокумента1С, Неопределено, СтруктураНастроек.Реквизиты0, ДанныеТаблицы0, , Переменная) Тогда
			Коментарий = "Ошибка получения значений реквизитов Документа1С по Таблице ""0""";
			Возврат Ложь;
		КонецЕсли;
		
		ЗапросПоискДокумента1С = Новый Запрос;
		УсловиеПоискаДокумента1С = "";
		Для Каждого Реквизит0 Из СтруктураНастроек.Реквизиты0 Цикл
			Если Реквизит0.Значение.ПолеПоиска Тогда
				Если УсловиеПоискаДокумента1С <> "" Тогда
					УсловиеПоискаДокумента1С = УсловиеПоискаДокумента1С + "
					|И ";
				КонецЕсли;
				УсловиеПоискаДокумента1С = УсловиеПоискаДокумента1С + "_ТаблицаДокументов1С." + Реквизит0.Значение.ИмяРеквизита + " = &" + Реквизит0.Значение.ИмяРеквизита;
				ЗапросПоискДокумента1С.УстановитьПараметр(Реквизит0.Значение.ИмяРеквизита, РеквизитыДокумента1С.Получить(Реквизит0.Значение.ИмяРеквизита));
			КонецЕсли;
		КонецЦикла;
		
		//Переменная = Неопределено;
		//Документ1С_Объект = Неопределено;
		//Документ1ССсылка = МенеджерТипаДокумента.ПустаяСсылка();
		//СтандартнаяОбработкаПоискДокумента = Истина;
		//ПродолжатьСтандартнуюОбработку = Истина;
		//РедактироватьНайденыйДокумент = СтруктураНастроек.РедактироватьНайденыйДокумент;
		//Если не ПустаяСтрока(СтруктураНастроек.ПоискДокумента) Тогда
		//	МассивДанныхТаблицы1 = СоответствиеЗначений.Получить("1");
		//	МассивДанныхТаблицы2 = СоответствиеЗначений.Получить("2");
		//	МассивДанныхТаблицы3 = СоответствиеЗначений.Получить("3");
		//	МассивДанныхТаблицы4 = СоответствиеЗначений.Получить("4");
		//	МассивДанныхТаблицы5 = СоответствиеЗначений.Получить("5");
		//	
		//	ОтказПриПоискеДокумента = Ложь;
		//	СтандартнаяОбработкаПоискДокумента = Ложь;
		//	ОтработатьСобытиеПоискДокумента(СтруктураНастроек.ПоискДокумента, Документ1ССсылка, Организация, Переменная, РеквизитыДокумента1С, ДанныеТаблицы0,
		//		МассивДанныхТаблицы1, МассивДанныхТаблицы2, МассивДанныхТаблицы3, МассивДанныхТаблицы4, МассивДанныхТаблицы5, ОтказПриПоискеДокумента, ПродолжатьСтандартнуюОбработку, СтандартнаяОбработкаПоискДокумента, РедактироватьНайденыйДокумент);
		//	Если ОтказПриПоискеДокумента Тогда
		//		Коментарий = "В событии ПоискДокумента получен Отказ";
		//		Возврат Ложь;
		//	КонецЕсли;
		//	Если Не ПродолжатьСтандартнуюОбработку Тогда
		//		Документ1С = Документ1ССсылка;
		//		Возврат Истина;
		//	КонецЕсли;
		//КонецЕсли;
		
		Если СтандартнаяОбработкаПоискДокумента И Не ПустаяСтрока(УсловиеПоискаДокумента1С) Тогда
			ЗапросПоискДокумента1С.Текст =
				"ВЫБРАТЬ
				|	_ТаблицаДокументов1С.Ссылка
				|ИЗ
				|	" + МетаданныеТипаДокумента.ПолноеИмя() + " КАК _ТаблицаДокументов1С
				|ГДЕ " + УсловиеПоискаДокумента1С;
			ВыборкаРезультатаЗапроса = ЗапросПоискДокумента1С.Выполнить().Выбрать();
			Если ВыборкаРезультатаЗапроса.Следующий() Тогда
				Документ1ССсылка = ВыборкаРезультатаЗапроса.Ссылка;
				Сообщить("Документ "
				+ ВыборкаРезультатаЗапроса.Ссылка
				+ " "
				+ НСтр("ru = 'уже существует...'; uk = 'вже існує...'"));
				НомерВарианта = 1;
				Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
					НомерВарианта = НомерВарианта + 1;
					Коментарий = НСтр("ru = 'Не однозначно определен Учетный Документ'; uk = 'Не однозначно визначено Обліковий документ'");
					Сообщить("Документ "
					+ ВыборкаРезультатаЗапроса.Ссылка
					+ " "
					+ НСтр("ru = 'уже существует'; uk = 'вже існує'")
					+ " ("
					+ НСтр("ru = 'вариант'; uk = 'варіант'")
					+ " № " + Строка(НомерВарианта) + ")...");
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если Документ1ССсылка = МенеджерТипаДокумента.ПустаяСсылка() Тогда
			Если ТолькоПоиск Тогда
				Документ1С = Неопределено;
				Возврат Ложь;
			КонецЕсли;
		Иначе
			Документ1С = Документ1ССсылка;
			Если ТолькоПоиск Тогда
				Документ1С = Неопределено;
				Возврат Ложь;
			ИначеЕсли РедактироватьНайденыйДокумент Тогда
				Документ1С_Объект = Документ1С.ПолучитьОбъект();
			Иначе
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;

		Если Документ1С_Объект = Неопределено Тогда
			Если ЭтоСправочник Тогда
				Документ1С_Объект = МенеджерТипаДокумента.СоздатьЭлемент();
			ИначеЕсли ЭтоДокумент Тогда
				Документ1С_Объект = МенеджерТипаДокумента.СоздатьДокумент();
			Иначе
				Коментарий = "Нет возможности создать объект: " + Строка(ТипДокумента);
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого РеквизитДокумента1С из РеквизитыДокумента1С Цикл
			Если ЭтоДокумент Тогда
				Если ВРег(РеквизитДокумента1С.Ключ) = ВРег("Проведен") Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			Документ1С_Объект[РеквизитДокумента1С.Ключ] = РеквизитДокумента1С.Значение;
		КонецЦикла;
		
		Если не ПустаяСтрока(СтруктураНастроек.ПриСозданииДокумента) Тогда
			МассивДанныхТаблицы1 = СоответствиеЗначений.Получить("1");
			МассивДанныхТаблицы2 = СоответствиеЗначений.Получить("2");
			МассивДанныхТаблицы3 = СоответствиеЗначений.Получить("3");
			МассивДанныхТаблицы4 = СоответствиеЗначений.Получить("4");
			МассивДанныхТаблицы5 = СоответствиеЗначений.Получить("5");
			
			ОтказПриСозданииДокумента = Ложь;
			ОтработатьСобытиеПриСозданииДокумента(СтруктураНастроек.ПриСозданииДокумента, Документ1С_Объект, Организация, Переменная, РеквизитыДокумента1С, ДанныеТаблицы0,
				МассивДанныхТаблицы1, МассивДанныхТаблицы2, МассивДанныхТаблицы3, МассивДанныхТаблицы4, МассивДанныхТаблицы5, ОтказПриСозданииДокумента);
			Если ОтказПриСозданииДокумента Тогда
				Коментарий = "В событии ПриСозданииДокумента получен Отказ";
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;

		
		Если не ПустаяСтрока(СтруктураНастроек.ИмяТабличнойЧасти1) Тогда
			МассивДанных1 = СоответствиеЗначений.Получить("1");
			Если МассивДанных1 = Неопределено Тогда
				//Коментарий = "Нет Таблицы ""1""";
				////Возврат Ложь;
			Иначе
				//Если МассивДанных1.Количество() = 0 Тогда
				//	Коментарий = "Таблице ""1"" нет данных";
				//	Возврат Ложь;
				//КонецЕсли;
				Для Каждого ДанныеТаблицы1 Из МассивДанных1 Цикл
					РеквизитыСтрокиТабличнойЧастиДокумента1С = Неопределено;
					Если не ПолучитьЗначенияРеквизитовДокумента1С(РеквизитыСтрокиТабличнойЧастиДокумента1С, РеквизитыДокумента1С, СтруктураНастроек.Реквизиты1, ДанныеТаблицы1, ДанныеТаблицы0, Переменная) Тогда
						Коментарий = "Ошибка получения значений реквизитов Документа1С по Таблице ""1""";
						Возврат Ложь;
					КонецЕсли;
					ТабличнаяЧасть1 = Документ1С_Объект[СтруктураНастроек.ИмяТабличнойЧасти1];
					НоваяСтрокаТабличнойЧасти1 = ТабличнаяЧасть1.Добавить();
					Для Каждого РеквизитСтрокиТабличнойЧастиДокумента1С из РеквизитыСтрокиТабличнойЧастиДокумента1С Цикл
						НоваяСтрокаТабличнойЧасти1[РеквизитСтрокиТабличнойЧастиДокумента1С.Ключ] = РеквизитСтрокиТабличнойЧастиДокумента1С.Значение;
					КонецЦикла;
					Если не ПустаяСтрока(СтруктураНастроек.ПослеДобавленияСтрокиТабличнойЧасти1) Тогда
						ОтказДобавлятьСтроку = Ложь;
						ОтработатьСобытиеПослеДобавленияСтрокиТабличнойЧасти(СтруктураНастроек.ПослеДобавленияСтрокиТабличнойЧасти1, Документ1С_Объект, Организация, Переменная, НоваяСтрокаТабличнойЧасти1, ДанныеТаблицы1, ДанныеТаблицы0, ОтказДобавлятьСтроку);
						Если ОтказДобавлятьСтроку Тогда
							ТабличнаяЧасть1.Удалить(НоваяСтрокаТабличнойЧасти1.НомерСтроки-1);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если не ПустаяСтрока(СтруктураНастроек.ИмяТабличнойЧасти2) Тогда
			МассивДанных2 = СоответствиеЗначений.Получить("2");
			Если МассивДанных2 = Неопределено Тогда
				//Коментарий = "Нет Таблицы ""2""";
				////Возврат Ложь;
			Иначе
				//Если МассивДанных2.Количество() = 0 Тогда
				//	Коментарий = "Таблице ""2"" нет данных";
				//	Возврат Ложь;
				//КонецЕсли;
				Для Каждого ДанныеТаблицы2 Из МассивДанных2 Цикл
					РеквизитыСтрокиТабличнойЧастиДокумента1С = Неопределено;
					Если не ПолучитьЗначенияРеквизитовДокумента1С(РеквизитыСтрокиТабличнойЧастиДокумента1С, РеквизитыДокумента1С, СтруктураНастроек.Реквизиты2, ДанныеТаблицы2, ДанныеТаблицы0, Переменная) Тогда
						Коментарий = "Ошибка получения значений реквизитов Документа1С по Таблице ""2""";
						Возврат Ложь;
					КонецЕсли;
					ТабличнаяЧасть2 = Документ1С_Объект[СтруктураНастроек.ИмяТабличнойЧасти2];
					НоваяСтрокаТабличнойЧасти2 = ТабличнаяЧасть2.Добавить();
					Для Каждого РеквизитСтрокиТабличнойЧастиДокумента1С из РеквизитыСтрокиТабличнойЧастиДокумента1С Цикл
						НоваяСтрокаТабличнойЧасти2[РеквизитСтрокиТабличнойЧастиДокумента1С.Ключ] = РеквизитСтрокиТабличнойЧастиДокумента1С.Значение;
					КонецЦикла;
					Если не ПустаяСтрока(СтруктураНастроек.ПослеДобавленияСтрокиТабличнойЧасти2) Тогда
						ОтказДобавлятьСтроку = Ложь;
						ОтработатьСобытиеПослеДобавленияСтрокиТабличнойЧасти(СтруктураНастроек.ПослеДобавленияСтрокиТабличнойЧасти2, Документ1С_Объект, Организация, Переменная, НоваяСтрокаТабличнойЧасти2, ДанныеТаблицы2, ДанныеТаблицы0, ОтказДобавлятьСтроку);
						Если ОтказДобавлятьСтроку Тогда
							ТабличнаяЧасть2.Удалить(НоваяСтрокаТабличнойЧасти2.НомерСтроки-1);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если не ПустаяСтрока(СтруктураНастроек.ИмяТабличнойЧасти3) Тогда
			МассивДанных3 = СоответствиеЗначений.Получить("3");
			Если МассивДанных3 = Неопределено Тогда
				//Коментарий = "Нет Таблицы ""3""";
				////Возврат Ложь;
			Иначе
				//Если МассивДанных3.Количество() = 0 Тогда
				//	Коментарий = "Таблице ""3"" нет данных";
				//	Возврат Ложь;
				//КонецЕсли;
				Для Каждого ДанныеТаблицы3 Из МассивДанных3 Цикл
					РеквизитыСтрокиТабличнойЧастиДокумента1С = Неопределено;
					Если не ПолучитьЗначенияРеквизитовДокумента1С(РеквизитыСтрокиТабличнойЧастиДокумента1С, РеквизитыДокумента1С, СтруктураНастроек.Реквизиты3, ДанныеТаблицы3, ДанныеТаблицы0, Переменная) Тогда
						Коментарий = "Ошибка получения значений реквизитов Документа1С по Таблице ""3""";
						Возврат Ложь;
					КонецЕсли;
					ТабличнаяЧасть3 = Документ1С_Объект[СтруктураНастроек.ИмяТабличнойЧасти3];
					НоваяСтрокаТабличнойЧасти3 = ТабличнаяЧасть3.Добавить();
					Для Каждого РеквизитСтрокиТабличнойЧастиДокумента1С из РеквизитыСтрокиТабличнойЧастиДокумента1С Цикл
						НоваяСтрокаТабличнойЧасти3[РеквизитСтрокиТабличнойЧастиДокумента1С.Ключ] = РеквизитСтрокиТабличнойЧастиДокумента1С.Значение;
					КонецЦикла;
					Если не ПустаяСтрока(СтруктураНастроек.ПослеДобавленияСтрокиТабличнойЧасти3) Тогда
						ОтказДобавлятьСтроку = Ложь;
						ОтработатьСобытиеПослеДобавленияСтрокиТабличнойЧасти(СтруктураНастроек.ПослеДобавленияСтрокиТабличнойЧасти3, Документ1С_Объект, Организация, Переменная, НоваяСтрокаТабличнойЧасти3, ДанныеТаблицы3, ДанныеТаблицы0, ОтказДобавлятьСтроку);
						Если ОтказДобавлятьСтроку Тогда
							ТабличнаяЧасть3.Удалить(НоваяСтрокаТабличнойЧасти3.НомерСтроки-1);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если не ПустаяСтрока(СтруктураНастроек.ИмяТабличнойЧасти4) Тогда
			МассивДанных4 = СоответствиеЗначений.Получить("4");
			Если МассивДанных4 = Неопределено Тогда
				//Коментарий = "Нет Таблицы ""4""";
				////Возврат Ложь;
			Иначе
				//Если МассивДанных4.Количество() = 0 Тогда
				//	Коментарий = "Таблице ""4"" нет данных";
				//	Возврат Ложь;
				//КонецЕсли;
				Для Каждого ДанныеТаблицы4 Из МассивДанных4 Цикл
					РеквизитыСтрокиТабличнойЧастиДокумента1С = Неопределено;
					Если не ПолучитьЗначенияРеквизитовДокумента1С(РеквизитыСтрокиТабличнойЧастиДокумента1С, РеквизитыДокумента1С, СтруктураНастроек.Реквизиты4, ДанныеТаблицы4, ДанныеТаблицы0, Переменная) Тогда
						Коментарий = "Ошибка получения значений реквизитов Документа1С по Таблице ""4""";
						Возврат Ложь;
					КонецЕсли;
					ТабличнаяЧасть4 = Документ1С_Объект[СтруктураНастроек.ИмяТабличнойЧасти4];
					НоваяСтрокаТабличнойЧасти4 = ТабличнаяЧасть4.Добавить();
					Для Каждого РеквизитСтрокиТабличнойЧастиДокумента1С из РеквизитыСтрокиТабличнойЧастиДокумента1С Цикл
						НоваяСтрокаТабличнойЧасти4[РеквизитСтрокиТабличнойЧастиДокумента1С.Ключ] = РеквизитСтрокиТабличнойЧастиДокумента1С.Значение;
					КонецЦикла;
					Если не ПустаяСтрока(СтруктураНастроек.ПослеДобавленияСтрокиТабличнойЧасти4) Тогда
						ОтказДобавлятьСтроку = Ложь;
						ОтработатьСобытиеПослеДобавленияСтрокиТабличнойЧасти(СтруктураНастроек.ПослеДобавленияСтрокиТабличнойЧасти4, Документ1С_Объект, Организация, Переменная, НоваяСтрокаТабличнойЧасти4, ДанныеТаблицы4, ДанныеТаблицы0, ОтказДобавлятьСтроку);
						Если ОтказДобавлятьСтроку Тогда
							ТабличнаяЧасть4.Удалить(НоваяСтрокаТабличнойЧасти4.НомерСтроки-1);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если не ПустаяСтрока(СтруктураНастроек.ИмяТабличнойЧасти5) Тогда
			МассивДанных5 = СоответствиеЗначений.Получить("5");
			Если МассивДанных5 = Неопределено Тогда
				//Коментарий = "Нет Таблицы ""5""";
				////Возврат Ложь;
			Иначе
				//Если МассивДанных5.Количество() = 0 Тогда
				//	Коментарий = "Таблице ""5"" нет данных";
				//	Возврат Ложь;
				//КонецЕсли;
				Для Каждого ДанныеТаблицы5 Из МассивДанных5 Цикл
					РеквизитыСтрокиТабличнойЧастиДокумента1С = Неопределено;
					Если не ПолучитьЗначенияРеквизитовДокумента1С(РеквизитыСтрокиТабличнойЧастиДокумента1С, РеквизитыДокумента1С, СтруктураНастроек.Реквизиты5, ДанныеТаблицы5, ДанныеТаблицы0, Переменная) Тогда
						Коментарий = "Ошибка получения значений реквизитов Документа1С по Таблице ""5""";
						Возврат Ложь;
					КонецЕсли;
					ТабличнаяЧасть5 = Документ1С_Объект[СтруктураНастроек.ИмяТабличнойЧасти5];
					НоваяСтрокаТабличнойЧасти5 = ТабличнаяЧасть5.Добавить();
					Для Каждого РеквизитСтрокиТабличнойЧастиДокумента1С из РеквизитыСтрокиТабличнойЧастиДокумента1С Цикл
						НоваяСтрокаТабличнойЧасти5[РеквизитСтрокиТабличнойЧастиДокумента1С.Ключ] = РеквизитСтрокиТабличнойЧастиДокумента1С.Значение;
					КонецЦикла;
					Если не ПустаяСтрока(СтруктураНастроек.ПослеДобавленияСтрокиТабличнойЧасти5) Тогда
						ОтказДобавлятьСтроку = Ложь;
						ОтработатьСобытиеПослеДобавленияСтрокиТабличнойЧасти(СтруктураНастроек.ПослеДобавленияСтрокиТабличнойЧасти5, Документ1С_Объект, Организация, Переменная, НоваяСтрокаТабличнойЧасти5, ДанныеТаблицы5, ДанныеТаблицы0, ОтказДобавлятьСтроку);
						Если ОтказДобавлятьСтроку Тогда
							ТабличнаяЧасть5.Удалить(НоваяСтрокаТабличнойЧасти5.НомерСтроки-1);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если не ПустаяСтрока(СтруктураНастроек.ПередЗаписьюДокумента) Тогда
			МассивДанныхТаблицы1 = СоответствиеЗначений.Получить("1");
			МассивДанныхТаблицы2 = СоответствиеЗначений.Получить("2");
			МассивДанныхТаблицы3 = СоответствиеЗначений.Получить("3");
			МассивДанныхТаблицы4 = СоответствиеЗначений.Получить("4");
			МассивДанныхТаблицы5 = СоответствиеЗначений.Получить("5");
			
			ОтказПередЗаписьюДокумента = Ложь;
			ОтработатьСобытиеПередЗаписьюДокумента(СтруктураНастроек.ПередЗаписьюДокумента, Документ1С_Объект, Организация, Переменная, РеквизитыДокумента1С, ДанныеТаблицы0,
				МассивДанныхТаблицы1, МассивДанныхТаблицы2, МассивДанныхТаблицы3, МассивДанныхТаблицы4, МассивДанныхТаблицы5, ОтказПередЗаписьюДокумента);
			Если ОтказПередЗаписьюДокумента Тогда
				Коментарий = "В событии ПередЗаписьюДокумента получен Отказ";
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Если ЭтоДокумент Тогда
			РеквизитПроведен = РеквизитыДокумента1С.Получить("Проведен");
			Если РеквизитПроведен = Истина Тогда
				Документ1С_Объект.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				Документ1С_Объект.Записать();
			КонецЕсли;
		Иначе
			Документ1С_Объект.Записать();
		КонецЕсли;
		
		Если не ПустаяСтрока(СтруктураНастроек.ПриЗаписиДокумента) Тогда
			МассивДанныхТаблицы1 = СоответствиеЗначений.Получить("1");
			МассивДанныхТаблицы2 = СоответствиеЗначений.Получить("2");
			МассивДанныхТаблицы3 = СоответствиеЗначений.Получить("3");
			МассивДанныхТаблицы4 = СоответствиеЗначений.Получить("4");
			МассивДанныхТаблицы5 = СоответствиеЗначений.Получить("5");
			
			ОтработатьСобытиеПриЗаписиДокумента(СтруктураНастроек.ПриЗаписиДокумента, Документ1С_Объект, Организация, Переменная, РеквизитыДокумента1С, ДанныеТаблицы0,
				МассивДанныхТаблицы1, МассивДанныхТаблицы2, МассивДанныхТаблицы3, МассивДанныхТаблицы4, МассивДанныхТаблицы5);
		КонецЕсли;
			
		////Для тестирования
		//Форма = Документ1С_Объект.ПолучитьФорму();
		//Форма.Открыть();
		////...Для тестирования
		
		Документ1С = Документ1С_Объект.Ссылка;
		
		///////////////////////////////////////////////////////////
		Если ЗначениеЗаполнено(Документ1С) Тогда
			Если СтруктураНастроек.ПрикреплятьВложеныеФайлы или СтруктураНастроек.ПрикреплятьИзображениеДокументаPDF Тогда
				скEDI_НастройкиПодКонфигурацию.ПрикрепитьФайлы(ЭлектронныйДокументОбъектСсылка, Документ1С, СтруктураНастроек.ПрикреплятьВложеныеФайлы, СтруктураНастроек.ПрикреплятьИзображениеДокументаPDF);
			КонецЕсли;
		КонецЕсли;
		///////////////////////////////////////////////////////////
		Возврат Истина;
	Иначе
		Коментарий = НСтр("ru = 'Некорректные настройки Схемы загрузки по шаблону'; uk = 'Некоректні налаштування Схеми завантаження по шаблону'") + ": " + ИмяШаблона;
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Функция ПолучитьЗначенияРеквизитовДокумента1С(РеквизитыДокумента1С, РеквизитыДокумента1С_0, НастройкиРеквизитов, ДанныеТаблицы, ДанныеТаблицы0 = Неопределено, Переменная)
	
	РеквизитыДокумента1С = Новый Соответствие;
	
	
	Для Каждого СтрокаНастройкиРеквизита Из НастройкиРеквизитов Цикл
		НастройкаРеквизита = СтрокаНастройкиРеквизита.Значение;
		Если НастройкаРеквизита.Пометка Тогда
			Если НастройкаРеквизита.РежимЗагрузки = "Искать" Тогда
				Результат = НастройкаРеквизита.ЗначениеПоУмолчанию;
				Если ЗначениеЗаполнено(НастройкаРеквизита.ИмяРеквизитаШаблона) Тогда
					ДанныеПоРеквизитуШаблона = ПривестиЗначениеРеквизитаШаблона(ДанныеТаблицы.Получить(НастройкаРеквизита.ИмяРеквизитаШаблона), НастройкаРеквизита, РеквизитыДокумента1С);
					Если ЗначениеЗаполнено(ДанныеПоРеквизитуШаблона) Тогда
						Результат = ДанныеПоРеквизитуШаблона;
					КонецЕсли;
				КонецЕсли;
				РеквизитыДокумента1С.Вставить(НастройкаРеквизита.ИмяРеквизита, Результат);
			ИначеЕсли НастройкаРеквизита.РежимЗагрузки = "Устанавливать" Тогда
				Результат = НастройкаРеквизита.ЗначениеПоУмолчанию;
				Если ЗначениеЗаполнено(НастройкаРеквизита.ИмяРеквизитаШаблона) Тогда
					ДанныеПоРеквизитуШаблона = ПривестиЗначениеРеквизитаШаблона(ДанныеТаблицы.Получить(НастройкаРеквизита.ИмяРеквизитаШаблона), НастройкаРеквизита, РеквизитыДокумента1С);
					Если ЗначениеЗаполнено(ДанныеПоРеквизитуШаблона) Тогда
						Результат = ДанныеПоРеквизитуШаблона;
					КонецЕсли;
				КонецЕсли;
				РеквизитыДокумента1С.Вставить(НастройкаРеквизита.ИмяРеквизита, Результат);
			ИначеЕсли НастройкаРеквизита.РежимЗагрузки = "Вычислять" Тогда
				Результат = НастройкаРеквизита.ЗначениеПоУмолчанию;
				Если ЗначениеЗаполнено(НастройкаРеквизита.ИмяРеквизитаШаблона) Тогда
					ДанныеПоРеквизитуШаблона = ПривестиЗначениеРеквизитаШаблона(ДанныеТаблицы.Получить(НастройкаРеквизита.ИмяРеквизитаШаблона), НастройкаРеквизита, РеквизитыДокумента1С);
					Если ЗначениеЗаполнено(ДанныеПоРеквизитуШаблона) Тогда
						Результат = ДанныеПоРеквизитуШаблона;
					КонецЕсли;
				КонецЕсли;
				ВычислитьЗначениеРеквизита(НастройкаРеквизита.Выражение, Результат, РеквизитыДокумента1С, РеквизитыДокумента1С_0, ДанныеТаблицы, ДанныеТаблицы0, Переменная);
				РеквизитыДокумента1С.Вставить(НастройкаРеквизита.ИмяРеквизита, Результат);  
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;
КонецФункции
