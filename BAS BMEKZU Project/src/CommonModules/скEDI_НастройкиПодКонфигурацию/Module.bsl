

Процедура НастроитьСписокОтображенияЭлектронныхДокументов(СписокДокументов, СписокВариантыДокументов, ЖурналыРабочегоСтола) Экспорт
	РеквизитКонтрагентаКодФилиала = Метаданные.Справочники.Контрагенты.Реквизиты.Найти("КодФилиала");		
	ЕстьРеквизитКодФилиала = ?(РеквизитКонтрагентаКодФилиала = Неопределено, Ложь, Истина);
	
	СписокДокументов.ТекстЗапроса = СтрЗаменить(СписокДокументов.ТекстЗапроса,	
	"""ЗАМЕНА1_скEDI_ЭлектронныеДокументы.Документ1СКонтрагент.КодФилиала""", 
	?(ЕстьРеквизитКодФилиала, "скEDI_ЭлектронныеДокументы.Документ1СКонтрагент.КодФилиала", """"""));	
	
	СписокДокументов.ТекстЗапроса = СтрЗаменить(СписокДокументов.ТекстЗапроса,	
	"""ЗАМЕНА2_скEDI_ЭлектронныеДокументы.Документ1СКонтрагент.КодФилиала""", 
	?(ЕстьРеквизитКодФилиала, "скEDI_ЭлектронныеДокументы.Документ1СКонтрагент.КодФилиала", """"""));
	
	СписокДокументов.ТекстЗапроса = СтрЗаменить(СписокДокументов.ТекстЗапроса,	
	"""ЗАМЕНА3_Контрагенты.КодФилиала""", 
	?(ЕстьРеквизитКодФилиала, "Контрагенты.КодФилиала", """"""));
	
	Если Не ЕстьРеквизитКодФилиала Тогда
		СписокДокументов.ТекстЗапроса = СтрЗаменить(СписокДокументов.ТекстЗапроса, "И скEDI_ЭлектронныеДокументы.ЭлектронныйДокумент.ФилиалКонтрагента = Контрагенты.КодФилиала", "");
	КонецЕсли;
	
	Если СписокВариантыДокументов <> Неопределено Тогда
		СписокВариантыДокументов.ТекстЗапроса = СтрЗаменить(СписокВариантыДокументов.ТекстЗапроса,	
		"""ЗАМЕНА1_скEDI_ЭлектронныеДокументы.Документ1СКонтрагент.КодФилиала""", 
		?(ЕстьРеквизитКодФилиала, "скEDI_ЭлектронныеДокументы.Документ1СКонтрагент.КодФилиала", """"""));	
		
		СписокВариантыДокументов.ТекстЗапроса = СтрЗаменить(СписокВариантыДокументов.ТекстЗапроса,	
		"""ЗАМЕНА2_скEDI_ЭлектронныеДокументы.Документ1СКонтрагент.КодФилиала""", 
		?(ЕстьРеквизитКодФилиала, "скEDI_ЭлектронныеДокументы.Документ1СКонтрагент.КодФилиала", """"""));
		
		СписокВариантыДокументов.ТекстЗапроса = СтрЗаменить(СписокВариантыДокументов.ТекстЗапроса,	
		"""ЗАМЕНА3_Контрагенты.КодФилиала""", 
		?(ЕстьРеквизитКодФилиала, "Контрагенты.КодФилиала", """"""));
		
		Если Не ЕстьРеквизитКодФилиала Тогда
			СписокВариантыДокументов.ТекстЗапроса = СтрЗаменить(СписокВариантыДокументов.ТекстЗапроса, "И скEDI_ЭлектронныеДокументы.ЭлектронныйДокумент.ФилиалКонтрагента = Контрагенты.КодФилиала", "");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьМассивИспользуемыхВКонфигурацииВидовДокументов1С() экспорт
	МассивВидовДокументов1С = Новый Массив;
	Для Каждого ЗначениеПеречисления Из Перечисления.скEDI_ВидыДокументов1С Цикл
		//Если ЗначениеПеречисления = Перечисления.скEDI_ВидыДокументов1С.НалоговаяНакладная Тогда
		//	Продолжить;
		//ИначеЕсли ЗначениеПеречисления = Перечисления.скEDI_ВидыДокументов1С.Приложение2КНалоговойНакладной Тогда
		//	Продолжить;
		//КонецЕсли;
		
		ТипДокумента = Неопределено;
		Попытка
			ТипДокумента = ПолучитьТипДокументаПоВиду(ЗначениеПеречисления);
		Исключение
		КонецПопытки;
		Если ТипДокумента <> Неопределено Тогда
			МассивВидовДокументов1С.Добавить(ЗначениеПеречисления);
		КонецЕсли;
	КонецЦикла;
	Возврат МассивВидовДокументов1С;
КонецФункции

Функция ИДКонфигурации() Экспорт
	ИДКонфигурации 		=  Метаданные.Имя;
	ВерсияКонфигурации 	= Метаданные.Версия;
	Если    Найти(ВРег(ИДКонфигурации), ВРег("БухгалтерияДляУкраины")) > 0 Тогда
		Если скEDI_ОбщегоНазначения.СравнитьВерсии(ВерсияКонфигурации, "2.0.0.0") > 0 Тогда
			Возврат "БП20";
		Иначе
			Возврат "БП";
		КонецЕсли;
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("BASБухгалтерия")) > 0 Тогда
		Возврат "БП20";
	ИначеЕсли ВРег(ИДКонфигурации) = ВРег("БСПУ") Тогда
		Возврат "БП";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("ЗарплатаИУправлениеПерсоналомДляУкраины")) > 0 Тогда
		Возврат "ЗУП";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("УправлениеПроизводственнымПредприятиемДляУкраины")) > 0 Тогда
		Возврат "УПП";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("УправлениеТорговымПредприятиемДляУкраины")) > 0 Тогда
	    Возврат "УТП";	
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("УправлениеТорговлейДляУкраины")) > 0 Тогда
		Если скEDI_ОбщегоНазначения.СравнитьВерсии(ВерсияКонфигурации, "3.1.0.0") > 0 Тогда
			Возврат "УТ31";
		ИначеЕсли скEDI_ОбщегоНазначения.СравнитьВерсии(ВерсияКонфигурации, "3.0.0.0") > 0 Тогда
			Возврат "УТ30";
		Иначе			
			Возврат "УТ";
		КонецЕсли;
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("УправлениеПредприятиемДляУкраины")) > 0 Тогда
		Возврат "ЕРП";	
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("УправлениеНебольшойФирмойДляУкраины")) > 0 Тогда
		Возврат "УНФ";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("BASSmallBusiness")) > 0 Тогда
		Возврат "УНФ";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("BASУправлениеТорговлей")) > 0 Тогда
		Возврат "BASУТ";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("BASКомплексноеУправлениеПредприятием")) > 0 Тогда
		Возврат "BASКУП";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("BASERP")) > 0 Тогда
		Если скEDI_ОбщегоНазначения.СравнитьВерсии(ВерсияКонфигурации, "2.5.0.0") > 0 Тогда
			Возврат "BASERP25";
		Иначе			
			Возврат "BASERP";
		КонецЕсли;
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("УправлениеСтроительнойОрганизациейДляУкраины")) > 0 Тогда
		Возврат "УПП";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("BASБухгалтерияКОРП")) > 0 Тогда
		Возврат "БП20";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("BASBBO")) > 0 Тогда
		Возврат "БП20";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("BASPublicCatering")) > 0 Тогда
		Возврат "БП20";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("BASАгроБухгалтерия")) > 0 Тогда
		Возврат "БП20ИНАГРО";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("BASБухгалтерияЭлеватораМельницыИКомбикормовогоЗавода")) > 0 Тогда
		Возврат "БП20";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("КомплексноеРешениеСельскохозяйственногоПредприятия")) > 0 Тогда
		Возврат "БП20ИНАГРО";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("БухгалтерияСельскохозяйственногоПредприятия")) > 0 Тогда
		Если скEDI_ОбщегоНазначения.СравнитьВерсии(ВерсияКонфигурации, "2.0.0.0") > 0 Тогда
			Возврат "БП20";
		Иначе
			Возврат "БП";
		КонецЕсли;
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("ПодрядчикСтроительстваДляУкраины")) > 0 Тогда
		Возврат "БП";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("БухгалтерияСтроительнойОрганизации")) > 0 Тогда
		Если скEDI_ОбщегоНазначения.СравнитьВерсии(ВерсияКонфигурации, "2.0.0.0") > 0 Тогда
			Возврат "БП20";
		Иначе
			Возврат "БП";
		КонецЕсли;
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("BASДокументооборотКОРП")) > 0 Тогда
		Возврат "BASДокументооборотКОРП";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("ДокументооборотДляУкраиныКОРП")) > 0 Тогда
		Возврат "ДокументооборотДляУкраиныКОРП";
	ИначеЕсли Найти(ВРег(ИДКонфигурации), ВРег("FlyDoc")) > 0 Тогда
	    Возврат "FlyDoc";
	Иначе
		Возврат ИДКонфигурации;
	КонецЕсли;
КонецФункции // ИДКонфигурации()

Функция ПолучитьТекущегоПользователя() Экспорт 
	Попытка 
		ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	Исключение
	КонецПопытки;
	
	Если ЗначениеЗаполнено(ТекущийПользователь) Тогда
		Возврат ТекущийПользователь;
	КонецЕсли;
	
	Попытка 
		ТекущийПользователь = ПараметрыСеанса.ТекущийВнешнийПользователь;
	Исключение
	КонецПопытки;
	
	Если ЗначениеЗаполнено(ТекущийПользователь) Тогда
		Возврат ТекущийПользователь;
	Иначе
		Возврат Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;
КонецФункции // ПолучитьТекущегоПользователя()

Функция ПолучитьСписокЕДРПОУ() Экспорт
	СписокЕДРПОУ = Новый СписокЗначений;
	ИДКонфигурации  = ИДКонфигурации();
	Если ИДКонфигурации = "БП"
	 ИЛИ ИДКонфигурации = "УТП"
	 ИЛИ ИДКонфигурации = "УПП" Тогда
	 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	КодыОрганизацииСрезПоследних.КодПоЕДРПОУ,
		               |	ВЫРАЗИТЬ(КодыОрганизацииСрезПоследних.Организация.НаименованиеПолное КАК СТРОКА(255)) КАК НаименованиеПолное
		               |ИЗ
		               |	РегистрСведений.КодыОрганизации.СрезПоследних КАК КодыОрганизацииСрезПоследних
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	скEDI_Организации.Код,
		               |	скEDI_Организации.Наименование
		               |ИЗ
		               |	Справочник.скEDI_Организации КАК скEDI_Организации";
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаРезультатаЗапроса.КодПоЕДРПОУ) Тогда
				СписокЕДРПОУ.Добавить(ВыборкаРезультатаЗапроса.КодПоЕДРПОУ, ВыборкаРезультатаЗапроса.КодПоЕДРПОУ + " - " + ВыборкаРезультатаЗапроса.НаименованиеПолное);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ИДКонфигурации = "БП20"
		ИЛИ ИДКонфигурации = "УТ"
		ИЛИ ИДКонфигурации = "УТ30"
		ИЛИ ИДКонфигурации = "УТ31" 
		ИЛИ ИДКонфигурации = "FlyDoc" 
		ИЛИ ИДКонфигурации = "УНФ"
		ИЛИ ИДКонфигурации = "БП20ИНАГРО"
		ИЛИ ИДКонфигурации = "BASУТ"
		ИЛИ ИДКонфигурации = "BASКУП"
		ИЛИ ИДКонфигурации = "BASERP"
		ИЛИ ИДКонфигурации = "BASERP25"
		ИЛИ ИДКонфигурации = "BASДокументооборотКОРП"
		ИЛИ ИДКонфигурации = "ДокументооборотДляУкраиныКОРП" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Организации.КодПоЕДРПОУ,
		               |	ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(255)) КАК НаименованиеПолное
		               |ИЗ
		               |	Справочник.Организации КАК Организации
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	скEDI_Организации.Код,
		               |	скEDI_Организации.Наименование
		               |ИЗ
		               |	Справочник.скEDI_Организации КАК скEDI_Организации";
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаРезультатаЗапроса.КодПоЕДРПОУ) Тогда
				СписокЕДРПОУ.Добавить(ВыборкаРезультатаЗапроса.КодПоЕДРПОУ, ВыборкаРезультатаЗапроса.КодПоЕДРПОУ + " - " + ВыборкаРезультатаЗапроса.НаименованиеПолное);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	скEDI_Организации.Код КАК КодПоЕДРПОУ,
		               |	скEDI_Организации.Наименование КАК НаименованиеПолное
		               |ИЗ
		               |	Справочник.скEDI_Организации КАК скEDI_Организации";
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаРезультатаЗапроса.КодПоЕДРПОУ) Тогда
				СписокЕДРПОУ.Добавить(ВыборкаРезультатаЗапроса.КодПоЕДРПОУ, ВыборкаРезультатаЗапроса.КодПоЕДРПОУ + " - " + ВыборкаРезультатаЗапроса.НаименованиеПолное);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат СписокЕДРПОУ;
КонецФункции

Функция ПолучитьОрганизациюПоЕДРПОУ(ЕДРПОУ) Экспорт
	Запрос = Новый Запрос;
	ИДКонфигурации  = ИДКонфигурации();
	Если ИДКонфигурации = "БП"
	 ИЛИ ИДКонфигурации = "УТП"
	 ИЛИ ИДКонфигурации = "УПП" Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	КодыОрганизацииСрезПоследних.Организация
		|ИЗ
		|	РегистрСведений.КодыОрганизации.СрезПоследних КАК КодыОрганизацииСрезПоследних
		|ГДЕ
		|	КодыОрганизацииСрезПоследних.КодПоЕДРПОУ = &КодПоЕДРПОУ";
	ИначеЕсли ИДКонфигурации = "БП20"
		ИЛИ ИДКонфигурации = "УТ"
		ИЛИ ИДКонфигурации = "УТ30"
		ИЛИ ИДКонфигурации = "УТ31" 
		ИЛИ ИДКонфигурации = "FlyDoc" 
		ИЛИ ИДКонфигурации = "УНФ"
		ИЛИ ИДКонфигурации = "БП20ИНАГРО"
		ИЛИ ИДКонфигурации = "BASУТ"
		ИЛИ ИДКонфигурации = "BASКУП"
		ИЛИ ИДКонфигурации = "BASERP"
		ИЛИ ИДКонфигурации = "BASERP25"
		ИЛИ ИДКонфигурации = "BASДокументооборотКОРП"
		ИЛИ ИДКонфигурации = "ДокументооборотДляУкраиныКОРП" Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	Организации.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.КодПоЕДРПОУ = &КодПоЕДРПОУ";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	Запрос.УстановитьПараметр("КодПоЕДРПОУ", ЕДРПОУ);
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		Организация1С = ВыборкаРезультатаЗапроса.Организация;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция ПолучитьКонтрагентаПоЕДРПОУ(ЕДРПОУ, КодФилиала = "", ПоКодуФилиала = Ложь) Экспорт
	Если ЗначениеЗаполнено(ЕДРПОУ) Тогда
		Запрос = Новый запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.КодПоЕДРПОУ = &КодПоЕДРПОУ";
		
		Запрос.УстановитьПараметр("КодПоЕДРПОУ", ЕДРПОУ);
		Если ПоКодуФилиала Тогда
			РеквизитКонтрагентаКодФилиала = Метаданные.Справочники.Контрагенты.Реквизиты.Найти("КодФилиала");		
			ЕстьРеквизитКодФилиала = ?(РеквизитКонтрагентаКодФилиала = Неопределено, Ложь, Истина);
			Если ЕстьРеквизитКодФилиала Тогда
				Запрос.Текст = Запрос.Текст + " И Контрагенты.КодФилиала = &КодФилиала";
				Запрос.УстановитьПараметр("КодФилиала", Строка(КодФилиала));
			КонецЕсли;
		КонецЕсли;
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			Возврат ВыборкаРезультатаЗапроса.Ссылка;
		Иначе
			Возврат Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
	Иначе
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
КонецФункции // ПолучитьДанныеКонтрагентаПоДокументу1С()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьМассивОрганизацийПоДокументу1С(Документ1С) Экспорт
	
	лРезультат = Новый Массив;
	
	Информация = ПолучитьИнформациюДляРегистрацииДокумента(Документ1С);
	Организация1С = Информация.Организация;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	скEDI_Организации.Ссылка
	|ИЗ
	|	Справочник.скEDI_Организации КАК скEDI_Организации
	|ГДЕ
	|	скEDI_Организации.Организация1С = &Организация1С
	|
	|УПОРЯДОЧИТЬ ПО
	|	скEDI_Организации.ПометкаУдаления,
	|	скEDI_Организации.Наименование";
	Запрос.УстановитьПараметр("Организация1С", Организация1С);
	
	лВыборкаРезультатовЗапроса = Запрос.Выполнить().Выбрать();
	Пока лВыборкаРезультатовЗапроса.Следующий() Цикл
		
		лРезультат.Добавить(лВыборкаРезультатовЗапроса.Ссылка);
		
	КонецЦикла;
	
	Возврат лРезультат;
	
КонецФункции

Функция ТипЧерезПопытку(ТипСтр)
	Попытка
		Возврат Тип(ТипСтр);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
КонецФункции

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьДанныеКонтрагентаПоДокументу1С(Документ1С) Экспорт
	
	ТипДокумента = ТипЗнч(Документ1С);
	лРезультат = Новый Структура("Контрагент, ЕДРПОУКонтрагента, ФилиалКонтрагента, НаименованиеКонтрагента", Неопределено, "", "", "");
	
	Если ТипДокумента = ТипЧерезПопытку("ДокументСсылка.НалоговаяНакладная") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.Приложение2КНалоговойНакладной") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ЗаписьКнигиПриобретения") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.СчетНаОплатуПокупателю") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.РеализацияУслуг") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.СчетНаОплатуПоставщика") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.АктСверкиВзаиморасчетов") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ЗаказПокупателя") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ПриходнаяНакладная") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.РасходнаяНакладная") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.СчетНаОплату") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.АктВыполненныхРабот") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ЗаказПоставщику") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		лКонтрагент = Документ1С.Владелец;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("СправочникСсылка.ВнутренниеДокументы") Тогда
		//лКонтрагент = Документ1С.Корреспондент;
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("СправочникСсылка.ВходящиеДокументы") Тогда
		//лКонтрагент = Документ1С.Корреспондент;
		лКонтрагент = Документ1С.Отправитель;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("СправочникСсылка.ИсходящиеДокументы") Тогда
		//лКонтрагент = Документ1С.Корреспондент;
		Для Каждого Получатель Из Документ1С.Получатели Цикл
			лРезультат.Контрагент = Получатель.Получатель;
			Прервать;
		КонецЦикла;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.СчетНаОплатуКлиенту") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ЗаказКлиента") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.СверкаВзаиморасчетов") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.РеализацияУслугПоПереработке") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;   
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.Доверенность") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.КорректировкаЗаказаПокупателя") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ИНАГРО_ВозвратБиологическихАктивовОтПокупателя") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ИНАГРО_ВозвратБиологическихАктивовПоставщику") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ИНАГРО_ПоступлениеБиологическихАктивов") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ИНАГРО_РеализацияБиологическихАктивов") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ИНАГРО_СчетНаОплатуПокупателюБиологическихАктивов") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ИНАГРО_СчетНаОплатуПоставщикаБиологическихАктивов") Тогда
		лКонтрагент = Документ1С.Контрагент;
		лРезультат.Контрагент = лКонтрагент;
	КонецЕсли;
	
	Если лРезультат.Контрагент <> Неопределено Тогда
		лРезультат.ЕДРПОУКонтрагента = лРезультат.Контрагент.КодПоЕДРПОУ;
		
		РеквизитКонтрагентаКодФилиала = Метаданные.Справочники.Контрагенты.Реквизиты.Найти("КодФилиала");		
		ЕстьРеквизитКодФилиала = ?(РеквизитКонтрагентаКодФилиала = Неопределено, Ложь, Истина);
		Если ЕстьРеквизитКодФилиала Тогда
			лРезультат.ФилиалКонтрагента = лРезультат.Контрагент.КодФилиала;
		КонецЕсли;
		
		РеквизитКонтрагентаНаименованиеПолное = Метаданные.Справочники.Контрагенты.Реквизиты.Найти("НаименованиеПолное");		
		ЕстьРеквизитНаименованиеПолное = ?(РеквизитКонтрагентаНаименованиеПолное = Неопределено, Ложь, Истина);
		Если ЕстьРеквизитНаименованиеПолное Тогда
			лРезультат.НаименованиеКонтрагента = лРезультат.Контрагент.НаименованиеПолное;
		Иначе
			лРезультат.НаименованиеКонтрагента = лРезультат.Контрагент.Наименование;
		КонецЕсли;
	КонецЕсли;
	
	Возврат лРезультат;
	
КонецФункции // ПолучитьДанныеКонтрагентаПоДокументу1С()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьТипДокументаПоВиду(ВидДокумента1С) Экспорт
	
	ИДКонфигурации = ИДКонфигурации();
	
	Если ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.НалоговаяНакладная Тогда
		Возврат Тип("ДокументСсылка.НалоговаяНакладная");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.Приложение2КНалоговойНакладной Тогда
		Возврат Тип("ДокументСсылка.Приложение2КНалоговойНакладной");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуПокупателю Тогда
		Возврат Тип("ДокументСсылка.СчетНаОплатуПокупателю");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуКлиенту Тогда
		Возврат Тип("ДокументСсылка.СчетНаОплатуКлиенту");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ЗаказПокупателя Тогда
		Возврат Тип("ДокументСсылка.ЗаказПокупателя");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ЗаказКлиента Тогда
		Возврат Тип("ДокументСсылка.ЗаказКлиента");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.РеализацияТоваровУслуг Тогда
		Возврат Тип("ДокументСсылка.РеализацияТоваровУслуг");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.РеализацияУслугПрочихАктивов Тогда
		Возврат Тип("ДокументСсылка.РеализацияУслугПрочихАктивов");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуПоставщика Тогда
		Возврат Тип("ДокументСсылка.СчетНаОплатуПоставщика");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ЗаказПоставщику Тогда
		Возврат Тип("ДокументСсылка.ЗаказПоставщику");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ПоступлениеТоваровУслуг Тогда
		Возврат Тип("ДокументСсылка.ПоступлениеТоваровУслуг");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.АктСверкиВзаиморасчетов Тогда
		Возврат Тип("ДокументСсылка.АктСверкиВзаиморасчетов");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.СверкаВзаиморасчетов Тогда
		Возврат Тип("ДокументСсылка.СверкаВзаиморасчетов");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.РегистрацияВходящегоНалоговогоДокумента Тогда
		Если ИДКонфигурации = "УТ" ИЛИ ИДКонфигурации = "УПП"  Тогда
			Возврат Тип("ДокументСсылка.ЗаписьКнигиПриобретения");
		Иначе
			Возврат Тип("ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента");
	    КонецЕсли;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ПриходнаяНакладная Тогда
		Возврат Тип("ДокументСсылка.ПриходнаяНакладная");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.РасходнаяНакладная Тогда
		Возврат Тип("ДокументСсылка.РасходнаяНакладная");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.СчетНаОплату Тогда
		Возврат Тип("ДокументСсылка.СчетНаОплату");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.АктВыполненныхРабот Тогда
		Возврат Тип("ДокументСсылка.АктВыполненныхРабот");		
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.РеализацияУслугПоПереработке Тогда
		Возврат Тип("ДокументСсылка.РеализацияУслугПоПереработке");		
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.АктОбОказанииПроизводственныхУслуг Тогда
		Возврат Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг");	
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.Доверенность Тогда
		Возврат Тип("ДокументСсылка.Доверенность");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ВозвратТоваровПоставщику Тогда
		Возврат Тип("ДокументСсылка.ВозвратТоваровПоставщику");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ВозвратТоваровОтПокупателя Тогда
		Возврат Тип("ДокументСсылка.ВозвратТоваровОтПокупателя");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.КорректировкаЗаказаПокупателя Тогда
		Возврат Тип("ДокументСсылка.КорректировкаЗаказаПокупателя");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.КорректировкаЗаказаПоставщику Тогда
		Возврат Тип("ДокументСсылка.КорректировкаЗаказаПоставщику");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ДоговорыКонтрагентов Тогда
		Возврат Тип("СправочникСсылка.ДоговорыКонтрагентов");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ВнутренниеДокументы Тогда
		Возврат Тип("СправочникСсылка.ВнутренниеДокументы");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ВходящиеДокументы Тогда
		Возврат Тип("СправочникСсылка.ВходящиеДокументы");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИсходящиеДокументы Тогда
		Возврат Тип("СправочникСсылка.ИсходящиеДокументы");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ПриобретениеТоваровУслуг Тогда
		Возврат Тип("ДокументСсылка.ПриобретениеТоваровУслуг");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_ВозвратБиологическихАктивовОтПокупателя Тогда
		Возврат Тип("ДокументСсылка.ИНАГРО_ВозвратБиологическихАктивовОтПокупателя");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_ВозвратБиологическихАктивовПоставщику Тогда
		Возврат Тип("ДокументСсылка.ИНАГРО_ВозвратБиологическихАктивовПоставщику");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_ПоступлениеБиологическихАктивов Тогда
		Возврат Тип("ДокументСсылка.ИНАГРО_ПоступлениеБиологическихАктивов");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_РеализацияБиологическихАктивов Тогда
		Возврат Тип("ДокументСсылка.ИНАГРО_РеализацияБиологическихАктивов");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_СчетНаОплатуПокупателюБиологическихАктивов Тогда
		Возврат Тип("ДокументСсылка.ИНАГРО_СчетНаОплатуПокупателюБиологическихАктивов");
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_СчетНаОплатуПоставщикаБиологическихАктивов Тогда
		Возврат Тип("ДокументСсылка.ИНАГРО_СчетНаОплатуПоставщикаБиологическихАктивов");
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции //ПолучитьТипДокументаПоВиду()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьВидДокумента1С(Документ1С) Экспорт
	ИДКонфигурации = ИДКонфигурации();
	ТипДокумента = ТипЗнч(Документ1С);
	Если ИДКонфигурации = "БП" 
		ИЛИ ИДКонфигурации = "БП20"
		ИЛИ ИДКонфигурации = "БП20ИНАГРО" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") или ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.НалоговаяНакладная;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.Приложение2КНалоговойНакладной;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.Приложение2КНалоговойНакладной;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПокупателю") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПокупателю") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуПокупателю;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РеализацияТоваровУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПоставщика") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПоставщика")Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуПоставщика;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ПоступлениеТоваровУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктСверкиВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктСверкиВзаиморасчетов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.АктСверкиВзаиморасчетов;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ДоговорыКонтрагентов;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента") ИЛИ ТипДокумента = Тип("ДокументОбъект.РегистрацияВходящегоНалоговогоДокумента") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РегистрацияВходящегоНалоговогоДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияУслугПоПереработке") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияУслугПоПереработке") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РеализацияУслугПоПереработке;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктОбОказанииПроизводственныхУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.АктОбОказанииПроизводственныхУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Доверенность") ИЛИ ТипДокумента = Тип("ДокументОбъект.Доверенность") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.Доверенность;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ВозвратТоваровПоставщику;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ВозвратТоваровОтПокупателя; 
		ИначеЕсли ИДКонфигурации = "БП20ИНАГРО" Тогда
			Если ТипДокумента = Тип("ДокументСсылка.ИНАГРО_ВозвратБиологическихАктивовОтПокупателя") или ТипДокумента = Тип("ДокументОбъект.ИНАГРО_ВозвратБиологическихАктивовОтПокупателя") Тогда
				Возврат Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_ВозвратБиологическихАктивовОтПокупателя;
			ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ИНАГРО_ВозвратБиологическихАктивовПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ИНАГРО_ВозвратБиологическихАктивовПоставщику") Тогда
				Возврат Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_ВозвратБиологическихАктивовПоставщику;
			ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ИНАГРО_ПоступлениеБиологическихАктивов") ИЛИ ТипДокумента = Тип("ДокументОбъект.ИНАГРО_ПоступлениеБиологическихАктивов") Тогда
				Возврат Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_ПоступлениеБиологическихАктивов;
			ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ИНАГРО_РеализацияБиологическихАктивов") ИЛИ ТипДокумента = Тип("ДокументОбъект.ИНАГРО_РеализацияБиологическихАктивов") Тогда
				Возврат Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_РеализацияБиологическихАктивов;
			ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ИНАГРО_СчетНаОплатуПокупателюБиологическихАктивов") ИЛИ ТипДокумента = Тип("ДокументОбъект.ИНАГРО_СчетНаОплатуПокупателюБиологическихАктивов") Тогда
				Возврат Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_СчетНаОплатуПокупателюБиологическихАктивов;
			ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ИНАГРО_СчетНаОплатуПоставщикаБиологическихАктивов") ИЛИ ТипДокумента = Тип("ДокументОбъект.ИНАГРО_СчетНаОплатуПоставщикаБиологическихАктивов") Тогда
				Возврат Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_СчетНаОплатуПоставщикаБиологическихАктивов;
			Иначе
				Возврат Неопределено;
			КонецЕсли;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "УТП" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") или ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.НалоговаяНакладная;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.Приложение2КНалоговойНакладной;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПокупателю") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПокупателю") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуПокупателю;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПокупателя")  Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ЗаказПокупателя;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РеализацияТоваровУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПоставщика") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПоставщика")Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуПоставщика;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ЗаказПоставщику;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ПоступлениеТоваровУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктСверкиВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктСверкиВзаиморасчетов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.АктСверкиВзаиморасчетов;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ДоговорыКонтрагентов;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента") ИЛИ ТипДокумента = Тип("ДокументОбъект.РегистрацияВходящегоНалоговогоДокумента") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РегистрацияВходящегоНалоговогоДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияУслугПоПереработке") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияУслугПоПереработке") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РеализацияУслугПоПереработке;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктОбОказанииПроизводственныхУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.АктОбОказанииПроизводственныхУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Доверенность") ИЛИ ТипДокумента = Тип("ДокументОбъект.Доверенность") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.Доверенность;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ВозвратТоваровПоставщику;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ВозвратТоваровОтПокупателя;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаЗаказаПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.КорректировкаЗаказаПокупателя") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.КорректировкаЗаказаПокупателя;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.КорректировкаЗаказаПоставщику") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.КорректировкаЗаказаПоставщику;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "УПП" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") или ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.НалоговаяНакладная;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.Приложение2КНалоговойНакладной;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПокупателю") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПокупателю") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуПокупателю;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПокупателя")  Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ЗаказПокупателя;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РеализацияТоваровУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПоставщика") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПоставщика")Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуПоставщика;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ЗаказПоставщику;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ПоступлениеТоваровУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктСверкиВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктСверкиВзаиморасчетов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.АктСверкиВзаиморасчетов;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ДоговорыКонтрагентов;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаписьКнигиПриобретения") ИЛИ ТипДокумента = ("ДокументОбъект.ЗаписьКнигиПриобретения") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РегистрацияВходящегоНалоговогоДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияУслугПоПереработке") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияУслугПоПереработке") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РеализацияУслугПоПереработке;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктОбОказанииПроизводственныхУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.АктОбОказанииПроизводственныхУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Доверенность") ИЛИ ТипДокумента = Тип("ДокументОбъект.Доверенность") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.Доверенность;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ВозвратТоваровПоставщику;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ВозвратТоваровОтПокупателя;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаЗаказаПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.КорректировкаЗаказаПокупателя") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.КорректировкаЗаказаПокупателя;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.КорректировкаЗаказаПоставщику") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.КорректировкаЗаказаПоставщику;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "УТ" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") или ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.НалоговаяНакладная;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.Приложение2КНалоговойНакладной;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПокупателю") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПокупателю") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуПокупателю;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПокупателя")  Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ЗаказПокупателя;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РеализацияТоваровУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПоставщика") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПоставщика")Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуПоставщика;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ЗаказПоставщику;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ПоступлениеТоваровУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктСверкиВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктСверкиВзаиморасчетов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.АктСверкиВзаиморасчетов;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ДоговорыКонтрагентов;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаписьКнигиПриобретения") ИЛИ ТипДокумента = ("ДокументОбъект.ЗаписьКнигиПриобретения") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РегистрацияВходящегоНалоговогоДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Доверенность") ИЛИ ТипДокумента = Тип("ДокументОбъект.Доверенность") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.Доверенность;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ВозвратТоваровПоставщику;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ВозвратТоваровОтПокупателя;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаЗаказаПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.КорректировкаЗаказаПокупателя") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.КорректировкаЗаказаПокупателя;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.КорректировкаЗаказаПоставщику") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.КорректировкаЗаказаПоставщику;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "BASУТ" ИЛИ ИДКонфигурации = "BASКУП" ИЛИ ИДКонфигурации = "BASERP" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") или ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.НалоговаяНакладная;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.Приложение2КНалоговойНакладной;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуКлиенту") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуКлиенту") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуКлиенту;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказКлиента") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказКлиента")  Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ЗаказКлиента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РеализацияТоваровУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ЗаказПоставщику;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ПоступлениеТоваровУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СверкаВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.СверкаВзаиморасчетов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СверкаВзаиморасчетов;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента") ИЛИ ТипДокумента = ("ДокументОбъект.РегистрацияВходящегоНалоговогоДокумента") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РегистрацияВходящегоНалоговогоДокумента;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ДоговорыКонтрагентов;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "BASERP25" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") или ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.НалоговаяНакладная;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.Приложение2КНалоговойНакладной;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуКлиенту") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуКлиенту") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуКлиенту;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказКлиента") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказКлиента")  Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ЗаказКлиента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РеализацияТоваровУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияУслугПрочихАктивов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РеализацияУслугПрочихАктивов;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ЗаказПоставщику;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПриобретениеТоваровУслуг") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ПриобретениеТоваровУслуг;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СверкаВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.СверкаВзаиморасчетов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СверкаВзаиморасчетов;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента") ИЛИ ТипДокумента = ("ДокументОбъект.РегистрацияВходящегоНалоговогоДокумента") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РегистрацияВходящегоНалоговогоДокумента;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ДоговорыКонтрагентов;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "BASДокументооборотКОРП" Тогда
		Если ТипДокумента = Тип("СправочникСсылка.ВнутренниеДокументы") ИЛИ ТипДокумента = Тип("СправочникОбъект.ВнутренниеДокументы") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ВнутренниеДокументы;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ВходящиеДокументы") ИЛИ ТипДокумента = Тип("СправочникОбъект.ВходящиеДокументы") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ВходящиеДокументы;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ИсходящиеДокументы") ИЛИ ТипДокумента = Тип("СправочникОбъект.ИсходящиеДокументы") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ИсходящиеДокументы;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "ДокументооборотДляУкраиныКОРП" Тогда
		Если ТипДокумента = Тип("СправочникСсылка.ВнутренниеДокументы") ИЛИ ТипДокумента = Тип("СправочникОбъект.ВнутренниеДокументы") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ВнутренниеДокументы;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ВходящиеДокументы") ИЛИ ТипДокумента = Тип("СправочникОбъект.ВходящиеДокументы") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ВходящиеДокументы;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ИсходящиеДокументы") ИЛИ ТипДокумента = Тип("СправочникОбъект.ИсходящиеДокументы") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ИсходящиеДокументы;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "УНФ" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") или ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.НалоговаяНакладная;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.Приложение2КНалоговойНакладной;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплату") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплату") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СчетНаОплату;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПокупателя")  Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ЗаказПокупателя;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РасходнаяНакладная") ИЛИ ТипДокумента = Тип("ДокументОбъект.РасходнаяНакладная") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РасходнаяНакладная;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктВыполненныхРабот") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктВыполненныхРабот") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.АктВыполненныхРабот;	
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПоставщика") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПоставщика")Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуПоставщика;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ЗаказПоставщику;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПриходнаяНакладная") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПриходнаяНакладная") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ПриходнаяНакладная;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.ДоговорыКонтрагентов;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента") ИЛИ ТипДокумента = Тип("ДокументОбъект.РегистрацияВходящегоНалоговогоДокумента") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.РегистрацияВходящегоНалоговогоДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СверкаВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.СверкаВзаиморасчетов") Тогда
			Возврат Перечисления.скEDI_ВидыДокументов1С.СверкаВзаиморасчетов;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции // ПолучитьВидДокумента1С()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьИнформациюОНеобходимостиПроведенияДокумента1С(Документ1С) Экспорт
	Перем лНеобходимоПроведениеДокумента, лДокументПроведен;
	
	ТипДокумента = ТипЗнч(Документ1С);
	лРезультат = Новый Структура();
	
	Если ТипДокумента = ТипЧерезПопытку("ДокументСсылка.НалоговаяНакладная") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.Приложение2КНалоговойНакладной") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.Приложение2КНалоговойНакладной") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.СчетНаОплатуПокупателю") Тогда
		лНеобходимоПроведениеДокумента = Ложь;
		лДокументПроведен              = Ложь;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.СчетНаОплатуПоставщика") Тогда
		лНеобходимоПроведениеДокумента = Ложь;
		лДокументПроведен              = Ложь;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.АктСверкиВзаиморасчетов") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		лНеобходимоПроведениеДокумента = Ложь;
		лДокументПроведен              = Ложь;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ПриходнаяНакладная") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.РасходнаяНакладная") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.СчетНаОплату") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.АктВыполненныхРабот") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.СчетНаОплатуКлиенту") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ЗаказКлиента") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.СверкаВзаиморасчетов") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.РеализацияУслугПоПереработке") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.Доверенность") Тогда
		лНеобходимоПроведениеДокумента = Ложь;
		лДокументПроведен              = Ложь;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.КорректировкаЗаказаПокупателя") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.КорректировкаЗаказаПоставщику") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ИНАГРО_ВозвратБиологическихАктивовОтПокупателя") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ИНАГРО_ВозвратБиологическихАктивовПоставщику") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ИНАГРО_ПоступлениеБиологическихАктивов") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ИНАГРО_РеализацияБиологическихАктивов") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ИНАГРО_СчетНаОплатуПокупателюБиологическихАктивов") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.ИНАГРО_СчетНаОплатуПоставщикаБиологическихАктивов") Тогда
		лНеобходимоПроведениеДокумента = Истина;
		лДокументПроведен              = Документ1С.Проведен;
	Иначе
		лНеобходимоПроведениеДокумента = Ложь;
		лДокументПроведен              = Ложь;
	КонецЕсли;
	
	лРезультат.Вставить("НеобходимоПроведение", лНеобходимоПроведениеДокумента);
	лРезультат.Вставить("Проведен",             лДокументПроведен);
	
	Возврат лРезультат;
	
КонецФункции // ПолучитьИнформациюОНеобходимостиПроведенияДокумента1С()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьМетаданныеДокументаПоВиду(ВидДокумента1С) Экспорт
	ИДКонфигурации = ИДКонфигурации();
	
	Если ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.НалоговаяНакладная Тогда
		Возврат Метаданные.Документы.НалоговаяНакладная;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.Приложение2КНалоговойНакладной Тогда
		Возврат Метаданные.Документы.Приложение2КНалоговойНакладной;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуПокупателю Тогда
		Возврат Метаданные.Документы.СчетНаОплатуПокупателю;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуКлиенту Тогда
		Возврат Метаданные.Документы.СчетНаОплатуКлиенту;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ЗаказПокупателя Тогда
		Возврат Метаданные.Документы.ЗаказПокупателя;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ЗаказКлиента Тогда
		Возврат Метаданные.Документы.ЗаказКлиента;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.РеализацияТоваровУслуг Тогда
		Возврат Метаданные.Документы.РеализацияТоваровУслуг;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.РеализацияУслугПрочихАктивов Тогда
		Возврат Метаданные.Документы.РеализацияУслугПрочихАктивов;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.СчетНаОплатуПоставщика Тогда
		Возврат Метаданные.Документы.СчетНаОплатуПоставщика;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ЗаказПоставщику Тогда
		Возврат Метаданные.Документы.ЗаказПоставщику;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ПоступлениеТоваровУслуг Тогда
		Возврат Метаданные.Документы.ПоступлениеТоваровУслуг;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.АктСверкиВзаиморасчетов Тогда
		Возврат Метаданные.Документы.АктСверкиВзаиморасчетов;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.СверкаВзаиморасчетов Тогда
		Возврат Метаданные.Документы.СверкаВзаиморасчетов;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.РегистрацияВходящегоНалоговогоДокумента Тогда
		Если ИДКонфигурации = "УТ" ИЛИ ИДКонфигурации = "УПП"  Тогда
			Возврат Метаданные.Документы.ЗаписьКнигиПриобретения;
		Иначе
			Возврат Метаданные.Документы.РегистрацияВходящегоНалоговогоДокумента;
	    КонецЕсли;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.СчетНаОплату Тогда
		Возврат Метаданные.Документы.СчетНаОплату;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ПриходнаяНакладная Тогда
		Возврат Метаданные.Документы.ПриходнаяНакладная;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.РасходнаяНакладная Тогда
		Возврат Метаданные.Документы.РасходнаяНакладная;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.АктВыполненныхРабот Тогда
		Возврат Метаданные.Документы.АктВыполненныхРабот;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.РеализацияУслугПоПереработке Тогда
		Возврат Метаданные.Документы.РеализацияУслугПоПереработке;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.АктОбОказанииПроизводственныхУслуг Тогда
		Возврат Метаданные.Документы.АктОбОказанииПроизводственныхУслуг;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.Доверенность Тогда
		Возврат Метаданные.Документы.Доверенность;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ВозвратТоваровПоставщику Тогда
		Возврат Метаданные.Документы.ВозвратТоваровПоставщику;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ВозвратТоваровОтПокупателя Тогда
		Возврат Метаданные.Документы.ВозвратТоваровОтПокупателя;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.КорректировкаЗаказаПокупателя Тогда
		Возврат Метаданные.Документы.КорректировкаЗаказаПокупателя;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.КорректировкаЗаказаПоставщику Тогда
		Возврат Метаданные.Документы.КорректировкаЗаказаПоставщику;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ДоговорыКонтрагентов Тогда
		Возврат Метаданные.Справочники.ДоговорыКонтрагентов;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ВнутренниеДокументы Тогда
		Возврат Метаданные.Справочники.ВнутренниеДокументы;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ВходящиеДокументы Тогда
		Возврат Метаданные.Справочники.ВходящиеДокументы;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИсходящиеДокументы Тогда
		Возврат Метаданные.Справочники.ИсходящиеДокументы;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_ВозвратБиологическихАктивовОтПокупателя Тогда
		Возврат Метаданные.Документы.ИНАГРО_ВозвратБиологическихАктивовОтПокупателя;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_ВозвратБиологическихАктивовПоставщику Тогда
		Возврат Метаданные.Документы.ИНАГРО_ВозвратБиологическихАктивовПоставщику;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_ПоступлениеБиологическихАктивов Тогда
		Возврат Метаданные.Документы.ИНАГРО_ПоступлениеБиологическихАктивов;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_РеализацияБиологическихАктивов Тогда
		Возврат Метаданные.Документы.ИНАГРО_РеализацияБиологическихАктивов;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_СчетНаОплатуПокупателюБиологическихАктивов Тогда
		Возврат Метаданные.Документы.ИНАГРО_СчетНаОплатуПокупателюБиологическихАктивов;
	ИначеЕсли ВидДокумента1С = Перечисления.скEDI_ВидыДокументов1С.ИНАГРО_СчетНаОплатуПоставщикаБиологическихАктивов Тогда
		Возврат Метаданные.Документы.ИНАГРО_СчетНаОплатуПоставщикаБиологическихАктивов;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции //ПолучитьТипДокументаПоВиду()

Функция ПолучитьИнформациюДляРегистрацииДокумента(Документ1С) Экспорт
	Результат = Новый Структура("ВидДокумента1С,Организация,Контрагент,ЕстьТовары,ЕстьУслуги,ОтраженВРег,ОтраженВУпр,ПометкаУдаления,Проведен,МожетБытьПроведен,РегистрируетсяВЕРННПокупателем,Дата,Номер,Комментарий,ДоговорКонтрагента,СуммаДокумента,СуммаНДСДокумента,СуммаБезНДСДокумента,СуммаУслуги,СуммаНДСУслуги,СуммаБезНДСУслуги,СуммаТовары,СуммаНДСТовары,СуммаБезНДСТовары",
								ПолучитьВидДокумента1С(Документ1С), , , Ложь, Ложь, Истина, Истина, Ложь, Ложь, Ложь, Ложь, Дата(1, 1, 1, 0, 0, 0), "", "", , 0, 0, 0, 0, 0, 0, 0, 0, 0);
	ИДКонфигурации = ИДКонфигурации();
	ТипДокумента = ТипЗнч(Документ1С);
	МетаданныеДокумента1С = Документ1С.Метаданные();
	Если МетаданныеДокумента1С.Реквизиты.Найти("ОтражатьВБухгалтерскомУчете") <> Неопределено Тогда
		Результат.ОтраженВРег = Документ1С.ОтражатьВБухгалтерскомУчете;
	КонецЕсли;
	Если МетаданныеДокумента1С.Реквизиты.Найти("ОтражатьВУправленческомУчете") <> Неопределено Тогда
		Результат.ОтраженВУпр = Документ1С.ОтражатьВУправленческомУчете;
	КонецЕсли;
	Результат.ПометкаУдаления = Документ1С.ПометкаУдаления;
	Если ИДКонфигурации = "БП"
		ИЛИ ИДКонфигурации = "БП20"
		ИЛИ ИДКонфигурации = "БП20ИНАГРО" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") ИЛИ ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;       
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.РегистрируетсяВЕРННПокупателем = Документ1С.РегистрируетсяВЕРННПокупателем;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("ИзменениеСуммыНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("ИзменениеСуммыНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("ИзменениеСуммы");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("ИзменениеСуммы") - Документ1С.Товары.Итог("ИзменениеСуммыНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы") - Документ1С.Услуги.Итог("ИзменениеСуммыНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("ИзменениеСуммы") + Документ1С.Товары.Итог("ИзменениеСуммыНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("ИзменениеСуммы");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы") + Документ1С.Услуги.Итог("ИзменениеСуммыНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы");
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента") ИЛИ ТипДокумента = Тип("ДокументОбъект.РегистрацияВходящегоНалоговогоДокумента") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерВходящегоДокумента;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Результат.ЕстьУслуги = Ложь;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = 0;
			Результат.СуммаТовары = Документ1С.Товары.Итог("СуммаВзаиморасчетов");
			Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
			Результат.СуммаУслуги = 0;
			Результат.СуммаБезНДСУслуги = 0;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПокупателю") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПокупателю") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПоставщика") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПоставщика") Тогда
			Попытка
				Результат.Дата = Документ1С.ДатаВходящегоДокумента;
			Исключение
				Результат.Дата = Документ1С.Дата;
			КонецПопытки;
			Результат.Номер = Документ1С.НомерВходящегоДокумента;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерВходящегоДокумента;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС")+Документ1С.Оборудование.Итог("СуммаНДС")+Документ1С.ОбъектыСтроительства.Итог("СуммаНДС")+Документ1С.БланкиСтрогогоУчета.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма")+Документ1С.ОбъектыСтроительства.Итог("Сумма")+Документ1С.БланкиСтрогогоУчета.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма")+Документ1С.ОбъектыСтроительства.Итог("Сумма")+Документ1С.БланкиСтрогогоУчета.Итог("Сумма");
				Результат.СуммаТовары = Результат.СуммаБезНДСТовары + Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктСверкиВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктСверкиВзаиморасчетов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Макс((Документ1С.ОстатокНаНачало + Документ1С.ПоДаннымОрганизации.Итог("Дебет") - Документ1С.ПоДаннымОрганизации.Итог("Кредит")), 
												-(Документ1С.ОстатокНаНачало + Документ1С.ПоДаннымОрганизации.Итог("Дебет") - Документ1С.ПоДаннымОрганизации.Итог("Кредит")));
			Результат.СуммаНДСДокумента = 0;
			Результат.СуммаБезНДСДокумента = 0;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.СуммаТовары = 0;
			Результат.СуммаБезНДСТовары = 0;
			Результат.СуммаНДСТовары = 0;
			Результат.СуммаУслуги = 0;
			Результат.СуммаБезНДСУслуги = 0;
			Результат.СуммаНДСУслуги = 0;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктОбОказанииПроизводственныхУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.ЕстьТовары = Ложь;
			Результат.ЕстьУслуги = Истина;
			
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Результат.СуммаНДСДокумента = Результат.СуммаНДСУслуги;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаУслуги = Результат.СуммаДокумента;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.СуммаБезНДСУслуги = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.СуммаТовары = 0;
			Результат.СуммаНДСТовары = 0;
			Результат.СуммаБезНДСТовары = 0;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияУслугПоПереработке") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияУслугПоПереработке") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.ЕстьТовары = Ложь;
			Результат.ЕстьУслуги = Истина;
			
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Результат.СуммаНДСДокумента = Результат.СуммаНДСУслуги;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаУслуги = Результат.СуммаДокумента;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.СуммаБезНДСУслуги = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.СуммаТовары = 0;
			Результат.СуммаНДСТовары = 0;
			Результат.СуммаБезНДСТовары = 0;
			
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Доверенность") ИЛИ ТипДокумента = Тип("ДокументОбъект.Доверенность") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
					
	    ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
	
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = СокрЛП(Документ1С.Номер);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Владелец;
			Результат.ДоговорКонтрагента = Документ1С;
			//Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		КонецЕсли;
		
		Если ИДКонфигурации = "БП20ИНАГРО" Тогда
			Если ТипДокумента = Тип("ДокументСсылка.ИНАГРО_СчетНаОплатуПокупателюБиологическихАктивов") ИЛИ ТипДокумента = Тип("ДокументОбъект.ИНАГРО_СчетНаОплатуПокупателюБиологическихАктивов") Тогда
				Результат.Дата = Документ1С.Дата;
				Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
				Результат.Комментарий = Документ1С.Комментарий;
				Результат.Организация = Документ1С.Организация;
				Договор = Документ1С.ДоговорКонтрагента;
				Результат.Контрагент = Документ1С.Контрагент;
				Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
				Результат.СуммаДокумента = Документ1С.СуммаДокумента;
				Результат.Проведен = Документ1С.Проведен;
				Результат.МожетБытьПроведен = Истина;
				Если Документ1С.Товары.Количество() > 0 Тогда
					Результат.ЕстьТовары = Истина;
				КонецЕсли;
				Если Документ1С.Услуги.Количество() > 0 Тогда
					Результат.ЕстьУслуги = Истина;
				КонецЕсли;
				Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
				Если Документ1С.СуммаВключаетНДС Тогда
					Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
					Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
					Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
					Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
				Иначе
					Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
					Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
					Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
					Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
				КонецЕсли;
				Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ИНАГРО_РеализацияБиологическихАктивов") ИЛИ ТипДокумента = Тип("ДокументОбъект.ИНАГРО_РеализацияБиологическихАктивов") Тогда
				Результат.Дата = Документ1С.Дата;
				Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
				Результат.Комментарий = Документ1С.Комментарий;
				Результат.Организация = Документ1С.Организация;
				Договор = Документ1С.ДоговорКонтрагента;
				Результат.Контрагент = Документ1С.Контрагент;
				Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
				Результат.СуммаДокумента = Документ1С.СуммаДокумента;
				Результат.Проведен = Документ1С.Проведен;
				Результат.МожетБытьПроведен = Истина;
				Если Документ1С.Товары.Количество() > 0 Тогда
					Результат.ЕстьТовары = Истина;
				КонецЕсли;
				Если Документ1С.Услуги.Количество() > 0 Тогда
					Результат.ЕстьУслуги = Истина;
				КонецЕсли;
				Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
				Если Документ1С.СуммаВключаетНДС Тогда
					Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
					Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
					Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
					Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
				Иначе
					Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
					Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
					Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
					Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
				КонецЕсли;
				Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ИНАГРО_СчетНаОплатуПоставщикаБиологическихАктивов") ИЛИ ТипДокумента = Тип("ДокументОбъект.ИНАГРО_СчетНаОплатуПоставщикаБиологическихАктивов") Тогда
				Попытка
					Результат.Дата = Документ1С.ДатаВходящегоДокумента;
				Исключение
					Результат.Дата = Документ1С.Дата;
				КонецПопытки;
				Результат.Номер = Документ1С.НомерВходящегоДокумента;
				Результат.Комментарий = Документ1С.Комментарий;
				Результат.Организация = Документ1С.Организация;
				Договор = Документ1С.ДоговорКонтрагента;
				Результат.Контрагент = Документ1С.Контрагент;
				Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
				Результат.СуммаДокумента = Документ1С.СуммаДокумента;
				Результат.Проведен = Документ1С.Проведен;
				Результат.МожетБытьПроведен = Истина;
				Если Документ1С.Товары.Количество() > 0 Тогда
					Результат.ЕстьТовары = Истина;
				КонецЕсли;
				Если Документ1С.Услуги.Количество() > 0 Тогда
					Результат.ЕстьУслуги = Истина;
				КонецЕсли;
				Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
				Если Документ1С.СуммаВключаетНДС Тогда
					Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
					Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
					Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
					Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
				Иначе
					Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
					Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
					Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
					Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
				КонецЕсли;
				Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ИНАГРО_ПоступлениеБиологическихАктивов") ИЛИ ТипДокумента = Тип("ДокументОбъект.ИНАГРО_ПоступлениеБиологическихАктивов") Тогда
				Результат.Дата = Документ1С.Дата;
				Результат.Номер = Документ1С.НомерВходящегоДокумента;
				Результат.Комментарий = Документ1С.Комментарий;
				Результат.Организация = Документ1С.Организация;
				Договор = Документ1С.ДоговорКонтрагента;
				Результат.Контрагент = Документ1С.Контрагент;
				Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
				Результат.СуммаДокумента = Документ1С.СуммаДокумента;
				Результат.Проведен = Документ1С.Проведен;
				Результат.МожетБытьПроведен = Истина;
				Если Документ1С.Товары.Количество() > 0 Тогда
					Результат.ЕстьТовары = Истина;
				КонецЕсли;
				Если Документ1С.Услуги.Количество() > 0 Тогда
					Результат.ЕстьУслуги = Истина;
				КонецЕсли;
				Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
				Если Документ1С.СуммаВключаетНДС Тогда
					Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
					Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;
					Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
					Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
				Иначе
					Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
					Результат.СуммаТовары = Результат.СуммаБезНДСТовары + Результат.СуммаНДСТовары;
					Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
					Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
				КонецЕсли;
				Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		    ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ИНАГРО_ВозвратБиологическихАктивовПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ИНАГРО_ВозвратБиологическихАктивовПоставщику") Тогда
				Результат.Дата = Документ1С.Дата;
				Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
				Результат.Комментарий = Документ1С.Комментарий;
				Результат.Организация = Документ1С.Организация;
				Договор = Документ1С.ДоговорКонтрагента;
				Результат.Контрагент = Документ1С.Контрагент;
				Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
				Результат.СуммаДокумента = Документ1С.СуммаДокумента;
				Результат.Проведен = Документ1С.Проведен;
				Результат.МожетБытьПроведен = Истина;
				Если Документ1С.Товары.Количество() > 0 Тогда
					Результат.ЕстьТовары = Истина;
				КонецЕсли;
				Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
				Если Документ1С.СуммаВключаетНДС Тогда
					Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
					Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Иначе
					Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
					Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				КонецЕсли;
				Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
				
			ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ИНАГРО_ВозвратБиологическихАктивовОтПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ИНАГРО_ВозвратБиологическихАктивовОтПокупателя") Тогда
				Результат.Дата = Документ1С.Дата;
				Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
				Результат.Комментарий = Документ1С.Комментарий;
				Результат.Организация = Документ1С.Организация;
				Договор = Документ1С.ДоговорКонтрагента;
				Результат.Контрагент = Документ1С.Контрагент;
				Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
				Результат.СуммаДокумента = Документ1С.СуммаДокумента;
				Результат.Проведен = Документ1С.Проведен;
				Результат.МожетБытьПроведен = Истина;
				Если Документ1С.Товары.Количество() > 0 Тогда
					Результат.ЕстьТовары = Истина;
				КонецЕсли;
				Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
				Если Документ1С.СуммаВключаетНДС Тогда
					Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
					Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Иначе
					Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
					Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				КонецЕсли;
				Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "УТП" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") ИЛИ ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.РегистрируетсяВЕРННПокупателем = Документ1С.РегистрируетсяВЕРННПокупателем;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("ИзменениеСуммыНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("ИзменениеСуммыНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("ИзменениеСуммы");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("ИзменениеСуммы") - Документ1С.Товары.Итог("ИзменениеСуммыНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы") - Документ1С.Услуги.Итог("ИзменениеСуммыНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("ИзменениеСуммы") + Документ1С.Товары.Итог("ИзменениеСуммыНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("ИзменениеСуммы");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы") + Документ1С.Услуги.Итог("ИзменениеСуммыНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы");
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента") ИЛИ ТипДокумента = Тип("ДокументОбъект.РегистрацияВходящегоНалоговогоДокумента") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерВходящегоДокумента;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Результат.ЕстьУслуги = Ложь;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = 0;
			Результат.СуммаТовары = Документ1С.Товары.Итог("СуммаВзаиморасчетов");
			Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
			Результат.СуммаУслуги = 0;
			Результат.СуммаБезНДСУслуги = 0;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПокупателю") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПокупателю") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПокупателя") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПоставщика") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПоставщика") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = СокрЛП(Документ1С.НомерВходящегоДокумента);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС")+Документ1С.Оборудование.Итог("СуммаНДС")+Документ1С.НематериальныеАктивы.Итог("СуммаНДС")+Документ1С.БланкиСтрогогоУчета.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма")+Документ1С.НематериальныеАктивы.Итог("Сумма")+Документ1С.БланкиСтрогогоУчета.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма")+Документ1С.НематериальныеАктивы.Итог("Сумма")+Документ1С.БланкиСтрогогоУчета.Итог("Сумма");
				Результат.СуммаТовары = Результат.СуммаБезНДСТовары + Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = "";//СокрЛП(Документ1С.НомерВходящегоДокумента);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС")+Документ1С.Оборудование.Итог("СуммаНДС");//+Документ1С.Материалы.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма");//+Документ1С.Материалы.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма");//+Документ1С.Материалы.Итог("Сумма");
				Результат.СуммаТовары = Результат.СуммаБезНДСТовары + Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = СокрЛП(Документ1С.НомерВходящегоДокумента);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС")+Документ1С.Оборудование.Итог("СуммаНДС")+Документ1С.ОбъектыСтроительства.Итог("СуммаНДС")+Документ1С.БланкиСтрогогоУчета.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма")+Документ1С.ОбъектыСтроительства.Итог("Сумма")+Документ1С.БланкиСтрогогоУчета.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма")+Документ1С.ОбъектыСтроительства.Итог("Сумма")+Документ1С.БланкиСтрогогоУчета.Итог("Сумма");
				Результат.СуммаТовары = Результат.СуммаБезНДСТовары + Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктСверкиВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктСверкиВзаиморасчетов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Макс((Документ1С.ОстатокНаНачало + Документ1С.ПоДаннымОрганизации.Итог("Дебет") - Документ1С.ПоДаннымОрганизации.Итог("Кредит")), 
												-(Документ1С.ОстатокНаНачало + Документ1С.ПоДаннымОрганизации.Итог("Дебет") - Документ1С.ПоДаннымОрганизации.Итог("Кредит")));
			Результат.СуммаНДСДокумента = 0;
			Результат.СуммаБезНДСДокумента = 0;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.СуммаТовары = 0;
			Результат.СуммаБезНДСТовары = 0;
			Результат.СуммаНДСТовары = 0;
			Результат.СуммаУслуги = 0;
			Результат.СуммаБезНДСУслуги = 0;
			Результат.СуммаНДСУслуги = 0;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктОбОказанииПроизводственныхУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.ЕстьТовары = Ложь;
			Результат.ЕстьУслуги = Истина;
			
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Результат.СуммаНДСДокумента = Результат.СуммаНДСУслуги;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаУслуги = Результат.СуммаДокумента;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.СуммаБезНДСУслуги = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.СуммаТовары = 0;
			Результат.СуммаНДСТовары = 0;
			Результат.СуммаБезНДСТовары = 0;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияУслугПоПереработке") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияУслугПоПереработке") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.ЕстьТовары = Ложь;
			Результат.ЕстьУслуги = Истина;
			
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Результат.СуммаНДСДокумента = Результат.СуммаНДСУслуги;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаУслуги = Результат.СуммаДокумента;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.СуммаБезНДСУслуги = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.СуммаТовары = 0;
			Результат.СуммаНДСТовары = 0;
			Результат.СуммаБезНДСТовары = 0;
			
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Доверенность") ИЛИ ТипДокумента = Тип("ДокументОбъект.Доверенность") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
					
	    ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
	
	    ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаЗаказаПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.КорректировкаЗаказаПокупателя") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ЗаказПокупателя.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			
 		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.КорректировкаЗаказаПоставщику") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ЗаказПоставщику.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;

		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = СокрЛП(Документ1С.Номер);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Владелец;
			Результат.ДоговорКонтрагента = Документ1С;
			//Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "УПП" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") ИЛИ ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.РегистрируетсяВЕРННПокупателем = Документ1С.РегистрируетсяВЕРННПокупателем;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("ИзменениеСуммыНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("ИзменениеСуммыНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("ИзменениеСуммы");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("ИзменениеСуммы") - Документ1С.Товары.Итог("ИзменениеСуммыНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы") - Документ1С.Услуги.Итог("ИзменениеСуммыНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("ИзменениеСуммы") + Документ1С.Товары.Итог("ИзменениеСуммыНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("ИзменениеСуммы");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы") + Документ1С.Услуги.Итог("ИзменениеСуммыНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы");
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаписьКнигиПриобретения") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаписьКнигиПриобретения") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерВходящегоДокумента;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента + Документ1С.СуммаНДСДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Результат.ЕстьУслуги = Ложь;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = 0;
			Результат.СуммаТовары = Документ1С.Товары.Итог("СуммаВзаиморасчетов");
			Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
			Результат.СуммаУслуги = 0;
			Результат.СуммаБезНДСУслуги = 0;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПокупателю") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПокупателю") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПокупателя") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПоставщика") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПоставщика") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = СокрЛП(Документ1С.НомерВходящегоДокумента);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС")+Документ1С.Оборудование.Итог("СуммаНДС")+Документ1С.НематериальныеАктивы.Итог("СуммаНДС")+Документ1С.БланкиСтрогогоУчета.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма")+Документ1С.НематериальныеАктивы.Итог("Сумма")+Документ1С.БланкиСтрогогоУчета.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма")+Документ1С.НематериальныеАктивы.Итог("Сумма")+Документ1С.БланкиСтрогогоУчета.Итог("Сумма");
				Результат.СуммаТовары = Результат.СуммаБезНДСТовары + Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = "";//СокрЛП(Документ1С.НомерВходящегоДокумента);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС")+Документ1С.Оборудование.Итог("СуммаНДС");//+Документ1С.Материалы.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма");//+Документ1С.Материалы.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма");//+Документ1С.Материалы.Итог("Сумма");
				Результат.СуммаТовары = Результат.СуммаБезНДСТовары + Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = СокрЛП(Документ1С.НомерВходящегоДокумента);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС")+Документ1С.Оборудование.Итог("СуммаНДС")+Документ1С.ОбъектыСтроительства.Итог("СуммаНДС")+Документ1С.БланкиСтрогогоУчета.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма")+Документ1С.ОбъектыСтроительства.Итог("Сумма")+Документ1С.БланкиСтрогогоУчета.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма")+Документ1С.Оборудование.Итог("Сумма")+Документ1С.ОбъектыСтроительства.Итог("Сумма")+Документ1С.БланкиСтрогогоУчета.Итог("Сумма");
				Результат.СуммаТовары = Результат.СуммаБезНДСТовары + Результат.СуммаНДСТовары;
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктСверкиВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктСверкиВзаиморасчетов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Макс((Документ1С.ОстатокНаНачало + Документ1С.ПоДаннымОрганизации.Итог("Дебет") - Документ1С.ПоДаннымОрганизации.Итог("Кредит")), 
												-(Документ1С.ОстатокНаНачало + Документ1С.ПоДаннымОрганизации.Итог("Дебет") - Документ1С.ПоДаннымОрганизации.Итог("Кредит")));
			Результат.СуммаНДСДокумента = 0;
			Результат.СуммаБезНДСДокумента = 0;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
			Результат.СуммаТовары = 0;
			Результат.СуммаБезНДСТовары = 0;
			Результат.СуммаНДСТовары = 0;
			Результат.СуммаУслуги = 0;
			Результат.СуммаБезНДСУслуги = 0;
			Результат.СуммаНДСУслуги = 0;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктОбОказанииПроизводственныхУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.ЕстьТовары = Ложь;
			Результат.ЕстьУслуги = Истина;
			
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Результат.СуммаНДСДокумента = Результат.СуммаНДСУслуги;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаУслуги = Результат.СуммаДокумента;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.СуммаБезНДСУслуги = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.СуммаТовары = 0;
			Результат.СуммаНДСТовары = 0;
			Результат.СуммаБезНДСТовары = 0;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияУслугПоПереработке") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияУслугПоПереработке") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Продукция.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Продукция.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Продукция.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Продукция.Итог("Сумма") - Документ1С.Продукция.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Продукция.Итог("Сумма") + Документ1С.Продукция.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Продукция.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
					
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Доверенность") ИЛИ ТипДокумента = Тип("ДокументОбъект.Доверенность") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
					
	    ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
	
	    ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаЗаказаПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.КорректировкаЗаказаПокупателя") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ЗаказПокупателя.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			
 		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.КорректировкаЗаказаПоставщику") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ЗаказПоставщику.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;

			
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = СокрЛП(Документ1С.Номер);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Владелец;
			Результат.ДоговорКонтрагента = Документ1С;
			//Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "УТ" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") ИЛИ ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.РегистрируетсяВЕРННПокупателем = Документ1С.РегистрируетсяВЕРННПокупателем;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("ИзменениеСуммыНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("ИзменениеСуммыНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("ИзменениеСуммы");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("ИзменениеСуммы") - Документ1С.Товары.Итог("ИзменениеСуммыНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы") - Документ1С.Услуги.Итог("ИзменениеСуммыНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("ИзменениеСуммы") + Документ1С.Товары.Итог("ИзменениеСуммыНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("ИзменениеСуммы");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы") + Документ1С.Услуги.Итог("ИзменениеСуммыНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("ИзменениеСуммы");
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаписьКнигиПриобретения") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаписьКнигиПриобретения") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерВходящегоДокумента;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Результат.ЕстьУслуги = Ложь;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = 0;
			Результат.СуммаТовары = Документ1С.Товары.Итог("СуммаВзаиморасчетов");
			Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
			Результат.СуммаУслуги = 0;
			Результат.СуммаБезНДСУслуги = 0;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПокупателю") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПокупателю") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПокупателя") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПоставщика") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПоставщика") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = СокрЛП(Документ1С.НомерВходящегоДокумента);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = "";//СокрЛП(Документ1С.НомерВходящегоДокумента);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = СокрЛП(Документ1С.НомерВходящегоДокумента);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктСверкиВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктСверкиВзаиморасчетов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Макс((Документ1С.ОстатокНаНачало + Документ1С.ПоДаннымОрганизации.Итог("Дебет") - Документ1С.ПоДаннымОрганизации.Итог("Кредит")), 
												-(Документ1С.ОстатокНаНачало + Документ1С.ПоДаннымОрганизации.Итог("Дебет") - Документ1С.ПоДаннымОрганизации.Итог("Кредит")));
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;									
			Результат.СуммаТовары = 0;
			Результат.СуммаУслуги = 0;
				
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Доверенность") ИЛИ ТипДокумента = Тип("ДокументОбъект.Доверенность") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
					
	    ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.ДоговорКонтрагента;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
	
	    ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаЗаказаПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.КорректировкаЗаказаПокупателя") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ЗаказПокупателя.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			
 		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаЗаказаПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.КорректировкаЗаказаПоставщику") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ОбщегоНазначения.ПолучитьНомерНаПечать(Документ1С))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.ЗаказПоставщику.ДоговорКонтрагента;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Если Документ1С.Товары.Количество() > 0 Тогда
				Результат.ЕстьТовары = Истина;
			КонецЕсли;
			Если Документ1С.Услуги.Количество() > 0 Тогда
				Результат.ЕстьУслуги = Истина;
			КонецЕсли;
			Результат.СуммаНДСТовары = Документ1С.Товары.Итог("СуммаНДС");
			Результат.СуммаНДСУслуги = Документ1С.Услуги.Итог("СуммаНДС");
			Если Документ1С.СуммаВключаетНДС Тогда
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма") - Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма") - Документ1С.Услуги.Итог("СуммаНДС");
			Иначе
				Результат.СуммаТовары = Документ1С.Товары.Итог("Сумма") + Документ1С.Товары.Итог("СуммаНДС");
				Результат.СуммаБезНДСТовары = Документ1С.Товары.Итог("Сумма");
				Результат.СуммаУслуги = Документ1С.Услуги.Итог("Сумма") + Документ1С.Услуги.Итог("СуммаНДС");
				Результат.СуммаБезНДСУслуги = Документ1С.Услуги.Итог("Сумма");
			КонецЕсли;
			Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;

		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = СокрЛП(Документ1С.Номер);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Владелец;
			Результат.ДоговорКонтрагента = Документ1С;
			//Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "BASУТ" ИЛИ ИДКонфигурации = "BASКУП" ИЛИ ИДКонфигурации = "BASERP" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") ИЛИ ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Если Документ1С.СтатусАвтокорректировки = Перечисления.СтатусыАвтокорректировкиНалоговыхДокументов.ИсправлятьТехническуюТЧ Тогда
				Результат.СуммаНДСДокумента = Документ1С.ТоварыПоДаннымПользователя.Итог("СуммаНДСРегл");
				Результат.СуммаБезНДСДокумента = Документ1С.ТоварыПоДаннымПользователя.Итог("СуммаБезНДСРегл");
			Иначе
				Результат.СуммаНДСДокумента = Документ1С.Товары.Итог("СуммаНДСРегл");
				Результат.СуммаБезНДСДокумента = Документ1С.Товары.Итог("СуммаБезНДСРегл");
			КонецЕсли;	
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.РегистрируетсяВЕРННПокупателем = Документ1С.РегистрируетсяВЕРННПокупателем;
			
			Если Документ1С.СтатусАвтокорректировки = Перечисления.СтатусыАвтокорректировкиНалоговыхДокументов.ИсправлятьТехническуюТЧ Тогда
				Результат.СуммаНДСДокумента = Документ1С.ТоварыПоДаннымПользователя.Итог("СуммаНДСРегл");
				Результат.СуммаБезНДСДокумента = Документ1С.ТоварыПоДаннымПользователя.Итог("СуммаБезНДСРегл");
			Иначе
				Результат.СуммаНДСДокумента = Документ1С.Товары.Итог("СуммаНДСРегл");
				Результат.СуммаБезНДСДокумента = Документ1С.Товары.Итог("СуммаБезНДСРегл");
			КонецЕсли;	
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента") ИЛИ ТипДокумента = Тип("ДокументОбъект.РегистрацияВходящегоНалоговогоДокумента") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерВходящегоДокумента;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуКлиенту") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуКлиенту") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаСНДС), 0) КАК СуммаСНДС,
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0) КАК СуммаНДС,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСТовары,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСУслуги
			               |ИЗ
			               |	Документ.РеализацияТоваровУслуг.Товары КАК ТЧТовары
			               |ГДЕ
			               |	ТЧТовары.Ссылка = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", Документ1С);
			ВыбокаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
			Если ВыбокаРезультатаЗапроса.Следующий() Тогда
				Результат.СуммаДокумента = ВыбокаРезультатаЗапроса.СуммаСНДС;
				Результат.СуммаНДСДокумента = ВыбокаРезультатаЗапроса.СуммаНДС;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
				Результат.ЕстьТовары = ВыбокаРезультатаЗапроса.ЕстьТовары;
				Результат.СуммаТовары = ВыбокаРезультатаЗапроса.СуммаСНДСТовары;
				Результат.СуммаНДСТовары = ВыбокаРезультатаЗапроса.СуммаНДСТовары;
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;;
				Результат.ЕстьУслуги = ВыбокаРезультатаЗапроса.ЕстьУслуги;
				Результат.СуммаУслуги = ВыбокаРезультатаЗапроса.СуммаСНДСУслуги;
				Результат.СуммаНДСУслуги = ВыбокаРезультатаЗапроса.СуммаНДСУслуги;
				Результат.СуммаБезНДСУслуги = Результат.СуммаУслуги - Результат.СуммаНДСУслуги;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерВходящегоДокумента;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаСНДС), 0) КАК СуммаСНДС,
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0) КАК СуммаНДС,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСТовары,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСУслуги
			               |ИЗ
			               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ТЧТовары
			               |ГДЕ
			               |	ТЧТовары.Ссылка = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", Документ1С);
			ВыбокаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
			Если ВыбокаРезультатаЗапроса.Следующий() Тогда
				Результат.СуммаДокумента = ВыбокаРезультатаЗапроса.СуммаСНДС;
				Результат.СуммаНДСДокумента = ВыбокаРезультатаЗапроса.СуммаНДС;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
				Результат.ЕстьТовары = ВыбокаРезультатаЗапроса.ЕстьТовары;
				Результат.СуммаТовары = ВыбокаРезультатаЗапроса.СуммаСНДСТовары;
				Результат.СуммаНДСТовары = ВыбокаРезультатаЗапроса.СуммаНДСТовары;
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;;
				Результат.ЕстьУслуги = ВыбокаРезультатаЗапроса.ЕстьУслуги;
				Результат.СуммаУслуги = ВыбокаРезультатаЗапроса.СуммаСНДСУслуги;
				Результат.СуммаНДСУслуги = ВыбокаРезультатаЗапроса.СуммаНДСУслуги;
				Результат.СуммаБезНДСУслуги = Результат.СуммаУслуги - Результат.СуммаНДСУслуги;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерПоДаннымПоставщика;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаСНДС), 0) КАК СуммаСНДС,
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0) КАК СуммаНДС,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСТовары,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСУслуги
			               |ИЗ
			               |	Документ.ЗаказПоставщику.Товары КАК ТЧТовары
			               |ГДЕ
			               |	ТЧТовары.Ссылка = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", Документ1С);
			ВыбокаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
			Если ВыбокаРезультатаЗапроса.Следующий() Тогда
				Результат.СуммаДокумента = ВыбокаРезультатаЗапроса.СуммаСНДС;
				Результат.СуммаНДСДокумента = ВыбокаРезультатаЗапроса.СуммаНДС;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
				Результат.ЕстьТовары = ВыбокаРезультатаЗапроса.ЕстьТовары;
				Результат.СуммаТовары = ВыбокаРезультатаЗапроса.СуммаСНДСТовары;
				Результат.СуммаНДСТовары = ВыбокаРезультатаЗапроса.СуммаНДСТовары;
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;;
				Результат.ЕстьУслуги = ВыбокаРезультатаЗапроса.ЕстьУслуги;
				Результат.СуммаУслуги = ВыбокаРезультатаЗапроса.СуммаСНДСУслуги;
				Результат.СуммаНДСУслуги = ВыбокаРезультатаЗапроса.СуммаНДСУслуги;
				Результат.СуммаБезНДСУслуги = Результат.СуммаУслуги - Результат.СуммаНДСУслуги;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СверкаВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.СверкаВзаиморасчетов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = скПолучитьСуммуДокументаСверкаВзаиморасчетов(Документ1С);
			Результат.СуммаНДСДокумента = 0;
			Результат.СуммаБезНДСДокумента = 0;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.СуммаТовары = 0;
			Результат.СуммаБезНДСТовары = 0;
			Результат.СуммаНДСТовары = 0;
			Результат.СуммаУслуги = 0;
			Результат.СуммаБезНДСУслуги = 0;
			Результат.СуммаНДСУслуги = 0;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказКлиента") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказКлиента") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаСНДС), 0) КАК СуммаСНДС,
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0) КАК СуммаНДС,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСТовары,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСУслуги
			               |ИЗ
			               |	Документ.ЗаказКлиента.Товары КАК ТЧТовары
			               |ГДЕ
			               |	ТЧТовары.Ссылка = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", Документ1С);
			ВыбокаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
			Если ВыбокаРезультатаЗапроса.Следующий() Тогда
				Результат.СуммаДокумента = ВыбокаРезультатаЗапроса.СуммаСНДС;
				Результат.СуммаНДСДокумента = ВыбокаРезультатаЗапроса.СуммаНДС;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
				Результат.ЕстьТовары = ВыбокаРезультатаЗапроса.ЕстьТовары;
				Результат.СуммаТовары = ВыбокаРезультатаЗапроса.СуммаСНДСТовары;
				Результат.СуммаНДСТовары = ВыбокаРезультатаЗапроса.СуммаНДСТовары;
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;;
				Результат.ЕстьУслуги = ВыбокаРезультатаЗапроса.ЕстьУслуги;
				Результат.СуммаУслуги = ВыбокаРезультатаЗапроса.СуммаСНДСУслуги;
				Результат.СуммаНДСУслуги = ВыбокаРезультатаЗапроса.СуммаНДСУслуги;
				Результат.СуммаБезНДСУслуги = Результат.СуммаУслуги - Результат.СуммаНДСУслуги;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = СокрЛП(Документ1С.Номер);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С;
			//Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "BASERP25" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") ИЛИ ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Если Документ1С.СтатусАвтокорректировки = Перечисления.СтатусыАвтокорректировкиНалоговыхДокументов.ИсправлятьТехническуюТЧ Тогда
				Результат.СуммаНДСДокумента = Документ1С.ТоварыПоДаннымПользователя.Итог("СуммаНДСРегл");
				Результат.СуммаБезНДСДокумента = Документ1С.ТоварыПоДаннымПользователя.Итог("СуммаБезНДСРегл");
			Иначе
				Результат.СуммаНДСДокумента = Документ1С.Товары.Итог("СуммаНДСРегл");
				Результат.СуммаБезНДСДокумента = Документ1С.Товары.Итог("СуммаБезНДСРегл");
			КонецЕсли;	
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.РегистрируетсяВЕРННПокупателем = Документ1С.РегистрируетсяВЕРННПокупателем;
			
			Если Документ1С.СтатусАвтокорректировки = Перечисления.СтатусыАвтокорректировкиНалоговыхДокументов.ИсправлятьТехническуюТЧ Тогда
				Результат.СуммаНДСДокумента = Документ1С.ТоварыПоДаннымПользователя.Итог("СуммаНДСРегл");
				Результат.СуммаБезНДСДокумента = Документ1С.ТоварыПоДаннымПользователя.Итог("СуммаБезНДСРегл");
			Иначе
				Результат.СуммаНДСДокумента = Документ1С.Товары.Итог("СуммаНДСРегл");
				Результат.СуммаБезНДСДокумента = Документ1С.Товары.Итог("СуммаБезНДСРегл");
			КонецЕсли;	
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента") ИЛИ ТипДокумента = Тип("ДокументОбъект.РегистрацияВходящегоНалоговогоДокумента") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерВходящегоДокумента;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуКлиенту") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуКлиенту") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаСНДС), 0) КАК СуммаСНДС,
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0) КАК СуммаНДС,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСТовары,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСУслуги
			               |ИЗ
			               |	Документ.РеализацияТоваровУслуг.Товары КАК ТЧТовары
			               |ГДЕ
			               |	ТЧТовары.Ссылка = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", Документ1С);
			ВыбокаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
			Если ВыбокаРезультатаЗапроса.Следующий() Тогда
				Результат.СуммаДокумента = ВыбокаРезультатаЗапроса.СуммаСНДС;
				Результат.СуммаНДСДокумента = ВыбокаРезультатаЗапроса.СуммаНДС;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
				Результат.ЕстьТовары = ВыбокаРезультатаЗапроса.ЕстьТовары;
				Результат.СуммаТовары = ВыбокаРезультатаЗапроса.СуммаСНДСТовары;
				Результат.СуммаНДСТовары = ВыбокаРезультатаЗапроса.СуммаНДСТовары;
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;;
				Результат.ЕстьУслуги = ВыбокаРезультатаЗапроса.ЕстьУслуги;
				Результат.СуммаУслуги = ВыбокаРезультатаЗапроса.СуммаСНДСУслуги;
				Результат.СуммаНДСУслуги = ВыбокаРезультатаЗапроса.СуммаНДСУслуги;
				Результат.СуммаБезНДСУслуги = Результат.СуммаУслуги - Результат.СуммаНДСУслуги;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") ИЛИ ТипДокумента = Тип("ДокументОбъект.РеализацияУслугПрочихАктивов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Результат.ЕстьТовары = Ложь;
			Результат.ЕстьУслуги = Истина;
			
			Результат.СуммаНДСУслуги = Документ1С.Доходы.Итог("СуммаНДС");
			Результат.СуммаНДСДокумента = Результат.СуммаНДСУслуги;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.СуммаУслуги = Результат.СуммаДокумента;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.СуммаБезНДСУслуги = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.СуммаТовары = 0;
			Результат.СуммаНДСТовары = 0;
			Результат.СуммаБезНДСТовары = 0;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПриобретениеТоваровУслуг") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерВходящегоДокумента;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаСНДС), 0) КАК СуммаСНДС,
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0) КАК СуммаНДС,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСТовары,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСУслуги
			               |ИЗ
			               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ТЧТовары
			               |ГДЕ
			               |	ТЧТовары.Ссылка = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", Документ1С);
			ВыбокаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
			Если ВыбокаРезультатаЗапроса.Следующий() Тогда
				Результат.СуммаДокумента = ВыбокаРезультатаЗапроса.СуммаСНДС;
				Результат.СуммаНДСДокумента = ВыбокаРезультатаЗапроса.СуммаНДС;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
				Результат.ЕстьТовары = ВыбокаРезультатаЗапроса.ЕстьТовары;
				Результат.СуммаТовары = ВыбокаРезультатаЗапроса.СуммаСНДСТовары;
				Результат.СуммаНДСТовары = ВыбокаРезультатаЗапроса.СуммаНДСТовары;
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;;
				Результат.ЕстьУслуги = ВыбокаРезультатаЗапроса.ЕстьУслуги;
				Результат.СуммаУслуги = ВыбокаРезультатаЗапроса.СуммаСНДСУслуги;
				Результат.СуммаНДСУслуги = ВыбокаРезультатаЗапроса.СуммаНДСУслуги;
				Результат.СуммаБезНДСУслуги = Результат.СуммаУслуги - Результат.СуммаНДСУслуги;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерПоДаннымПоставщика;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаСНДС), 0) КАК СуммаСНДС,
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0) КАК СуммаНДС,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСТовары,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСУслуги
			               |ИЗ
			               |	Документ.ЗаказПоставщику.Товары КАК ТЧТовары
			               |ГДЕ
			               |	ТЧТовары.Ссылка = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", Документ1С);
			ВыбокаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
			Если ВыбокаРезультатаЗапроса.Следующий() Тогда
				Результат.СуммаДокумента = ВыбокаРезультатаЗапроса.СуммаСНДС;
				Результат.СуммаНДСДокумента = ВыбокаРезультатаЗапроса.СуммаНДС;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
				Результат.ЕстьТовары = ВыбокаРезультатаЗапроса.ЕстьТовары;
				Результат.СуммаТовары = ВыбокаРезультатаЗапроса.СуммаСНДСТовары;
				Результат.СуммаНДСТовары = ВыбокаРезультатаЗапроса.СуммаНДСТовары;
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;;
				Результат.ЕстьУслуги = ВыбокаРезультатаЗапроса.ЕстьУслуги;
				Результат.СуммаУслуги = ВыбокаРезультатаЗапроса.СуммаСНДСУслуги;
				Результат.СуммаНДСУслуги = ВыбокаРезультатаЗапроса.СуммаНДСУслуги;
				Результат.СуммаБезНДСУслуги = Результат.СуммаУслуги - Результат.СуммаНДСУслуги;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СверкаВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.СверкаВзаиморасчетов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = скПолучитьСуммуДокументаСверкаВзаиморасчетовЕРП25(Документ1С);
			Результат.СуммаНДСДокумента = 0;
			Результат.СуммаБезНДСДокумента = 0;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.СуммаТовары = 0;
			Результат.СуммаБезНДСТовары = 0;
			Результат.СуммаНДСТовары = 0;
			Результат.СуммаУслуги = 0;
			Результат.СуммаБезНДСУслуги = 0;
			Результат.СуммаНДСУслуги = 0;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказКлиента") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказКлиента") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Договор = Документ1С.Договор;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаСНДС), 0) КАК СуммаСНДС,
			               |	ЕСТЬNULL(СУММА(ТЧТовары.СуммаНДС), 0) КАК СуммаНДС,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСТовары,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСТовары,
			               |	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ИСТИНА
			               |			КОНЕЦ), ЛОЖЬ) КАК ЕстьУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаСНДС
			               |			КОНЕЦ), 0) КАК СуммаСНДСУслуги,
			               |	ЕСТЬNULL(СУММА(ВЫБОР
			               |				КОГДА ТЧТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			               |					ТОГДА ТЧТовары.СуммаНДС
			               |			КОНЕЦ), 0) КАК СуммаНДСУслуги
			               |ИЗ
			               |	Документ.ЗаказКлиента.Товары КАК ТЧТовары
			               |ГДЕ
			               |	ТЧТовары.Ссылка = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", Документ1С);
			ВыбокаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
			Если ВыбокаРезультатаЗапроса.Следующий() Тогда
				Результат.СуммаДокумента = ВыбокаРезультатаЗапроса.СуммаСНДС;
				Результат.СуммаНДСДокумента = ВыбокаРезультатаЗапроса.СуммаНДС;
				Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
				Результат.ЕстьТовары = ВыбокаРезультатаЗапроса.ЕстьТовары;
				Результат.СуммаТовары = ВыбокаРезультатаЗапроса.СуммаСНДСТовары;
				Результат.СуммаНДСТовары = ВыбокаРезультатаЗапроса.СуммаНДСТовары;
				Результат.СуммаБезНДСТовары = Результат.СуммаТовары - Результат.СуммаНДСТовары;;
				Результат.ЕстьУслуги = ВыбокаРезультатаЗапроса.ЕстьУслуги;
				Результат.СуммаУслуги = ВыбокаРезультатаЗапроса.СуммаСНДСУслуги;
				Результат.СуммаНДСУслуги = ВыбокаРезультатаЗапроса.СуммаНДСУслуги;
				Результат.СуммаБезНДСУслуги = Результат.СуммаУслуги - Результат.СуммаНДСУслуги;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = СокрЛП(Документ1С.Номер);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С;
			//Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "УНФ" Тогда
		Если ТипДокумента = Тип("ДокументСсылка.НалоговаяНакладная") ИЛИ ТипДокумента = Тип("ДокументОбъект.НалоговаяНакладная") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Результат.СуммаНДСДокумента = Документ1С.Запасы.Итог("СуммаНДС") + Документ1С.ОС.Итог("СуммаНДС");
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") ИЛИ ТипДокумента = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			Результат.РегистрируетсяВЕРННПокупателем = Документ1С.РегистрируетсяВЕРННПокупателем;
			
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента") ИЛИ ТипДокумента = Тип("ДокументОбъект.РегистрацияВходящегоНалоговогоДокумента") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерВходящегоДокумента;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Результат.СуммаНДСДокумента = Документ1С.СуммаНДСДокумента;
			Результат.СуммаБезНДСДокумента = Документ1С.СуммаДокумента - Документ1С.СуммаНДСДокумента;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплату") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплату") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ КАК ТоварыУслуги,
			|	СУММА(ТабЧастьДокумента.Сумма) КАК Сумма,
			|	СУММА(ТабЧастьДокумента.СуммаНДС) КАК СуммаНДС,
			|	МАКСИМУМ(ТабЧастьДокумента.Ссылка.СуммаВключаетНДС) КАК СуммаВключаетНДС
			|ИЗ
			|	Документ.СчетНаОплату.Запасы КАК ТабЧастьДокумента
			|ГДЕ
			|	ТабЧастьДокумента.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ";
			Запрос.УстановитьПараметр("Ссылка", Документ1С.Ссылка);			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл				
				Если Выборка.ТоварыУслуги = "Товары" Тогда
					Результат.ЕстьТовары = Истина;
					Результат.СуммаНДСТовары = Выборка.СуммаНДС;
					Если Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаТовары = Выборка.Сумма;
						Результат.СуммаБезНДСТовары = Выборка.Сумма - Выборка.СуммаНДС; 
					Иначе
						Результат.СуммаТовары = Выборка.Сумма + Выборка.СуммаНДС;
						Результат.СуммаБезНДСТовары = Выборка.Сумма;
					КонецЕсли;
					Результат.СуммаНДСДокумента = Выборка.СуммаНДС;
					Результат.СуммаБезНДСДокумента = Выборка.Сумма - Выборка.СуммаНДС;	
				КонецЕсли;				
				Если Выборка.ТоварыУслуги = "Услуги" Тогда
					Результат.ЕстьУслуги = Истина;
					Результат.СуммаНДСУслуги = Выборка.СуммаНДС;
					Если Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаУслуги = Выборка.Сумма;
						Результат.СуммаБезНДСУслуги = Выборка.Сумма - Выборка.СуммаНДС; 
					Иначе
						Результат.СуммаУслуги = Выборка.Сумма + Выборка.СуммаНДС;
						Результат.СуммаБезНДСУслуги = Выборка.Сумма;
					КонецЕсли;
					Результат.СуммаНДСДокумента = Выборка.СуммаНДС;
					Результат.СуммаБезНДСДокумента = Выборка.Сумма - Выборка.СуммаНДС;
				КонецЕсли;				
			КонецЦикла;
			Если Результат.ЕстьТовары = Истина И Результат.ЕстьУслуги = Истина Тогда
				Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
				Результат.СуммаБезНДСДокумента = (Результат.СуммаТовары + Результат.СуммаУслуги) - Результат.СуммаНДСДокумента;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПокупателя") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПокупателя") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ КАК ТоварыУслуги,
			|	СУММА(ТабЧастьДокумента.Сумма) КАК Сумма,
			|	СУММА(ТабЧастьДокумента.СуммаНДС) КАК СуммаНДС,
			|	МАКСИМУМ(ТабЧастьДокумента.Ссылка.СуммаВключаетНДС) КАК СуммаВключаетНДС
			|ИЗ
			|	Документ.ЗаказПокупателя.Запасы КАК ТабЧастьДокумента
			|ГДЕ
			|	ТабЧастьДокумента.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ";
			Запрос.УстановитьПараметр("Ссылка", Документ1С.Ссылка);			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл				
				Если Выборка.ТоварыУслуги = "Товары" Тогда
					Результат.ЕстьТовары = Истина;
					Результат.СуммаНДСТовары = Выборка.СуммаНДС;
					Если Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаТовары = Выборка.Сумма;
						Результат.СуммаБезНДСТовары = Выборка.Сумма - Выборка.СуммаНДС; 
					Иначе
						Результат.СуммаТовары = Выборка.Сумма + Выборка.СуммаНДС;
						Результат.СуммаБезНДСТовары = Выборка.Сумма;
					КонецЕсли;
					Результат.СуммаНДСДокумента = Выборка.СуммаНДС;
					Результат.СуммаБезНДСДокумента = Выборка.Сумма - Выборка.СуммаНДС;	
				КонецЕсли;				
				Если Выборка.ТоварыУслуги = "Услуги" Тогда
					Результат.ЕстьУслуги = Истина;
					Результат.СуммаНДСУслуги = Выборка.СуммаНДС;
					Если Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаУслуги = Выборка.Сумма;
						Результат.СуммаБезНДСУслуги = Выборка.Сумма - Выборка.СуммаНДС; 
					Иначе
						Результат.СуммаУслуги = Выборка.Сумма + Выборка.СуммаНДС;
						Результат.СуммаБезНДСУслуги = Выборка.Сумма;
					КонецЕсли;
					Результат.СуммаНДСДокумента = Выборка.СуммаНДС;
					Результат.СуммаБезНДСДокумента = Выборка.Сумма - Выборка.СуммаНДС;
				КонецЕсли;				
			КонецЦикла;
			Если Результат.ЕстьТовары = Истина И Результат.ЕстьУслуги = Истина Тогда
				Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
				Результат.СуммаБезНДСДокумента = (Результат.СуммаТовары + Результат.СуммаУслуги) - Результат.СуммаНДСДокумента;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РасходнаяНакладная") ИЛИ ТипДокумента = Тип("ДокументОбъект.РасходнаяНакладная") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ КАК ТоварыУслуги,
			|	СУММА(ТабЧастьДокумента.Сумма) КАК Сумма,
			|	СУММА(ТабЧастьДокумента.СуммаНДС) КАК СуммаНДС,
			|	МАКСИМУМ(ТабЧастьДокумента.Ссылка.СуммаВключаетНДС) КАК СуммаВключаетНДС
			|ИЗ
			|	Документ.РасходнаяНакладная.Запасы КАК ТабЧастьДокумента
			|ГДЕ
			|	ТабЧастьДокумента.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ";
			Запрос.УстановитьПараметр("Ссылка", Документ1С.Ссылка);			
			Выборка = Запрос.Выполнить().Выбрать();			
			Пока Выборка.Следующий() Цикл				
				Если Выборка.ТоварыУслуги = "Товары" Тогда
					Результат.ЕстьТовары = Истина;
					Результат.СуммаНДСТовары = Выборка.СуммаНДС;
					Если Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаТовары = Выборка.Сумма;
						Результат.СуммаБезНДСТовары = Выборка.Сумма - Выборка.СуммаНДС; 
					Иначе
						Результат.СуммаТовары = Выборка.Сумма + Выборка.СуммаНДС;
						Результат.СуммаБезНДСТовары = Выборка.Сумма;
					КонецЕсли;
					Результат.СуммаНДСДокумента = Выборка.СуммаНДС;
					Результат.СуммаБезНДСДокумента = Выборка.Сумма - Выборка.СуммаНДС;	
				КонецЕсли;				
				Если Выборка.ТоварыУслуги = "Услуги" Тогда
					Результат.ЕстьУслуги = Истина;
					Результат.СуммаНДСУслуги = Выборка.СуммаНДС;
					Если Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаУслуги = Выборка.Сумма;
						Результат.СуммаБезНДСУслуги = Выборка.Сумма - Выборка.СуммаНДС; 
					Иначе
						Результат.СуммаУслуги = Выборка.Сумма + Выборка.СуммаНДС;
						Результат.СуммаБезНДСУслуги = Выборка.Сумма;
					КонецЕсли;
					Результат.СуммаНДСДокумента = Выборка.СуммаНДС;
					Результат.СуммаБезНДСДокумента = Выборка.Сумма - Выборка.СуммаНДС;
				КонецЕсли;				
			КонецЦикла;
			Если Результат.ЕстьТовары = Истина И Результат.ЕстьУслуги = Истина Тогда
				Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
				Результат.СуммаБезНДСДокумента = (Результат.СуммаТовары + Результат.СуммаУслуги) - Результат.СуммаНДСДокумента;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетНаОплатуПоставщика") ИЛИ ТипДокумента = Тип("ДокументОбъект.СчетНаОплатуПоставщика") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерВходящегоДокумента;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ КАК ТоварыУслуги,
			|	СУММА(ТабЧастьДокумента.Сумма) КАК Сумма,
			|	СУММА(ТабЧастьДокумента.СуммаНДС) КАК СуммаНДС,
			|	МАКСИМУМ(ТабЧастьДокумента.Ссылка.СуммаВключаетНДС) КАК СуммаВключаетНДС
			|ИЗ
			|	Документ.СчетНаОплатуПоставщика.Запасы КАК ТабЧастьДокумента
			|ГДЕ
			|	ТабЧастьДокумента.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ";
			Запрос.УстановитьПараметр("Ссылка", Документ1С.Ссылка);			
			Выборка = Запрос.Выполнить().Выбрать();			
			Пока Выборка.Следующий() Цикл				
				Если Выборка.ТоварыУслуги = "Товары" Тогда
					Результат.ЕстьТовары = Истина;
					Результат.СуммаНДСТовары = Выборка.СуммаНДС;
					Если Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаТовары = Выборка.Сумма;
						Результат.СуммаБезНДСТовары = Выборка.Сумма - Выборка.СуммаНДС; 
					Иначе
						Результат.СуммаТовары = Выборка.Сумма + Выборка.СуммаНДС;
						Результат.СуммаБезНДСТовары = Выборка.Сумма;
					КонецЕсли;
					Результат.СуммаНДСДокумента = Выборка.СуммаНДС;
					Результат.СуммаБезНДСДокумента = Выборка.Сумма - Выборка.СуммаНДС;	
				КонецЕсли;				
				Если Выборка.ТоварыУслуги = "Услуги" Тогда
					Результат.ЕстьУслуги = Истина;
					Результат.СуммаНДСУслуги = Выборка.СуммаНДС;
					Если Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаУслуги = Выборка.Сумма;
						Результат.СуммаБезНДСУслуги = Выборка.Сумма - Выборка.СуммаНДС; 
					Иначе
						Результат.СуммаУслуги = Выборка.Сумма + Выборка.СуммаНДС;
						Результат.СуммаБезНДСУслуги = Выборка.Сумма;
					КонецЕсли;
					Результат.СуммаНДСДокумента = Выборка.СуммаНДС;
					Результат.СуммаБезНДСДокумента = Выборка.Сумма - Выборка.СуммаНДС;
				КонецЕсли;				
			КонецЦикла;
			Если Результат.ЕстьТовары = Истина И Результат.ЕстьУслуги = Истина Тогда
				Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
				Результат.СуммаБезНДСДокумента = (Результат.СуммаТовары + Результат.СуммаУслуги) - Результат.СуммаНДСДокумента;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ЗаказПоставщику") ИЛИ ТипДокумента = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = "";
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ КАК ТоварыУслуги,
			|	СУММА(ТабЧастьДокумента.Сумма) КАК Сумма,
			|	СУММА(ТабЧастьДокумента.СуммаНДС) КАК СуммаНДС,
			|	МАКСИМУМ(ТабЧастьДокумента.Ссылка.СуммаВключаетНДС) КАК СуммаВключаетНДС
			|ИЗ
			|	Документ.ЗаказПоставщику.Запасы КАК ТабЧастьДокумента
			|ГДЕ
			|	ТабЧастьДокумента.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ";
			Запрос.УстановитьПараметр("Ссылка", Документ1С.Ссылка);			
			Выборка = Запрос.Выполнить().Выбрать();			
			Пока Выборка.Следующий() Цикл				
				Если Выборка.ТоварыУслуги = "Товары" Тогда
					Результат.ЕстьТовары = Истина;
					Результат.СуммаНДСТовары = Выборка.СуммаНДС;
					Если Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаТовары = Выборка.Сумма;
						Результат.СуммаБезНДСТовары = Выборка.Сумма - Выборка.СуммаНДС; 
					Иначе
						Результат.СуммаТовары = Выборка.Сумма + Выборка.СуммаНДС;
						Результат.СуммаБезНДСТовары = Выборка.Сумма;
					КонецЕсли;
					Результат.СуммаНДСДокумента = Выборка.СуммаНДС;
					Результат.СуммаБезНДСДокумента = Выборка.Сумма - Выборка.СуммаНДС;	
				КонецЕсли;				
				Если Выборка.ТоварыУслуги = "Услуги" Тогда
					Результат.ЕстьУслуги = Истина;
					Результат.СуммаНДСУслуги = Выборка.СуммаНДС;
					Если Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаУслуги = Выборка.Сумма;
						Результат.СуммаБезНДСУслуги = Выборка.Сумма - Выборка.СуммаНДС; 
					Иначе
						Результат.СуммаУслуги = Выборка.Сумма + Выборка.СуммаНДС;
						Результат.СуммаБезНДСУслуги = Выборка.Сумма;
					КонецЕсли;
					Результат.СуммаНДСДокумента = Выборка.СуммаНДС;
					Результат.СуммаБезНДСДокумента = Выборка.Сумма - Выборка.СуммаНДС;
				КонецЕсли;				
			КонецЦикла;
			Если Результат.ЕстьТовары = Истина И Результат.ЕстьУслуги = Истина Тогда
				Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
				Результат.СуммаБезНДСДокумента = (Результат.СуммаТовары + Результат.СуммаУслуги) - Результат.СуммаНДСДокумента;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПриходнаяНакладная") ИЛИ ТипДокумента = Тип("ДокументОбъект.ПриходнаяНакладная") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Документ1С.НомерВходящегоДокумента;
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ КАК ТоварыУслуги,
			|	СУММА(ТабЧастьДокумента.Сумма) КАК Сумма,
			|	СУММА(ТабЧастьДокумента.СуммаНДС) КАК СуммаНДС,
			|	МАКСИМУМ(ТабЧастьДокумента.Ссылка.СуммаВключаетНДС) КАК СуммаВключаетНДС
			|ИЗ
			|	Документ.ПриходнаяНакладная.Расходы КАК ТабЧастьДокумента
			|ГДЕ
			|	ТабЧастьДокумента.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ";
			Если ЗначениеЗаполнено(Документ1С.Запасы) Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.ПриходнаяНакладная.Расходы", "Документ.ПриходнаяНакладная.Запасы");
			КонецЕсли;
			
			Запрос.УстановитьПараметр("Ссылка", Документ1С.Ссылка);			
			Выборка = Запрос.Выполнить().Выбрать();			
			Пока Выборка.Следующий() Цикл				
				Если Выборка.ТоварыУслуги = "Товары" Тогда
					Результат.ЕстьТовары = Истина;
					Результат.СуммаНДСТовары = Выборка.СуммаНДС;
					Если Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаТовары = Выборка.Сумма;
						Результат.СуммаБезНДСТовары = Выборка.Сумма - Выборка.СуммаНДС; 
					Иначе
						Результат.СуммаТовары = Выборка.Сумма + Выборка.СуммаНДС;
						Результат.СуммаБезНДСТовары = Выборка.Сумма;
					КонецЕсли;
					Результат.СуммаНДСДокумента = Выборка.СуммаНДС;
					Результат.СуммаБезНДСДокумента = Выборка.Сумма - Выборка.СуммаНДС;	
				КонецЕсли;				
				Если Выборка.ТоварыУслуги = "Услуги" Тогда
					Результат.ЕстьУслуги = Истина;
					Результат.СуммаНДСУслуги = Выборка.СуммаНДС;
					Если Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаУслуги = Выборка.Сумма;
						Результат.СуммаБезНДСУслуги = Выборка.Сумма - Выборка.СуммаНДС; 
					Иначе
						Результат.СуммаУслуги = Выборка.Сумма + Выборка.СуммаНДС;
						Результат.СуммаБезНДСУслуги = Выборка.Сумма;
					КонецЕсли;
					Результат.СуммаНДСДокумента = Выборка.СуммаНДС;
					Результат.СуммаБезНДСДокумента = Выборка.Сумма - Выборка.СуммаНДС;
				КонецЕсли;				
			КонецЦикла;
			Если Результат.ЕстьТовары = Истина И Результат.ЕстьУслуги = Истина Тогда
				Результат.СуммаНДСДокумента = Результат.СуммаНДСТовары + Результат.СуммаНДСУслуги;
				Результат.СуммаБезНДСДокумента = (Результат.СуммаТовары + Результат.СуммаУслуги) - Результат.СуммаНДСДокумента;
			КонецЕсли;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктВыполненныхРабот") ИЛИ ТипДокумента = Тип("ДокументОбъект.АктВыполненныхРабот") Тогда	
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.ДоговорКонтрагента = Документ1С.Договор;
			Результат.СуммаДокумента = Документ1С.СуммаДокумента;
			Результат.Проведен = Документ1С.Проведен;
			Результат.МожетБытьПроведен = Истина;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ КАК ТоварыУслуги,
			|	СУММА(ТабЧастьДокумента.Сумма) КАК Сумма,
			|	СУММА(ТабЧастьДокумента.СуммаНДС) КАК СуммаНДС,
			|	МАКСИМУМ(ТабЧастьДокумента.Ссылка.СуммаВключаетНДС) КАК СуммаВключаетНДС
			|ИЗ
			|	Документ.АктВыполненныхРабот.РаботыИУслуги КАК ТабЧастьДокумента
			|ГДЕ
			|	ТабЧастьДокумента.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ВЫБОР 
			|		КОГДА ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|				ИЛИ ТабЧастьДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА ""Услуги""
			|		ИНАЧЕ ""Товары""
			|	КОНЕЦ";
			Запрос.УстановитьПараметр("Ссылка", Документ1С.Ссылка);			
			Выборка = Запрос.Выполнить().Выбрать();			
			Пока Выборка.Следующий() Цикл				
				Если Выборка.ТоварыУслуги = "Товары" Тогда
					Результат.ЕстьТовары = Истина;
					Результат.СуммаТовары = Выборка.Сумма;
					Если НЕ Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаТовары = Результат.СуммаТовары + Выборка.СуммаНДС;
					КонецЕсли;
				КонецЕсли;				
				Если Выборка.ТоварыУслуги = "Услуги" Тогда
					Результат.ЕстьУслуги = Истина;
					Результат.СуммаУслуги = Выборка.Сумма;
					Если НЕ Выборка.СуммаВключаетНДС Тогда
						Результат.СуммаУслуги = Результат.СуммаУслуги + Выборка.СуммаНДС;
					КонецЕсли;
				КонецЕсли;				
			КонецЦикла;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипДокумента = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			
			Результат.Дата = Документ1С.ДатаДоговора;
			Результат.Номер = СокрЛП(Документ1С.НомерДоговора);
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Владелец;
			Результат.ДоговорКонтрагента = Документ1С;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СверкаВзаиморасчетов") ИЛИ ТипДокумента = Тип("ДокументОбъект.СверкаВзаиморасчетов") Тогда
			Результат.Дата = Документ1С.Дата;
			Результат.Номер = Вычислить("СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ1С.Номер,Истина,Истина))");
			Результат.Комментарий = Документ1С.Комментарий;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			Результат.СуммаДокумента = Макс((Документ1С.СальдоНачалоПериода + Документ1С.ДанныеОрганизации.Итог("СуммаДолгОрганизации") - Документ1С.ДанныеОрганизации.Итог("СуммаДолгКонтрагента")), 
												-(Документ1С.СальдоНачалоПериода + Документ1С.ДанныеОрганизации.Итог("СуммаДолгОрганизации") - Документ1С.ДанныеОрганизации.Итог("СуммаДолгКонтрагента")));
			Результат.СуммаНДСДокумента = 0;
			Результат.СуммаБезНДСДокумента = 0;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
			Результат.СуммаТовары = 0;
			Результат.СуммаБезНДСТовары = 0;
			Результат.СуммаНДСТовары = 0;
			Результат.СуммаУслуги = 0;
			Результат.СуммаБезНДСУслуги = 0;
			Результат.СуммаНДСУслуги = 0;
		КонецЕсли;		
	ИначеЕсли ИДКонфигурации = "BASДокументооборотКОРП" Тогда
		Если ТипДокумента = Тип("СправочникСсылка.ВнутренниеДокументы") ИЛИ ТипДокумента = Тип("СправочникОбъект.ВнутренниеДокументы") Тогда
			Результат.Дата = Документ1С.ДатаРегистрации;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Контрагент;
			//Результат.ДоговорКонтрагента = ;
			Результат.СуммаДокумента = Документ1С.Сумма;
			Результат.СуммаНДСДокумента = Документ1С.Сумма;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ВходящиеДокументы") ИЛИ ТипДокумента = Тип("СправочникОбъект.ВходящиеДокументы") Тогда
			Результат.Дата = Документ1С.ДатаРегистрации;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Отправитель;
			//Результат.ДоговорКонтрагента = ;
			Результат.СуммаДокумента = Документ1С.Сумма;
			Результат.СуммаНДСДокумента = 0;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ИсходящиеДокументы") ИЛИ ТипДокумента = Тип("СправочникОбъект.ИсходящиеДокументы") Тогда
			Результат.Дата = Документ1С.ДатаРегистрации;
			Результат.Организация = Документ1С.Организация;
			Для Каждого Получатель Из Документ1С.Получатели Цикл
				Результат.Контрагент = Получатель.Получатель;
				Прервать;
			КонецЦикла;
			//Результат.ДоговорКонтрагента = ;
			Результат.СуммаДокумента = Документ1С.Сумма;
			Результат.СуммаНДСДокумента = 0;
			Результат.СуммаБезНДСДокумента = Результат.СуммаДокумента - Результат.СуммаНДСДокумента;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "ДокументооборотДляУкраиныКОРП" Тогда
		Если ТипДокумента = Тип("СправочникСсылка.ВнутренниеДокументы") ИЛИ ТипДокумента = Тип("СправочникОбъект.ВнутренниеДокументы") Тогда
			Результат.Дата = Документ1С.ДатаРегистрации;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Корреспондент;
			//Результат.ДоговорКонтрагента = ;
			Результат.СуммаДокумента = Документ1С.Сумма;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ВходящиеДокументы") ИЛИ ТипДокумента = Тип("СправочникОбъект.ВходящиеДокументы") Тогда
			Результат.Дата = Документ1С.ДатаРегистрации;
			Результат.Организация = Документ1С.Организация;
			Результат.Контрагент = Документ1С.Отправитель;
			//Результат.ДоговорКонтрагента = ;
			Результат.СуммаДокумента = Документ1С.Сумма;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		ИначеЕсли ТипДокумента = Тип("СправочникСсылка.ИсходящиеДокументы") ИЛИ ТипДокумента = Тип("СправочникОбъект.ИсходящиеДокументы") Тогда
			Результат.Дата = Документ1С.ДатаРегистрации;
			Результат.Организация = Документ1С.Организация;
			Для Каждого Получатель Из Документ1С.Получатели Цикл
				Результат.Контрагент = Получатель.Получатель;
				Прервать;
			КонецЦикла;
			//Результат.ДоговорКонтрагента = ;
			Результат.СуммаДокумента = Документ1С.Сумма;
			Результат.Проведен = Ложь;
			Результат.МожетБытьПроведен = Ложь;
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ПолучитьКодПоДРФООтветственногоЗаДокумент(Документ1С) Экспорт
	ТипДокумента = ТипЗнч(Документ1С);
	
	Если Документ1С = Неопределено Тогда
		Возврат "";
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.НалоговаяНакладная") Тогда
		Возврат СокрЛП(Документ1С.КтоВыписалНалоговуюНакладную.КодПоДРФО);
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.Приложение2КНалоговойНакладной") Тогда
		Возврат СокрЛП(Документ1С.КтоВыписалНалоговуюНакладную.КодПоДРФО);
	Иначе
		Ответственный = Неопределено;
		МетаданныеДокумента1С = Документ1С.Метаданные();
		Если МетаданныеДокумента1С.Реквизиты.Найти("ПредставительОрганизации") <> Неопределено Тогда
			ФизЛицо = Документ1С.ПредставительОрганизации;
			МетаданныеФизЛица = ФизЛицо.Метаданные();
			Если МетаданныеФизЛица.Реквизиты.Найти("КодПоДРФО") <> Неопределено Тогда
				Возврат СокрЛП(ФизЛицо.КодПоДРФО);
			Иначе
				Возврат "";
			КонецЕсли;
		ИначеЕсли МетаданныеДокумента1С.Реквизиты.Найти("Ответственный") <> Неопределено Тогда
			Ответственный = Документ1С.Ответственный;
			МетаданныеОтветственного = Ответственный.Метаданные();
			Если МетаданныеОтветственного.Реквизиты.Найти("ФизЛицо") <> Неопределено Тогда
				ФизЛицо = Ответственный.ФизЛицо;
				МетаданныеФизЛица = ФизЛицо.Метаданные();
				Если МетаданныеФизЛица.Реквизиты.Найти("КодПоДРФО") <> Неопределено Тогда
					Возврат СокрЛП(ФизЛицо.КодПоДРФО);
				Иначе
					Возврат "";
				КонецЕсли;
			ИначеЕсли МетаданныеОтветственного.Реквизиты.Найти("ФизическоеЛицо") <> Неопределено Тогда
				ФизЛицо = Ответственный.ФизическоеЛицо;
				МетаданныеФизЛица = ФизЛицо.Метаданные();
				Если МетаданныеФизЛица.Реквизиты.Найти("КодПоДРФО") <> Неопределено Тогда
					Возврат СокрЛП(ФизЛицо.КодПоДРФО);
				Иначе
					Возврат "";
				КонецЕсли;
			Иначе
				Возврат "";
			КонецЕсли;
		Иначе
			Возврат "";
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция ПолучитьДанныеОтветственногоЗаДокумент(Документ1С, КодПоДРФО, Наименование, ОписаниеОшибки) Экспорт
	КодПоДРФО = "";
	Наименование = "";
	ОписаниеОшибки = "";
	
	ТипДокумента = ТипЗнч(Документ1С);
	
	Если Документ1С = Неопределено Тогда
		ОписаниеОшибки = НСтр("ru = 'Учетный документ не определен'; uk = 'Обліковий документ не визначено'");
		Возврат Ложь;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.НалоговаяНакладная") Тогда
		КтоВыписалНалоговуюНакладную = Документ1С.КтоВыписалНалоговуюНакладную;
		КодПоДРФО = СокрЛП(КтоВыписалНалоговуюНакладную.КодПоДРФО);
		Наименование = СокрЛП(КтоВыписалНалоговуюНакладную);
		Возврат Истина;
	ИначеЕсли ТипДокумента = ТипЧерезПопытку("ДокументСсылка.Приложение2КНалоговойНакладной") Тогда
		КтоВыписалНалоговуюНакладную = Документ1С.КтоВыписалНалоговуюНакладную;
		КодПоДРФО = СокрЛП(КтоВыписалНалоговуюНакладную.КодПоДРФО);
		Наименование = СокрЛП(КтоВыписалНалоговуюНакладную);
		Возврат Истина;
	Иначе
		Ответственный = Неопределено;
		МетаданныеДокумента1С = Документ1С.Метаданные();
		Если МетаданныеДокумента1С.Реквизиты.Найти("ПредставительОрганизации") <> Неопределено Тогда
			ФизЛицо = Документ1С.ПредставительОрганизации;
			Если ЗначениеЗаполнено(ФизЛицо) Тогда
				Наименование = СокрЛП(ФизЛицо);
				МетаданныеФизЛица = ФизЛицо.Метаданные();
				Если МетаданныеФизЛица.Реквизиты.Найти("КодПоДРФО") <> Неопределено Тогда
					КодПоДРФО = СокрЛП(ФизЛицо.КодПоДРФО);
					Возврат Истина;
				Иначе
					ОписаниеОшибки = НСтр("ru = 'У элемента'; uk = 'У елемента'")
						+ " """ + Наименование + """ "
						+ НСтр("ru = 'отсутствует реквизит ""Код по ДРФО""'; uk = 'відсутній реквізит ""Код за ДРФО""'");
					Возврат Ложь;
				КонецЕсли;
			Иначе
				ОписаниеОшибки = НСтр("ru = 'Поле ""Представитель организации"" не заполнено'; uk = 'Поле ""Представник організації"" не заповнено'");
				Возврат Ложь;
			КонецЕсли;
		ИначеЕсли МетаданныеДокумента1С.Реквизиты.Найти("Ответственный") <> Неопределено Тогда
			Ответственный = Документ1С.Ответственный;
			Если ЗначениеЗаполнено(Ответственный) Тогда
				Наименование = СокрЛП(Ответственный);
				МетаданныеОтветственного = Ответственный.Метаданные();
				Если МетаданныеОтветственного.Реквизиты.Найти("ФизЛицо") <> Неопределено Тогда
					ФизЛицо = Ответственный.ФизЛицо;
					Если ЗначениеЗаполнено(ФизЛицо) Тогда
						Наименование = СокрЛП(ФизЛицо);
						МетаданныеФизЛица = ФизЛицо.Метаданные();
						Если МетаданныеФизЛица.Реквизиты.Найти("КодПоДРФО") <> Неопределено Тогда
							КодПоДРФО = СокрЛП(ФизЛицо.КодПоДРФО);
							Возврат Истина;
						Иначе
							ОписаниеОшибки = НСтр("ru = 'У элемента'; uk = 'У елемента'")
								+ " """ + Наименование + """ "
								+ НСтр("ru = 'отсутствует реквизит ""Код по ДРФО""'; uk = 'відсутній реквізит ""Код за ДРФО""'");
							Возврат Ложь;
						КонецЕсли;
					Иначе
						ОписаниеОшибки = НСтр("ru = 'Поле ""Представитель организации"" не заполнено'; uk = 'Поле ""Представник організації"" не заповнено'");
						Возврат Ложь;
					КонецЕсли;
				ИначеЕсли МетаданныеОтветственного.Реквизиты.Найти("ФизическоеЛицо") <> Неопределено Тогда
					ФизЛицо = Ответственный.ФизическоеЛицо;
					Если ЗначениеЗаполнено(ФизЛицо) Тогда
						Наименование = СокрЛП(ФизЛицо);
						МетаданныеФизЛица = ФизЛицо.Метаданные();
						Если МетаданныеФизЛица.Реквизиты.Найти("КодПоДРФО") <> Неопределено Тогда
							КодПоДРФО = СокрЛП(ФизЛицо.КодПоДРФО);
							Возврат Истина;
						Иначе
							ОписаниеОшибки = НСтр("ru = 'У элемента'; uk = 'У елемента'")
								+ " """ + Наименование + """ "
								+ НСтр("ru = 'отсутствует реквизит ""Код по ДРФО""'; uk = 'відсутній реквізит ""Код за ДРФО""'");
							Возврат Ложь;
						КонецЕсли;
					Иначе
						ОписаниеОшибки = НСтр("ru = 'Поле ""Представитель организации"" не заполнено'; uk = 'Поле ""Представник організації"" не заповнено'");
						Возврат Ложь;
					КонецЕсли;
				Иначе
					ОписаниеОшибки = НСтр("ru = 'У элемента'; uk = 'У елемента'")
						+ " """ + Наименование + """ "
						+ НСтр("ru = 'отсутствует реквизит ""Код по ДРФО""'; uk = 'відсутній реквізит ""Код за ДРФО""'");
					Возврат Ложь;
				КонецЕсли;
			Иначе
				ОписаниеОшибки = НСтр("ru = 'Поле ""Ответственный"" не заполнено'; uk = 'Поле ""Відповідальний"" не заповнено'");
				Возврат Ложь;
			КонецЕсли;
		Иначе
			ОписаниеОшибки = НСтр("ru = 'Отсутствует реквизит ""Ответственный""'; uk = 'Відсутній реквізит ""Відповідальний""'");
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция ПолучитьДанныеПоОгранизации(Организация) Экспорт
	ИДКонфигурации  = ИДКонфигурации();
	Если ИДКонфигурации = "БП20"
		ИЛИ ИДКонфигурации = "БП20ИНАГРО" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	КодыОрганизацииСрезПоследних.Организация КАК Организация,
		               |	КодыОрганизацииСрезПоследних.НалоговаяИнспекция.Код КАК НалоговаяИнспекцияКод,
		               |	КодыОрганизацииСрезПоследних.ИНН КАК ИНН,
		               |	КодыОрганизацииСрезПоследних.НалоговаяИнспекция.Родитель.Код КАК НалоговаяИнспекцияРегион,
		               |	КодыОрганизацииСрезПоследних.НалоговаяИнспекция.КодАдмРайона КАК НалоговаяИнспекцияРайон,
		               |	КодыОрганизацииСрезПоследних.НалоговаяИнспекция.Наименование КАК НалоговаяИнспекцияНаименование
		               |ИЗ
		               |	РегистрСведений.КодыОрганизации.СрезПоследних(, Организация = &Организация) КАК КодыОрганизацииСрезПоследних";
		Запрос.УстановитьПараметр("Организация", Организация);
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			Результат = Новый Структура;
			Результат.Вставить("Организация", ВыборкаРезультатаЗапроса.Организация);
			Результат.Вставить("НалоговаяИнспекцияКод", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияКод));
			Результат.Вставить("ИНН", ВыборкаРезультатаЗапроса.ИНН);
			Результат.Вставить("НалоговаяИнспекцияРегион", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияРегион));
			Результат.Вставить("НалоговаяИнспекцияРайон", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияРайон));
			Результат.Вставить("НалоговаяИнспекцияНаименование", ВыборкаРезультатаЗапроса.НалоговаяИнспекцияНаименование);
		Иначе
			Результат = Новый Структура;
			Результат.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
			Результат.Вставить("НалоговаяИнспекцияКод", "");
			Результат.Вставить("ИНН", "");
			Результат.Вставить("НалоговаяИнспекцияРегион", "");
			Результат.Вставить("НалоговаяИнспекцияРайон", "");
			Результат.Вставить("НалоговаяИнспекцияНаименование", "");
		КонецЕсли;
		Результат.Вставить("ЕДРПОУ", Организация.КодПоЕДРПОУ);
		Результат.Вставить("КодФилиала", "");
		Результат.Вставить("Наименование", Организация.НаименованиеПолное);
	ИначеЕсли ИДКонфигурации = "БП"
	 ИЛИ ИДКонфигурации = "УТП"
	 ИЛИ ИДКонфигурации = "УПП" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	КодыОрганизацииСрезПоследних.Организация КАК Организация,
		               |	КодыОрганизацииСрезПоследних.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
		               |	КодыОрганизацииСрезПоследних.НалоговаяИнспекция.Код КАК НалоговаяИнспекцияКод,
		               |	КодыОрганизацииСрезПоследних.ИНН КАК ИНН,
		               |	КодыОрганизацииСрезПоследних.НалоговаяИнспекция.Родитель.Код КАК НалоговаяИнспекцияРегион,
		               |	КодыОрганизацииСрезПоследних.НалоговаяИнспекция.КодАдмРайона КАК НалоговаяИнспекцияРайон,
		               |	КодыОрганизацииСрезПоследних.НалоговаяИнспекция.Наименование КАК НалоговаяИнспекцияНаименование
		               |ИЗ
		               |	РегистрСведений.КодыОрганизации.СрезПоследних(, Организация = &Организация) КАК КодыОрганизацииСрезПоследних";
		Запрос.УстановитьПараметр("Организация", Организация);
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			Результат = Новый Структура;
			Результат.Вставить("Организация", ВыборкаРезультатаЗапроса.Организация);
			Результат.Вставить("ЕДРПОУ", ВыборкаРезультатаЗапроса.КодПоЕДРПОУ);
			Результат.Вставить("НалоговаяИнспекцияКод", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияКод));
			Результат.Вставить("ИНН", ВыборкаРезультатаЗапроса.ИНН);
			Результат.Вставить("НалоговаяИнспекцияРегион", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияРегион));
			Результат.Вставить("НалоговаяИнспекцияРайон", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияРайон));
			Результат.Вставить("НалоговаяИнспекцияНаименование", ВыборкаРезультатаЗапроса.НалоговаяИнспекцияНаименование);
		Иначе
			Результат = Новый Структура;
			Результат.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
			Результат.Вставить("ЕДРПОУ", "");
			Результат.Вставить("НалоговаяИнспекцияКод", "");
			Результат.Вставить("ИНН", "");
			Результат.Вставить("НалоговаяИнспекцияРегион", "");
			Результат.Вставить("НалоговаяИнспекцияРайон", "");
			Результат.Вставить("НалоговаяИнспекцияНаименование", "");
		КонецЕсли;
		Результат.Вставить("КодФилиала", "");
		Результат.Вставить("Наименование", Организация.НаименованиеПолное);
	ИначеЕсли ИДКонфигурации = "УТ"
		ИЛИ ИДКонфигурации = "УТ30"
		ИЛИ ИДКонфигурации = "УТ31"
		ИЛИ ИДКонфигурации = "FlyDoc" 
		ИЛИ ИДКонфигурации = "УНФ" 
		ИЛИ ИДКонфигурации = "ДокументооборотДляУкраиныКОРП" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Организации.Ссылка КАК Организация,
		               |	Организации.НалоговаяИнспекция.Код КАК НалоговаяИнспекцияКод,
		               |	Организации.ИНН КАК ИНН,
		               |	Организации.НалоговаяИнспекция.Родитель.Код КАК НалоговаяИнспекцияРегион,
		               |	Организации.НалоговаяИнспекция.КодАдмРайона КАК НалоговаяИнспекцияРайон,
		               |	Организации.НалоговаяИнспекция.Наименование КАК НалоговаяИнспекцияНаименование
		               |ИЗ
		               |	Справочник.Организации КАК Организации
		               |ГДЕ
		               |	Организации.Ссылка = &Организация";
		
		Запрос.УстановитьПараметр("Организация", Организация);
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			Результат = Новый Структура;
			Результат.Вставить("Организация", ВыборкаРезультатаЗапроса.Организация);
			Результат.Вставить("НалоговаяИнспекцияКод", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияКод));
			Результат.Вставить("ИНН", ВыборкаРезультатаЗапроса.ИНН);
			Результат.Вставить("НалоговаяИнспекцияРегион", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияРегион));
			Результат.Вставить("НалоговаяИнспекцияРайон", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияРайон));
			Результат.Вставить("НалоговаяИнспекцияНаименование", ВыборкаРезультатаЗапроса.НалоговаяИнспекцияНаименование);
		Иначе
			Результат = Новый Структура;
			Результат.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
			Результат.Вставить("НалоговаяИнспекцияКод", "");
			Результат.Вставить("ИНН", "");
			Результат.Вставить("НалоговаяИнспекцияРегион", "");
			Результат.Вставить("НалоговаяИнспекцияРайон", "");
			Результат.Вставить("НалоговаяИнспекцияНаименование", "");
		КонецЕсли;
		Результат.Вставить("ЕДРПОУ", Организация.КодПоЕДРПОУ);
		Результат.Вставить("КодФилиала", "");
		Результат.Вставить("Наименование", Организация.НаименованиеПолное);
	ИначеЕсли ИДКонфигурации = "BASУТ"
		ИЛИ ИДКонфигурации = "BASКУП"
		ИЛИ ИДКонфигурации = "BASERP" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|Организации.Ссылка КАК Организация,
		|Организации.НалоговаяИнспекция.Код КАК НалоговаяИнспекцияКод,
		|Организации.НалоговаяИнспекция.Родитель.Код КАК НалоговаяИнспекцияРегион,
		|Организации.НалоговаяИнспекция.КодАдмРайона КАК НалоговаяИнспекцияРайон,
		|Организации.НалоговаяИнспекция.Наименование КАК НалоговаяИнспекцияНаименование,
		|УчетнаяПолитикаОрганизацийСрезПоследних.ИННПлательщикаНДС КАК ИНН
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних КАК УчетнаяПолитикаОрганизацийСрезПоследних
		|		ПО Организации.Ссылка = УчетнаяПолитикаОрганизацийСрезПоследних.Организация
		|ГДЕ
		|	Организации.Ссылка = &Организация";	
		
		Запрос.УстановитьПараметр("Организация", Организация);
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			Результат = Новый Структура;
			Результат.Вставить("Организация", ВыборкаРезультатаЗапроса.Организация);
			Результат.Вставить("НалоговаяИнспекцияКод", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияКод));
			Результат.Вставить("ИНН", ВыборкаРезультатаЗапроса.ИНН);
			Результат.Вставить("НалоговаяИнспекцияРегион", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияРегион));
			Результат.Вставить("НалоговаяИнспекцияРайон", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияРайон));
			Результат.Вставить("НалоговаяИнспекцияНаименование", ВыборкаРезультатаЗапроса.НалоговаяИнспекцияНаименование);
		Иначе
			Результат = Новый Структура;
			Результат.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
			Результат.Вставить("НалоговаяИнспекцияКод", "");
			Результат.Вставить("ИНН", "");
			Результат.Вставить("НалоговаяИнспекцияРегион", "");
			Результат.Вставить("НалоговаяИнспекцияРайон", "");
			Результат.Вставить("НалоговаяИнспекцияНаименование", "");
		КонецЕсли;
		Результат.Вставить("ЕДРПОУ", Организация.КодПоЕДРПОУ);
		Результат.Вставить("КодФилиала", "");
		Результат.Вставить("Наименование", Организация.НаименованиеПолное);
	ИначеЕсли ИДКонфигурации = "BASERP25" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Организации.Ссылка КАК Организация,
		               |	Организации.НалоговаяИнспекция.Код КАК НалоговаяИнспекцияКод,
		               |	Организации.НалоговаяИнспекция.Родитель.Код КАК НалоговаяИнспекцияРегион,
		               |	Организации.НалоговаяИнспекция.КодАдмРайона КАК НалоговаяИнспекцияРайон,
		               |	Организации.НалоговаяИнспекция.Наименование КАК НалоговаяИнспекцияНаименование,
		               |	НастройкиУчетаНДССрезПоследних.ИННПлательщикаНДС КАК ИНН
		               |ИЗ
		               |	Справочник.Организации КАК Организации
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаНДС.СрезПоследних КАК НастройкиУчетаНДССрезПоследних
		               |		ПО Организации.Ссылка = НастройкиУчетаНДССрезПоследних.Организация
		               |ГДЕ
		               |	Организации.Ссылка = &Организация";	
		
		Запрос.УстановитьПараметр("Организация", Организация);
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			Результат = Новый Структура;
			Результат.Вставить("Организация", ВыборкаРезультатаЗапроса.Организация);
			Результат.Вставить("НалоговаяИнспекцияКод", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияКод));
			Результат.Вставить("ИНН", ВыборкаРезультатаЗапроса.ИНН);
			Результат.Вставить("НалоговаяИнспекцияРегион", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияРегион));
			Результат.Вставить("НалоговаяИнспекцияРайон", СокрЛП(ВыборкаРезультатаЗапроса.НалоговаяИнспекцияРайон));
			Результат.Вставить("НалоговаяИнспекцияНаименование", ВыборкаРезультатаЗапроса.НалоговаяИнспекцияНаименование);
		Иначе
			Результат = Новый Структура;
			Результат.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
			Результат.Вставить("НалоговаяИнспекцияКод", "");
			Результат.Вставить("ИНН", "");
			Результат.Вставить("НалоговаяИнспекцияРегион", "");
			Результат.Вставить("НалоговаяИнспекцияРайон", "");
			Результат.Вставить("НалоговаяИнспекцияНаименование", "");
		КонецЕсли;
		Результат.Вставить("ЕДРПОУ", Организация.КодПоЕДРПОУ);
		Результат.Вставить("КодФилиала", "");
		Результат.Вставить("Наименование", Организация.НаименованиеПолное);
	Иначе
		Результат = Новый Структура;
		Результат.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
		Результат.Вставить("НалоговаяИнспекцияКод", "");
		Результат.Вставить("ИНН", "");
		Результат.Вставить("НалоговаяИнспекцияРегион", "");
		Результат.Вставить("НалоговаяИнспекцияРайон", "");
		Результат.Вставить("НалоговаяИнспекцияНаименование", "");
		Результат.Вставить("ЕДРПОУ", "");
		Результат.Вставить("КодФилиала", "");
		Результат.Вставить("Наименование", "");
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ПолучитьРекквизитыОгранизацииДляПФ(Организация) Экспорт
	СведенияРезультат = Новый Структура("Представление, ПолноеНаименование, КодПоЕДРПОУ, КодПоДРФО, ИНН, НомерСвидетельства,"+ 
								"Телефоны, Факс, Email, ЮридическийАдрес, ФактическийАдрес,"+
								"Банк, МФО, КоррСчет, НомерСчета, НомерСчетаУстаревший, ПредставлениеБанковскогоСчета, МФО_Платеж, НомерСчетаСПереносом, АдресБанка,"+
								"ИнформацияОСтатусеПлательщикаНалогов");
	ИДКонфигурации  = ИДКонфигурации();
	Если ИДКонфигурации = "БП20"
		ИЛИ ИДКонфигурации = "БП20ИНАГРО" Тогда
 		//СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель, Шапка.Дата,,,КодЯзыкаПечать);
		СведенияООрганзации = Неопределено;
		Выполнить("СведенияООрганзации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Организация, ТекущаяДата(), , , ""uk"");");
		Если ТипЗнч(СведенияООрганзации) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияООрганзации);
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "БП"
	 ИЛИ ИДКонфигурации = "УТП"
	 ИЛИ ИДКонфигурации = "УПП" Тогда
		СведенияООрганзации = Неопределено;
		Выполнить("СведенияООрганзации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ТекущаяДата(), , , ""uk"");");
		Если ТипЗнч(СведенияООрганзации) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияООрганзации);
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "УТ" Тогда
		СведенияООрганзации = Неопределено;
		Выполнить("СведенияООрганзации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ТекущаяДата(), , , ""uk"");");
		Если ТипЗнч(СведенияООрганзации) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияООрганзации);
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "УТ30"
		ИЛИ ИДКонфигурации = "УТ31" Тогда
		
		СведенияООрганзации = Неопределено;
		Выполнить("СведенияООрганзации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, ТекущаяДата());");
		Если ТипЗнч(СведенияООрганзации) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияООрганзации);
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "FlyDoc" Тогда
		
	ИначеЕсли ИДКонфигурации = "ДокументооборотДляУкраиныКОРП" Тогда
		
	ИначеЕсли ИДКонфигурации = "УНФ" Тогда
		//СведенияОбКонтрагенте = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента, ,);
		СведенияООрганзации = Неопределено;
		Выполнить("СведенияООрганзации = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Организация, ТекущаяДата(), , , ""uk"");");
		Если ТипЗнч(СведенияООрганзации) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияООрганзации);
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "BASУТ" Тогда
		СведенияООрганзации = Неопределено;
		Выполнить("СведенияООрганзации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, ТекущаяДата());");
		Если ТипЗнч(СведенияООрганзации) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияООрганзации);
			ОфициальноеНаименование = Неопределено;
			Если СведенияООрганзации.Свойство("ОфициальноеНаименование", ОфициальноеНаименование) Тогда
				Если ЗначениеЗаполнено(ОфициальноеНаименование) Тогда
					СведенияРезультат.ПолноеНаименование = ОфициальноеНаименование;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "BASКУП" Тогда
		СведенияООрганзации = Неопределено;
		Выполнить("СведенияООрганзации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Организация, ТекущаяДата());");
		Если ТипЗнч(СведенияООрганзации) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияООрганзации);
			ОфициальноеНаименование = Неопределено;
			Если СведенияООрганзации.Свойство("ОфициальноеНаименование", ОфициальноеНаименование) Тогда
				Если ЗначениеЗаполнено(ОфициальноеНаименование) Тогда
					СведенияРезультат.ПолноеНаименование = ОфициальноеНаименование;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "BASERP"
		или ИДКонфигурации = "BASERP25" Тогда
		СведенияООрганзации = Неопределено;
		Выполнить("СведенияООрганзации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Организация, ТекущаяДата());");
		Если ТипЗнч(СведенияООрганзации) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияООрганзации);
			ОфициальноеНаименование = Неопределено;
			Если СведенияООрганзации.Свойство("ОфициальноеНаименование", ОфициальноеНаименование) Тогда
				Если ЗначениеЗаполнено(ОфициальноеНаименование) Тогда
					СведенияРезультат.ПолноеНаименование = ОфициальноеНаименование;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
	КонецЕсли;
	Возврат СведенияРезультат;
КонецФункции

Функция ПолучитьРекквизитыКонтрагентаДляПФ(Контрагент) Экспорт
	СведенияРезультат = Новый Структура("Представление, ПолноеНаименование, КодПоЕДРПОУ, КодПоДРФО, ИНН, НомерСвидетельства,"+ 
								"Телефоны, Факс, Email, ЮридическийАдрес, ФактическийАдрес,"+
								"Банк, МФО, КоррСчет, НомерСчета, НомерСчетаУстаревший, ПредставлениеБанковскогоСчета, МФО_Платеж, НомерСчетаСПереносом, АдресБанка,"+
								"ИнформацияОСтатусеПлательщикаНалогов");
	ИДКонфигурации  = ИДКонфигурации();
	Если ИДКонфигурации = "БП20"
		ИЛИ ИДКонфигурации = "БП20ИНАГРО" Тогда
 		//СведенияОПокупателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Покупатель, Шапка.Дата,,,КодЯзыкаПечать);
		СведенияКонтрагента = Неопределено;
		Выполнить("СведенияКонтрагента = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Контрагент, ТекущаяДата(), , , ""uk"");");
		Если ТипЗнч(СведенияКонтрагента) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияКонтрагента);
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "БП"
	 ИЛИ ИДКонфигурации = "УТП"
	 ИЛИ ИДКонфигурации = "УПП" Тогда
		СведенияКонтрагента = Неопределено;
		Выполнить("СведенияКонтрагента = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, ТекущаяДата(), , , ""uk"");");
		Если ТипЗнч(СведенияКонтрагента) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияКонтрагента);
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "УТ" Тогда
		СведенияКонтрагента = Неопределено;
		Выполнить("СведенияКонтрагента = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Контрагент, ТекущаяДата(), , , ""uk"");");
		Если ТипЗнч(СведенияКонтрагента) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияКонтрагента);
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "УТ30"
		ИЛИ ИДКонфигурации = "УТ31" Тогда
		
		СведенияКонтрагента = Неопределено;
		Выполнить("СведенияКонтрагента = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Контрагент, ТекущаяДата());");
		Если ТипЗнч(СведенияКонтрагента) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияКонтрагента);
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "FlyDoc" Тогда
		
	ИначеЕсли ИДКонфигурации = "ДокументооборотДляУкраиныКОРП" Тогда
		
	ИначеЕсли ИДКонфигурации = "УНФ" Тогда
		//СведенияОбКонтрагенте = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаДокумента, ,);
		СведенияКонтрагента = Неопределено;
		Выполнить("СведенияКонтрагента = ПечатьДокументовУНФ.СведенияОЮрФизЛице(Контрагент, ТекущаяДата(), , , ""uk"");");
		Если ТипЗнч(СведенияКонтрагента) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияКонтрагента);
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "BASУТ" Тогда
		СведенияКонтрагента = Неопределено;
		Выполнить("СведенияКонтрагента = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Контрагент, ТекущаяДата());");
		Если ТипЗнч(СведенияКонтрагента) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияКонтрагента);
			ОфициальноеНаименование = Неопределено;
			Если СведенияКонтрагента.Свойство("ОфициальноеНаименование", ОфициальноеНаименование) Тогда
				Если ЗначениеЗаполнено(ОфициальноеНаименование) Тогда
					СведенияРезультат.ПолноеНаименование = ОфициальноеНаименование;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "BASКУП" Тогда
		СведенияКонтрагента = Неопределено;
		Выполнить("СведенияКонтрагента = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Контрагент, ТекущаяДата());");
		Если ТипЗнч(СведенияКонтрагента) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияКонтрагента);
			ОфициальноеНаименование = Неопределено;
			Если СведенияКонтрагента.Свойство("ОфициальноеНаименование", ОфициальноеНаименование) Тогда
				Если ЗначениеЗаполнено(ОфициальноеНаименование) Тогда
					СведенияРезультат.ПолноеНаименование = ОфициальноеНаименование;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "BASERP"
		или ИДКонфигурации = "BASERP25" Тогда
		СведенияКонтрагента = Неопределено;
		Выполнить("СведенияКонтрагента = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Контрагент, ТекущаяДата());");
		Если ТипЗнч(СведенияКонтрагента) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(СведенияРезультат, СведенияКонтрагента);
			ОфициальноеНаименование = Неопределено;
			Если СведенияКонтрагента.Свойство("ОфициальноеНаименование", ОфициальноеНаименование) Тогда
				Если ЗначениеЗаполнено(ОфициальноеНаименование) Тогда
					СведенияРезультат.ПолноеНаименование = ОфициальноеНаименование;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
	КонецЕсли;
	Возврат СведенияРезультат;
КонецФункции

Функция ПолучитьДанныеПоФизическомуЛицу(ФизЛицо) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("ФизЛицо", ФизЛицо);
	Результат.Вставить("КодПоДРФО", СокрЛП(ФизЛицо.КодПоДРФО));
	
	Запрос = Новый Запрос;
	
	Если Метаданные.НайтиПоПолномуИмени("РегистрСведений.ФИОФизическихЛиц") <> Неопределено Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПОДСТРОКА(ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Имя, """"), 1, 1) + "". "" + ПОДСТРОКА(ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Отчество, """"), 1, 1) + "". "" + ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Фамилия, """") КАК ФИО
		               |ИЗ
		               |	РегистрСведений.ФИОФизическихЛиц.СрезПоследних(, ФизическоеЛицо = &ФизическоеЛицо) КАК ФИОФизическихЛицСрезПоследних";
		Запрос.УстановитьПараметр("ФизическоеЛицо", ФизЛицо);
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			Результат.Вставить("ФИО", ВыборкаРезультатаЗапроса.ФИО);
		Иначе
			Результат.Вставить("ФИО", "");
		КонецЕсли;
	ИначеЕсли Метаданные.НайтиПоПолномуИмени("РегистрСведений.ФИОФизЛиц") <> Неопределено Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПОДСТРОКА(ЕСТЬNULL(ФИОФизЛицСрезПоследних.Имя, """"), 1, 1) + "". "" + ПОДСТРОКА(ЕСТЬNULL(ФИОФизЛицСрезПоследних.Отчество, """"), 1, 1) + "". "" + ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия, """") КАК ФИО
		               |ИЗ
		               |	РегистрСведений.ФИОФизЛиц.СрезПоследних(, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних";
		Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Если ВыборкаРезультатаЗапроса.Следующий() Тогда
			Результат.Вставить("ФИО", ВыборкаРезультатаЗапроса.ФИО);
		Иначе
			Результат.Вставить("ФИО", "");
		КонецЕсли;
	Иначе
		Результат.Вставить("ФИО", "");
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьФизическоеЛицоПоДРФО(КодПоДРФО) Экспорт
	Если КодПоДРФО = "" Тогда
		Возврат ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФизическиеЛица.Ссылка
	               |ИЗ
	               |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |ГДЕ
	               |	ФизическиеЛица.КодПоДРФО = &КодПоДРФО
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ФизическиеЛица.ПометкаУдаления";
	Запрос.УстановитьПараметр("КодПоДРФО", КодПоДРФО);
	
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		Возврат ВыборкаРезультатаЗапроса.Ссылка;
	Иначе
		Возврат ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
	КонецЕсли;
КонецФункции

Функция ПолучитьРезультатФункцииПечатьДокумента(ВхИсх, ВидЭлектронногоДокумента, Документ1С) Экспорт
	ИДКонфигурации  = скEDI_НастройкиПодКонфигурацию.ИДКонфигурации();
	
	Если ИДКонфигурации = "БП"
	ИЛИ ИДКонфигурации = "УТ"
	ИЛИ ИДКонфигурации = "УТП"
	ИЛИ ИДКонфигурации = "УПП" Тогда
	
		Если ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Исходящий") Тогда
			Если ВидЭлектронногоДокумента.ТипДокумента = ПредопределенноеЗначение("Перечисление.скEDI_ТипыЭлектронныхДокументов.НалоговаяНакладная") Тогда
				ИспользоватьДанныеЗЦ = Ложь;
				Если ЗначениеЗаполнено(Документ1С.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены) Тогда
					НалоговыйДокументОбъект = Документ1С.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены.ПолучитьОбъект();	
				    ИспользоватьДанныеЗЦ = Истина;
				Иначе
					НалоговыйДокументОбъект = Документ1С.ПолучитьОбъект();
				КонецЕсли;
				Попытка
					СтруктураПараметров = НалоговыйДокументОбъект.ПечатьДокумента(Истина);
					Если ИспользоватьДанныеЗЦ Тогда
						ДанныеШапки = СтруктураПараметров.НалоговыйДокументЗЦ;
					Иначе	
						ДанныеШапки = СтруктураПараметров.НалоговыйДокумент;
					КонецЕсли;
					Возврат ДанныеШапки;
				Исключение
				КонецПопытки;
			ИначеЕсли ВидЭлектронногоДокумента.ТипДокумента = ПредопределенноеЗначение("Перечисление.скEDI_ТипыЭлектронныхДокументов.Приложение2КНалоговойНакладной") Тогда
				НалоговыйДокументОбъект = Документ1С.ПолучитьОбъект();
				Попытка
					СтруктураПараметров = НалоговыйДокументОбъект.ПечатьДокумента(Истина);
					ДанныеШапки = СтруктураПараметров.НалоговыйДокумент;
					Возврат ДанныеШапки;
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИДКонфигурации = "БП20"
		ИЛИ ИДКонфигурации = "УТ30"
		ИЛИ ИДКонфигурации = "УТ31"
		ИЛИ ИДКонфигурации = "БП20ИНАГРО"
		ИЛИ ИДКонфигурации = "BASУТ"
		ИЛИ ИДКонфигурации = "BASКУП"
		ИЛИ ИДКонфигурации = "BASERP"
		ИЛИ ИДКонфигурации = "BASERP25"
		//ИЛИ ИДКонфигурации = "FlyDoc" 
		Тогда
		
		Если ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Исходящий") Тогда
			Если ВидЭлектронногоДокумента.ТипДокумента = ПредопределенноеЗначение("Перечисление.скEDI_ТипыЭлектронныхДокументов.НалоговаяНакладная") Тогда
				ИспользоватьДанныеЗЦ = Ложь;
				
				Если ИДКонфигурации = "BASУТ" ИЛИ ИДКонфигурации = "BASКУП" ИЛИ ИДКонфигурации = "BASERP" ИЛИ ИДКонфигурации = "BASERP25" Тогда
					НалоговыйДокументОбъект = Документ1С;//.ПолучитьОбъект();
				Иначе
					Если ЗначениеЗаполнено(Документ1С.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены) Тогда
						НалоговыйДокументОбъект = Документ1С.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены;//.ПолучитьОбъект();	
						ИспользоватьДанныеЗЦ = Истина;
					Иначе
						НалоговыйДокументОбъект = Документ1С;//.ПолучитьОбъект();
					КонецЕсли;	
				КонецЕсли;
				
				Попытка
					МассивОбъектов = Новый Массив;
					МассивОбъектов.Добавить(НалоговыйДокументОбъект);
					
					Если ИДКонфигурации = "BASУТ" ИЛИ ИДКонфигурации = "BASКУП" ИЛИ ИДКонфигурации = "BASERP" ИЛИ ИДКонфигурации = "BASERP25" Тогда
						
						КоллекцияПечатныхФорм = Неопределено;
						Выполнить("
						|// делаем заглушку, чтобы вписатсья в стандартный механизм печати
						|КоллекцияПечатныхФорм = УправлениеПечатью.ПодготовитьКоллекциюПечатныхФорм(""НалоговаяНакладная"");
						|");
						
						Попытка
							ПараметрыВывода = Неопределено;
							Выполнить("ПараметрыВывода = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();");
							
							Документы.НалоговаяНакладная.Печать(МассивОбъектов, Новый Структура("ТолькоФормироватьСтруктуруПоказателейПечатнойФормы"), КоллекцияПечатныхФорм, Неопределено, ПараметрыВывода);
							
						Исключение
							ТекстОшибкиДляОтладки = ОписаниеОшибки();
							Сообщить(НСТР("ru='Заполнение по данным документа невозможно в данной версии конфигурации. Необходимо обновить конфигурацию!';uk='Заповнення за даними документа неможливо в даній версії конфігурації. Необхідно оновити конфігурацію!'"));
							Возврат Неопределено;
						КонецПопытки;
						
						СтруктураПараметров = КоллекцияПечатныхФорм[0].ТабличныйДокумент; 
						
						Если СтруктураПараметров = Неопределено Тогда
							Возврат Неопределено;
						КонецЕсли;
						
					Иначе
						СтруктураПараметров = Документы.НалоговаяНакладная.ПечатьДокумента(МассивОбъектов, Неопределено, Неопределено, Истина);
					КонецЕсли;
					
					Если ИспользоватьДанныеЗЦ Тогда
						ДанныеШапки = СтруктураПараметров.НалоговыйДокументЗЦ;
					Иначе	
						ДанныеШапки = СтруктураПараметров.НалоговыйДокумент;
					КонецЕсли;
					Возврат ДанныеШапки;
				Исключение
				КонецПопытки;
			ИначеЕсли ВидЭлектронногоДокумента.ТипДокумента = ПредопределенноеЗначение("Перечисление.скEDI_ТипыЭлектронныхДокументов.Приложение2КНалоговойНакладной") Тогда
				НалоговыйДокументОбъект = Документ1С;//.ПолучитьОбъект();
				Попытка
					МассивОбъектов = Новый Массив;
					МассивОбъектов.Добавить(НалоговыйДокументОбъект);
					
					Если ИДКонфигурации = "BASУТ" ИЛИ ИДКонфигурации = "BASКУП" ИЛИ ИДКонфигурации = "BASERP" ИЛИ ИДКонфигурации = "BASERP25" Тогда
						КоллекцияПечатныхФорм = Неопределено;
						Выполнить("
						|// делаем заглушку, чтобы вписатсья в стандартный механизм печати
						|КоллекцияПечатныхФорм = УправлениеПечатью.ПодготовитьКоллекциюПечатныхФорм(""Приложение2КНалоговойНакладной"");
						|");
						
						Попытка
							ПараметрыВывода = Неопределено;
							Выполнить("ПараметрыВывода = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();");
							
							Документы.Приложение2КНалоговойНакладной.Печать(МассивОбъектов, Новый Структура("ТолькоФормироватьСтруктуруПоказателейПечатнойФормы"), КоллекцияПечатныхФорм, Неопределено, ПараметрыВывода);
							
						Исключение
							Сообщить(НСТР("ru='Заполнение по данным документа невозможно в данной версии конфигурации. Необходимо обновить конфигурацию!';uk='Заповнення за даними документа неможливо в даній версії конфігурації. Необхідно оновити конфігурацію!'"));
							Возврат Неопределено;
						КонецПопытки;
						
						СтруктураПараметров = КоллекцияПечатныхФорм[0].ТабличныйДокумент; 
						
						Если СтруктураПараметров = Неопределено Тогда
							Возврат Неопределено;
						КонецЕсли;
					Иначе
						СтруктураПараметров = Документы.Приложение2КНалоговойНакладной.ПечатьПриложения2КНалоговойНакладной(МассивОбъектов, Неопределено, Неопределено, , Истина);
					КонецЕсли;
					
					ДанныеШапки = СтруктураПараметров.НалоговыйДокумент;
					Возврат ДанныеШапки;
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		Возврат Неопределено;
	ИначеЕсли ИДКонфигурации = "УНФ" 
		Тогда
		
		Если ВхИсх = ПредопределенноеЗначение("Перечисление.скEDI_ВхИсхЭлектронныйДокумент.Исходящий") Тогда
			Если ВидЭлектронногоДокумента.ТипДокумента = ПредопределенноеЗначение("Перечисление.скEDI_ТипыЭлектронныхДокументов.НалоговаяНакладная") Тогда
				ИспользоватьДанныеЗЦ = Ложь;
				Если ЗначениеЗаполнено(Документ1С.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены) Тогда
					НалоговыйДокументОбъект = Документ1С.ОсновнаяНалоговаяПриРезервеНомераПриПродажаНижеОбычнойЦены;//.ПолучитьОбъект();	
					ИспользоватьДанныеЗЦ = Истина;
				Иначе
					НалоговыйДокументОбъект = Документ1С;//.ПолучитьОбъект();
				КонецЕсли;
				Попытка
					МассивОбъектов = Новый Массив;
					МассивОбъектов.Добавить(НалоговыйДокументОбъект);
					
					КоллекцияПечатныхФорм = Неопределено;
					Выполнить("
					|// делаем заглушку, чтобы вписатсья в стандартный механизм печати
					|КоллекцияПечатныхФорм = УправлениеПечатью.ПодготовитьКоллекциюПечатныхФорм(""НалоговаяНакладная"");
					|");
					
					Попытка
						ПараметрыВывода = Неопределено;
						Выполнить("ПараметрыВывода = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();");
						
						Документы.НалоговаяНакладная.Печать(МассивОбъектов, Новый Структура("ТолькоФормироватьСтруктуруПоказателейПечатнойФормы"), КоллекцияПечатныхФорм, Неопределено, ПараметрыВывода);
						
					Исключение
						ТекстОшибкиДляОтладки = ОписаниеОшибки();
						Сообщить(НСТР("ru='Заполнение по данным документа невозможно в данной версии конфигурации. Необходимо обновить конфигурацию!';uk='Заповнення за даними документа неможливо в даній версії конфігурації. Необхідно оновити конфігурацію!'"));
						Возврат Неопределено;
					КонецПопытки;
					
					СтруктураПараметров = КоллекцияПечатныхФорм[0].ТабличныйДокумент; 
					
					Если СтруктураПараметров = Неопределено Тогда
						Возврат Неопределено;
					КонецЕсли;
					
					Если ИспользоватьДанныеЗЦ Тогда
						ДанныеШапки = СтруктураПараметров.НалоговыйДокументЗЦ;
					Иначе	
						ДанныеШапки = СтруктураПараметров.НалоговыйДокумент;
					КонецЕсли;
					Возврат ДанныеШапки;
				Исключение
				КонецПопытки;
			ИначеЕсли ВидЭлектронногоДокумента.ТипДокумента = ПредопределенноеЗначение("Перечисление.скEDI_ТипыЭлектронныхДокументов.Приложение2КНалоговойНакладной") Тогда
				НалоговыйДокументОбъект = Документ1С;//.ПолучитьОбъект();
				Попытка
					МассивОбъектов = Новый Массив;
					МассивОбъектов.Добавить(НалоговыйДокументОбъект);
					
					КоллекцияПечатныхФорм = Неопределено;
					Выполнить("
					|// делаем заглушку, чтобы вписатсья в стандартный механизм печати
					|КоллекцияПечатныхФорм = УправлениеПечатью.ПодготовитьКоллекциюПечатныхФорм(""Приложение2КНалоговойНакладной"");
					|");
					
					Попытка
						ПараметрыВывода = Неопределено;
						Выполнить("ПараметрыВывода = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();");
						
						Документы.Приложение2КНалоговойНакладной.Печать(МассивОбъектов, Новый Структура("ТолькоФормироватьСтруктуруПоказателейПечатнойФормы"), КоллекцияПечатныхФорм, Неопределено, ПараметрыВывода);
						
					Исключение
						Сообщить(НСТР("ru='Заполнение по данным документа невозможно в данной версии конфигурации. Необходимо обновить конфигурацию!';uk='Заповнення за даними документа неможливо в даній версії конфігурації. Необхідно оновити конфігурацію!'"));
						Возврат Неопределено;
					КонецПопытки;
					
					СтруктураПараметров = КоллекцияПечатныхФорм[0].ТабличныйДокумент; 
					
					Если СтруктураПараметров = Неопределено Тогда
						Возврат Неопределено;
					КонецЕсли;
					
					ДанныеШапки = СтруктураПараметров.НалоговыйДокумент;
					Возврат ДанныеШапки;
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		Возврат Неопределено;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПолучитьРеквизитыКонтрагентаПоЕДРПОУ(ЕДРПОУ, КодФилиала = "", ПоКодуФилиала = Ложь) Экспорт
	Контрагент = ПолучитьКонтрагентаПоЕДРПОУ(ЕДРПОУ, КодФилиала, ПоКодуФилиала);
	Возврат ПолучитьРеквизитыКонтрагента(Контрагент);
КонецФункции

Функция ПолучитьРеквизитыКонтрагента(Контрагент) Экспорт
	Результат = Новый Структура("Наименование, КодПоЕДРПОУ, КодФилиала, ИНН");
	Если ЗначениеЗаполнено(Контрагент) Тогда
		РеквизитыКонтрагентаМетаданные = Метаданные.Справочники.Контрагенты.Реквизиты;
		
		РеквизитКонтрагентаНаименованиеПолное = РеквизитыКонтрагентаМетаданные.Найти("НаименованиеПолное");		
		ЕстьРеквизитНаименованиеПолное = ?(РеквизитКонтрагентаНаименованиеПолное = Неопределено, Ложь, Истина);
		Если ЕстьРеквизитНаименованиеПолное Тогда
			Результат.Наименование = Контрагент.НаименованиеПолное;
		Иначе
			Результат.Наименование = Контрагент.Наименование;
		КонецЕсли;
		
		РеквизитКонтрагентаКодПоЕДРПОУ = РеквизитыКонтрагентаМетаданные.Найти("КодПоЕДРПОУ");		
		ЕстьРеквизитКодПоЕДРПОУ = ?(РеквизитКонтрагентаКодПоЕДРПОУ = Неопределено, Ложь, Истина);
		Если ЕстьРеквизитКодПоЕДРПОУ Тогда
			Результат.КодПоЕДРПОУ = Контрагент.КодПоЕДРПОУ;
		КонецЕсли;
		
		РеквизитКонтрагентаКодФилиала = РеквизитыКонтрагентаМетаданные.Найти("КодФилиала");		
		ЕстьРеквизитКодФилиала = ?(РеквизитКонтрагентаКодФилиала = Неопределено, Ложь, Истина);
		Если ЕстьРеквизитКодФилиала Тогда
			Результат.КодФилиала = Контрагент.КодФилиала;
		КонецЕсли;
		
		РеквизитКонтрагентаИНН = РеквизитыКонтрагентаМетаданные.Найти("ИНН");		
		ЕстьРеквизитИНН = ?(РеквизитКонтрагентаИНН = Неопределено, Ложь, Истина);
		Если ЕстьРеквизитИНН Тогда
			Результат.ИНН = Контрагент.ИНН;
		Иначе
			РеквизитКонтрагентаИНН = РеквизитыКонтрагентаМетаданные.Найти("ИННПлательщикаНДС");		
			ЕстьРеквизитИНН = ?(РеквизитКонтрагентаИНН = Неопределено, Ложь, Истина);
			Если ЕстьРеквизитИНН Тогда
				Результат.ИНН = Контрагент.ИННПлательщикаНДС;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ТекущийПользовательНаименование() Экспорт
	Попытка
		ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
		Если ЗначениеЗаполнено(ТекПользователь) Тогда
			ТекОтветственный = Неопределено;
			МетаданныеТекПользователь = ТекПользователь.Метаданные();
			Если МетаданныеТекПользователь.Реквизиты.Найти("ФизЛицо") <> Неопределено Тогда
				ТекОтветственный = ТекПользователь.ФизЛицо;
			ИначеЕсли МетаданныеТекПользователь.Реквизиты.Найти("ФизическоеЛицо") <> Неопределено Тогда
				ТекОтветственный = ТекПользователь.ФизическоеЛицо;
			КонецЕсли;
			Если ЗначениеЗаполнено(ТекОтветственный) Тогда
				Возврат Строка(ТекОтветственный);
			Иначе
				Возврат Строка(ТекПользователь);
			КонецЕсли;
		Иначе
			Возврат "";
		КонецЕсли;
	Исключение
		Возврат "";
	КонецПопытки;
КонецФункции

Функция скПолучитьСуммуДокументаСверкаВзаиморасчетов(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики
		|ПОМЕСТИТЬ ОтборПоАналитике
		|ИЗ
		|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
		|ГДЕ
		|	АналитикаУчетаПоПартнерам.Организация = &Ссылка_Организация
		|	И АналитикаУчетаПоПартнерам.Контрагент = &Ссылка_Контрагент
		|	И (АналитикаУчетаПоПартнерам.Партнер = &Ссылка_Партнер
		|			ИЛИ &НеИспользоватьОтборПоПартнеру)
		|	И (АналитикаУчетаПоПартнерам.Договор = &Ссылка_Договор
		|			ИЛИ &НеИспользоватьОтборПоДоговору)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка КАК Документ,
		|	ДанныеДокумента.НомерВходящегоДокумента КАК Номер,
		|	ДанныеДокумента.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		|	ДанныеДокумента.Дата КАК Дата,
		|	ИСТИНА КАК ЭтоВходящийДокумент
		|ПОМЕСТИТЬ ДокументыИнтеркампани
		|ИЗ
		|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Организация = &Ссылка_Организация
		|	И ДанныеДокумента.Контрагент = &Ссылка_Контрагент
		|	И ДанныеДокумента.Дата МЕЖДУ &Ссылка_НачалоПериода И &КонецДняКонецПериода
		|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.Номер,
		|	ДанныеДокумента.ДатаВходящегоДокумента,
		|	ДанныеДокумента.Дата,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Комиссионер = &Ссылка_Организация
		|	И ДанныеДокумента.Контрагент = &Ссылка_Контрагент
		|	И ДанныеДокумента.Дата МЕЖДУ &Ссылка_НачалоПериода И &КонецДняКонецПериода
		|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.НомерВходящегоДокумента,
		|	ДанныеДокумента.ДатаВходящегоДокумента,
		|	ДанныеДокумента.Дата,
		|	ИСТИНА
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.ОрганизацияПолучатель = &Ссылка_Организация
		|	И ДанныеДокумента.Контрагент = &Ссылка_Контрагент
		|	И ДанныеДокумента.Дата МЕЖДУ &Ссылка_НачалоПериода И &КонецДняКонецПериода
		|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.Номер,
		|	ДанныеДокумента.ДатаВходящегоДокумента,
		|	ДанныеДокумента.Дата,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Организация = &Ссылка_Организация
		|	И ДанныеДокумента.Контрагент = &Ссылка_Контрагент
		|	И ДанныеДокумента.Дата МЕЖДУ &Ссылка_НачалоПериода И &КонецДняКонецПериода
		|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСКлиентамиОстаткиИОбороты.Период КАК Период,
		|	ЕСТЬNULL(РасчетыСКлиентамиОстаткиИОбороты.Регистратор, НЕОПРЕДЕЛЕНО) КАК Документ,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА РасчетыСКлиентамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
		|						ТОГДА РасчетыСКлиентамиОстаткиИОбороты.Регистратор.Номер
		|					ИНАЧЕ ЕСТЬNULL(РасчетыСКлиентамиОстаткиИОбороты.Регистратор.НомерВходящегоДокумента, РасчетыСКлиентамиОстаткиИОбороты.Регистратор.Номер)
		|				КОНЕЦ
		|		ИНАЧЕ ДокументыИнтеркампани.Номер
		|	КОНЕЦ КАК Номер,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА РасчетыСКлиентамиОстаткиИОбороты.Регистратор.Дата
		|		ИНАЧЕ ДокументыИнтеркампани.Дата
		|	КОНЕЦ КАК Дата,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА ЕСТЬNULL(РасчетыСКлиентамиОстаткиИОбороты.Регистратор.ДатаВходящегоДокумента, РасчетыСКлиентамиОстаткиИОбороты.Регистратор.Дата)
		|		ИНАЧЕ ДокументыИнтеркампани.Дата
		|	КОНЕЦ КАК ДатаВходящегоДокумента,
		|	РегистрАналитикаУчетаПоПартнерам.Партнер КАК Партнер,
		|	РегистрАналитикаУчетаПоПартнерам.Договор КАК Договор,
		|	РасчетыСКлиентамиОстаткиИОбороты.Валюта КАК Валюта,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА РасчетыСКлиентамиОстаткиИОбороты.Регистратор.НомерВходящегоДокумента ЕСТЬ NULL
		|							ИЛИ РасчетыСКлиентамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
		|						ТОГДА ЛОЖЬ
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|		ИНАЧЕ ДокументыИнтеркампани.ЭтоВходящийДокумент
		|	КОНЕЦ КАК ЭтоВходящийДокумент,
		|	ВЫБОР
		|		КОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаРасход < 0
		|			ТОГДА -РасчетыСКлиентамиОстаткиИОбороты.СуммаРасход
		|		КОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаПриход > 0
		|			ТОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаПриход
		|	КОНЕЦ КАК СуммаДолгПартнера,
		|	ВЫБОР
		|		КОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаПриход < 0
		|			ТОГДА -РасчетыСКлиентамиОстаткиИОбороты.СуммаПриход
		|		КОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаРасход > 0
		|			ТОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаРасход
		|	КОНЕЦ КАК СуммаНашДолг,
		|	РасчетыСКлиентамиОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
		|	РасчетыСКлиентамиОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
		|	ЕСТЬNULL(РеализацияТоваровУслугРеглУчет.Организация, НЕОПРЕДЕЛЕНО) КАК ОрганизацияРеглУчет
		|ПОМЕСТИТЬ ВТ_ДетальныеРасчеты
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами.ОстаткиИОбороты(
		|			&Ссылка_НачалоПериода,
		|			&ГраницаКонецПериода,
		|			Регистратор,
		|			ДвиженияИГраницыПериода,
		|			АналитикаУчетаПоПартнерам В
		|				(ВЫБРАТЬ
		|					ОтборПоАналитике.КлючАналитики
		|				ИЗ
		|					ОтборПоАналитике)) КАК РасчетыСКлиентамиОстаткиИОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
		|		ПО РасчетыСКлиентамиОстаткиИОбороты.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыИнтеркампани КАК ДокументыИнтеркампани
		|		ПО РасчетыСКлиентамиОстаткиИОбороты.Регистратор = ДокументыИнтеркампани.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслугРеглУчет
		|		ПО РасчетыСКлиентамиОстаткиИОбороты.Регистратор = РеализацияТоваровУслугРеглУчет.Ссылка
		|			И (РеализацияТоваровУслугРеглУчет.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
		|			И (&Ссылка_Организация = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетыСПоставщикамиОстаткиИОбороты.Период,
		|	ЕСТЬNULL(РасчетыСПоставщикамиОстаткиИОбороты.Регистратор, НЕОПРЕДЕЛЕНО),
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
		|						ТОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Номер
		|					ИНАЧЕ ЕСТЬNULL(РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.НомерВходящегоДокумента, РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Номер)
		|				КОНЕЦ
		|		ИНАЧЕ ДокументыИнтеркампани.Номер
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Дата
		|		ИНАЧЕ ДокументыИнтеркампани.Дата
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
		|						ТОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Дата
		|					ИНАЧЕ ЕСТЬNULL(РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.ДатаВходящегоДокумента, РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Дата)
		|				КОНЕЦ
		|		ИНАЧЕ ДокументыИнтеркампани.Дата
		|	КОНЕЦ,
		|	РегистрАналитикаУчетаПоПартнерам.Партнер,
		|	РегистрАналитикаУчетаПоПартнерам.Договор,
		|	РасчетыСПоставщикамиОстаткиИОбороты.Валюта,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.НомерВходящегоДокумента ЕСТЬ NULL
		|							ИЛИ РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
		|						ТОГДА ЛОЖЬ
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|		ИНАЧЕ ДокументыИнтеркампани.ЭтоВходящийДокумент
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаРасход < 0
		|			ТОГДА -РасчетыСПоставщикамиОстаткиИОбороты.СуммаРасход
		|		КОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаПриход > 0
		|			ТОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаПриход
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаПриход < 0
		|			ТОГДА -РасчетыСПоставщикамиОстаткиИОбороты.СуммаПриход
		|		КОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаРасход > 0
		|			ТОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаРасход
		|	КОНЕЦ,
		|	РасчетыСПоставщикамиОстаткиИОбороты.СуммаНачальныйОстаток,
		|	РасчетыСПоставщикамиОстаткиИОбороты.СуммаКонечныйОстаток,
		|	ЕСТЬNULL(ПоступлениеТоваровУслугРеглУчет.Организация, НЕОПРЕДЕЛЕНО)
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщиками.ОстаткиИОбороты(
		|			&Ссылка_НачалоПериода,
		|			&ГраницаКонецПериода,
		|			Регистратор,
		|			ДвиженияИГраницыПериода,
		|			АналитикаУчетаПоПартнерам В
		|				(ВЫБРАТЬ
		|					ОтборПоАналитике.КлючАналитики
		|				ИЗ
		|					ОтборПоАналитике)) КАК РасчетыСПоставщикамиОстаткиИОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
		|		ПО РасчетыСПоставщикамиОстаткиИОбороты.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыИнтеркампани КАК ДокументыИнтеркампани
		|		ПО РасчетыСПоставщикамиОстаткиИОбороты.Регистратор = ДокументыИнтеркампани.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслугРеглУчет
		|		ПО РасчетыСПоставщикамиОстаткиИОбороты.Регистратор = ПоступлениеТоваровУслугРеглУчет.Ссылка
		|			И (ПоступлениеТоваровУслугРеглУчет.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет))
		|			И (&Ссылка_Организация = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
		|ГДЕ
		|	(РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ЕСТЬ NULL
		|			ИЛИ НЕ РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.АвансовыйОтчет)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Ссылка,
		|	Расшифровка.НомерВходящегоДокумента,
		|	Расшифровка.ДатаВходящегоДокумента,
		|	Расшифровка.ДатаВходящегоДокумента,
		|	Расшифровка.Поставщик,
		|	ВЫБОР
		|		КОГДА Расшифровка.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА Расшифровка.Заказ
		|		ИНАЧЕ Расшифровка.Заказ.Договор
		|	КОНЕЦ,
		|	Расшифровка.ВалютаВзаиморасчетов,
		|	ИСТИНА,
		|	Расшифровка.СуммаВзаиморасчетов,
		|	0,
		|	0,
		|	0,
		|	НЕОПРЕДЕЛЕНО
		|ИЗ
		|	Документ.АвансовыйОтчет КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ОплатаПоставщикам КАК Расшифровка
		|		ПО (Расшифровка.Ссылка = ДанныеДокумента.Ссылка)
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Организация = &Ссылка_Организация
		|	И Расшифровка.Контрагент = &Ссылка_Контрагент
		|	И ДанныеДокумента.Дата МЕЖДУ &Ссылка_НачалоПериода И &КонецДняКонецПериода
		|	И (&НеИспользоватьОтборПоДоговору
		|			ИЛИ ВЫБОР
		|				КОГДА Расшифровка.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов
		|					ТОГДА Расшифровка.Заказ
		|				ИНАЧЕ Расшифровка.Заказ.Договор
		|			КОНЕЦ = &Ссылка_Договор)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВТ_ДетальныеРасчеты.СуммаДолгПартнера) КАК СуммаДолгПартнера,
		|	СУММА(ВТ_ДетальныеРасчеты.СуммаНашДолг) КАК СуммаНашДолг,
		|	СУММА(ВТ_ДетальныеРасчеты.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
		|	СУММА(ВТ_ДетальныеРасчеты.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток,
		|	ВТ_ДетальныеРасчеты.Период,
		|	ВТ_ДетальныеРасчеты.Номер,
		|	ВТ_ДетальныеРасчеты.Дата,
		|	ВТ_ДетальныеРасчеты.Документ,
		|	ВТ_ДетальныеРасчеты.Валюта.Наименование КАК ВалютаНаименование
		|ИЗ
		|	ВТ_ДетальныеРасчеты КАК ВТ_ДетальныеРасчеты
		|ГДЕ
		|	ВТ_ДетальныеРасчеты.Документ = НЕОПРЕДЕЛЕНО
		|	И ВТ_ДетальныеРасчеты.Валюта = &Валюта
		|	И ВТ_ДетальныеРасчеты.Период <> &Ссылка_НачалоПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДетальныеРасчеты.Период,
		|	ВТ_ДетальныеРасчеты.Номер,
		|	ВТ_ДетальныеРасчеты.Дата,
		|	ВТ_ДетальныеРасчеты.Документ,
		|	ВТ_ДетальныеРасчеты.Валюта.Наименование";
	
	Запрос.УстановитьПараметр("Валюта", Справочники.Валюты.НайтиПоКоду("980"));
	Запрос.УстановитьПараметр("КонецДняКонецПериода", КонецДня(ДокументСсылка.КонецПериода));
	Запрос.УстановитьПараметр("ГраницаКонецПериода", Новый Граница(КонецДня(ДокументСсылка.КонецПериода) + 1, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("НеИспользоватьОтборПоДоговору", ДокументСсылка.Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	Запрос.УстановитьПараметр("НеИспользоватьОтборПоПартнеру", ДокументСсылка.Партнер = Справочники.Партнеры.ПустаяСсылка());
	Запрос.УстановитьПараметр("Ссылка_Договор", ДокументСсылка.Договор);
	Запрос.УстановитьПараметр("Ссылка_Контрагент", ДокументСсылка.Контрагент);
	Запрос.УстановитьПараметр("Ссылка_НачалоПериода", ДокументСсылка.НачалоПериода);
	Запрос.УстановитьПараметр("Ссылка_Организация", ДокументСсылка.Организация);
	Запрос.УстановитьПараметр("Ссылка_Партнер", ДокументСсылка.Партнер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат ?(Выборка.СуммаКонечныйОстаток > 0, Выборка.СуммаКонечныйОстаток, - Выборка.СуммаКонечныйОстаток);
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции	

Функция скПолучитьСуммуДокументаСверкаВзаиморасчетовЕРП25(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики
		|ПОМЕСТИТЬ ОтборПоАналитике
		|ИЗ
		|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
		|ГДЕ
		|	АналитикаУчетаПоПартнерам.Организация = &Ссылка_Организация
		|	И АналитикаУчетаПоПартнерам.Контрагент = &Ссылка_Контрагент
		|	И (АналитикаУчетаПоПартнерам.Партнер = &Ссылка_Партнер
		|			ИЛИ &НеИспользоватьОтборПоПартнеру)
		|	И (АналитикаУчетаПоПартнерам.Договор = &Ссылка_Договор
		|			ИЛИ &НеИспользоватьОтборПоДоговору)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка КАК Документ,
		|	ДанныеДокумента.НомерВходящегоДокумента КАК Номер,
		|	ДанныеДокумента.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		|	ДанныеДокумента.Дата КАК Дата,
		|	ИСТИНА КАК ЭтоВходящийДокумент
		|ПОМЕСТИТЬ ДокументыИнтеркампани
		|ИЗ
		|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Организация = &Ссылка_Организация
		|	И ДанныеДокумента.Контрагент = &Ссылка_Контрагент
		|	И ДанныеДокумента.Дата МЕЖДУ &Ссылка_НачалоПериода И &КонецДняКонецПериода
		|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.Номер,
		|	ДанныеДокумента.ДатаВходящегоДокумента,
		|	ДанныеДокумента.Дата,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Комиссионер = &Ссылка_Организация
		|	И ДанныеДокумента.Контрагент = &Ссылка_Контрагент
		|	И ДанныеДокумента.Дата МЕЖДУ &Ссылка_НачалоПериода И &КонецДняКонецПериода
		|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.НомерВходящегоДокумента,
		|	ДанныеДокумента.ДатаВходящегоДокумента,
		|	ДанныеДокумента.Дата,
		|	ИСТИНА
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.ОрганизацияПолучатель = &Ссылка_Организация
		|	И ДанныеДокумента.Контрагент = &Ссылка_Контрагент
		|	И ДанныеДокумента.Дата МЕЖДУ &Ссылка_НачалоПериода И &КонецДняКонецПериода
		|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.Номер,
		|	ДанныеДокумента.ДатаВходящегоДокумента,
		|	ДанныеДокумента.Дата,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.Организация = &Ссылка_Организация
		|	И ДанныеДокумента.Контрагент = &Ссылка_Контрагент
		|	И ДанныеДокумента.Дата МЕЖДУ &Ссылка_НачалоПериода И &КонецДняКонецПериода
		|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСКлиентамиОстаткиИОбороты.Период КАК Период,
		|	ЕСТЬNULL(РасчетыСКлиентамиОстаткиИОбороты.Регистратор, НЕОПРЕДЕЛЕНО) КАК Документ,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА РасчетыСКлиентамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
		|						ТОГДА РасчетыСКлиентамиОстаткиИОбороты.Регистратор.Номер
		|					ИНАЧЕ ЕСТЬNULL(РасчетыСКлиентамиОстаткиИОбороты.Регистратор.НомерВходящегоДокумента, РасчетыСКлиентамиОстаткиИОбороты.Регистратор.Номер)
		|				КОНЕЦ
		|		ИНАЧЕ ДокументыИнтеркампани.Номер
		|	КОНЕЦ КАК Номер,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА РасчетыСКлиентамиОстаткиИОбороты.Регистратор.Дата
		|		ИНАЧЕ ДокументыИнтеркампани.Дата
		|	КОНЕЦ КАК Дата,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА ЕСТЬNULL(РасчетыСКлиентамиОстаткиИОбороты.Регистратор.ДатаВходящегоДокумента, РасчетыСКлиентамиОстаткиИОбороты.Регистратор.Дата)
		|		ИНАЧЕ ДокументыИнтеркампани.Дата
		|	КОНЕЦ КАК ДатаВходящегоДокумента,
		|	РегистрАналитикаУчетаПоПартнерам.Партнер КАК Партнер,
		|	РегистрАналитикаУчетаПоПартнерам.Договор КАК Договор,
		|	РасчетыСКлиентамиОстаткиИОбороты.Валюта КАК Валюта,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА РасчетыСКлиентамиОстаткиИОбороты.Регистратор.НомерВходящегоДокумента ЕСТЬ NULL
		|							ИЛИ РасчетыСКлиентамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
		|						ТОГДА ЛОЖЬ
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|		ИНАЧЕ ДокументыИнтеркампани.ЭтоВходящийДокумент
		|	КОНЕЦ КАК ЭтоВходящийДокумент,
		|	ВЫБОР
		|		КОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаРасход < 0
		|			ТОГДА -РасчетыСКлиентамиОстаткиИОбороты.СуммаРасход
		|		КОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаПриход > 0
		|			ТОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаПриход
		|	КОНЕЦ КАК СуммаДолгПартнера,
		|	ВЫБОР
		|		КОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаПриход < 0
		|			ТОГДА -РасчетыСКлиентамиОстаткиИОбороты.СуммаПриход
		|		КОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаРасход > 0
		|			ТОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаРасход
		|	КОНЕЦ КАК СуммаНашДолг,
		|	РасчетыСКлиентамиОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
		|	РасчетыСКлиентамиОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
		|	ЕСТЬNULL(РеализацияТоваровУслугРеглУчет.Организация, НЕОПРЕДЕЛЕНО) КАК ОрганизацияРеглУчет
		|ПОМЕСТИТЬ ВТ_ДетальныеРасчеты
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами.ОстаткиИОбороты(
		|			&Ссылка_НачалоПериода,
		|			&ГраницаКонецПериода,
		|			Регистратор,
		|			ДвиженияИГраницыПериода,
		|			АналитикаУчетаПоПартнерам В
		|				(ВЫБРАТЬ
		|					ОтборПоАналитике.КлючАналитики
		|				ИЗ
		|					ОтборПоАналитике)) КАК РасчетыСКлиентамиОстаткиИОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
		|		ПО РасчетыСКлиентамиОстаткиИОбороты.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыИнтеркампани КАК ДокументыИнтеркампани
		|		ПО РасчетыСКлиентамиОстаткиИОбороты.Регистратор = ДокументыИнтеркампани.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслугРеглУчет
		|		ПО РасчетыСКлиентамиОстаткиИОбороты.Регистратор = РеализацияТоваровУслугРеглУчет.Ссылка
		|			И (РеализацияТоваровУслугРеглУчет.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
		|			И (&Ссылка_Организация = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетыСПоставщикамиОстаткиИОбороты.Период,
		|	ЕСТЬNULL(РасчетыСПоставщикамиОстаткиИОбороты.Регистратор, НЕОПРЕДЕЛЕНО),
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
		|						ТОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Номер
		|					ИНАЧЕ ЕСТЬNULL(РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.НомерВходящегоДокумента, РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Номер)
		|				КОНЕЦ
		|		ИНАЧЕ ДокументыИнтеркампани.Номер
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Дата
		|		ИНАЧЕ ДокументыИнтеркампани.Дата
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
		|						ТОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Дата
		|					ИНАЧЕ ЕСТЬNULL(РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.ДатаВходящегоДокумента, РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Дата)
		|				КОНЕЦ
		|		ИНАЧЕ ДокументыИнтеркампани.Дата
		|	КОНЕЦ,
		|	РегистрАналитикаУчетаПоПартнерам.Партнер,
		|	РегистрАналитикаУчетаПоПартнерам.Договор,
		|	РасчетыСПоставщикамиОстаткиИОбороты.Валюта,
		|	ВЫБОР
		|		КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.НомерВходящегоДокумента ЕСТЬ NULL
		|							ИЛИ РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
		|						ТОГДА ЛОЖЬ
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|		ИНАЧЕ ДокументыИнтеркампани.ЭтоВходящийДокумент
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаРасход < 0
		|			ТОГДА -РасчетыСПоставщикамиОстаткиИОбороты.СуммаРасход
		|		КОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаПриход > 0
		|			ТОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаПриход
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаПриход < 0
		|			ТОГДА -РасчетыСПоставщикамиОстаткиИОбороты.СуммаПриход
		|		КОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаРасход > 0
		|			ТОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаРасход
		|	КОНЕЦ,
		|	РасчетыСПоставщикамиОстаткиИОбороты.СуммаНачальныйОстаток,
		|	РасчетыСПоставщикамиОстаткиИОбороты.СуммаКонечныйОстаток,
		|	ЕСТЬNULL(ПоступлениеТоваровУслугРеглУчет.Организация, НЕОПРЕДЕЛЕНО)
		|ИЗ
		|	РегистрНакопления.РасчетыСПоставщиками.ОстаткиИОбороты(
		|			&Ссылка_НачалоПериода,
		|			&ГраницаКонецПериода,
		|			Регистратор,
		|			ДвиженияИГраницыПериода,
		|			АналитикаУчетаПоПартнерам В
		|				(ВЫБРАТЬ
		|					ОтборПоАналитике.КлючАналитики
		|				ИЗ
		|					ОтборПоАналитике)) КАК РасчетыСПоставщикамиОстаткиИОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
		|		ПО РасчетыСПоставщикамиОстаткиИОбороты.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыИнтеркампани КАК ДокументыИнтеркампани
		|		ПО РасчетыСПоставщикамиОстаткиИОбороты.Регистратор = ДокументыИнтеркампани.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПоступлениеТоваровУслугРеглУчет
		|		ПО РасчетыСПоставщикамиОстаткиИОбороты.Регистратор = ПоступлениеТоваровУслугРеглУчет.Ссылка
		|			И (ПоступлениеТоваровУслугРеглУчет.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет))
		|			И (&Ссылка_Организация = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
		|ГДЕ
		|	(РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ЕСТЬ NULL
		|			ИЛИ НЕ РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.АвансовыйОтчет)
		//|
		//|ОБЪЕДИНИТЬ ВСЕ
		//|
		//|ВЫБРАТЬ
		//|	ДанныеДокумента.Дата,
		//|	ДанныеДокумента.Ссылка,
		//|	Расшифровка.НомерВходящегоДокумента,
		//|	Расшифровка.ДатаВходящегоДокумента,
		//|	Расшифровка.ДатаВходящегоДокумента,
		//|	Расшифровка.Поставщик,
		//|	ВЫБОР
		//|		КОГДА Расшифровка.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов
		//|			ТОГДА Расшифровка.Заказ
		//|		ИНАЧЕ Расшифровка.Заказ.Договор
		//|	КОНЕЦ,
		//|	Расшифровка.ВалютаВзаиморасчетов,
		//|	ИСТИНА,
		//|	Расшифровка.СуммаВзаиморасчетов,
		//|	0,
		//|	0,
		//|	0,
		//|	НЕОПРЕДЕЛЕНО
		//|ИЗ
		//|	Документ.АвансовыйОтчет КАК ДанныеДокумента
		//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ОплатаПоставщикам КАК Расшифровка
		//|		ПО (Расшифровка.Ссылка = ДанныеДокумента.Ссылка)
		//|ГДЕ
		//|	ДанныеДокумента.Проведен
		//|	И ДанныеДокумента.Организация = &Ссылка_Организация
		//|	И Расшифровка.Контрагент = &Ссылка_Контрагент
		//|	И ДанныеДокумента.Дата МЕЖДУ &Ссылка_НачалоПериода И &КонецДняКонецПериода
		//|	И (&НеИспользоватьОтборПоДоговору
		//|			ИЛИ ВЫБОР
		//|				КОГДА Расшифровка.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов
		//|					ТОГДА Расшифровка.Заказ
		//|				ИНАЧЕ Расшифровка.Заказ.Договор
		//|			КОНЕЦ = &Ссылка_Договор)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВТ_ДетальныеРасчеты.СуммаДолгПартнера) КАК СуммаДолгПартнера,
		|	СУММА(ВТ_ДетальныеРасчеты.СуммаНашДолг) КАК СуммаНашДолг,
		|	СУММА(ВТ_ДетальныеРасчеты.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
		|	СУММА(ВТ_ДетальныеРасчеты.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток,
		|	ВТ_ДетальныеРасчеты.Период,
		|	ВТ_ДетальныеРасчеты.Номер,
		|	ВТ_ДетальныеРасчеты.Дата,
		|	ВТ_ДетальныеРасчеты.Документ,
		|	ВТ_ДетальныеРасчеты.Валюта.Наименование КАК ВалютаНаименование
		|ИЗ
		|	ВТ_ДетальныеРасчеты КАК ВТ_ДетальныеРасчеты
		|ГДЕ
		|	ВТ_ДетальныеРасчеты.Документ = НЕОПРЕДЕЛЕНО
		|	И ВТ_ДетальныеРасчеты.Валюта = &Валюта
		|	И ВТ_ДетальныеРасчеты.Период <> &Ссылка_НачалоПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДетальныеРасчеты.Период,
		|	ВТ_ДетальныеРасчеты.Номер,
		|	ВТ_ДетальныеРасчеты.Дата,
		|	ВТ_ДетальныеРасчеты.Документ,
		|	ВТ_ДетальныеРасчеты.Валюта.Наименование";
	
	Запрос.УстановитьПараметр("Валюта", Справочники.Валюты.НайтиПоКоду("980"));
	Запрос.УстановитьПараметр("КонецДняКонецПериода", КонецДня(ДокументСсылка.КонецПериода));
	Запрос.УстановитьПараметр("ГраницаКонецПериода", Новый Граница(КонецДня(ДокументСсылка.КонецПериода) + 1, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("НеИспользоватьОтборПоДоговору", ДокументСсылка.Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	Запрос.УстановитьПараметр("НеИспользоватьОтборПоПартнеру", ДокументСсылка.Партнер = Справочники.Партнеры.ПустаяСсылка());
	Запрос.УстановитьПараметр("Ссылка_Договор", ДокументСсылка.Договор);
	Запрос.УстановитьПараметр("Ссылка_Контрагент", ДокументСсылка.Контрагент);
	Запрос.УстановитьПараметр("Ссылка_НачалоПериода", ДокументСсылка.НачалоПериода);
	Запрос.УстановитьПараметр("Ссылка_Организация", ДокументСсылка.Организация);
	Запрос.УстановитьПараметр("Ссылка_Партнер", ДокументСсылка.Партнер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат ?(Выборка.СуммаКонечныйОстаток > 0, Выборка.СуммаКонечныйОстаток, - Выборка.СуммаКонечныйОстаток);
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции	

Функция ПолучитьПрикрепленныеФайлы(Документ1С) Экспорт
	Результат = Новый Массив;
	ИДКонфигурации = ИДКонфигурации();
	//ТипДокумента = ТипЗнч(Документ1С);
	//МетаданныеДокумента1С = Документ1С.Метаданные();
	Если ИДКонфигурации = "БП" Тогда
	ИначеЕсли ИДКонфигурации = "БП20" Тогда
	ИначеЕсли ИДКонфигурации = "УТП" Тогда
	ИначеЕсли ИДКонфигурации = "УПП" Тогда
	ИначеЕсли ИДКонфигурации = "УТ" Тогда
	ИначеЕсли ИДКонфигурации = "БП20ИНАГРО" Тогда
	ИначеЕсли ИДКонфигурации = "BASУТ" ИЛИ ИДКонфигурации = "BASКУП" ИЛИ ИДКонфигурации = "BASERP" ИЛИ ИДКонфигурации = "BASERP25" Тогда
	ИначеЕсли ИДКонфигурации = "УНФ" Тогда
	ИначеЕсли ИДКонфигурации = "BASДокументооборотКОРП" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Файлы.Ссылка,
		               |	Файлы.Наименование,
		               |	Файлы.ПолноеНаименование,
		               |	Файлы.Описание
		               |ИЗ
		               |	Справочник.Файлы КАК Файлы
		               |ГДЕ
		               |	Файлы.ВладелецФайла = &ВладелецФайла";
		Запрос.УстановитьПараметр("ВладелецФайла", Документ1С);
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
			Результат.Добавить(ВыборкаРезультатаЗапроса.Ссылка);
		КонецЦикла;
	ИначеЕсли ИДКонфигурации = "ДокументооборотДляУкраиныКОРП" Тогда
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ПрикрепленныйФайлПоместитьВоВременноеХранилище(ФайлСсылка, ИдентификаторФормы, ИмяФайла, Адрес) Экспорт
	ИДКонфигурации = ИДКонфигурации();
	Если ИДКонфигурации = "БП" Тогда
	ИначеЕсли  ИДКонфигурации = "БП20" Тогда
	ИначеЕсли ИДКонфигурации = "УТП" Тогда
	ИначеЕсли ИДКонфигурации = "УПП" Тогда
	ИначеЕсли ИДКонфигурации = "УТ" Тогда
	ИначеЕсли ИДКонфигурации = "БП20ИНАГРО" Тогда
	ИначеЕсли ИДКонфигурации = "BASУТ" ИЛИ ИДКонфигурации = "BASКУП" ИЛИ ИДКонфигурации = "BASERP" ИЛИ ИДКонфигурации = "BASERP25" Тогда
	ИначеЕсли ИДКонфигурации = "УНФ" Тогда
	ИначеЕсли ИДКонфигурации = "BASДокументооборотКОРП" Тогда
		ДанныеФайла = Неопределено;
		Выполнить("ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайлаИДвоичныеДанные(ФайлСсылка, , , ИдентификаторФормы)"); 
		ИмяФайла = ДанныеФайла.ДанныеФайла.ПолноеНаименованиеВерсии + "." + ДанныеФайла.ДанныеФайла.Расширение;
		Адрес = ДанныеФайла.ДвоичныеДанные;
		Возврат Истина;
	ИначеЕсли ИДКонфигурации = "ДокументооборотДляУкраиныКОРП" Тогда
	КонецЕсли;
	Возврат Ложь;
КонецФункции

Функция ПрикрепитьФайлы(ЭлектронныйДокумент, Документ1С, ПрикреплятьВложеныеФайлы, ПрикреплятьИзображениеДокументаPDF) Экспорт
	ИДКонфигурации = ИДКонфигурации();
	Если ИДКонфигурации = "БП" Тогда
	ИначеЕсли ИДКонфигурации = "УТП" Тогда
	ИначеЕсли ИДКонфигурации = "УПП" Тогда
	ИначеЕсли ИДКонфигурации = "УТ" Тогда
	ИначеЕсли ИДКонфигурации = "БП20ИНАГРО" Тогда
	ИначеЕсли ИДКонфигурации = "BASУТ" ИЛИ ИДКонфигурации = "BASКУП" ИЛИ ИДКонфигурации = "BASERP" ИЛИ ИДКонфигурации = "BASERP25" Тогда
	ИначеЕсли ИДКонфигурации = "УНФ" Тогда
	ИначеЕсли ИДКонфигурации = "BASДокументооборотКОРП" Тогда
		
		Если ЗначениеЗаполнено(Документ1С) Тогда
			Если ПрикреплятьИзображениеДокументаPDF Тогда
				ВидЭлектронногоДокумента = ЭлектронныйДокумент.ВидЭлектронногоДокумента;
				ТекИмяФайла = ВидЭлектронногоДокумента.Наименование + " №" + СокрЛП(ЭлектронныйДокумент.НомерДокумента) + " від " + Формат(ЭлектронныйДокумент.ДатаДокумента, "ДФ=dd.MM.yyyy");
				ТекИмяФайла = СтрЗаменить(ТекИмяФайла, "/", "_");
				ТекИмяФайла = СтрЗаменить(ТекИмяФайла, "\", "_");
				ТекИмяФайла = СтрЗаменить(ТекИмяФайла, ":", "_");
				ТекИмяФайла = СтрЗаменить(ТекИмяФайла, "*", "_");
				ТекИмяФайла = СтрЗаменить(ТекИмяФайла, "<", "_");
				ТекИмяФайла = СтрЗаменить(ТекИмяФайла, ">", "_");
				ТекИмяФайла = СтрЗаменить(ТекИмяФайла, "|", "_");
				
				СодержаниеЭлектронногоДокумента = скEDI_ОбщегоНазначения.ПолучитьПоследнееСодержаниеЭлектронногоДокумента(ЭлектронныйДокумент);
				Если СодержаниеЭлектронногоДокумента <> Неопределено Тогда
					//ТелоДокумента = СодержаниеЭлектронногоДокумента.ТелоДокумента;
					
					//Если ЗначениеЗаполнено(ТелоДокумента) Тогда
						пПредставлениеЭлектронногоДокументаPDF = "";
						пОтображениеМассивКартинок = Неопределено;
						скEDI_ОбщегоНазначения.ПолучитьСодержимоеПоЭлектронномуДокументу(ЭлектронныйДокумент.Организация, ВидЭлектронногоДокумента.ТипДокумента, ЭлектронныйДокумент, СодержаниеЭлектронногоДокумента, Истина, Ложь, Ложь, пПредставлениеЭлектронногоДокументаPDF, пОтображениеМассивКартинок, Неопределено, Неопределено, "");

						Если ЗначениеЗаполнено(пПредставлениеЭлектронногоДокументаPDF) Тогда
							ИмяБезРасширения = ТекИмяФайла+"_for_print.pdf";
							Расширение = "pdf";
							
							СведенияОФайле = Неопределено;
							Выполнить("СведенияОФайле = РаботаСФайламиКлиентСервер.СведенияОФайле(""ФайлСВерсией"")"); 
							СведенияОФайле.ИмяБезРасширения = ИмяБезРасширения;
							СведенияОФайле.РасширениеБезТочки = Расширение;
							СведенияОФайле.АдресВременногоХранилищаФайла = ПоместитьВоВременноеХранилище(Base64Значение(пПредставлениеЭлектронногоДокументаPDF));
							СведенияОФайле.ВремяИзменения = ТекущаяДата();
							СведенияОФайле.ВремяИзмененияУниверсальное = ТекущаяУниверсальнаяДата();
							
							Приемник = Неопределено;
							Выполнить("Приемник = РаботаСФайламиВызовСервера.СоздатьФайлСВерсией(Документ1С, СведенияОФайле)"); 
						КонецЕсли;
					//КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если ПрикреплятьВложеныеФайлы Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	скEDI_ВложенияЭлектронныхДокументов.ЭлектронныйДокумент,
				               |	скEDI_ВложенияЭлектронныхДокументов.НомерФайла КАК НомерФайла,
				               |	скEDI_ВложенияЭлектронныхДокументов.ВложениеДокумента,
				               |	скEDI_ВложенияЭлектронныхДокументов.ВложениеДокументаХЗ,
				               |	скEDI_ВложенияЭлектронныхДокументов.ИмяФайлаВложениеДокумента,
				               |	скEDI_ВложенияЭлектронныхДокументов.Файл
				               |ИЗ
				               |	РегистрСведений.скEDI_ВложенияЭлектронныхДокументов КАК скEDI_ВложенияЭлектронныхДокументов
				               |ГДЕ
				               |	скEDI_ВложенияЭлектронныхДокументов.ЭлектронныйДокумент = &ЭлектронныйДокумент
				               |
				               |УПОРЯДОЧИТЬ ПО
				               |	НомерФайла";
				Запрос.УстановитьПараметр("ЭлектронныйДокумент", ЭлектронныйДокумент);
				
				ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
				Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
					ВложениеДокумента = ВыборкаРезультатаЗапроса.ВложениеДокумента;
					ИмяФайлаВложениеДокумента = ВыборкаРезультатаЗапроса.ИмяФайлаВложениеДокумента;
					ВложениеДокументаХЗ = ВыборкаРезультатаЗапроса.ВложениеДокументаХЗ.Получить();
					Если ВложениеДокументаХЗ <> Неопределено Тогда
						ВложениеДокумента = Base64Строка(ВложениеДокументаХЗ);
					КонецЕсли;
					
					ИмяБезРасширения = ВыборкаРезультатаЗапроса.ИмяФайлаВложениеДокумента;
					Расширение = "";
					ДлинаИмениФайла = СтрДлина(ИмяБезРасширения);
					Для н = 0 по ДлинаИмениФайла-1 Цикл
						н1 = ДлинаИмениФайла-н;
						Если Сред(ИмяБезРасширения, н1, 1) = "." Тогда
							Расширение = Сред(ИмяБезРасширения, н1+1);
							ИмяБезРасширения = Сред(ИмяБезРасширения, 1, н1-1);
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					СведенияОФайле = Неопределено;
					Выполнить("СведенияОФайле = РаботаСФайламиКлиентСервер.СведенияОФайле(""ФайлСВерсией"")"); 
					СведенияОФайле.ИмяБезРасширения = ИмяБезРасширения;
					СведенияОФайле.РасширениеБезТочки = Расширение;
					СведенияОФайле.АдресВременногоХранилищаФайла = ПоместитьВоВременноеХранилище(Base64Значение(ВложениеДокумента));
					СведенияОФайле.ВремяИзменения = ТекущаяДата();
					СведенияОФайле.ВремяИзмененияУниверсальное = ТекущаяУниверсальнаяДата();
					
					Приемник = Неопределено;
					Выполнить("Приемник = РаботаСФайламиВызовСервера.СоздатьФайлСВерсией(Документ1С, СведенияОФайле)"); 
					
					ВложенияЭлектронныхДокументовМенеджерЗаписи = РегистрыСведений.скEDI_ВложенияЭлектронныхДокументов.СоздатьМенеджерЗаписи();
					ВложенияЭлектронныхДокументовМенеджерЗаписи.ЭлектронныйДокумент = ВыборкаРезультатаЗапроса.ЭлектронныйДокумент;
					ВложенияЭлектронныхДокументовМенеджерЗаписи.НомерФайла = ВыборкаРезультатаЗапроса.НомерФайла;
					ВложенияЭлектронныхДокументовМенеджерЗаписи.Прочитать();
					Если ВложенияЭлектронныхДокументовМенеджерЗаписи.Выбран() Тогда
						ВложенияЭлектронныхДокументовМенеджерЗаписи.Файл = Приемник;
						ВложенияЭлектронныхДокументовМенеджерЗаписи.Записать(Истина);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Возврат Истина;
	ИначеЕсли ИДКонфигурации = "ДокументооборотДляУкраиныКОРП" Тогда
	КонецЕсли;
	Возврат Ложь;
КонецФункции

Функция СоздатьГраницуПоДате(КонецПериода) Экспорт
	Возврат Новый Граница(КонецПериода, ВидГраницы.Исключая);
КонецФункции

