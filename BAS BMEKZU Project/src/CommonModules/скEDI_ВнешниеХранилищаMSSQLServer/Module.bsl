
Функция ПолучитьСоединение(Соединение, ИмяСервера, ИмяПользователя, Пароль, ИмяБазыДанных, ТекстОшибки) Экспорт
	ТекстОшибки = "";
	Если ИмяСервера = "" Тогда
		ТекстОшибки = НСтр("ru = 'Не заполнены параметры подключения'; uk = 'Не заповнено параметри підключення'");
		Возврат Ложь;
	КонецЕсли;
	Если ИмяПользователя = "" Тогда
		ТекстОшибки = НСтр("ru = 'Не заполнены параметры подключения'; uk = 'Не заповнено параметри підключення'");
		Возврат Ложь;
	КонецЕсли;
	
	стрПодключения = "Provider=SQLOLEDB.1"
							+ ";Password=" + Пароль
							+ ";Persist Security Info=True;User ID=" + ИмяПользователя 
							+ ?(ИмяБазыДанных = "", "", ";Initial Catalog=" + ИмяБазыДанных)
							+ ";Data Source=" + ИмяСервера;
						
	Соединение = Новый COMОбъект("ADODB.Connection");
	Попытка
		//Connection.CursorLocation = 3;
		//Соединение.CommandTimeout
		Соединение.Open(стрПодключения);
		Если Соединение.State = 1 Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	исключение
		ТекстОшибки = ОписаниеОшибки();
		Возврат Ложь;
	КонецПопытки;
КонецФункции

Функция ВыполнитьЗапрос(Соединение, ТекстЗапроса, RecordSet, ТекстОшибки, МассивПараметров = Неопределено) Экспорт
	RecordSet = Неопределено;
	ТекстОшибки = "";
	
	Command  = Новый COMОбъект("ADODB.Command");
	//RecordSet  = Новый COMОбъект("ADODB.RecordSet");
	Command.ActiveConnection   = Соединение;
	Command.CommandText = ТекстЗапроса;
	
	Если ТипЗнч(МассивПараметров) = Тип("Массив") Тогда
		Для Каждого ЭлементМассиваПараметров Из МассивПараметров Цикл
			Command.Parameters.Append(ЭлементМассиваПараметров);	
		КонецЦикла;
	КонецЕсли;
	Попытка
		RecordSet = Command.Execute();
		Возврат Истина;
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Возврат Ложь;
	КонецПопытки;
КонецФункции

Функция СоздатьПараметрЗапросаПоBase64(СтрокаBase64, ИмяПараметра)
	ДвоичныеДанныеПоBase64 =  Base64Значение(СтрокаBase64);
	//Если ДвоичныеДанныеПоBase64 = Неопределено Или ДвоичныеДанныеПоBase64.Размер() = 0 Тогда
	//	//Сообщить("Входная строка не является строкой в формате Base64");
	//	Возврат "";
	//КонецЕсли;
	ВремФайл = ПолучитьИмяВременногоФайла();
	ДвоичныеДанныеПоBase64.Записать(ВремФайл);
	
	Поток = Новый COMОбъект("ADODB.Stream");
	Поток.Type = 1;
	Поток.Open();
	Поток.LoadFromFile(ВремФайл);
    ПотокБайт = Новый ComSafeArray(Поток.Read());     //поток двоичных данных 
	Параметр = Новый COMОбъект("ADODB.Parameter"); 
    Параметр.Name = ИмяПараметра;
    Параметр.Direction = 1;// 1 - adParamInput по дефолту 
    Параметр.Type = 205; 
    Параметр.Value = ПотокБайт;
    Параметр.Size = ПотокБайт.GetLength(); 
	УдалитьФайлы(ВремФайл);
	Возврат Параметр;
КонецФункции

Функция ПолучитьBase64СтрокаПоCOMSafeArray(СтрокаBase64, COMSafeArray)
	Если ТипЗнч(COMSafeArray) = Тип("COMSafeArray") Тогда
		//ПотокБайт = Новый ComSafeArray(COMSafeArray);
	    Поток = Новый COMОбъект("ADODB.Stream");
	    Поток.Type = 1;
	    Поток.Open();
		//Поток.Write(ПотокБайт);
		Поток.Write(COMSafeArray);
		
		ВремФайл = ПолучитьИмяВременногоФайла();
		Поток.SaveToFile(ВремФайл, 2);
		ДД = Новый ДвоичныеДанные(ВремФайл);
		СтрокаBase64 = Base64Строка(ДД);
		УдалитьФайлы(ВремФайл);
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Функция СохранитьСодержимоеЭлектронногоДокумента(ВнешнееХранилище, ИдентификаторПоВнешнемуХранилищу, ЭлектронныйДокумент, НомерВерсии,
	ТелоДокумента, ИзображениеДокумента, ВложениеДокумента1, ВложениеДокумента2, ВложениеДокумента3
	) Экспорт
	
	Если ВнешнееХранилище.ТипХранилища <> ПредопределенноеЗначение("Перечисление.скEDI_ТипыВнешнихХранилищСодержимогоЭлектронныхДокументов.MSSQLServer") Тогда
		Возврат Ложь;
	КонецЕсли;
	Если не ВнешнееХранилище.Настроено Тогда
		Возврат Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(ЭлектронныйДокумент) Тогда
		ИдентификаторЭлектронногоДокумента = Строка(ЭлектронныйДокумент.УникальныйИдентификатор());
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Соединение = Неопределено;
	ТекстОшибки = "";
	Если ПолучитьСоединение(Соединение, ВнешнееХранилище.ИмяСервера, ВнешнееХранилище.ИмяПользователя, ВнешнееХранилище.Пароль, ВнешнееХранилище.ИмяБазыДанных, ТекстОшибки) Тогда
		Вер1010 = Ложь;
		Если скEDI_ОбщегоНазначения.СравнитьВерсии(ВнешнееХранилище.Версия, "1.0.1.0") >= 0 Тогда
			Вер1010 = Истина;
		КонецЕсли;
		
		ИдентификаторПоВнешнемуХранилищу = Строка(Новый УникальныйИдентификатор());
		
		ТекстЗапросаПоля = "[RecID]";
		ТекстЗапросаЗначения = "'" + ИдентификаторПоВнешнемуХранилищу + "'";
		
		ТекстЗапросаПоля = ТекстЗапросаПоля + ", [ElectronicDocuments]";
		ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", '" + ИдентификаторЭлектронногоДокумента + "'";
		
		ТекстЗапросаПоля = ТекстЗапросаПоля + ", [Num]";
		ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", " + Формат(НомерВерсии, "ЧН=0; ЧГ=0") + "";
		
		МассивПараметров = Новый Массив;
		Если Вер1010 Тогда
			Если ЗначениеЗаполнено(ТелоДокумента) Тогда
				ТекстЗапросаПоля = ТекстЗапросаПоля + ", [DocBodyIm]";
				ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", ?";
				МассивПараметров.Добавить(СоздатьПараметрЗапросаПоBase64(ТелоДокумента, "@DocBodyIm"));
			КонецЕсли;
			Если ЗначениеЗаполнено(ИзображениеДокумента) Тогда
				ТекстЗапросаПоля = ТекстЗапросаПоля + ", [DocImageIm]";
				ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", ?";
				МассивПараметров.Добавить(СоздатьПараметрЗапросаПоBase64(ИзображениеДокумента, "@DocImageIm"));
			КонецЕсли;
			Если ЗначениеЗаполнено(ВложениеДокумента1) Тогда
				ТекстЗапросаПоля = ТекстЗапросаПоля + ", [AttachmentIm1]";
				ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", ?";
				МассивПараметров.Добавить(СоздатьПараметрЗапросаПоBase64(ВложениеДокумента1, "@AttachmentIm1"));
			КонецЕсли;
			Если ЗначениеЗаполнено(ВложениеДокумента2) Тогда
				ТекстЗапросаПоля = ТекстЗапросаПоля + ", [AttachmentIm2]";
				ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", ?";
				МассивПараметров.Добавить(СоздатьПараметрЗапросаПоBase64(ВложениеДокумента2, "@AttachmentIm2"));
			КонецЕсли;
			Если ЗначениеЗаполнено(ВложениеДокумента3) Тогда
				ТекстЗапросаПоля = ТекстЗапросаПоля + ", [AttachmentIm3]";
				ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", ?";
				МассивПараметров.Добавить(СоздатьПараметрЗапросаПоBase64(ВложениеДокумента3, "@AttachmentIm3"));
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(ТелоДокумента) Тогда
				ТекстЗапросаПоля = ТекстЗапросаПоля + ", [DocBody]";
				ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", '" + ТелоДокумента + "'";
			КонецЕсли;
			Если ЗначениеЗаполнено(ИзображениеДокумента) Тогда
				ТекстЗапросаПоля = ТекстЗапросаПоля + ", [DocImage]";
				ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", '" + ИзображениеДокумента + "'";
			КонецЕсли;
			Если ЗначениеЗаполнено(ВложениеДокумента1) Тогда
				ТекстЗапросаПоля = ТекстЗапросаПоля + ", [Attachment1]";
				ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", '" + ВложениеДокумента1 + "'";
			КонецЕсли;
			Если ЗначениеЗаполнено(ВложениеДокумента2) Тогда
				ТекстЗапросаПоля = ТекстЗапросаПоля + ", [Attachment2]";
				ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", '" + ВложениеДокумента2 + "'";
			КонецЕсли;
			Если ЗначениеЗаполнено(ВложениеДокумента3) Тогда
				ТекстЗапросаПоля = ТекстЗапросаПоля + ", [Attachment3]";
				ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", '" + ВложениеДокумента3 + "'";
			КонецЕсли;
		КонецЕсли;
		ТекстЗапроса = "INSERT INTO [dbo].[scEDI_ContentOfElectronicDocuments](" + ТекстЗапросаПоля + ") VALUES (" + ТекстЗапросаЗначения + ")";
		
		RecordSet = Неопределено;
		Если ВыполнитьЗапрос(Соединение, ТекстЗапроса, RecordSet, ТекстОшибки, МассивПараметров) Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Функция СохранитьСодержимоеДополнительногоЭлектронногоДокументаДФС(ВнешнееХранилище, ИдентификаторПоВнешнемуХранилищу, ЭлектронныйДокумент, ТипСодержимого, ТелоДокумента, ИзображениеДокумента) Экспорт
	
	Если ВнешнееХранилище.ТипХранилища <> ПредопределенноеЗначение("Перечисление.скEDI_ТипыВнешнихХранилищСодержимогоЭлектронныхДокументов.MSSQLServer") Тогда
		Возврат Ложь;
	КонецЕсли;
	Если не ВнешнееХранилище.Настроено Тогда
		Возврат Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(ЭлектронныйДокумент) Тогда
		ИдентификаторЭлектронногоДокумента = Строка(ЭлектронныйДокумент.УникальныйИдентификатор());
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Соединение = Неопределено;
	ТекстОшибки = "";
	Если ПолучитьСоединение(Соединение, ВнешнееХранилище.ИмяСервера, ВнешнееХранилище.ИмяПользователя, ВнешнееХранилище.Пароль, ВнешнееХранилище.ИмяБазыДанных, ТекстОшибки) Тогда
		Вер1010 = Ложь;
		Если скEDI_ОбщегоНазначения.СравнитьВерсии(ВнешнееХранилище.Версия, "1.0.1.0") >= 0 Тогда
			Вер1010 = Истина;
		КонецЕсли;
		
		ИдентификаторПоВнешнемуХранилищу = Строка(Новый УникальныйИдентификатор());
		
		ТекстЗапросаПоля = "[RecID]";
		ТекстЗапросаЗначения = "'" + ИдентификаторПоВнешнемуХранилищу + "'";
		
		ТекстЗапросаПоля = ТекстЗапросаПоля + ", [ElectronicDocuments]";
		ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", '" + ИдентификаторЭлектронногоДокумента + "'";
		
		МассивПараметров = Новый Массив;
		Если Вер1010 Тогда
			Если ЗначениеЗаполнено(ТелоДокумента) Тогда
				ТекстЗапросаПоля = ТекстЗапросаПоля + ", [DocBodyIm]";
				ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", ?";
				МассивПараметров.Добавить(СоздатьПараметрЗапросаПоBase64(ТелоДокумента, "@DocBodyIm"));
			КонецЕсли;
			//Если ЗначениеЗаполнено(ИзображениеДокумента) Тогда
			//	ТекстЗапросаПоля = ТекстЗапросаПоля + ", [DocImageIm]";
			//	ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", ?";
			//	МассивПараметров.Добавить(СоздатьПараметрЗапросаПоBase64(ИзображениеДокумента, "@DocImageIm"));
			//КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(ТелоДокумента) Тогда
				ТекстЗапросаПоля = ТекстЗапросаПоля + ", [DocBody]";
				ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", '" + ТелоДокумента + "'";
			КонецЕсли;
			//Если ЗначениеЗаполнено(ИзображениеДокумента) Тогда
			//	ТекстЗапросаПоля = ТекстЗапросаПоля + ", [DocImage]";
			//	ТекстЗапросаЗначения = ТекстЗапросаЗначения + ", '" + ИзображениеДокумента + "'";
			//КонецЕсли;
		КонецЕсли;
		ТекстЗапроса = "INSERT INTO [dbo].[scEDI_ContentOfAdditionalElectronicDocuments](" + ТекстЗапросаПоля + ") VALUES (" + ТекстЗапросаЗначения + ")";
		
		RecordSet = Неопределено;
		Если ВыполнитьЗапрос(Соединение, ТекстЗапроса, RecordSet, ТекстОшибки, МассивПараметров) Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Функция ПолучитьСодержимоеЭлектронногоДокумента(
	ВнешнееХранилище,
	ЭлектронныйДокумент,
	ИдентификаторПоВнешнемуХранилищу,
	НомерВерсии,
	ТелоДокумента,
	ИзображениеДокумента,
	ВложениеДокумента1,
	ВложениеДокумента2,
	ВложениеДокумента3,
	Ошибка
	) Экспорт

	Если ВнешнееХранилище.ТипХранилища <> ПредопределенноеЗначение("Перечисление.скEDI_ТипыВнешнихХранилищСодержимогоЭлектронныхДокументов.MSSQLServer") Тогда
		Возврат Ложь;
	КонецЕсли;
	Если не ВнешнееХранилище.Настроено Тогда
		Возврат Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(ЭлектронныйДокумент) Тогда
		ИдентификаторЭлектронногоДокумента = Строка(ЭлектронныйДокумент.УникальныйИдентификатор());
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Соединение = Неопределено;
	ТекстОшибки = "";
	Если ПолучитьСоединение(Соединение, ВнешнееХранилище.ИмяСервера, ВнешнееХранилище.ИмяПользователя, ВнешнееХранилище.Пароль, ВнешнееХранилище.ИмяБазыДанных, ТекстОшибки) Тогда
		Вер1010 = Ложь;
		Если скEDI_ОбщегоНазначения.СравнитьВерсии(ВнешнееХранилище.Версия, "1.0.1.0") >= 0 Тогда
			Вер1010 = Истина;
		КонецЕсли;
		//ИдентификаторПоВнешнемуХранилищу = Строка(Новый УникальныйИдентификатор());
		
		ТекстЗапросаУсловие = "[RecID] = '" + ИдентификаторПоВнешнемуХранилищу + "'";
		ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND [ElectronicDocuments] = '" + ИдентификаторЭлектронногоДокумента + "'";
		
		ТекстЗапроса = "SELECT [Num], [DocBody], [DocImage], [Attachment1], [Attachment2], [Attachment3]";
		Если Вер1010 Тогда
			ТекстЗапроса = ТекстЗапроса + ", [DocBodyIm], [DocImageIm], [AttachmentIm1], [AttachmentIm2], [AttachmentIm3]";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + " FROM [dbo].[scEDI_ContentOfElectronicDocuments]";
		ТекстЗапроса = ТекстЗапроса + " WHERE " + ТекстЗапросаУсловие;
		
		RecordSet = Неопределено;
		Если ВыполнитьЗапрос(Соединение, ТекстЗапроса, RecordSet, ТекстОшибки) Тогда
			Если RecordSet.EOF Тогда
				Ошибка = НСтр("ru = 'Во внешнем хранилище запись не обнаружена!'; uk = 'В зовнішньому сховиші запис не виявлено!'");
				Возврат Ложь;
			Иначе
				//НомерВерсии = RecordSet.Fields("Num").Value;
				
				Если Вер1010 Тогда
					ТелоДокументаIm = RecordSet.Fields("DocBodyIm").Value;
					Если не ПолучитьBase64СтрокаПоCOMSafeArray(ТелоДокумента, ТелоДокументаIm) Тогда
						ТелоДокумента = RecordSet.Fields("DocBody").Value;
					КонецЕсли;
					ИзображениеДокументаIm = RecordSet.Fields("DocImageIm").Value;
					Если не ПолучитьBase64СтрокаПоCOMSafeArray(ИзображениеДокумента, ИзображениеДокументаIm) Тогда
						ИзображениеДокумента = RecordSet.Fields("DocImage").Value;
					КонецЕсли;
					ВложениеДокументаIm1 = RecordSet.Fields("AttachmentIm1").Value;
					Если не ПолучитьBase64СтрокаПоCOMSafeArray(ВложениеДокумента1, ВложениеДокументаIm1) Тогда
						ВложениеДокумента1 = RecordSet.Fields("Attachment1").Value;
					КонецЕсли;
					ВложениеДокументаIm2 = RecordSet.Fields("AttachmentIm2").Value;
					Если не ПолучитьBase64СтрокаПоCOMSafeArray(ВложениеДокумента2, ВложениеДокументаIm2) Тогда
						ВложениеДокумента2 = RecordSet.Fields("Attachment2").Value;
					КонецЕсли;
					ВложениеДокументаIm3 = RecordSet.Fields("AttachmentIm3").Value;
					Если не ПолучитьBase64СтрокаПоCOMSafeArray(ВложениеДокумента3, ВложениеДокументаIm3) Тогда
						ВложениеДокумента3 = RecordSet.Fields("Attachment3").Value;
					КонецЕсли;
				Иначе
					ТелоДокумента = RecordSet.Fields("DocBody").Value;
					ИзображениеДокумента = RecordSet.Fields("DocImage").Value;
					ВложениеДокумента1 = RecordSet.Fields("Attachment1").Value;
					ВложениеДокумента2 = RecordSet.Fields("Attachment2").Value;
					ВложениеДокумента3 = RecordSet.Fields("Attachment3").Value;
				КонецЕсли;
				
				Возврат Истина;
			КонецЕсли;
		Иначе
			Ошибка = НСтр("ru = 'Во внешнем хранилище запись не обнаружена!'; uk = 'В зовнішньому сховиші запис не виявлено!'") + Символы.ПС + ТекстОшибки;
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Ошибка = НСтр("ru = 'Подключиться к внешнему хранилищу не удалось!'; uk = 'Підключитись до зовнішнього сховиша не вдалось!'") + Символы.ПС + ТекстОшибки;
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Функция ПолучитьСодержимоеДополнительногоЭлектронногоДокументаДФС(
	ВнешнееХранилище,
	ЭлектронныйДокумент,
	ИдентификаторПоВнешнемуХранилищу,
	ТелоДокумента,
	ИзображениеДокумента,
	Ошибка
	) Экспорт

	Если ВнешнееХранилище.ТипХранилища <> ПредопределенноеЗначение("Перечисление.скEDI_ТипыВнешнихХранилищСодержимогоЭлектронныхДокументов.MSSQLServer") Тогда
		Возврат Ложь;
	КонецЕсли;
	Если не ВнешнееХранилище.Настроено Тогда
		Возврат Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(ЭлектронныйДокумент) Тогда
		ИдентификаторЭлектронногоДокумента = Строка(ЭлектронныйДокумент.УникальныйИдентификатор());
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Соединение = Неопределено;
	ТекстОшибки = "";
	Если ПолучитьСоединение(Соединение, ВнешнееХранилище.ИмяСервера, ВнешнееХранилище.ИмяПользователя, ВнешнееХранилище.Пароль, ВнешнееХранилище.ИмяБазыДанных, ТекстОшибки) Тогда
		Вер1010 = Ложь;
		Если скEDI_ОбщегоНазначения.СравнитьВерсии(ВнешнееХранилище.Версия, "1.0.1.0") >= 0 Тогда
			Вер1010 = Истина;
		КонецЕсли;
		//ИдентификаторПоВнешнемуХранилищу = Строка(Новый УникальныйИдентификатор());
		
		ТекстЗапросаУсловие = "[RecID] = '" + ИдентификаторПоВнешнемуХранилищу + "'";
		ТекстЗапросаУсловие = ТекстЗапросаУсловие + " AND [ElectronicDocuments] = '" + ИдентификаторЭлектронногоДокумента + "'";
		
		ТекстЗапроса = "SELECT [DocBody]";//, [DocImage]";
		Если Вер1010 Тогда
			ТекстЗапроса = ТекстЗапроса + ", [DocBodyIm]";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + " FROM [dbo].[scEDI_ContentOfAdditionalElectronicDocuments]";
		ТекстЗапроса = ТекстЗапроса + " WHERE " + ТекстЗапросаУсловие;
		
		RecordSet = Неопределено;
		Если ВыполнитьЗапрос(Соединение, ТекстЗапроса, RecordSet, ТекстОшибки) Тогда
			Если RecordSet.EOF Тогда
				Ошибка = НСтр("ru = 'Во внешнем хранилище запись не обнаружена!'; uk = 'В зовнішньому сховиші запис не виявлено!'");
				Возврат Ложь;
			Иначе
				//НомерВерсии = RecordSet.Fields("Num").Value;
				Если Вер1010 Тогда
					ТелоДокументаIm = RecordSet.Fields("DocBodyIm").Value;
					Если не ПолучитьBase64СтрокаПоCOMSafeArray(ТелоДокумента, ТелоДокументаIm) Тогда
						ТелоДокумента = RecordSet.Fields("DocBody").Value;
					КонецЕсли;
				Иначе
					ТелоДокумента = RecordSet.Fields("DocBody").Value;
				КонецЕсли;
				ИзображениеДокумента = "";//RecordSet.Fields("DocImage").Value;
				Возврат Истина;
			КонецЕсли;
		Иначе
			Ошибка = НСтр("ru = 'Во внешнем хранилище запись не обнаружена!'; uk = 'В зовнішньому сховиші запис не виявлено!'") + Символы.ПС + ТекстОшибки;
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Ошибка = НСтр("ru = 'Подключиться к внешнему хранилищу не удалось!'; uk = 'Підключитись до зовнішнього сховиша не вдалось!'") + Символы.ПС + ТекстОшибки;
		Возврат Ложь;
	КонецЕсли;
КонецФункции

