

&НаСервере
Процедура ЗаписатьСхемуНалогообложения(СтруктураИнформации)

	
	СсылкаНаОбъект = СтруктураИнформации.Контрагент.Ссылка;
	Отбор = Новый Структура("Контрагент");
	Отбор.Контрагент = СсылкаНаОбъект;
	СрезПоследних = РегистрыСведений.СхемыНалогообложенияКонтрагентов.СрезПоследних(ТекущаяДата(), Отбор);
	
	СтруктураИнформации.Вставить("СхемаНалогообложенияСостояние","");
				
	Если СтруктураИнформации.ПлательщикНДС И СтруктураИнформации.ПлательщикЕдиногоНалога Тогда
		СхемаНалогообложения = Справочники.СхемыНалогообложения.ЕдиныйНалогИНДС;
	ИначеЕсли Не СтруктураИнформации.ПлательщикНДС И Не СтруктураИнформации.ПлательщикЕдиногоНалога Тогда
		СхемаНалогообложения = Справочники.СхемыНалогообложения.НалогНаПрибыль;
		Если СрезПоследних.Количество() > 0 Тогда
			Если Не СрезПоследних[0].СхемаНалогообложения = СхемаНалогообложения Тогда 
				СтруктураИнформации.СхемаНалогообложенияСостояние = "Изменение";	
			КонецЕсли;
		Иначе
			СтруктураИнформации.СхемаНалогообложенияСостояние = "Изменение";	
		КонецЕсли;
	ИначеЕсли СтруктураИнформации.ПлательщикНДС И Не СтруктураИнформации.ПлательщикЕдиногоНалога Тогда
		СхемаНалогообложения = Справочники.СхемыНалогообложения.НалогНаПрибыльИНДС;
	ИначеЕсли Не СтруктураИнформации.ПлательщикНДС И СтруктураИнформации.ПлательщикЕдиногоНалога Тогда
		СхемаНалогообложения = Справочники.СхемыНалогообложения.ЕдиныйНалог;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.СхемыНалогообложенияКонтрагентов.СоздатьНаборЗаписей();
	Если СрезПоследних.Количество() < 1 Тогда
		Если НЕ ЗначениеЗаполнено(СхемаНалогообложения) Тогда
			Возврат;
		Иначе
			ПериодЗаписи = '19800101';
			НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения");
		КонецЕсли;
	Иначе
		Если СхемаНалогообложения = СрезПоследних[0].СхемаНалогообложения Тогда
			Возврат;
		Иначе
			ПериодЗаписи = НачалоМесяца(ТекущаяДата());
		КонецЕсли;
	КонецЕсли;

	НаборЗаписей.Отбор.Период.Установить(ПериодЗаписи);
	НаборЗаписей.Отбор.Контрагент.Установить(СсылкаНаОбъект);
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период 				= ПериодЗаписи;
	Запись.Контрагент 			= СсылкаНаОбъект;
	Запись.СхемаНалогообложения = СхемаНалогообложения;

	Попытка
		НаборЗаписей.Записать();
	Исключение
		ОписаниеОшибки = ИнформацияОбОшибке();
		ТекстСообщения = НСтр("ru='Не удалось записать данные о схеме налогообложения :';uk='Не вдається записати дані про схему оподаткування :'") + " " + ОписаниеОшибки.Описание;
		СтруктураИнформации.СхемаНалогообложенияСостояние = ТекстСообщения;
		ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки.Описание);	
	КонецПопытки;

	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьАдрес(СтруктураИнформации)
	
	Контрагент = СтруктураИнформации.Контрагент;
	
	СтруктураАдрес = Новый Структура;
	СтруктураАдрес.Вставить("Страна",ТРег(СтруктураИнформации.Страна));
	СтруктураАдрес.Вставить("Регион","");
	СтруктураАдрес.Вставить("Район","");
	СтруктураАдрес.Вставить("Город","");
	СтруктураАдрес.Вставить("НаселенныйПункт","");
	СтруктураАдрес.Вставить("Индекс",СтруктураИнформации.Индекс);
	СтруктураАдрес.Вставить("Улица",СтруктураИнформации.Улица);
	СтруктураАдрес.Вставить("Дом",СтруктураИнформации.Дом);
	СтруктураАдрес.Вставить("ТипДома","Дом");
	СтруктураАдрес.Вставить("Квартира",СтруктураИнформации.Квартира);
	СтруктураАдрес.Вставить("ТипКвартиры","Квартира");
	СтруктураАдрес.Вставить("Представление",СтруктураИнформации.Представление);
	
	НаселенныйПунктРаздельно = СтрРазделить(СтруктураИнформации.НаселенныйПункт,",");
	Если НаселенныйПунктРаздельно.Количество() > 0 Тогда
		Если НаселенныйПунктРаздельно.Количество() = 1 Тогда
			СтруктураАдрес.Город = НаселенныйПунктРаздельно[0];
		ИначеЕсли НаселенныйПунктРаздельно.Количество() = 2 Тогда
			СтруктураАдрес.Регион = НаселенныйПунктРаздельно[0];
			СтруктураАдрес.Город = НаселенныйПунктРаздельно[1];
		ИначеЕсли НаселенныйПунктРаздельно.Количество() = 3 Тогда
			СтруктураАдрес.Регион = НаселенныйПунктРаздельно[0];
			СтруктураАдрес.Район = НаселенныйПунктРаздельно[1];
			Если СтрНайти(СтруктураИнформации.НаселенныйПункт,"місто") = 0
				ИЛИ СтрНайти(СтруктураИнформации.НаселенныйПункт,"город") = 0
				ИЛИ СтрНайти(СтруктураИнформации.НаселенныйПункт,"м.") = 0
				ИЛИ СтрНайти(СтруктураИнформации.НаселенныйПункт,"г.") = 0 тогда
				СтруктураАдрес.НаселенныйПункт = НаселенныйПунктРаздельно[2];
			Иначе
				СтруктураАдрес.Город = НаселенныйПунктРаздельно[2];
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
	//СтруктураАдрес.Вставить("Расположение",СтруктураИнформации.registry.location);
	//ПараметрыКонтактнойИнформации.ПараметрыАдреса.ТипПомещения.
	
	СтруктураJSON = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВJSON(СтруктураАдрес, Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Тип",Перечисления.ТипыКонтактнойИнформации.Адрес);
	СтруктураОтбора.Вставить("Вид",Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	МассивАдресов = Контрагент.КонтактнаяИнформация.НайтиСтроки(СтруктураОтбора);
	Если МассивАдресов.Количество() = 0 Тогда
		СтрокаКонтактнаяИнформация = Контрагент.КонтактнаяИнформация.Добавить();
	Иначе
		СтрокаКонтактнаяИнформация = МассивАдресов[0];
	КонецЕсли;	
	
	СтрокаКонтактнаяИнформация.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	СтрокаКонтактнаяИнформация.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
	СтрокаКонтактнаяИнформация.Значение = СтруктураJSON; 
	СтрокаКонтактнаяИнформация.Представление = СтруктураАдрес.Представление;
	СтрокаКонтактнаяИнформация.Страна = СтруктураАдрес.Страна;
	СтрокаКонтактнаяИнформация.Регион = СтруктураАдрес.Регион;
	//СтрокаКонтактнаяИнформация.Район = СтруктураАдрес.Район;
	СтрокаКонтактнаяИнформация.Город = СтруктураАдрес.Город;
	//СтрокаКонтактнаяИнформация.НаселенныйПункт = СтруктураАдрес.НаселенныйПункт;
	Контрагент.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьКонтактныеЛица(СтруктураИнформации)
	
	Контрагент = СтруктураИнформации.Контрагент;
	
	Если Не ПустаяСтрока(СтруктураИнформации.Руководитель) Тогда
		НайденноеКонтактноеЛицо = Справочники.КонтактныеЛица.НайтиПоНаименованию(СтруктураИнформации.Руководитель,Истина,,Контрагент.Ссылка);
		Если НайденноеКонтактноеЛицо.Пустая() Тогда 
			КонтактноеЛицо = Справочники.КонтактныеЛица.СоздатьЭлемент();
		Иначе
			КонтактноеЛицо = НайденноеКонтактноеЛицо.ПолучитьОбъект();
		КонецЕсли;
		КонтактноеЛицо.ВидКонтактногоЛица = Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента;
		КонтактноеЛицо.ОбъектВладелец = Контрагент.Ссылка;
		КонтактноеЛицо.Должность = "Керівник";
		КонтактноеЛицо.Роль = Справочники.РолиКонтактныхЛиц.НайтиПоНаименованию("Керівник");
		МассивФИО = СтрРазделить(СтруктураИнформации.Руководитель," ");
		Если МассивФИО.Количество() = 3 Тогда
			КонтактноеЛицо.Фамилия = МассивФИО[0]; 	
			КонтактноеЛицо.Имя = МассивФИО[1]; 	
			КонтактноеЛицо.Отчество = МассивФИО[2];
		КонецЕсли;
		КонтактноеЛицо.Наименование = СтруктураИнформации.Руководитель;
		КонтактноеЛицо.Записать();
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ОтветственныеЛицаКонтрагентов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Контрагент.Установить(Контрагент.Ссылка);
	НаборЗаписей.Отбор.ОтветственноеЛицо.Установить(Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	НаборЗаписей.Прочитать();
	фНужноДобавить=Истина;
	Если НаборЗаписей.Количество() > 0 Тогда 
		ТекЗапись=НаборЗаписей[0];
		Если ТекЗапись.КонтактноеЛицо=КонтактноеЛицо.Ссылка Тогда
			фНужноДобавить=Ложь;
		КонецЕсли;
	КонецЕсли;
	Если фНужноДобавить Тогда
		ТекЗапись=НаборЗаписей.Добавить();
		ТекЗапись.Период=ТекущаяДата();
		ТекЗапись.Контрагент=Контрагент.Ссылка;
		ТекЗапись.ОтветственноеЛицо=Перечисления.ОтветственныеЛицаОрганизаций.Руководитель;
		ТекЗапись.КонтактноеЛицо=КонтактноеЛицо.Ссылка;
		ТекЗапись.Активность=Истина;
		НаборЗаписей.Записать();
	КонецЕсли;
	
	Контрагент.ОсновноеКонтактноеЛицо = КонтактноеЛицо.Ссылка;
    Контрагент.Записать();

КонецПроцедуры

&НаСервере
Процедура ЗаписатьКонтактнуюИнформацию(СтруктураИнформации)
	
	Контрагент = СтруктураИнформации.Контрагент;
	
	ЭлектроннаяПочта = СтруктураИнформации.ЭлектроннаяПочта;
	Если Не ПустаяСтрока(ЭлектроннаяПочта) Тогда
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Тип",Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		СтруктураОтбора.Вставить("Вид",Справочники.ВидыКонтактнойИнформации.EmailКонтрагенты);
		Массив = Контрагент.КонтактнаяИнформация.НайтиСтроки(СтруктураОтбора);
		Если Массив.Количество() = 0 тогда
			КонтактнаяИнформация = Контрагент.КонтактнаяИнформация.Добавить();	
			КонтактнаяИнформация.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
			КонтактнаяИнформация.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтрагенты;
		Иначе
			КонтактнаяИнформация = Массив[0];
		КонецЕсли;
			КонтактнаяИнформация.Представление = ЭлектроннаяПочта;
			КонтактнаяИнформация.АдресЭП = ЭлектроннаяПочта;
	КонецЕсли;
	
	Телефоны = СтруктураИнформации.Телефоны;
	Для каждого Телефон Из Телефоны Цикл
		Если Не ПустаяСтрока(Телефон) Тогда
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Тип",Перечисления.ТипыКонтактнойИнформации.Телефон);
			СтруктураОтбора.Вставить("Вид",Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
			Массив = Контрагент.КонтактнаяИнформация.НайтиСтроки(СтруктураОтбора);
			Если Массив.Количество() = 0 Тогда
				КонтактнаяИнформация = Контрагент.КонтактнаяИнформация.Добавить();	
				КонтактнаяИнформация.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
				КонтактнаяИнформация.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
			Иначе
				КонтактнаяИнформация = Массив[0];
			КонецЕсли;
			КонтактнаяИнформация.Представление = Телефон;
			КонтактнаяИнформация.НомерТелефона = Телефон;
		КонецЕсли;
	КонецЦикла; 
	Контрагент.Записать();
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьОсновныеДанные(СтруктураИнформации)
	
	Контрагент = СтруктураИнформации.Контрагент;
	
	Контрагент.Наименование = СтруктураИнформации.Наименование;
	Контрагент.НаименованиеПолное = СтруктураИнформации.НаименованиеПолное;
	Контрагент.КодПоЕДРПОУ = СтруктураИнформации.КодПоЕДРПОУ;
	Контрагент.ИНН = СтруктураИнформации.ИНН;
	Если СтруктураИнформации.ЮридическоеФизическоеЛицо = "ЮридическоеЛицо" Тогда
		Контрагент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	Иначе
		Контрагент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	КонецЕсли;
	Контрагент.Записать();
	

	ЗаписатьСхемуНалогообложения(СтруктураИнформации);

	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ЗаписатьДополнительныеДанные(СтруктураИнформации)

	ЗаписатьКонтактныеЛица(СтруктураИнформации);
	ЗаписатьАдрес(СтруктураИнформации);
	ЗаписатьКонтактнуюИнформацию(СтруктураИнформации);

КонецПроцедуры

&НаСервере
Функция ЗаписатьДанныеВКарточкуКонтрагента(АдресХранилища) Экспорт
	
	СтруктураИнформации = ПолучитьИзВременногоХранилища(АдресХранилища);
	УдалитьИзВременногоХранилища(АдресХранилища);

	СтруктураРезультатаЗаполнения = Новый Структура;
	СтруктураРезультатаЗаполнения.Вставить("Результат",Истина);
	Если СтруктураИнформации.Контрагент = Неопределено 
		Или СтруктураИнформации.Контрагент.Пустая() Тогда
		Контрагент = Справочники.Контрагенты.СоздатьЭлемент();
	Иначе
		Контрагент = СтруктураИнформации.Контрагент.ПолучитьОбъект();
	КонецЕсли;
	СтруктураИнформации.Контрагент = Контрагент;

	Если Не ЗаписатьОсновныеДанные(СтруктураИнформации) Тогда
		СтруктураРезультатаЗаполнения.Результат = Ложь;
	КонецЕсли;
	СхемаНалогообложенияСостояние = ОпендатаботЗаполнениеКонтрагентаСервер.ПолучитьПолеСтруктуры(СтруктураИнформации,"СхемаНалогообложенияСостояние");
	Если Не СхемаНалогообложенияСостояние = "" Тогда
		СтруктураРезультатаЗаполнения.Вставить("СхемаНалогообложенияСостояние",СхемаНалогообложенияСостояние);
	КонецЕсли;
	Если Не СтруктураРезультатаЗаполнения.Результат = Ложь Тогда
		ЗаписатьДополнительныеДанные(СтруктураИнформации);
	КонецЕсли;
	
	СтруктураРезультатаЗаполнения.Вставить("Контрагент",СтруктураИнформации.Контрагент.Ссылка);
	
	Возврат СтруктураРезультатаЗаполнения;
	
КонецФункции

&НаСервере
Процедура СообщитьОЗаполненииКарточкиКонтрагента(РезультатЗаполнения) Экспорт
	
	Если ОпендатаботЗаполнениеКонтрагентаСервер.ПолучитьПолеСтруктуры(РезультатЗаполнения,"СхемаНалогообложенияСостояние") = "" Тогда
		ТекстСообщения = НСтр("ru='Карточка контрагента заполнена.';uk='Картка контрагента заповнена.'");
	ИначеЕсли ОпендатаботЗаполнениеКонтрагентаСервер.ПолучитьПолеСтруктуры(РезультатЗаполнения,"СхемаНалогообложенияСостояние") = "Изменение" Тогда
		ТекстСообщения = НСтр("
		|ru='По информации из сервиса нет возможности определить, является ли контрагент неприбыльной организацией. 
		|Информация о том, что контрагент является плательщиком налога на прибыль заполнена по умолчанию.';
		|uk='За інформацією з сервісу немає можливості визначити, чи є контрагент неприбутковою організацією. 
		|Інформація про те, що контрагент є платником податку на прибуток, заповнена за замовчуванням.'");
	Иначе 
		ТекстСообщения = ОпендатаботЗаполнениеКонтрагентаСервер.ПолучитьПолеСтруктуры(РезультатЗаполнения,"СхемаНалогообложенияСостояние");
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры
