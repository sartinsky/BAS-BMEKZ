#Область ПрограммныйИнтерфейс

// Возвращает имена предопределенных показателей, описанных в конфигураторе.
//
Функция ИменаПредопределенныхПоказателей() Экспорт 
	
	Возврат Новый Массив(Метаданные.Справочники.ИНАГРО_ПоказателиСхемМотивации.ПолучитьИменаПредопределенных());
	
КонецФункции

// Эта функция возвращает информацию о виде расчета из переданного соответствия
// Если в соответствии не найдена информация о виде расчета - она подготавливается и 
// помещается в соответствие
// Применяется для работы с формами, в которых активно требуется получать 
// информацию о видах расчета, например, при выводе строки табличного поля.
//
// Параметры:      
//	СведенияОВидахРасчета - соответствие, у которого в качестве ключа - ПланВидовРасчетаСсылка, а 
//  				  в качестве значения - структура из элементов
//					  РазмерТребуется - булево - если да, то при вводе такого 
//										вида расчета требуется проставлять значение "размер" 
//										(суммы, проценты и проч. показатели, используемые при расчете).
//
//	ВидРасчета - ПланВидовРасчетаСсылка
//
// Возвращаемое значение:
//  Описанная выше структура.
//
Функция ПолучитьСведенияОВидеРасчетаСхемыМотивации(ВидРасчета, Режим = "ПлановыеНачисления") Экспорт

	ТипВидРасчета = ТипЗнч(ВидРасчета);
	ИзменениеПоказателяНеУказано = Перечисления.ИНАГРО_ИзменениеПоказателейСхемМотивации.ПустаяСсылка();
			
	СведенияОВидеРасчета = Новый Структура("КоличествоПоказателей,РазмерТребуется,НеТребуетВалюты,ФактКоличествоПоказателей",1, Ложь, Ложь, Ложь,0);
																				
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Показатели.Показатель,
	|	ВЫБОР
	|		КОГДА  НЕ Показатели.ЗапрашиватьПриКадровыхПеремещениях
	|			ТОГДА ИСТИНА";
	Если ТипВидРасчета = Тип("ПланВидовРасчетаСсылка.ИНАГРО_Начисления") Тогда
		Запрос.Текст = Запрос.Текст + "
	|       ИНАЧЕ
	|			ВЫБОР 
	|				КОГДА Показатели.Показатель = Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф)
	|					ТОГДА НЕ Показатели.Ссылка.ЗачетОтработанногоВремени
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
    |	КОНЕЦ КАК НЕЗапрашиватьПриКадровыхПеремещениях,
	|	ВЫБОР
	|		КОГДА Показатели.Показатель = Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.ПустаяСсылка) 
	|			ТОГДА ИСТИНА";
	Если ТипВидРасчета = Тип("ПланВидовРасчетаСсылка.ИНАГРО_Начисления") Тогда
		Запрос.Текст = Запрос.Текст + "
	|	    ИНАЧЕ
	|			ВЫБОР 
	|				КОГДА Показатели.Показатель = Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф)
	|						ТОГДА НЕ Показатели.Ссылка.ЗачетОтработанногоВремени
	|				КОГДА Показатели.Показатель = Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.Процент)
	|					ТОГДА ЛОЖЬ
	|				КОГДА Показатели.Показатель = Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.Сумма)
	|					ТОГДА ЛОЖЬ
	|					ИНАЧЕ Показатели.Показатель.Предопределенный
	|			КОНЕЦ";
	Иначе
			Запрос.Текст = Запрос.Текст + "
	|		ИНАЧЕ Показатели.Показатель.Предопределенный";
	КонецЕсли;
			Запрос.Текст = Запрос.Текст + "		
	|			
	|	КОНЕЦ КАК Предопределенный,
	|	ВЫБОР КОГДА Показатели.Показатель.Предопределенный 
	|			И Показатели.Показатель <> Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф)
	|			И Показатели.Показатель <> Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.ОкладТарифНазначения)
	|			И Показатели.Показатель <> Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.Процент)
	|			И Показатели.Показатель <> Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.Сумма)
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПредопределенный,
	|	Показатели.Показатель.Наименование КАК ПоказательНаименование,
	|	Показатели.Показатель.ТипПоказателя,
	|	ЕСТЬNULL(Показатели.Показатель.ВозможностьИзменения, ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ИзменениеПоказателейСхемМотивации.ПустаяСсылка)) КАК ПоказательВозможностьИзменения,
	|	Показатели.НомерСтроки,
	|	Максимум(Показатели.НомерСтроки) КАК КоличествоПоказателей
	|ИЗ";
	Если ТипВидРасчета = Тип("ПланВидовРасчетаСсылка.ИНАГРО_Начисления") Тогда
		Запрос.Текст = Запрос.Текст + "
		|	ПланВидовРасчета.ИНАГРО_Начисления.Показатели КАК Показатели";
	ИначеЕсли ТипВидРасчета = Тип("ПланВидовРасчетаСсылка.ИНАГРО_Удержания") Тогда
		Запрос.Текст = Запрос.Текст + "
		|	ПланВидовРасчета.ИНАГРО_Удержания.Показатели КАК Показатели";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|ГДЕ
	|	Показатели.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	Показатели.Показатель,
	|	ВЫБОР
	|		КОГДА  НЕ Показатели.ЗапрашиватьПриКадровыхПеремещениях
	|			ТОГДА ИСТИНА";
	Если ТипВидРасчета = Тип("ПланВидовРасчетаСсылка.ИНАГРО_Начисления")Тогда
		Запрос.Текст = Запрос.Текст + "
	|       ИНАЧЕ
	|			ВЫБОР 
	|				КОГДА Показатели.Показатель = Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф)
	|					ТОГДА НЕ Показатели.Ссылка.ЗачетОтработанногоВремени
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
    |	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Показатели.Показатель = Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.ПустаяСсылка) 
	|			ТОГДА ИСТИНА";
	Если ТипВидРасчета = Тип("ПланВидовРасчетаСсылка.ИНАГРО_Начисления") Тогда
		Запрос.Текст = Запрос.Текст + "
	|	    ИНАЧЕ
	|			ВЫБОР 
	|				КОГДА Показатели.Показатель = Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф)
	|					ТОГДА НЕ Показатели.Ссылка.ЗачетОтработанногоВремени
	|				КОГДА Показатели.Показатель = Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.Процент)
	|					ТОГДА ЛОЖЬ
	|				КОГДА Показатели.Показатель = Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.Сумма)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ Показатели.Показатель.Предопределенный
	|			КОНЕЦ";
	Иначе
				Запрос.Текст = Запрос.Текст + "
	|		ИНАЧЕ Показатели.Показатель.Предопределенный";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
    |	КОНЕЦ,
	|	ВЫБОР КОГДА Показатели.Показатель.Предопределенный 
	|			И Показатели.Показатель <> Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф)
	|			И Показатели.Показатель <> Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.ОкладТарифНазначения)
	|			И Показатели.Показатель <> Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.Процент)
	|			И Показатели.Показатель <> Значение(Справочник.ИНАГРО_ПоказателиСхемМотивации.Сумма)
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Показатели.Показатель.Наименование,
	|	Показатели.Показатель.ТипПоказателя,
	|	ЕСТЬNULL(Показатели.Показатель.ВозможностьИзменения, ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ИзменениеПоказателейСхемМотивации.ПустаяСсылка)),
	|	Показатели.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка",ВидРасчета);
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		СтрокаТаблицыСведений = РезультатЗапроса.Выбрать();
		Пока СтрокаТаблицыСведений.Следующий() Цикл
			
			СведенияОВидеРасчета["КоличествоПоказателей"] = Макс(СведенияОВидеРасчета["КоличествоПоказателей"], СтрокаТаблицыСведений["КоличествоПоказателей"]);
			СведенияОВидеРасчета["ФактКоличествоПоказателей"] = Макс(СтрокаТаблицыСведений["КоличествоПоказателей"],СведенияОВидеРасчета["ФактКоличествоПоказателей"]);
			
			СчПоказателей 			= СтрокаТаблицыСведений.НомерСтроки;
			
			ВозможностьИзменения	= СтрокаТаблицыСведений["ПоказательВозможностьИзменения"];
			ТипПоказателя			= СтрокаТаблицыСведений["ПоказательТипПоказателя"];
			
			СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Точность",3);
			СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "ВозможностьИзменения",СтрокаТаблицыСведений["ПоказательВозможностьИзменения"]);
			СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Наименование",СтрокаТаблицыСведений["ПоказательНаименование"]);
			
			СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей ,СтрокаТаблицыСведений["Показатель"]);
			
									   	
			Если СтрокаТаблицыСведений.НЕЗапрашиватьПриКадровыхПеремещениях <> Null 
				И СтрокаТаблицыСведений["НЕЗапрашиватьПриКадровыхПеремещениях"]
				И Не СтрокаТаблицыСведений.ПоказательВозможностьИзменения = Перечисления.ИНАГРО_ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете 
				И Не СтрокаТаблицыСведений["ЭтоПредопределенный"] Тогда
				Если Режим = "ПлановыеНачисления" Тогда
					СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "НаименованиеВидимость", Ложь);
					СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Видимость", Ложь);
				Иначе
					СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "НаименованиеВидимость" ,Истина);
					Если ТипПоказателя = Перечисления.ИНАГРО_ТипыПоказателейСхемМотивации.Числовой Тогда
						
						СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Видимость", Истина);
						
					ИначеЕсли ТипПоказателя = Перечисления.ИНАГРО_ТипыПоказателейСхемМотивации.Денежный Тогда
						
						СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Видимость", Истина);
						СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Точность",2);
					
					ИначеЕсли (ТипПоказателя = Перечисления.ИНАГРО_ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
						Или (ТипПоказателя = Перечисления.ИНАГРО_ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная) Тогда
						
						СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "НаименованиеВидимость", Ложь);
						СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Видимость", Ложь);
					Иначе
						СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Видимость", Истина);
					КонецЕсли;
					
				КонецЕсли;
			ИначеЕсли СтрокаТаблицыСведений["Предопределенный"] <> Null И СтрокаТаблицыСведений["Предопределенный"] Тогда
				СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "НаименованиеВидимость", Ложь);
				СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Видимость", Ложь);
				
			ИначеЕсли Режим = "ПлановыеНачисления" И (СведенияОВидеРасчета["Показатель" + СчПоказателей + "ВозможностьИзменения"] = Перечисления.ИНАГРО_ИзменениеПоказателейСхемМотивации.ВводитсяПриРасчете
				Или СведенияОВидеРасчета["Показатель" + СчПоказателей + "ВозможностьИзменения"] = Перечисления.ИНАГРО_ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете) Тогда
				СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "НаименованиеВидимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Видимость" , Истина);
				
			Иначе
				СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "НаименованиеВидимость" ,Истина);
				Если ТипПоказателя = Перечисления.ИНАГРО_ТипыПоказателейСхемМотивации.Числовой Тогда
					
					СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Видимость", Истина);
					
				ИначеЕсли ТипПоказателя = Перечисления.ИНАГРО_ТипыПоказателейСхемМотивации.Денежный Тогда
					
					СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Видимость", Истина);
					СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Точность",2);
					
					
				ИначеЕсли (ТипПоказателя = Перечисления.ИНАГРО_ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
					Или (ТипПоказателя = Перечисления.ИНАГРО_ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная) Тогда
					
					СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "НаименованиеВидимость", Ложь);
					СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Видимость", Ложь);
					
				Иначе
					СведенияОВидеРасчета.Вставить("Показатель" + СчПоказателей + "Видимость", Истина);
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		СведенияОВидеРасчета.Вставить("Показатель1Наименование", "");
		СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Ложь);
		СведенияОВидеРасчета.Вставить("Показатель1Видимость", Ложь);
		СведенияОВидеРасчета.Вставить("Показатель1Точность", 2);
		СведенияОВидеРасчета.Вставить("Показатель1ВозможностьИзменения", Ложь);
		
		СведенияОВидеРасчета.Вставить("Показатель2Наименование", "");
		СведенияОВидеРасчета.Вставить("Показатель2НаименованиеВидимость", Ложь);
		СведенияОВидеРасчета.Вставить("Показатель2Видимость", Ложь);
		СведенияОВидеРасчета.Вставить("Показатель2Точность", 2);
		СведенияОВидеРасчета.Вставить("Показатель2ВозможностьИзменения", Ложь);
	КонецЕсли;
		
    // заполним для регламентированных способов оплаты труда
	Если ЗначениеЗаполнено(ВидРасчета) И (ТипВидРасчета = Тип("ПланВидовРасчетаСсылка.ИНАГРО_Начисления")
			Или ТипВидРасчета = Тип("ПланВидовРасчетаСсылка.ИНАГРО_Удержания")) Тогда
		СтруктураВидаРасчета = Новый Структура("СпособРасчета");
		ЗаполнитьЗначенияСвойств(СтруктураВидаРасчета,ВидРасчета);
		Если СтруктураВидаРасчета.СпособРасчета <> ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПроизвольнаяФормула") Тогда
			СведенияОВидеРасчета.Вставить("ФактКоличествоПоказателей",0);
			СведенияОВидеРасчета["Показатель1Точность"] = 3;
			Если СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоМесячнойТарифнойСтавкеПоДням") 
				Или СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоМесячнойТарифнойСтавкеПоЧасам") Тогда
				СведенияОВидеРасчета.Вставить("РазмерТребуется", Истина);
				Если СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоМесячнойТарифнойСтавкеПоДням") Тогда
					НаименованиеТарифнойСтавки = ПредопределенноеЗначение("Справочник.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф"); 
				Иначе
					НаименованиеТарифнойСтавки = ПредопределенноеЗначение("Справочник.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф");
				КонецЕсли;
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1Наименование", НаименованиеТарифнойСтавки);
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1Точность", 2);
			ИначеЕсли СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоДневнойТарифнойСтавке") 
				Или СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоЧасовойТарифнойСтавке") Тогда
				СведенияОВидеРасчета.Вставить("РазмерТребуется", Истина);
				
				Если СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоДневнойТарифнойСтавке") Тогда
					НаименованиеТарифнойСтавки = ПредопределенноеЗначение("Справочник.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф");
				Иначе
					НаименованиеТарифнойСтавки = ПредопределенноеЗначение("Справочник.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф");
				КонецЕсли;
				
				СведенияОВидеРасчета.Вставить("Показатель1Наименование", НаименованиеТарифнойСтавки);
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Истина);
			ИначеЕсли СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.Процентом") Тогда
			
				СведенияОВидеРасчета.Вставить("КоличествоПоказателей",2);
				СведенияОВидеРасчета.Вставить("ФактКоличествоПоказателей",2);
				СведенияОВидеРасчета["Показатель1Наименование"] = НСтр("ru='Расчетная база';uk='Розрахункова база'");
				СведенияОВидеРасчета["Показатель1Видимость"] = Ложь;
				СведенияОВидеРасчета["Показатель1НаименованиеВидимость"] = Ложь;				
				
				СведенияОВидеРасчета.Вставить("Показатель2Наименование", НСтр("ru='Процент';uk='Процент'"));
				СведенияОВидеРасчета.Вставить("Показатель2Точность", 2);
				СведенияОВидеРасчета.Вставить("Показатель2ВозможностьИзменения", Истина);
				СведенияОВидеРасчета.Вставить("Показатель2Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель2НаименованиеВидимость", Истина);
			ИначеЕсли СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ДоплатаЗаВечерниеЧасы")
				Или СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ДоплатаЗаНочныеЧасы") Тогда
				Если Режим = "ПлановыеНачисления" Тогда
					СведенияОВидеРасчета.Вставить("КоличествоПоказателей",2);
					СведенияОВидеРасчета.Вставить("ФактКоличествоПоказателей",2);
					
					СведенияОВидеРасчета["Показатель1Наименование"] = НСтр("ru='Часовой тариф';uk='Годинний тариф'");
					СведенияОВидеРасчета["Показатель1Видимость"] = Ложь;
					СведенияОВидеРасчета["Показатель1НаименованиеВидимость"] = Ложь;				
					СведенияОВидеРасчета["Показатель2Наименование"] = НСтр("ru='Процент доплаты';uk='Процент доплати'");
					СведенияОВидеРасчета["Показатель2Видимость"] = Истина;
					СведенияОВидеРасчета["Показатель2НаименованиеВидимость"] = Истина;				
				Иначе
					СведенияОВидеРасчета.Вставить("КоличествоПоказателей",2);
					СведенияОВидеРасчета.Вставить("ФактКоличествоПоказателей",2);
					
					СведенияОВидеРасчета["Показатель1Наименование"] = НСтр("ru='Часовой тариф';uk='Годинний тариф'");
					СведенияОВидеРасчета["Показатель1Видимость"] = Истина;
					СведенияОВидеРасчета["Показатель1НаименованиеВидимость"] = Истина;				
					СведенияОВидеРасчета["Показатель2Наименование"] = НСтр("ru='Процент доплаты';uk='Процент доплати'");
					СведенияОВидеРасчета["Показатель2Видимость"] = Истина;
					СведенияОВидеРасчета["Показатель2НаименованиеВидимость"] = Истина;				
				КонецЕсли;
			
			ИначеЕсли СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоСреднемуЗаработкуДляОтпуска")
				Или СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоСреднемуЗаработку")
				Или СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ДоплатаДоСреднегоЗаработка") Тогда
				СведенияОВидеРасчета.Вставить("Показатель1Наименование", НСтр("ru='Средняя';uk='Середня'"));
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Истина);
			ИначеЕсли СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоСреднемуЗаработкуДляКомпенсацииОтпуска") Тогда
				СведенияОВидеРасчета.Вставить("КоличествоПоказателей",2);
				СведенияОВидеРасчета.Вставить("ФактКоличествоПоказателей",2);
				
				СведенияОВидеРасчета.Вставить("Показатель1Наименование", НСтр("ru='Средняя';uk='Середня'"));
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Истина);
				
				СведенияОВидеРасчета.Вставить("Показатель2Точность", 2);
				СведенияОВидеРасчета.Вставить("Показатель2ВозможностьИзменения", Истина);
				СведенияОВидеРасчета.Вставить("Показатель2Наименование", НСтр("ru='Время';uk='Час'"));
				СведенияОВидеРасчета.Вставить("Показатель2Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель2НаименованиеВидимость", Истина);
			ИначеЕсли СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоСреднемуЗаработкуФСС") Тогда
				СведенияОВидеРасчета.Вставить("КоличествоПоказателей",2);
				СведенияОВидеРасчета.Вставить("ФактКоличествоПоказателей",2);
				
				СведенияОВидеРасчета.Вставить("Показатель1Наименование", НСтр("ru='Средняя';uk='Середня'"));
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Истина);
				
				СведенияОВидеРасчета.Вставить("Показатель2Точность", 2);
				СведенияОВидеРасчета.Вставить("Показатель2ВозможностьИзменения", Истина);
				СведенияОВидеРасчета.Вставить("Показатель2Наименование", НСтр("ru='Процент';uk='Процент'"));
				СведенияОВидеРасчета.Вставить("Показатель2Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель2НаименованиеВидимость", Истина);
			ИначеЕсли  СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ФиксированнойСуммой") Или
				СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.УдержаниеФиксированнойСуммой") Тогда
				СведенияОВидеРасчета.Вставить("Показатель1Наименование", НСтр("ru='Сумма';uk='Сума'"));
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Истина);
			ИначеЕсли  СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПоДоговоруФиксированнойСуммой") Тогда
				СведенияОВидеРасчета.Вставить("Показатель1Наименование", НСтр("ru='Сумма по договору';uk='Сума по договору'"));
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Истина);
			ИначеЕсли  СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ИсполнительныйЛистПроцентом") 
				Или СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ИсполнительныйЛистПроцентомДоПредела") Тогда
				СведенияОВидеРасчета.Вставить("Показатель1Наименование", НСтр("ru='Процент';uk='Процент'"));
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Истина);
			ИначеЕсли  СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ИсполнительныйЛистФиксСуммойДоПредела") Тогда
				СведенияОВидеРасчета.Вставить("Показатель1Наименование", НСтр("ru='Сумма';uk='Сума'"));
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Истина);
			ИначеЕсли  СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПочтовыйСбор") Тогда
				СведенияОВидеРасчета.Вставить("Показатель1Наименование", НСтр("ru='Процент';uk='Процент'"));
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Истина);
			ИначеЕсли  СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ИндексацияАлиментов") Тогда
				СведенияОВидеРасчета.Вставить("Показатель1Наименование", НСтр("ru='Коэффициент индексации';uk='Коефіцієнт індексації'"));
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Ложь);
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Ложь);
				СведенияОВидеРасчета.Вставить("Валюта1Видимость", Ложь);	
			ИначеЕсли  СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.АлиментыПроцентом") 
				Или СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.АлиментыПроцентомДоПредела") Тогда
				СведенияОВидеРасчета.Вставить("Показатель1Наименование", НСтр("ru='Процент';uk='Процент'"));
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Истина);
			ИначеЕсли  СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.АлиментыФиксСуммой") 
				Или СтруктураВидаРасчета.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.АлиментыФиксСуммойДоПредела") Тогда
				СведенияОВидеРасчета.Вставить("Показатель1Наименование", НСтр("ru='Сумма';uk='Сума'"));
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Истина);
			ИначеЕсли СпособРасчетаТребуетРазмер(СтруктураВидаРасчета.СпособРасчета) Тогда
				СведенияОВидеРасчета.Вставить(СведенияОВидеРасчета.РазмерТребуется, Истина);
				СведенияОВидеРасчета.Вставить("Показатель1НаименованиеВидимость", Истина);
				СведенияОВидеРасчета.Вставить("Показатель1Видимость", Истина);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

	Возврат СведенияОВидеРасчета;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Данная процедура написана компанией ИН-АГРО.
	// 
Функция СпособРасчетаТребуетРазмер(СпособРасчета) Экспорт
	Возврат НЕ (СпособРасчета = Перечисления.СпособыРасчетаНачислений.НулеваяСумма
	ИЛИ СпособРасчета = Перечисления.СпособыРасчетаНачислений.ИндексацияЗарплаты
	ИЛИ СпособРасчета = Перечисления.СпособыРасчетаНачислений.ИндексацияСоциальныхНачислений
	ИЛИ СпособРасчета = Перечисления.СпособыРасчетаНачислений.ДоплатаДоМЗП);
КонецФункции

#КонецОбласти
