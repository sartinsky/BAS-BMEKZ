
#Область ПрограммныйИнтерфейс

// Функция осуществляет подключение устройства.
//
// Параметры:
//  ОбъектДрайвера   - <*>  - объект драйвера торгового оборудования
//  Параметры - <*> - параметры драйвера торгового оборудования
//  ПараметрыПодключения - <*> - параметры подключения драйвера торгового оборудования
//  ВыходныеПараметры - <*> - выходные параметры драйвера торгового оборудования
// Возвращаемое значение:
//  <Булево> - Результат работы функции.
//
Функция ПодключитьУстройство(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры) Экспорт
	
	Результат = Истина;

	ПараметрыПодключения.Вставить("ИДУстройства", "");

	ВыходныеПараметры = Новый Массив();

	Порт         = Неопределено;
	Скорость     = Неопределено;
	Пауза        = 0;

	Параметры.Свойство("Порт"        , Порт);
	Параметры.Свойство("Скорость"    , Скорость);
	Параметры.Свойство("Пауза"    	 , Пауза);

	Если Порт         = Неопределено
	 Или Скорость     = Неопределено Тогда
 
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(НСтр("ru='Не настроены параметры устройства.
        |Для корректной работы устройства необходимо задать параметры его работы.
        |Сделать это можно при помощи формы ""Настройка параметров"" модели
        |подключаемого оборудования в форме ""Подключение и настройка оборудования"".'
        |;uk='Не настроєні параметри пристрою.
        |Для коректної роботи пристрою необхідно задати параметри його роботи.
        |Зробити це можна за допомогою форми ""Настройка параметрів"" моделі
        |обладнання для підключення в формі ""Підключення та настройка обладнання"".'"));

		Результат = Ложь;
	КонецЕсли;

	Если Результат Тогда
		
		Выполнить(Параметры.ОписаниеПодключения);	
		
	КонецЕсли;	
		
	Возврат Результат;

КонецФункции

// Функция осуществляет отключение устройства.
//
// Параметры:
//  ОбъектДрайвера - <*> - объект драйвера торгового оборудования.
//  Параметры - <*> - параметры драйвера торгового оборудования
//  ПараметрыПодключения - <*> - параметры подключения драйвера торгового оборудования
//  ВыходныеПараметры - <*> - выходные параметры драйвера торгового оборудования
//
// Возвращаемое значение:
//  <Булево> - Результат работы функции.
//
Функция ОтключитьУстройство(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры) Экспорт

	Результат = Истина;

	Выполнить(Параметры.ОписаниеОтключения);	

	Возврат Результат;

КонецФункции

// Функция получает, обрабатывает и перенаправляет на исполнение команду к драйверу
//
Функция ВыполнитьКоманду(Команда, ВходныеПараметры = Неопределено, ВыходныеПараметры = Неопределено,
                         ОбъектДрайвера, Параметры, ПараметрыПодключения) Экспорт

	Результат = Истина;

	ВыходныеПараметры = Новый Массив();

	// Получение веса
	Если Команда = "ПолучитьВес" ИЛИ Команда = "GetWeight" Тогда
		Результат = ПолучитьВес(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры);
		
	// Обработка события от устройства
	ИначеЕсли Команда = "ОбработатьСобытие" Тогда
		Событие = ВходныеПараметры[0];
		Данные  = ВходныеПараметры[1];
		Результат = ОбработатьСобытие(ОбъектДрайвера, Параметры, ПараметрыПодключения, Событие, Данные, ВыходныеПараметры);	
		
	// Завершение обработки события от устройства
	ИначеЕсли Команда = "ЗавершитьОбработкуСобытия" Тогда
		РезультатОбработкиСобытия = ВходныеПараметры[0];

		Результат = ЗавершитьОбработкуСобытия(ОбъектДрайвера, Параметры, ПараметрыПодключения,
		                                      РезультатОбработкиСобытия, ВыходныеПараметры);	
		
	// Указанная команда не поддерживается данным драйвером
	Иначе
		ВыходныеПараметры.Очистить();
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(НСтр("ru='Команда ""%Команда%"" не поддерживается данным драйвером.';uk='Команда ""%Команда%"" не підтримується цим драйвером.'"));
		ВыходныеПараметры[1] = СтрЗаменить(ВыходныеПараметры[1], "%Команда%", Команда);
		Результат = Ложь;

	КонецЕсли;

	Возврат Результат;

КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Процедура осуществляет получение веса груза, расположенного на весах.
//
Функция ПолучитьВес(ОбъектДрайвера, Параметры, ПараметрыПодключения, ВыходныеПараметры)
	
	// Переменные для будущего возможного использования в коде. Для отладки.
	КодОтвета = Неопределено;
	Вес 	  = Неопределено;
	
	
	Результат = Истина;	
	Попытка
		Выполнить(Параметры.КомандаПолучитьВес);	
	Исключение
		
		ВыходныеПараметры.Очистить();
		ВыходныеПараметры.Добавить(999);
		ВыходныеПараметры.Добавить(НСтр("ru = 'Ошибка выполнения кода в описании команды ""Получить вес""'; uk = 'Помилка виконання коду в описі команди ""Отримати вагу""'"));
		Результат = Ложь; 
		
		// Закрываем ComПорты, очищаем параметры подключения устройства.
		Выполнить(Параметры.ОписаниеИсключениеПолученияВеса);
	КонецПопытки;	
		
	Возврат Результат;
	
КонецФункции

Функция ОбработатьСобытие(ОбъектДрайвера, Параметры, ПараметрыПодключения, Событие, Данные, ВыходныеПараметры)
	
	Результат = Истина;
	
	Выполнить(Параметры.КомандаОбработатьСобытие);	
	
	Возврат Результат;
	
КонецФункции

// Процедура вызывается, когда система готова принять следующее событие от устройства
//
Функция ЗавершитьОбработкуСобытия(ОбъектДрайвера, Параметры, ПараметрыПодключения,
                                  РезультатОбработкиСобытия, ВыходныеПараметры)

	Результат = Истина;

	глВесовогоОборудования = Неопределено;	
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти