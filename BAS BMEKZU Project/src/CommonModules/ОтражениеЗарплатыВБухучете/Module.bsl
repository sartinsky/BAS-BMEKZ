////////////////////////////////////////////////////////////////////////////////
// Отражение зарплаты в регламентированном учёте
// 
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция формирует структуру с данными отражения зарплаты для бухучета
//
// Параметры
//  Организация, тип СправочникСсылка.Организации
//  ПериодРегистрации – тип дата, первое число месяца
//  СтрокаСписокТаблиц - Тип Строка, в строке переданы имена таблиц, которые необходимо заполнить
//				         имена таблиц соответствуют именам табличных частей документа ОтражениеЗарплатыВБухучете 
//  Отказ - Булево
//  ДанныеДляПроведения - Структура, ключ - имя регистра, значение - таблица значений с движениями документа
//						это источник данных, если Неопределено, тогда источник данных - движения регистров
//
// Возвращаемое значение
// 		Структура ДанныеДляОтражения
//			Ключ - имя таблицы, соответствует именам табличных частей документа ОтражениеЗарплатыВБухучете
//			Значение - таблица значений, соответствующая структуре табличных частей документа ОтражениеЗарплатыВБухучете
//
Функция ДанныеДляОтраженияЗарплатыВБухучете(ПериодРегистрации, Организация, СтрокаСписокТаблиц = "", РезультатыРасчетаЗарплаты = Неопределено) Экспорт
	
	ДанныеДляОтражения = Новый Структура;
	
	Если ПустаяСтрока(СтрокаСписокТаблиц) или Найти(СтрокаСписокТаблиц, "НачисленнаяЗарплатаИВзносы") > 0 Тогда
		
		ТаблицаНачисленнаяЗарплатаИВзносы = БухучетНачисленийВзносов(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
		ТаблицаНачисленнаяЗарплатаИВзносы = РасчетРезерваОтпусков(Организация, ПериодРегистрации, ТаблицаНачисленнаяЗарплатаИВзносы);
		ДанныеДляОтражения.Вставить("НачисленнаяЗарплатаИВзносы", ТаблицаНачисленнаяЗарплатаИВзносы);
		
	КонецЕсли;
	
	Если ПустаяСтрока(СтрокаСписокТаблиц) или Найти(СтрокаСписокТаблиц, "УдержанныйЕСВ") > 0 Тогда
		
		ТаблицаУдержанныйЕСВ = БухучетЕСВ(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
		ДанныеДляОтражения.Вставить("УдержанныйЕСВ", ТаблицаУдержанныйЕСВ);
		
	КонецЕсли;
	
	Если ПустаяСтрока(СтрокаСписокТаблиц) или Найти(СтрокаСписокТаблиц, "УдержанныйНДФЛ") > 0 Тогда
		
		ТаблицаУдержанныйНДФЛ = БухучетНДФЛ(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
		ДанныеДляОтражения.Вставить("УдержанныйНДФЛ", ТаблицаУдержанныйНДФЛ);
		
	КонецЕсли;
	
	Если ПустаяСтрока(СтрокаСписокТаблиц) или Найти(СтрокаСписокТаблиц, "УдержаннаяЗарплата") > 0 Тогда
		
		ТаблицаУдержаннаяЗарплата = БухучетУдержаний(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
		ДанныеДляОтражения.Вставить("УдержаннаяЗарплата", ТаблицаУдержаннаяЗарплата);
		
	КонецЕсли;

	Возврат ДанныеДляОтражения;
	
КонецФункции

// Функция возвращает таблицу значений с данными бухучета удержаний
//		Поля таблицы
//				ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//				Подразделение  - СправочникСсылка.ПодразделенияОрганизаций
//				ВидОперации    - ПеречислениеСсылка.ВидыОперацийПоЗарплате
//				Контрагент     - СправочникСсылка.Контрагенты, контрагент, в пользу которого произведено удержание
//				Сумма - Число 15.2
//
// Параметры
//	Организация – СправочникСсылка.Организации
//	ПериодРегистрации – Дата
//	РезультатыРасчетаЗарплаты – структура,  содержит таблицы значений с движениями регистров
//					если структура передается, то таблицы будут источником данных для
//					отражения в учете
//
Функция БухучетУдержаний(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	ТаблицаУдержаннаяЗарплата = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеУдержаний(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТаблицаУдержаннаяЗарплата", ТаблицаУдержаннаяЗарплата);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УдержаннаяЗарплата.Организация,
	|	УдержаннаяЗарплата.Сотрудник,
	|	УдержаннаяЗарплата.ФизическоеЛицо,
	|	УдержаннаяЗарплата.Подразделение,
	|	УдержаннаяЗарплата.Удержание,
	|	УдержаннаяЗарплата.Контрагент,
	|	УдержаннаяЗарплата.ВидОперации,
	|	УдержаннаяЗарплата.СчетУчета,
	|	УдержаннаяЗарплата.Сумма
	|ПОМЕСТИТЬ ВТУдержаннаяЗарплата
	|ИЗ
	|	&ТаблицаУдержаннаяЗарплата КАК УдержаннаяЗарплата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УдержаннаяЗарплата.Организация,
	|	УдержаннаяЗарплата.Сотрудник,
	|	УдержаннаяЗарплата.ФизическоеЛицо,
	|	УдержаннаяЗарплата.Подразделение,
	|	УдержаннаяЗарплата.Удержание,
	|	УдержаннаяЗарплата.Контрагент,
	|	УдержаннаяЗарплата.ВидОперации,
	|	УдержаннаяЗарплата.СчетУчета,
	|	УдержаннаяЗарплата.Сумма,
	|	ЕСТЬNULL(Удержания.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеУдержанийПоУмолчанию)) КАК СпособОтраженияВБухУчете 
	|ИЗ
	|	ВТУдержаннаяЗарплата КАК УдержаннаяЗарплата
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания КАК Удержания
	|		ПО УдержаннаяЗарплата.Удержание = Удержания.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО УдержаннаяЗарплата.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Ссылка.Наименование";
	
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

//
Функция БухучетНДФЛ(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	ДанныеНДФЛ = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНДФЛ(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = ДанныеНДФЛ.МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);

	// получим отражение в бухучете удержанного НДФЛ
	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТБухучетНДФЛ(Организация, ПериодРегистрации, МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНДФЛ.ПериодРегистрации,
	|	БухучетНДФЛ.Организация,
	|	БухучетНДФЛ.ФизическоеЛицо,
	|	БухучетНДФЛ.ДоходНДФЛ,
	|	БухучетНДФЛ.СчетУчета,
	|	БухучетНДФЛ.Сумма,
	|	БухучетНДФЛ.ВидОперации,
	|	БухучетНДФЛ.СпособОтраженияВБухУчете
	|ИЗ
	|	ВТБухучетНДФЛ КАК БухучетНДФЛ
	|УПОРЯДОЧИТЬ ПО
	|	БухучетНДФЛ.ФизическоеЛицо.Наименование";

	Возврат Запрос.Выполнить().Выгрузить();


КонецФункции

// Функция возвращает таблицу значений с данными бухучета начислений и взносов
//		Поля таблицы описаны в НоваяТаблицаНачисленнаяЗарплатаИВзносы()
//
// Параметры
//	Организация – СправочникСсылка.Организации
//	ПериодРегистрации – Дата
//	РезультатыРасчетаЗарплаты – структура,  содержит таблицы значений с движениями регистров
//					если структура передается, то таблицы будут источником данных для
//					отражения в учете
//
Функция БухучетНачисленийВзносов(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	ТаблицаНачисленнаяЗарплатаИВзносы = НоваяТаблицаНачисленнаяЗарплатаИВзносы();
	
	ТаблицаНачислений = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНачислений(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	ДанныеВзносов     = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеВзносов(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	ТаблицаВзносов    = ДанныеВзносов.ТаблицаВзносов;
	ТаблицаВзносов.Колонки["Сумма"].Имя = "СуммаВзносов";
	
	//Распределение таблицы взносов по таблице начислений
	ПоляРазрез = Новый Массив();
	ПоляРазрез.Добавить("Сотрудник");
	ПоляРазрез.Добавить("Подразделение");
	ПоляРазрез.Добавить("ВидОперации");
	ПоляРазрез.Добавить("Начисление");
	ПоляСвязи = Новый Структура();
	ПоляСвязи.Вставить("Организация","Организация");
	ПоляСвязи.Вставить("ФизическоеЛицо","ФизическоеЛицо");
	ПоляСвязи.Вставить("ВидЕСВ","ВидЕСВ");
	ПоляСвязи.Вставить("НалоговыйПериод","НалоговыйПериодЕСВ");
	ТаблицаРаспределения = ОтражениеЗарплатыВУчете.РаспределитьТаблицуПропорциональноТаблицеКоэффициентов(ТаблицаВзносов, "СуммаВзносов", ТаблицаНачислений, "Сумма", ПоляРазрез, ПоляСвязи);

	Запрос = Новый Запрос;
	//МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	МенеджерВременныхТаблиц = ДанныеВзносов.МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаНачислений", ТаблицаНачислений);
	Запрос.УстановитьПараметр("ТаблицаРаспределения", ТаблицаРаспределения);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаНачислений.Организация,
	|	ТаблицаНачислений.Сотрудник,
	|	ТаблицаНачислений.ФизическоеЛицо,
	|	ТаблицаНачислений.Подразделение,
	|	ТаблицаНачислений.НалоговыйПериодЕСВ,
	|	ТаблицаНачислений.ВидОперации,
	|	ТаблицаНачислений.Начисление,
	|	ТаблицаНачислений.Сумма
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	&ТаблицаНачислений КАК ТаблицаНачислений
	|;
	|
	|/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаРаспределения.Организация,
	|	ТаблицаРаспределения.Сотрудник,
	|	ТаблицаРаспределения.ФизическоеЛицо,
	|	ТаблицаРаспределения.Подразделение,
	|	ТаблицаРаспределения.НалоговыйПериод,
	|	ТаблицаРаспределения.ВидОперации,
	|	ТаблицаРаспределения.Начисление,
	|	ТаблицаРаспределения.СуммаВзносов,
	|	ТаблицаРаспределения.СтатьяНалоговойДекларации,
	|	ТаблицаРаспределения.Налог
	|ПОМЕСТИТЬ ВТРаспределениеЕСВ
	|ИЗ
	|	&ТаблицаРаспределения КАК ТаблицаРаспределения
	|;
	|
	|/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСТЬNULL(Начисления.Организация, Взносы.Организация) КАК Организация, 
	|	ЕСТЬNULL(Начисления.Сотрудник, Взносы.Сотрудник) КАК Сотрудник,
	|	ЕСТЬNULL(Начисления.ФизическоеЛицо, Взносы.ФизическоеЛицо) КАК ФизическоеЛицо,
	|	ЕСТЬNULL(Начисления.Подразделение, Взносы.Подразделение) КАК Подразделение,
	|	ЕСТЬNULL(Начисления.ВидОперации, Взносы.ВидОперации) КАК ВидОперации,
	|	ЕСТЬNULL(Начисления.Начисление, Взносы.Начисление) КАК Начисление,
	|	ЕСТЬNULL(Взносы.СтатьяНалоговойДекларации, ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ПустаяСсылка)) КАК СтатьяНалоговойДекларации,
	|	ЕСТЬNULL(Взносы.Налог, ЗНАЧЕНИЕ(Справочник.Налоги.ПустаяСсылка)) КАК Налог,
	|	ЕСТЬNULL(Начисления.Сумма, 0) КАК Сумма,
	|	ЕСТЬNULL(Взносы.СуммаВзносов, 0) КАК СуммаВзносов
	|ПОМЕСТИТЬ ВТНачисленнаяЗарплатаИВзносы
	|ИЗ
	|	ВТНачисления КАК Начисления
	|   ПОЛНОЕ СОЕДИНЕНИЕ
	|	ВТРаспределениеЕСВ КАК Взносы
	|	ПО Начисления.Организация = Взносы.Организация
	|	 И Начисления.Сотрудник = Взносы.Сотрудник
	|	 И Начисления.ФизическоеЛицо = Взносы.ФизическоеЛицо
	|	 И Начисления.Подразделение = Взносы.Подразделение
	|	 И Начисления.НалоговыйПериодЕСВ = Взносы.НалоговыйПериод
	|	 И Начисления.ВидОперации = Взносы.ВидОперации
	|	 И Начисления.Начисление = Взносы.Начисление
	|";
	Запрос.Выполнить();
	
	
	// добавим отражение в бухучете начислений
	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, МенеджерВременныхТаблиц);
	
	// добавим отражение в бухучете взносов
	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТБухучетВзносов(Организация, ПериодРегистрации, МенеджерВременныхТаблиц);
	
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НачисленнаяЗарплатаИВзносы.ПериодРегистрации,
	|	НачисленнаяЗарплатаИВзносы.Сотрудник,
	|	НачисленнаяЗарплатаИВзносы.ФизическоеЛицо,
	|	НачисленнаяЗарплатаИВзносы.Подразделение,
	|	НачисленнаяЗарплатаИВзносы.Начисление,
	|	НачисленнаяЗарплатаИВзносы.ВидОперации,
	|	НачисленнаяЗарплатаИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленнаяЗарплатаИВзносы.СтатьяНалоговойДекларации,
	|	НачисленнаяЗарплатаИВзносы.Налог,
	|	НачисленнаяЗарплатаИВзносы.Сумма,
	|	НачисленнаяЗарплатаИВзносы.СуммаВзносов КАК СуммаВзносы,
	|	НачисленнаяЗарплатаИВзносы.СпособОтраженияЗарплатыВБухучетеВзносы,
	|	НачисленнаяЗарплатаИВзносы.Начисление.СчетУчета КАК СчетКт,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ОтражениеВзносовВРеглУчете.СпособОтраженияВРеглУчете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|        ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|		 ИНАЧЕ ОтражениеВзносовВРеглУчете.СпособОтраженияВРеглУчете.СчетКт 
	|	КОНЕЦ КАК СчетКтВзносы,
	|	СтатьиЗатратПоВзносамФОТ.СтатьяЗатрат КАК СтатьяЗатратВзносы
	|ИЗ
	|	ВТБУНачисленнаяЗарплатаИБУВзносы КАК НачисленнаяЗарплатаИВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатьиЗатратПоВзносамФОТ.СрезПоследних(&ПериодРегистрации) КАК СтатьиЗатратПоВзносамФОТ
	|       ПО НачисленнаяЗарплатаИВзносы.СпособОтраженияЗарплатыВБухучете.СчетДт = СтатьиЗатратПоВзносамФОТ.СчетЗатрат
	|        И НачисленнаяЗарплатаИВзносы.Налог = СтатьиЗатратПоВзносамФОТ.Налог
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтражениеВзносовВРеглУчете.СрезПоследних(&ПериодРегистрации) КАК ОтражениеВзносовВРеглУчете
	|       ПО НачисленнаяЗарплатаИВзносы.Налог = ОтражениеВзносовВРеглУчете.Налог
	|УПОРЯДОЧИТЬ ПО
	|	НачисленнаяЗарплатаИВзносы.ФизическоеЛицо.Наименование";

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаНачисленнаяЗарплатаИВзносы.Добавить(),Выборка);
	КонецЦикла;

	Возврат ТаблицаНачисленнаяЗарплатаИВзносы;

КонецФункции

Функция БухучетЕСВ(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	ДанныеЕСВ     = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеЕСВ(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = ДанныеЕСВ.МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	// получим отражение в бухучете удержанного ЕСВ
	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТБухучетЕСВ(Организация, ПериодРегистрации, МенеджерВременныхТаблиц);
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетЕСВ.ПериодРегистрации,
	|	БухучетЕСВ.Организация,
	|	БухучетЕСВ.ФизическоеЛицо,
	|	БухучетЕСВ.ВидЕСВ,
	|	БухучетЕСВ.СтатьяНалоговойДекларации,
	|	БухучетЕСВ.Налог,
	|	БухучетЕСВ.СчетУчета,
	|	БухучетЕСВ.Сумма,
	|	БухучетЕСВ.ВидОперации,
	|	БухучетЕСВ.СпособОтраженияВБухУчете
	|ИЗ
	|	ВТБухучетЕСВ КАК БухучетЕСВ
	|УПОРЯДОЧИТЬ ПО
	|	БухучетЕСВ.ФизическоеЛицо.Наименование";

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция НоваяТаблицаНачисленнаяЗарплатаИВзносы() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"));
	Таблица.Колонки.Добавить("СчетДт", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	Таблица.Колонки.Добавить("СчетКт", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	Таблица.Колонки.Добавить("НалоговыйПериодЕСВ", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("Налог", Новый ОписаниеТипов("СправочникСсылка.Налоги"));
	Таблица.Колонки.Добавить("СтатьяНалоговойДекларации", Новый ОписаниеТипов("СправочникСсылка.СтатьиНалоговыхДеклараций"));
	Таблица.Колонки.Добавить("СуммаВзносы", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучетеВзносы", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"));
	Таблица.Колонки.Добавить("СтатьяЗатратВзносы", Новый ОписаниеТипов("СправочникСсылка.СтатьиЗатрат"));
	Таблица.Колонки.Добавить("СчетКтВзносы", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	Возврат Таблица;
	
КонецФункции

Функция РасчетРезерваОтпусков(Организация, ПериодРегистрации, ТаблицаНачисленнаяЗарплатаИВзносы)
	
	Если НЕ УчетЗарплаты.ИспользованиеРезерваОтпусков(Организация) Тогда
		//Учет резерва отпусков не ведется
		Возврат ТаблицаНачисленнаяЗарплатаИВзносы;
	КонецЕсли;	
	
	Срез = РегистрыСведений.КоэффициентРезерваОтпусков.СрезПоследних(ПериодРегистрации,Новый Структура ("Организация", Организация));
	Если Срез.Количество() = 0 Тогда
		//коэффициент не задан, по умолчанию 1
		КоэффициентРезерваОтпусков = 1;
	Иначе
		КоэффициентРезерваОтпусков = Мин(Срез[0].Коэффициент,1);
	Конецесли;
	
	Если КоэффициентРезерваОтпусков = 0 Тогда
		//Распределять не требуется
		Возврат ТаблицаНачисленнаяЗарплатаИВзносы;
	КонецЕсли;	
	
	Для Каждого СтрокаТаблицы из ТаблицаНачисленнаяЗарплатаИВзносы Цикл
		Если СтрокаТаблицы.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НачисленоОтпускныеДоход Тогда
			Сумма = СтрокаТаблицы.Сумма;
			СуммаВзносы = СтрокаТаблицы.СуммаВзносы;
			Резерв = Окр(Сумма*КоэффициентРезерваОтпусков,2);
			РезервВзносы = Окр(СуммаВзносы*КоэффициентРезерваОтпусков,2);
			
			//Оставляем сумму за вычетом резерва
			СтрокаТаблицы.Сумма = Сумма - Резерв;
			СтрокаТаблицы.СуммаВзносы = СуммаВзносы - РезервВзносы;
			
			//Добавляем строки за счет резерва
			СтрокаРезерв = ТаблицаНачисленнаяЗарплатаИВзносы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезерв, СтрокаТаблицы);
			СтрокаРезерв.Сумма = Резерв;
			СтрокаРезерв.СуммаВзносы = РезервВзносы;
			СтрокаРезерв.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НачисленоОтпускныеРезерв;
		КонецЕсли;
		
	КонецЦикла;	
	
	Возврат ТаблицаНачисленнаяЗарплатаИВзносы;
	
КонецФункции	


////////////////////////////////////////////////////////////////////////////////
// Блок функций первоначального заполнения и обновления ИБ
//

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	
КонецПроцедуры
