#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти	
	
#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Инвентарная карточка НМА (форма НА-2)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НА2";
	КомандаПечати.Представление = НСтр("ru='Форма НА-2';uk='Форма НА-2'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой инвентарной карточки НМА (форма НА-2)
// Возвращаемое значение:
// Табличный документ - печатная форма инвентарной карточки НМА
Функция ПечатьНА2(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.НематериальныеАктивы.ПФ_MXL_UK_НА2");
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Форма_НА2";
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НематериальныйАктив",   Ссылка);
		Запрос.УстановитьПараметр("СостояниеПринятКУчету", Перечисления.ВидыСостоянийНМА.ПринятКУчету);
		Запрос.УстановитьПараметр("СостояниеСписан",       Перечисления.ВидыСостоянийНМА.Списан);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПервоначальныеСведенияНМА_БУ.Организация                             КАК Организация,
		|	ПервоначальныеСведенияНМА_БУ.Организация.НаименованиеПолное          КАК НаименованиеПолноеОрганизации,
		|	ПервоначальныеСведенияНМА_БУ.Организация.КодПоЕДРПОУ                 КАК КодЕДРПОУ,
		|	ЕСТЬNULL(ПервоначальныеСведенияНМА_БУ.ПервоначальнаяСтоимость, 0)    КАК ПервоначальнаяСтоимость,
		|	ЕСТЬNULL(ПервоначальныеСведенияНМА_БУ.СрокПолезногоИспользования, 0) КАК СрокИспользования,
		|	ЕСТЬNULL(ПервоначальныеСведенияНМА_БУ.ЛиквидационнаяСтоимость, 0)    КАК ЛиквидационнаяСтоимость,
		|	ПринятиеКУчету.РегистраторДата                                       КАК ДатаЗаписи,
		|	ПринятиеКУчету.РегистраторНомер                                      КАК НомерЗаписи,
		|	Списание.РегистраторДата                                             КАК ДатаУбытия,
		|	Списание.РегистраторНомер                                            КАК НомерУбытия,
		|	СчетаУчетаНМА_БУ.СчетУчета                                           КАК СчетУчета
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(, 
		|	                НематериальныйАктив = &НематериальныйАктив) КАК ПервоначальныеСведенияНМА_БУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				СостоянияНМАОрганизаций.Организация         КАК Организация,
		|				СостоянияНМАОрганизаций.НематериальныйАктив КАК НематериальныйАктив,
		|				СостоянияНМАОрганизаций.Регистратор.Дата    КАК РегистраторДата,
		|				СостоянияНМАОрганизаций.Регистратор.Номер   КАК РегистраторНомер
		|			ИЗ
		|				РегистрСведений.СостоянияНМАОрганизаций КАК СостоянияНМАОрганизаций
		|			ГДЕ
		|				СостоянияНМАОрганизаций.Состояние = &СостояниеПринятКУчету
		|				И СостоянияНМАОрганизаций.НематериальныйАктив = &НематериальныйАктив
		|		
		|			УПОРЯДОЧИТЬ ПО
		|				РегистраторДата УБЫВ) КАК ПринятиеКУчету
		|		ПО ПервоначальныеСведенияНМА_БУ.Организация = ПринятиеКУчету.Организация
		|			И ПервоначальныеСведенияНМА_БУ.НематериальныйАктив = ПринятиеКУчету.НематериальныйАктив
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				СостоянияНМАОрганизаций.Организация         КАК Организация,
		|				СостоянияНМАОрганизаций.НематериальныйАктив КАК НематериальныйАктив,
		|				СостоянияНМАОрганизаций.Регистратор.Дата    КАК РегистраторДата,
		|				СостоянияНМАОрганизаций.Регистратор.Номер   КАК РегистраторНомер
		|			ИЗ
		|				РегистрСведений.СостоянияНМАОрганизаций КАК СостоянияНМАОрганизаций
		|			ГДЕ
		|				СостоянияНМАОрганизаций.Состояние = &СостояниеСписан
		|				И СостоянияНМАОрганизаций.НематериальныйАктив = &НематериальныйАктив
		|		
		|			УПОРЯДОЧИТЬ ПО
		|				РегистраторДата УБЫВ) КАК Списание
		|		ПО ПервоначальныеСведенияНМА_БУ.Организация = Списание.Организация
		|			И ПервоначальныеСведенияНМА_БУ.НематериальныйАктив = Списание.НематериальныйАктив
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(,
		|			                НематериальныйАктив = &НематериальныйАктив) КАК СчетаУчетаНМА_БУ
		|		ПО ПервоначальныеСведенияНМА_БУ.Организация = СчетаУчетаНМА_БУ.Организация
		|			И ПервоначальныеСведенияНМА_БУ.НематериальныйАктив = СчетаУчетаНМА_БУ.НематериальныйАктив
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.КодыОрганизации.СрезПоследних(, ) КАК КодыОрганизации
		|		ПО ПервоначальныеСведенияНМА_БУ.Организация = КодыОрганизации.Организация";
		
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Нет данных для печати актива %1. Актив еще не принят к учету.';uk='Немає даних для друку активу %1. Актив ще не прийнятий до обліку.'"), Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Продолжить;
			
		КонецЕсли;
		
		Выборка   = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
		
			ОбластьМакета = Макет.ПолучитьОбласть("НА2");
			Параметры     = ОбластьМакета.Параметры;
			Параметры.Заполнить(Выборка);
			Параметры.ИнвентарныйНомер             = СокрЛП(Ссылка.Код);
			Параметры.НаименованиеПолное           = СокрЛП(Ссылка.НаименованиеПолное);
			Параметры.НаименованиеСХарактеристикой = СокрЛП(Ссылка.НаименованиеПолное) 
			                                         + Символы.ПС + СокрЛП(Ссылка.ПрочиеСведения);
			Параметры.ПрочиеСведения = СокрЛП(Ссылка.ПрочиеСведения);
			
			Если Выборка.СрокИспользования = 0 Тогда
				
				Параметры.ГодичнаяСуммаАмортизации = 0;
				
			Иначе
				
				Параметры.ГодичнаяСуммаАмортизации = 12 * (Выборка.ПервоначальнаяСтоимость - Выборка.ЛиквидационнаяСтоимость)
				                                     / Выборка.СрокИспользования; 
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
	
	
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);

	КонецЦикла;	
	
	Возврат ТабДокумент
	
КонецФункции  

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НА2") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "НА2", НСтр("ru='Форма НА-2';uk='Форма НА-2'"), ПечатьНА2(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли