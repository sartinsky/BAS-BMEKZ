////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не указан владелец банковского счета!';uk='Не зазначений власник банківського рахунку!'"),,,, Отказ);
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации") Тогда
		
		УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Владелец));
		
	Иначе
		
//++ БУ ЗИК
		Если Не ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
//~		Если Не ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") 
//~			и Не ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
//-- БУ ЗИК
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='Неверно указан владелец банковского счета!';uk='Невірно вказаний власник банківського рахунку!'"),,,, Отказ);
			Возврат;
		КонецЕсли;
	
	КонецЕсли;
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ОбработатьВыборБанка(ЭтаФорма, Ложь);
	
	БанкНеВыбран            = НСтр("ru='<заполняется автоматически после ввода МФО>';uk='<заповнюється автоматично після введення МФО>'");
	
	Если Параметры.Ключ.Пустая() Тогда
		
		Объект.ВалютаДенежныхСредств = ВалютаРегламентированногоУчета;
		
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	ЕстьПравоНаРедактирование = ПравоНаРедактирование();
	
	УправлениеФормой(ЭтаФорма);
	
	РазделениеВключено = ОбщегоНазначенияПовтИсп.РазделениеВключено();
	
	ЗаполнитьСписокВидовСчета();
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Объект.ВалютаДенежныхСредств = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		
		Если Объект.Банк.Пустая() Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Банк с МФО ""%1"" не найден в справочнике банков';uk='Банк з МФО ""%1"" не знайдений у довіднику банків'"), МФОБанка);
			ТекстОшибки = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(
				"Поле", "Корректность", "МФО",,, ТекстОшибки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "МФОБанка",, Отказ);
		КонецЕсли;	
		
	КонецЕсли;
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрОповещения = Новый Структура("Ссылка, Владелец", Объект.Ссылка, Объект.Владелец);
	
	Оповестить("ИзмененБанковскийСчет", ПараметрОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписанЭлементБанк" Тогда
		
		Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Банки")
			И ЗначениеЗаполнено(Параметр)
			И Объект.Банк <> Параметр Тогда
			
			Объект.Банк = Параметр;
			
		КонецЕсли;
		
		ОбработатьВыборБанка(ЭтаФорма, Ложь);
		УправлениеФормой(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	Объект.НомерСчета = СокрЛП(Объект.НомерСчета);
	
	Если Не ПустаяСтрока(Объект.НомерСчета) Тогда
		НомерСчетаПриИзмененииСервер();
	КонецЕсли;
	УстановитьНаименованиеСчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДенежныхСредствПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) Тогда
		Объект.ВалютаДенежныхСредств = ВалютаРегламентированногоУчета;
	КонецЕсли;
	
	Объект.Валютный = Объект.ВалютаДенежныхСредств <> ВалютаРегламентированногоУчета;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура МФОБанкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбораБанка();
	
КонецПроцедуры

&НаКлиенте
Процедура МФОБанкаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокНайденныхБанков = НайтиБанкВКлассификаторе(СокрЛП(Текст), Элемент.Имя, Объект.Валютный);
	Если СписокНайденныхБанков <> Неопределено Тогда
		Если СписокНайденныхБанков.Количество() > 1 Тогда
			СтандартнаяОбработка = Ложь;
			ДанныеВыбора         = СписокНайденныхБанков;
		ИначеЕсли СписокНайденныхБанков.Количество() = 1 Тогда
			Объект.Банк          = СписокНайденныхБанков[0].Значение;
			ОбработатьВыборБанка(ЭтаФорма);
		Иначе
			ПредложитьСтандартныйВыбор(СокрЛП(Текст), Элемент.Имя, Объект.Валютный);
		КонецЕсли;
	КонецЕсли;
	
	ТекущийЭлемент = Элемент;
	
КонецПроцедуры

&НаКлиенте
Процедура МФОБанкаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЕстьПравоНаРедактирование Тогда
		Возврат;
	КонецЕсли; 
	
	Объект.Банк = ВыбранноеЗначение;
	ОбработатьВыборБанка(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура МФОБанкаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РеквизитыБанка       = Неопределено;
	Объект.Банк          = Неопределено;
	ОбработатьВыборБанка(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура БанкНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.Банк) Тогда
		ОткрытьФорму("Справочник.Банки.ФормаОбъекта", Новый Структура("Ключ", Объект.Банк), ЭтаФорма);
	Иначе
		ОткрытьФормуВыбораБанка();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	СформироватьАвтоНаименование(ЭтаФорма, Объект.Наименование);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВсеБанки(Команда)
	
	ОткрытьФормуВыбораБанка();
	
КонецПроцедуры

&НаКлиенте 
Процедура НайтиБанк()
	
	ТекущийЭлемент = Элементы.МФОБанка;
	СписокНайденныхБанков = НайтиБанкВКлассификаторе(СокрЛП(МФОБанка), "МФОБанка", Объект.Валютный);
	
	Если СписокНайденныхБанков <> Неопределено И СписокНайденныхБанков.Количество() = 0 Тогда
		ПредложитьСтандартныйВыбор(СокрЛП(МФОБанка), "МФОБанка", Объект.Валютный);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Процедура ОбработатьВыборБанка(Форма, ВызватьУправлениеФормой = Истина)

	Форма.РеквизитыБанка = ПолучитьРеквизитыБанка(Форма.Объект.Банк);
	Форма.МФОБанка       = Форма.РеквизитыБанка.Код;
	
	Если ВызватьУправлениеФормой Тогда
		УправлениеФормой(Форма);
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	УстановитьНаименованиеСчета(Форма);
	
	Если ЗначениеЗаполнено(Объект.Банк) Тогда
		Форма.Банк = Форма.РеквизитыБанка.Наименование + " " + Форма.РеквизитыБанка.Город;
		Элементы.СтраницыБанк.ТекущаяСтраница = Элементы.СтраницаБанк;
	Иначе
		Элементы.СтраницыБанк.ТекущаяСтраница = Элементы.СтраницаБанкНеВыбран;
	КонецЕсли;
	
	Элементы.НомерИДатаРазрешения.Доступность = Объект.Валютный;
	
	Элементы.НайтиБанк.Доступность 	= Форма.ЕстьПравоНаРедактирование;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПравоНаРедактирование()
	Возврат ПравоДоступа("Изменение", Метаданные.Справочники.БанковскиеСчета);
КонецФункции 

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		Элементы.ЗаголовокВладелец.Заголовок = НСтр("ru=' Контрагент:';uk=' Контрагент:'");
		КлючСохраненияПоложенияОкна = "СчетКонтрагента";
		
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации") Тогда
		
		Элементы.ЗаголовокВладелец.Заголовок = НСтр("ru='Организация:';uk='Організація:'");
		Элементы.ГруппаРеквизитыПечатныхФорм.Видимость  = Ложь;
		КлючСохраненияПоложенияОкна = "СчетОрганизации";
		
//++ БУ ЗИК
//~	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
//~		
//~		Элементы.ЗаголовокВладелец.Заголовок = НСтр("ru='Физическое лицо:';uk='Фізична особа:'");
//~		Этаформа.Заголовок = НСтр("ru='Для выплаты зарплаты:';uk='Для виплати зарплати:'");
//~		КлючСохраненияПоложенияОкна = "СчетФизическогоЛица";
//-- БУ ЗИК		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыБанка(Знач Банк)
	
	СтрокаРеквизитов    = Новый Структура("Код, КоррСчет, Наименование, Город");
	СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Банк,
		СтрокаРеквизитов);
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьНаименованиеСчета(Форма)
	
	Объект = Форма.Объект;
	
	Если ПустаяСтрока(Объект.Наименование) ИЛИ Объект.Наименование = Форма.АвтоНаименование Тогда
		Форма.АвтоНаименование = СформироватьАвтоНаименование(Форма);
		Если НЕ ПустаяСтрока(Форма.АвтоНаименование) И Форма.АвтоНаименование <> Объект.Наименование Тогда
			Объект.Наименование = Форма.АвтоНаименование;
		КонецЕсли;
	Иначе
		Форма.АвтоНаименование  = СформироватьАвтоНаименование(Форма, Объект.Наименование);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьАвтоНаименование(Форма, Знач Текст = "")
	
	Элементы     = Форма.Элементы;
	Объект       = Форма.Объект;
	БанкЗаполнен = ЗначениеЗаполнено(Объект.Банк);
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	СтрокаНаименования1 = Лев(
		Объект.НомерСчета
		+ ?(Объект.Валютный, " (" + Объект.ВалютаДенежныхСредств + ")", "")
		+ ?(БанкЗаполнен, " в " + Объект.Банк, ""), 
		100);
	
	Если НЕ ПустаяСтрока(СтрокаНаименования1) Тогда
		Элементы.Наименование.СписокВыбора.Добавить(СокрЛП(СтрокаНаименования1));
	КонецЕсли;
	
	ТекстНомерСчетаВалюта = Объект.НомерСчета + ?(Объект.Валютный, ", " + Объект.ВалютаДенежныхСредств , "");
	СтрокаНаименования2   = Лев(
		?(БанкЗаполнен, "" + Объект.Банк, "")
		+ ?(ПустаяСтрока(ТекстНомерСчетаВалюта), "", " (" + ТекстНомерСчетаВалюта + ")"), 
		100);
	
	Строки1и2НеРавны = СокрЛП(СтрокаНаименования2) <> "(" + СтрокаНаименования1 + ")";
	Если СтрокаНаименования2 <> "" И Строки1и2НеРавны
			И Элементы.Наименование.СписокВыбора.НайтиПоЗначению(СтрокаНаименования2) = Неопределено Тогда
		Элементы.Наименование.СписокВыбора.Добавить(СокрЛП(СтрокаНаименования2));
	КонецЕсли;
	
	СтрокаНаименования = Лев(
		Объект.НомерСчета 
		+ ?(БанкЗаполнен, ", " + Объект.Банк, "") 
		+ ?(Объект.Валютный, ", " + Объект.ВалютаДенежныхСредств , ""),
		100);
	
	Если НЕ ПустаяСтрока(СтрокаНаименования) И Элементы.Наименование.СписокВыбора.НайтиПоЗначению(СтрокаНаименования) = Неопределено Тогда
		Элементы.Наименование.СписокВыбора.Добавить(СокрЛП(СтрокаНаименования));
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Текст) И Элементы.Наименование.СписокВыбора.НайтиПоЗначению(Текст) = Неопределено Тогда
		Элементы.Наименование.СписокВыбора.Добавить(СокрЛП(Текст));
	КонецЕсли;
	
	Возврат СтрокаНаименования;
	
КонецФункции

&НаКлиенте
Функция НайтиБанкВКлассификаторе(ТекстДляПоиска, Поле, Валютный = Ложь)
	
	Если ПустаяСтрока(ТекстДляПоиска) Тогда
		ОчиститьСообщения();
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения(
			"Поле", "Заполнение", "МФО");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,, "МФОБанка");
		Возврат Неопределено;
	КонецЕсли;
	
	Если Найти(Поле, "МФО") = 1 Тогда
		ОбластьПоиска = "Код";
	ИначеЕсли Найти(Поле, "Коррсчет") = 1 Тогда
		ОбластьПоиска = "КоррСчет";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	СписокНайденныхБанков = ПолучитьСписокБанковПоРеквизитам(ОбластьПоиска, ТекстДляПоиска);
	
	//Если СписокНайденныхБанков.Количество() = 0 Тогда
	//	
	//	Если ОбластьПоиска = "Код" Тогда
	//		
	//		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	//			НСтр("ru='Банк с МФО ""%1"" не найден в справочнике банков';uk='Банк з МФО ""%1"" не знайдений у довіднику банків'"), ТекстДляПоиска);
	//		
	//	ИначеЕсли ОбластьПоиска = "КоррСчет" Тогда
	//		
	//		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	//			НСтр("ru='Банк с корр. счетом ""%1"" не найден в справочнике банков';uk='Банк з кор. рахунком ""%1"" не знайдений у довіднику банків'"), ТекстДляПоиска);
	//		
	//	КонецЕсли;
	//	
	//	Кнопки	= Новый СписокЗначений;
	//	Кнопки.Добавить("Выбрать",     НСтр("ru='Выбрать из списка';uk='Вибрати зі списку'"));
	//	Если НЕ РазделениеВключено Тогда
	//		Кнопки.Добавить("Создать", НСтр("ru='Создать банк';uk='Створити банк'"));
	//	КонецЕсли;
	//	Кнопки.Добавить("Продолжить", НСтр("ru='Продолжить ввод';uk='Продовжити введення'"));
	//	Кнопки.Добавить("Отменить",   НСтр("ru='Отменить ввод';uk='Скасувати введення'"));
	//	
	//	Ответ = Вопрос(ТекстВопроса,  Кнопки,, "Выбрать", НСтр("ru='Банк не найден';uk='Банк не знайдений'"));
	//	
	//	Если Ответ = "Выбрать" Тогда
	//		
	//		Возврат СписокНайденныхБанков;
	//		
	//	ИначеЕсли Ответ = "Создать" Тогда
	//		
	//		ПараметрыФормы = Новый Структура("Код, РучноеИзменение", СокрЛП(ТекстДляПоиска), Истина);
	//		ОткрытьФормуМодально("Справочник.Банки.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	//		
	//	ИначеЕсли Ответ = "Отменить" Тогда
	//		Если ЗначениеЗаполнено(Объект.Банк) Тогда
	//			ЭтаФорма[Поле] = РеквизитыБанка.Код;
	//		Иначе
	//			ЭтаФорма[Поле] = "";
	//		КонецЕсли;
	//		
	//	КонецЕсли;
	//	
	//	Возврат Неопределено;
	//
	//	
	//КонецЕсли;
	
	Возврат СписокНайденныхБанков;
	
КонецФункции

&НаКлиенте
Процедура ПредложитьСтандартныйВыбор(ТекстДляПоиска, Поле, Валютный)
	Перем ТекстОшибки;
	
	Если Найти(Поле, "МФО") = 1 Тогда
		ОбластьПоиска = "Код";
	ИначеЕсли Найти(Поле, "Коррсчет") = 1 Тогда
		ОбластьПоиска = "КоррСчет";
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ОбластьПоиска = "Код" Тогда
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Банк с МФО ""%1"" не найден в справочнике банков';uk='Банк з МФО ""%1"" не знайдений у довіднику банків'"), ТекстДляПоиска);
		
	ИначеЕсли ОбластьПоиска = "КоррСчет" Тогда
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Банк с корр. счетом ""%1"" не найден в справочнике банков';uk='Банк з кор. рахунком ""%1"" не знайдений у довіднику банків'"), ТекстДляПоиска);
		
	КонецЕсли;
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить("Выбрать",     НСтр("ru='Выбрать из списка';uk='Вибрати зі списку'"));
	Если НЕ РазделениеВключено Тогда
		Кнопки.Добавить("Создать", НСтр("ru='Создать банк';uk='Створити банк'"));
	КонецЕсли;
	Кнопки.Добавить("Продолжить",  НСтр("ru='Продолжить ввод';uk='Продовжити введення'"));
	Кнопки.Добавить("Отменить",    НСтр("ru='Отменить ввод';uk='Скасувати введення'"));
	
	ДополнительныеПараметры   = Новый Структура("Поле, ТекстДляПоиска", Поле, ТекстДляПоиска);
	ОписаниеОповещениеяВопрос = Новый ОписаниеОповещения("ПредложитьСтандартныйВыборЗавершение",
		ЭтотОбъект, ДополнительныеПараметры);
	
	ПоказатьВопрос(
		ОписаниеОповещениеяВопрос,
		ТекстВопроса,
		Кнопки,,
		"Выбрать",
		НСтр("ru='Банк не найден';uk='Банк не знайдений'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПредложитьСтандартныйВыборЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = "Выбрать" Тогда
		
		ОткрытьФормуВыбораБанка();
		
	ИначеЕсли Ответ = "Создать" Тогда
		
		ПараметрыФормы = Новый Структура("Код, РучноеИзменение", СокрЛП(ДополнительныеПараметры.ТекстДляПоиска), Истина);
		ОткрытьФорму("Справочник.Банки.ФормаОбъекта",
			ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли Ответ = "Отменить" Тогда
		Если ЗначениеЗаполнено(Объект.Банк) Тогда
			ЭтотОбъект[ДополнительныеПараметры.Поле] = РеквизитыБанка.Код;
		Иначе
			ЭтотОбъект[ДополнительныеПараметры.Поле] = "";
		КонецЕсли;
		
	Иначе
		ТекущийЭлемент = Элементы[ДополнительныеПараметры.Поле];
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокБанковПоРеквизитам(Знач Поле, Знач Значение) Экспорт

	СписокБанков = Новый СписокЗначений;
	
	Если ПустаяСтрока(Значение) Тогда
	
		Возврат СписокБанков;
		
	КонецЕсли;
	
	ТаблицаБанков = Справочники.Банки.ПолучитьТаблицуБанковПоРеквизитам(Поле, Значение);
	
	СписокБанков.ЗагрузитьЗначения(ТаблицаБанков.ВыгрузитьКолонку("Ссылка"));
	
	Возврат СписокБанков;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуВыбораБанка()
	
	ПараметрыФормы	= Новый Структура(
		"ТекущаяСтрока, ПараметрВыборГруппИЭлементов",
		Объект.Банк, ИспользованиеГруппИЭлементов.Элементы);
		
	ОткрытьФорму("Справочник.Банки.ФормаВыбора", ПараметрыФормы, Элементы.МФОБанка);
	
КонецПроцедуры

&НаСервере
Процедура НомерСчетаПриИзмененииСервер()
		
	Если НЕ Объект.Ссылка.Пустая()
		И НЕ ЗначениеЗаполнено(Объект.Ссылка.НомерСчетаУстаревший)
		И Объект.НомерСчета <> Объект.Ссылка.НомерСчета
		И УправлениеДенежнымиСредствами.НомерБанковскогоСчетаСоответствуетСтандартуIBAN(Объект.НомерСчета)
		И НЕ УправлениеДенежнымиСредствами.НомерБанковскогоСчетаСоответствуетСтандартуIBAN(Объект.Ссылка.НомерСчета) Тогда
		
		Объект.НомерСчетаУстаревший = Объект.Ссылка.НомерСчета;
		
	КонецЕсли;
	
	БанкПоСчету = УправлениеДенежнымиСредствами.ПолучитьБанкПоНомеруСчетаIBAN(Объект.НомерСчета);
	Если ЗначениеЗаполнено(БанкПоСчету) Тогда
		Объект.Банк = БанкПоСчету;
		ОбработатьВыборБанка(ЭтаФорма, Ложь);
	Иначе
		КодБанка = УправлениеДенежнымиСредствами.ПолучитьКодБанкаПоНомеруСчетаIBAN(Объект.НомерСчета);
		Если ЗначениеЗаполнено(КодБанка) Тогда
			Объект.Банк = Неопределено;
			ОбработатьВыборБанка(ЭтаФорма, Ложь);
			МФОБанка = КодБанка;
		КонецЕсли;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВидовСчета()
	
	СписокВидСчета = Элементы.ВидСчета.СписокВыбора;
	СписокВидСчета.Очистить();
	
	ЯзыкИБ = Локализация.КодЯзыкаИнформационнойБазы(); 

	СписокВидСчета.Добавить(НСтр("ru='Текущий';uk='Поточний'",ЯзыкИБ));
	СписокВидСчета.Добавить(НСтр("ru='Депозитный';uk='Депозитний'",ЯзыкИБ));
	СписокВидСчета.Добавить(НСтр("ru='Инвестиционный';uk='Інвестиційний'",ЯзыкИБ));
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

