
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПараметрыГрафикаПоУмолчанию() Экспорт
	
	ДлительностьРабочейНедели = 40;
	УчитыватьПраздники = Истина;
	СпособЗаполнения = Перечисления.СпособыЗаполненияГрафикаРаботы.ПоНеделям;
	
	Для НомерДня = 1 По 7 Цикл
		
		СтрокаШаблона = ШаблонЗаполнения.Добавить();
		СтрокаШаблона.ДеньВключенВГрафик = НомерДня < 6;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеГрафика(ДанныеГрафика, НомерТекущегоГода) Экспорт
	
	КоличествоДнейВЦикле = ШаблонЗаполнения.Количество();

	Если КоличествоДнейВЦикле = 0 Тогда
		Возврат;
	КонецЕсли;	
			
	ДлинаСуток = 86400;
	
	Если ВидГрафика = Перечисления.ВидыРабочихГрафиков.Сменный Тогда
		ДатаНачалаИнтервалаЗаполнения = Макс(Дата(НомерТекущегоГода, 1, 1), ДатаОтсчета);
		
	Иначе
		ДатаНачалаИнтервалаЗаполнения = Дата(НомерТекущегоГода, 1, 1);	
	КонецЕсли;	
	ДатаОкончанияИнтервалаЗаполнения = КонецГода(ДатаНачалаИнтервалаЗаполнения);
		
	Если ВидГрафика = Перечисления.ВидыРабочихГрафиков.Пятидневка 
		ИЛИ ВидГрафика = Перечисления.ВидыРабочихГрафиков.Шестидневка Тогда
		НомерДняЦикла = ДеньНедели(ДатаНачалаИнтервалаЗаполнения);
	Иначе
		НомерДняЦикла = ((ДатаНачалаИнтервалаЗаполнения - ДатаОтсчета)/ДлинаСуток) % КоличествоДнейВЦикле + 1;
	КонецЕсли;	
	
	ЧасыПоДнямЦикла = ИНАГРО_УчетРабочегоВремениКлиентСервер.ДанныеГрафикаЧасыПоДнямЦикла(ШаблонЗаполнения, Смены);
	
	ДанныеПроизводственногоКалендаря = РегистрыСведений.ИНАГРО_РегламентированныйПроизводственныйКалендарь.ДанныеПроизводственногоКалендаря(НомерТекущегоГода);
	
	ОбрабатываемаяДата = ДатаНачалаИнтервалаЗаполнения;
	ПредыдущаяДата = '00010101';
	
	ПеренесенныеДни = Новый Массив;
	Пока ОбрабатываемаяДата <= ДатаОкончанияИнтервалаЗаполнения  Цикл
		
		ДанныеПроизводственногоКалендаряЗаДень = ДанныеПроизводственногоКалендаря.Найти(ОбрабатываемаяДата, "ДатаКалендаря");
		
		Если ДанныеПроизводственногоКалендаряЗаДень = Неопределено Тогда
			ВидДня = Перечисления.ИНАГРО_ВидыДнейПроизводственногоКалендаря.Рабочий;
			ДатаПереноса = '00010101';
		Иначе
			ВидДня = ДанныеПроизводственногоКалендаряЗаДень.ВидДня;
			ДатаПереноса = ДанныеПроизводственногоКалендаряЗаДень.ДатаПереноса;
		КонецЕсли;	
		
		НомерДняМесяца = День(ОбрабатываемаяДата);
		
		Если Месяц(ОбрабатываемаяДата) <> Месяц(ПредыдущаяДата) Или ПредыдущаяДата = '00010101' Тогда
			СтрокиГрафикаПоВидамВремени = СтрокиТаблицыГрафикаЗаМесяц(ДанныеГрафика, Месяц(ОбрабатываемаяДата));			
		КонецЕсли;	
		
		Если Не ВидГрафика = Перечисления.ВидыРабочихГрафиков.Сменный Тогда
	        Если ВидДня = Перечисления.ИНАГРО_ВидыДнейПроизводственногоКалендаря.Суббота Тогда
				ЧасовЗаДень = ЧасыПоДнямЦикла[6];
			ИначеЕсли ВидДня = Перечисления.ИНАГРО_ВидыДнейПроизводственногоКалендаря.Воскресенье Тогда
				ЧасовЗаДень = ЧасыПоДнямЦикла[7];
			ИначеЕсли ДатаПереноса <> '00010101' Тогда
				ЧасовЗаДень = ЧасыПоДнямЦикла[ДеньНедели(ДатаПереноса)];	
			Иначе
				ЧасовЗаДень = ЧасыПоДнямЦикла[НомерДняЦикла];
			КонецЕсли;
		Иначе
			ЧасовЗаДень = ЧасыПоДнямЦикла[НомерДняЦикла];	
		КонецЕсли;	
			
		Если (Не ВидДня = Перечисления.ИНАГРО_ВидыДнейПроизводственногоКалендаря.Праздник ИЛИ ВидГрафика = Перечисления.ВидыРабочихГрафиков.Сменный)
			И ПеренесенныеДни.Найти(ОбрабатываемаяДата) = Неопределено Тогда
			
			ЗаполнитьВремяЗаДень(ОбрабатываемаяДата, ВидДня, ЧасовЗаДень, СтрокиГрафикаПоВидамВремени, ВидГрафика);
		КонецЕсли;
				
		ОбрабатываемаяДата = ОбрабатываемаяДата + ДлинаСуток;
		
		НомерДняЦикла = НомерДняЦикла + 1;
		Если НомерДняЦикла > КоличествоДнейВЦикле Тогда
			НомерДняЦикла = 1;
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого СтрокаГрафика Из ДанныеГрафика Цикл
		ИНАГРО_УчетРабочегоВремениКлиентСервер.ДанныеГрафикаРассчитатьИтогоПоСтроке(СтрокаГрафика);
	КонецЦикла;	
	
КонецПроцедуры	

Функция СтрокиТаблицыГрафикаЗаМесяц(ДанныеГрафика, НомерМесяца)
	
	СтрокиПоВидамВремени = Новый Соответствие;
	
	СтрокиЗаМесяц = ДанныеГрафика.НайтиСтроки(Новый Структура("НомерМесяца", НомерМесяца));
	
	Для Каждого СтрокаТаблицы Из СтрокиЗаМесяц Цикл
		СтрокиПоВидамВремени.Вставить(СтрокаТаблицы.ВидВремени, СтрокаТаблицы);
	КонецЦикла;
	
	Возврат СтрокиПоВидамВремени;
	
КонецФункции

Процедура ЗаполнитьВремяЗаДень(ОбрабатываемаяДата, ВидДня, ЧасовЗаДень, СтрокиГрафикаПоВидамВремени, ВидГрафика = Неопределено)
	
	НомерДняМесяца = День(ОбрабатываемаяДата);
	
	Для Каждого ЧасыПоВидуВремени Из ЧасовЗаДень Цикл
		СтрокаТаблицыГрафика = СтрокиГрафикаПоВидамВремени.Получить(ЧасыПоВидуВремени.Ключ);	
		
		Если СтрокаТаблицыГрафика <> Неопределено Тогда
			СтрокаТаблицыГрафика["День" + НомерДняМесяца] = ЧасыПоВидуВремени.Значение;
		КонецЕсли;	
	КонецЦикла;	
	
	Если ВидГрафика = Перечисления.ВидыРабочихГрафиков.Сменный Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидДня = Перечисления.ИНАГРО_ВидыДнейПроизводственногоКалендаря.Предпраздничный Тогда
		
		ОсталосьВычестьЧасов = 1;
		ЧасовПоВидуВремени = ЧасовЗаДень.Получить(Справочники.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Работа);
			
		Если ЧасовПоВидуВремени <> Неопределено И ЧасовПоВидуВремени > 0 Тогда 
			СтрокаТаблицыГрафика = СтрокиГрафикаПоВидамВремени.Получить(Справочники.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Работа);
			
			Если СтрокаТаблицыГрафика <> Неопределено Тогда
				КоличествоВычитаемыхЧасов = Мин(СтрокаТаблицыГрафика["День" + НомерДняМесяца], 1);
				СтрокаТаблицыГрафика["День" + НомерДняМесяца] = СтрокаТаблицыГрафика["День" + НомерДняМесяца] - КоличествоВычитаемыхЧасов;
				
				ОсталосьВычестьЧасов = ОсталосьВычестьЧасов - КоличествоВычитаемыхЧасов;
			КонецЕсли;	
			
			Если ОсталосьВычестьЧасов <= 0 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	
	Возврат
КонецПроцедуры

Процедура ЗаписатьДанныеГрафика(ДанныеГрафика, НомерГода) Экспорт
	
	Записать();
	ДанныеПроизводственногоКалендаря = РегистрыСведений.ИНАГРО_РегламентированныйПроизводственныйКалендарь.ДанныеПроизводственногоКалендаря(НомерГода);
	ИНАГРО_УчетРабочегоВремени.ЗаписатьДанныеГрафика(Ссылка, ДанныеГрафика, НомерГода, ДанныеПроизводственногоКалендаря);
	
КонецПроцедуры	

#КонецОбласти

#КонецЕсли
