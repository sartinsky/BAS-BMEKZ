#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПроцедурыИФункцииПечати

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	НомерГода = 0;
	
	Если ПараметрыПечати <> Неопределено Тогда
		ПараметрыПечати.Свойство("НомерГода", НомерГода);
	Иначе
		НомерГода = Год(ТекущаяДатаСеанса());
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
		МодульУправлениеПечатью = ОбщегоНазначения.ОбщийМодуль("УправлениеПечатью");
		МодульУправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
				КоллекцияПечатныхФорм,
				"ГрафикРаботы", НСтр("ru='График работы';uk='Графік роботи'"),
				ПечатнаяФормаГрафиковРаботы(МассивОбъектов, НомерГода),
				,
				"Справочник.ИНАГРО_ГрафикиРаботы.ПФ_MXL_ФормаГрафикаРаботы");
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатнаяФормаГрафиковРаботы(МассивОбъектов, Год)
	РезультатыЗапроса = ЗапросДляПечатиГрафиков(МассивОбъектов, Год).ВыполнитьПакет();
	КоличествоРезультатов = РезультатыЗапроса.Количество();
	
	ВыборкаДанныхОВремени = РезультатыЗапроса[КоличествоРезультатов - 2].Выбрать();
	ВыборкаДанныхГрафиков = РезультатыЗапроса[КоличествоРезультатов - 1].Выбрать();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.ИНАГРО_ГрафикиРаботы.ПФ_MXL_ФормаГрафикаРаботы");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ИНАГРО_ГрафикиРаботы_ФормаГрафикаРаботы";

	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.Автомасштаб = Истина;
	
	ОбластиМакета = Новый Массив;	
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластиМакета.Добавить(ОбластьШапка);
	
	ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластиМакета.Добавить(ОбластьЗаголовокТаблицы);
	
	ОбластьИтогоЗаМесяц = Макет.ПолучитьОбласть("ИтогоЗаМесяц");
	ОбластиМакета.Добавить(ОбластьИтогоЗаМесяц);

	ОбластьИтогоПоВидамВремениЗаМесяц = Макет.ПолучитьОбласть("ИтогоПоВидамВремениЗаМесяц");
	ОбластиМакета.Добавить(ОбластьИтогоПоВидамВремениЗаМесяц);

	ОбластьИтогоЗаКвартал = Макет.ПолучитьОбласть("ИтогоЗаКвартал");
	ОбластиМакета.Добавить(ОбластьИтогоЗаКвартал);
	
	ОбластьИтогоЗаКварталПоВидуВремени = Макет.ПолучитьОбласть("ИтогоЗаКварталПоВидамВремени");
	ОбластиМакета.Добавить(ОбластьИтогоЗаКварталПоВидуВремени);

	ОбластьИтогоЗаГод = Макет.ПолучитьОбласть("ИтогоЗаГод");
	ОбластиМакета.Добавить(ОбластьИтогоЗаГод);

	ОбластьИтогоЗаГодПоВидамВремени = Макет.ПолучитьОбласть("ИтогоЗаГодПоВидамВремени");
	ОбластиМакета.Добавить(ОбластьИтогоЗаГодПоВидамВремени);

	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	ОбластиМакета.Добавить(ОбластьПодпись);
	
	Пока ВыборкаДанныхОВремени.СледующийПозначениюПоля("ГрафикРаботы") Цикл
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОписаниеГрафика = ОписаниеГрафикаРаботы(ВыборкаДанныхГрафиков, ВыборкаДанныхОВремени.ГрафикРаботы); 
		
		УстановитьШиринуКолонокТабличногоДокумента(ОбластиМакета, ОписаниеГрафика.КоличествоВидовВремени);
		
		ОбластьШапка.Параметры.Наименование = ОписаниеГрафика.Наименование;
		ОбластьШапка.Параметры.Год = Формат(Год, "ЧГ="); 
		
		ОбластьШапка.Параметры.ОписаниеГрафика = ТекстОписанияГрафикаРаботы(ОписаниеГрафика);
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		Если ОписаниеГрафика.КоличествоВидовВремени > 1 Тогда 													  
			ОбластьЗаголовокТаблицы.Параметры.ОбластьДнейЗаголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Часы по видам времени %1, выведены в формате %2'"), 
				ОписаниеГрафика.ВидыВремениСтрока, 
				ОписаниеГрафика.ОбозначениеВидовВремени);	
		Иначе														  
			ОбластьЗаголовокТаблицы.Параметры.ОбластьДнейЗаголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Часов за день (%1)'"),
				ОписаниеГрафика.ВидыВремениСтрока);
		КонецЕсли;	
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		ДнейЗаГод  = 0;
		ЧасовЗаГод = 0;
		
		ИтогиЗаГодПоВидамВремени = ИтогиПоВидамВремениЗаПериод(ОписаниеГрафика);
		
		РабочихДнейЗаГодПоКалендарю = 0;
		РабочихЧасовЗаГодПоКалендарю = 0;
		ВыходныхДнейЗаГодПоКалендарю = 0;

		Пока ВыборкаДанныхОВремени.СледующийПозначениюПоля("Квартал") Цикл
			
			ДнейЗаКвартал  = 0;
			ЧасовЗаКвартал = 0;
			
			ИтогиЗаКварталПоВидамВремени = ИтогиПоВидамВремениЗаПериод(ОписаниеГрафика);
		
			РабочихДнейЗаКварталПоКалендарю = 0;
			РабочихЧасовЗаКварталПоКалендарю = 0;
			ВыходныхДнейЗаКварталПоКалендарю = 0;
			
			Пока ВыборкаДанныхОВремени.СледующийПозначениюПоля("Месяц") Цикл 			
				
				ИтогиЗаМесяцПоВидамВремени = ИтогиПоВидамВремениЗаПериод(ОписаниеГрафика);
				
				ДнейЗаМесяц  = 0;
				ЧасовЗаМесяц = 0;
								
				ОчиститьОбластьЯчеек(ОбластьИтогоЗаМесяц);
				ОчиститьОбластьЯчеек(ОбластьИтогоПоВидамВремениЗаМесяц);	
				
				ОбластьИтогоЗаМесяц.Параметры.Месяц = Формат(ВыборкаДанныхОВремени.Месяц, "ДФ=ММММ");
				
				Пока ВыборкаДанныхОВремени.СледующийПозначениюПоля("Дата") Цикл
					ЧасовЗаДень = 0;
					ЧасовПоВидамВремениТекст = "";
					Пока ВыборкаДанныхОВремени.Следующий() Цикл 
												
						НомерДня = День(ВыборкаДанныхОВремени.Дата);
						
						ДнейПоВидуВремени = ?(ВыборкаДанныхОВремени.Часов > 0, 1, 0);
						
						ИтогиЗаГодПоВидамВремени[ВыборкаДанныхОВремени.ВидУчетаВремени].Дни = 
							ИтогиЗаГодПоВидамВремени[ВыборкаДанныхОВремени.ВидУчетаВремени].Дни + ДнейПоВидуВремени;
						ИтогиЗаГодПоВидамВремени[ВыборкаДанныхОВремени.ВидУчетаВремени].Часы = 
							ИтогиЗаГодПоВидамВремени[ВыборкаДанныхОВремени.ВидУчетаВремени].Часы + ВыборкаДанныхОВремени.Часов;
							
						ИтогиЗаКварталПоВидамВремени[ВыборкаДанныхОВремени.ВидУчетаВремени].Дни = 
							ИтогиЗаКварталПоВидамВремени[ВыборкаДанныхОВремени.ВидУчетаВремени].Дни + ДнейПоВидуВремени;
						ИтогиЗаКварталПоВидамВремени[ВыборкаДанныхОВремени.ВидУчетаВремени].Часы = 
							ИтогиЗаКварталПоВидамВремени[ВыборкаДанныхОВремени.ВидУчетаВремени].Часы + ВыборкаДанныхОВремени.Часов;
	
						ИтогиЗаМесяцПоВидамВремени[ВыборкаДанныхОВремени.ВидУчетаВремени].Дни = 
							ИтогиЗаМесяцПоВидамВремени[ВыборкаДанныхОВремени.ВидУчетаВремени].Дни + ДнейПоВидуВремени;
						ИтогиЗаМесяцПоВидамВремени[ВыборкаДанныхОВремени.ВидУчетаВремени].Часы = 
							ИтогиЗаМесяцПоВидамВремени[ВыборкаДанныхОВремени.ВидУчетаВремени].Часы + ВыборкаДанныхОВремени.Часов;
						
						Если ВыборкаДанныхОВремени.ВидУчетаВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Работа") Тогда
							ЧасовЗаДень = ЧасовЗаДень + ВыборкаДанныхОВремени.Часов;
						Иначе
							ЧасовПоВидамВремениТекст = ЧасовПоВидамВремениТекст + "/" + Формат(ВыборкаДанныхОВремени.Часов, "ЧН=0; ЧГ="); 
						КонецЕсли;
					КонецЦикла;	
					
					ЧасовЗаМесяц = ЧасовЗаМесяц + ЧасовЗаДень;
					ДнейЗаМесяц = ДнейЗаМесяц + ?(ЧасовЗаДень > 0, 1, 0);
					
					ОбластьИтогоЗаМесяц.Параметры["ИтогоЗаДень" + НомерДня] = ЧасовЗаДень;
					Если ЧасовЗаДень > 0 Тогда 
						ОбластьИтогоПоВидамВремениЗаМесяц.Параметры["ПоВидамВремениЗаДень" + НомерДня] = Сред(ЧасовПоВидамВремениТекст, 2);
					Иначе
						ОбластьИтогоПоВидамВремениЗаМесяц.Параметры["ПоВидамВремениЗаДень" + НомерДня] = "";
					КонецЕсли;	
				КонецЦикла;
				
				ИтогоЧасовПоВидамВремениТекст = "";
				ИтогоДнейПоВидамВремениТекст = "";
				
				Для Каждого ВидВремени Из ОписаниеГрафика.ВидыВремени Цикл
					Если Не ВидВремени.Ссылка = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Работа") Тогда

					ИтогоЧасовПоВидамВремениТекст = ИтогоЧасовПоВидамВремениТекст + "/" 
						+ Формат(ИтогиЗаМесяцПоВидамВремени[ВидВремени].Часы, "ЧН=0; ЧГ=");
					ИтогоДнейПоВидамВремениТекст = ИтогоДнейПоВидамВремениТекст + "/" 
						+ Формат(ИтогиЗаМесяцПоВидамВремени[ВидВремени].Дни, "ЧН=0; ЧГ=");	
					КонецЕсли;
					
				КонецЦикла;
					
				ОбластьИтогоПоВидамВремениЗаМесяц.Параметры.ДнейПоВидуВремениЗаМесяц = Сред(ИтогоДнейПоВидамВремениТекст, 2);	
				ОбластьИтогоПоВидамВремениЗаМесяц.Параметры.ЧасовПоВидуВремениЗаМесяц = Сред(ИтогоЧасовПоВидамВремениТекст, 2);	
																				
				ОбластьИтогоЗаМесяц.Параметры.ДнейЗаМесяц = ДнейЗаМесяц;
				ОбластьИтогоЗаМесяц.Параметры.ЧасовЗаМесяц = ЧасовЗаМесяц;
				ОбластьИтогоЗаМесяц.Параметры.ДнейПоКалендарю = ВыборкаДанныхОВремени.РабочихДней;
				ОбластьИтогоЗаМесяц.Параметры.ЧасовПоКалендарю = ВыборкаДанныхОВремени.РабочихЧасов;
				ОбластьИтогоЗаМесяц.Параметры.ВыходныхПоКалендарю = ВыборкаДанныхОВремени.ВыходныхДней;
								
				ДнейЗаКвартал = ДнейЗаКвартал + ДнейЗаМесяц;
				ЧасовЗаКвартал = ЧасовЗаКвартал + ЧасовЗаМесяц; 
				РабочихДнейЗаКварталПоКалендарю = РабочихДнейЗаКварталПоКалендарю + ВыборкаДанныхОВремени.РабочихДней;
				РабочихЧасовЗаКварталПоКалендарю = РабочихЧасовЗаКварталПоКалендарю + ВыборкаДанныхОВремени.РабочихЧасов;
				ВыходныхДнейЗаКварталПоКалендарю = ВыходныхДнейЗаКварталПоКалендарю + ВыборкаДанныхОВремени.ВыходныхДней;
				
				ДнейЗаГод = ДнейЗаГод + ДнейЗаМесяц;
				ЧасовЗаГод = ЧасовЗаГод + ЧасовЗаМесяц; 
				РабочихДнейЗаГодПоКалендарю = РабочихДнейЗаГодПоКалендарю + ВыборкаДанныхОВремени.РабочихДней;
				РабочихЧасовЗаГодПоКалендарю = РабочихЧасовЗаГодПоКалендарю + ВыборкаДанныхОВремени.РабочихЧасов;
				ВыходныхДнейЗаГодПоКалендарю = ВыходныхДнейЗаГодПоКалендарю + ВыборкаДанныхОВремени.ВыходныхДней;
				
				ОбластиПроверкиВывода = Новый Массив;
				ОбластиПроверкиВывода.Добавить(ОбластьИтогоЗаМесяц);
				Если ОписаниеГрафика.КоличествоВидовВремени > 1 Тогда
					ОбластиПроверкиВывода.Добавить(ОбластьИтогоПоВидамВремениЗаМесяц);
				КонецЕсли;	
				
				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ОбластиПроверкиВывода) Тогда
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				КонецЕсли;
								
				ТабличныйДокумент.Вывести(ОбластьИтогоЗаМесяц);
				
				НомерПервойСтрокиМесяц = ТабличныйДокумент.ВысотаТаблицы;
				НомерПоследнейСтрокиМесяц = НомерПервойСтрокиМесяц;
				
				Если ОписаниеГрафика.КоличествоВидовВремени > 1 Тогда
					ТабличныйДокумент.Вывести(ОбластьИтогоПоВидамВремениЗаМесяц);
					НомерПоследнейСтрокиМесяц = НомерПоследнейСтрокиМесяц + 1;
				КонецЕсли;	
				
				Для НомерДня = День(КонецМесяца(ВыборкаДанныхОВремени.Месяц)) + 1 По 31 Цикл
					Область = ТабличныйДокумент.Область(НомерПервойСтрокиМесяц, НомерДня + 1, НомерПоследнейСтрокиМесяц, НомерДня + 1);  
					Область.Объединить();
					Область.Текст = "Х";
					Область.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
					Область.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
				КонецЦикла;			
			КонецЦикла;
						
			ОбластьИтогоЗаКвартал.Параметры.Квартал = Формат(ВыборкаДанныхОВремени.Квартал, "ДФ='к ""квартал""'");
			ОбластьИтогоЗаКвартал.Параметры.ДнейЗаКвартал = ДнейЗаКвартал;
			ОбластьИтогоЗаКвартал.Параметры.ЧасовЗаКвартал = ЧасовЗаКвартал;
			ОбластьИтогоЗаКвартал.Параметры.ДнейЗаКварталПоКалендарю = РабочихДнейЗаКварталПоКалендарю;
			ОбластьИтогоЗаКвартал.Параметры.ЧасовЗаКварталПоКалендарю = РабочихЧасовЗаКварталПоКалендарю;
			ОбластьИтогоЗаКвартал.Параметры.ВыходныхЗаКварталПоКалендарю = ВыходныхДнейЗаКварталПоКалендарю;
			
			ИтогоЧасовПоВидамВремениТекст = "";
			ИтогоДнейПоВидамВремениТекст = "";			
			Для Каждого ВидВремени Из ОписаниеГрафика.ВидыВремени Цикл
				ИтогоЧасовПоВидамВремениТекст = ИтогоЧасовПоВидамВремениТекст + "/" 
					+ Формат(ИтогиЗаКварталПоВидамВремени[ВидВремени].Часы, "ЧН=0; ЧГ=");
				ИтогоДнейПоВидамВремениТекст = ИтогоДнейПоВидамВремениТекст + "/" 
					+ Формат(ИтогиЗаКварталПоВидамВремени[ВидВремени].Дни, "ЧН=0; ЧГ=");	
			КонецЦикла;

			ОбластьИтогоЗаКварталПоВидуВремени.Параметры.ДнейЗаКварталПоВидуВремени = Сред(ИтогоДнейПоВидамВремениТекст, 2);
			ОбластьИтогоЗаКварталПоВидуВремени.Параметры.ЧасовЗаКварталПоВидуВремени = Сред(ИтогоЧасовПоВидамВремениТекст, 2);
			
			Области = Новый Массив;
			Области.Добавить(ОбластьИтогоЗаКвартал);
			Если ОписаниеГрафика.КоличествоВидовВремени > 1 Тогда
				Области.Добавить(ОбластьИтогоЗаКварталПоВидуВремени);
			КонецЕсли;	
			
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, Области) Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;			
			
			ТабличныйДокумент.Вывести(ОбластьИтогоЗаКвартал);
			Если ОписаниеГрафика.КоличествоВидовВремени > 1 Тогда
				ТабличныйДокумент.Вывести(ОбластьИтогоЗаКварталПоВидуВремени);
			КонецЕсли;	
			
		КонецЦикла;
				
		ОбластьИтогоЗаГод.Параметры.ДнейЗаГод = ДнейЗаГод;
		ОбластьИтогоЗаГод.Параметры.ЧасовЗаГод = ЧасовЗаГод;
		ОбластьИтогоЗаГод.Параметры.ДнейЗаГодПоКалендарю = РабочихДнейЗаГодПоКалендарю;
		ОбластьИтогоЗаГод.Параметры.ЧасовЗаГодПоКалендарю = РабочихЧасовЗаГодПоКалендарю;
		ОбластьИтогоЗаГод.Параметры.ВыходныхЗаГодПоКалендарю = ВыходныхДнейЗаГодПоКалендарю;
		
		ИтогоЧасовПоВидамВремениТекст = "";
		ИтогоДнейПоВидамВремениТекст = "";
		Для Каждого ВидВремени Из ОписаниеГрафика.ВидыВремени Цикл
			ИтогоЧасовПоВидамВремениТекст = ИтогоЧасовПоВидамВремениТекст + "/" 
				+ Формат(ИтогиЗаГодПоВидамВремени[ВидВремени].Часы, "ЧН=0; ЧГ=");
			ИтогоДнейПоВидамВремениТекст = ИтогоДнейПоВидамВремениТекст + "/" 
				+ Формат(ИтогиЗаГодПоВидамВремени[ВидВремени].Дни, "ЧН=0; ЧГ=");	
		КонецЦикла;
		
		ОбластьИтогоЗаГодПоВидамВремени.Параметры.ДнейЗаГод = Сред(ИтогоДнейПоВидамВремениТекст, 2);
		ОбластьИтогоЗаГодПоВидамВремени.Параметры.ЧасовЗаГод = Сред(ИтогоЧасовПоВидамВремениТекст, 2);
		
		Области = Новый Массив;
		Области.Добавить(ОбластьИтогоЗаГод);
		Если ОписаниеГрафика.КоличествоВидовВремени > 1 Тогда
			Области.Добавить(ОбластьИтогоЗаГодПоВидамВремени);
		КонецЕсли;	
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, Области) Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;			
		
		ТабличныйДокумент.Вывести(ОбластьИтогоЗаГод);
			
		Если ОписаниеГрафика.КоличествоВидовВремени > 1 Тогда
			ТабличныйДокумент.Вывести(ОбластьИтогоЗаГодПоВидамВремени);
		Иначе
			Область = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы, 1, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
			Область.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
		КонецЕсли;	
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ОбластьПодпись) Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьПодпись);
		
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
КонецФункции	

Функция ЗапросДляПечатиГрафиков(МассивОбъектов, Год)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ИНАГРО_УчетРабочегоВремени.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, Дата(Год, 1, 1), Дата(Год, 12, 31), "День");
		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("Год", Год);
	Запрос.УстановитьПараметр("КонецГода", Дата(Год, 12, 31));
	Запрос.УстановитьПараметр("ВыходныеДни", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ВыходныеДни"));
	Запрос.УстановитьПараметр("Выходной", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.ВыходныеДни"));
	Запрос.УстановитьПараметр("Явка", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Работа"));
	Запрос.УстановитьПараметр("Вечерние", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Вечерние"));
	Запрос.УстановитьПараметр("Ночные", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Ночные"));
	Запрос.УстановитьПараметр("Сверхурочно", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Сверхурочные"));
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ИНАГРО_КлассификаторИспользованияРабочегоВремени.Ссылка КАК ВидУчетаВремени,
	|	ИНАГРО_ГрафикиРаботы.Ссылка КАК ГрафикРаботы,
	|	ВЫБОР
	|		КОГДА ИНАГРО_КлассификаторИспользованияРабочегоВремени.Ссылка = &Явка
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремени.ПоЧасам)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ИНАГРО_КлассификаторИспользованияРабочегоВремени.Ссылка = &Вечерние
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремени.ПоВечернимЧасам)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыУчетаВремени.ПоНочнымЧасам)
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидУчетаВремениИзРегистра
	|ПОМЕСТИТЬ ВТВидыВремени
	|ИЗ
	|	Справочник.ИНАГРО_ГрафикиРаботы КАК ИНАГРО_ГрафикиРаботы,
	|	Справочник.ИНАГРО_КлассификаторИспользованияРабочегоВремени КАК ИНАГРО_КлассификаторИспользованияРабочегоВремени
	|ГДЕ
	|	(ИНАГРО_КлассификаторИспользованияРабочегоВремени.Ссылка = &Явка
	|			ИЛИ ИНАГРО_КлассификаторИспользованияРабочегоВремени.Ссылка = &Вечерние
	|			ИЛИ ИНАГРО_КлассификаторИспользованияРабочегоВремени.Ссылка = &Ночные)
	|	И ИНАГРО_ГрафикиРаботы.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИНАГРО_ГрафикиРаботы.Ссылка КАК ГрафикРаботы,
	|	ИНАГРО_ГрафикиРаботы.Наименование,
	|	Периоды.Период КАК Дата,
	|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Месяц
	|ПОМЕСТИТЬ ВТГрафикиПериоды
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИНАГРО_ГрафикиРаботы КАК ИНАГРО_ГрафикиРаботы
	|		ПО (ИНАГРО_ГрафикиРаботы.Ссылка В (&МассивОбъектов))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|					ИЛИ ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РабочихДней,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
	|				ТОГДА ГрафикиРаботыСотрудников.ДлительностьРабочейНедели / 5
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|				ТОГДА ГрафикиРаботыСотрудников.ДлительностьРабочейНедели / 5 - 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РабочихЧасов,
	|	СУММА(ВЫБОР
	|			КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Воскресенье)
	|					ИЛИ ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Суббота)
	|					ИЛИ ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыходныхДней,
	|	ГрафикиРаботыСотрудников.Ссылка КАК ГрафикРаботы,
	|	НАЧАЛОПЕРИОДА(ДанныеПроизводственногоКалендаря.Дата, МЕСЯЦ) КАК Месяц
	|ПОМЕСТИТЬ ВТДанныеПроизводственныхКалендарейЗаМесяц
	|ИЗ
	|	Справочник.ИНАГРО_ГрафикиРаботы КАК ГрафикиРаботыСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|			ПО (ГрафикиРаботыСотрудников.Ссылка В (&МассивОбъектов))
	|			И (ДанныеПроизводственногоКалендаря.Год = &Год)
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикиРаботыСотрудников.Ссылка,
	|	НАЧАЛОПЕРИОДА(ДанныеПроизводственногоКалендаря.Дата, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикиПериоды.ГрафикРаботы КАК ГрафикРаботы,
	|	НАЧАЛОПЕРИОДА(ГрафикиПериоды.Дата, МЕСЯЦ) КАК Месяц,
	|	ГрафикиПериоды.Дата КАК Дата,
	|	ЕСТЬNULL(ГрафикиРаботыПоВидамВремени.ОсновноеЗначение, 0) КАК Часов,
	|	ЕСТЬNULL(ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение, 0) КАК Дней,
	|	ЕСТЬNULL(ДанныеПроизводственныхКалендарейЗаМесяц.РабочихДней, 0) КАК РабочихДней,
	|	ЕСТЬNULL(ДанныеПроизводственныхКалендарейЗаМесяц.РабочихЧасов, 0) КАК РабочихЧасов,
	|	ЕСТЬNULL(ДанныеПроизводственныхКалендарейЗаМесяц.ВыходныхДней, 0) КАК ВыходныхДней,
	|	НАЧАЛОПЕРИОДА(ГрафикиПериоды.Дата, КВАРТАЛ) КАК Квартал,
	|	ВидыВремени.ВидУчетаВремени,
	|	ВЫБОР
	|		КОГДА ВидыВремени.ВидУчетаВремени = &Явка
	|			ТОГДА 1
	|		КОГДА ВидыВремени.ВидУчетаВремени = &Вечерние
	|			ТОГДА 2
	|		КОГДА ВидыВремени.ВидУчетаВремени = &Ночные
	|			ТОГДА 3
	|		ИНАЧЕ 4
	|	КОНЕЦ КАК Приоритет
	|ИЗ
	|	ВТГрафикиПериоды КАК ГрафикиПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыВремени КАК ВидыВремени
	|		ПО ГрафикиПериоды.ГрафикРаботы = ВидыВремени.ГрафикРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО ГрафикиПериоды.ГрафикРаботы = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|			И ГрафикиПериоды.Дата = ГрафикиРаботыПоВидамВремени.Дата
	|			И ГрафикиПериоды.Месяц = ГрафикиРаботыПоВидамВремени.Месяц
	|			И (ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ВидыВремени.ВидУчетаВремениИзРегистра)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеПроизводственныхКалендарейЗаМесяц КАК ДанныеПроизводственныхКалендарейЗаМесяц
	|		ПО ГрафикиПериоды.Месяц = ДанныеПроизводственныхКалендарейЗаМесяц.Месяц
	|			И ГрафикиПериоды.ГрафикРаботы = ДанныеПроизводственныхКалендарейЗаМесяц.ГрафикРаботы
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГрафикРаботы,
	|	Квартал,
	|	НАЧАЛОПЕРИОДА(ГрафикиПериоды.Дата, МЕСЯЦ),
	|	Дата,
	|	Приоритет,
	|	ВидыВремени.ВидУчетаВремени.БуквенныйКод,
	|	ВидыВремени.ВидУчетаВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикиРаботыСотрудников.Наименование,
	|	ГрафикиРаботыСотрудников.СуммированныйУчетРабочегоВремени,
	|	ГрафикиРаботыСотрудников.ДлительностьРабочейНедели,
	|	ГрафикиРаботыСотрудников.Ссылка КАК ГрафикРаботы,
	|	ВЫБОР
	|		КОГДА ВидыУчетаВремени.ВидУчетаВремени = &Явка
	|			ТОГДА 1
	|		КОГДА ВидыУчетаВремени.ВидУчетаВремени = &Вечерние
	|			ТОГДА 2
	|		КОГДА ВидыУчетаВремени.ВидУчетаВремени = &Ночные
	|			ТОГДА 3
	|		ИНАЧЕ 4
	|	КОНЕЦ КАК Приоритет,
	|	ВидыУчетаВремени.ВидУчетаВремени КАК ВидУчетаВремени,
	|	ВидыУчетаВремени.ВидУчетаВремени.БуквенныйКод КАК ВидУчетаВремениБуквенныйКод,
	|	ВидыУчетаВремени.ВидУчетаВремени.Наименование,
	|	ГрафикиРаботыСотрудников.ВидГрафика,
	|	ГрафикиРаботыСотрудников.ШаблонЗаполнения.(
	|		Ссылка,
	|		НомерСтроки,
	|		ДеньВключенВГрафик
	|	)
	|ИЗ
	|	Справочник.ИНАГРО_ГрафикиРаботы КАК ГрафикиРаботыСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыВремени КАК ВидыУчетаВремени
	|		ПО (ВидыУчетаВремени.ГрафикРаботы = ГрафикиРаботыСотрудников.Ссылка)
	|ГДЕ
	|	ГрафикиРаботыСотрудников.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГрафикиРаботыСотрудников.Ссылка,
	|	Приоритет,
	|	ВидУчетаВремениБуквенныйКод,
	|	ВидУчетаВремени";	
		
	
	Возврат Запрос;
КонецФункции

Функция ОписаниеГрафикаРаботы(ВыборкаПоГрафикам, ГрафикРаботы)
	ВыборкаПоГрафикам.Сбросить();
	
	ОписаниеГрафика = Новый Структура();
	ОписаниеГрафика.Вставить("Наименование", "");
	ОписаниеГрафика.Вставить("ОбозначениеВидовВремени", "");
	ОписаниеГрафика.Вставить("КоличествоВидовВремени", 3); //ИНАГРО
	ОписаниеГрафика.Вставить("ВидыВремениСтрока", "");
	ОписаниеГрафика.Вставить("СуммированныйУчетРабочегоВремени", Ложь);
	ОписаниеГрафика.Вставить("ВидГрафика");
	ОписаниеГрафика.Вставить("ВидыВремени", Новый Массив);
	ОписаниеГрафика.Вставить("ШаблонЗаполнения", Новый ТаблицаЗначений);
	ОписаниеГрафика.Вставить("ДлительностьРабочейНедели", 0);
	
	Если ВыборкаПоГрафикам.НайтиСледующий(Новый Структура("ГрафикРаботы", ГрафикРаботы)) Тогда
		ВыборкаПоГрафикам.СледующийПоЗначениюПоля("ГрафикРаботы");
		
		ОписаниеГрафика.Наименование = ВыборкаПоГрафикам.Наименование;
		ОписаниеГрафика.СуммированныйУчетРабочегоВремени = ВыборкаПоГрафикам.СуммированныйУчетРабочегоВремени;
		ОписаниеГрафика.ВидГрафика = ВыборкаПоГрафикам.ВидГрафика;
		ОписаниеГрафика.ШаблонЗаполнения = ВыборкаПоГрафикам.ШаблонЗаполнения.Выгрузить();
		ОписаниеГрафика.ДлительностьРабочейНедели = ВыборкаПоГрафикам.ДлительностьРабочейНедели;
		ОписаниеГрафика.ВидыВремени.Добавить(Справочники.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Работа); //ИНАГРО
		ОписаниеГрафика.ВидыВремени.Добавить(Справочники.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Вечерние);
		ОписаниеГрафика.ВидыВремени.Добавить(Справочники.ИНАГРО_КлассификаторИспользованияРабочегоВремени.Ночные);
		
	КонецЕсли;	
	
	Возврат ОписаниеГрафика;
КонецФункции	

Процедура УстановитьШиринуКолонокТабличногоДокумента(ОбластиМакета, КоличествоВидовВремени)
	Для Каждого ТабличныйДокумент Из ОбластиМакета Цикл
		ТабличныйДокумент.Область(1, 2, ТабличныйДокумент.ВысотаТаблицы, 32).ШиринаКолонки  = КоличествоВидовВремени * ?(КоличествоВидовВремени > 1, 2, 3.63);
		ТабличныйДокумент.Область(1, 33, ТабличныйДокумент.ВысотаТаблицы, 33).ШиринаКолонки  = КоличествоВидовВремени * ?(КоличествоВидовВремени > 1, 6, 3.63);
		ТабличныйДокумент.Область(1, 34, ТабличныйДокумент.ВысотаТаблицы, 34).ШиринаКолонки  = КоличествоВидовВремени * ?(КоличествоВидовВремени > 1, 6, 7.13);
	КонецЦикла;	
КонецПроцедуры	

Процедура ОчиститьОбластьЯчеек(ОбластьЯчеек)
	КоличествоПараметров = ОбластьЯчеек.Параметры.Количество();
	
	Для ИндексПараметра = 0 По КоличествоПараметров - 1 Цикл  
		ОбластьЯчеек.Параметры.Установить(ИндексПараметра, Неопределено);
	КонецЦикла;	
КонецПроцедуры 

Функция ИтогиПоВидамВремениЗаПериод(ОписаниеГрафика)
	ИтогиПоВидамВремени = Новый Соответствие;
	
	Для Каждого ВидВремени Из ОписаниеГрафика.ВидыВремени Цикл
		ИтогиПоВидамВремени.Вставить(ВидВремени, Новый Структура("Дни, Часы", 0, 0));
	КонецЦикла;	
	
	Возврат ИтогиПоВидамВремени;
КонецФункции	

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Функция возвращает текст описания графика работы
//
// Параметры:
// ОписаниеГрафикаРаботы - Строка - описание графика работы.
//
// Возвращаемое значение:
//  Строка
//
Функция ТекстОписанияГрафикаРаботы(ОписаниеГрафикаРаботы) Экспорт
	
	Понедельник = '20120514';
	РабочееВремяТекст = "";
	
	Если Не ОписаниеГрафикаРаботы.ВидГрафика = Перечисления.ВидыРабочихГрафиков.Сменный Тогда
					
		НомерДняНачалаИнтервала = 0;
		НомерДняОкончанияИнтервала = 0;
		РабочиеДниИдутПодряд = Истина;
		НомераРабочихДней = Новый Массив;
		НомераВыходныхДней = Новый Массив;
		Для Каждого СтрокаШаблонаЗаполнения Из ОписаниеГрафикаРаботы.ШаблонЗаполнения Цикл
			Если СтрокаШаблонаЗаполнения.ДеньВключенВГрафик И 
				НомерДняНачалаИнтервала <> 0 И 
				СтрокаШаблонаЗаполнения.НомерСтроки - НомерДняОкончанияИнтервала <> 1  Тогда
				РабочиеДниИдутПодряд = Ложь;				
			КонецЕсли;	
			Если СтрокаШаблонаЗаполнения.ДеньВключенВГрафик Тогда  
				Если НомерДняНачалаИнтервала = 0 Тогда
					НомерДняНачалаИнтервала = СтрокаШаблонаЗаполнения.НомерСтроки;
				КонецЕсли;	
				
				НомерДняОкончанияИнтервала = СтрокаШаблонаЗаполнения.НомерСтроки;
				НомераРабочихДней.Добавить(СтрокаШаблонаЗаполнения.НомерСтроки);
			Иначе
				НомераВыходныхДней.Добавить(СтрокаШаблонаЗаполнения.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		КоличествоРабочихДней = НомераРабочихДней.Количество();
		
		Если КоличествоРабочихДней = 5 Тогда   
			ВидГрафикаСтрока = НСтр("ru = 'Пятидневка';uk='Пятиденка'");
		ИначеЕсли КоличествоРабочихДней = 6 Тогда
			ВидГрафикаСтрока = НСтр("ru = 'Шестидневка';uk='Шестиденка'");
		Иначе
			ВидГрафикаСтрока = НСтр("ru = 'Недельный график';uk='Тижневий графік'");
		КонецЕсли;
		
		Если КоличествоРабочихДней = 0 Тогда
			РабочиеДниТекст = "";
		Иначе	
			Если РабочиеДниИдутПодряд Тогда
				РабочиеДниТекст = Формат(Понедельник + (НомерДняНачалаИнтервала - 1) * 86400, "ДФ=ддд") + "-" + 
					Формат(Понедельник + (НомерДняОкончанияИнтервала - 1) * 86400, "ДФ=ддд");
			Иначе 
				ПеречислениеДнейТекст = "";
				Для Каждого НомерРабочегоДня Из НомераРабочихДней Цикл
					ПеречислениеДнейТекст = ПеречислениеДнейТекст + ?(ПустаяСтрока(ПеречислениеДнейТекст), "", ", ") + 
						Формат(Понедельник + (НомерРабочегоДня - 1) * 86400, "ДФ=ддд");
				КонецЦикла;	
				РабочиеДниТекст = ПеречислениеДнейТекст;
			КонецЕсли;	
		КонецЕсли;
		
		Если НомераВыходныхДней.Количество() = 0 Тогда
			ВыходныеДниТекст = НСтр("ru = 'без выходных';uk='без вихідих'");
		Иначе	
        	ПеречислениеДнейТекст = "";
			Для Каждого НомерВыходногоДня Из НомераВыходныхДней Цикл
				ПеречислениеДнейТекст = ПеречислениеДнейТекст + ?(ПустаяСтрока(ПеречислениеДнейТекст), "", ", ") + 
					Формат(Понедельник + (НомерВыходногоДня - 1) * 86400, "ДФ=ддд");
			КонецЦикла;	
			ВыходныеДниТекст = ПеречислениеДнейТекст;
		КонецЕсли;
		
	Иначе
		ВидГрафикаСтрока = НСтр("ru = 'Скользящий график';uk='Плаваючий графік'");	
	КонецЕсли;	
	
	СтрокаНастройкиЗаполнения = НСтр("ru = '%1, раб. дни: %2, выходн. дни: %3.
                                      |Длительность рабочей недели: %4 гд.';uk='%1, роб. дні: %2, вихідн. дні: %3.
                                      |Тривалість робочого тижня: %4 гд.'");
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаНастройкиЗаполнения,
																ВидГрафикаСтрока,
																РабочиеДниТекст,
																ВыходныеДниТекст,
																ОписаниеГрафикаРаботы.ДлительностьРабочейНедели);
																
КонецФункции

#КонецОбласти

#КонецЕсли