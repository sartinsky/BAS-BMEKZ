Перем мОснование;
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Организации") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,
			"Наименование, ЮридическоеФизическоеЛицо, КодПоЕДРПОУ");
		
		НаименованиеПолное     = ДанныеЗаполнения.НаименованиеПолное;
		
		Для каждого ЭлементКонтактнойИнформации Из ДанныеЗаполнения.КонтактнаяИнформация Цикл
			
			Если ЭлементКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации
				ИЛИ ЭлементКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации
				ИЛИ ЭлементКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации
				ИЛИ ЭлементКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации
				ИЛИ ЭлементКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ФаксОрганизации
				ИЛИ ЭлементКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.EmailОрганизации
				ИЛИ ЭлементКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации Тогда
			
				НоваяСтрокаКонтактнойИнформации = ЭтотОбъект.КонтактнаяИнформация.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаКонтактнойИнформации, ЭлементКонтактнойИнформации);
				
				Если НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации Тогда
					НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
				КонецЕсли;
				Если НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации Тогда
					НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
				КонецЕсли;
				Если НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации Тогда
					НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента;
				КонецЕсли;
				Если НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации Тогда
					НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
				КонецЕсли;
				Если НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ФаксОрганизации Тогда
					НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ФаксКонтрагенты;
				КонецЕсли;
				Если НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.EmailОрганизации Тогда
					НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтрагенты;
				КонецЕсли;
				Если НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияОрганизации Тогда
					НоваяСтрокаКонтактнойИнформации.Вид = Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияКонтрагенты;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ОбработкаЗаполненияПоСтруктуре(ДанныеЗаполнения);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаЗаполненияПоСтруктуре(ДанныеЗаполнения)
	
	Если ДанныеЗаполнения.Свойство("ЭтоЗагрузкаИзФайла") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,
		"Наименование, НаименованиеПолное, ЮридическоеФизическоеЛицо,ИНН, КодПоЕДРПОУ, КодФилиала");
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ЮридическийАдресЗначениеJSON")
		И ЗначениеЗаполнено(ДанныеЗаполнения.ЮридическийАдресЗначениеJSON) Тогда
		
		УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(
		ЭтотОбъект, ДанныеЗаполнения.ЮридическийАдресЗначениеJSON, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
		
		ФактическийАдресЗначениеJSON = ?(ДанныеЗаполнения.Свойство("ФактическийАдресЗначениеJSON"),
		ДанныеЗаполнения.ФактическийАдресЗначениеJSON,
		ДанныеЗаполнения.ЮридическийАдресЗначениеJSON);
		
		УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(
		ЭтотОбъект, ФактическийАдресЗначениеJSON, Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
		
		ПочтовыйАдресЗначениеJSON = ?(ДанныеЗаполнения.Свойство("ПочтовыйАдресЗначениеJSON"),
		ДанныеЗаполнения.ПочтовыйАдресЗначениеJSON,
		ДанныеЗаполнения.ЮридическийАдресЗначениеJSON);
		
		УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(
		ЭтотОбъект, ПочтовыйАдресЗначениеJSON, Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента);
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ТелефонЗначениеJSON")
		И ЗначениеЗаполнено(ДанныеЗаполнения.ТелефонЗначениеJSON) Тогда
		УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(
		ЭтотОбъект, ДанныеЗаполнения.ТелефонЗначениеJSON, Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("АдресЭлектроннойПочтыЗначениеJSON")
		И ЗначениеЗаполнено(ДанныеЗаполнения.АдресЭлектроннойПочтыЗначениеJSON) Тогда
		УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(
		ЭтотОбъект, ДанныеЗаполнения.АдресЭлектроннойПочтыЗначениеJSON, Справочники.ВидыКонтактнойИнформации.EmailКонтрагенты);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов	= Новый Массив;
	
	Если НЕ ЭтоГруппа Тогда
		
		Если НЕ ОбособленноеПодразделение Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ГоловнойКонтрагент");
		КонецЕсли;
		
		Если ОбособленноеПодразделение И ЗначениеЗаполнено(ГоловнойКонтрагент) И ГоловнойКонтрагент = Ссылка Тогда
			
			ТекстОшибки	= НСтр("ru='Контрагент не может являться своим обособленным подразделением';uk='Контрагент не може бути своїм відокремленим підрозділом'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "ГоловнойКонтрагент", , Отказ);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ГоловнойКонтрагент) И ГоловнойКонтрагент <> Ссылка Тогда
			
			МассивПодчиненныхКонтрагентов	= Справочники.Контрагенты.ПолучитьМассивПодчиненныхКонтрагентов(Ссылка);
			Если МассивПодчиненныхКонтрагентов.Количество() > 0 Тогда
				
				ТекстОшибки	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Контрагент %1 не может иметь головного контрагента, т.к. сам является головным для других контрагентов';uk='Контрагент %1 не може мати головного контрагента, оскільки сам є головним для інших контрагентів'"),
					Наименование);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "ГоловнойКонтрагент", , Отказ);
				
			Иначе
				
				СвойстваГоловногоКонтрагента	= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
					ГоловнойКонтрагент, "Наименование, ГоловнойКонтрагент");
					
				Если ЗначениеЗаполнено(СвойстваГоловногоКонтрагента.ГоловнойКонтрагент)
					И СвойстваГоловногоКонтрагента.ГоловнойКонтрагент <> ГоловнойКонтрагент Тогда
					
					ТекстОшибки	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Контрагент %1 не может быть выбран головным, т.к. для него самого назначен головной контрагент';uk='Контрагент %1 не може бути обраний головним, оскільки для нього самого призначений головний контрагент'"),
						СвойстваГоловногоКонтрагента.Наименование);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "ГоловнойКонтрагент", , Отказ);
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			
			МассивОбособленныхПодразделений	= Справочники.Контрагенты.ПолучитьМассивОбособленныхПодразделений(Ссылка);
			Если МассивОбособленныхПодразделений.Количество() > 0 Тогда
				
				ТекстОшибки	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Контрагент %1 не может быть физическим лицом, т.к. является головным подразделением для других контрагентов';uk='Контрагент %1 не може бути фізичною особою, оскільки є головним підрозділом для інших контрагентів'"),
					Наименование);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, , , Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ГоловнойКонтрагент) И НЕ ОбособленноеПодразделение Тогда
		
		Если ЭтоНовый() Тогда
			НоваяСсылка = Справочники.Контрагенты.ПолучитьСсылку();
			УстановитьСсылкуНового(НоваяСсылка);
			ГоловнойКонтрагент = ПолучитьСсылкуНового();
		Иначе
			ГоловнойКонтрагент = Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	УправлениеКонтактнойИнформациейБП.ПередЗаписьюИсторииКонтактнойИнформацииОбъекта(ЭтотОбъект);
	
	Если НЕ ЭтоНовый()
		И НЕ ОбособленноеПодразделение
		И ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ГоловнойКонтрагент", Ссылка);
		Запрос.УстановитьПараметр("КодПоЕДРПОУ", КодПоЕДРПОУ);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ОбособленноеПодразделение
		|	И Контрагенты.ГоловнойКонтрагент = &ГоловнойКонтрагент
		|	И Контрагенты.КодПоЕДРПОУ <> &КодПоЕДРПОУ
		|	И НЕ Контрагенты.ПометкаУдаления
		|	И НЕ Контрагенты.ЭтоГруппа";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбособленноеПодразделениеОбъект	= Выборка.Ссылка.ПолучитьОбъект();
			ОбособленноеПодразделениеОбъект.КодПоЕДРПОУ	= КодПоЕДРПОУ;
			ОбособленноеПодразделениеОбъект.Записать();
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ ЭтоНовый() Тогда
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("ПометкаУдаления", ПометкаУдаления);
		Запрос.Текст = "ВЫБРАТЬ  РАЗРЕШЕННЫЕ // ИНАГРО
		|	КонтактныеЛица.Ссылка КАК КонтЛицо
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛица
		|
		|ГДЕ
		|	КонтактныеЛица.ОбъектВладелец = &Ссылка
		|		И КонтактныеЛица.ПометкаУдаления <> &ПометкаУдаления";
		ВыборкаКонтЛиц = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаКонтЛиц.Следующий() Цикл
			
			КонтЛицо = ВыборкаКонтЛиц.КонтЛицо.ПолучитьОбъект();
			КонтЛицо.УстановитьПометкуУдаления(ПометкаУдаления);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ ЭтоГруппа И НЕ НеЯвляетсяРезидентом Тогда  // ИНАГРО
		//ПроверитьЕГРПОУ(Отказ); 
	КонецЕсли;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ЭтоГруппа Тогда
		ОсновнойДоговорКонтрагента	= Неопределено;
		ОсновнойБанковскийСчет		= Неопределено;
		ОсновноеКонтактноеЛицо		= Неопределено;
		Если ОбъектКопирования.ГоловнойКонтрагент = ОбъектКопирования.Ссылка Тогда
			ГоловнойКонтрагент	= Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает результат запроса по справочнику контрагентов с заданным головным контрагентом
//
// Параметры:
//  ГоловнойКонтрагент - заданный головной контрагент
//
// Возвращаемое значение:
//  Результат - результат работы запроса
// 
Функция ПолучитьКонтрагентовПоЗаданномуГоловномуКонтрагенту(ГоловнойКонтрагент) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ГоловнойКонтрагент", ГоловнойКонтрагент);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ГоловнойКонтрагент = &ГоловнойКонтрагент
	|	И Контрагенты.ГоловнойКонтрагент <> Контрагенты.Ссылка
	|	И НЕ Контрагенты.ЭтоГруппа // ИНАГРО
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции // ПолучитьКонтрагентовПоЗаданномуГоловномуКонтрагенту()

#КонецЕсли
