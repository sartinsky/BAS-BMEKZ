#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.Параметры.Свойство("СтрокаПоиска") Тогда
		СтрокаПоиска = ЭтаФорма.Параметры.СтрокаПоиска;
	КонецЕсли;
	
	Макет = Справочники.ИНАГРО_НормыРасчетаУбыли.ПолучитьМакет("Классификатор");
	ТабДокумент.Вывести(Макет);
	ТабДокумент.ФиксацияСверху = 3;
	
	ОбластьКодЧисловойЛево     = Макет.Области.КодЧисловой.Лево;
	ОбластьКодЧисловойПраво    = Макет.Области.КодЧисловой.Право;
	ОбластьВидКультурыЛево     = Макет.Области.ВидКультуры.Лево;
	ОбластьВидКультурыПраво    = Макет.Области.ВидКультуры.Право;
	ОбластьСпособХраненияЛево  = Макет.Области.СпособХранения.Лево;
	ОбластьСпособХраненияПраво = Макет.Области.СпособХранения.Право;
	ОбластьП1дЛево             = Макет.Области.П1д.Лево;
	ОбластьП1дПраво            = Макет.Области.П1д.Право;
	ОбластьП3мЛево             = Макет.Области.П3м.Лево;
	ОбластьП3мПраво            = Макет.Области.П3м.Право;
	ОбластьП6мЛево             = Макет.Области.П6м.Лево;
	ОбластьП6мПраво            = Макет.Области.П6м.Право;
	ОбластьП1гЛево             = Макет.Области.П1г.Лево;
	ОбластьП1гПраво            = Макет.Области.П1г.Право;
			
	Если НЕ ПустаяСтрока(СтрокаПоиска) Тогда
		НайденнаяОбласть = ТабДокумент.НайтиТекст(СтрокаПоиска, , ТабДокумент.Области.КодЧисловой, , , , Истина);
		Элементы.ТабДокумент.ТекущаяОбласть = НайденнаяОбласть;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	ИскатьСтрокуВТаблице(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Область = Элементы.ТабДокумент.ТекущаяОбласть;
	ВыполнитьВыбор(Область);
	
КонецПроцедуры

&НаКлиенте
Процедура ИскатьСтрокуВТаблице(Команда)
	
	Если ПустаяСтрока(СтрокаПоиска) Тогда
		ПоказатьПредупреждение( , НСтр("ru='Не задана строка поиска';uk='Не заданий рядок пошуку'"));
		ТекущийЭлемент = Элементы.СтрокаПоиска;
		Возврат;
	КонецЕсли;
	
	НайденнаяОбласть = ТабДокумент.НайтиТекст(СтрокаПоиска, Элементы.ТабДокумент.ТекущаяОбласть, , , , , Истина);
	Если НайденнаяОбласть = Неопределено Тогда
		НайденнаяОбласть = ТабДокумент.НайтиТекст(СтрокаПоиска, , , , , , Истина);
		Если НайденнаяОбласть = Неопределено Тогда
			ОбщегоНазначенияБПКлиентСервер.СообщитьОбОшибке(
				НСтр("ru='Строка не найдена';uk='Рядок не знайдено'"));
			ТекущийЭлемент = Элементы.СтрокаПоиска;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ТабДокумент.ТекущаяОбласть = НайденнаяОбласть;
	ТекущийЭлемент = Элементы.СтрокаПоиска;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ТабДокументВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Область = Элементы.ТабДокумент.ТекущаяОбласть;
	ВыполнитьВыбор(Область);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыбор(ТекущаяОбласть)
	
	КодЧисловой    = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьКодЧисловойЛево,
									     ТекущаяОбласть.Низ,  ОбластьКодЧисловойПраво).Текст;
	ВидКультуры    = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьВидКультурыЛево,
									     ТекущаяОбласть.Низ,  ОбластьВидКультурыПраво).Текст;
	СпособХранения = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьСпособХраненияЛево,
									     ТекущаяОбласть.Низ,  ОбластьСпособХраненияПраво).Текст;
	П1д            = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьП1дЛево,
									     ТекущаяОбласть.Низ,  ОбластьП1дПраво).Текст;
	П3м            = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьП3мЛево,
									     ТекущаяОбласть.Низ,  ОбластьП3мПраво).Текст;
	П6м            = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьП6мЛево,
									     ТекущаяОбласть.Низ,  ОбластьП6мПраво).Текст;
	П1г            = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьП1гЛево,
									     ТекущаяОбласть.Низ,  ОбластьП1гПраво).Текст;								   
			
	ЗначенияЗаполнения = Новый Структура("Код, ВидКультуры, СпособХранения, П1д, П3м, П6м, П1г",
										 КодЧисловой, ПолучитьВидКультуры(ВидКультуры), ПолучитьСпособХранения(СпособХранения), П1д, П3м, П6м, П1г);
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	НормаРасчетаУбыли = ПоискСуществующейНормыРасчетаУбыли(ПараметрыФормы);
	
	Если НормаРасчетаУбыли <> Неопределено Тогда
		
		ПараметрыФормы = Новый Структура("Ключ", НормаРасчетаУбыли);

		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='В справочнике ""Таблица норм естественной убыли"" уже существует элемент с кодом ""%1""! Открыт существующий';uk='У довіднику ""Таблиця норм природнього убутку"" вже існує елемент з кодом ""%1""! Відкритий існуючий'"), КодЧисловой);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

		ОткрытьФорму("Справочник.ИНАГРО_НормыРасчетаУбыли.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
		
	Иначе	
		
		ОткрытьФорму("Справочник.ИНАГРО_НормыРасчетаУбыли.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоискСуществующейНормыРасчетаУбыли(Знач ПараметрыФормы)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ИНАГРО_НормыРасчетаУбыли.Ссылка
		|ИЗ
		|	Справочник.ИНАГРО_НормыРасчетаУбыли КАК ИНАГРО_НормыРасчетаУбыли
		|ГДЕ
		|	ИНАГРО_НормыРасчетаУбыли.Код = &Код";
	
	Запрос.УстановитьПараметр("Код", ПараметрыФормы.ЗначенияЗаполнения.Код);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВидКультуры(Знач ВидКультуры)	

	Возврат Справочники.ИНАГРО_ВидыКультурДляРасчетаУбыли.НайтиПоНаименованию(ВидКультуры);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСпособХранения(Знач СпособХранения)	

	Возврат Перечисления.ИНАГРО_СпособХранения[СпособХранения];
	
КонецФункции

#КонецОбласти