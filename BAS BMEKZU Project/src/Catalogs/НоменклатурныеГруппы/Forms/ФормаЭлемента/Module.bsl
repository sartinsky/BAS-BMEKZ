#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	
    Запрос = Новый Запрос;
    Запрос.УстановитьПараметр("НоменклатурнаяГруппа", Объект.Ссылка);
    
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   Номенклатура.Код,
    |   Номенклатура.Ссылка КАК Номенклатура
    |ИЗ
    |   Справочник.Номенклатура КАК Номенклатура
    |ГДЕ
    |   Номенклатура.НоменклатурнаяГруппа.Ссылка = &НоменклатурнаяГруппа
    |
    |УПОРЯДОЧИТЬ ПО
    |   Номенклатура";
    
    ТаблицаТоваров = Запрос.Выполнить().Выгрузить();  
    
    СписокГруппы.Загрузить(ТаблицаТоваров);
    	
	// ИНАГРО++
	Запрос = Новый Запрос;
    Запрос.УстановитьПараметр("НоменклатурнаяГруппа", Объект.Ссылка);
    
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	БиологическиеАктивы.Код,
    |	БиологическиеАктивы.Ссылка КАК Номенклатура
    |ИЗ
    |	Справочник.БиологическиеАктивы КАК БиологическиеАктивы
    |ГДЕ
    |	БиологическиеАктивы.НоменклатурнаяГруппа.Ссылка = &НоменклатурнаяГруппа
    |
    |УПОРЯДОЧИТЬ ПО
    |	Номенклатура";
    
    ТаблицаТоваров = Запрос.Выполнить().Выгрузить();  
    
    ИНАГРО_СписокГруппыБА.Загрузить(ТаблицаТоваров);
	// ИНАГРО--
    
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
    СписокНоменклатуры = ЭтаФорма.СписокГруппы.Выгрузить().ВыгрузитьКолонку("Номенклатура");
    
    Запрос = Новый Запрос;
    Запрос.УстановитьПараметр("ТекущаяНоменклатурнаяГруппа", Объект.Ссылка);
    Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
    
    Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
    |    ВЫБОР
    |        КОГДА (НЕ Номенклатура.НоменклатурнаяГруппа = &ТекущаяНоменклатурнаяГруппа)
    |            ТОГДА Номенклатура.Ссылка
    |        ИНАЧЕ 0
    |    КОНЕЦ КАК НоменклатураДобавить,
    |    ВЫБОР
    |        КОГДА Номенклатура.НоменклатурнаяГруппа = &ТекущаяНоменклатурнаяГруппа
    |            ТОГДА Номенклатура.Ссылка
    |        ИНАЧЕ 0
    |    КОНЕЦ КАК НоменклатураУдалить
    |ИЗ
    |    Справочник.Номенклатура КАК Номенклатура
    |ГДЕ
    |    (Номенклатура.Ссылка В (&СписокНоменклатуры)
    |                И (НЕ Номенклатура.НоменклатурнаяГруппа = &ТекущаяНоменклатурнаяГруппа)
    |            ИЛИ (НЕ Номенклатура.Ссылка В (&СписокНоменклатуры))
    |                И Номенклатура.НоменклатурнаяГруппа = &ТекущаяНоменклатурнаяГруппа)
    |    И (НЕ Номенклатура.ЭтоГруппа)";
    
    НачатьТранзакцию();
    Попытка
        
        ТаблицаТоваров = Запрос.Выполнить().Выбрать();  
        Пока ТаблицаТоваров.Следующий() > 0 Цикл
            Номенклатура = ТаблицаТоваров.НоменклатураДобавить;
            Если НЕ Номенклатура = 0 Тогда
                ТекущийТовар = Номенклатура.ПолучитьОбъект();
                ТекущийТовар.НоменклатурнаяГруппа = Объект.Ссылка;
                Текст =  НСтр("ru='Не удалось записать наименование %Товар%';uk='Не вдалося записати найменування %Товар%'");
                Текст = СтрЗаменить(Текст,"%Товар%", ТекущийТовар.Наименование);
                ТекущийТовар.Записать();
            КонецЕсли;
            
            Номенклатура = ТаблицаТоваров.НоменклатураУдалить;
            Если НЕ Номенклатура = 0 Тогда
                
                ТекущийТовар = Номенклатура.ПолучитьОбъект();
                ТекущийТовар.НоменклатурнаяГруппа = "";
                Текст =  НСтр("ru='Не удалось записать наименование %Товар%';uk='Не вдалося записати найменування %Товар%'");
                Текст = СтрЗаменить(Текст,"%Товар%", ТекущийТовар.Наименование);
                ТекущийТовар.Записать();
            КонецЕсли;
        КонецЦикла;
        
        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
		ОписаниеОшибки = ИнформацияОбОшибке();
		ЗаписьЖурналаРегистрации(Текст, УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки.Описание);
        ВызватьИсключение Текст;
        
    КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
    // Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НалоговоеНазначениеВПроизводствеПриИзменении(Элемент)

	Если    Объект.НалоговоеНазначениеВПроизводстве = ПредопределенноеЗначение("Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально")
		ИЛИ Объект.НалоговоеНазначениеВПроизводстве = ПредопределенноеЗначение("Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность") Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Нельзя указывать в качестве налогового назначения в производстве ""%1""!';uk='Неможна вибирати в якості податкового призначення у виробництві  ""%1""!'"), Объект.НалоговоеНазначениеВПроизводстве);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.НалоговоеНазначениеВПроизводстве");
		
		Объект.НалоговоеНазначениеВПроизводстве = ПредопределенноеЗначение("Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#Область СлужебныеПроцедурыИФункцииБСП
 
// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
	
#КонецОбласти

#КонецОбласти

#Область ПроцедурыПодсистемыСвойств
	
#КонецОбласти 
