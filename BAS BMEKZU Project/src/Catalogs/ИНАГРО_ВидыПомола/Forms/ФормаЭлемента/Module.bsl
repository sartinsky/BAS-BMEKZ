#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьИтоги(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МехПотериПриИзменении(Элемент)
	
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УсушкаПриИзменении(Элемент)
	
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыХарактеристики

&НаКлиенте
Процедура ХарактеристикиХарактеристикаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Характеристики.ТекущиеДанные;
	
	ДанныеСтрокиТаблицы = Новый Структура("Характеристика, ЕдиницаИзмерения");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);

	ХарактеристикиХарактеристикаПриИзмененииНаСервере(ДанныеСтрокиТаблицы);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);	

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ХарактеристикиХарактеристикаПриИзмененииНаСервере(СтрокаТабличнойЧасти)
	
	СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтрокаТабличнойЧасти.Характеристика.ЕдиницаИзмерения;
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьХарактеристикиВРазрезеПродукции(Команда)
	
	Если Объект.НормыИзмененияВыходаПродукции.Количество()> 0 Тогда
		ТекстВопроса = НСтр("ru='Перезаполнить список?';uk='Перезаповнити список?'");
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьХарактеристикиВРазрезеПродукцииЗавершение", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Иначе
		ЗаполнитьХарактеристикиВРазрезеПродукцииНаСервере();
	КонецЕсли; 	

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьХарактеристикиВРазрезеПродукцииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
   	
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда 		
		Возврат;
	КонецЕсли;
	
	Объект.НормыИзмененияВыходаПродукции.Очистить();  	
	
	ЗаполнитьХарактеристикиВРазрезеПродукцииНаСервере();
			
КонецПроцедуры  

&НаКлиенте
Процедура ЗаполнитьХарактеристики(Команда)
	
	Если Объект.НормыИзмененияВыходаПродукции.Количество()> 0 Тогда
		ТекстВопроса = НСтр("ru='Перезаполнить список?';uk='Перезаповнити список?'");
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьХарактеристикиЗавершение", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Иначе
		ЗаполнитьХарактеристикиНаСервере();
	КонецЕсли; 	

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьХарактеристикиЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
   	
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда 		
		Возврат;
	КонецЕсли;
	
	Объект.НормыИзмененияВыходаПродукции.Очистить();  	
	
	ЗаполнитьХарактеристикиНаСервере();
			
КонецПроцедуры  

&НаКлиенте
Процедура РассчитатьНормыПоМуке(Команда)
	
	Если Объект.НормыИзмененияВыходаПродукции.Количество()> 0 Тогда		
		ТекстВопроса = НСтр("ru='Пересчитать нормы?';uk='Перерахувати норми?'");
		Оповещение = Новый ОписаниеОповещения("РассчитатьНормыПоМукеЗавершение", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Возврат;
	КонецЕсли; 	

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьНормыПоМукеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
   	
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда 		
		Возврат;
	КонецЕсли;	 	
	
	РассчитатьНормыПоМукеНаСервере();
			
КонецПроцедуры  

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПродукцияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьХарактеристикиВРазрезеПродукцииНаСервере()
   	
	Для Каждого СтрПродукции Из Объект.Продукция Цикл
		
		Для Каждого СтрХарактеристик Из Объект.Характеристики Цикл
			СтрНормыИзминенияВыходаПродукции 							   = Объект.НормыИзмененияВыходаПродукции.Добавить();
			СтрНормыИзминенияВыходаПродукции.Номенклатура 				   = СтрПродукции.Номенклатура;
			СтрНормыИзминенияВыходаПродукции.Характеристика 			   = СтрХарактеристик.Характеристика;
			СтрНормыИзминенияВыходаПродукции.НормаИзмененияВыходаПродукции = 0;
		КонецЦикла;
		
	КонецЦикла;
			
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьХарактеристикиНаСервере()
	
	Для Каждого СтрХарактеристик Из Объект.Характеристики Цикл
		СтрНормыИзминенияВыходаПродукции 							   = Объект.НормыИзмененияВыходаПродукции.Добавить();		
		СтрНормыИзминенияВыходаПродукции.Характеристика 			   = СтрХарактеристик.Характеристика;
		СтрНормыИзминенияВыходаПродукции.НормаИзмененияВыходаПродукции = 0;
	КонецЦикла; 
			
КонецПроцедуры

&НаСервере
Процедура РассчитатьНормыПоМукеНаСервере()
	
	ВсегоПлановыйПроцентВыходаПродукции     = 0;
	ВсегоПлановыйПроцентВыходаГодныхОтходов = 0;
	
	ПолучитьИтогиПоПлановомуВыходуПродукции(ВсегоПлановыйПроцентВыходаПродукции, ВсегоПлановыйПроцентВыходаГодныхОтходов);

	Для Каждого СтрНормы Из Объект.НормыИзмененияВыходаПродукции Цикл
		
		НормаИзмененияВыходаПродукции = 0;
		// Расчет нормы по Влажности
		Если СтрНормы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Влажность Тогда
			Если ИНАГРО_Элеватор.Продукция(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = -1 * Окр(ПолучитьПлановыйВыходПродукции(СтрНормы.Номенклатура) / (ВсегоПлановыйПроцентВыходаПродукции + ВсегоПлановыйПроцентВыходаГодныхОтходов), 3);
			ИначеЕсли ИНАГРО_Элеватор.ГодныеОтходы(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = -1 * Окр(ПолучитьПлановыйВыходПродукции(СтрНормы.Номенклатура) / (ВсегоПлановыйПроцентВыходаПродукции + ВсегоПлановыйПроцентВыходаГодныхОтходов), 3);
			ИначеЕсли ИНАГРО_Элеватор.НегодныеОтходы(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = 0;
			КонецЕсли;
		// Расчет нормы по Сорной примеси
		ИначеЕсли СтрНормы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.СорнаяПримесь Тогда
			Если ИНАГРО_Элеватор.Продукция(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = 0;
			ИначеЕсли ИНАГРО_Элеватор.ГодныеОтходы(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = 0;
			ИначеЕсли ИНАГРО_Элеватор.НегодныеОтходы(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = 0;
			КонецЕсли;
		// Расчет нормы по Зерновой примеси
		ИначеЕсли СтрНормы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЗерноваяПримесь Тогда
			Если ИНАГРО_Элеватор.Продукция(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = -1 * Окр(ПолучитьПлановыйВыходПродукции(СтрНормы.Номенклатура) / (ВсегоПлановыйПроцентВыходаПродукции + ВсегоПлановыйПроцентВыходаГодныхОтходов), 3);
			ИначеЕсли ИНАГРО_Элеватор.ГодныеОтходы(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = -1 * Окр(ПолучитьПлановыйВыходПродукции(СтрНормы.Номенклатура) / (ВсегоПлановыйПроцентВыходаПродукции + ВсегоПлановыйПроцентВыходаГодныхОтходов), 3);
			ИначеЕсли ИНАГРО_Элеватор.НегодныеОтходы(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = 1;
			КонецЕсли;
		ИначеЕсли СтрНормы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.ЗерноваяПримесь2 Тогда
			Если ИНАГРО_Элеватор.Продукция(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = -1 * Окр(ПолучитьПлановыйВыходПродукции(СтрНормы.Номенклатура) / ВсегоПлановыйПроцентВыходаПродукции, 3);
			ИначеЕсли ИНАГРО_Элеватор.ГодныеОтходы(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = 1;
			ИначеЕсли ИНАГРО_Элеватор.НегодныеОтходы(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = 0;
			КонецЕсли;			
		// Расчет нормы по Стекловидности
		ИначеЕсли СтрНормы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Стекловидность Тогда
			Если ИНАГРО_Элеватор.Продукция(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = -1 * Окр(ПолучитьПлановыйВыходПродукции(СтрНормы.Номенклатура) / ВсегоПлановыйПроцентВыходаПродукции, 3);
			ИначеЕсли ИНАГРО_Элеватор.ГодныеОтходы(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = 1;
			ИначеЕсли ИНАГРО_Элеватор.НегодныеОтходы(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = 0;
			КонецЕсли;
		// Расчет нормы по Натуре
		ИначеЕсли СтрНормы.Характеристика = ПланыВидовХарактеристик.ИНАГРО_ХарактеристикиВидовКультур.Натура Тогда
			Если ИНАГРО_Элеватор.Продукция(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = -1 * Окр(ПолучитьПлановыйВыходПродукции(СтрНормы.Номенклатура) / ВсегоПлановыйПроцентВыходаПродукции, 3);
			ИначеЕсли ИНАГРО_Элеватор.ГодныеОтходы(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = 1;
			ИначеЕсли ИНАГРО_Элеватор.НегодныеОтходы(СтрНормы.Номенклатура) Тогда
				НормаИзмененияВыходаПродукции = 0;
			КонецЕсли;
		КонецЕсли;
		
		СтрНормы.НормаИзмененияВыходаПродукции = НормаИзмененияВыходаПродукции;
		
	КонецЦикла;
		
КонецПроцедуры  

&НаСервере
Процедура ПолучитьИтогиПоПлановомуВыходуПродукции(ВсегоПлановыйПроцентВыходаПродукции, ВсегоПлановыйПроцентВыходаГодныхОтходов)
	
	Для Каждого СтрПродукции Из Объект.Продукция Цикл
		
		Если ИНАГРО_Элеватор.Продукция(СтрПродукции.Номенклатура) Тогда
			ВсегоПлановыйПроцентВыходаПродукции = ВсегоПлановыйПроцентВыходаПродукции + СтрПродукции.ПлановыйПроцентВыходаПродукции;
		КонецЕсли;
		
		Если ИНАГРО_Элеватор.ГодныеОтходы(СтрПродукции.Номенклатура) Тогда
			ВсегоПлановыйПроцентВыходаГодныхОтходов = ВсегоПлановыйПроцентВыходаГодныхОтходов + СтрПродукции.ПлановыйПроцентВыходаПродукции;
		КонецЕсли;
		
	КонецЦикла;		
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПлановыйВыходПродукции(Номенклатура)
	
	Рез = 0;
	
	Для Каждого СтрПродукции Из Объект.Продукция Цикл
		Если СтрПродукции.Номенклатура = Номенклатура Тогда
			Возврат СтрПродукции.ПлановыйПроцентВыходаПродукции;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Рез;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоги(Форма)

	Объект = Форма.Объект; 
		
	Форма.ИтогиВсего = Объект.Продукция.Итог("ПлановыйПроцентВыходаПродукции") +  Объект.МехПотери + Объект.Усушка; 

КонецПроцедуры

#КонецОбласти