
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    ЗаполнитьТаблицуСчетов()
    
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьТаблицуСчетовУчета(Номенклатура,СчетаУчетаСкрытьНеИспользуемые)

	МассивНоменклатура	 = Новый Массив();
	МассивНоменклатура.Добавить(Справочники.Номенклатура.ПустаяСсылка());
	МассивНоменклатура.Добавить(Номенклатура);

	СписокГрупп = ОбщегоНазначенияБПВызовСервера.ПолучитьСписокВышеСтоящихГрупп(Номенклатура);
	Для каждого Элемент Из СписокГрупп Цикл
	    МассивНоменклатура.Добавить(Элемент);
	КонецЦикла;

	ТестЗапрос = Новый Запрос();

	ТестЗапрос.УстановитьПараметр("Номенклатура",       МассивНоменклатура);
	ТестЗапрос.УстановитьПараметр("ПустаяОрганизания",  Справочники.Организации.ПустаяСсылка());
	ТестЗапрос.УстановитьПараметр("ПустойСклад",        Справочники.Склады.ПустаяСсылка());
	ТестЗапрос.УстановитьПараметр("ПустойТипСклада",    Перечисления.ТипыСкладов.ПустаяСсылка());

	ТестЗапрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|   ВЫБОР
	|       КОГДА СчетаУчетаНоменклатуры.Организация = &ПустаяОрганизания
	|           ТОГДА " + НСтр("ru='""< Для всех >""';uk='""< Для всіх >""'") + "
	|       ИНАЧЕ СчетаУчетаНоменклатуры.Организация
	|   КОНЕЦ КАК Организация,
	|   СчетаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|   СчетаУчетаНоменклатуры.Номенклатура.ЭтоГруппа КАК ЭтоГруппа,
	|   ВЫБОР
	|       КОГДА СчетаУчетаНоменклатуры.Склад = &ПустойСклад
	|           ТОГДА " + НСтр("ru='""< Для всех >""';uk='""< Для всіх >""'") + "
	|       ИНАЧЕ СчетаУчетаНоменклатуры.Склад
	|   КОНЕЦ КАК Склад,
	|   ВЫБОР
	|       КОГДА СчетаУчетаНоменклатуры.ТипСклада = &ПустойТипСклада
	|           ТОГДА " + НСтр("ru='""< Для всех >""';uk='""< Для всіх >""'") + "
	|       ИНАЧЕ СчетаУчетаНоменклатуры.ТипСклада
	|   КОНЕЦ КАК ТипСклада,
	|   СчетаУчетаНоменклатуры.СчетУчетаБУ КАК СчетУчета,
	|   СчетаУчетаНоменклатуры.СчетУчетаПередачиБУ КАК СчетУчетаПередачи,
	|   СчетаУчетаНоменклатуры.СубконтоБУ1 КАК Субконто1,
	|   СчетаУчетаНоменклатуры.СубконтоБУ2 КАК Субконто2,
	|   СчетаУчетаНоменклатуры.СубконтоБУ3 КАК Субконто3
	|ИЗ
	|   РегистрСведений.СчетаУчетаНоменклатуры КАК СчетаУчетаНоменклатуры
	|ГДЕ
	|   СчетаУчетаНоменклатуры.Номенклатура В(&Номенклатура)";

	ТаблицаЗапроса = ТестЗапрос.Выполнить().Выгрузить();
	ТаблицаЗапроса.Колонки.Добавить("Глубина");
	ТаблицаЗапроса.Колонки.Добавить("Описание");
	ТаблицаЗапроса.Колонки.Добавить("Приоритет");
	ТаблицаЗапроса.Колонки.Добавить("АктивностьПравила");
	ТаблицаЗапроса.Колонки.Добавить("Общее");

	Для Каждого Строка Из ТаблицаЗапроса Цикл
		Описание = "";
		Если Строка.Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда
			Строка.Глубина = 0;
			Описание = НСтр("ru='Для всех номенклатурных единиц (при отсутствии других правил)';uk='Для всіх номенклатурних одиниць (при відсутності інших правил)'");
		ИначеЕсли Строка.Номенклатура = Номенклатура Тогда
			Строка.Глубина = СтрДлина(Строка.Номенклатура.ПолныйКод());
			Описание = НСтр("ru='Для номенклатурной единицы ';uk='Для номенклатурної одиниці '") + Строка(Строка.Номенклатура);
		Иначе
			Строка.Глубина = СтрДлина(Строка.Номенклатура.ПолныйКод());
			Описание = НСтр("ru='Для всех номенклатурных единиц, входящих в группу ';uk='Для всіх номенклатурних одиниць, що входять в групу '") + Строка(Строка.Номенклатура);
		КонецЕсли;
		Если ЗначениеЗаполнено(Строка.Организация) Тогда
			Описание = Описание + НСтр("ru='; по организации ';uk='; по організації '") + Строка(Строка.Организация);
		КонецЕсли;
		Если ЗначениеЗаполнено(Строка.Склад) Тогда
			Описание = Описание + НСтр("ru='; на складе ';uk='; на складі '") + Строка(Строка.Склад);
		ИначеЕсли ЗначениеЗаполнено(Строка.ТипСклада) Тогда
			Описание = Описание + НСтр("; на складах типа ';uk='; на складах типу '") + Строка(Строка.ТипСклада);
		КонецЕсли;

		Строка.Общее = ?(Строка.Номенклатура = Номенклатура, 1, 0);
		Строка.Описание = Описание;
	КонецЦикла;

	ТаблицаЗапроса.Сортировать("Глубина Убыв, Склад Убыв, ТипСклада Убыв, Организация Убыв", Новый СравнениеЗначений);

	Если ТаблицаЗапроса.Количество() > 0 Тогда

		АктивностьОпт = Истина;
		АктивностьРозница = Истина;

		ТекПриоритет = 1;
		ТекКлючПриоритета = (ТаблицаЗапроса[0].Глубина*1000) + (Число(ЗначениеЗаполнено(ТаблицаЗапроса[0].Организация))*100) 
		+ (Число(ЗначениеЗаполнено(ТаблицаЗапроса[0].Склад))*10) + (Число(ЗначениеЗаполнено(ТаблицаЗапроса[0].ТипСклада)));

		Для Каждого Строка Из ТаблицаЗапроса Цикл
			КлючПриоритета = (Строка.Глубина*1000) + (Число(ЗначениеЗаполнено(Строка.Организация))*100) 
			+ (Число(ЗначениеЗаполнено(Строка.Склад))*10) + (Число(ЗначениеЗаполнено(Строка.ТипСклада)));

			Если КлючПриоритета <> ТекКлючПриоритета Тогда
				ТекКлючПриоритета = КлючПриоритета;
				ТекПриоритет = ТекПриоритет + 1;
			КонецЕсли;
			Строка.Приоритет = ТекПриоритет;

			Если Строка.ТипСклада = НСтр("ru='< Для всех >';uk='< Для всіх >'") Тогда
				Строка.АктивностьПравила = (АктивностьОпт ИЛИ АктивностьРозница);
			ИначеЕсли Строка.ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад Тогда
				Строка.АктивностьПравила = (АктивностьОпт);
			Иначе
				Строка.АктивностьПравила = (АктивностьРозница);
			КонецЕсли;

			Если Строка.Организация = НСтр("ru='< Для всех >';uk='< Для всіх >'") И Строка.Склад = НСтр("ru='< Для всех >';uk='< Для всіх >'") Тогда
				Если НЕ ЗначениеЗаполнено(Строка.ТипСклада) Тогда
					АктивностьОпт = Ложь;
					АктивностьРозница = Ложь;
				ИначеЕсли Строка.ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад Тогда
					АктивностьОпт = Ложь;
				Иначе
					АктивностьРозница = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;

		Если СчетаУчетаСкрытьНеИспользуемые Тогда
			НайденныеСтроки = ТаблицаЗапроса.НайтиСтроки(Новый Структура("АктивностьПравила", Ложь));
			Для Каждого Строка Из НайденныеСтроки Цикл
				ТаблицаЗапроса.Удалить(Строка);
			КонецЦикла;
		КонецЕсли;

	КонецЕсли;

	Возврат ТаблицаЗапроса;

КонецФункции


&НаКлиенте
Процедура ОбновитьСчетаУчета(Команда)
    
    ЗаполнитьТаблицуСчетов();
КонецПроцедуры

&НаСервере
Процедура  ЗаполнитьТаблицуСчетов()
    
    Результат = СформироватьТаблицуСчетовУчета(Параметры.НоменклатураСчетов,Элементы.КнопкаСчетаУчетаСкрытьНеИспользуемые.Пометка); 
    ЗначениеВРеквизитФормы(Результат,"СчетаУчета");
КонецПроцедуры

&НаКлиенте
Процедура СчетаУчетаСкрытьНеИспользуемые(Команда)
    Элементы.КнопкаСчетаУчетаСкрытьНеИспользуемые.Пометка = НЕ Элементы.КнопкаСчетаУчетаСкрытьНеИспользуемые.Пометка;
    ЗаполнитьТаблицуСчетов();
КонецПроцедуры

&НаКлиенте
Процедура СчетаУчетаСправкаРегистра(Команда)
    ОткрытьСправку("РегистрСведений.СчетаУчетаНоменклатуры");
КонецПроцедуры

