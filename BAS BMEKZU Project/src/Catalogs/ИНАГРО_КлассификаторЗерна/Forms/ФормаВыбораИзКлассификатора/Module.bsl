#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.Параметры.Свойство("СтрокаПоиска") Тогда
		СтрокаПоиска = ЭтаФорма.Параметры.СтрокаПоиска;
	КонецЕсли;
	
	Макет = Справочники.ИНАГРО_КлассификаторЗерна.ПолучитьМакет("Классификатор");
	ТабДокумент.Вывести(Макет);
	ТабДокумент.ФиксацияСверху = 3;
	
	ОбластьКодЛево              = Макет.Области.Код.Лево;
	ОбластьКодПраво             = Макет.Области.Код.Право;
	ОбластьНаименованиеЛево     = Макет.Области.Наименование.Лево;
	ОбластьНаименованиеПраво    = Макет.Области.Наименование.Право;
	ОбластьИндексВидаЗернаЛево  = Макет.Области.ИндексВидаЗерна.Лево;
	ОбластьИндексВидаЗернаПраво = Макет.Области.ИндексВидаЗерна.Право;
		
	Если НЕ ПустаяСтрока(СтрокаПоиска) Тогда
		НайденнаяОбласть = ТабДокумент.НайтиТекст(СтрокаПоиска, , ТабДокумент.Области.Код, , , , Истина);
		Элементы.ТабДокумент.ТекущаяОбласть = НайденнаяОбласть;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	ИскатьСтрокуВТаблице(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Область = Элементы.ТабДокумент.ТекущаяОбласть;
	ВыполнитьВыбор(Область);
	
КонецПроцедуры

&НаКлиенте
Процедура ИскатьСтрокуВТаблице(Команда)
	
	Если ПустаяСтрока(СтрокаПоиска) Тогда
		ПоказатьПредупреждение( , НСтр("ru='Не задана строка поиска';uk='Не заданий рядок пошуку'"));
		ТекущийЭлемент = Элементы.СтрокаПоиска;
		Возврат;
	КонецЕсли;
	
	НайденнаяОбласть = ТабДокумент.НайтиТекст(СтрокаПоиска, Элементы.ТабДокумент.ТекущаяОбласть, , , , , Истина);
	Если НайденнаяОбласть = Неопределено Тогда
		НайденнаяОбласть = ТабДокумент.НайтиТекст(СтрокаПоиска, , , , , , Истина);
		Если НайденнаяОбласть = Неопределено Тогда
			ОбщегоНазначенияБПКлиентСервер.СообщитьОбОшибке(
				НСтр("ru='Строка не найдена';uk='Рядок не знайдено'"));
			ТекущийЭлемент = Элементы.СтрокаПоиска;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ТабДокумент.ТекущаяОбласть = НайденнаяОбласть;
	ТекущийЭлемент = Элементы.СтрокаПоиска;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыполнитьВыбор(ТекущаяОбласть)
	
	Код             = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьКодЛево,
									      ТекущаяОбласть.Низ,  ОбластьКодПраво).Текст;
	Наименование    = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьНаименованиеЛево,
									      ТекущаяОбласть.Низ,  ОбластьНаименованиеПраво).Текст;	
	ИндексВидаЗерна = ТабДокумент.Область(ТекущаяОбласть.Верх, ОбластьИндексВидаЗернаЛево,
									      ТекущаяОбласть.Низ,  ОбластьИндексВидаЗернаПраво).Текст;								   
			
	ЗначенияЗаполнения = Новый Структура("Код, Наименование, ИндексВидаЗерна",
										 Код, СтрПолучитьСтроку(Наименование, 1), ИндексВидаЗерна);
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	КлассификаторЗерна = ПоискСуществующегоКлассификатораЗерна(ПараметрыФормы);
	
	Если КлассификаторЗерна <> Неопределено Тогда
		
		ПараметрыФормы = Новый Структура("Ключ", КлассификаторЗерна);

		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='В справочнике ""Классификатор зерна"" уже существует элемент с кодом ""%1""! Открыт существующий';uk='У довіднику ""Класифікатор зерна"" вже існує елемент з кодом ""%1""! Відкритий існуючий'"), Код);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

		ОткрытьФорму("Справочник.ИНАГРО_КлассификаторЗерна.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
		
	Иначе	
		
		
		ТекущаяСсылка = СоздатьЭлемент(ЗначенияЗаполнения);
		
		//ОповеститьОВыборе(ТекущаяСсылка);
		//
		//ПоказатьОповещениеПользователя(НСтр("ru='Новое значение добавлено.';uk='Нове значення додане.'"), ,,БиблиотекаКартинок.Информация32);
		ПараметрыФормы = Новый Структура("Ключ", ТекущаяСсылка);

		ОткрытьФорму("Справочник.ИНАГРО_КлассификаторЗерна.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция СоздатьЭлемент(ЗначенияЗаполнения)
	
	НовыйЭлемент = Справочники.ИНАГРО_КлассификаторЗерна.СоздатьЭлемент(); 
	НовыйЭлемент.Код = ЗначенияЗаполнения.Код;
	НовыйЭлемент.Наименование = ЗначенияЗаполнения.Наименование;
	НовыйЭлемент.ИндексВидаЗерна = ЗначенияЗаполнения.ИндексВидаЗерна;
	НовыйЭлемент.Записать();
	
	Возврат НовыйЭлемент.Ссылка;

КонецФункции	

&НаСервереБезКонтекста
Функция ПоискСуществующегоКлассификатораЗерна(Знач ПараметрыФормы)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ИНАГРО_КлассификаторЗерна.Ссылка
		|ИЗ
		|	Справочник.ИНАГРО_КлассификаторЗерна КАК ИНАГРО_КлассификаторЗерна
		|ГДЕ
		|	ИНАГРО_КлассификаторЗерна.Код = &Код";
	
	Запрос.УстановитьПараметр("Код", ПараметрыФормы.ЗначенияЗаполнения.Код);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ТабДокументВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Область = Элементы.ТабДокумент.ТекущаяОбласть;
	ВыполнитьВыбор(Область);
	
КонецПроцедуры

#КонецОбласти