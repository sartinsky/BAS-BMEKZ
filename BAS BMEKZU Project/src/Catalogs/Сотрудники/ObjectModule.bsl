#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Подсистема "Управление доступом"

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = КадровыйУчет.ЗапросВТВсеЗначенияДоступаСотрудников(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Ссылка));
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	
	Если ДополнительныеСвойства.Свойство("ТекущаяОрганизация") 
		И ЗначениеЗаполнено(ДополнительныеСвойства.ТекущаяОрганизация) Тогда
		
		ТекущаяОрганизация = ДополнительныеСвойства.ТекущаяОрганизация;
		
	Иначе
		ТекущаяОрганизация = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТекущаяОрганизация", ТекущаяОрганизация);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВсеЗначенияДоступаСотрудников.ЗначениеДоступа
		|ПОМЕСТИТЬ ВТЗначенияДоступаСотрудника
		|ИЗ
		|	ВТВсеЗначенияДоступаСотрудников КАК ВсеЗначенияДоступаСотрудников
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&ГоловнаяОрганизация
		|ГДЕ
		|	&ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&ТекущаяОрганизация
		|ГДЕ
		|	&ТекущаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗначенияДоступаСотрудника.ЗначениеДоступа
		|ИЗ
		|	ВТЗначенияДоступаСотрудника КАК ЗначенияДоступаСотрудника";
		
	НомерНабора = 0;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
			
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора		= НомерНабора;
			СтрокаТаб.ЗначениеДоступа	= Выборка.ЗначениеДоступа;
			
			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора		= НомерНабора;
			СтрокаТаб.ЗначениеДоступа	= ФизическоеЛицо;
			
			НомерНабора = НомерНабора + 1;
			
		КонецЦикла;
			
	Иначе
	
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.НомерНабора		= НомерНабора;
		СтрокаТаб.ЗначениеДоступа	= ФизическоеЛицо;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Подсистема "Управление доступом"

Процедура ПриКопировании(ОбъектКопирования)
	
	ТекущийПроцентСевернойНадбавки = 0;
	УточнениеНаименования = "";
	ВАрхиве = Ложь;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйУчет") Тогда
		
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(
			ПроверяемыеРеквизиты,
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ГоловнаяОрганизация"));
		
	КонецЕсли; 

КонецПроцедуры

#КонецЕсли
