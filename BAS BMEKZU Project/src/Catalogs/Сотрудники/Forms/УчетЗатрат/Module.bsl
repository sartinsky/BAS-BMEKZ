////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "СотрудникСсылка,ДатаПриема");
	
	ПрочитатьДанные();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СотрудникиКлиент.ЗарегистрироватьОткрытиеФормы(ЭтаФорма, "УчетЗатрат");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СотрудникиКлиент.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	
	Если ИмяСобытия = "ОтредактированаИстория" И СотрудникСсылка = Источник Тогда
		Если Параметр.ИмяРегистра = "БухучетЗарплатыСотрудников" Тогда
			Если БухучетЗарплатыСотрудниковНаборЗаписейПрочитан Тогда
				РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(
					ЭтаФорма,
					СотрудникСсылка,
					ИмяСобытия,
					Параметр,
					Источник);
				ОбновитьПолеСведенияОБухучетеПериод(ЭтаФорма);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	РедактированиеПериодическихСведений.ПроверитьЗаписьВФорме(ЭтаФорма, "БухучетЗарплатыСотрудников", СотрудникСсылка, Отказ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СпособОтраженияЗарплатыВБухучетеПриИзменении(Элемент)

	ОбновитьПолеСведенияОБухучетеПериод(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковПериодСтрокойПриИзменении(Элемент)

	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "БухучетЗарплатыСотрудников.Период", "БухучетЗарплатыСотрудниковПериодСтрокой", Модифицированность);

КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "БухучетЗарплатыСотрудников.Период", "БухучетЗарплатыСотрудниковПериодСтрокой", Модифицированность);

КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)

	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "БухучетЗарплатыСотрудников.Период", "БухучетЗарплатыСотрудниковПериодСтрокой", Направление, Модифицированность);

КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковПериодСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)

	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковПериодСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)

	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Перечитать(Команда)
	
	ПрочитатьДанные();
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковИстория(Команда)

	СотрудникиКлиент.ОткрытьФормуРедактированияИстории("БухучетЗарплатыСотрудников", СотрудникСсылка, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПрочитатьДанные()
	
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(ЭтаФорма, "БухучетЗарплатыСотрудников", СотрудникСсылка);
	ОбновитьПолеСведенияОБухучетеПериод(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Отказ) Экспорт
	
	// запрос про воинский учет
	ЗапроситьРежимИзмененияБухгалтерскогоУчета(БухучетЗарплатыСотрудников.Период, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьДанныеНаСервере(Отказ);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеНаСервере(Отказ) Экспорт
	
	Если ПроверитьЗаполнение() Тогда
		ЗаписатьСведенияОБухучетеЗарплаты();
		Модифицированность = Ложь;
	Иначе
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте(ЗакрытьФорму = Истина) Экспорт  

	СохранитьДанные(Ложь);
	
	Если Открыта() Тогда
		
		Модифицированность = Ложь;
		Если ЗакрытьФорму Тогда
			Закрыть();
		КонецЕсли; 
		
	КонецЕсли; 

	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПолеСведенияОБухучетеПериод(Форма) Экспорт
	
	// не обязательно заполнение поля Период если данные по умолчанию и при этом 
	// записи о бухучете еще нет
	Если ЗарплатаКадрыКлиентСервер.СведенияОБухучетеСотрудникаПоУмолчанию(Форма.БухучетЗарплатыСотрудников) И 
		НЕ ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудниковПрежняя.Период) Тогда
		Если ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудников.Период) Тогда
			Форма.БухучетЗарплатыСотрудников.Период = '00010101';
		КонецЕсли; 
	Иначе
		Если НЕ ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудников.Период) Тогда
			Если ЗначениеЗаполнено(Форма.ДатаПриема) Тогда
				Форма.БухучетЗарплатыСотрудников.Период = НачалоМесяца(Форма.ДатаПриема);
			Иначе
				Форма.БухучетЗарплатыСотрудников.Период = НачалоМесяца(ЗарплатаКадрыКлиентСервер.ДатаСеанса());
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(Форма, "БухучетЗарплатыСотрудников", Форма.СотрудникСсылка);
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(Форма, "БухучетЗарплатыСотрудников.Период", "БухучетЗарплатыСотрудниковПериодСтрокой");
		
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияБухгалтерскогоУчета( ДатаИзменения, Отказ)
	
	ТекстКнопкиДа = НСтр("ru='Изменился бухучет';uk='Змінився бухоблік'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='При редактировании изменился бухгалтерский учет для сотрудника. 
|Если просто исправлены прежние данные (они были ошибочны), нажмите ""Исправлена ошибка"".
|Если бухучет сотрудника изменился с %1, нажмите ""Изменился бухучет""';uk='При редагуванні змінився бухгалтерський облік для співробітника. 
|Якщо просто виправлені попередні дані (вони були помилкові), натисніть ""Виправлена помилка"".
|Якщо бухоблік співробітника змінився з %1, натисніть ""Змінився бухгалтерський облік""'"), 
		Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"));
	
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "БухучетЗарплатыСотрудников", ТекстВопроса, ТекстКнопкиДа, Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСведенияОБухучетеЗарплаты()
	
	Если НЕ Пользователи.РолиДоступны("ДобавлениеИзменениеБухгалтерскогоУчетаЗарплаты") Тогда
		Возврат;
	КонецЕсли;
	
	РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(ЭтаФорма, "БухучетЗарплатыСотрудников", СотрудникСсылка);
	
КонецПроцедуры

