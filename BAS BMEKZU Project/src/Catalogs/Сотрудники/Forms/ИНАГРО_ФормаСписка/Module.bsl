#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВедетсяКадровыйУчет = Константы.ИспользоватьКадровыйУчет.Получить();
	
	Если Параметры.РежимВыбора Тогда
		
		Элементы.Список.РежимВыбора = Истина;
		
		Если Параметры.ЗакрыватьПриВыборе = Ложь Тогда
			Элементы.Список.МножественныйВыбор = Истина;
			Элементы.Список.РежимВыделения = РежимВыделенияТаблицы.Множественный;
		КонецЕсли;
		
		НаименованиеОрганизации = "";
		Если Параметры.Отбор.Свойство("ТекущаяОрганизация") Тогда
			НаименованиеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Отбор.ТекущаяОрганизация, "Наименование");
		ИначеЕсли Параметры.Отбор.Свойство("ГоловнаяОрганизация") Тогда
			НаименованиеОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Отбор.ГоловнаяОрганизация, "Наименование");
		КонецЕсли;
		
		Если ПустаяСтрока(НаименованиеОрганизации) Тогда
			НаименованиеОрганизации = НСтр("ru='<Организация не указана>';uk='<Організація не зазначена>'");
		КонецЕсли;
		
		// Если это выбор из особенного документа, например "Прием на работу"
		// управляем отборами в зависимости от "принятости на работу"
		Параметры.Свойство("ДоступныНепринятые", ДоступныНепринятые);
		Параметры.Свойство("ДостпностьГПХ", ДостпностьГПХ);
		
		
		Если ДоступныНепринятые Тогда
			
			// Переопределим отбор по головной организации
			Если Параметры.Отбор.Свойство("ТекущаяОрганизация") И ЗначениеЗаполнено(Параметры.Отбор.ТекущаяОрганизация) Тогда
				ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Параметры.Отбор.ТекущаяОрганизация);
				Параметры.Отбор.Удалить("ТекущаяОрганизация");
				Параметры.Отбор.Вставить("ГоловнаяОрганизация", ГоловнаяОрганизация);
			КонецЕсли; 
			
			Параметры.Отбор.Вставить("Принят", Ложь);
			
			// Если при открытии формы выбора передан сотрудник, и он уже принят на работу
			// отключим отбор по непринятым сотрудникам
			Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
				КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Параметры.ТекущаяСтрока, "ТекущаяОрганизация", ТекущаяДатаСеанса());
				Если КадровыеДанные.Количество() > 0 Тогда
					Если ЗначениеЗаполнено(КадровыеДанные[0].ТекущаяОрганизация) Тогда
						Параметры.Отбор.Удалить("Принят");
					КонецЕсли; 
				КонецЕсли; 
			КонецЕсли;
			
		ИначеЕсли ДостпностьГПХ Тогда
			
			// Переопределим отбор по головной организации
			Если Параметры.Отбор.Свойство("ТекущаяОрганизация") И ЗначениеЗаполнено(Параметры.Отбор.ТекущаяОрганизация) Тогда
				ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Параметры.Отбор.ТекущаяОрганизация);
				Параметры.Отбор.Удалить("ТекущаяОрганизация");
				Параметры.Отбор.Вставить("ГоловнаяОрганизация", ГоловнаяОрганизация);
			КонецЕсли; 
			
			Параметры.Отбор.Вставить("ДоступныГПХ", Истина);
			
			// Если при открытии формы выбора передан сотрудник, и он уже принят на работу
			// отключим отбор по непринятым сотрудникам
			Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
				КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Параметры.ТекущаяСтрока, "ТекущаяОрганизация", ТекущаяДатаСеанса());
				Если КадровыеДанные.Количество() > 0 Тогда
					Если ЗначениеЗаполнено(КадровыеДанные[0].ТекущаяОрганизация) Тогда
						Параметры.Отбор.Удалить("ДоступныГПХ");
					КонецЕсли; 
				КонецЕсли; 
			КонецЕсли;
			
		Иначе
			
			// Переопределим отбор по головной организации
			Если Параметры.Отбор.Свойство("ТекущаяОрганизация") И ЗначениеЗаполнено(Параметры.Отбор.ТекущаяОрганизация) Тогда
				ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Параметры.Отбор.ТекущаяОрганизация);
				Параметры.Отбор.Удалить("ТекущаяОрганизация");
				Параметры.Отбор.Вставить("ГоловнаяОрганизация", ГоловнаяОрганизация);
			КонецЕсли;
			
			Параметры.Отбор.Вставить("Принят", Истина);
			
			НачалоПериодаПримененияОтбора = '00010101';
			ОкончаниеПериодаПримененияОтбора = '00010101';
			
			Если Параметры.Отбор.Свойство("ДатаПримененияОтбора")
				И ЗначениеЗаполнено(Параметры.Отбор.ДатаПримененияОтбора) Тогда
				
				НачалоПериодаПримененияОтбора = Параметры.Отбор.ДатаПримененияОтбора;
				ОкончаниеПериодаПримененияОтбора = Параметры.Отбор.ДатаПримененияОтбора;
			
			КонецЕсли;
				
			Если Параметры.Отбор.Свойство("НачалоПериодаПримененияОтбора")
				И ЗначениеЗаполнено(Параметры.Отбор.НачалоПериодаПримененияОтбора) Тогда
				
				НачалоПериодаПримененияОтбора = Параметры.Отбор.НачалоПериодаПримененияОтбора;
				
				Если Параметры.Отбор.Свойство("ОкончаниеПериодаПримененияОтбора")
					И ЗначениеЗаполнено(Параметры.Отбор.ОкончаниеПериодаПримененияОтбора) Тогда
					
					ОкончаниеПериодаПримененияОтбора = Параметры.Отбор.ОкончаниеПериодаПримененияОтбора;
						
				Иначе
					ОкончаниеПериодаПримененияОтбора = КонецМесяца(НачалоПериодаПримененияОтбора);
				КонецЕсли;
			
			КонецЕсли;
			
			// Установка отбора по периоду работы.
			Если ЗначениеЗаполнено(НачалоПериодаПримененияОтбора) Тогда
				
				Если НачалоДня(НачалоПериодаПримененияОтбора) = НачалоДня(ОкончаниеПериодаПримененияОтбора) Тогда
					ЗаголовокЭлементаОтбора = НСтр("ru='Работающие';uk='Працюючі'") + " " + Формат(НачалоПериодаПримененияОтбора, "ДЛФ=DD");
				Иначе
					ЗаголовокЭлементаОтбора = НСтр("ru='Работающие в периоде с';uk='Працюють у періоді з'") + " " + Формат(НачалоПериодаПримененияОтбора, "ДЛФ=DD") + " " + НСтр("ru='по';uk='по'") + " " + Формат(ОкончаниеПериодаПримененияОтбора, "ДЛФ=DD");
				КонецЕсли;
				
				ГруппаОтбораИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
					Список.КомпоновщикНастроек.Настройки.Отбор.Элементы, ЗаголовокЭлементаОтбора, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
				ГруппаОтбораИ.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
					
			КонецЕсли;
			
		КонецЕсли;
			
		Если Параметры.Отбор.Свойство("ТекущееПодразделение") 
			И НЕ ЗначениеЗаполнено(Параметры.Отбор.ТекущееПодразделение) Тогда
			Параметры.Отбор.Удалить("ТекущееПодразделение");
		КонецЕсли; 
		
		Элементы.Список.ИзменятьСоставСтрок = ДоступныНепринятые ИЛИ ДостпностьГПХ;
		Элементы.ОформитьДокумент.Видимость = Ложь;
		
		// Подготовка списка подобранных сотрудников.
		АдресСпискаПодобранныхСотрудников = "";
		Если Параметры.Свойство("АдресСпискаПодобранныхСотрудников", АдресСпискаПодобранныхСотрудников) Тогда
			Если НЕ ПустаяСтрока(АдресСпискаПодобранныхСотрудников) Тогда
				СписокПодобранных.ЗагрузитьЗначения(ПолучитьИзВременногоХранилища(АдресСпискаПодобранныхСотрудников));
			КонецЕсли; 
		КонецЕсли;

		АвтоЗаголовок = Ложь;
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Сотрудники (%1)';uk='Співробітники (%1)'"), НаименованиеОрганизации);
	Иначе
		ОбщегоНазначенияБПВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтаФорма,,"ТекущаяОрганизация");
			ОсновнаяОрганизация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	    ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "ВАрхиве", ОсновнаяОрганизация, ВидСравненияКомпоновкиДанных.Равно, , Ложь, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
	КонецЕсли; 
	
	УстановитьСписокПодобранныхСотрудников();
	
	// Заполнение группы информационных ссылок
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ИнформационныйЦентр") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ИнформационныйЦентрСервер");
		Модуль.ВывестиКонтекстныеСсылки(ЭтаФорма, Элементы.ИнформационныеСсылки);
	КонецЕсли;
	
	Если НЕ Параметры.РежимВыбора Тогда
		// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаКоманднаяПанель;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	КонецЕсли;
	
	// Уведомим о появлении нового функционала.
	НастройкиПредупреждений = ОбщегоНазначенияБП.НастройкиПредупрежденийОбИзменениях("БыстроеОсвоениеСотрудники");
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Параметры.РежимВыбора И ИмяСобытия = "СозданСотрудник" И Источник = ЭтаФорма Тогда
		ОповеститьОВыборе(Параметр);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ПоказатьБыстроеОсвоение", 0.5, Истина); 

КонецПроцедуры

#КонецОбласти  

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОформитьПриемНаРаботу(Команда)

	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ОформитьНаОсновании(ЭтаФорма, Элементы.Список.ТекущаяСтрока, "Документы.ИНАГРО_ПриемНаРаботуВОрганизацию");

КонецПроцедуры

&НаКлиенте
Процедура ОформитьКадровыйПеревод(Команда)

	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ОформитьНаОсновании(ЭтаФорма, Элементы.Список.ТекущаяСтрока, "Документы.ИНАГРО_КадровоеПеремещениеОрганизаций");

КонецПроцедуры

&НаКлиенте
Процедура ОформитьУвольнение(Команда)

	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ОформитьНаОсновании(ЭтаФорма, Элементы.Список.ТекущаяСтрока, "Документы.ИНАГРО_УвольнениеИзОрганизаций");

КонецПроцедуры

&НаКлиенте
Процедура ДоговорГПХ(Команда)

	ИНАГРО_ЗарплатаКадрыРасширенныйКлиент.ОформитьНаОсновании(ЭтаФорма, Элементы.Список.ТекущаяСтрока, "Документы.ИНАГРО_ДоговорНаВыполнениеРаботСФизЛицом");

КонецПроцедуры

#КонецОбласти  

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Элементы.Список.РежимВыбора И ДоступныНепринятые Тогда
		
		Отказ = Истина;
		ПараметрыФормы = Новый Структура;
		
		Для каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл
			
			Если ЭлементОтбора.Использование Тогда
				
				Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ГоловнаяОрганизация") Тогда
					ПараметрыФормы.Вставить("ГоловнаяОрганизация", ЭлементОтбора.ПравоеЗначение);
				ИначеЕсли ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТекущаяОрганизация") Тогда
					ПараметрыФормы.Вставить("ТекущаяОрганизация", ЭлементОтбора.ПравоеЗначение);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		ПараметрыФормы.Вставить("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		ОткрытьФорму(
				"Справочник.Сотрудники.ФормаОбъекта",
				ПараметрыФормы,
				ЭтаФорма);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокПодобранныхСотрудников()
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список,
		"СписокПодобранных",
		СписокПодобранных.ВыгрузитьЗначения());
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список,
		"ДатаНачала",
		ТекущаяДата());

	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список,
		"ДатаОкончания",
		ТекущаяДата());

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаИнформационнуюСсылку(Элемент)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ИнформационныйЦентр") Тогда
		Модуль = ОбщегоНазначенияКлиент.ОбщийМодуль("ИнформационныйЦентрКлиент");
		Модуль.НажатиеНаИнформационнуюСсылку(ЭтаФорма, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаСсылкуВсеИнформационныеСсылки(Элемент)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ИнформационныйЦентр") Тогда
		Модуль = ОбщегоНазначенияКлиент.ОбщийМодуль("ИнформационныйЦентрКлиент");
		Модуль.НажатиеНаСсылкуВсеИнформационныеСсылки(ЭтаФорма.ИмяФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБыстроеОсвоение()
	
	Если НЕ ВедетсяКадровыйУчет Тогда
		ОбщегоНазначенияБПКлиент.ПоказатьПредупреждениеОбИзменениях("БыстроеОсвоениеКадровыйУчет", , НастройкиПредупреждений);
	КонецЕсли;	
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
#КонецОбласти

#КонецОбласти
