////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	СсылкаНаОбъект = Параметры.СсылкаНаОбъект;
	Если ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.Сотрудники") Тогда
		
		ИзФормыСотрудника = Истина;
		КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, СсылкаНаОбъект, "ФизическоеЛицо,ГоловнаяОрганизация");
		Если КадровыеДанные.Количество() > 0 Тогда
			ФизическоеЛицоСсылка = КадровыеДанные[0].ФизическоеЛицо;
			ГоловнаяОрганизация = КадровыеДанные[0].ГоловнаяОрганизация;
		КонецЕсли; 
		
	Иначе
		ФизическоеЛицоСсылка = СсылкаНаОбъект;
	КонецЕсли;
	
	ПрочитатьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СотрудникиКлиент.ЗарегистрироватьОткрытиеФормы(ЭтаФорма, "СпециальныеСтатусы");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СотрудникиКлиент.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	Если ИмяСобытия = "ОтредактированаИстория" Тогда 
		Если Параметр.ИмяРегистра = "СведенияОбИнвалидностиФизическихЛиц" Тогда
			Если СведенияОбИнвалидностиФизическихЛицНаборЗаписейПрочитан Тогда
				РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(
				ЭтаФорма,
				ФизическоеЛицоСсылка,
				ИмяСобытия,
				Параметр,
				Источник);
				ОбновитьПолеСведенияОбИнвалидностиПериод(ЭтаФорма);
			КонецЕсли;
		ИначеЕсли Параметр.ИмяРегистра = "СведенияОПенсионерах" Тогда
			Если СведенияОПенсионерахНаборЗаписейПрочитан Тогда
				РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(
				ЭтаФорма,
				ФизическоеЛицоСсылка,
				ИмяСобытия,
				Параметр,
				Источник);
			КонецЕсли;
		ИначеЕсли Параметр.ИмяРегистра = "СведенияОЛицахСДополнительнымиГарантиями" Тогда
			Если СведенияОЛицахСДополнительнымиГарантиямиНаборЗаписейПрочитан Тогда
				РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(
				ЭтаФорма,
				ФизическоеЛицоСсылка,
				ИмяСобытия,
				Параметр,
				Источник);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	ОбработкаОповещенияНаСервере(ИмяСобытия, Параметр);		

КонецПроцедуры

&НаСервере
Процедура ОбработкаОповещенияНаСервере(ИмяСобытия, Параметр)
	
	Если ИмяСобытия = "ИзмененыДанныеДополнительнойФормы" Тогда
		ДополнительныеСвойства = Новый Структура;
			РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(
			ЭтаФорма,
			"СведенияОбИнвалидностиФизическихЛиц",
			ФизическоеЛицоСсылка,
			,
			ДополнительныеСвойства);
			РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(
			ЭтаФорма,
			"СведенияОПенсионерах",
			ФизическоеЛицоСсылка,
			,
			ДополнительныеСвойства);
			РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(
			ЭтаФорма,
			"СведенияОЛицахСДополнительнымиГарантиями",
			ФизическоеЛицоСсылка,
			,
			ДополнительныеСвойства);
	КонецЕсли;		

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	РедактированиеПериодическихСведений.ПроверитьЗаписьВФорме(ЭтаФорма, "СведенияОбИнвалидностиФизическихЛиц", ФизическоеЛицоСсылка, Отказ);
	РедактированиеПериодическихСведений.ПроверитьЗаписьВФорме(ЭтаФорма, "СведенияОПенсионерах", ФизическоеЛицоСсылка, Отказ);
	РедактированиеПериодическихСведений.ПроверитьЗаписьВФорме(ЭтаФорма, "СведенияОЛицахСДополнительнымиГарантиями", ФизическоеЛицоСсылка, Отказ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

//////////////////////////////////////////////////////////////////////////////////
// Редактирование сведений об инвалидности

&НаКлиенте
Процедура СведенияОбИнвалидностиФизическихЛицДатаВыдачиПриИзменении(Элемент)
	
	ОбновитьПолеСведенияОбИнвалидностиПериод(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОбИнвалидностиФизическихЛицСрокДействияСправкиПриИзменении(Элемент)
	
	ОбновитьПолеСведенияОбИнвалидностиПериод(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОбИнвалидностиФизическихЛицИнвалидностьПриИзменении(Элемент)
	
	ОбновитьПолеСведенияОбИнвалидностиПериод(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Перечитать(Команда)
	
	ПрочитатьДанные();
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОбИнвалидностиФизическихЛицИстория(Команда)
	
	СотрудникиКлиент.ОткрытьФормуРедактированияИстории("СведенияОбИнвалидностиФизическихЛиц", ФизическоеЛицоСсылка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОПенсионерахИстория(Команда)
	
	СотрудникиКлиент.ОткрытьФормуРедактированияИстории("СведенияОПенсионерах", ФизическоеЛицоСсылка, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СведенияОЛицахСДополнительнымиГарантиямиИстория(Команда)
	
	СотрудникиКлиент.ОткрытьФормуРедактированияИстории("СведенияОЛицахСДополнительнымиГарантиями", ФизическоеЛицоСсылка, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура Ок(Команда)
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПрочитатьДанные()
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФормеНаТекущуюДату(ЭтаФорма, "СведенияОбИнвалидностиФизическихЛиц", ФизическоеЛицоСсылка);
	ОбновитьПолеСведенияОбИнвалидностиПериод(ЭтаФорма);
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФормеНаТекущуюДату(ЭтаФорма, "СведенияОПенсионерах", ФизическоеЛицоСсылка);
	ОбновитьПолеСведенияОПенсионерах(ЭтаФорма);
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФормеНаТекущуюДату(ЭтаФорма, "СведенияОЛицахСДополнительнымиГарантиями", ФизическоеЛицоСсылка);
	ОбновитьПолеСведенияОЛицахСДополнительнымиГарантиями(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Отказ, ОповещениеЗавершения = Неопределено) Экспорт
	
	ЗапроситьРежимИзмененияИнвалидности(СведенияОбИнвалидностиФизическихЛиц.Период, Отказ, ОповещениеЗавершения);
	
КонецПроцедуры


&НаКлиенте
Процедура СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения)
	
	Если Не Отказ Тогда
		
		Если ПроверитьЗаполнение() Тогда
			
			Возвращаемыйпараметр = Новый Структура;
			Возвращаемыйпараметр.Вставить("ИмяФормы", ИмяФормы);
			Возвращаемыйпараметр.Вставить("АдресВХранилище", АдресДанныхДополнительнойФормыНаСервере(СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы)));
			
			Оповестить(
			"ИзмененыДанныеДополнительнойФормы",
			Возвращаемыйпараметр,
			ВладелецФормы);
			
		Иначе
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли; 
	
	Если ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте(ЗакрытьФорму = Истина) Экспорт 

	Если НЕ ТолькоПросмотр Тогда
		ТекущийЭлемент = Элементы.ФормаОк;
	КонецЕсли; 
	
	ДополнительныеПараметры = Новый Структура("ЗакрытьФорму", ЗакрытьФорму);
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрытьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьДанные(Ложь, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры) Экспорт 

	Если Не Отказ И Открыта() Тогда
		
		Модифицированность = Ложь;
		Если ДополнительныеПараметры.ЗакрытьФорму Тогда
			Закрыть();
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПолеСведенияОбИнвалидностиПериод(Форма) Экспорт
	
	// не обязательно заполнение поля Период если данные по умолчанию и при этом 
	// записи о сведениях об инвалидности еще нет
	Если ЗарплатаКадрыКлиентСервер.СведенияОбИнвалидностиПоУмолчанию(Форма.СведенияОбИнвалидностиФизическихЛиц) И 
		НЕ ЗначениеЗаполнено(Форма.СведенияОбИнвалидностиФизическихЛицПрежняя.Период) Тогда
		Если ЗначениеЗаполнено(Форма.СведенияОбИнвалидностиФизическихЛиц.Период) Тогда
			Форма.СведенияОбИнвалидностиФизическихЛиц.Период = '00010101';
		КонецЕсли; 
	Иначе
		Если НЕ ЗначениеЗаполнено(Форма.СведенияОбИнвалидностиФизическихЛиц.Период) Тогда
			Если ЗначениеЗаполнено(Форма.СведенияОбИнвалидностиФизическихЛиц.ДатаВыдачи) Тогда
				Форма.СведенияОбИнвалидностиФизическихЛиц.Период = Форма.СведенияОбИнвалидностиФизическихЛиц.ДатаВыдачи;
			Иначе
				Форма.СведенияОбИнвалидностиФизическихЛиц.Период = ЗарплатаКадрыКлиентСервер.ДатаСеанса();
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(Форма, "СведенияОбИнвалидностиФизическихЛиц", Форма.ФизическоеЛицоСсылка);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПолеСведенияОПенсионерах(Форма) Экспорт
	
	// не обязательно заполнение поля Период если данные по умолчанию и при этом 
	// записи о сведениях о статусе пенсионера еще нет
	Если ЗарплатаКадрыКлиентСервер.СведенияОПенсионерахПоУмолчанию(Форма.СведенияОПенсионерах) И 
		НЕ ЗначениеЗаполнено(Форма.СведенияОПенсионерахПрежняя.Период) Тогда
		Если ЗначениеЗаполнено(Форма.СведенияОПенсионерах.Период) Тогда
			Форма.СведенияОПенсионерах.Период = '00010101';
		КонецЕсли; 
	Иначе
		Если НЕ ЗначениеЗаполнено(Форма.СведенияОПенсионерах.Период) Тогда
			Если ЗначениеЗаполнено(Форма.СведенияОПенсионерах.ДатаВыдачи) Тогда
				Форма.СведенияОПенсионерах.Период = НачалоМесяца(Форма.СведенияОПенсионерах.ДатаВыдачи);
			Иначе
				Форма.СведенияОПенсионерах.Период = НачалоМесяца(ЗарплатаКадрыКлиентСервер.ДатаСеанса());
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(Форма, "СведенияОПенсионерах", Форма.ФизическоеЛицоСсылка);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПолеСведенияОЛицахСДополнительнымиГарантиями(Форма) Экспорт
	
	// не обязательно заполнение поля Период если данные по умолчанию и при этом 
	// записи о сведениях о статусе пенсионера еще нет
	Если ЗарплатаКадрыКлиентСервер.СведенияОЛицахСДополнительнымиГарантиямиПоУмолчанию(Форма.СведенияОЛицахСДополнительнымиГарантиями) И 
		НЕ ЗначениеЗаполнено(Форма.СведенияОЛицахСДополнительнымиГарантиями.Период) Тогда
		Форма.СведенияОЛицахСДополнительнымиГарантиями.Период = '00010101';
	Иначе
		Если ЗначениеЗаполнено(Форма.СведенияОЛицахСДополнительнымиГарантиями.Период) Тогда
			Форма.СведенияОЛицахСДополнительнымиГарантиями.Период = Форма.СведенияОЛицахСДополнительнымиГарантиями.Период;
		Иначе
			Форма.СведенияОЛицахСДополнительнымиГарантиями.Период = ЗарплатаКадрыКлиентСервер.ДатаСеанса();
		КонецЕсли;
	КонецЕсли; 
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(Форма, "СведенияОЛицахСДополнительнымиГарантиями", Форма.ФизическоеЛицоСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияИнвалидности(ДатаИзменения, Отказ, ОповещениеЗавершения = Неопределено)
	
	ДополнительныеПараметры = Новый Структура("ДатаИзменения, ОповещениеЗавершения", ДатаИзменения, ОповещениеЗавершения);
	Оповещение = Новый ОписаниеОповещения("ЗапроситьРежимИзмененияИнвалидностиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ТекстКнопкиДа = НСтр("ru='Изменилась инвалидность';uk='Змінилася інвалідність'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='При редактировании изменены сведения об инвалидности.
|Если исправлена прежняя запись об инвалидности (она была ошибочной), нажмите ""Исправлена ошибка"".
|Если у сотрудника изменилась инвалидность с %1, нажмите';uk='При редагуванні змінені відомості про інвалідність.
|Якщо виправлений колишній запис про інвалідність (він був помилковим), натисніть ""Виправлена помилка"".
|Якщо у працівника змінилася інвалідність з %1, натисніть'") + " ""%2""",
			Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"),
			ТекстКнопкиДа);
	
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "СведенияОбИнвалидностиФизическихЛиц", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияИнвалидностиЗавершение(Отказ, ДополнительныеПараметры) Экспорт 
	
	ДатаИзменения = ДополнительныеПараметры.ДатаИзменения;
	ОповещениеЗавершения = ДополнительныеПараметры.ОповещениеЗавершения;
	
	Если Отказ Тогда 
		СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения);
	Иначе 
		ЗапроситьРежимИзмененияСтатусаПенсионера(ДатаИзменения, Отказ, ОповещениеЗавершения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияСтатусаПенсионера(ДатаИзменения, Отказ, ОповещениеЗавершения = Неопределено)
	
	ДополнительныеПараметры = Новый Структура("ДатаИзменения, ОповещениеЗавершения", ДатаИзменения, ОповещениеЗавершения);
	Оповещение = Новый ОписаниеОповещения("ЗапроситьРежимИзмененияСтатусаПенсионераЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ТекстКнопкиДа = НСтр("ru='Изменился статус пенсионера';uk='Змінився статус пенсіонера'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='При редактировании изменены сведения о пенсионере.
|Если исправлена прежняя запись о пенсионере (она была ошибочной), нажмите ""Исправлена ошибка"".
|Если у сотрудника изменился статус пенсионера с %1, нажмите';uk='При редагуванні змінені відомості про пенсіонера.
|Якщо виправлений колишній запис про пенсіонера (він був помилковим), натисніть ""Виправлена помилка"".
|Якщо у співробітника змінився статус пенсіонера з %1, натисніть'") + " ""%2""",
			Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"),
			ТекстКнопкиДа);
	
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "СведенияОПенсионерах", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияСтатусаПенсионераЗавершение(Отказ, ДополнительныеПараметры) Экспорт 
	
	ДатаИзменения = ДополнительныеПараметры.ДатаИзменения;
	ОповещениеЗавершения = ДополнительныеПараметры.ОповещениеЗавершения;
	
	Если Отказ Тогда 
		СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения);
	Иначе 
		ЗапроситьРежимИзмененияНаличияГарантии(ДатаИзменения, Отказ, ОповещениеЗавершения);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗапроситьРежимИзмененияНаличияГарантии(ДатаИзменения, Отказ, ОповещениеЗавершения = Неопределено)
	
	ДополнительныеПараметры = Новый Структура("ДатаИзменения, ОповещениеЗавершения", ДатаИзменения, ОповещениеЗавершения);
	Оповещение = Новый ОписаниеОповещения("ЗапроситьРежимИзмененияНаличияГарантииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ТекстКнопкиДа = НСтр("ru='Изменилось наличие гарантий';uk='Змінилася наявність гарантій'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='При редактировании изменены сведения о наличии дополнительных гарантий.
|Если исправлена прежняя запись о наличии гарантий (она была ошибочной), нажмите ""Исправлена ошибка"".
|Если у сотрудника изменился статус наличия гарантий с %1, нажмите';uk='При редагуванні змінені відомості про наявність додаткових гарантій.
|Якщо виправлений колишній запис про наявність гарантій (він був помилковим), натисніть ""Виправлена помилка"".
|Якщо у співробітника змінився статус наявності гарантій з %1, натисніть'") + " ""%2""",
			Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"),
			ТекстКнопкиДа);
	
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "СведенияОЛицахСДополнительнымиГарантиями", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияНаличияГарантииЗавершение(Отказ, ДополнительныеПараметры) Экспорт 
	ОповещениеЗавершения = ДополнительныеПараметры.ОповещениеЗавершения;
	СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения);
КонецПроцедуры


&НаКлиенте
Функция ПериодыВведеныВерно(НачалоПериода, ОкончаниеПериода)
	
	Если ЗначениеЗаполнено(ОкончаниеПериода) И ОкончаниеПериода < НачалоПериода Тогда
		ТекстПредупреждения = НСтр("ru='Окончание периода должно быть позднее начала';uk='Закінчення періоду має бути пізніше початку'");
		ПоказатьПредупреждение(,ТекстПредупреждения, , НСтр("ru='Ошибка';uk='Помилка'"));
		Возврат Ложь;
	КонецЕсли; 
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция АдресДанныхДополнительнойФормыНаСервере(ОписаниеДополнительнойФормы)
	
	Возврат СотрудникиФормы.АдресДанныхДополнительнойФормы(ОписаниеДополнительнойФормы, ЭтаФорма);
	
КонецФункции





