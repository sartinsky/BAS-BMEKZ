////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидКода = ХранилищеОбщихНастроек.Загрузить("КлассификаторКодовНН_ВидКодаУКТВЭДПоУмолчанию");
	Если НЕ ЗначениеЗаполнено(ВидКода) Тогда
		ВидКода = Перечисления.ВидыКодовДляНалоговойНакладной.КодТовара;
	КонецЕсли;
	
	Макет = НСИССервер.ПолучитьМакет("КлассификаторУКТВЭД", Справочники.КлассификаторУКТВЭД.ПолучитьМакет("КлассификаторУКТВЭД"));
	КлассификаторXML = Макет.ПолучитьТекст();


	КлассификаторТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	Дерево = РеквизитФормыВЗначение("ДеревоКлассификатора");
	Для Каждого КлассификаторЗапись Из КлассификаторТаблица Цикл
		
		Если КлассификаторЗапись.Level = "1" Тогда
			СтрокаУровень1 = Дерево.Строки.Добавить();
			НоваяСтрока = СтрокаУровень1;
		Иначе
			НоваяСтрока = СтрокаУровень1.Строки.Добавить();		
		КонецЕсли;
		
		НоваяСтрока.Уровень      = КлассификаторЗапись.Level; // Для оформления формы
		НоваяСтрока.Код          = КлассификаторЗапись.Code;
		НоваяСтрока.Наименование = КлассификаторЗапись.Name;
		НоваяСтрока.ВыводитьПриПечатиЧека = КлассификаторЗапись.Print = "1";

	КонецЦикла;
	
	Соответствие = Новый Соответствие;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КлассификаторУКТВЭД.Код КАК Код
	|ИЗ
	|	Справочник.КлассификаторУКТВЭД КАК КлассификаторУКТВЭД";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Соответствие.Вставить(СокрЛП(Выборка.Код), СокрЛП(Выборка.Код));
	КонецЦикла;
	
	Для каждого СтрокаУровень1 Из Дерево.Строки Цикл
		Для каждого СтрокаУровень2 Из СтрокаУровень1.Строки Цикл
			Если Соответствие.Получить(СтрокаУровень2.Код) <> Неопределено Тогда
				СтрокаУровень2.Существует = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоКлассификатора");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ДЕРЕВО КЛАССИФИКАТОРА

&НаКлиенте
Процедура ОбходДереваВверх(ТекущиеДанные)

	Родитель = ТекущиеДанные.ПолучитьРодителя();
	Если Родитель <> Неопределено Тогда // Верхний уровень
		
		ДочерниеСтроки = Родитель.ПолучитьЭлементы();
		КоличествоВыбранных = 0;
		ОбщееКоличество = 0;
		Для каждого Элемент Из ДочерниеСтроки Цикл
			Если Элемент.Выбран = 2 Тогда
				КоличествоВыбранных = КоличествоВыбранных + 0.5;
			ИначеЕсли Элемент.Выбран = 1 Тогда
				КоличествоВыбранных = КоличествоВыбранных + 1;
			КонецЕсли;
			ОбщееКоличество = ОбщееКоличество + 1;
		КонецЦикла;
		
		Если ОбщееКоличество = КоличествоВыбранных Тогда
			Родитель.Выбран = 1;
		ИначеЕсли КоличествоВыбранных = 0 Тогда
			Родитель.Выбран = 0;
		Иначе
			Родитель.Выбран = 2;
		КонецЕсли;
		
		ОбходДереваВверх(Родитель);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбходДереваВниз(ТекущиеДанные)
	
	ДочерниеСтроки = ТекущиеДанные.ПолучитьЭлементы();
	Для каждого Элемент Из ДочерниеСтроки Цикл
		Элемент.Выбран = ТекущиеДанные.Выбран;
		ОбходДереваВниз(Элемент);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранПриИзменении(ТекущиеДанные)
	
	Если ТекущиеДанные.Выбран = 2 Тогда
		ТекущиеДанные.Выбран = 0;
	КонецЕсли;
	
	ОбходДереваВверх(ТекущиеДанные);
	ОбходДереваВниз(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоКлассификатораВыбранПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоКлассификатора.ТекущиеДанные;
	ВыбранПриИзменении(ТекущиеДанные);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОК(Команда)
	
	ОбработатьРезультатыПодбораНаСервере();
	СохранитьВидКодаНаСервере();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура ОбработатьРезультатыПодбораНаСервере()
	
	МассивВыбранныхСтрок = Новый Массив;
	МассивКодов = Новый Массив;
	
	Дерево = РеквизитФормыВЗначение("ДеревоКлассификатора");
	Для каждого СтрокаУровень1 Из Дерево.Строки Цикл
		Если СтрокаУровень1.Выбран Тогда
			Для каждого СтрокаУровень2 Из СтрокаУровень1.Строки Цикл
				Если СтрокаУровень2.Выбран Тогда
					Если СтрокаУровень2.Выбран И Не ПустаяСтрока(СтрокаУровень2.Код)Тогда
					
						МассивВыбранныхСтрок.Добавить(СтрокаУровень2);
						МассивКодов.Добавить(СтрокаУровень2.Код);
						
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторУКТВЭД.Ссылка КАК Ссылка,
	|	КлассификаторУКТВЭД.Код КАК Код,
	|	КлассификаторУКТВЭД.Вид КАК Вид
	|ИЗ
	|	Справочник.КлассификаторУКТВЭД КАК КлассификаторУКТВЭД
	|ГДЕ
	|	КлассификаторУКТВЭД.Код В(&МассивКодов)";
	
	Запрос.УстановитьПараметр("МассивКодов", МассивКодов);
	
	ТаблицаКлассификатор = Запрос.Выполнить().Выгрузить();
	ТаблицаКлассификатор.Колонки.Добавить("КодСПеременнойДлинной", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(14, ДопустимаяДлина.Переменная)));
	
	Для Каждого СтрокаКлассификатор Из ТаблицаКлассификатор Цикл
		СтрокаКлассификатор.КодСПеременнойДлинной = СокрЛП(СтрокаКлассификатор.Код);
	КонецЦикла;
	
	ТаблицаКлассификатор.Колонки.Удалить("Код");
	ТаблицаКлассификатор.Колонки.КодСПеременнойДлинной.Имя = "Код";
	ТаблицаКлассификатор.Индексы.Добавить("Код");
	
	НачатьТранзакцию();
		
	Для каждого СтрокаДерева Из МассивВыбранныхСтрок Цикл
		
		МассивСтрок = ТаблицаКлассификатор.НайтиСтроки(Новый Структура("Код, Вид", СтрокаДерева.Код, ВидКода));
		Если МассивСтрок.Количество() > 0 Тогда
			СправочникОбъект = МассивСтрок[0].Ссылка.ПолучитьОбъект();
		Иначе 
			СправочникОбъект = Справочники.КлассификаторУКТВЭД.СоздатьЭлемент();
		КонецЕсли; 
		
		СправочникОбъект.НаименованиеПолное      = СобратьПолноеНаименование(Дерево, СтрокаДерева);
		СправочникОбъект.Код                     = СтрокаДерева.Код;
		СправочникОбъект.Вид                	 = ВидКода;
		СправочникОбъект.Наименование       	 = СокрЛП(СправочникОбъект.Код) + ?(СправочникОбъект.Вид = Перечисления.ВидыКодовДляНалоговойНакладной.КодТовараИмпортированного," X","") + "/"+ СтрЗаменить(СправочникОбъект.НаименованиеПолное,Символы.ПС,"");
		СправочникОбъект.ВыводитьПриПечатиЧека   = СтрокаДерева.ВыводитьПриПечатиЧека;

		СправочникОбъект.Записать();
	
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаСервере
Функция СобратьПолноеНаименование(Дерево, СтрокаДерева)

	СтруктураОписания = ЗаполнитьСтруктуруТекстУровень(СтрокаДерева.Наименование);
	
	ТекУровень = СтруктураОписания.Уровень;
	Если ТекУровень = 0 Тогда
		
		Возврат СтруктураОписания.Текст;
		
	Иначе
		
		КоллекцияСтрокРодителя = СтрокаДерева.Родитель.Строки;		
		ИндексСтроки = КоллекцияСтрокРодителя.Индекс(СтрокаДерева);
		
		Пока ИндексСтроки > 0 Цикл
			
			ИндексСтроки = ИндексСтроки - 1;
			
			ВерхнийУровень = ЗаполнитьСтруктуруТекстУровень(КоллекцияСтрокРодителя[ИндексСтроки].Наименование);
			Если ВерхнийУровень.Уровень >= текУровень Тогда
				Продолжить;
			КонецЕсли;			
			
			Если ВерхнийУровень.Уровень >= 0 Тогда
				
				ТекстВерхнегоУровня     = ВерхнийУровень.Текст + Символы.ПС;
				СтруктураОписания.Текст = ТекстВерхнегоУровня + СтруктураОписания.Текст;
				
			КонецЕсли;
			
			текУровень = ТекУровень - 1;
			
			Если ВерхнийУровень.Уровень = 0 Тогда
				Возврат СтруктураОписания.Текст;
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат СтруктураОписания.Текст;
		
	КонецЕсли;
	
КонецФункции 

&НаСервере
Функция ЗаполнитьСтруктуруТекстУровень(СтрокаНаименование)
	
	Возврат Новый Структура("Текст, Уровень", СокрЛ(СтрокаНаименование), УровеньКлассификатора(СтрокаНаименование));
	
КонецФункции

&НаСервере
Функция УровеньКлассификатора(СтрокаНаименование)
	
	Уровень = 0;
	
	ДлинаСтроки = СтрДлина(СтрокаНаименование);
	Для Сч = 1 По ДлинаСтроки Цикл
		
		ТекСимв = Сред(СтрокаНаименование, Сч, 1);
		
		Если ТекСимв = "-" Тогда
			Уровень = Уровень + 1;
		ИначеЕсли  ТекСимв  = " " Тогда
			Продолжить;	
		Иначе
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Уровень;
	
КонецФункции

&НаСервере
Процедура СохранитьВидКодаНаСервере()
	
	ХранилищеОбщихНастроек.Сохранить("КлассификаторКодовНН_ВидКодаУКТВЭДПоУмолчанию",, ВидКода);	
	
КонецПроцедуры
 
