////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура проверяет правильно ли выбан счет передачи БУ.
// В случае неправильного заполнения меняет на значение
// по умолчанию.
Процедура ПроверитьПравильностьЗаполненияСчетаПередачиБУ(ВидМалоценногоАктива, СчетПередачиБУ, Сообщать, Заголовок = "") Экспорт
	
	Если ВидМалоценногоАктива = Перечисления.ВидыМалоценныхАктивов.МалоценныйБыстроизнашивающийсяПредмет Тогда
		
		// МБП
		СчетПередачиБУ = ПланыСчетов.Хозрасчетный.Вспомогательный;
		Возврат;	
		
	КонецЕсли;
	
	// Определение счетов для проверки
	СчетМалоценныхНА            = ПланыСчетов.Хозрасчетный.МалоценныеНеоборотныеМатериальныеАктивы;
	СчетМалоценныхНАПоУмолчанию = ПланыСчетов.Хозрасчетный.МалоценныеНеоборотныеМатериальныеАктивыКоличественно;
	
	СчетБиблиотечныхФондов            = ПланыСчетов.Хозрасчетный.БиблиотечныеФонды;
	СчетБиблиотечныхФондовПоУмолчанию = ПланыСчетов.Хозрасчетный.БиблиотечныеФондыКоличественно;
	
	Если Сообщать Тогда
		
		ЗаготовкаСообщения1 = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='	Исходя из вида малоценного актива: ""%1""
|	""Счет передачи"" должен быть субсчетом счета ""';uk='	Виходячи з виду малоцінного активу: ""%1""
|	""Рахунок передачі"" повинен бути субрахунком рахунку ""'"), ВидМалоценногоАктива);
		ЗаготовкаСообщения2 = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='
|	Счет был изменен с ""%1"" на ""';uk='
|	Рахунок був змінений з ""%1"" на ""'"), СчетПередачиБУ);
		
	КонецЕсли;
	
	БылаЗамена = Ложь;
	
	Если ВидМалоценногоАктива = Перечисления.ВидыМалоценныхАктивов.МалоценныйНеоборотныйАктив Тогда
		// Малоценные необоротные активы
		
		Если НЕ ЗначениеЗаполнено(СчетПередачиБУ) ИЛИ (НЕ СчетПередачиБУ.ПринадлежитЭлементу(СчетМалоценныхНА)) Тогда
			
			Если Сообщать Тогда
				
				Сообщение = ЗаготовкаСообщения1 + СчетМалоценныхНА + """."
				            + ЗаготовкаСообщения2 + СчетМалоценныхНАПоУмолчанию + """.";
								 
			КонецЕсли;
			
			СчетПередачиБУ = СчетМалоценныхНАПоУмолчанию;
			БылаЗамена     = Истина;
			
		КонецЕсли;
		
	ИначеЕсли ВидМалоценногоАктива = Перечисления.ВидыМалоценныхАктивов.БиблиотечныеФонды Тогда
		// Библиотечные фонды
	   
		Если НЕ ЗначениеЗаполнено(СчетПередачиБУ) ИЛИ (НЕ СчетПередачиБУ.ПринадлежитЭлементу(СчетБиблиотечныхФондов)) Тогда
			
			Если Сообщать Тогда
				
				Сообщение = ЗаготовкаСообщения1 + СчетБиблиотечныхФондов + """."
				            + ЗаготовкаСообщения2 + СчетБиблиотечныхФондовПоУмолчанию + """.";
								 
			КонецЕсли;
			
			СчетПередачиБУ = СчетБиблиотечныхФондовПоУмолчанию;
			БылаЗамена     = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Сообщать И БылаЗамена Тогда
	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение); 
		
	КонецЕсли; 

КонецПроцедуры // ПроверитьПравильностьЗаполненияСчетаПередачиБУ()

// Процедура проверяет правильно ли выбан счет амортизации БУ.
// В случае неправильного заполнения меняет на значение
// по умолчанию.
Процедура ПроверитьПравильностьЗаполненияСчетаАмортизацииБУ(ВидМалоценногоАктива, СчетАмортизацииБУ, Сообщать, Заголовок = "") Экспорт
	
	// Определение счетов для проверки
	СчетАмортизацииНА                      = ПланыСчетов.Хозрасчетный.ИзносДругихНеоборотныхМатериальныхАктивов;
	СчетАмортизацииМалоценныхНАПоУмолчанию = ПланыСчетов.Хозрасчетный.ИзносДругихНеоборотныхМатериальныхАктивовКоличественно;
	
	Если Сообщать Тогда
		
		ЗаготовкаСообщения1 = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='	Исходя из вида малоценного актива: ""%1""	""Счет амортизации"" должен быть субсчетом счета ""%2"".';uk='	Виходячи з виду малоцінного активу: ""%1""	""Рахунок амортизації"" повинен бути субрахунком рахунку ""%2"".'"), ВидМалоценногоАктива, СчетАмортизацииНА);
		ЗаготовкаСообщения2 = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='	Счет был изменен с ""%1"" на ""';uk='	Рахунок був змінений з ""%1"" на ""'"), СчетАмортизацииБУ);
		
	КонецЕсли;
	
	БылаЗамена = Ложь;
	
	Если ВидМалоценногоАктива = Перечисления.ВидыМалоценныхАктивов.МалоценныйБыстроизнашивающийсяПредмет Тогда
	    // МБП
		
		// Для МБП счет амортизации должен быть равным счету передачи
		СчетАмортизацииБУ = СчетПередачиБУ;
		
	Иначе
		// Малоценные необоротные активы и Библиотечные фонды
		
		Если НЕ ЗначениеЗаполнено(СчетАмортизацииБУ) ИЛИ (НЕ СчетАмортизацииБУ.ПринадлежитЭлементу(СчетАмортизацииНА)) Тогда
			
			Если Сообщать Тогда
				
				Сообщение = ЗаготовкаСообщения1 + ЗаготовкаСообщения2
				            + СчетАмортизацииМалоценныхНАПоУмолчанию + """.";
								 
			КонецЕсли;
			
			СчетАмортизацииБУ = СчетАмортизацииМалоценныхНАПоУмолчанию;
			БылаЗамена        = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Сообщать И БылаЗамена Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение); 
		
	КонецЕсли; 

КонецПроцедуры // ПроверитьПравильностьЗаполненияСчетаАмортизацииБУ()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция проверяет, существуют ли движения по НМА.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Истина - если есть движения, Ложь - если нет.
//
Функция СуществуютСсылки()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Значение", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|ГДЕ
	|	ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НазначенияИспользования)
	|	И ХозрасчетныйСубконто.Значение = &Значение"; 

	СтатусВозврата = НЕ Запрос.Выполнить().Пустой();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат СтатусВозврата;
	
КонецФункции // СуществуютСсылки()

// бухгалтерии с текущим направлением использования
// Процедура проверяет, существуют ли движения в регистрах по данному
// элементу справочника. Если существуют и изменялись определенные реквизиты,
// то запрещает запись.
Процедура ПроверитьВозможностьЗаписиЭлемента(Отказ)

	Если ЭтоНовый() Тогда
		
		// Проверять нечего
		Возврат
		
	КонецЕсли;
	
	// По умолчанию считается, что движений не было
	БылиДвиженияБух = Ложь;
	
	// Получение старых значений
	ВладелецСтарый                = Ссылка.Владелец;
	ВидМалоценногоАктиваСтарый	  = Ссылка.ВидМалоценногоАктива;
	СпособОтраженияРасходовСтарый = Ссылка.СпособОтраженияРасходов;
	СчетПередачиБУСтарый          = Ссылка.СчетПередачиБУ;
	СчетАмортизацииБУСтарый       = Ссылка.СчетАмортизацииБУ;
	
	// Проверка изменений
	ИзмененВладелец                = (Владелец <> ВладелецСтарый);
	ИзмененВидМалоценногоАктива    = (ВидМалоценногоАктива <>  ВидМалоценногоАктиваСтарый);
	ИзмененСпособОтраженияРасходов = (СпособОтраженияРасходов <> СпособОтраженияРасходовСтарый);
	ИзмененСпособОтраженияРасходов = ИзмененСпособОтраженияРасходов И ЗначениеЗаполнено(СпособОтраженияРасходовСтарый);
	ИзмененСчетПередачиБУ          = (СчетПередачиБУ <> СчетПередачиБУСтарый);
	ИзмененСчетАмортизацииБУ       = (СчетАмортизацииБУ <> СчетАмортизацииБУСтарый);
	
	Если ИзмененВладелец  
	 ИЛИ ИзмененСпособОтраженияРасходов
	 ИЛИ ИзмененВидМалоценногоАктива
	 ИЛИ ИзмененСчетПередачиБУ ИЛИ ИзмененСчетАмортизацииБУ Тогда
		// Нужно проверить движения по бухгалтерскому учету
		
		БылиДвиженияБух = СуществуютСсылки();
		
	КонецЕсли;
	
	Если ИзмененВладелец 
	   И БылиДвиженияБух Тогда
	   
		ТекстСообщения = НСтр("ru='Назначение использования ""%1"" участвует в движениях документов.
|Нельзя изменять ""Номенклатуру"" ""%2""!';uk='Призначення використання ""%1"" бере участь у рухах документів.
|Не можна змінювати ""Номенклатуру"" ""%2""!'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстСообщения, СокрЛП(Наименование), ВладелецСтарый);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, "Владелец", "Объект", Отказ);
	   
		
	КонецЕсли;
	
	Если ИзмененВидМалоценногоАктива 
	   И БылиДвиженияБух Тогда
	   
		ТекстСообщения = НСтр("ru='Назначение использования ""%1"" участвует в движениях документов.
|Нельзя изменять ""Вид малоценного актива"" ""%2""!';uk='Призначення використання ""%1"" бере участь у рухах документів.
|Не можна змінювати ""Вид малоцінного активу"" ""%2""!'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстСообщения, СокрЛП(Наименование), ВидМалоценногоАктиваСтарый);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, "ВидМалоценногоАктива", "Объект", Отказ);
	   
		
	КонецЕсли;
	
	Если ИзмененСпособОтраженияРасходов 
	   И БылиДвиженияБух Тогда
	   
		ТекстСообщения = НСтр("ru='Назначение использования ""%1"" участвует в движениях документов.
|Нельзя изменять ""Способ отражения расходов"" ""%2""!';uk='Призначення використання ""%1"" бере участь у рухах документів.
|Не можна змінювати ""Спосіб відображення витрат"" ""%2""!'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстСообщения, СокрЛП(Наименование), СпособОтраженияРасходовСтарый);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, "СпособОтраженияРасходов", "Объект", Отказ);
	   
		
	КонецЕсли;
	
	Если ИзмененСчетПередачиБУ 
	   И БылиДвиженияБух Тогда
	   
		ТекстСообщения = НСтр("ru='Назначение использования ""%1"" участвует в движениях документов.
|Нельзя изменять ""Счет передачи"" ""%2""!';uk='Призначення використання ""%1"" бере участь у рухах документів.
|Не можна змінювати ""Рахунок передачі"" ""%2""!'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстСообщения, СокрЛП(Наименование), СчетПередачиБУСтарый);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, "СчетПередачиБУ", "Объект", Отказ);
	   
		
	КонецЕсли;
	
	Если ИзмененСчетАмортизацииБУ 
	   И БылиДвиженияБух Тогда
	   
	   Если ВидМалоценногоАктива <> Перечисления.ВидыМалоценныхАктивов.МалоценныйБыстроизнашивающийсяПредмет Тогда
		   // Если это МБП, то счет амортизации невидим, а значит не нужно сообщать
		   
			ТекстСообщения = НСтр("ru='Назначение использования ""%1"" участвует в движениях документов.
|Нельзя изменять ""Счет амортизации"" ""%2""!';uk='Призначення використання ""%1"" бере участь у рухах документів.
|Не можна змінювати ""Рахунок амортизації"" ""%2""!'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения, СокрЛП(Наименование), СчетАмортизацииБУСтарый);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, "СчетАмортизацииБУ", "Объект", Отказ);
		   
			
		КонецЕсли;
		СчетАмортизацииБУ = СчетАмортизацииБУСтарый;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьВозможностьЗаписиЭлемента()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		
		// Проверять нечего
		Возврат
		
	КонецЕсли;
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Запись элемента справочника ""%1"" Наим: <%2> код: <%3>, подчиненного <%4>:';uk='Запис елемента довідника ""%1"" Найм: <%2> код: <%3>, підпорядкованого <%4>:'"), Метаданные().Представление(), Наименование, Код, Владелец);
	
	ПроверитьПравильностьЗаполненияСчетаПередачиБУ(ВидМалоценногоАктива, СчетПередачиБУ, Истина, Заголовок);
    ПроверитьПравильностьЗаполненияСчетаАмортизацииБУ(ВидМалоценногоАктива, СчетАмортизацииБУ, Истина, Заголовок);
	ПроверитьВозможностьЗаписиЭлемента(Отказ);
	
	СчетБУДляПечати = "";
	
	Если ВидМалоценногоАктива = Перечисления.ВидыМалоценныхАктивов.МалоценныйБыстроизнашивающийсяПредмет Тогда
		
		МассивСчетовЗатрат = СпособОтраженияРасходов.Способы.ВыгрузитьКолонку("СчетЗатрат");
		Разделитель = "";
		
		Для каждого СчетЗатрат Из МассивСчетовЗатрат Цикл
		
			СчетБУДляПечати = СчетБУДляПечати + Разделитель + СчетЗатрат;
			Разделитель = ", ";
		
		КонецЦикла;
		
	Иначе
		
		СчетБУДляПечати = СчетПередачиБУ;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если НЕ ЭтоГруппа Тогда
		
		Количество = 1;
		ВидМалоценногоАктива = Перечисления.ВидыМалоценныхАктивов.МалоценныйНеоборотныйАктив;
		ПроверитьПравильностьЗаполненияСчетаПередачиБУ(ВидМалоценногоАктива, СчетПередачиБУ, Ложь);
		ПроверитьПравильностьЗаполненияСчетаАмортизацииБУ(ВидМалоценногоАктива, СчетАмортизацииБУ, Ложь);
		Наименование         = ДанныеЗаполнения.Владелец.Наименование;
		ЕдиницаИзмерения 	 = ДанныеЗаполнения.Владелец.БазоваяЕдиницаИзмерения;
		Коэффициент 		 = Справочники.Номенклатура.ПолучитьКоэффициентЕдиницыИзмерения(ДанныеЗаполнения.Владелец, ЕдиницаИзмерения);
		
	КонецЕсли; 
	
КонецПроцедуры