#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Для этого отчета, период только месяц
	ЭтаФорма.ВидПериода = Перечисления.ДоступныеПериодыОтчета.Месяц;
	
	Отчет.НачалоПериода = НачалоМесяца(ТекущаяДата());
	Отчет.КонецПериода = КонецМесяца(ТекущаяДата());
	
	Период = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(Отчет.НачалоПериода, Отчет.КонецПериода, Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТабСписокНачислений.Количество() = 0 Тогда
		ЗаполнитьТаблицыДаннымиПоУмолчанию();
	КонецЕсли;

	ЗаполнитьПараметрыСКДНачисленияУдержанияНаСервере();
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкаПоказатели(Команда)
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТабСписокНачислений", ТабСписокНачислений);
	ПараметрыФормы.Вставить("ТабВидыНачислений",   ТабВидыНачислений);
	
	ИмяФормыНастройкиПоказателей = СтрЗаменить(ЭтотОбъект.ИмяФормы, "ФормаОтчета", "ФормаНастройкиПоказателей");
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьПараметрыСКДДанными", ЭтаФорма);	
	ФормаНастройкиСоответствий  = ОткрытьФорму(ИмяФормыНастройкиПоказателей, ПараметрыФормы, ЭтаФорма,,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

	ФормаНастройкиСоответствий.Открыть();
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ВыборПериодаКлиент.ПериодПриИзменении(Элемент, Период, Отчет.НачалоПериода, Отчет.КонецПериода);
	
	Период = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(Отчет.НачалоПериода, Отчет.КонецПериода, Истина);
	
	ПериодПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПериодПриИзмененииНаСервере()

	Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачПериода").Значение = Отчет.НачалоПериода;
	Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачПериода").Использование = Истина;
	
	Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонПериода").Значение = КонецМесяца(Отчет.КонецПериода);
	Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонПериода").Использование = Истина;

	Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонПериодаОстатки").Значение = Новый Граница(КонецМесяца(Отчет.КонецПериода), ВидГраницы.Включая);
	Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонПериодаОстатки").Использование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода, ВидПериода", Отчет.НачалоПериода, Отчет.КонецПериода, ВидПериода);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", ПараметрыВыбора, Элементы.Период, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Отчет, РезультатВыбора, "НачалоПериода,КонецПериода");
	 
	//Если Не ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеАктуальность");
	//КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПериодОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВыборПериодаКлиент.ПериодОбработкаВыбора(
		Элемент, ВыбранноеЗначение, СтандартнаяОбработка,
		ВидПериода, Период, Отчет.НачалоПериода, Отчет.КонецПериода);
	
КонецПроцедуры   

&НаКлиенте
Процедура ПериодАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
		
	ВыборПериодаКлиент.ПериодАвтоПодбор(
		Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка,
		ВидПериода, Период, Отчет.НачалоПериода, Отчет.КонецПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
		
	ВыборПериодаКлиент.ПериодОкончаниеВводаТекста(
		Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка,
		ВидПериода, Период, Отчет.НачалоПериода, Отчет.КонецПериода);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПараметрыСКДДанными(РезультатЗакрытия, ПараметрыОповещения) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда	
		Возврат;	
	КонецЕсли;
	
	Если РезультатЗакрытия Тогда	
		ЗаполнитьПараметрыСКДНачисленияУдержанияНаСервере();	
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСКДНачисленияУдержанияНаСервере()
	
	Для каждого Стр Из ТабСписокНачислений Цикл
				
		ОтборСтрок = Новый Структура("ПоказателиНачислений", Стр.ПоказателиНачислений);
		МассивСОтбором = ТабВидыНачислений.НайтиСтроки(ОтборСтрок);
		
		МассивВидовПоказателей = Новый Массив;
		
		Для каждого Элем Из МассивСОтбором Цикл	
			Если Элем.ВидыНачислений = Неопределено Тогда
				МассивВидовПоказателей.Добавить(ПредопределенноеЗначение(Стр.ТипСтроки));
			иначе
				МассивВидовПоказателей.Добавить(Элем.ВидыНачислений);
			КонецЕсли;
		КонецЦикла;  
		
		ПараметрСКД = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(Стр.ПоказателиНачислений);		
		ПараметрСКД.Значение      = МассивВидовПоказателей;
		ПараметрСКД.Использование = Истина;
		
	КонецЦикла;
	
КонецПроцедуры 	
	
&НаКлиенте
Процедура ЗаполнитьТаблицыДаннымиПоУмолчанию()
	
	СписокПараметров = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.ДоступныеПараметры.Элементы;
	
	// Заполнение таблицы СписокНачислений		
	Для каждого ЭлПарам Из СписокПараметров Цикл
		
		Ин = СписокПараметров.Индекс(ЭлПарам); 
		
		Если Ин < 5 Тогда
			Продолжить;	
		ИначеЕсли Ин >= 5 И Ин <= 52 Тогда
			
			НоваяСтрока = ТабСписокНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = ЭлПарам.Параметр;
			НоваяСтрока.ПолеИзменено = Ложь;	
			НоваяСтрока.ТипСтроки = "ПланВидовРасчета.ИНАГРО_Начисления.ПустаяСсылка";
			НоваяСтрока.ПользИмяПоказателя = ЭлПарам.Заголовок;
			
		ИначеЕсли Ин >= 53 И Ин <= 55 Тогда
			
			НоваяСтрока = ТабСписокНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = ЭлПарам.Параметр;
			НоваяСтрока.ПолеИзменено = Ложь;	
			НоваяСтрока.ТипСтроки = "ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ПустаяСсылка";
			НоваяСтрока.ПользИмяПоказателя = ЭлПарам.Заголовок;

		ИначеЕсли Ин >= 56 И Ин <= 57 Тогда
			
			НоваяСтрока = ТабСписокНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = ЭлПарам.Параметр;
			НоваяСтрока.ПолеИзменено = Ложь;	
			НоваяСтрока.ТипСтроки = "ПланВидовРасчета.ИНАГРО_Удержания.ПустаяСсылка";
			НоваяСтрока.ПользИмяПоказателя = ЭлПарам.Заголовок;

		КонецЕсли;				
	КонецЦикла; 	

	// Заполнение таблицы ВидыНачислений			
	Для каждого Строка Из ТабСписокНачислений Цикл
		Если Строка.ПоказателиНачислений = "ТарифнаяСтавкаОклад" Тогда
			 
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ОкладПоДням");

			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ОкладПоЧасам");

			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ТарифДневной");

			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ТарифЧасовой");

			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.БригадныйНаряд");

			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.СдельныйНаряд");
			
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ПутевыеЛисты");
			
		ИначеЕсли Строка.ПоказателиНачислений = "ОплатаТрудаВКомандировке" Тогда

			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.Командировка");
			
		ИначеЕсли Строка.ПоказателиНачислений = "ПользовательскоеПоле_Премия" Тогда

			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.Месячная");
			
		ИначеЕсли Строка.ПоказателиНачислений = "ИндексацияЗарплаты" Тогда

			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ИндексацияЗарплаты");
			
		ИначеЕсли Строка.ПоказателиНачислений = "СовмещениеПрофессий" Тогда
	
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.Совмещение");
			
		ИначеЕсли Строка.ПоказателиНачислений = "ВыполнениеОбязанностейВременноОтсутствующегоРаботника" Тогда
			
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.Замещение");

		ИначеЕсли Строка.ПоказателиНачислений = "РаботаВТяжелыхВредныхУсловиях" Тогда
		
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ДоплатаЗаВредность");

		ИначеЕсли Строка.ПоказателиНачислений = "ИнтенсивностьТруда" Тогда

			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ДоплатаЗаИнтенсивность");

		ИначеЕсли Строка.ПоказателиНачислений = "РаботаВНочноеВремя" Тогда

			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ДоплатаЗаНочныеЧасы");

		ИначеЕсли Строка.ПоказателиНачислений = "КлассностьВодителямТранспортныхСредств" Тогда
	
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ДоплатаЗаКлассность");

		ИначеЕсли Строка.ПоказателиНачислений = "ПомощьИДругиеВыплатыЗаСчетФСС" Тогда
	
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ОплатаПоСреднемуБЛ");
		
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ОплатаПоСреднемуБЛТравмаНаПроизводстве");
			
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ОплатаПоСреднемуБЛПоБеременностиИРодам");

		ИначеЕсли Строка.ПоказателиНачислений = "БольничныеЗаСчетПредприятия" Тогда
	
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Начисления.ОплатаПоСреднемуБЛОрганизации");
			
		ИначеЕсли Строка.ПоказателиНачислений = "ПользовательскоеПоле_ЕСВ" Тогда
	
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ЕСВ");
			
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ЕСВБольничные");
			
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_ВзносыВФонды.ЕСВГПХ");
	
		ИначеЕсли Строка.ПоказателиНачислений = "ПрофсоюзныеВзносы" Тогда
	
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Удержания.ПрофсоюзныйВзнос");
	
		ИначеЕсли Строка.ПоказателиНачислений = "ПользовательскоеПоле_Алименты" Тогда
	
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Удержания.АлиментыПроцентом");
	
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Удержания.АлиментыПроцентомДоПредела");

			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Удержания.АлиментыФиксированнойСуммой");
			
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Удержания.АлиментыФиксированнойСуммойДоПредела");
			
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Удержания.ПочтовыйСбор");
			
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Удержания.ИЛПроцентом");
			
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Удержания.ИЛПроцентомДоПредела");
			
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Удержания.ИЛФиксированнойСуммой");
			
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			НоваяСтрока.ВидыНачислений		 = ПредопределенноеЗначение("ПланВидовРасчета.ИНАГРО_Удержания.ИЛФиксированнойСуммойДоПредела");
			
		Иначе
			
			НоваяСтрока = ТабВидыНачислений.Добавить();
			НоваяСтрока.ПоказателиНачислений = Строка.ПоказателиНачислений;
			
		КонецЕсли;		
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииПользовательскихНастроекНаСервере(Настройки)
	
	Настройки.ДополнительныеСвойства.Вставить("НачалоПериода", Отчет.НачалоПериода);
	Настройки.ДополнительныеСвойства.Вставить("КонецПериода",  Отчет.КонецПериода);
	
	Настройки.ДополнительныеСвойства.Вставить("СписокНачислений", ТабСписокНачислений);
	Настройки.ДополнительныеСвойства.Вставить("ВидыНачислений",   ТабВидыНачислений);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(Настройки)
		
	Если Настройки.ДополнительныеСвойства.Свойство("НачалоПериода") Тогда	
		Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачПериода").Значение = Настройки.ДополнительныеСвойства.НачалоПериода;
		Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачПериода").Использование = Истина;	
		
		Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонПериода").Значение = КонецМесяца(Настройки.ДополнительныеСвойства.КонецПериода);
		Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонПериода").Использование = Истина;	
		
		Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонПериодаОстатки").Значение = Новый Граница(КонецМесяца(Настройки.ДополнительныеСвойства.КонецПериода), ВидГраницы.Включая);
		Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонПериодаОстатки").Использование = Истина;
		
		Отчет.НачалоПериода = Настройки.ДополнительныеСвойства.НачалоПериода;
		Отчет.КонецПериода = КонецМесяца(Отчет.НачалоПериода);

		Период = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(Отчет.НачалоПериода, Отчет.КонецПериода, Истина);	
	КонецЕсли;  
	
	Если Настройки.ДополнительныеСвойства.Свойство("СписокНачислений") Тогда		
		
		ТабСписокНачислений.Очистить();	
		ТаблицаСписка = Настройки.ДополнительныеСвойства.СписокНачислений.Выгрузить();
		ТабСписокНачислений.Загрузить(ТаблицаСписка);
		
		ТабВидыНачислений.Очистить();
		ТаблицаВидов = Настройки.ДополнительныеСвойства.ВидыНачислений.Выгрузить();
		ТабВидыНачислений.Загрузить(ТаблицаВидов);

	КонецЕсли;	
	
	Если ТабСписокНачислений.Количество() <> 0 Тогда
		ЗаполнитьПараметрыСКДНачисленияУдержанияНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("КлючВарианта", ЭтаФорма.КлючТекущегоВарианта);
	
КонецПроцедуры

#КонецОбласти

