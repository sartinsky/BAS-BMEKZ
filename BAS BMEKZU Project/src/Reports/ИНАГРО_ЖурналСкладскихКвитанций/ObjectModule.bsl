
#Область СлужебныеПроцедурыИФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ТекущаяСКД = Неопределено;
	Если ЭтотОбъект.ТипФормы = "ВсеСкладскиеКвитанции" Тогда
		ТекущаяСКД = ЭтотОбъект.ПолучитьМакет("ВсеСкладскиеКвитанции");
	ИначеЕсли ЭтотОбъект.ТипФормы= "СкладскаяКвитанция" Тогда
		ТекущаяСКД = ЭтотОбъект.ПолучитьМакет("СкладскаяКвитанция");
	ИначеЕсли ЭтотОбъект.ТипФормы = "СкладскаяКвитанцияДвойная" Тогда
		ТекущаяСКД = ЭтотОбъект.ПолучитьМакет("СкладскаяКвитанцияДвойная");
	ИначеЕсли ЭтотОбъект.ТипФормы = "СкладскаяКвитанцияПростая" Тогда
		ТекущаяСКД = ЭтотОбъект.ПолучитьМакет("СкладскаяКвитанцияПростая");  
	КонецЕсли;
	
	// Устанавливаем выбранную СКД как основную.
	ЭтотОбъект.СхемаКомпоновкиДанных = ТекущаяСКД;
	
	// Загружаем настройки выбранной СКД в компоновщик настроек.
	ЭтотОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(ТекущаяСКД.НастройкиПоУмолчанию);
	
	// Устанавливаем параметры.
	
	ПараметрыДанных = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных;
	ПараметрПериодОтчета = Новый ПараметрКомпоновкиДанных("ПериодОтчета");
	ЗначениеПериодОтчета = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрПериодОтчета);
	Если ЗначениеПериодОтчета <> Неопределено Тогда
		ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрПериодОтчета, ЭтотОбъект.Период);
	КонецЕсли;
	
	Если ЭтотОбъект.ТипФормы= "СкладскаяКвитанция" Тогда
		ПараметрыДанных = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных;
		ПараметрТипДок1 = Новый ПараметрКомпоновкиДанных("ТипДок1");
		ЗначениеТипДок1 = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрТипДок1);
		Если ЗначениеПериодОтчета <> Неопределено Тогда
			ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрТипДок1, Нстр("ru='Складская квитанция'; uk='Складська квитанція'"));
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтотОбъект.ТипФормы= "СкладскаяКвитанцияДвойная" Тогда
		ПараметрыДанных = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных;
		ПараметрТипДок2 = Новый ПараметрКомпоновкиДанных("ТипДок2");
		ЗначениеТипДок2 = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрТипДок2);
		Если ЗначениеПериодОтчета <> Неопределено Тогда
			ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрТипДок2, Нстр("ru='Складская квитанция двойная'; uk='Складська квитанція подвійна'"));
		КонецЕсли;
	КонецЕсли; 
	
	Если ЭтотОбъект.ТипФормы = "СкладскаяКвитанцияПростая" Тогда
		ПараметрыДанных = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных;
		ПараметрТипДок3 = Новый ПараметрКомпоновкиДанных("ТипДок3");
		ЗначениеТипДок3 = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрТипДок3);
		Если ЗначениеПериодОтчета <> Неопределено Тогда
			ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрТипДок3, Нстр("ru='Складская квитанция простая'; uk='Складська квитанція проста'"));
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыДанных = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных;
	ПараметрОрганизация = Новый ПараметрКомпоновкиДанных("Организация");
	ЗначениеОрганизация = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрОрганизация);
	Если ЗначениеОрганизация <> Неопределено Тогда
		ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрОрганизация, ЭтотОбъект.Организация);
	КонецЕсли;
	
	Если ЭтотОбъект.ТипФормы = "ВсеСкладскиеКвитанции" Тогда
		ПараметрыДанных = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных;
		ПараметрТипДок3 = Новый ПараметрКомпоновкиДанных("ТипДок3");
		ЗначениеТипДок3 = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрТипДок3);
		Если ЗначениеПериодОтчета <> Неопределено Тогда
			ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрТипДок3, Нстр("ru='Складская квитанция простая'; uk='Складська квитанція проста'"));
		КонецЕсли;
		ПараметрыДанных = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных;
		ПараметрТипДок2 = Новый ПараметрКомпоновкиДанных("ТипДок2");
		ЗначениеТипДок2 = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрТипДок2);
		Если ЗначениеПериодОтчета <> Неопределено Тогда
			ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрТипДок2, Нстр("ru='Складская квитанция двойная'; uk='Складська квитанція подвійна'"));
		КонецЕсли;ПараметрыДанных = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных;
		ПараметрТипДок1 = Новый ПараметрКомпоновкиДанных("ТипДок1");
		ЗначениеТипДок1 = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрТипДок1);
		Если ЗначениеПериодОтчета <> Неопределено Тогда
			ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрТипДок1, Нстр("ru='Складская квитанция'; uk='Складська квитанція'"));
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтотОбъект.ТипФормы = "ВсеСкладскиеКвитанции" Тогда
		ПараметрыДанных = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных;
		ПараметрТипФормы = Новый ПараметрКомпоновкиДанных("ТипФормы");
		ЗначениеТипФормы = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрТипФормы);
		Если ЗначениеТипФормы <> Неопределено Тогда
			ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрТипФормы, Нстр("ru='Все складские квитанции'; uk='Усі складські квитанції'"));
		КонецЕсли;
	ИначеЕсли ЭтотОбъект.ТипФормы= "СкладскаяКвитанция" Тогда 
		ПараметрыДанных = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных;
		ПараметрТипФормы = Новый ПараметрКомпоновкиДанных("ТипФормы");
		ЗначениеТипФормы = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрТипФормы);
		Если ЗначениеТипФормы <> Неопределено Тогда
			ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрТипФормы, Нстр("ru='Складская квитанция'; uk='Складська квитанція'"));
		КонецЕсли;
	ИначеЕсли ЭтотОбъект.ТипФормы= "СкладскаяКвитанцияДвойная" Тогда	
		ПараметрыДанных = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных;
		ПараметрТипФормы = Новый ПараметрКомпоновкиДанных("ТипФормы");
		ЗначениеТипФормы = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрТипФормы);
		Если ЗначениеТипФормы <> Неопределено Тогда
			ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрТипФормы, Нстр("ru='Складская квитанция двойная'; uk='Складська квитанція подвійна'"));
		КонецЕсли;
	ИначеЕсли ЭтотОбъект.ТипФормы = "СкладскаяКвитанцияПростая" Тогда
		ПараметрыДанных = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных;
		ПараметрТипФормы = Новый ПараметрКомпоновкиДанных("ТипФормы");
		ЗначениеТипФормы = ПараметрыДанных.НайтиЗначениеПараметра(ПараметрТипФормы);
		Если ЗначениеТипФормы <> Неопределено Тогда
			ПараметрыДанных.УстановитьЗначениеПараметра(ПараметрТипФормы, Нстр("ru='Складская квитанция простая'; uk='Складська квитанція проста'"));
		КонецЕсли;
	КонецЕсли;
	
	// Устанавливаем отборы.
	
	Если Организация.Пустая() Тогда
	Иначе
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("Организация")).Поле;
		НовыйЭлементОтбора.ПравоеЗначение = Организация;
	КонецЕсли;
	
	Если Владелец.Пустая() Тогда
	Иначе
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("Владелец")).Поле;
		НовыйЭлементОтбора.ПравоеЗначение = Владелец;
	КонецЕсли;
	
	Если Культура.Пустая() Тогда
	Иначе
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("Номенклатура")).Поле;
		НовыйЭлементОтбора.ПравоеЗначение = Культура;
	КонецЕсли;
	
	Если Склад.Пустая() Тогда
	Иначе
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("Склад")).Поле;
		НовыйЭлементОтбора.ПравоеЗначение = Склад;
	КонецЕсли;
	
	Если Урожай.Пустая() Тогда
	Иначе
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("Урожай")).Поле;
		НовыйЭлементОтбора.ПравоеЗначение = Урожай;
	КонецЕсли;
	
	Если ВидКультуры.Пустая() Тогда
	Иначе
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("ВидКультуры")).Поле;
		НовыйЭлементОтбора.ПравоеЗначение = ВидКультуры;
	КонецЕсли;
	
	Если ВидХранения.Пустая() Тогда
	Иначе
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("ВидХранения")).Поле;
		НовыйЭлементОтбора.ПравоеЗначение = ВидХранения;
	КонецЕсли;
	
	Если ТипХранения.Пустая() Тогда
	Иначе
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("ТипХранения")).Поле;
		НовыйЭлементОтбора.ПравоеЗначение = ТипХранения;
	КонецЕсли;
	
	Если НЕ ВлажностьОт = 0 Тогда
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("Влажность")).Поле;
		НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		НовыйЭлементОтбора.ПравоеЗначение = ВлажностьОт;
	КонецЕсли;
	
	Если НЕ ВлажностьДо = 0 Тогда
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("Влажность")).Поле;
		НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		НовыйЭлементОтбора.ПравоеЗначение= ВлажностьДо;	
	КонецЕсли;
	
	Если Состояние.Пустая() Тогда
	Иначе
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлементОтбора.ЛевоеЗначение = КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(Новый ПолеКомпоновкиДанных("Состояние")).Поле;
		НовыйЭлементОтбора.ПравоеЗначение = Состояние;
	КонецЕсли;
	
	СтандартнаяОбработка=ЛОжь;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки,ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,,ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.НачатьВывод();
	
	ЭлементРезультата = ПроцессорКомпоновки.Следующий();
	Пока ЭлементРезультата <> Неопределено Цикл
		Если ЭлементРезультата.ЗначенияПараметров.Количество()=1 Тогда
			Если ЭлементРезультата.ЗначенияПараметров[0].Значение = "Разорвать" Тогда
				ЭлементРезультата.ЗначенияПараметров[0].Значение = "";
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЕсли;
		ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
		ЭлементРезультата = ПроцессорКомпоновки.Следующий();
	КонецЦикла;
	ПроцессорВывода.ЗакончитьВывод();

	
		
	
КонецПроцедуры

#КонецОбласти