#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ПараметрыДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных;
	
	НачатьТранзакцию();
	ДокументОбъект = Документы.ИНАГРО_НачислениеЗарплатыРаботникамОрганизаций.СоздатьДокумент(); 
	Для каждого ЭлементОтбора Из Настройки.Отбор.Элементы  Цикл
		Если ЭлементОтбора.ЛевоеЗначение <> Неопределено И ТипЗнч(ЭлементОтбора.ПравоеЗначение) = Тип("СправочникСсылка.Организации") Тогда
			Если ЭлементОтбора.ПравоеЗначение = Справочники.Организации.ПустаяСсылка() Тогда
				ЭлементОтбора.ПравоеЗначение = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация")
			КонецЕсли;	
			Если ЭлементОтбора.ПравоеЗначение = Справочники.Организации.ПустаяСсылка() Тогда
				ВызватьИсключение Нстр("ru='Не указана организация!';uk='Необхідно вказати організацію!'",Локализация.КодЯзыкаИнтерфейса());
			КонецЕсли;	
			Организация = ЭлементОтбора.ПравоеЗначение;
		КонецЕсли;
	КонецЦикла; 
		
	НачалоПериода = Настройки.ПараметрыДанных.Элементы.Найти("ПериодОтчета").Значение.ДатаНачала;
	КонецПериода = Настройки.ПараметрыДанных.Элементы.Найти("ПериодОтчета").Значение.ДатаОкончания;
	
	
	ДокументОбъект.ПериодРегистрации = НачалоПериода;
	ДокументОбъект.Организация = Организация;
	ДокументОбъект.Дата = ДокументОбъект.ПериодРегистрации;
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА РаботникиОрганизаций.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|			ТОГДА РаботникиОрганизаций.Сотрудник.Ссылка
		|		ИНАЧЕ РаботникиОрганизаций.Сотрудник.ОсновноеНазначение
		|	КОНЕЦ КАК Сотрудник,
		|	РаботникиОрганизаций.Сотрудник КАК Назначение
		|ИЗ
		|	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&НачалоМесяца, Организация = &Организация) КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА РаботникиОрганизаций.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|			ТОГДА РаботникиОрганизаций.Сотрудник.Ссылка
		|		ИНАЧЕ РаботникиОрганизаций.Сотрудник.ОсновноеНазначение
		|	КОНЕЦ,
		|	РаботникиОрганизаций.Сотрудник
		|ИЗ
		|	РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.Организация = &Организация
		|	И РаботникиОрганизаций.Период > &НачалоМесяца
		|	И РаботникиОрганизаций.Период <= &КонецМесяца
		|	И РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)"; 	

	
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоПериода);
	Запрос.УстановитьПараметр("КонецМесяца", КонецПериода);
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();

	ВидРасчета = ПланыВидовРасчета.ИНАГРО_Начисления.ДоплатаДоМЗП;
	СотрудникиИНазначения = Новый ТаблицаЗначений;
	СотрудникиИНазначения = ТаблицаРезультат.Скопировать(,"Сотрудник,Назначение");
	Сотрудники = ТаблицаРезультат.ВыгрузитьКолонку("Сотрудник");
	
	ТаблицаНачислений = ИНАГРО_ПроведениеРасчетов.ГрафикиИНормыПоСотрудникам(Организация,СотрудникиИНазначения,ДокументОбъект.ПериодРегистрации); 
	ТаблицаНачислений.Колонки.Добавить("Авторасчет");
	ТаблицаНачислений.ЗаполнитьЗначения(Истина,"Авторасчет");
	ТаблицаНачислений.Колонки.Добавить("ВидРасчета");
	ТаблицаНачислений.ЗаполнитьЗначения(ВидРасчета,"ВидРасчета");
	ТаблицаНачислений.Колонки.Добавить("БазовыйПериодНачало");
	ТаблицаНачислений.ЗаполнитьЗначения(ДокументОбъект.ПериодРегистрации,"БазовыйпериодНачало");
	ТаблицаНачислений.Колонки.Добавить("БазовыйПериодКонец");
	ТаблицаНачислений.ЗаполнитьЗначения(КонецМесяца(ДокументОбъект.ПериодРегистрации),"БазовыйпериодКонец");
	ТаблицаНачислений.Колонки.Добавить("ДатаНачала");
	ТаблицаНачислений.ЗаполнитьЗначения(ДокументОбъект.ПериодРегистрации,"ДатаНачала");
	ТаблицаНачислений.Колонки.Добавить("ДатаОкончания");
	ТаблицаНачислений.ЗаполнитьЗначения(КонецМесяца(ДокументОбъект.ПериодРегистрации),"ДатаОкончания");
	ДокументОбъект.Начисления.Загрузить(ТаблицаНачислений);
	ТаблицаРаботников = ТаблицаНачислений.Скопировать();
	ТаблицаРаботников.Свернуть("Сотрудник");
	ДокументОбъект.РаботникиОрганизации.Загрузить(ТаблицаРаботников);
	ДокументОбъект.Записать();

	ДокументОбъект.РассчитатьНачисления(ТаблицаНачислений.ВыгрузитьКолонку("Сотрудник"),Ложь);
	ТаблицаРассчитанныхНачислений = ДокументОбъект.Начисления.Выгрузить();
	
	МассивТипов=Новый Массив();
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
 	ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
	
	ТаблицаРассчитанныхНачислений.Колонки.Добавить("Организация",ОписаниеТипов);
	ТаблицаРассчитанныхНачислений.ЗаполнитьЗначения(Организация,"Организация");
	ОтменитьТранзакцию();
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	КомпоновщикМакета  = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Начисления.Организация,
		|	Начисления.Назначение,
		|	Начисления.Результат КАК НачисленоПланово
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ
		|	&ТаблицаРассчитанныхНачислений КАК Начисления
		|;
		|ВЫБРАТЬ
		|	ВТНачисления.Организация,
		|	ВТНачисления.Назначение,
		|	ВТНачисления.НачисленоПланово КАК НачисленоПланово
		|ИЗ
		|	ВТНачисления КАК ВТНачисления";
	
	Запрос.УстановитьПараметр("ТаблицаРассчитанныхНачислений", ТаблицаРассчитанныхНачислений);
	
	ТаблицаПлановыхНачислений = Запрос.Выполнить().Выгрузить();
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ПлановыеНачисления", ТаблицаПлановыхНачислений);
	
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки,ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,ВнешниеНаборыДанных,ДанныеРасшифровки,Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных,Истина); 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли