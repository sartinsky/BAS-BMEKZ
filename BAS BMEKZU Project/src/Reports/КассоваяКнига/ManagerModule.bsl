#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ДобавитьОбороты(РабочаяТаблица, Валюта, ВалПриход, Приход, ВалРасход, Расход)
	
	СтрокаТаблицы = РабочаяТаблица.Найти(Валюта, "Валюта");
	Если СтрокаТаблицы = Неопределено Тогда
		НоваяСтрока = РабочаяТаблица.Добавить();
		НоваяСтрока.Валюта     = Валюта;
		НоваяСтрока.ВалютаПредставление = Строка(Валюта);
		НоваяСтрока.ВалОстаток = 0;
		НоваяСтрока.Остаток    = 0;
		НоваяСтрока.ВалПриход  = ВалПриход;
		НоваяСтрока.Приход     = Приход;
		НоваяСтрока.ВалРасход  = ВалРасход;
		НоваяСтрока.Расход     = Расход;
	Иначе
		СтрокаТаблицы.ВалПриход = СтрокаТаблицы.ВалПриход + ВалПриход;
		СтрокаТаблицы.Приход    = СтрокаТаблицы.Приход    + Приход;
		СтрокаТаблицы.ВалРасход = СтрокаТаблицы.ВалРасход + ВалРасход;
		СтрокаТаблицы.Расход    = СтрокаТаблицы.Расход    + Расход;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьОтчет(Знач ПараметрыОтчета, АдресХранилища) Экспорт
	
	ПараметрыОтчета.СписокСформированныхЛистов.Очистить();
	
	Если ПараметрыОтчета.ВидОтчета = "Журнал регистрации приходных ордеров" Тогда
		СформироватьЖурналРегистрацииПриходных(ПараметрыОтчета);
	ИначеЕсли ПараметрыОтчета.ВидОтчета = "Журнал регистрации расходных ордеров" Тогда
		СформироватьЖурналРегистрацииРасходных(ПараметрыОтчета);
	ИначеЕсли ПараметрыОтчета.ВидОтчета = "Журнал регистрации приходных и расходных ордеров" Тогда
		СформироватьЖурналРегистрацииРасходныхИПриходных(ПараметрыОтчета);
	ИначеЕсли ПараметрыОтчета.ВидОтчета = "Книга учета принятых и выданных денег" Тогда
		СформироватьКнигаПринятыхВыданных(ПараметрыОтчета);
	ИначеЕсли ПараметрыОтчета.ВидОтчета = "Кассовая книга" Тогда
		СформироватьЛистыКассовойКниги(ПараметрыОтчета);
	КонецЕсли;	
	
	ВозвращаемыеПараметры =
		Новый Структура("ТабличныйДокумент, СписокСформированныхЛистов",
			ПараметрыОтчета.ТабличныйДокумент, ПараметрыОтчета.СписокСформированныхЛистов);
	ПоместитьВоВременноеХранилище(ВозвращаемыеПараметры, АдресХранилища);
	
КонецПроцедуры

Функция ОрдерПоРегистратору(Регистратор)
	
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор",Регистратор);
    	
	Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
	             |	ПриходныйКассовыйОрдер.ДокументОснование,
				 |	ПриходныйКассовыйОрдер.Ссылка
	             |ИЗ
	             |	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
				 |ГДЕ
				 |  ПриходныйКассовыйОрдер.ДокументОснование = &Регистратор
				 |";
				 
	Результат=Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Документы.ПриходныйКассовыйОрдер.ПустаяСсылка();
	КонецЕсли;	

	
КонецФункции	

Функция СформироватьСтруктуруНомеровЛистов(ПараметрыОтчета)
	
	ЗапросНачальныйНомер = Новый Запрос;
	ЗапросНачальныйНомер.УстановитьПараметр("Дата", НачалоДня(ПараметрыОтчета.ДатаНач)-1);
	
	Если ПараметрыОтчета.ОбособленноеПодразделениеОрганизации.Пустая() Тогда
		ЗапросНачальныйНомер.УстановитьПараметр("СтруктурнаяЕдиница", ПараметрыОтчета.Организация);
	Иначе
		ЗапросНачальныйНомер.УстановитьПараметр("СтруктурнаяЕдиница", ПараметрыОтчета.ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	ЗапросНачальныйНомер.УстановитьПараметр("Валюта", ПараметрыОтчета.Валюта);
	
	ЗапросНачальныйНомер.Текст="ВЫБРАТЬ
	                           |	ПоследниеНомераЛистовКассовойКнигиСрезПоследних.НомерЛистаМесяца,
	                           |	ПоследниеНомераЛистовКассовойКнигиСрезПоследних.НомерЛистаГода,
	                           |	ПоследниеНомераЛистовКассовойКнигиСрезПоследних.Период
	                           |ИЗ
	                           |	РегистрСведений.ПоследниеНомераЛистовКассовойКниги.СрезПоследних(
	                           |			&Дата,
	                           |			СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	                           |				И Валюта = &Валюта) КАК ПоследниеНомераЛистовКассовойКнигиСрезПоследних";
				 
	ВыборкаНачальныйНомер = ЗапросНачальныйНомер.Выполнить().Выбрать();
	
	НомерЛистаГод   = НомерПервогоЛистаГода(НачалоГода(ПараметрыОтчета.ДатаНач), ПараметрыОтчета.Организация);
	НомерЛистаМесяц = 1;
	ТекГод   = Неопределено;
	ТекМесяц = Неопределено;

	Если ВыборкаНачальныйНомер.Следующий() Тогда
		НомерЛистаМесяц  = ВыборкаНачальныйНомер.НомерЛистаМесяца + 1;
		НомерЛистаГод    = ВыборкаНачальныйНомер.НомерЛистаГода + 1;
		ТекМесяц  = Месяц(ВыборкаНачальныйНомер.Период);
		ТекГод    = Год(ВыборкаНачальныйНомер.Период);
	КонецЕсли;
	
	Запрос = Новый Запрос;		
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ПараметрыОтчета.ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ПараметрыОтчета.ДатаКон));
	Запрос.УстановитьПараметр("Организация",ПараметрыОтчета.Организация);
	
	Если ПараметрыОтчета.Валюта = ПараметрыОтчета.ВалютаРегламентированногоУчета Тогда
		ВалютнаяКасса = Ложь;
		ТекстФильтр = "";
		Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте);
	Иначе
		ВалютнаяКасса = Истина;
		ТекстФильтр = "ГДЕ
					   | ХозрасчетныйОбороты.Валюта = &Валюта
					   |";
		Запрос.УстановитьПараметр("Валюта",ПараметрыОтчета.Валюта);
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВИностраннойВалюте);
	КонецЕсли;
	
	Если НЕ ПараметрыОтчета.ЕстьУчетПоОбособленнымПодразделениям Тогда
		ТекстСубконто = "";
	Иначе
		ТекстСубконто = "&Субконто";
		Если ПустаяСтрока(ТекстФильтр) Тогда
			ТекстФильтр = "ГДЕ
						   |  ХозрасчетныйОбороты.Субконто1 = &ОбособленноеПодразделениеОрганизации
						   |";
		Иначе
			ТекстФильтр = ТекстФильтр + " И
						   |  ХозрасчетныйОбороты.Субконто1 = &ОбособленноеПодразделениеОрганизации
						   |";
		КонецЕсли; 
		Запрос.УстановитьПараметр("Субконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица);
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ПараметрыОтчета.ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	
	Запрос.Текст="ВЫБРАТЬ
				 | ХозрасчетныйОбороты.Период КАК Период
				 |ИЗ
				 | РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, День, Счет = &Счет,"+ТекстСубконто+", Организация = &Организация) КАК ХозрасчетныйОбороты
				 |"+ ТекстФильтр+
                 "УПОРЯДОЧИТЬ ПО
				 | Период";
				 
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураВозврата        = Новый Структура();
	СоответствиеНомеровМесяц = Новый Соответствие();
	СоответствиеНомеровГод   = Новый Соответствие();
	СоответствиеСдвигНомеровМесяц = Новый Соответствие();
	СоответствиеСдвигНомеровГод   = Новый Соответствие();
	
	Первый = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если Первый Тогда
			Отбор = Новый Структура;
			Отбор.Вставить("Организация", ПараметрыОтчета.Организация);
			НастройкиПечатиКассовойКниги = РегистрыСведений.НастройкиПечатиКассовойКниги.СрезПоследних(Выборка.Период, Отбор);
			Если НастройкиПечатиКассовойКниги.Количество() > 0 Тогда 
				НесколькоЛистовВДень =  НастройкиПечатиКассовойКниги[0].НесколькоЛистовВДень;
			КонецЕсли;
			Первый = Ложь;
		КонецЕсли;
	
		Если Месяц(Выборка.Период) <> ТекМесяц Тогда
			ТекМесяц = Месяц(Выборка.Период);
			НомерЛистаМесяц = 1;	
		КонецЕсли;
		
		Если Год(Выборка.Период) <> ТекГод Тогда
			ТекГод = Год(Выборка.Период);
			НомерЛистаГод = НомерПервогоЛистаГода(НачалоГода(Выборка.Период), ПараметрыОтчета.Организация);
			НомерЛистаМесяц = НомерЛистаГод;
		КонецЕсли;
		
		СоответствиеНомеровМесяц.Вставить(Выборка.Период, НомерЛистаМесяц);
		СоответствиеНомеровГод.Вставить(Выборка.Период, НомерЛистаГод);
		СоответствиеСдвигНомеровМесяц.Вставить(Выборка.Период, 0);
		СоответствиеСдвигНомеровГод.Вставить(Выборка.Период, 0);
		
		НомерЛистаМесяц = НомерЛистаМесяц + 1;
		НомерЛистаГод   = НомерЛистаГод + 1;	
		
	КонецЦикла;
	
	СтруктураВозврата.Вставить("СоответствиеНомеровМесяц", СоответствиеНомеровМесяц);
	СтруктураВозврата.Вставить("СоответствиеНомеровГод",   СоответствиеНомеровГод);
	СтруктураВозврата.Вставить("СоответствиеСдвигНомеровМесяц", СоответствиеСдвигНомеровМесяц);
	СтруктураВозврата.Вставить("СоответствиеСдвигНомеровГод",   СоответствиеСдвигНомеровГод);
	
	Возврат СтруктураВозврата;
		
КонецФункции	

Процедура СформироватьЛистыКассовойКниги(ПараметрыОтчета)
	
	ТабличныйДокумент  = Новый ТабличныйДокумент; // Итоговый табличный документ листа кассовой книги
	
	ДокументРезультат  = Новый ТабличныйДокумент; // временный табличный документ, для формирования листа кассовой книги
	
	
	БУ = ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте;

	мВалютаРегламентированногоУчета   = Константы.ВалютаРегламентированногоУчета.Получить();
	
	НачальныйНомерЛиста      = ПараметрыОтчета.НачальныйНомерЛиста;
	НачальныйНомерЛистаМесяц = НачальныйНомерЛиста;
	НесколькоЛистовВДень     = ПараметрыОтчета.НесколькоЛистовВДень;
	
	//Запрос по остаткам и оборотам кассы
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ПараметрыОтчета.ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ПараметрыОтчета.ДатаКон));
	Запрос.УстановитьПараметр("Организация",ПараметрыОтчета.Организация);
	Если ПараметрыОтчета.Валюта = мВалютаРегламентированногоУчета Тогда
		ВалютнаяКасса = Ложь;
		ТекстФильтр = "";
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте);
	Иначе
		ВалютнаяКасса = Истина;
		ТекстФильтр = "ГДЕ
					   | ХозрасчетныйОстаткиИОбороты.Валюта = &Валюта
					   |";
		Запрос.УстановитьПараметр("Валюта",ПараметрыОтчета.Валюта);
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВИностраннойВалюте);
	КонецЕсли;	
	Если ПараметрыОтчета.ЕстьУчетПоОбособленнымПодразделениям Тогда 
		ТекстСубконто = "&ВидСубконто";
		Запрос.УстановитьПараметр("ВидСубконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица);
		
		УсловиеПоСубконто = "И Субконто1 = &ОбособленноеПодразделениеОрганизации";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ПараметрыОтчета.ОбособленноеПодразделениеОрганизации);
	Иначе
		ТекстСубконто = "";
		УсловиеПоСубконто = "";
	КонецЕсли;
	
	Если ВалютнаяКасса Тогда
		УсловиеПоСубконто = УсловиеПоСубконто + " И Валюта = &Валюта";
	КонецЕсли;
	
	Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ // << >> ИН-АГРО 2019-02-16 
	             | ХозрасчетныйОбороты.Регистратор КАК Регистратор,
				 | ХозрасчетныйОстаткиИОбороты.Период КАК Период,
				 | ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокДт - ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокКт КАК СуммаНачальныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокДт - ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокКт КАК СуммаКонечныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
				 | ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйРазвернутыйОстатокДт - ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйРазвернутыйОстатокКт КАК ВалютнаяСуммаНачальныйОстаток,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйРазвернутыйОстатокДт - ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйРазвернутыйОстатокКт КАК ВалютнаяСуммаКонечныйОстаток,
                 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаОборотДт,
				 | ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаОборотКт,
				 | ХозрасчетныйОбороты.КорСчет КАК КорСчет,
				 | ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаКорОборотДт,
				 | ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаКорОборотКт,
				 | ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаКорОборотДт,
				 | ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаКорОборотКт
				 |ИЗ
				 | РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, День, Движения, Счет = &Счет, " + ТекстСубконто + ", Организация = &Организация " + УсловиеПоСубконто + ") КАК ХозрасчетныйОстаткиИОбороты
				 | ЛЕВОЕ СОЕДИНЕНИЕ
				 | РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет = &Счет, " + ТекстСубконто + ", Организация = &Организация " + УсловиеПоСубконто + ") КАК ХозрасчетныйОбороты
				 | ПО ХозрасчетныйОстаткиИОбороты.Период = НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период,День)
				 |"+ ТекстФильтр+
                 "УПОРЯДОЧИТЬ ПО
				 | Период,
				 | ХозрасчетныйОбороты.Регистратор.МоментВремени
				|ИТОГИ
	            |	МАКСИМУМ(Период),
				|	МАКСИМУМ(СуммаНачальныйОстаток),
	            |	МАКСИМУМ(СуммаКонечныйОстаток),
	            |	МАКСИМУМ(СуммаОборотДт),
	            |	МАКСИМУМ(СуммаОборотКт),
				|	СУММА(СуммаКорОборотДт),
	            |	СУММА(СуммаКорОборотКт),
				|	МАКСИМУМ(ВалютнаяСуммаНачальныйОстаток),
	            |	МАКСИМУМ(ВалютнаяСуммаКонечныйОстаток),
	            |	МАКСИМУМ(ВалютнаяСуммаОборотДт),
	            |	МАКСИМУМ(ВалютнаяСуммаОборотКт),
				|	СУММА(ВалютнаяСуммаКорОборотДт),
	            |	СУММА(ВалютнаяСуммаКорОборотКт)
	            |ПО
				|	Регистратор
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ // << >> ИН-АГРО 2019-02-16 
				|	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
				|	ХозрасчетныйОбороты.КорСчет КАК КорСчет
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями), , Организация = &Организация, , ) КАК ХозрасчетныйОбороты
				|ГДЕ
				|	ХозрасчетныйОбороты.СуммаОборотДт <> 0
				|
				|СГРУППИРОВАТЬ ПО
				|	ХозрасчетныйОбороты.Регистратор,
				|	ХозрасчетныйОбороты.КорСчет
				|
				|УПОРЯДОЧИТЬ ПО
				|	ХозрасчетныйОбороты.Регистратор.МоментВремени";			

	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	РезультатПоРегистратору = ПакетРезультатовЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТаблицаКорСчетов36Р = ПакетРезультатовЗапроса[1].Выгрузить();
	
	ЗапросПКОпоАТТ = Новый Запрос();
	ЗапросПКОпоАТТ.УстановитьПараметр("ДатаНач",НачалоДня(ПараметрыОтчета.ДатаНач));
	ЗапросПКОпоАТТ.УстановитьПараметр("ДатаКон",КонецДня(ПараметрыОтчета.ДатаКон));
	ЗапросПКОпоАТТ.УстановитьПараметр("Организация",ПараметрыОтчета.Организация);
	ЗапросПКОпоАТТ.УстановитьПараметр("ПриемРозничнойВыручки", Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка);
	Если ПараметрыОтчета.ЕстьУчетПоОбособленнымПодразделениям Тогда 
		УсловиеПоПодразделению = "И ПриходныйКассовыйОрдер.ПоОбособленномуПодразделению = &ПоОбособленномуПодразделению
								 |И ПриходныйКассовыйОрдер.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации";
								 
		ЗапросПКОпоАТТ.УстановитьПараметр("ПоОбособленномуПодразделению", ПараметрыОтчета.ПоОбособленномуПодразделению);
		ЗапросПКОпоАТТ.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ПараметрыОтчета.ОбособленноеПодразделениеОрганизации);
	Иначе
		УсловиеПоПодразделению = "";
	КонецЕсли;
	Если НЕ ПараметрыОтчета.Валюта = мВалютаРегламентированногоУчета Тогда 
		УсловиеПоВалюте = "И ПриходныйКассовыйОрдер.ВалютаДокумента = &Валюта";
								 
		ЗапросПКОпоАТТ.УстановитьПараметр("Валюта", ПараметрыОтчета.Валюта);
	Иначе
		УсловиеПоВалюте = "";
	КонецЕсли;
	
	ЗапросПКОпоАТТ.Текст = "ВЫБРАТЬ
	                       |	ПриходныйКассовыйОрдер.Ссылка КАК Ссылка,
	                       |	ПриходныйКассовыйОрдер.ПринятоОт,
	                       |	ПриходныйКассовыйОрдер.НомерОрдера,
						   |	ПриходныйКассовыйОрдер.Контрагент КАК Склад,
						   |	НАЧАЛОПЕРИОДА(ПриходныйКассовыйОрдер.Дата, ДЕНЬ) КАК Дата,
						   |	ПриходныйКассовыйОрдер.СуммаПродаж - ПриходныйКассовыйОрдер.СуммаБезналичнойОплаты КАК СуммаПродаж,
	                       |	ПриходныйКассовыйОрдер.СуммаВозврата КАК СуммаВозвратов,
						   |	ЛОЖЬ КАК ПКОУчтен
	                       |ИЗ
	                       |	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	                       |ГДЕ
	                       |	ПриходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                       |	И ПриходныйКассовыйОрдер.Проведен = Истина
	                       |	И ПриходныйКассовыйОрдер.ВидОперации = &ПриемРозничнойВыручки
	                       |	И ПриходныйКассовыйОрдер.ВыручкаСНТТ = ЛОЖЬ
						   |	И ПриходныйКассовыйОрдер.Организация = &Организация
						   |" + УсловиеПоПодразделению + "
						   |" + УсловиеПоВалюте;
						   
	ТаблицаПКОпоАТТ = ЗапросПКОпоАТТ.Выполнить().Выгрузить();
							   
	СтруктураНомеров = СформироватьСтруктуруНомеровЛистов(ПараметрыОтчета);
	СоответствиеНомеровМесяц = СтруктураНомеров.СоответствиеНомеровМесяц; 
	СоответствиеНомеровГод   = СтруктураНомеров.СоответствиеНомеровГод;
	СоответствиеСдвигНомеровМесяц = СтруктураНомеров.СоответствиеСдвигНомеровМесяц;
	СоответствиеСдвигНомеровГод   = СтруктураНомеров.СоответствиеСдвигНомеровГод;
	СдвигНомеровМесяц = 0;
	СдвигНомеровГод = 0;
	
	ТекДата = Дата(1, 1, 1);
	ТекРегистратор = "";
	ОстатокЗаДень  = 0;ВалютныйОстатокЗаДень  = 0;
	ПриходЗаДень   = 0;ВалютныйПриходЗаДень   = 0;
	РасходЗаДень   = 0;ВалютныйРасходЗаДень   = 0;
	КоличествоПКОЗаДень = 0;
	КоличествоРКОЗаДень = 0;
	ТаблицаСтрокДляВывода = Новый ТаблицаЗначений;
	ТаблицаСтрокДляВывода.Колонки.Добавить("НомерОрдера");
	ТаблицаСтрокДляВывода.Колонки.Добавить("НомерОрдераДляСортировки");
	ТаблицаСтрокДляВывода.Колонки.Добавить("ДокументОрдер");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Контрагент");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Ордер");
	ТаблицаСтрокДляВывода.Колонки.Добавить("КоррСчет");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Приход");
	ТаблицаСтрокДляВывода.Колонки.Добавить("ПриходВалюта");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Валюта");
	ТаблицаСтрокДляВывода.Колонки.Добавить("Расход");
	ТаблицаСтрокДляВывода.Колонки.Добавить("РасходВалюта");
	ТаблицаСтрокДляВывода.Колонки.Добавить("РасходПриход");
	
	Если ПараметрыОтчета.ДатаКон >= Дата('20180105') Тогда
		Макет = ПолучитьМакет("КассоваяКнига2018");
	Иначе
		Макет = ПолучитьМакет("КассоваяКнига");
	КонецЕсли;
	
	// Печать обложки и титульного листа
	СформироватьОбложку(ТабличныйДокумент, ПараметрыОтчета);
	
	НомерЛиста = 1;
	
	ОтветственныеЛица = ПолучитьОтветственныеЛицаКассовойКниги(ПараметрыОтчета,, КонецДня(ПараметрыОтчета.ДатаКон));
	
	Пока РезультатПоРегистратору.Следующий() Цикл
		Если РезультатПоРегистратору.Период <> ТекДата Тогда
			Если (ОстатокЗаДень<>0)или(ПриходЗаДень<>0)или(РасходЗаДень<>0) Тогда
				
				ТаблицаСтрокДляВывода.Сортировать("РасходПриход Возр, НомерОрдераДляСортировки Возр");
				
				ОбластьКонецСтраницы = Макет.ПолучитьОбласть("ШаблонКонецСтраницы");
				НомерСтроки = 1;
				КоличествоСтрок = ТаблицаСтрокДляВывода.Количество();
				
				ПриходЗаДеньВОтчет = 0;
				РасходЗаДеньВОтчет = 0;
				ВалютныйПриходЗаДеньВОтчет = 0;
				ВалютныйРасходЗаДеньВОтчет = 0;

				Для каждого Строка Из ТаблицаСтрокДляВывода Цикл
				    ОбластьМакета = Макет.ПолучитьОбласть("Строка");
					ОбластьМакета.Параметры.Заполнить(Строка);
					ОбластьКонецСтраницы.Параметры.Заполнить(Строка);
					
					Если НесколькоЛистовВДень Тогда
						Если НЕ ДокументРезультат.ПроверитьВывод(ОбластьМакета) ИЛИ ((НомерСтроки = КоличествоСтрок) и НЕ ДокументРезультат.ПроверитьВывод(ОбластьКонецСтраницы))Тогда
							
							// Выведем разрыв страницы
							ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							
							НомерЛистаДляПерехода = НомерЛиста;
							НомерЛиста = НомерЛиста + 1;
							ИмяОбласти = "Лист_" + Прав("0000000" + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="), 7);
							ОбластьЛисты = ДокументРезультат.Область(1,, ДокументРезультат.ВысотаТаблицы,);
							ОбластьЛисты.Имя = ИмяОбласти;
							ТабличныйДокумент.Вывести(ДокументРезультат);
							ПараметрыОтчета.СписокСформированныхЛистов.Добавить("3" + ИмяОбласти, "Лист " + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="));
							
							ДокументРезультат = Новый ТабличныйДокумент;
							
							СдвигНомеровМесяц  = СдвигНомеровМесяц + 1;
							СдвигНомеровГод  = СдвигНомеровГод + 1;
							
							ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
							ЧислоДокумента                          = Формат(ТекДата,"ДФ='дд';Л=uk_UA");
							ДатаДокумента                           = Формат(ТекДата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
							ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
							ОбластьШапка.Параметры.ДатаПрописью   	= """" + ЧислоДокумента + """" + ДатаДокументаБезЧисла;
							ОбластьШапка.Параметры.НомерЛиста 		= СоответствиеНомеровГод.Получить(НачалоДня(ТекДата)) + СдвигНомеровГод;
							
							ДокументРезультат.Вывести(ОбластьШапка);
						КонецЕсли;
						СоответствиеСдвигНомеровМесяц.Вставить(НачалоДня(ТекДата), СдвигНомеровМесяц);
						СоответствиеСдвигНомеровГод.Вставить(НачалоДня(ТекДата), СдвигНомеровГод);
						НомерСтроки = НомерСтроки + 1;
					КонецЕсли;
					
					ПриходЗаДеньВОтчет = ПриходЗаДеньВОтчет + ?(Строка.Приход = "-", 0, Строка.Приход);
					РасходЗаДеньВОтчет = РасходЗаДеньВОтчет + ?(Строка.Расход = "-", 0, Строка.Расход);
					ВалютныйПриходЗаДеньВОтчет = ВалютныйПриходЗаДеньВОтчет + ?(ЗначениеЗаполнено(Строка.ПриходВалюта), Строка.ПриходВалюта, 0);
					ВалютныйРасходЗаДеньВОтчет = ВалютныйРасходЗаДеньВОтчет + ?(ЗначениеЗаполнено(Строка.РасходВалюта), Строка.РасходВалюта, 0);
					
					ДокументРезультат.Вывести(ОбластьМакета);
				КонецЦикла;
				ТаблицаСтрокДляВывода.Очистить();
				
				ОбластьМакета = Макет.ПолучитьОбласть("ОстатокКонец");
				ОбластьМакета.Параметры.ОстатокКонец = ОстатокЗаДень;
				ОбластьМакета.Параметры.Приход = ?(ПриходЗаДеньВОтчет = 0, "-", ПриходЗаДеньВОтчет);
				ОбластьМакета.Параметры.Расход = ?(РасходЗаДеньВОтчет = 0, "-", РасходЗаДеньВОтчет);
				
				ОбластьМакета.Параметры.Бухгалтер = ОтветственныеЛица.ГлавныйБухгалтерПредставление; // Кратко
				ОбластьМакета.Параметры.Кассир    = ОтветственныеЛица.КассирПредставление; // Кратко
				
				ФорматнаяСтрока = "Л = uk_UA";    
				КоличествоПКОЗаДень = ?(КоличествоПКОЗаДень = 0, "-   ", ЧислоПрописью(КоличествоПКОЗаДень, ФорматнаяСтрока));
				КоличествоРКОЗаДень = ?(КоличествоРКОЗаДень = 0, "-   ", ЧислоПрописью(КоличествоРКОЗаДень, ФорматнаяСтрока));
				КоличествоПКОЗаДень = СокрЛП(Лев(КоличествоПКОЗаДень, СтрДлина(КоличествоПКОЗаДень) - 3 ));
				КоличествоРКОЗаДень = СокрЛП(Лев(КоличествоРКОЗаДень, СтрДлина(КоличествоРКОЗаДень) - 3 ));
				ОбластьМакета.Параметры.КоличествоПКО = КоличествоПКОЗаДень;
				ОбластьМакета.Параметры.КоличествоРКО = КоличествоРКОЗаДень;
				
				Если ВалютнаяКасса Тогда
					ОбластьМакета.Параметры.ОстатокКонецВалюта = Формат(ВалютныйОстатокЗаДень,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
					ОбластьМакета.Параметры.ПриходВалюта = Формат(ВалютныйПриходЗаДеньВОтчет,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
					ОбластьМакета.Параметры.РасходВалюта = Формат(ВалютныйРасходЗаДеньВОтчет,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
					ОбластьМакета.Параметры.Валюта = ПараметрыОтчета.Валюта.Наименование;
				КонецЕсли;
				
				// количество листов за месяц
				Если Месяц(РезультатПоРегистратору.Период) <> Месяц(ТекДата) Тогда
					Если ПараметрыОтчета.ВидЛистаКассовойКниги = "Конец месяца" Тогда
						КоличествоЛистовМесяц = СоответствиеНомеровМесяц.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровМесяц.Получить(НачалоДня(ТекДата)) - НачальныйНомерЛистаМесяц + 1; 
						ОбластьМакета.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " + КоличествоЛистовМесяц;
					КонецЕсли;
				КонецЕсли;	
				
				// количество листов за год
				Если ПараметрыОтчета.ВидЛистаКассовойКниги = "Конец года" Тогда
					Если Месяц(РезультатПоРегистратору.Период) <> Месяц(ТекДата) Тогда
						КоличествоЛистовМесяц = СоответствиеНомеровМесяц.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровМесяц.Получить(НачалоДня(ТекДата)) - НачальныйНомерЛистаМесяц + 1; 
						ОбластьМакета.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " + КоличествоЛистовМесяц;
					КонецЕсли;
					Если Год(РезультатПоРегистратору.Период) <> Год(ТекДата) Тогда
						КоличествоЛистовГод = СоответствиеНомеровГод.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровГод.Получить(НачалоДня(ТекДата)) - НачальныйНомерЛиста + 1; 
						ОбластьМакета.Параметры.КоличествоЛистовГод = "Листів з початку року: " + КоличествоЛистовГод; 
					КонецЕсли;
				КонецЕсли;	
				
				Если Месяц(РезультатПоРегистратору.Период) <> Месяц(ТекДата) Тогда
					СдвигНомеровМесяц = 0;
					НачальныйНомерЛистаМесяц = 1;
				КонецЕсли;
				
				Если Год(РезультатПоРегистратору.Период) <> Год(ТекДата) Тогда
					СдвигНомеровГод = 0;
					
					Отбор = Новый Структура;
					Отбор.Вставить("Организация", ПараметрыОтчета.Организация);
					НастройкиПечатиКассовойКниги = РегистрыСведений.НастройкиПечатиКассовойКниги.СрезПоследних(НачалоГода(РезультатПоРегистратору.Период), Отбор);
					Если НастройкиПечатиКассовойКниги.Количество() > 0 Тогда 
						НесколькоЛистовВДень     = НастройкиПечатиКассовойКниги[0].НесколькоЛистовВДень;
						НачальныйНомерЛиста      = НастройкиПечатиКассовойКниги[0].НомерПервогоЛиста;
						НачальныйНомерЛистаМесяц = НачальныйНомерЛиста;
					КонецЕсли;
					
				КонецЕсли;
				
				ДокументРезультат.Вывести(ОбластьМакета);
				
				НомерЛистаДляПерехода = НомерЛиста;
				НомерЛиста = НомерЛиста + 1;
				ИмяОбласти = "Лист_" + Прав("0000000" + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="), 7);
				ОбластьЛисты = ДокументРезультат.Область(1,, ДокументРезультат.ВысотаТаблицы,);
				ОбластьЛисты.Имя = ИмяОбласти;
				ТабличныйДокумент.Вывести(ДокументРезультат);
				ПараметрыОтчета.СписокСформированныхЛистов.Добавить("3" + ИмяОбласти, "Лист " + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="));
				
				ДокументРезультат = Новый ТабличныйДокумент;
				
				КоличествоПКОЗаДень = 0;
				КоличествоРКОЗаДень = 0;
				
				// проверим наличие ПКО с приемом прозничной выручки по АТТ, не подтвержденные ОтчетамиОРозничныхПродажах.
				НеучтенныеПКО =  ТаблицаПКОпоАТТ.НайтиСтроки(Новый Структура("Дата", НачалоДня(ТекДата)));
				Для каждого ПКО Из НеучтенныеПКО Цикл
				
					Если НЕ ПКО.ПКОУчтен Тогда
							 Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По ПКО %1 за %2 нет зарегистрированных документов ""Отчет о розничных продажах"".';uk='По ПКО %1 за %2 немає зареєстрованих  документів ""Звіт про роздрібні продажі"".'"),
							 					ПКО.Ссылка, Формат(ТекДата,"ДФ=dd.MM.yyyy")));
					Иначе
						
						Если ПКО.СуммаПродаж > 0 Тогда
							 Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По ПКО %1 за %2 нет зарегистрированных документов ""Отчет о розничных продажах"" на сумму продаж %3.';uk='По ПКО %1 за %2 немає зареєстрованих  документів ""Звіт про роздрібні продажі"" на суму продажу %3.'"),
							 					ПКО.Ссылка, Формат(ТекДата,"ДФ=dd.MM.yyyy"), Формат(ПКО.СуммаПродаж,"ЧДЦ=2; ЧГ=0")));
						КонецЕсли;
						
						Если ПКО.СуммаВозвратов > 0 Тогда
							 Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По ПКО %1 за %2 нет зарегистрированных документов ""Отчет о розничных продажах"" на сумму повернень %3.';uk='По ПКО %1 за %2 немає зареєстрованих  документів ""Звіт про роздрібні продажі"" на суму повернень %3.'"),
							 					ПКО.Ссылка, Формат(ТекДата,"ДФ=dd.MM.yyyy"), Формат(ПКО.СуммаВозвратов,"ЧДЦ=2; ЧГ=0")));
						КонецЕсли;
						
					КонецЕсли;
				
				КонецЦикла;
				
			КонецЕсли;
			
			ТекДата = РезультатПоРегистратору.Период;
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			
			ЧислоДокумента                          = Формат(РезультатПоРегистратору.Период,"ДФ='дд';Л=uk_UA");
			ДатаДокумента                           = Формат(РезультатПоРегистратору.Период,"ДФ='дд ММММ ггггр.';Л=uk_UA");
			ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
			ОбластьМакета.Параметры.ДатаПрописью   	= """" + ЧислоДокумента + """" + ДатаДокументаБезЧисла;
			СоответствиеСдвигНомеровМесяц.Вставить(НачалоДня(ТекДата), СдвигНомеровМесяц);
			СоответствиеСдвигНомеровГод.Вставить(НачалоДня(ТекДата), СдвигНомеровГод);
			
			// номер листа
			ОбластьМакета.Параметры.НомерЛиста = СоответствиеНомеровГод.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровГод.Получить(НачалоДня(ТекДата));
			ДокументРезультат.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("ОстатокНачало");
			ОбластьМакета.Параметры.ОстатокНачало = РезультатПоРегистратору.СуммаНачальныйОстаток;
			Если ВалютнаяКасса Тогда
				ОбластьМакета.Параметры.ОстатокНачалоВалюта = Формат(РезультатПоРегистратору.ВалютнаяСуммаНачальныйОстаток,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
				ОбластьМакета.Параметры.Валюта = ПараметрыОтчета.Валюта.Наименование;
			КонецЕсли;
			ДокументРезультат.Вывести(ОбластьМакета);
			ОстатокЗаДень = РезультатПоРегистратору.СуммаКонечныйОстаток;
			ПриходЗаДень = РезультатПоРегистратору.СуммаОборотДт;
			РасходЗаДень = РезультатПоРегистратору.СуммаОборотКт;
			ВалютныйОстатокЗаДень = РезультатПоРегистратору.ВалютнаяСуммаКонечныйОстаток;
			ВалютныйПриходЗаДень = РезультатПоРегистратору.ВалютнаяСуммаОборотДт;
			ВалютныйРасходЗаДень = РезультатПоРегистратору.ВалютнаяСуммаОборотКт;
		КонецЕсли;              
		
		Строка = ТаблицаСтрокДляВывода.Добавить();
		Строка.ДокументОрдер = РезультатПоРегистратору.Регистратор;		
		
		ТекРегистратор = РезультатПоРегистратору.Регистратор;
		Если ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.ЗакрытиеМесяца") Тогда
			//Просто отобразим курсовую разницу
			Строка.НомерОрдера = "";
			Строка.Контрагент  = "";
		ИначеЕсли ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.ОперацияБух") Тогда
			//Тут мы ничего не знаем
			Строка.НомерОрдера = "";
			Строка.Контрагент  = "";
		ИначеЕсли ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
			Строка.НомерОрдера = РезультатПоРегистратору.Регистратор.НомерОрдера;
			Строка.Контрагент  = РезультатПоРегистратору.Регистратор.ПринятоОт;
			КоличествоПКОЗаДень = КоличествоПКОЗаДень + 1;
		ИначеЕсли ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда	
			Строка.НомерОрдера = РезультатПоРегистратору.Регистратор.НомерОрдера;
			Строка.Контрагент  = РезультатПоРегистратору.Регистратор.Выдать;
			КоличествоРКОЗаДень = КоличествоРКОЗаДень + 1;
		ИначеЕсли ТипЗнч(ТекРегистратор) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда	
			// найдем соответствующие ордера
			ПКОпоАТТ = ТаблицаПКОпоАТТ.НайтиСтроки(Новый Структура("Дата, Склад", НачалоДня(ТекДата), ТекРегистратор.Склад));
				
			СуммаПродаж    = РезультатПоРегистратору.СуммаКорОборотДт;
			СуммаВозвратов = РезультатПоРегистратору.СуммаКорОборотКт;
				
			КвоПКО = 1;
			Для каждого ПКО Из ПКОпоАТТ Цикл
				
				СуммаПродажВОтчет 	 = 0;
				СуммаВозвратовВОтчет = 0;
				
				Если (КвоПКО > 1)
					 И ((СуммаПродаж > 0 И ПКО.СуммаПродаж > 0) 
					 ИЛИ (СуммаВозвратов > 0 И ПКО.СуммаВозвратов > 0)) Тогда
					Строка = ТаблицаСтрокДляВывода.Добавить();
                    Строка.ДокументОрдер = РезультатПоРегистратору.Регистратор;                 
				КонецЕсли;
				
				Если СуммаПродаж > 0 И ПКО.СуммаПродаж > 0 Тогда
					СуммаПродажВОтчет = Мин(СуммаПродаж, ПКО.СуммаПродаж);
					// учтем в таблице 
					ПКО.СуммаПродаж = ПКО.СуммаПродаж - СуммаПродажВОтчет;
					// учтем сумму
					СуммаПродаж = СуммаПродаж - СуммаПродажВОтчет;
					Если НЕ ПКО.ПКОУчтен Тогда
						ПКО.ПКОУчтен = Истина;
						КоличествоПКОЗаДень = КоличествоПКОЗаДень + 1;
					КонецЕсли;
				КонецЕсли; 
					
				Если СуммаВозвратов > 0 И ПКО.СуммаВозвратов > 0 Тогда
					СуммаВозвратовВОтчет = Мин(СуммаВозвратов, ПКО.СуммаВозвратов);
					// учтем в таблице 
					ПКО.СуммаВозвратов = ПКО.СуммаВозвратов - СуммаВозвратовВОтчет;
					// учтем сумму
					СуммаВозвратов = СуммаВозвратов - СуммаВозвратовВОтчет;
					Если НЕ ПКО.ПКОУчтен Тогда
						ПКО.ПКОУчтен = Истина;
						КоличествоПКОЗаДень = КоличествоПКОЗаДень + 1;
					КонецЕсли;
				КонецЕсли; 
					
				// выведем в отчет
				Если СуммаПродажВОтчет > 0 ИЛИ СуммаВозвратовВОтчет > 0 Тогда
						
					Строка.НомерОрдера = ПКО.НомерОрдера;
					Строка.Контрагент  = ПКО.ПринятоОт;
						
					
					РезультатПосчетам = РезультатПоРегистратору.Выбрать();
					
					СписокСчетов = ""; Разделитель = "";
					Пока РезультатПосчетам.Следующий() Цикл
						
						// Это скорее всего возврат и счет учета вычета из доходов, который в список счетов попадать не должен
						Если РезультатПосчетам.СуммаКорОборотДт = 0 И ТипЗнч(РезультатПосчетам.Регистратор) <> Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
							Продолжить;
						КонецЕсли; 
						
						Если РезультатПосчетам.КорСчет = ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями Тогда
							
							СтрокиКорСчетов36Р = ТаблицаКорСчетов36Р.НайтиСтроки(Новый Структура("Регистратор", РезультатПосчетам.Регистратор));	
							Для каждого СтрокаКорСчета Из СтрокиКорСчетов36Р Цикл
								СписокСчетов = СписокСчетов + Разделитель + Строка(СтрокаКорСчета.КорСчет);
								Разделитель = ", ";
							КонецЦикла; 
						Иначе 
							СписокСчетов = СписокСчетов + Разделитель + Строка(РезультатПосчетам.КорСчет);
							Разделитель = ", ";
						КонецЕсли;
						
					КонецЦикла;
					
					Строка.КоррСчет = СписокСчетов;
						
					Если СуммаПродажВОтчет - СуммаВозвратовВОтчет > 0 Тогда
						Строка.Приход = СуммаПродажВОтчет - СуммаВозвратовВОтчет;
						Строка.Расход = "-";
					Иначе
						Строка.Приход = "-";
						Строка.Расход = СуммаВозвратовВОтчет - СуммаПродажВОтчет;
					КонецЕсли;
					Строка.РасходПриход = ?(СуммаПродажВОтчет    = 0, 1, 0);
					Строка.НомерОрдераДляСортировки = Прав("0000000000" + ПКО.НомерОрдера, 10);

					// оставляем ссылку на ОтчетОРозничных продажах
					Строка.Ордер 		  = РезультатПоРегистратору.Регистратор;
					Строка.ДокументОрдер = ПКО.Ссылка;
					
					ДатаПоследнейЗаписи = РезультатПоРегистратору.Период;
					КвоПКО = КвоПКО + 1;
						
				КонецЕсли;
					
			КонецЦикла; 
				
				
			Если СуммаПродаж > 0 ИЛИ СуммаВозвратов > 0 Тогда
				// неподтвержденные ПКО продажи
					
				Если СуммаПродаж > 0 Тогда
					
					 Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По документу %1 за %2 нет зарегистрированных ПКО на сумму продаж %3.';uk='По документу %1 за %2 немає зареєстрованих ПКО на суму продажу %3.'"),
										 РезультатПоРегистратору.Регистратор, Формат(ТекДата,"ДФ=dd.MM.yyyy"), Формат(СуммаПродаж,"ЧДЦ=2; ЧГ=0")));
					
				КонецЕсли;
					
				Если СуммаВозвратов > 0 Тогда
					
					 Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По документу %1 за %2 нет зарегистрированных ПКО на сумму возвратов %3.';uk='По документу %1 за %2 немає зареєстрованих ПКО на суму повернення %3.'"),
										 РезультатПоРегистратору.Регистратор, Формат(ТекДата,"ДФ=dd.MM.yyyy"), Формат(СуммаВозвратов,"ЧДЦ=2; ЧГ=0")));
					
				КонецЕсли;
				Если КвоПКО > 1 Тогда
					Строка = ТаблицаСтрокДляВывода.Добавить();
				КонецЕсли;
				Строка.НомерОрдера = "";
				Строка.Контрагент  = "";
				
				
				РезультатПосчетам = РезультатПоРегистратору.Выбрать();
				
				СписокСчетов = ""; Разделитель = "";
				Пока РезультатПосчетам.Следующий() Цикл
					
					// Это скорее всего возврат и счет учета вычета из доходов, который в список счетов попадать не должен
					Если РезультатПосчетам.СуммаКорОборотДт = 0 И ТипЗнч(РезультатПосчетам.Регистратор) <> Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
						Продолжить;
					КонецЕсли;
					
					Если РезультатПосчетам.КорСчет = ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями Тогда
						
						СтрокиКорСчетов36Р = ТаблицаКорСчетов36Р.НайтиСтроки(Новый Структура("Регистратор", РезультатПосчетам.Регистратор));	
						Для каждого СтрокаКорСчета Из СтрокиКорСчетов36Р Цикл
							СписокСчетов = СписокСчетов + Разделитель + Строка(СтрокаКорСчета.КорСчет);
							Разделитель = ", ";
						КонецЦикла; 
					Иначе 
						СписокСчетов = СписокСчетов + Разделитель + Строка(РезультатПосчетам.КорСчет);
						Разделитель = ", ";
					КонецЕсли;
					
				КонецЦикла;
				
				Строка.КоррСчет = СписокСчетов;
				
				Если СуммаПродаж - СуммаВозвратов > 0 Тогда
					Строка.Приход = СуммаПродаж - СуммаВозвратов;
					Строка.Расход = "-";
				Иначе
					Строка.Приход = "-";
					Строка.Расход = СуммаВозвратов - СуммаПродаж;
				КонецЕсли;
				
				Строка.РасходПриход = ?(СуммаПродаж    = 0, 1, 0);
				Строка.НомерОрдераДляСортировки = "0000000000";

				// оставляем ссылку на ОтчетОРозничных продажах
				Строка.Ордер = РезультатПоРегистратору.Регистратор;
						
				ДатаПоследнейЗаписи = РезультатПоРегистратору.Период;
					
			КонецЕсли;
				
			// вывод строк был осуществлен локально
			Продолжить;
				
		Иначе
			//Попробуем найти для него ордер
			Ордер = ОрдерПоРегистратору(РезультатПоРегистратору.Регистратор);
			Строка.НомерОрдера = Ордер.НомерОрдера;
			Строка.Контрагент = Ордер.ПринятоОт;
			Если Не Ордер.Пустая() Тогда
				Строка.ДокументОрдер = Ордер;						
				КоличествоПКОЗаДень = КоличествоПКОЗаДень + 1;		
			КонецЕсли;
		КонецЕсли;	
		
		// выведем строку в отчет (строки по ОтчетуОРозничныхПродажах были выведены ранее)
		
		РезультатПосчетам = РезультатПоРегистратору.Выбрать();
		
		ЕстьКурсоваяРазница = Ложь;
		СписокСчетов = ""; Разделитель = "";
		Пока РезультатПосчетам.Следующий() Цикл
			
			// Это скорее всего возврат и счет учета вычета из доходов, который в список счетов попадать не должен
			Если РезультатПосчетам.СуммаКорОборотДт = 0 И ТипЗнч(РезультатПосчетам.Регистратор) <> Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
				Продолжить;
			КонецЕсли;
			
			Если РезультатПосчетам.КорСчет = ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями Тогда
				
				СтрокиКорСчетов36Р = ТаблицаКорСчетов36Р.НайтиСтроки(Новый Структура("Регистратор", РезультатПосчетам.Регистратор));	
				Для каждого СтрокаКорСчета Из СтрокиКорСчетов36Р Цикл
					СписокСчетов = СписокСчетов + Разделитель + Строка(СтрокаКорСчета.КорСчет);
					Разделитель = ", ";
				КонецЦикла; 
			Иначе 
				СписокСчетов = СписокСчетов + Разделитель + Строка(РезультатПосчетам.КорСчет);
				Разделитель = ", ";	
			КонецЕсли;
			
			Если ВалютнаяКасса И (РезультатПоСчетам.СуммаКорОборотДт <> 0 И РезультатПоСчетам.ВалютнаяСуммаКорОборотДт = 0) 
				ИЛИ (РезультатПоСчетам.СуммаКорОборотКт <> 0 И РезультатПоСчетам.ВалютнаяСуммаКорОборотКт=0) Тогда
				ЕстьКурсоваяРазница = Истина;	
			КонецЕсли;	
		КонецЦикла;
		
		Строка.КоррСчет = СписокСчетов;
		СуммаПродаж    = РезультатПоРегистратору.СуммаКорОборотДт;
		СуммаВозвратов = РезультатПоРегистратору.СуммаКорОборотКт;
		Если СуммаПродаж - СуммаВозвратов > 0 Тогда
			Строка.Приход = СуммаПродаж - СуммаВозвратов;
			Строка.Расход = "-";
		Иначе
			Строка.Приход = "-";
			Строка.Расход = СуммаВозвратов - СуммаПродаж;
		КонецЕсли;
		Строка.РасходПриход = ?(СуммаПродаж    = 0, 1, 0);
		Строка.НомерОрдераДляСортировки = Прав("0000000000" + Строка.НомерОрдера, 10);
		Если ВалютнаяКасса Тогда
			СуммаПродажВалюта    = РезультатПоРегистратору.ВалютнаяСуммаКорОборотДт;
			СуммаВозвратовВалюта = РезультатПоРегистратору.ВалютнаяСуммаКорОборотКт;
			Если СуммаПродаж - СуммаВозвратов > 0 Тогда
				Строка.ПриходВалюта = Формат(СуммаПродажВалюта - СуммаВозвратовВалюта, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
				Строка.РасходВалюта = "-";
			Иначе
				Строка.ПриходВалюта = "-";
				Строка.РасходВалюта =  Формат(СуммаВозвратовВалюта - СуммаПродажВалюта, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
			КонецЕсли;
			Строка.Валюта = ПараметрыОтчета.Валюта.Наименование;
			Если ЕстьКурсоваяРазница Тогда
				Если ПустаяСтрока(Строка.Контрагент) Тогда
					Строка.Контрагент = "Курсова різниця";
				Иначе 
					Строка.Контрагент = Строка.Контрагент + ", Курсова різниця";	
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
		Строка.Ордер 		  = РезультатПоРегистратору.Регистратор;
		ДатаПоследнейЗаписи = РезультатПоРегистратору.Период;
	КонецЦикла;
	
	Если (ОстатокЗаДень<>0)или(ПриходЗаДень<>0)или(РасходЗаДень<>0) Тогда
		
		ТаблицаСтрокДляВывода.Сортировать("РасходПриход Возр, НомерОрдераДляСортировки Возр");
		ОбластьКонецСтраницы = Макет.ПолучитьОбласть("ШаблонКонецСтраницы");
		НомерСтроки = 1;
		КоличествоСтрок = ТаблицаСтрокДляВывода.Количество();
		ПриходЗаДеньВОтчет = 0;
		РасходЗаДеньВОтчет = 0;
		ВалютныйПриходЗаДеньВОтчет = 0;
		ВалютныйРасходЗаДеньВОтчет = 0;
		Для каждого Строка Из ТаблицаСтрокДляВывода Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(Строка);
			ОбластьКонецСтраницы.Параметры.Заполнить(Строка);
			
			Если НесколькоЛистовВДень Тогда
				Если НЕ ДокументРезультат.ПроверитьВывод(ОбластьМакета) ИЛИ ((НомерСтроки = КоличествоСтрок) и НЕ ДокументРезультат.ПроверитьВывод(ОбластьКонецСтраницы))Тогда
					// Выведем разрыв страницы
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					
					НомерЛистаДляПерехода = НомерЛиста;
					НомерЛиста = НомерЛиста + 1;
					ИмяОбласти = "Лист_" + Прав("0000000" + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="), 7);
					ОбластьЛисты = ДокументРезультат.Область(1,, ДокументРезультат.ВысотаТаблицы,);
					ОбластьЛисты.Имя = ИмяОбласти;
					ТабличныйДокумент.Вывести(ДокументРезультат);
					ПараметрыОтчета.СписокСформированныхЛистов.Добавить("3" + ИмяОбласти, "Лист " + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="));
					
					ДокументРезультат = Новый ТабличныйДокумент;
					
					ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
					СдвигНомеровГод = СдвигНомеровГод + 1;
					СдвигНомеровМесяц = СдвигНомеровМесяц + 1;
												
					ЧислоДокумента                          = Формат(ТекДата,"ДФ='дд';Л=uk_UA");
					ДатаДокумента                           = Формат(ТекДата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
					ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
					ОбластьШапка.Параметры.ДатаПрописью   	= """" + ЧислоДокумента + """" + ДатаДокументаБезЧисла;
					ОбластьШапка.Параметры.НомерЛиста 		= СоответствиеНомеровГод.Получить(НачалоДня(ТекДата)) + СдвигНомеровГод;
					
					ДокументРезультат.Вывести(ОбластьШапка);
				КонецЕсли;
				СоответствиеСдвигНомеровМесяц.Вставить(НачалоДня(ТекДата), СдвигНомеровМесяц);
				СоответствиеСдвигНомеровГод.Вставить(НачалоДня(ТекДата), СдвигНомеровГод);
				НомерСтроки = НомерСтроки + 1;
			КонецЕсли;
			
			ПриходЗаДеньВОтчет = ПриходЗаДеньВОтчет + ?(Строка.Приход = "-", 0, Строка.Приход);
			РасходЗаДеньВОтчет = РасходЗаДеньВОтчет + ?(Строка.Расход = "-", 0, Строка.Расход);
			ВалютныйПриходЗаДеньВОтчет = ВалютныйПриходЗаДеньВОтчет + ?(ЗначениеЗаполнено(Строка.ПриходВалюта), Строка.ПриходВалюта, 0);
			ВалютныйРасходЗаДеньВОтчет = ВалютныйРасходЗаДеньВОтчет + ?(ЗначениеЗаполнено(Строка.РасходВалюта), Строка.РасходВалюта, 0);
			ДокументРезультат.Вывести(ОбластьМакета);
			
		КонецЦикла;
		ТаблицаСтрокДляВывода.Очистить();
		
		ОбластьМакета = Макет.ПолучитьОбласть("ОстатокКонец");
		ОбластьМакета.Параметры.ОстатокКонец = ОстатокЗаДень;
		ОбластьМакета.Параметры.Приход = ?(ПриходЗаДеньВОтчет = 0, "-", ПриходЗаДеньВОтчет);
		ОбластьМакета.Параметры.Расход = ?(РасходЗаДеньВОтчет = 0, "-", РасходЗаДеньВОтчет);
		
		ОбластьМакета.Параметры.Бухгалтер = ОтветственныеЛица.ГлавныйБухгалтерПредставление; // Кратко
		ОбластьМакета.Параметры.Кассир    = ОтветственныеЛица.КассирПредставление; // Кратко
				
		ФорматнаяСтрока = "Л = uk_UA";
		КоличествоПКОЗаДень = ?(КоличествоПКОЗаДень = 0, "-   ", ЧислоПрописью(КоличествоПКОЗаДень, ФорматнаяСтрока));
		КоличествоРКОЗаДень = ?(КоличествоРКОЗаДень = 0, "-   ", ЧислоПрописью(КоличествоРКОЗаДень, ФорматнаяСтрока));
		КоличествоПКОЗаДень = СокрЛП(Лев(КоличествоПКОЗаДень, СтрДлина(КоличествоПКОЗаДень) - 3 ));
		КоличествоРКОЗаДень = СокрЛП(Лев(КоличествоРКОЗаДень, СтрДлина(КоличествоРКОЗаДень) - 3 ));
		ОбластьМакета.Параметры.КоличествоПКО = КоличествоПКОЗаДень;
		ОбластьМакета.Параметры.КоличествоРКО = КоличествоРКОЗаДень;

		Если ВалютнаяКасса Тогда
			ОбластьМакета.Параметры.ОстатокКонецВалюта = Формат(ВалютныйОстатокЗаДень,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
			ОбластьМакета.Параметры.ПриходВалюта = Формат(ВалютныйПриходЗаДеньВОтчет,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
			ОбластьМакета.Параметры.РасходВалюта = Формат(ВалютныйРасходЗаДеньВОтчет,"ЧЦ=15; ЧДЦ=2; ЧН=0,00");
			ОбластьМакета.Параметры.Валюта = ПараметрыОтчета.Валюта.Наименование;
		КонецЕсли;
		// количество листов за месяц
		Если ПараметрыОтчета.ВидЛистаКассовойКниги = "Конец месяца" Тогда	
			КоличествоЛистовМесяц = СоответствиеНомеровМесяц.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровМесяц.Получить(НачалоДня(ТекДата)) - НачальныйНомерЛистаМесяц + 1; 
			ОбластьМакета.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " + КоличествоЛистовМесяц;
		КонецЕсли;	
		// количество листов за год
		Если ПараметрыОтчета.ВидЛистаКассовойКниги = "Конец года" Тогда
			КоличествоЛистовМесяц = СоответствиеНомеровМесяц.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровМесяц.Получить(НачалоДня(ТекДата)) - НачальныйНомерЛистаМесяц + 1; 
			ОбластьМакета.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " + КоличествоЛистовМесяц;
			КоличествоЛистовГод = СоответствиеНомеровГод.Получить(НачалоДня(ТекДата)) + СоответствиеСдвигНомеровГод.Получить(НачалоДня(ТекДата)) - НачальныйНомерЛиста + 1; 
			ОбластьМакета.Параметры.КоличествоЛистовГод = "Листів з початку року: " + КоличествоЛистовГод; 
		КонецЕсли;
		ДокументРезультат.Вывести(ОбластьМакета);
		
		ИмяОбласти = "Лист_" + Прав("0000000" + Формат(НомерЛиста, "ЧН=; ЧГ="), 7);
		ОбластьЛисты = ДокументРезультат.Область(1,, ДокументРезультат.ВысотаТаблицы,);
		ОбластьЛисты.Имя = ИмяОбласти;
		ДокументРезультат.ТолькоПросмотр = Истина;
		ТабличныйДокумент.Вывести(ДокументРезультат);
		ПараметрыОтчета.СписокСформированныхЛистов.Добавить("3" + ИмяОбласти, "Лист " + Формат(НомерЛиста, "ЧН=; ЧГ="));
		
		ДокументРезультат = Новый ТабличныйДокумент;
		
	КонецЕсли;	
	
	// проверим наличие ПКО с приемом прозничной выручки по АТТ, не подтвержденные ОтчетамиОРозничныхПродажах.
	Для каждого ПКО Из ТаблицаПКОпоАТТ Цикл
				
		Если НЕ ПКО.ПКОУчтен Тогда
			Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По ПКО %1 за %2 нет зарегистрированных документов ""Отчет о розничных продажах"".';uk='По ПКО %1 за %2 немає зареєстрованих  документів ""Звіт про роздрібні продажі"".'"),
			ПКО.Ссылка, Формат(ПКО.Дата,"ДФ=dd.MM.yyyy")));
		Иначе
					
			Если ПКО.СуммаПродаж > 0 Тогда
				Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По ПКО %1 за %2 нет зарегистрированных документов ""Отчет о розничных продажах"" на сумму продаж %3.';uk='По ПКО %1 за %2 немає зареєстрованих  документів ""Звіт про роздрібні продажі"" на суму продажу %3.'"),
				ПКО.Ссылка, Формат(ПКО.Дата,"ДФ=dd.MM.yyyy"), Формат(ПКО.СуммаПродаж,"ЧДЦ=2; ЧГ=0")));
			КонецЕсли;
					
			Если ПКО.СуммаВозвратов > 0 Тогда
				Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='По ПКО %1 за %2 нет зарегистрированных документов ""Отчет о розничных продажах"" на сумму повернень %3.';uk='По ПКО %1 за %2 немає зареєстрованих  документів ""Звіт про роздрібні продажі"" на суму повернень %3.'"),
				ПКО.Ссылка, Формат(ПКО.Дата,"ДФ=dd.MM.yyyy"), Формат(ПКО.СуммаВозвратов,"ЧДЦ=2; ЧГ=0")));
			КонецЕсли;
					
		КонецЕсли;
				
	КонецЦикла;
	
	ЗаписатьПоследнийНомерЛиста(СтруктураНомеров, ПараметрыОтчета);	
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ПараметрыОтчета.Вставить("ТабличныйДокумент", ТабличныйДокумент);
	
КонецПроцедуры // СформироватьЛистыКассовойКниги

Процедура СформироватьЖурналРегистрацииПриходных(ПараметрыОтчета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент; // Итоговый табличный документ листа кассовой книги
	ДокументРезультат = Новый ТабличныйДокумент; // Промежуточный табличный документ листа кассовой книги
	
	Вариант2018 = Истина;
	Если ПараметрыОтчета.ДатаКон >= Дата('20180105') Тогда
		Макет = ПолучитьМакет("ЖурналРегистрации2018");
	Иначе
		Макет = ПолучитьМакет("ЖурналРегистрации");
		Вариант2018 = Ложь;
	КонецЕсли;
	
	Если Не Вариант2018 Тогда
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	
	// Печать обложки и титульного листа
	СформироватьОбложкуЖурналРегистрации(ДокументРезультат, ПараметрыОтчета);
	ВысотаТаблицыЗаголовка = ДокументРезультат.ВысотаТаблицы;
	
	//Запрос по ордерам
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",	 НачалоДня(ПараметрыОтчета.ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",	 КонецДня(ПараметрыОтчета.ДатаКон));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Валюта",		 ПараметрыОтчета.Валюта);
	Запрос.УстановитьПараметр("Вариант2018", Вариант2018);
	
	Если ПараметрыОтчета.ЕстьУчетПоОбособленнымПодразделениям Тогда
		УсловиеПоОбособленномуПодразделению = " И (ПриходныйКассовыйОрдер.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации) ";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ПараметрыОтчета.ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	Запрос.Текст="ВЫБРАТЬ
				 |	НАЧАЛОПЕРИОДА(ПриходныйКассовыйОрдер.Дата, ДЕНЬ) КАК День,
				 |	ПриходныйКассовыйОрдер.Ссылка КАК Ордер,
				 |	ВЫБОР 
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
				 |		ТОГДА ""000000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
				 |		ТОГДА ""00000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
				 |		ТОГДА ""0000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
				 |		ТОГДА ""000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
				 |		ТОГДА ""00000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
				 |		ТОГДА ""0000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
				 |		ТОГДА ""000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
				 |		ТОГДА ""00"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
				 |		ТОГДА ""0"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	ИНАЧЕ ПриходныйКассовыйОрдер.НомерОрдера
				 | КОНЕЦ КАК НомерОрдераПорядок,
				 |	ПриходныйКассовыйОрдер.НомерОрдера КАК НомерОрдера,
				 |	ПриходныйКассовыйОрдер.ВалютаДокумента КАК Валюта,
    			 |	ПриходныйКассовыйОрдер.СуммаДокумента КАК Приход,
				 |	ВЫБОР
				 |		КОГДА &Вариант2018
				 |			ТОГДА ВЫБОР
				 |					КОГДА ПриходныйКассовыйОрдер.НазначениеДенежныхСредств = ЗНАЧЕНИЕ(Справочник.НазначенияНаличныхДенежныхСредств.ОплатаТруда)
				 |						ТОГДА ЗНАЧЕНИЕ(Справочник.НазначенияНаличныхДенежныхСредств.ОплатаТруда)
				 |					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НазначенияНаличныхДенежныхСредств.Командировка)
				 |				КОНЕЦ
				 |		ИНАЧЕ ПриходныйКассовыйОрдер.НазначениеДенежныхСредств
				 |	КОНЕЦ КАК Назначение,
				 |	ВЫБОР
				 |		КОГДА &Вариант2018
				 |			ТОГДА """"
				 |		ИНАЧЕ ПриходныйКассовыйОрдер.НазначениеДенежныхСредств.Наименование
				 |	КОНЕЦ КАК НаименованиеНазначения,
				 |	ПриходныйКассовыйОрдер.Комментарий КАК Комментарий
				 |ИЗ
				 |		Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
				 |	ГДЕ
				 |		(ПриходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ) И
				 |		(ПриходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон) И
				 |		(ПриходныйКассовыйОрдер.Организация = &Организация) И
				 |		(ПриходныйКассовыйОрдер.ВалютаДокумента = &Валюта) И
				 |		(ПриходныйКассовыйОрдер.Проведен)" + УсловиеПоОбособленномуПодразделению + "
				 |УПОРЯДОЧИТЬ ПО
				 |	День,
				 |  НомерОрдераПорядок";
				 
	РезультатЗапроса = Запрос.Выполнить();
	Результат = РезультатЗапроса.Выбрать();
	
	ТаблицаНазначения = РезультатЗапроса.Выгрузить();
	ТаблицаНазначения.Свернуть("Назначение, НаименованиеНазначения", "Приход");
	ТаблицаНазначения.Колонки.Добавить("НомерКолонки");
	
	//Эти два назначения должны присутствовать в шапке обязательно, в не зависимости от наличия движения по этим назначениям
	МассивОбязательныхНазначений = Новый Массив;
	МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда);
	МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.Командировка);
	
	Для каждого Назначение Из МассивОбязательныхНазначений Цикл
		СтрокаНазначения = ТаблицаНазначения.Найти(Назначение, "Назначение");
		Если СтрокаНазначения = Неопределено Тогда
			СтрокаНазначения = ТаблицаНазначения.Добавить();
			СтрокаНазначения.Назначение = Назначение;
			СтрокаНазначения.Приход = 0;
		КонецЕсли;
		СтрокаНазначения.НомерКолонки 			= ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда, 3, 4);
		СтрокаНазначения.НаименованиеНазначения = ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда,
			"На заробітну плату, премії, стипендії", "На відрядження та інші цілі"); 
	КонецЦикла; 
	
	Если Вариант2018 Тогда
		ТаблицаНазначения.Сортировать("НомерКолонки");
	Иначе
	
		//Проставим номера для оставшихся назначений
		НомерКолонки = 5;
		СтрокиНазначенияКВыводу = ТаблицаНазначения.НайтиСтроки(Новый Структура("НомерКолонки", Неопределено));
		КоличествоСтрок = СтрокиНазначенияКВыводу.Количество();
		Если КоличествоСтрок = 0 Тогда
			//Также если нет движения по другим назначениям, кроме обязательных - необходимо добавить колонку без наименования (колонка 5)
			СтрокаНазначения = ТаблицаНазначения.Добавить();
			СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка();
			СтрокаНазначения.Приход = 0;
			СтрокаНазначения.НаименованиеНазначения = "";
			СтрокаНазначения.НомерКолонки = НомерКолонки;
		Иначе
			Для каждого СтрокаНазначения Из СтрокиНазначенияКВыводу Цикл
				//Пустая должна быть последней колонкой из назначений
				Если СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка() Тогда
					СтрокаНазначения.НомерКолонки = КоличествоСтрок + 4;
					СтрокаНазначения.НаименованиеНазначения = "";
				Иначе
					СтрокаНазначения.НомерКолонки = НомерКолонки;
					НомерКолонки = НомерКолонки + 1;
				КонецЕсли; 		
			КонецЦикла;
		КонецЕсли; 	
	
		ТаблицаНазначения.Сортировать("НомерКолонки");
		
		КоличествоНазначенийКВыводу = ТаблицаНазначения.Количество();
		ЦентральнаяКолонка = Окр(КоличествоНазначенийКВыводу / 2) + 2;
		
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|ДатаНомер");
	ОбластьМакета.Параметры.ВидДокумента = "Прибутковий документ";
	ДокументРезультат.Вывести(ОбластьМакета);
	
	Если Вариант2018 Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Назначение");
		ОбластьМакета.Параметры.ТекстШапки = "Надійшло грошей";
		ДокументРезультат.Присоединить(ОбластьМакета);
	Иначе
		Для Каждого Назначение из ТаблицаНазначения Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Назначение");
			ОбластьМакета.Параметры.Назначение   = Назначение.НаименованиеНазначения; 
			ОбластьМакета.Параметры.НомерКолонки = Назначение.НомерКолонки;
			Если Назначение.НомерКолонки = ЦентральнаяКолонка Тогда
				ОбластьМакета.Параметры.ТекстШапки = "Надійшло грошей";
			КонецЕсли;
			ДокументРезультат.Присоединить(ОбластьМакета);
		КонецЦикла;
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Комментарий");
	Если Не Вариант2018 Тогда
		ОбластьМакета.Параметры.НомерКолонки = КоличествоНазначенийКВыводу + 3;
	КонецЕсли;
	ДокументРезультат.Присоединить(ОбластьМакета);
	
	НомерЛиста = 1;
	НомерСтроки = 1;
	
	//Вывод таблицы
	Пока Результат.Следующий() Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|ДатаНомер");
		Если Вариант2018 Тогда
			ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки + 1;
		КонецЕсли;
		ОбластьМакета.Параметры.Дата = Результат.День;
		ОбластьМакета.Параметры.Номер = Результат.НомерОрдера;
		ОбластьМакета.Параметры.Ордер = Результат.Ордер;
		Если НЕ ДокументРезультат.ПроверитьВывод(ОбластьМакета) Тогда
			
			// Выведем разрыв страницы
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			
			НомерЛистаДляПерехода = НомерЛиста;
			НомерЛиста = НомерЛиста + 1;
			ИмяОбласти = "Лист_" + Прав("0000000" + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="), 7);
			ОбластьЛисты = ДокументРезультат.Область(1,, ДокументРезультат.ВысотаТаблицы,);
			ОбластьЛисты.Имя = ИмяОбласти;
			//ОбластьЛисты.СоздатьФорматСтрок();
			ТабличныйДокумент.Вывести(ДокументРезультат);
			ПараметрыОтчета.СписокСформированныхЛистов.Добавить("3" + ИмяОбласти, "Лист " + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="));
			
			ДокументРезультат = Новый ТабличныйДокумент;
			ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
		КонецЕсли;
			
		ДокументРезультат.Вывести(ОбластьМакета);
			
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|Назначение");
		Если Вариант2018 Тогда
			ИмяПараметра = ?(Результат.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда, 
				"СуммаДокументаЗарплата", "СуммаДокументаКомандировка"); 
			ОбластьМакета.Параметры[ИмяПараметра] = Результат.Приход;
			ОбластьМакета.Параметры.Ордер = Результат.Ордер;
			ДокументРезультат.Присоединить(ОбластьМакета);
		Иначе
			Для Каждого СтрокаНазначения из ТаблицаНазначения Цикл
				ОбластьМакета.Параметры.СуммаДокумента = ?(Результат.Назначение = СтрокаНазначения.Назначение, Результат.Приход, 0);
				ОбластьМакета.Параметры.Ордер = Результат.Ордер;
				ДокументРезультат.Присоединить(ОбластьМакета);
			КонецЦикла;
		КонецЕсли;
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|Комментарий");
		ОбластьМакета.Параметры.Комментарий = Результат.Комментарий;
		ОбластьМакета.Параметры.Ордер = Результат.Ордер;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;	
	
	//Вывод всего
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|ДатаНомер");
	ДокументРезультат.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|Назначение");
	Если Вариант2018 Тогда
		ОбластьМакета.Параметры.СуммаВсегоЗарплата = ТаблицаНазначения[0].Приход;
		ОбластьМакета.Параметры.СуммаВсегоКомандировка = ТаблицаНазначения[1].Приход;
		ДокументРезультат.Присоединить(ОбластьМакета);
	Иначе	
		Для Каждого Назначение из ТаблицаНазначения Цикл
			ОбластьМакета.Параметры.СуммаВсего = Назначение.Приход;
			ДокументРезультат.Присоединить(ОбластьМакета);
		КонецЦикла;
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|Комментарий");
	ДокументРезультат.Присоединить(ОбластьМакета);
	
	ИмяОбласти = "Лист_" + Прав("0000000" + Формат(НомерЛиста, "ЧН=; ЧГ="), 7);
	ОбластьЛисты = ДокументРезультат.Область(ВысотаТаблицыЗаголовка + 1,, ДокументРезультат.ВысотаТаблицы,);
	ОбластьЛисты.Имя = ИмяОбласти;
	ОбластьЛисты.СоздатьФорматСтрок(); 
	ДокументРезультат.ТолькоПросмотр = Истина;
	ТабличныйДокумент.Вывести(ДокументРезультат);
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить("3" + ИмяОбласти, "Лист " + Формат(НомерЛиста, "ЧН=; ЧГ="));
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ПараметрыОтчета.Вставить("ТабличныйДокумент", ТабличныйДокумент);
	
КонецПроцедуры	

Процедура СформироватьЖурналРегистрацииРасходных(ПараметрыОтчета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент; // Итоговый табличный документ листа кассовой книги
	ДокументРезультат = Новый ТабличныйДокумент; // Промежуточный табличный документ листа кассовой книги
	
	Вариант2018 = Истина;
	Если ПараметрыОтчета.ДатаКон >= Дата('20180105') Тогда
		Макет = ПолучитьМакет("ЖурналРегистрации2018");
	Иначе
		Макет = ПолучитьМакет("ЖурналРегистрации");
		Вариант2018 = Ложь;
	КонецЕсли;
	
	Если Не Вариант2018 Тогда
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;	
	
	// Печать обложки и титульного листа
	СформироватьОбложкуЖурналРегистрации(ДокументРезультат, ПараметрыОтчета);
	
	ВысотаТаблицыЗаголовка = ДокументРезультат.ВысотаТаблицы;
	
	//Запрос по ордерам
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",	 НачалоДня(ПараметрыОтчета.ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",	 КонецДня(ПараметрыОтчета.ДатаКон));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Валюта",		 ПараметрыОтчета.Валюта);
	Запрос.УстановитьПараметр("Вариант2018", Вариант2018);

	Если ПараметрыОтчета.ЕстьУчетПоОбособленнымПодразделениям Тогда
		УсловиеПоОбособленномуПодразделению = " И (РасходныйКассовыйОрдер.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации) ";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ПараметрыОтчета.ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	Запрос.Текст="ВЫБРАТЬ
				 |	НАЧАЛОПЕРИОДА(РасходныйКассовыйОрдер.Дата, ДЕНЬ) КАК День,
				 |	РасходныйКассовыйОрдер.Ссылка КАК Ордер,
				 |	ВЫБОР 
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
				 |		ТОГДА ""000000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
				 |		ТОГДА ""00000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
				 |		ТОГДА ""0000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
				 |		ТОГДА ""000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
				 |		ТОГДА ""00000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
				 |		ТОГДА ""0000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
				 |		ТОГДА ""000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
				 |		ТОГДА ""00"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
				 |		ТОГДА ""0"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	ИНАЧЕ РасходныйКассовыйОрдер.НомерОрдера
				 | КОНЕЦ КАК НомерОрдераПорядок,
				 |	РасходныйКассовыйОрдер.НомерОрдера КАК НомерОрдера,
				 |	РасходныйКассовыйОрдер.ВалютаДокумента КАК Валюта,
    			 |	РасходныйКассовыйОрдер.СуммаДокумента КАК Расход,
				 |	ВЫБОР
				 |		КОГДА &Вариант2018
				 |			ТОГДА ВЫБОР
				 |					КОГДА РасходныйКассовыйОрдер.НазначениеДенежныхСредств = ЗНАЧЕНИЕ(Справочник.НазначенияНаличныхДенежныхСредств.ОплатаТруда)
				 |						ТОГДА ЗНАЧЕНИЕ(Справочник.НазначенияНаличныхДенежныхСредств.ОплатаТруда)
				 |					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НазначенияНаличныхДенежныхСредств.Командировка)
				 |				КОНЕЦ
				 |		ИНАЧЕ РасходныйКассовыйОрдер.НазначениеДенежныхСредств
				 |	КОНЕЦ КАК Назначение,
				 |	ВЫБОР
				 |		КОГДА &Вариант2018
				 |			ТОГДА """"
				 |		ИНАЧЕ РасходныйКассовыйОрдер.НазначениеДенежныхСредств.Наименование
				 |	КОНЕЦ КАК НаименованиеНазначения,
				 |	РасходныйКассовыйОрдер.Комментарий КАК Комментарий
				 |ИЗ
				 |		Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
				 |	ГДЕ
				 |		(РасходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ) И
				 |		(РасходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон) И
				 |		(РасходныйКассовыйОрдер.Организация = &Организация) И
				 |		(РасходныйКассовыйОрдер.ВалютаДокумента = &Валюта) И
				 |		(РасходныйКассовыйОрдер.Проведен)" + УсловиеПоОбособленномуПодразделению +
				 "УПОРЯДОЧИТЬ ПО
				 |	День,
				 |	НомерОрдераПорядок";
				 
				 
	РезультатЗапроса = Запрос.Выполнить();
	Результат = РезультатЗапроса.Выбрать();
	
	ТаблицаНазначения = РезультатЗапроса.Выгрузить();
	ТаблицаНазначения.Свернуть("Назначение, НаименованиеНазначения", "Расход");
	ТаблицаНазначения.Колонки.Добавить("НомерКолонки");
	
	//Эти два назначения должны присутствовать в шапке обязательно, в не зависимости от наличия движения по этим назначениям
	МассивОбязательныхНазначений = Новый Массив;
	МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда);
	МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.Командировка);
	
	Для каждого Назначение Из МассивОбязательныхНазначений Цикл
		СтрокаНазначения = ТаблицаНазначения.Найти(Назначение, "Назначение");
		Если СтрокаНазначения = Неопределено Тогда
			СтрокаНазначения = ТаблицаНазначения.Добавить();
			СтрокаНазначения.Назначение = Назначение;
			СтрокаНазначения.Расход = 0;
		КонецЕсли;
		СтрокаНазначения.НомерКолонки 			= ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда, 3, 4);
		СтрокаНазначения.НаименованиеНазначения = ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда,
			"На заробітну плату, премії, стипендії", "На відрядження та інші цілі"); 
	КонецЦикла; 
	
	Если Вариант2018 Тогда
		ТаблицаНазначения.Сортировать("НомерКолонки");
	Иначе
	
		//Проставим номера для оставшихся назначений
		НомерКолонки = 5;
		СтрокиНазначенияКВыводу = ТаблицаНазначения.НайтиСтроки(Новый Структура("НомерКолонки", Неопределено));
		КоличествоСтрок = СтрокиНазначенияКВыводу.Количество();
		Если КоличествоСтрок = 0 Тогда
			//Также если нет движения по другим назначениям, кроме обязательных - необходимо добавить колонку без наименования (колонка 5)
			СтрокаНазначения = ТаблицаНазначения.Добавить();
			СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка();
			СтрокаНазначения.Расход = 0;
			СтрокаНазначения.НаименованиеНазначения = "";
			СтрокаНазначения.НомерКолонки = НомерКолонки;
		Иначе
			Для каждого СтрокаНазначения Из СтрокиНазначенияКВыводу Цикл
				//Пустая должна быть последней колонкой из назначений
				Если СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка() Тогда
					СтрокаНазначения.НомерКолонки = КоличествоСтрок + 4;
					СтрокаНазначения.НаименованиеНазначения = "";
				Иначе
					СтрокаНазначения.НомерКолонки = НомерКолонки;
					НомерКолонки = НомерКолонки + 1;
				КонецЕсли; 		
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаНазначения.Сортировать("НомерКолонки");
		
		КоличествоНазначенийКВыводу = ТаблицаНазначения.Количество();
		ЦентральнаяКолонка = Окр(КоличествоНазначенийКВыводу / 2) + 2;
		
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|ДатаНомер");
	ОбластьМакета.Параметры.ВидДокумента = "Видатковий документ";
	ДокументРезультат.Вывести(ОбластьМакета);
	
	Если Вариант2018 Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Назначение");
		ОбластьМакета.Параметры.ТекстШапки = "Витрачено грошей";
		ДокументРезультат.Присоединить(ОбластьМакета);
	Иначе
		Для Каждого Назначение из ТаблицаНазначения Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Назначение");
			ОбластьМакета.Параметры.Назначение   = Назначение.НаименованиеНазначения;
			ОбластьМакета.Параметры.НомерКолонки = Назначение.НомерКолонки;
			Если Назначение.НомерКолонки = ЦентральнаяКолонка Тогда
				ОбластьМакета.Параметры.ТекстШапки = "Витрачено грошей";
			КонецЕсли;
			ДокументРезультат.Присоединить(ОбластьМакета);
		КонецЦикла;
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Комментарий");
	Если Не Вариант2018 Тогда
		ОбластьМакета.Параметры.НомерКолонки = КоличествоНазначенийКВыводу + 3;
	КонецЕсли;
	ДокументРезультат.Присоединить(ОбластьМакета);
	
	//Вывод таблицы
	НомерЛиста = 1;
	НомерСтроки = 1;
	
	Пока Результат.Следующий() Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|ДатаНомер");
		Если Вариант2018 Тогда
			ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки + 1;
		КонецЕсли;
		ОбластьМакета.Параметры.Дата = Результат.День;
		ОбластьМакета.Параметры.Номер = Результат.НомерОрдера;
		ОбластьМакета.Параметры.Ордер = Результат.Ордер;
		Если НЕ ДокументРезультат.ПроверитьВывод(ОбластьМакета) Тогда
			
			// Выведем разрыв страницы
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			
			НомерЛистаДляПерехода = НомерЛиста;
			НомерЛиста = НомерЛиста + 1;
			ИмяОбласти = "Лист_" + Прав("0000000" + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="), 7);
			ОбластьЛисты = ДокументРезультат.Область(1,, ДокументРезультат.ВысотаТаблицы,);
			ОбластьЛисты.Имя = ИмяОбласти;
			//ОбластьЛисты.СоздатьФорматСтрок();
			ТабличныйДокумент.Вывести(ДокументРезультат);
			ПараметрыОтчета.СписокСформированныхЛистов.Добавить("3" + ИмяОбласти, "Лист " + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="));
			
			ДокументРезультат = Новый ТабличныйДокумент;
			ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
		КонецЕсли;
			
		ДокументРезультат.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|Назначение");
		Если Вариант2018 Тогда
			ИмяПараметра = ?(Результат.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда, 
				"СуммаДокументаЗарплата", "СуммаДокументаКомандировка"); 
			ОбластьМакета.Параметры[ИмяПараметра] = Результат.Расход;
			ОбластьМакета.Параметры.Ордер = Результат.Ордер;
			ДокументРезультат.Присоединить(ОбластьМакета);
		Иначе
			Для Каждого СтрокаНазначения из ТаблицаНазначения Цикл
				ОбластьМакета.Параметры.СуммаДокумента = ?(Результат.Назначение = СтрокаНазначения.Назначение, Результат.Расход, 0);
				ОбластьМакета.Параметры.Ордер = Результат.Ордер;
				ДокументРезультат.Присоединить(ОбластьМакета);
			КонецЦикла;
		КонецЕсли;
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|Комментарий");
		ОбластьМакета.Параметры.Комментарий = Результат.Комментарий;
		ОбластьМакета.Параметры.Ордер = Результат.Ордер;
		ДокументРезультат.Присоединить(ОбластьМакета);
	КонецЦикла;	
	
	//Вывод всего
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|ДатаНомер");
	ДокументРезультат.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|Назначение");
	Если Вариант2018 Тогда
		ОбластьМакета.Параметры.СуммаВсегоЗарплата = ТаблицаНазначения[0].Расход;
		ОбластьМакета.Параметры.СуммаВсегоКомандировка = ТаблицаНазначения[1].Расход;
		ДокументРезультат.Присоединить(ОбластьМакета);
	Иначе
		Для Каждого Назначение из ТаблицаНазначения Цикл
			ОбластьМакета.Параметры.СуммаВсего = Назначение.Расход;
			ДокументРезультат.Присоединить(ОбластьМакета);
		КонецЦикла;
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Всего|Комментарий");

	ДокументРезультат.Присоединить(ОбластьМакета);
	
	ИмяОбласти = "Лист_" + Прав("0000000" + Формат(НомерЛиста, "ЧН=; ЧГ="), 7);
	ОбластьЛисты = ДокументРезультат.Область(ВысотаТаблицыЗаголовка + 1,, ДокументРезультат.ВысотаТаблицы,);
	ОбластьЛисты.Имя = ИмяОбласти;
	ОбластьЛисты.СоздатьФорматСтрок(); 
	ДокументРезультат.ТолькоПросмотр = Истина;
	ТабличныйДокумент.Вывести(ДокументРезультат);
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить("3" + ИмяОбласти, "Лист " + Формат(НомерЛиста, "ЧН=; ЧГ="));
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ПараметрыОтчета.Вставить("ТабличныйДокумент", ТабличныйДокумент);
	
КонецПроцедуры

Процедура СформироватьЖурналРегистрацииРасходныхИПриходных(ПараметрыОтчета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент; // Итоговый табличный документ листа кассовой книги
	ДокументРезультат = Новый ТабличныйДокумент; // Промежуточный табличный документ листа кассовой книги
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	//Вывод шапки
	Вариант2018 = Истина;
	Если ПараметрыОтчета.ДатаКон >= Дата('20180105') Тогда
		Макет = ПолучитьМакет("ЖурналРегистрации3а2018");
	Иначе
		Макет = ПолучитьМакет("ЖурналРегистрации3а");
		Вариант2018 = Ложь;
	КонецЕсли;
	
	// Печать обложки и титульного листа
	СформироватьОбложкуЖурналРегистрации3а(ДокументРезультат, ПараметрыОтчета);
	
	ВысотаТаблицыЗаголовка = ДокументРезультат.ВысотаТаблицы;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ДокументРезультат.Вывести(ОбластьМакета);
	
	//Запрос по ордерам
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",	 НачалоДня(ПараметрыОтчета.ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",	 КонецДня(ПараметрыОтчета.ДатаКон));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Валюта",		 ПараметрыОтчета.Валюта);
	
	Если ПараметрыОтчета.ЕстьУчетПоОбособленнымПодразделениям Тогда
		УсловиеПоОбособленномуПодразделению = " И (ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации) ";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ПараметрыОтчета.ОбособленноеПодразделениеОрганизации);
	КонецЕсли;
	
	ВыводитьКаждыйДокументВОтдельнойСтроке = ПараметрыОтчета.ВыводитьКаждыйДокументВОтдельнойСтроке;	
	
	Запрос.Текст="ВЫБРАТЬ
				 |	НАЧАЛОПЕРИОДА(РасходныйКассовыйОрдер.Дата, ДЕНЬ) КАК ДеньРасход,
				 |	РасходныйКассовыйОрдер.Ссылка 					 КАК ОрдерРасход,
				 |	1 					 							 КАК ТипДокумента,
				 |	РасходныйКассовыйОрдер.НомерОрдера 				 КАК НомерОрдераРасход,
				 |	ВЫБОР 
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
				 |		ТОГДА ""000000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
				 |		ТОГДА ""00000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
				 |		ТОГДА ""0000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
				 |		ТОГДА ""000000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
				 |		ТОГДА ""00000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
				 |		ТОГДА ""0000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
				 |		ТОГДА ""000"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
				 |		ТОГДА ""00"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
				 |		ТОГДА ""0"" + РасходныйКассовыйОрдер.НомерОрдера
				 |	ИНАЧЕ РасходныйКассовыйОрдер.НомерОрдера
				 | КОНЕЦ КАК НомерОрдераРасходПорядок,
    			 |	РасходныйКассовыйОрдер.СуммаДокумента 			 КАК СуммаРасход,
				 |	РасходныйКассовыйОрдер.Комментарий 				 КАК КомментарийРасход
				 |ИЗ
				 |		Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
				 |	ГДЕ
				 |		(РасходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ) И
				 |		(РасходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон) И
				 |		(РасходныйКассовыйОрдер.Организация = &Организация) И
				 |		(РасходныйКассовыйОрдер.ВалютаДокумента = &Валюта) И
				 |		(РасходныйКассовыйОрдер.Проведен)" + УсловиеПоОбособленномуПодразделению + "
				 |	" + ?(ВыводитьКаждыйДокументВОтдельнойСтроке,"","
				 |УПОРЯДОЧИТЬ ПО
				 |	ДеньРасход,
				 |	НомерОрдераРасходПорядок");
				 			 
	ТекстПриход="ВЫБРАТЬ
				 |	НАЧАЛОПЕРИОДА(ПриходныйКассовыйОрдер.Дата, ДЕНЬ) КАК ДеньПриход,
				 |	ПриходныйКассовыйОрдер.Ссылка 					 КАК ОрдерПриход,
				 |	0 					 							 КАК ТипДокумента,
				 |	ПриходныйКассовыйОрдер.НомерОрдера 				 КАК НомерОрдераПриход,
				 |	ВЫБОР 
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
				 |		ТОГДА ""000000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
				 |		ТОГДА ""00000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
				 |		ТОГДА ""0000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
				 |		ТОГДА ""000000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
				 |		ТОГДА ""00000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
				 |		ТОГДА ""0000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
				 |		ТОГДА ""000"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
				 |		ТОГДА ""00"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
				 |		ТОГДА ""0"" + ПриходныйКассовыйОрдер.НомерОрдера
				 |	ИНАЧЕ ПриходныйКассовыйОрдер.НомерОрдера
				 | КОНЕЦ КАК НомерОрдераПриходПорядок,
    			 |	ПриходныйКассовыйОрдер.СуммаДокумента 			 КАК СуммаПриход,
				 |	ПриходныйКассовыйОрдер.Комментарий 				 КАК КомментарийПриход
				 |ИЗ
				 |		Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
				 |	ГДЕ
				 |		(ПриходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ) И
				 |		(ПриходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон) И
				 |		(ПриходныйКассовыйОрдер.Организация = &Организация) И
				 |		(ПриходныйКассовыйОрдер.ВалютаДокумента = &Валюта) И
				 |		(ПриходныйКассовыйОрдер.Проведен)" + УсловиеПоОбособленномуПодразделению + "
				 |	" + ?(ВыводитьКаждыйДокументВОтдельнойСтроке,"","
				 |УПОРЯДОЧИТЬ ПО
				 |	ДеньПриход,
				 |	НомерОрдераПриходПорядок");
				 
	Если НЕ ВыводитьКаждыйДокументВОтдельнойСтроке Тогда
		РезультатРасход = Запрос.Выполнить().Выбрать();
		Запрос.Текст 	= ТекстПриход;
		РезультатПриход = Запрос.Выполнить().Выбрать()
	Иначе
		Запрос.Текст = 
			Запрос.Текст + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|" + ТекстПриход + "
			|УПОРЯДОЧИТЬ ПО
			|	ДеньРасход,
			|	ТипДокумента,
			|	НомерОрдераРасходПорядок";
			
		Результат = Запрос.Выполнить().Выбрать();	
	КонецЕсли;
	
	НомерЛиста = 1;
	НомерСтроки = 1;
	
	Пока 1=1 Цикл
		
		ЕстьЗапись = Ложь;
		
		Если ВыводитьКаждыйДокументВОтдельнойСтроке Тогда
			
			Если Результат.Следующий() Тогда
			
				ЕстьЗапись = Истина;
				
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
				
				Если Результат.ТипДокумента = 0 Тогда
				
					ОбластьМакета.Параметры.ДатаПриход  		= Результат.ДеньРасход;
					ОбластьМакета.Параметры.НомерПриход 		= Результат.НомерОрдераРасход;
					ОбластьМакета.Параметры.ОрдерПриход			= Результат.ОрдерРасход;
					ОбластьМакета.Параметры.СуммаПриход 		= Результат.СуммаРасход;
					ОбластьМакета.Параметры.КомментарийПриход 	= Результат.КомментарийРасход;
					
				Иначе
					
					ОбластьМакета.Параметры.ДатаРасход  		= Результат.ДеньРасход;
					ОбластьМакета.Параметры.НомерРасход 		= Результат.НомерОрдераРасход;
					ОбластьМакета.Параметры.ОрдерРасход 		= Результат.ОрдерРасход;
					ОбластьМакета.Параметры.СуммаРасход 	 	= Результат.СуммаРасход;
					ОбластьМакета.Параметры.КомментарийРасход 	= Результат.КомментарийРасход;
				
				КонецЕсли; 	
			КонецЕсли;
			
		Иначе
			Если РезультатПриход.Следующий() Тогда
				
				ЕстьЗапись = Истина;
				
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
				ОбластьМакета.Параметры.ДатаПриход  		= РезультатПриход.ДеньПриход;
				ОбластьМакета.Параметры.НомерПриход 		= РезультатПриход.НомерОрдераПриход;
				ОбластьМакета.Параметры.ОрдерПриход			= РезультатПриход.ОрдерПриход;
				ОбластьМакета.Параметры.СуммаПриход 		= РезультатПриход.СуммаПриход;
				ОбластьМакета.Параметры.КомментарийПриход 	= РезультатПриход.КомментарийПриход;
				
			КонецЕсли;	
			
			Если РезультатРасход.Следующий() Тогда
				
				Если Не ЕстьЗапись Тогда
					ОбластьМакета = Макет.ПолучитьОбласть("Строка");	
				КонецЕсли;
				
				ЕстьЗапись = Истина;
				
				ОбластьМакета.Параметры.ДатаРасход  		= РезультатРасход.ДеньРасход;
				ОбластьМакета.Параметры.НомерРасход 		= РезультатРасход.НомерОрдераРасход;
				ОбластьМакета.Параметры.ОрдерРасход 		= РезультатРасход.ОрдерРасход;
				ОбластьМакета.Параметры.СуммаРасход 	 	= РезультатРасход.СуммаРасход;
				ОбластьМакета.Параметры.КомментарийРасход 	= РезультатРасход.КомментарийРасход;
				
			КонецЕсли;
		КонецЕсли;
		
		Если ЕстьЗапись Тогда
			Если НЕ ДокументРезультат.ПроверитьВывод(ОбластьМакета) Тогда
				
				// Выведем разрыв страницы
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				
				НомерЛистаДляПерехода = НомерЛиста;
				НомерЛиста = НомерЛиста + 1;
				ИмяОбласти = "Лист_" + Прав("0000000" + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="), 7);
				ОбластьЛисты = ДокументРезультат.Область(1,, ДокументРезультат.ВысотаТаблицы,);
				ОбластьЛисты.Имя = ИмяОбласти;
				//ОбластьЛисты.СоздатьФорматСтрок();
				ТабличныйДокумент.Вывести(ДокументРезультат);
				ПараметрыОтчета.СписокСформированныхЛистов.Добавить("3" + ИмяОбласти, "Лист " + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="));
				
				ДокументРезультат = Новый ТабличныйДокумент;
				ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
				
			КонецЕсли;
			
			Если Вариант2018 Тогда
				ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
				НомерСтроки = НомерСтроки + 1;
			КонецЕсли;
			
			ДокументРезультат.Вывести(ОбластьМакета);
		Иначе
			Прервать;	
		КонецЕсли; 
	
	КонецЦикла; 
	
	ИмяОбласти = "Лист_" + Прав("0000000" + Формат(НомерЛиста, "ЧН=; ЧГ="), 7);
	ОбластьЛисты = ДокументРезультат.Область(ВысотаТаблицыЗаголовка + 1,, ДокументРезультат.ВысотаТаблицы,);
	ОбластьЛисты.Имя = ИмяОбласти;
	ОбластьЛисты.СоздатьФорматСтрок(); 
	ДокументРезультат.ТолькоПросмотр = Истина;
	ТабличныйДокумент.Вывести(ДокументРезультат);
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить("3" + ИмяОбласти, "Лист " + Формат(НомерЛиста, "ЧН=; ЧГ="));
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ПараметрыОтчета.Вставить("ТабличныйДокумент", ТабличныйДокумент);
	
КонецПроцедуры

Процедура СформироватьКнигаПринятыхВыданных(ПараметрыОтчета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент; // Итоговый табличный документ листа кассовой книги
	ДокументРезультат = Новый ТабличныйДокумент; // Промежуточный табличный документ листа кассовой книги
	
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	//Запрос по остаткам и оборотам кассы
	Запрос=Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",	 НачалоДня(ПараметрыОтчета.ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",	 КонецДня(ПараметрыОтчета.ДатаКон));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	Если ПараметрыОтчета.Валюта = ПараметрыОтчета.ВалютаРегламентированногоУчета Тогда
		ВалютнаяКасса = Ложь;
		ТекстФильтр = "";
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте);
	Иначе
		ВалютнаяКасса = Истина;
		ТекстФильтр = "ГДЕ
					   | ХозрасчетныйОстаткиИОбороты.Валюта = &Валюта
					   |";
		Запрос.УстановитьПараметр("Валюта", ПараметрыОтчета.Валюта);
		Запрос.УстановитьПараметр("Счет",   ПланыСчетов.Хозрасчетный.КассаВИностраннойВалюте);
	КонецЕсли;	
	
	Если ПараметрыОтчета.ЕстьУчетПоОбособленнымПодразделениям Тогда
		ТекстСубконто = "&ВидСубконто";
		Запрос.УстановитьПараметр("ВидСубконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица);
		
		УсловиеПоСубконто = "И Субконто1 = &ОбособленноеПодразделениеОрганизации";
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ПараметрыОтчета.ОбособленноеПодразделениеОрганизации);
	Иначе
		ТекстСубконто = "";
		УсловиеПоСубконто = "";
	КонецЕсли;
	
	Запрос.Текст="ВЫБРАТЬ
				 |	НАЧАЛОПЕРИОДА(ХозрасчетныйОстаткиИОбороты.Период, ДЕНЬ) КАК Период,
				 |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
				 |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
				 |	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаОборотДт,
				 |	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт,
				 |	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаНачальныйОстаток КАК ВалютнаяСуммаНачальныйОстаток,
				 |	ХозрасчетныйОстаткиИОбороты.ВалютнаяСуммаКонечныйОстаток КАК ВалютнаяСуммаКонечныйОстаток,
				 |	ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаОборотДт,
				 |	ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаОборотКт
				 |ИЗ
				 |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, День, Движения, Счет = &Счет," + ТекстСубконто + ", Организация = &Организация " + УсловиеПоСубконто + ") КАК ХозрасчетныйОстаткиИОбороты
				 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				 |			НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, ДЕНЬ) КАК Период,
				 |			СУММА(ВЫБОР
				 |					КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
				 |							И ХозрасчетныйОбороты.СуммаОборотДт > ХозрасчетныйОбороты.СуммаОборотКт
				 |						ТОГДА ХозрасчетныйОбороты.СуммаОборотДт - ХозрасчетныйОбороты.СуммаОборотКт
				 |					КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
				 |							И ХозрасчетныйОбороты.СуммаОборотДт <= ХозрасчетныйОбороты.СуммаОборотКт
				 |						ТОГДА 0
				 |					ИНАЧЕ ХозрасчетныйОбороты.СуммаОборотДт
				 |				КОНЕЦ) КАК СуммаОборотДт,
				 |			СУММА(ВЫБОР
				 |					КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
				 |							И ХозрасчетныйОбороты.СуммаОборотДт > ХозрасчетныйОбороты.СуммаОборотКт
				 |						ТОГДА 0
				 |					КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
				 |							И ХозрасчетныйОбороты.СуммаОборотДт <= ХозрасчетныйОбороты.СуммаОборотКт
				 |						ТОГДА ХозрасчетныйОбороты.СуммаОборотКт - ХозрасчетныйОбороты.СуммаОборотДт
				 |					ИНАЧЕ ХозрасчетныйОбороты.СуммаОборотКт
				 |				КОНЕЦ) КАК СуммаОборотКт,
				 |			СУММА(ВЫБОР
				 |					КОГДА ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт > 0
				 |							И ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт > ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
				 |						ТОГДА ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт - ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
				 |					КОГДА ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт > 0
				 |							И ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт <= ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
				 |						ТОГДА 0
				 |					ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт
				 |				КОНЕЦ) КАК ВалютнаяСуммаОборотДт,
				 |			СУММА(ВЫБОР
				 |					КОГДА ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт > 0
				 |							И ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт > ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
				 |						ТОГДА 0
				 |					КОГДА ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт > 0
				 |							И ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт <= ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
				 |						ТОГДА ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт - ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт
				 |					ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
				 |				КОНЕЦ) КАК ВалютнаяСуммаОборотКт
				 |		ИЗ
				 |			РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет = &Счет," + ТекстСубконто + ", Организация = &Организация " + УсловиеПоСубконто + ") КАК ХозрасчетныйОбороты
				 |		
				 |		СГРУППИРОВАТЬ ПО
				 |			НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, ДЕНЬ)) КАК ХозрасчетныйОбороты
				 |		ПО ХозрасчетныйОстаткиИОбороты.Период = ХозрасчетныйОбороты.Период
				 |"+ ТекстФильтр+
				 "УПОРЯДОЧИТЬ ПО
				 |	Период";
				 
	Результат=Запрос.Выполнить().Выбрать();
	
	//Вывод шапки
	Макет       = ПолучитьМакет("КнигаПринятыхВыданных");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ДокументРезультат.Вывести(ОбластьМакета);
	
	НомерЛиста = 1;
	//Вывод таблицы
	Пока Результат.Следующий() Цикл
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Параметры.Дата = Результат.Период;
		Если НЕ ВалютнаяКасса Тогда
			ОбластьМакета.Параметры.ОстатокНачало = Результат.СуммаНачальныйОстаток;
			ОбластьМакета.Параметры.Расход = Результат.СуммаОборотКт;
			ОбластьМакета.Параметры.Приход = Результат.СуммаОборотДт;
			ОбластьМакета.Параметры.ОстатокКонец = Результат.СуммаКонечныйОстаток;
		Иначе
			Если (Результат.ВалютнаяСуммаОборотКт=0)И(Результат.ВалютнаяСуммаОборотДт=0) Тогда
				//валютную кассу могут еще трогать и переоценки
				Продолжить;
			КонецЕсли;	
			ОбластьМакета.Параметры.ОстатокНачало = Результат.ВалютнаяСуммаНачальныйОстаток;
			ОбластьМакета.Параметры.Расход = Результат.ВалютнаяСуммаОборотКт;
			ОбластьМакета.Параметры.Приход = Результат.ВалютнаяСуммаОборотДт;
			ОбластьМакета.Параметры.ОстатокКонец = Результат.ВалютнаяСуммаКонечныйОстаток;
		КонецЕсли;	
		Если НЕ ДокументРезультат.ПроверитьВывод(ОбластьМакета) Тогда
			
			// Выведем разрыв страницы
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			
			НомерЛистаДляПерехода = НомерЛиста;
			НомерЛиста = НомерЛиста + 1;
			ИмяОбласти = "Лист_" + Прав("0000000" + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="), 7);
			ОбластьЛисты = ДокументРезультат.Область(1,, ДокументРезультат.ВысотаТаблицы,);
			ОбластьЛисты.Имя = ИмяОбласти;
			//ОбластьЛисты.СоздатьФорматСтрок();
			ТабличныйДокумент.Вывести(ДокументРезультат);
			ПараметрыОтчета.СписокСформированныхЛистов.Добавить("3" + ИмяОбласти, "Лист " + Формат(НомерЛистаДляПерехода, "ЧН=; ЧГ="));
			
			ДокументРезультат = Новый ТабличныйДокумент;
			ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
		КонецЕсли;
		ДокументРезультат.Вывести(ОбластьМакета);
	КонецЦикла;
	
	ИмяОбласти = "Лист_" + Прав("0000000" + Формат(НомерЛиста, "ЧН=; ЧГ="), 7);
	ОбластьЛисты = ДокументРезультат.Область(1,, ДокументРезультат.ВысотаТаблицы,);
	ОбластьЛисты.Имя = ИмяОбласти;
	ОбластьЛисты.СоздатьФорматСтрок();
	ДокументРезультат.ТолькоПросмотр = Истина;
	ТабличныйДокумент.Вывести(ДокументРезультат);
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить("3" + ИмяОбласти, "Лист " + Формат(НомерЛиста, "ЧН=; ЧГ="));
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ПараметрыОтчета.Вставить("ТабличныйДокумент", ТабличныйДокумент);
	
КонецПроцедуры	
 
Процедура ЗаписатьПоследнийНомерЛиста(СтруктураНомеров, ПараметрыОтчета)
	
	Если НЕ ПараметрыОтчета.ВидОтчета = "Кассовая книга" Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ПараметрыОтчета.ДатаНач)); 
	Запрос.УстановитьПараметр("ДатаКон", НачалоДня(ПараметрыОтчета.ДатаКон)); 
	
	Если ПараметрыОтчета.ОбособленноеПодразделениеОрганизации.Пустая() Тогда
		СтруктурнаяЕдиница = ПараметрыОтчета.Организация;
	Иначе
		СтруктурнаяЕдиница = ПараметрыОтчета.ОбособленноеПодразделениеОрганизации;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	Запрос.УстановитьПараметр("Валюта", ПараметрыОтчета.Валюта); 
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоследниеНомераЛистовКассовойКниги.Период,
	|	ПоследниеНомераЛистовКассовойКниги.НомерЛистаМесяца,
	|	ПоследниеНомераЛистовКассовойКниги.НомерЛистаГода
	|ИЗ
	|	РегистрСведений.ПоследниеНомераЛистовКассовойКниги КАК ПоследниеНомераЛистовКассовойКниги
	|ГДЕ
	|	ПоследниеНомераЛистовКассовойКниги.Период >= &ДатаНач
	|	И ПоследниеНомераЛистовКассовойКниги.Период <= &ДатаКон
	|	И ПоследниеНомераЛистовКассовойКниги.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|	И ПоследниеНомераЛистовКассовойКниги.Валюта = &Валюта";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.ПоследниеНомераЛистовКассовойКниги.СоздатьНаборЗаписей();
		НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
		
		НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
		НаборЗаписей.Отбор.СтруктурнаяЕдиница.Установить(СтруктурнаяЕдиница);
		НаборЗаписей.Отбор.Валюта.Установить(ПараметрыОтчета.Валюта);
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
	СоответствиеНомеровМесяц = СтруктураНомеров.СоответствиеНомеровМесяц; 
	СоответствиеНомеровГод   = СтруктураНомеров.СоответствиеНомеровГод;
	СоответствиеСдвигНомеровМесяц = СтруктураНомеров.СоответствиеСдвигНомеровМесяц;
	СоответствиеСдвигНомеровГод   = СтруктураНомеров.СоответствиеСдвигНомеровГод;
	
	Для Каждого Строка ИЗ СоответствиеНомеровГод Цикл
		
		Период = Строка.Ключ;
		
		НаборЗаписей = РегистрыСведений.ПоследниеНомераЛистовКассовойКниги.СоздатьНаборЗаписей();
		НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
		
		НаборЗаписей.Отбор.Период.Установить(Период);
		НаборЗаписей.Отбор.СтруктурнаяЕдиница.Установить(СтруктурнаяЕдиница);
		НаборЗаписей.Отбор.Валюта.Установить(ПараметрыОтчета.Валюта);
		
		Запись = НаборЗаписей.Добавить();
		
		Запись.Период 				= Период;
		Запись.СтруктурнаяЕдиница 	= СтруктурнаяЕдиница;
		Запись.Валюта 				= ПараметрыОтчета.Валюта;
		
		Запись.НомерЛистаМесяца		= СоответствиеНомеровМесяц.Получить(Период) + СоответствиеСдвигНомеровМесяц.Получить(Период);
		Запись.НомерЛистаГода		= СоответствиеНомеровГод.Получить(Период)   + СоответствиеСдвигНомеровГод.Получить(Период);
		
		НаборЗаписей.Записать();
	КонецЦикла;	
	
КонецПроцедуры

Функция НомерПервогоЛистаГода(Период, Организация);
	
	Отбор = Новый Структура;
	Отбор.Вставить("Организация", Организация);
	НастройкиПечатиКассовойКниги = РегистрыСведений.НастройкиПечатиКассовойКниги.СрезПоследних(Период, Отбор);
	Если НастройкиПечатиКассовойКниги.Количество() > 0 Тогда 
		Возврат НастройкиПечатиКассовойКниги[0].НомерПервогоЛиста;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции

Процедура СформироватьОбложку(ТабличныйДокумент, ПараметрыОтчета)
	
	Если НЕ ПараметрыОтчета.СформироватьОбложку Тогда
		Возврат;
	КонецЕсли;
	
	Вариант2018 = Истина;
	Если ПараметрыОтчета.ДатаКон < Дата('20180105') Тогда
		Вариант2018 = Ложь;
	КонецЕсли; 
	
	ИмяОбласти      = "Обложка";
	
	ПерваяСтрокаОбложки  = Новый ТабличныйДокумент;
	// Так как макет листов кассовой книги не изменился по сравнению с предыдущим вариантом, то достаточно получать из нового макета
	// Позволяет задать формат колонок для листов кассовой книги
	МакетОбложка = ПолучитьМакет("КассоваяКнига2018");
	ОбластьПервойСтрокиОбложки  = МакетОбложка.ПолучитьОбласть("НачалоОбложки");
	
	ПерваяСтрокаОбложки.Вывести(ОбластьПервойСтрокиОбложки);
	ОблПервойСтрокиОбложки = ПерваяСтрокаОбложки.Область(1,, ПерваяСтрокаОбложки.ВысотаТаблицы,);
	ОблПервойСтрокиОбложки.Имя = ИмяОбласти;
	ОблПервойСтрокиОбложки.СоздатьФорматСтрок();
	
	ТабличныйДокумент.Вывести(ПерваяСтрокаОбложки);
	 
	Обложка         = Новый ТабличныйДокумент;
	
	Если Вариант2018 Тогда
		ОбластьОбложка  = МакетОбложка.ПолучитьОбласть(ИмяОбласти);
	Иначе
		МакетОбложка    = ПолучитьМакет("Обложка");
		ОбластьОбложка  = МакетОбложка.ПолучитьОбласть(ИмяОбласти + "|Отчет");
	КонецЕсли;
	
	СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ПараметрыОтчета.Организация);
	ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации,
		"ПолноеНаименование,");
	
	ОбластьОбложка.Параметры.Год				 		= Формат(Год(ПараметрыОтчета.ДатаНач), "ЧГ=0");
	ОбластьОбложка.Параметры.КодЕДРПОУ 				= БухгалтерскийУчетПереопределяемый.ПолучитьКодОрганизации(СведенияОбОрганизации);
	ОбластьОбложка.Параметры.НаименованиеОрганизации   = ПредставлениеОрганизации;
	
	Если ПараметрыОтчета.ПоОбособленномуПодразделению И ЗначениеЗаполнено(ПараметрыОтчета.ОбособленноеПодразделениеОрганизации) Тогда
		ОбластьОбложка.Параметры.НаименованиеОрганизации = ПараметрыОтчета.ОбособленноеПодразделениеОрганизации.НаименованиеПолное;
	КонецЕсли;
	
	Обложка.Вывести(ОбластьОбложка);
	ОблОбложка = Обложка.Область(1,, Обложка.ВысотаТаблицы,);
	ОблОбложка.Имя = ИмяОбласти;
	ОблОбложка.СоздатьФорматСтрок();
	
	ТабличныйДокумент.Вывести(Обложка);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить("1" + ИмяОбласти, "Обложка");
	
КонецПроцедуры

Процедура СформироватьОбложкуЖурналРегистрации(ТабличныйДокумент, ПараметрыОтчета)
	
	Если НЕ ПараметрыОтчета.СформироватьОбложку Тогда
		Возврат;
	КонецЕсли;
	
	ИмяОбласти      = "Обложка";
	Обложка         = Новый ТабличныйДокумент;
	
	Если ПараметрыОтчета.ДатаКон >= Дата('20180105') Тогда
		МакетОбложка = ПолучитьМакет("ЖурналРегистрации2018");
	Иначе
		МакетОбложка = ПолучитьМакет("ОбложкаЖурналРегистрации");
		Обложка.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	
	ОбластьОбложка  = МакетОбложка.ПолучитьОбласть(ИмяОбласти);
	СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ПараметрыОтчета.Организация);
	ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации,
		"ПолноеНаименование,");
	
	ОбластьОбложка.Параметры.Год				 		= Формат(Год(ПараметрыОтчета.ДатаНач), "ЧГ=0");
	ОбластьОбложка.Параметры.КодЕДРПОУ 					= БухгалтерскийУчетПереопределяемый.ПолучитьКодОрганизации(СведенияОбОрганизации);
	ОбластьОбложка.Параметры.НаименованиеОрганизации   	= ПредставлениеОрганизации;
	
	Если ПараметрыОтчета.ПоОбособленномуПодразделению И ЗначениеЗаполнено(ПараметрыОтчета.ОбособленноеПодразделениеОрганизации) Тогда
		ОбластьОбложка.Параметры.НаименованиеОрганизации = ПараметрыОтчета.ОбособленноеПодразделениеОрганизации.НаименованиеПолное;
	КонецЕсли;
	
	Обложка.Вывести(ОбластьОбложка);
	ОблОбложка = Обложка.Область(1,, Обложка.ВысотаТаблицы,);
	ОблОбложка.Имя = ИмяОбласти; 
	
	ТабличныйДокумент.Вывести(Обложка);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить("1" + ИмяОбласти, "Обложка");
	
КонецПроцедуры

Процедура СформироватьОбложкуЖурналРегистрации3а(ТабличныйДокумент, ПараметрыОтчета)
	
	Если НЕ ПараметрыОтчета.СформироватьОбложку Тогда
		Возврат;
	КонецЕсли;
	
	ИмяОбласти      = "Обложка";
	Обложка         = Новый ТабличныйДокумент;
	
	Если ПараметрыОтчета.ДатаКон >= Дата('20180105') Тогда
		МакетОбложка = ПолучитьМакет("ЖурналРегистрации3а2018");
	Иначе
		МакетОбложка = ПолучитьМакет("ОбложкаЖурналРегистрации3а");
		Обложка.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	ОбластьОбложка  = МакетОбложка.ПолучитьОбласть(ИмяОбласти);
	СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ПараметрыОтчета.Организация);
	ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации,
		"ПолноеНаименование,");
	
	ОбластьОбложка.Параметры.Год				 		= Формат(Год(ПараметрыОтчета.ДатаНач), "ЧГ=0");
	ОбластьОбложка.Параметры.КодЕДРПОУ 					= БухгалтерскийУчетПереопределяемый.ПолучитьКодОрганизации(СведенияОбОрганизации);
	ОбластьОбложка.Параметры.НаименованиеОрганизации   	= ПредставлениеОрганизации;
	
	Если ПараметрыОтчета.ПоОбособленномуПодразделению И ЗначениеЗаполнено(ПараметрыОтчета.ОбособленноеПодразделениеОрганизации) Тогда
		ОбластьОбложка.Параметры.НаименованиеОрганизации = ПараметрыОтчета.ОбособленноеПодразделениеОрганизации.НаименованиеПолное;
	КонецЕсли;
	
	Обложка.Вывести(ОбластьОбложка);
	ОблОбложка = Обложка.Область(1,, Обложка.ВысотаТаблицы,);
	ОблОбложка.Имя = ИмяОбласти; 
	
	ТабличныйДокумент.Вывести(Обложка);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить("1" + ИмяОбласти, "Обложка");
	
КонецПроцедуры

Функция ПолучитьОтветственныеЛицаКассовойКниги(Параметры, ТекущиеОтветственные = Неопределено, ДатаСреза)
	
	Результат = Новый Структура("
		|ГлавныйБухгалтерПредставление,
		|КассирПредставление",
		"", "");
	
	Если ТекущиеОтветственные <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Результат, ТекущиеОтветственные);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ГлавныйБухгалтер) Тогда
		ДанныеГлБухгалтера = УчетЗарплаты.ДанныеФизическихЛиц(Параметры.Организация, Параметры.ГлавныйБухгалтер, ДатаСреза);
		Результат.ГлавныйБухгалтерПредставление = ДанныеГлБухгалтера.Представление;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Кассир) Тогда
		ДанныеКассира = УчетЗарплаты.ДанныеФизическихЛиц(Параметры.Организация, Параметры.Кассир, ДатаСреза);
		Результат.КассирПредставление = ДанныеКассира.Представление;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли