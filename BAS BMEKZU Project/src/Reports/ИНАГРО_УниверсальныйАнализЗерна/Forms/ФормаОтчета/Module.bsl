
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Если Параметры.Свойство("ИмяКоманды")Тогда
        
        ВидФормы = Параметры.КлючВарианта;
        УстановитьВариантОтчета(ВидФормы);
       
        Если Параметры.Свойство("ПользовательскиеНастройки") Тогда
            ЗаполнитьОтборыСПользовательскихНастроек(Параметры.ПользовательскиеНастройки);   
        КонецЕсли; 

    Иначе
        ЗагрузитьЗначенияРеквизитов();
        УстановитьВариантОтчета(ВидФормы);
        Если ПериодОтчета.ДатаНачала = '00010101' Тогда
		    ПериодОтчета.ДатаНачала = (НачалоГода(ТекущаяДата()));
	    КонецЕсли;
	
	    Если ПериодОтчета.ДатаОкончания = '00010101' Тогда
		    ПериодОтчета.ДатаОкончания  = КонецДня(ТекущаяДата());
	    КонецЕсли;

	    Если НЕ ЗначениеЗаполнено(Организация) Тогда
		    Организация   = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	    КонецЕсли;
    КонецЕсли; 
    
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
    Если НЕ ЗавершениеРаботы Тогда
        СохранитьЗначенияРеквизитов();    	
    КонецЕсли; 
    

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Настройки(Команда)
    
    СтруктураОтборов = СформироватьСтруктуруОтборов();
    Оповещение = Новый ОписаниеОповещения("ФормаНастроекЗакрытие",ЭтаФорма);
    ОткрытьФорму("Отчет.ИНАГРО_УниверсальныйАнализЗерна.Форма.ФормаНастроек",Новый Структура("ЗначенияЗаполнения",СтруктураОтборов),,,,,Оповещение);
    
КонецПроцедуры
	  
&НаКлиенте
Процедура ВыбратьПериод(Команда)
	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода", ПериодОтчета.ДатаНачала, ПериодОтчета.ДатаОкончания);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения); 
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФорма36Общая(Команда)
    
    СтруктураПараметровОтбора = СформироватьСтруктуруОтборов();
    Отбор = Новый Структура("СтруктураПараметровОтбора,ИмяКоманды",СтруктураПараметровОтбора,"Форма36Сводная");
    ОткрытьФорму("Отчет.ИНАГРО_Форма36.Форма.ФормаОтчета",Отбор);
    
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФорма36ПоВладельцам(Команда)
   
    СтруктураПараметровОтбора = СформироватьСтруктуруОтборов();
    Отбор = Новый Структура("СтруктураПараметровОтбора,ИмяКоманды",СтруктураПараметровОтбора,"Форма36ПоВладельцу");
    ОткрытьФорму("Отчет.ИНАГРО_Форма36.Форма.ФормаОтчета",Отбор);
    
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФорма37Общая(Команда) 	
    
    СтруктуруОтбораПараметров   = СформироватьСтруктуруОтборов();
    СтруктуруОтбораПараметров.Вставить("ВидФормы","Форма37Общая");
    ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора,ИмяКоманды,СформироватьПриОткрытии",СтруктуруОтбораПараметров,"Форма37Общая",Истина);
    ОткрытьФорму("Отчет.ИНАГРО_Форма37.Форма.ФормаОтчета",ПараметрыОткрытия);
    
КонецПроцедуры   

&НаКлиенте
Процедура СформироватьФорма37ПоВладельцам(Команда)
    
    СтруктуруОтбораПараметров   = СформироватьСтруктуруОтборов();
    СтруктуруОтбораПараметров.Вставить("ВидФормы","РеестрДвиженийЗернаПоВладельцам");
    ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора,ИмяКоманды,СформироватьПриОткрытии",СтруктуруОтбораПараметров,"РеестрДвиженийЗернаПоВладельцам",Истина);
    ОткрытьФорму("Отчет.ИНАГРО_Форма37.Форма.ФормаОтчета",ПараметрыОткрытия);
    
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФорма37(Команда)
    
    СтруктуруОтбораПараметров   = СформироватьСтруктуруОтборов();
    СтруктуруОтбораПараметров.Вставить("ВидФормы","Форма37");
    ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора,ИмяКоманды,СформироватьПриОткрытии",СтруктуруОтбораПараметров,"Форма37",Истина);
    ОткрытьФорму("Отчет.ИНАГРО_Форма37.Форма.ФормаОтчета",ПараметрыОткрытия);
    
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФорма37Усушка(Команда)
    
    СтруктуруОтбораПараметров   = СформироватьСтруктуруОтборов();
    СтруктуруОтбораПараметров.Вставить("ВидФормы","Форма37Усушка");
    ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора,ИмяКоманды,СформироватьПриОткрытии",СтруктуруОтбораПараметров,"Форма37Усушка",Истина);
    ОткрытьФорму("Отчет.ИНАГРО_Форма37.Форма.ФормаОтчета",ПараметрыОткрытия);
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитов
	 
&НаКлиенте
Процедура ВидФормыПриИзменении(Элемент)
    
    УстановитьВариантОтчета(ВидФормы);
    
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ФормаНастроекЗакрытие(РезультатВозврата,ДополнительныеПараметр) Экспорт
    
    Если НЕ РезультатВозврата = Неопределено Тогда
    
        ЗаполнитьЗначенияСвойств(ЭтаФорма,РезультатВозврата);	
        ЭтаФорма.СкомпоноватьРезультат();
    КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура  УстановитьВариантОтчета(ВариантОтчета = "")
    
    Если ЗначениеЗаполнено(ВариантОтчета) Тогда
        ЭтаФорма.УстановитьТекущийВариант(ВариантОтчета);
    Иначе
        ЭтаФорма.УстановитьТекущийВариант("Основной");
        ВидФормы = "Основной";    
    КонецЕсли; 
    
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОтборыСПользовательскихНастроек(ПользовательскиеНастройки)
    
    Отчет.КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(ПользовательскиеНастройки);
    Настройки = Отчет.КомпоновщикНастроек.Настройки;
    СтруктураОтборов = СформироватьСтруктуруОтборов();
    Если Настройки.Структура.Количество() = 1 Тогда
        Настройки = Настройки.Структура[0].Настройки;	
    КонецЕсли; 
    
    Для каждого ЭлСтруктуры Из СтруктураОтборов Цикл
        ЭлементНастройки = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ЭлСтруктуры.Ключ));
        
        Если НЕ  ЭлементНастройки = Неопределено Тогда
            Если ЗначениеЗаполнено(ЭлементНастройки.ИдентификаторПользовательскойНастройки) Тогда
                ПользовательскийПараметр = ПользовательскиеНастройки.Элементы.Найти(ЭлементНастройки.ИдентификаторПользовательскойНастройки);
                СтруктураОтборов[ЭлСтруктуры.Ключ] = ПользовательскийПараметр.Значение;
                Продолжить;
            КонецЕсли;
        КонецЕсли;
        
        ТекОтбор = Новый ПолеКомпоновкиДанных(ЭлСтруктуры.Ключ);
        Для Каждого ЭлементНастройки Из Настройки.Отбор.Элементы Цикл
            Если ЭлементНастройки.ЛевоеЗначение = ТекОтбор Тогда 
                Если ЗначениеЗаполнено(ЭлементНастройки.ИдентификаторПользовательскойНастройки) Тогда
                    ПользовательскийПараметр = ПользовательскиеНастройки.Элементы.Найти(ЭлементНастройки.ИдентификаторПользовательскойНастройки);
                    СтруктураОтборов[ЭлСтруктуры.Ключ] = ПользовательскийПараметр.ПравоеЗначение;
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;
        
    КонецЦикла; 	
    
    ЗаполнитьЗначенияСвойств(ЭтаФорма,СтруктураОтборов);
КонецПроцедуры

&НаСервере
Функция  СформироватьСтруктуруОтборов()

    СтруктураПараметровОтборов = Новый Структура("ПериодОтчета,Организация,Номенклатура,Склад,Урожай,ВидКультуры,ВидХранения,Владелец");
    ЗаполнитьЗначенияСвойств(СтруктураПараметровОтборов,ЭтаФорма);
    Возврат СтруктураПараметровОтборов;

КонецФункции // ()

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
    
    СтруктураОтборовПараметров = СформироватьСтруктуруОтборов();
    Настройки = Отчеты.ИНАГРО_УниверсальныйАнализЗерна.ЗаполнитьПользовательскиеНастройкиОтчета(Отчет.КомпоновщикНастроек,СтруктураОтборовПараметров,НЕ ВидФормы = "Основной");        
    
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
    

	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПериодОтчета.ДатаНачала     = РезультатВыбора.НачалоПериода;
    ПериодОтчета.ДатаОкончания  = РезультатВыбора.КонецПериода;

КонецПроцедуры

&НаСервере
Процедура СохранитьЗначенияРеквизитов()

	Настройки = СформироватьСтруктуруОтборов();
    Настройки.Вставить("ВидФормы",ВидФормы);
    Пользователь = Пользователи.ТекущийПользователь();
    УстановитьПривилегированныйРежим(Истина);
    ХранилищеОбщихНастроек.Сохранить("Отчет.ИНАГРО_УниверсальныйАнализЗерна", "Основной",Настройки,,Пользователь.Наименование);
    УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьЗначенияРеквизитов()

	Пользователь = Пользователи.ТекущийПользователь();
    УстановитьПривилегированныйРежим(Истина);
    ЗначениеНастроек = ХранилищеОбщихНастроек.Загрузить("Отчет.ИНАГРО_УниверсальныйАнализЗерна","Основной",,Пользователь.Наименование);
    УстановитьПривилегированныйРежим(Ложь);
	Если ТипЗнч(ЗначениеНастроек) = Тип("Структура") Тогда

		ЗаполнитьЗначенияСвойств(ЭтаФорма, ЗначениеНастроек);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти 

