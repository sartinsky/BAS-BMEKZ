
#Область СлужебныеПроцедурыИФункции

// Процедура СформироватьПараметрыОтчета
//
Процедура СформироватьПараметрыОтчета() Экспорт
	
	// Определение списка работников, попадающих в отчетный период
	
	                                                               
	ПостроительОтчета.Параметры.Вставить("парамНачало",					НачалоПериода);
	ПостроительОтчета.Параметры.Вставить("парамКонец",					КонецМесяца(КонецПериода) );
	ПостроительОтчета.Параметры.Вставить("парамОрганизация",			ПостроительОтчета.Отбор.Организация.Значение);
	
	Если ВидРаботников = "" Тогда
		МассивВидЗанятости    = Новый Массив(2);
		МассивВидЗанятости[0] = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы;
		МассивВидЗанятости[1] = Перечисления.ВидыЗанятости.Совместительство;
	ИначеЕсли ВидРаботников = "Штатные" ИЛИ ВидРаботников = "Штатні" Тогда  // Штатные
		МассивВидЗанятости    = Новый Массив(1);
		МассивВидЗанятости[0] = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы;
	ИначеЕсли ВидРаботников = "Совместители" ИЛИ ВидРаботников = "Сумісники" Тогда  // Совместители
		МассивВидЗанятости    = Новый Массив(1);
		МассивВидЗанятости[0] = Перечисления.ВидыЗанятости.Совместительство;
	ИначеЕсли ВидРаботников = "ГПХ" ИЛИ ВидРаботников = "ЦПХ" Тогда  // Договорники
		МассивВидЗанятости    = Новый Массив(1);
	КонецЕсли;
	ПостроительОтчета.Параметры.Вставить("парамМестоРаботы",	МассивВидЗанятости);
	
	КоличествоДней = (НачалоДня(КонецПериода) - НачалоДня(НачалоПериода))/86400 + 1;
	ПостроительОтчета.Параметры.Вставить("парамКоличествоДней",	КоличествоДней);
	
	спФизЛиц = ПолучитьОтбор(ВидОтчета);
	ПостроительОтчета.Параметры.Вставить("парамФизЛицо",		спФизЛиц);
	
		
КонецПроцедуры

// Процедура СформироватьОтчет
//
Функция СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить();
	ЗаполнитьНачальныеНастройки();
	
	
	Если СокращенныйВариант Тогда
		Макет	= ПолучитьМакет("МакетСокращенно");
		ПостроительОтчета.Макет = Макет;
	Иначе
		Макет	= ПолучитьМакет("Макет");
		ПостроительОтчета.Макет = Макет;
	КонецЕсли;
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	
	Если ТолькоЗаголовок Тогда
		
		ДокументРезультат.Вывести(ЗаголовокОтчета);
		Возврат Неопределено;
		
	КонецЕсли;
	
	ПостроительОтчета.МакетЗаголовкаОтчета = ЗаголовокОтчета;
	ВысотаЗаголовка                        = ЗаголовокОтчета.ВысотаТаблицы;
	
	
	ПостроительОтчета.Отбор.Организация.Значение = Организация;
	ПостроительОтчета.Отбор.Организация.Использование = ЗначениеЗаполнено(Организация) ;
	ОтборОрганизации        = ПостроительОтчета.Отбор.Организация.Использование;
	Организация             = ПостроительОтчета.Отбор.Организация.Значение;	
	ВидСравненияОрганизации = ПостроительОтчета.Отбор.Организация.ВидСравнения;

	ПостроительОтчета.Отбор.Подразделение.Значение = Подразделение;
	ПостроительОтчета.Отбор.Подразделение.Использование = ЗначениеЗаполнено(Подразделение) ;
	ОтборПодразделения        = ПостроительОтчета.Отбор.Подразделение.Использование; 
	Подразделение             = ПостроительОтчета.Отбор.Подразделение.Значение;
	ВидСравненияПодразделение = ПостроительОтчета.Отбор.Подразделение.ВидСравнения;
	
	СформироватьПараметрыОтчета();
	                                           
	ПостроительОтчета.Выполнить();
	ПостроительОтчета.ОформитьМакет();
	ПостроительОтчета.Вывести(ДокументРезультат);
	
	Ширина = ДокументРезультат.ШиринаТаблицы;
	ВысотаТаблицы = ДокументРезультат.ВысотаТаблицы;
	ВысотаЗаголовка = ВысотаЗаголовка + 1;
	
	Область = ДокументРезультат.Область(ВысотаЗаголовка, 4);
	
	Возврат Макет ;
КонецФункции
// Расчитывает среднесписочную численность штатных работников и в эквиваленте полной занятости.
//
// Параметры
//  ВидСредней  – Строка – "ЭПЗ", "ССЧ"
//  ВидПериода  – Строка – "МЕСЯЦ", "КВАРТАЛ", "ГОД", "КВАРТАЛСНАЧАЛАГОДА", "МЕСЯЦСНАЧАЛАГОДА" 
//  Организация  – ссылка – организация
//  ПараметрОтбора  – Строка – "" = по всем, "Ж" = Женщины, "Инв" = Инвалиды, 
//					"Пен" = пенсионеры, "ГПХ" - работающие по договору ГПХ
//  ПоФизЛицам      – Булево – разворачивать или нет до физ. лиц.
//
// Возвращаемое число:
//   таблица значений   – Колонки: Период и Сумма.
//
Функция ПолучитьСотрудников( УсловиеНаФизлицо = "" )
	// сотрудники В разрезе периодов
	ТекстРаботникиОрганизации = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиПериод.Организация					КАК Организация,
	|	РаботникиПериод.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|	РаботникиПериод.Сотрудник					КАК Сотрудник,
	|	1											КАК Учитывать,
	|	РаботникиПериод.Начало						КАК Начало,
	|   ВЫБОР	КОГДА РаботникиПериод.Конец ЕСТЬ NULL  ИЛИ РаботникиПериод.КОНЕЦ > &парамКонец
	|   			ТОГДА &парамКонец 
	|   		ИНАЧЕ  НАЧАЛОПЕРИОДА(РаботникиПериод.Конец, ДЕНЬ)  
	|   		КОНЕЦ     КАК КОНЕЦ
	|	ИЗ (
	|		ВЫБРАТЬ
	|			РаботникиНачало.Организация					КАК Организация,
	|			РаботникиНачало.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|			РаботникиНачало.Сотрудник					КАК Сотрудник,
	|			РаботникиНачало.Начало						КАК Начало,
	|			МИНИМУМ(ВЫБОР КОГДА НЕ Состояния.Период ЕСТЬ NULL ТОГДА ДОБАВИТЬКДАТЕ(Состояния.Период,ДЕНЬ,-1) 
	|			ИНАЧЕ ВЫБОР КОГДА Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение) ТОГДА Работники.Период ИНАЧЕ ДОБАВИТЬКДАТЕ(Работники.Период,ДЕНЬ,-1) КОНЕЦ КОНЕЦ) КАК КОНЕЦ
	|
	|		ИЗ	(
	|
	|			ВЫБРАТЬ
	|				Работники.Организация				КАК Организация,
	|				Работники.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|				Работники.Сотрудник					КАК Сотрудник,
	|				&парамНачало						КАК Начало
	|			ИЗ	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&парамНачало, ) КАК Работники
	|               ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_СостояниеРаботниковОрганизаций.СрезПоследних(&парамНачало, ) КАК Состояния
	|               ПО Работники.Организация = Состояния.Организация
	|                И Работники.Сотрудник = Состояния.Сотрудник
	|			ГДЕ	Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)                                    
	|			И	Работники.Сотрудник.ИНАГРО_ВидЗанятости В (&парамМестоРаботы)
	|			И	(Состояния.Состояние ЕСТЬ NULL ИЛИ
	|			(Состояния.Состояние <> ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам)
	|			 И Состояния.Состояние <> ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенкомДо3Лет) 
	|			 И Состояния.Состояние <> ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенкомДо6Лет) 
	|			 И Состояния.Состояние <> ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.Мобилизован) ))
	|			" + УсловиеНаФизлицо + "
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|			ВЫБРАТЬ
	|				Работники.Организация				КАК Организация,
	|				Работники.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|				Работники.Сотрудник					КАК Сотрудник,
	|				Работники.Период					КАК Начало
	|			ИЗ	РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК Работники
	|			ГДЕ	Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение) 	
	|			И	Работники.Сотрудник.ИНАГРО_ВидЗанятости В (&парамМестоРаботы)                                       
	|			И	Работники.Период >= &парамНачало
	|			И	Работники.Период <= &парамКонец
	|			" + УсловиеНаФизлицо + "
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|			ВЫБРАТЬ
	|				Работники.Организация				КАК Организация,
	|				Работники.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|				Работники.Сотрудник					КАК Сотрудник,
	|				Состояния.Период					КАК Начало
	|			ИЗ	РегистрСведений.ИНАГРО_РаботникиОрганизаций.СрезПоследних(&парамНачало, ) КАК Работники
	|               ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_СостояниеРаботниковОрганизаций.СрезПоследних(&парамНачало, ) КАК СостоянияНачало
	|               ПО Работники.Организация = СостоянияНачало.Организация
	|                И Работники.Сотрудник = СостоянияНачало.Сотрудник
	|               ЛЕВОЕ СОЕДИНЕНИЕ
	|               (ВЫБРАТЬ
	|                 Состояния.Сотрудник КАК Сотрудник,
	|                 Состояния.Период КАК Период,
	|                 МАКСИМУМ(СостоянияДо.Период) КАК ПериодДо
	|                ИЗ РегистрСведений.ИНАГРО_СостояниеРаботниковОрганизаций КАК Состояния
	|                   ЛЕВОЕ СОЕДИНЕНИЕ
	|					РегистрСведений.ИНАГРО_СостояниеРаботниковОрганизаций КАК СостоянияДо
	|                   ПО СостоянияДо.Период < Состояния.Период
	|					 И Состояния.Сотрудник = СостоянияДо.Сотрудник
	|                ГДЕ Состояния.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.Работает)
	|					И	Состояния.Период >= &парамНачало
	|					И	Состояния.Период <= &парамКонец
	|                СГРУППИРОВАТЬ ПО Состояния.Сотрудник, Состояния.Период
	|                )КАК Состояния
	|               ПО Работники.Сотрудник = Состояния.Сотрудник
	|				ЛЕВОЕ СОЕДИНЕНИЕ
	|               РегистрСведений.ИНАГРО_СостояниеРаботниковОрганизаций КАК СостоянияДо
	|               ПО СостоянияДо.Сотрудник = Состояния.Сотрудник 
	|                И СостоянияДо.Период = Состояния.ПериодДо 
	|			ГДЕ	Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)                                    
	|			И	Работники.Сотрудник.ИНАГРО_ВидЗанятости В (&парамМестоРаботы)
	|			И	(СостоянияДо.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам)
	|				 ИЛИ СостоянияДо.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенкомДо3Лет)
	|				 ИЛИ СостоянияДо.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенкомДо6Лет)
	|			 ИЛИ СостоянияДо.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.Мобилизован))
	|           И НЕ (Состояния.Период ЕСТЬ NULL)
	|			И Состояния.Период >= &парамНачало
	|			" + УсловиеНаФизлицо + "
	|
	|   	) КАК РаботникиНачало
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИНАГРО_РаботникиОрганизаций КАК Работники
	|		ПО		РаботникиНачало.Сотрудник = Работники.Сотрудник
	|			И	Работники.Сотрудник.ИНАГРО_ВидЗанятости В (&парамМестоРаботы)                                       
	|					И РаботникиНачало.Начало < Работники.Период
	|					И (Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|					ИЛИ Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Перемещение))
	|			" + УсловиеНаФизлицо + "
	|        ЛЕВОЕ СОЕДИНЕНИЕ
	|               (ВЫБРАТЬ
	|                 Состояния.Сотрудник КАК Сотрудник,
	//|                 МИНИМУМ(Состояния.Период) КАК Период
	|                 Состояния.Период КАК Период
	|                ИЗ РегистрСведений.ИНАГРО_СостояниеРаботниковОрганизаций КАК Состояния
	|                ГДЕ (Состояния.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам)
	|					  ИЛИ Состояния.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенкомДо3Лет)
	|					  ИЛИ Состояния.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенкомДо6Лет)
	|					  ИЛИ Состояния.Состояние = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_СостоянияРаботникаОрганизации.Мобилизован))            
    |					И	Состояния.Период >= &парамНачало
	|					И	Состояния.Период <= &парамКонец
	|
	//|                СГРУППИРОВАТЬ ПО Сотрудник
	|                )КАК Состояния
	|               ПО РаботникиНачало.Сотрудник = Состояния.Сотрудник
	|					И РаботникиНачало.Начало < Состояния.Период
	|
	|   	СГРУППИРОВАТЬ ПО
	|			РаботникиНачало.Организация,
	|			РаботникиНачало.ПодразделениеОрганизации,
	|			РаботникиНачало.Сотрудник,
	|			РаботникиНачало.Начало
	|
	|) КАК РаботникиПериод
	|
	|";
	
	ТекстГПХ = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Работники.Организация							КАК Организация,
	|	Работники.ПодразделениеОрганизации				КАК ПодразделениеОрганизации,
	|	Работники.Сотрудник								КАК Сотрудник,
	|	1												КАК Учитывать,
	|   ВЫБОР	КОГДА Работники.ДатаНачала < &парамНачало
	|   			ТОГДА &парамНачало 
	|   		ИНАЧЕ  Работники.ДатаНачала  
	|   		КОНЕЦ     								КАК Начало,
	|   ВЫБОР	КОГДА Работники.ДатаОкончания > &парамКонец
	|   			ТОГДА &парамКонец 
	|   		ИНАЧЕ  Работники.ДатаОкончания  
	|   		КОНЕЦ     								КАК КОНЕЦ
	|	ИЗ Документ.ИНАГРО_ДоговорНаВыполнениеРаботСФизЛицом КАК Работники
	|	ГДЕ	Работники.Проведен
	|	  И	Работники.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	 " + УсловиеНаФизлицо + "
	|
	|";
	
	Если ВидРаботников = "Штатные" ИЛИ ВидРаботников = "Штатні" Тогда  // Штатные
		Текст = "
		|" + ТекстРаботникиОрганизации + "
		|";
	ИначеЕсли ВидРаботников = "Совместители" ИЛИ ВидРаботников = "Сумісники" Тогда  // Совместители
		Текст = "
		|" + ТекстРаботникиОрганизации + "
		|";
	ИначеЕсли ВидРаботников = "ГПХ" ИЛИ ВидРаботников = "ЦПХ" Тогда  // Договорники
		Текст = "
		|" + ТекстГПХ + "
		|";
	Иначе 
		ТекстГПХ = СтрЗаменить(ТекстГПХ,"РАЗРЕШЕННЫЕ","");
		Текст = "
		|" + ТекстРаботникиОрганизации + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|" + ТекстГПХ + "
		|";
	КонецЕсли;
	Возврат Текст;
	
КонецФункции
	
	// Расчитывает среднесписочную численность штатных работников и в эквиваленте полной занятости
//
// Параметры
//  ВидСредней  – Строка – "ЭПЗ", "ССЧ"
//  ВидПериода  – Строка – "МЕСЯЦ", "КВАРТАЛ", "ГОД", "КВАРТАЛСНАЧАЛАГОДА", "МЕСЯЦСНАЧАЛАГОДА" 
//  Организация  – ссылка – организация
//  ПараметрОтбора  – Строка – "" = по всем, "Ж" = Женщины, "Инв" = Инвалиды, "Пен" = пенсионеры, "Иностранцы" = иностранцы, "ГПХ" - работающие по договору ГПХ
//  ПоФизЛицам      – Булево – разворачивать или нет до физ. лиц
//
// Возвращаемое число:
//   таблица значений   – Колонки: Период и Сумма
//
Функция ПолучитьОтбор(знач ПараметрОтбора = "") Экспорт
	
	ПараметрОтбора = Врег(ПараметрОтбора);
	Запрос = Новый Запрос;
                                                               
	Запрос.УстановитьПараметр("парамНачало",		НачалоПериода);
	Запрос.УстановитьПараметр("парамКонец",			КонецМесяца(КонецПериода) );
	Запрос.УстановитьПараметр("парамОрганизация",	ПостроительОтчета.Отбор.Организация.Значение);
	
	Если ВидРаботников = "" Тогда
		МассивВидЗанятости    = Новый Массив(2);
		МассивВидЗанятости[0] = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы;
		МассивВидЗанятости[1] = Перечисления.ВидыЗанятости.Совместительство;
	ИначеЕсли ВидРаботников = "Штатные" ИЛИ ВидРаботников = "Штатні" Тогда  // Штатные
		МассивВидЗанятости    = Новый Массив(1);
		МассивВидЗанятости[0] = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы;
	ИначеЕсли ВидРаботников = "Совместители" ИЛИ ВидРаботников = "Сумісники" Тогда  // Совместители
		МассивВидЗанятости    = Новый Массив(1);
		МассивВидЗанятости[0] = Перечисления.ВидыЗанятости.Совместительство;
	ИначеЕсли ВидРаботников = "ГПХ" ИЛИ ВидРаботников = "ЦПХ" Тогда  // Договорники
		МассивВидЗанятости    = Новый Массив(1);
	КонецЕсли;
	Запрос.УстановитьПараметр("парамМестоРаботы",	МассивВидЗанятости);
	                      
	УсловиеОтбора = "";
	Если ПараметрОтбора = "ЖЕНЩИНЫ" ИЛИ ПараметрОтбора = "ЖІНКИ" ИЛИ ПараметрОтбора = "ЖСЕЛ" ИЛИ ПараметрОтбора = "ЖОТ18ДО35" ИЛИ ПараметрОтбора = "ЖОТ36ДО60" ИЛИ ПараметрОтбора = "ЖОТ60" 
		ИЛИ ПараметрОтбора = "ЖИНВ" ИЛИ ПараметрОтбора = "ЖИНВСЕЛ" ИЛИ ПараметрОтбора = "ЖИНВОТ18ДО35" ИЛИ ПараметрОтбора = "ЖИНВОТ36ДО60" ИЛИ ПараметрОтбора = "ЖИНВОТ60" Тогда
		
		УсловиеОтбора = "И Работники.Сотрудник.ФизическоеЛицо.Пол = &парамОтбора";
		Запрос.УстановитьПараметр("парамОтбора", Перечисления.ПолФизическогоЛица.Женский);
		
	КонецЕсли;
	Если ПараметрОтбора = "СЕЛ" ИЛИ ПараметрОтбора = "ЖСЕЛ" ИЛИ ПараметрОтбора = "ИНВСЕЛ" ИЛИ ПараметрОтбора = "ЖИНВСЕЛ" Тогда
		
		ЗапросСЖ = Новый Запрос;
		ЗапросСЖ.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                 |	Сотрудники.Ссылка КАК Сотрудник,
		                 |	КонтактнаяИнформацияФизлиц.ЗначенияПолей КАК ЗначенияПолей
		                 |ИЗ
		                 |	Справочник.Сотрудники КАК Сотрудники
		                 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                 |			ФизическиеЛицаКонтактнаяИнформация.ЗначенияПолей КАК ЗначенияПолей,
		                 |			ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК ФизическоеЛицо
		                 |		ИЗ
		                 |			Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
		                 |				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		                 |				ПО (ФизическиеЛицаКонтактнаяИнформация.Вид = ВидыКонтактнойИнформации.Ссылка)
		                 |					И (ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица))
		                 |					И (ВидыКонтактнойИнформации.Родитель = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СправочникФизическиеЛица))) КАК КонтактнаяИнформацияФизлиц
		                 |		ПО Сотрудники.ФизическоеЛицо = КонтактнаяИнформацияФизлиц.ФизическоеЛицо
		                 |ГДЕ
		                 |	Сотрудники.ГоловнаяОрганизация = &Организация
		                 |	И Сотрудники.ПометкаУдаления = ЛОЖЬ
		                 |	И Сотрудники.ИНАГРО_ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)";
		
		
		ЗапросСЖ.УстановитьПараметр("Организация", ПостроительОтчета.Отбор.Организация.Значение);
		
		мСельскиеЖители = Новый Массив;
		Выборка = ЗапросСЖ.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Адрес = Выборка.ЗначенияПолей;
			СтруктураАдреса = РаботаСАдресами.СведенияОбАдресе(Адрес);
			Если НЕ СокрЛП(СтруктураАдреса.НаселенныйПункт) = "" Тогда
				мСельскиеЖители.Добавить(Выборка.Сотрудник);
			КонецЕсли;
		КонецЦикла;	
				
		УсловиеОтбора = УсловиеОтбора + " И Работники.Сотрудник В (&СписокСотрудников)";
		Запрос.УстановитьПараметр("СписокСотрудников", мСельскиеЖители);
		
	КонецЕсли;
	
	Если ПараметрОтбора = "ОТ18ДО35" ИЛИ ПараметрОтбора = "ЖОТ18ДО35" ИЛИ ПараметрОтбора = "ИНВОТ18ДО35" ИЛИ ПараметрОтбора = "ЖИНВОТ18ДО35" Тогда
		УсловиеОтбора = УсловиеОтбора + " И Работники.Сотрудник.ФизическоеЛицо.ДатаРождения <> ДАТАВРЕМЯ(1,1,1)
										| И Работники.Сотрудник.ФизическоеЛицо.ДатаРождения <= &парамНачалоИнтервала
										| И Работники.Сотрудник.ФизическоеЛицо.ДатаРождения >= &парамОкончаниеИнтервала";
		Запрос.УстановитьПараметр("парамНачалоИнтервала", КонецМесяца(ДобавитьМесяц(КонецГода(НачалоПериода), -18*12)));
		Запрос.УстановитьПараметр("парамОкончаниеИнтервала", НачалоГода(ДобавитьМесяц(КонецГода(НачалоПериода), -35*12)));
	КонецЕсли;
	Если ПараметрОтбора = "ОТ36ДО60" ИЛИ ПараметрОтбора = "ЖОТ36ДО60" ИЛИ ПараметрОтбора = "ИНВОТ36ДО60" ИЛИ ПараметрОтбора = "ЖИНВОТ36ДО60" Тогда
		УсловиеОтбора = УсловиеОтбора + " И Работники.Сотрудник.ФизическоеЛицо.ДатаРождения <> ДАТАВРЕМЯ(1,1,1)
										| И Работники.Сотрудник.ФизическоеЛицо.ДатаРождения <= &парамНачалоИнтервала
										| И Работники.Сотрудник.ФизическоеЛицо.ДатаРождения >= &парамОкончаниеИнтервала";
		Запрос.УстановитьПараметр("парамНачалоИнтервала", КонецМесяца(ДобавитьМесяц(КонецГода(НачалоПериода), -36*12)));
		Запрос.УстановитьПараметр("парамОкончаниеИнтервала", НачалоГода(ДобавитьМесяц(КонецГода(НачалоПериода), -60*12)));
	КонецЕсли;
	Если ПараметрОтбора = "ОТ60" ИЛИ ПараметрОтбора = "ЖОТ60" 
		ИЛИ ПараметрОтбора = "ИНВОТ60" ИЛИ ПараметрОтбора = "ЖИНВОТ60" Тогда
		УсловиеОтбора = УсловиеОтбора + " И Работники.Сотрудник.ФизическоеЛицо.ДатаРождения <> ДАТАВРЕМЯ(1,1,1)
										| И Работники.Сотрудник.ФизическоеЛицо.ДатаРождения < &парамНачалоИнтервала";
		Запрос.УстановитьПараметр("парамНачалоИнтервала", НачалоГода(ДобавитьМесяц(КонецГода(НачалоПериода), -60*12)));
	КонецЕсли;
	ТекстСотрудникиОрганизации = ПолучитьСотрудников( УсловиеОтбора );
	ТекстЗапросаУсловиеИнвалидность = "";
	//"Ж" = Женщины, 
	//"ГПХ" - работающие по договору ГПХ
	//"Инв" = Инвалиды, 
	//"Пен" = пенсионеры,
	//"Иностранцы" = иностранцы
		
	Если ПараметрОтбора = "ИНВАЛИДЫ" ИЛИ ПараметрОтбора = "ІНВАЛІДИ" ИЛИ ПараметрОтбора = "ЖИНВ" ИЛИ ПараметрОтбора = "ИНВСЕЛ" ИЛИ ПараметрОтбора = "ЖИНВСЕЛ"
		ИЛИ ПараметрОтбора = "ИНВОТ18ДО35" ИЛИ ПараметрОтбора = "ИНВОТ36ДО60" ИЛИ ПараметрОтбора = "ИНВОТ60" 
		ИЛИ ПараметрОтбора = "ЖИНВОТ18ДО35" ИЛИ ПараметрОтбора = "ЖИНВОТ36ДО60" ИЛИ ПараметрОтбора = "ЖИНВОТ60" Тогда
		
		Признак = "Список.Инвалидность";
		ИмяРегистраСведений = "СведенияОбИнвалидностиФизическихЛиц";
		ТекстЗапросаУсловиеИнвалидность = "
		|И (Список.ДействуетДо > &парамНачало
	    |					ИЛИ Список.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) ";

		
	ИначеЕсли ПараметрОтбора = "ПЕНСИОНЕРЫ"  ИЛИ ПараметрОтбора = "ПЕНСІОНЕРИ" Тогда
		
		Признак = "Список.Пенсионер";
		ИмяРегистраСведений = "СведенияОПенсионерах";
		
	ИначеЕсли ПараметрОтбора = "ИНОСТРАНЦЫ" ИЛИ ПараметрОтбора = "ІНОЗЕМЦІ" Тогда
		
		//Признак = "Список.НеЯвляетсяНалоговымРезидентом";
		Признак = "
		|ВЫБОР 
		|	КОГДА ЕстьNULL(Список.ИНАГРО_НеЯвляетсяНалоговымРезидентом, ЛОЖЬ)
		|		ТОГДА ИСТИНА
		|	КОГДА ЕстьNULL(Список.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) 
		|	  ИЛИ ЕстьNULL(Список.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Украина) 
		|		ТОГДА ЛОЖЬ
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ";
		
		ИмяРегистраСведений = "ГражданствоФизическихЛиц";
		
	ИначеЕсли ПараметрОтбора = "С ДОП. ГАРАНТИЯМИ ТРУДОУСТРОЙСТВА" ИЛИ ПараметрОтбора = "З ДОД. ГАРАНТІЯМИ ПРАЦЕВЛАШТУВАННЯ" Тогда
		
		Признак = "Список.НаличиеГарантий";
		ИмяРегистраСведений = "СведенияОЛицахСДополнительнымиГарантиями";	
		
	ИначеЕсли ПараметрОтбора = "ДОПГАРАНТИИНЕИНВ" Тогда
		
		Признак = "(Список.НаличиеГарантий И Список.ВидГарантии <> ЗНАЧЕНИЕ(Справочник.ДополнительныеГарантииВСодействииТрудоустройству.ИнвалидыНеДостигшиеПенсионногоВозраста))";
		ИмяРегистраСведений = "СведенияОЛицахСДополнительнымиГарантиями";	
		
	ИначеЕсли ПараметрОтбора = "ДОПГАРАНТИИ10ЛЕТ" Тогда
		
		Признак = "(Список.НаличиеГарантий И Список.ВидГарантии = ЗНАЧЕНИЕ(Справочник.ДополнительныеГарантииВСодействииТрудоустройству.КомуДоПенсииПоПозрастуОсталось1ОиМеньшеЛет))";
		ИмяРегистраСведений = "СведенияОЛицахСДополнительнымиГарантиями";	
	    
		
	ИначеЕсли ПараметрОтбора = "ГПХ" ИЛИ ПараметрОтбора ="ЦПХ" Тогда
		
		Признак = "Список.СуммаЗаРаботу >= 0";
		ИмяРегистраСведений = "ДоговорникиОрганизаций";
		
	КонецЕсли; 
	Если  ПараметрОтбора = "ИНВАЛИДЫ" ИЛИ ПараметрОтбора = "ІНВАЛІДИ" ИЛИ ПараметрОтбора = "ИНОСТРАНЦЫ" ИЛИ ПараметрОтбора = "ІНОЗЕМЦІ" ИЛИ ПараметрОтбора = "ЖИНВ" ИЛИ ПараметрОтбора = "ИНВСЕЛ" ИЛИ ПараметрОтбора = "ЖИНВСЕЛ" 
		ИЛИ ПараметрОтбора = "ИНВОТ18ДО35" ИЛИ ПараметрОтбора = "ИНВОТ36ДО60" ИЛИ ПараметрОтбора = "ИНВОТ60" 
		ИЛИ ПараметрОтбора = "ЖИНВОТ18ДО35" ИЛИ ПараметрОтбора = "ЖИНВОТ36ДО60" ИЛИ ПараметрОтбора = "ЖИНВОТ60" Тогда
		
	
		ТекстЗапросаУсловие = "
		|ВЫБРАТЬ
		|	СписокПериод.ФизическоеЛицо		КАК ФизическоеЛицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.ФизическоеЛицо		КАК ФизическоеЛицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.ФизическоеЛицо		КАК ФизическоеЛицо,
		|				&парамНачало			КАК Начало
		|			ИЗ	РегистрСведений." + ИмяРегистраСведений + ".СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	" + Признак + "
		|   " + ТекстЗапросаУсловиеИнвалидность + "
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.ФизическоеЛицо			КАК ФизическоеЛицо,
		|				Список.Период			КАК Начало
		|			ИЗ	РегистрСведений." + ИмяРегистраСведений + " КАК Список
		|			ГДЕ	" + Признак + "
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений." + ИмяРегистраСведений + " КАК Список
		|		ПО		СписокНачало.ФизическоеЛицо = Список.ФизическоеЛицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	не " + Признак + "
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.ФизическоеЛицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		
		ТекстСотрудникиОрганизации = СтрЗаменить(ТекстСотрудникиОрганизации,"РАЗРЕШЕННЫЕ","");
		
		ТекстСотрудникиОрганизации = "                              
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		Основной.Сотрудник		КАК Сотрудник,			
		|   	// макс. начало
		|   	ВЫБОР КОГДА Основной.Начало < УсловиеПериод.Начало ТОГДА УсловиеПериод.Начало ИНАЧЕ  Основной.Начало КОНЕЦ     КАК Начало,
		|   	// мин. концы                                                         
		|		ВЫБОР КОГДА Основной.Конец < УсловиеПериод.Конец ТОГДА Основной.Конец ИНАЧЕ  УсловиеПериод.Конец КОНЕЦ     КАК Конец
		|
		|	ИЗ ( " + ТекстСотрудникиОрганизации + " ) КАК Основной
		|  
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие + " ) КАК УсловиеПериод
		|	ПО		Основной.Сотрудник.ФизическоеЛицо = УсловиеПЕРИОД.ФизическоеЛицо
		|		И	Основной.Начало <= УсловиеПериод.Конец
		|		И	УсловиеПериод.Начало <= Основной.Конец
		|";
		
	ИначеЕсли ПараметрОтбора = "ПЕНСИОНЕРЫ" ИЛИ ПараметрОтбора = "ПЕНСІОНЕРИ" ИЛИ ПараметрОтбора = "С ДОП. ГАРАНТИЯМИ ТРУДОУСТРОЙСТВА" ИЛИ ПараметрОтбора = "З ДОД. ГАРАНТІЯМИ ПРАЦЕВЛАШТУВАННЯ" ИЛИ ПараметрОтбора = "ДОПГАРАНТИИНЕИНВ" ИЛИ ПараметрОтбора = "ДОПГАРАНТИИ10ЛЕТ" Тогда
		
	
		ТекстЗапросаУсловие = "
		|ВЫБРАТЬ
		|	СписокПериод.ФизическоеЛицо		КАК ФизическоеЛицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.ФизическоеЛицо		КАК ФизическоеЛицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.ФизЛицо		КАК ФизическоеЛицо,
		|				&парамНачало			КАК Начало
		|			ИЗ	РегистрСведений." + ИмяРегистраСведений + ".СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	" + Признак + "
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.ФизЛицо			КАК ФизическоеЛицо,
		|				Список.Период			КАК Начало
		|			ИЗ	РегистрСведений." + ИмяРегистраСведений + " КАК Список
		|			ГДЕ	" + Признак + "
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений." + ИмяРегистраСведений + " КАК Список
		|		ПО		СписокНачало.ФизическоеЛицо = Список.ФизЛицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	не " + Признак + "
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.ФизическоеЛицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		
		ТекстСотрудникиОрганизации = СтрЗаменить(ТекстСотрудникиОрганизации,"РАЗРЕШЕННЫЕ","");
		
		ТекстСотрудникиОрганизации = "                              
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		Основной.Сотрудник		КАК Сотрудник,			
		|   	// макс. начало
		|   	ВЫБОР КОГДА Основной.Начало < УсловиеПериод.Начало ТОГДА УсловиеПериод.Начало ИНАЧЕ  Основной.Начало КОНЕЦ     КАК Начало,
		|   	// мин. концы                                                         
		|		ВЫБОР КОГДА Основной.Конец < УсловиеПериод.Конец ТОГДА Основной.Конец ИНАЧЕ  УсловиеПериод.Конец КОНЕЦ     КАК Конец
		|
		|	ИЗ ( " + ТекстСотрудникиОрганизации + " ) КАК Основной
		|  
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие + " ) КАК УсловиеПериод
		|	ПО		Основной.Сотрудник.ФизическоеЛицо = УсловиеПЕРИОД.ФизическоеЛицо
		|		И	Основной.Начало <= УсловиеПериод.Конец
		|		И	УсловиеПериод.Начало <= Основной.Конец
		|";
		
	ИначеЕсли ПараметрОтбора = "ИНВАЛИДЫ НЕ ПЕНСИОНЕРЫ"  ИЛИ ПараметрОтбора = "ІНВАЛІДИ НЕ ПЕНСІОНЕРИ" Тогда
		
		ТекстЗапросаУсловие1 = "ВЫБРАТЬ
       |	СписокПериод.ФизическоеЛицо КАК ФизическоеЛицо,
       |	СписокПериод.Начало КАК Начало,
       |	ВЫБОР
       |		КОГДА СписокПериод.Конец ЕСТЬ NULL
       |				ИЛИ СписокПериод.Конец > &парамКонец
       |			ТОГДА &парамКонец
       |		ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(СписокПериод.Конец, ДЕНЬ, -1), ДЕНЬ)
       |	КОНЕЦ КАК Конец
       |ИЗ
       |	(ВЫБРАТЬ
       |		СписокНачало.ФизическоеЛицо КАК ФизическоеЛицо,
       |		СписокНачало.Начало КАК Начало,
       |		МИНИМУМ(Список.Период) КАК Конец
       |	ИЗ
       |		(ВЫБРАТЬ
       |			Список.ФизическоеЛицо КАК ФизическоеЛицо,
       |			&парамНачало КАК Начало
       |		ИЗ
       |			РегистрСведений.СведенияОбИнвалидностиФизическихЛиц.СрезПоследних(&парамНачало, ) КАК Список
       |		ГДЕ
       |			Список.Инвалидность
	   |				И (Список.ДействуетДо > &парамНачало
	   |					ИЛИ Список.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
       |		
       |		ОБЪЕДИНИТЬ ВСЕ
       |		
       |		ВЫБРАТЬ
       |			Список.ФизическоеЛицо,
       |			Список.Период
       |		ИЗ
       |			РегистрСведений.СведенияОбИнвалидностиФизическихЛиц КАК Список
       |		ГДЕ
       |			Список.Инвалидность
       |			И Список.Период >= &парамНачало
       |			И Список.Период <= &парамКонец) КАК СписокНачало
       |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизическихЛиц КАК Список
       |			ПО СписокНачало.ФизическоеЛицо = Список.ФизическоеЛицо
       |				И СписокНачало.Начало < Список.Период
       |				И (НЕ Список.Инвалидность)
       |	
       |	СГРУППИРОВАТЬ ПО
       |		СписокНачало.ФизическоеЛицо,
       |		СписокНачало.Начало) КАК СписокПериод";
		
		ТекстЗапросаУсловие2 = "
		|ВЫБРАТЬ
		|	СписокПериод.ФизическоеЛицо		КАК ФизическоеЛицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.ФизическоеЛицо		КАК ФизическоеЛицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.ФизЛицо		КАК ФизическоеЛицо,
		|				&парамНачало		КАК Начало
		|			ИЗ	РегистрСведений.СведенияОПенсионерах.СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	НЕ Список.Пенсионер
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.ФизЛицо		КАК ФизическоеЛицо,
		|				Список.Период		КАК Начало
		|			ИЗ	РегистрСведений.СведенияОПенсионерах КАК Список
		|			ГДЕ	НЕ Список.Пенсионер
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				ФизЛица.Ссылка 		КАК ФизическоеЛицо,
		|				&парамНачало		КАК Начало
		|			ИЗ Справочник.ФизическиеЛица КАК ФизЛица
		|			ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.СведенияОПенсионерах.СрезПоследних(&парамНачало) КАК Список
		|			ПО ФизЛица.Ссылка = Список.ФизЛицо
		|			ГДЕ Список.Период ЕСТЬ NULL
        |
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПенсионерах КАК Список
		|		ПО		СписокНачало.ФизическоеЛицо = Список.ФизЛицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	Список.Пенсионер
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.ФизическоеЛицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		

		
		ТекстСотрудникиОрганизации = СтрЗаменить(ТекстСотрудникиОрганизации,"РАЗРЕШЕННЫЕ","");
		
		ТекстСотрудникиОрганизации = "                              
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		Основной.Сотрудник		КАК Сотрудник,			
		|   	// макс. начало
		|   	ВЫБОР КОГДА Основной.Начало < УсловиеПериод1.Начало И УсловиеПериод2.Начало < УсловиеПериод1.Начало ТОГДА УсловиеПериод1.Начало
		|   	 КОГДА Основной.Начало < УсловиеПериод2.Начало И УсловиеПериод1.Начало < УсловиеПериод2.Начало ТОГДА УсловиеПериод2.Начало
		|		 ИНАЧЕ  Основной.Начало КОНЕЦ     КАК Начало,
		|   	// мин. концы                                                         
		|		ВЫБОР КОГДА УсловиеПериод1.Конец < Основной.Конец И УсловиеПериод1.Конец < УсловиеПериод2.Конец ТОГДА УсловиеПериод1.Конец 
		|		 КОГДА УсловиеПериод2.Конец < Основной.Конец И УсловиеПериод2.Конец < УсловиеПериод1.Конец ТОГДА УсловиеПериод2.Конец 
		|		 ИНАЧЕ  Основной.Конец КОНЕЦ     КАК Конец
		|
		|	ИЗ ( " + ТекстСотрудникиОрганизации + " ) КАК Основной
		|  
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие1 + " ) КАК УсловиеПериод1
		|	ПО		Основной.Сотрудник.ФизическоеЛицо = УсловиеПЕРИОД1.ФизическоеЛицо
		|		И	Основной.Начало <= УсловиеПериод1.Конец
		|		И	УсловиеПериод1.Начало <= Основной.Конец
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие2 + " ) КАК УсловиеПериод2
		|	ПО		Основной.Сотрудник.ФизическоеЛицо = УсловиеПЕРИОД2.ФизическоеЛицо
		|		И	Основной.Начало <= УсловиеПериод2.Конец
		|		И	УсловиеПериод2.Начало <= Основной.Конец
		|";

		
	ИначеЕсли ПараметрОтбора = "ИНВАЛИДЫ ПЕНСИОНЕРЫ"  ИЛИ ПараметрОтбора = "ІНВАЛІДИ ПЕНСІОНЕРИ" Тогда
		
		ТекстЗапросаУсловие1 = "
		|ВЫБРАТЬ
		|	СписокПериод.ФизическоеЛицо		КАК ФизическоеЛицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.ФизическоеЛицо		КАК ФизическоеЛицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.ФизическоеЛицо		КАК ФизическоеЛицо,
		|				&парамНачало			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОбИнвалидностиФизическихЛиц.СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	Список.Инвалидность
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.ФизическоеЛицо			КАК ФизическоеЛицо,
		|				Список.Период			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОбИнвалидностиФизическихЛиц КАК Список
		|			ГДЕ	Список.Инвалидность
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизическихЛиц КАК Список
		|		ПО		СписокНачало.ФизическоеЛицо = Список.ФизическоеЛицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	не Список.Инвалидность
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.ФизическоеЛицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		
		ТекстЗапросаУсловие2 = "
		|ВЫБРАТЬ
		|	СписокПериод.ФизическоеЛицо		КАК ФизическоеЛицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.ФизическоеЛицо		КАК ФизическоеЛицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.ФизЛицо		КАК ФизическоеЛицо,
		|				&парамНачало			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОПенсионерах.СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	Список.Пенсионер
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.ФизЛицо			КАК ФизическоеЛицо,
		|				Список.Период			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОПенсионерах КАК Список
		|			ГДЕ	Список.Пенсионер
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПенсионерах КАК Список
		|		ПО		СписокНачало.ФизическоеЛицо = Список.ФизЛицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	не Список.Пенсионер
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.ФизическоеЛицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		
		ТекстСотрудникиОрганизации = СтрЗаменить(ТекстСотрудникиОрганизации,"РАЗРЕШЕННЫЕ","");
		
		ТекстСотрудникиОрганизации = "                              
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		Основной.Сотрудник		КАК Сотрудник,			
		|   	// макс. начало
		|   	ВЫБОР КОГДА Основной.Начало < УсловиеПериод1.Начало И УсловиеПериод2.Начало < УсловиеПериод1.Начало ТОГДА УсловиеПериод1.Начало
		|   	 КОГДА Основной.Начало < УсловиеПериод2.Начало И УсловиеПериод1.Начало < УсловиеПериод2.Начало ТОГДА УсловиеПериод2.Начало
		|		 ИНАЧЕ  Основной.Начало КОНЕЦ     КАК Начало,
		|   	// мин. концы                                                         
		|		ВЫБОР КОГДА УсловиеПериод1.Конец < Основной.Конец И УсловиеПериод1.Конец < УсловиеПериод2.Конец ТОГДА УсловиеПериод1.Конец 
		|		 КОГДА УсловиеПериод2.Конец < Основной.Конец И УсловиеПериод2.Конец < УсловиеПериод1.Конец ТОГДА УсловиеПериод2.Конец 
		|		 ИНАЧЕ  Основной.Конец КОНЕЦ     КАК Конец
		|
		|	ИЗ ( " + ТекстСотрудникиОрганизации + " ) КАК Основной
		|  
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие1 + " ) КАК УсловиеПериод1
		|	ПО		Основной.Сотрудник.ФизическоеЛицо = УсловиеПЕРИОД1.ФизическоеЛицо
		|		И	Основной.Начало <= УсловиеПериод1.Конец
		|		И	УсловиеПериод1.Начало <= Основной.Конец
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие2 + " ) КАК УсловиеПериод2
		|	ПО		Основной.Сотрудник.ФизическоеЛицо = УсловиеПЕРИОД2.ФизическоеЛицо
		|		И	Основной.Начало <= УсловиеПериод2.Конец
		|		И	УсловиеПериод2.Начало <= Основной.Конец
		|";

		
	
		
	ИначеЕсли ПараметрОтбора = "ПЕНСИОНЕРЫ НЕ ИНВАЛИДЫ"  ИЛИ ПараметрОтбора = "ПЕНСІОНЕРИ НЕ ІНВАЛІДИ" Тогда
		
		ТекстЗапросаУсловие1 = "
		|ВЫБРАТЬ
		|	СписокПериод.ФизическоеЛицо		КАК ФизическоеЛицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.ФизическоеЛицо		КАК ФизическоеЛицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.ФизЛицо		КАК ФизическоеЛицо,
		|				&парамНачало			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОПенсионерах.СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	Список.Пенсионер
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.ФизЛицо			КАК ФизическоеЛицо,
		|				Список.Период			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОПенсионерах КАК Список
		|			ГДЕ	Список.Пенсионер
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПенсионерах КАК Список
		|		ПО		СписокНачало.ФизическоеЛицо = Список.ФизЛицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	не Список.Пенсионер
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.ФизическоеЛицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		
		ТекстЗапросаУсловие2 = "
		|ВЫБРАТЬ
		|	СписокПериод.ФизическоеЛицо		КАК ФизическоеЛицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.ФизическоеЛицо		КАК ФизическоеЛицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.ФизическоеЛицо		КАК ФизическоеЛицо,
		|				&парамНачало		КАК Начало
		|			ИЗ	РегистрСведений.СведенияОбИнвалидностиФизическихЛиц.СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	НЕ Список.Инвалидность
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.ФизическоеЛицо		КАК ФизическоеЛицо,
		|				Список.Период		КАК Начало
		|			ИЗ	РегистрСведений.СведенияОбИнвалидностиФизическихЛиц КАК Список
		|			ГДЕ	НЕ Список.Инвалидность
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				ФизЛица.Ссылка 		КАК ФизическоеЛицо,
		|				&парамНачало		КАК Начало
		|			ИЗ Справочник.ФизическиеЛица КАК ФизЛица
		|			ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.СведенияОбИнвалидностиФизическихЛиц.СрезПоследних(&парамНачало) КАК Список
		|			ПО ФизЛица.Ссылка = Список.ФизическоеЛицо
		|			ГДЕ Список.Период ЕСТЬ NULL
        |
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизическихЛиц КАК Список
		|		ПО		СписокНачало.ФизическоеЛицо = Список.ФизическоеЛицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	Список.Инвалидность
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.ФизическоеЛицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		
		ТекстСотрудникиОрганизации = СтрЗаменить(ТекстСотрудникиОрганизации,"РАЗРЕШЕННЫЕ","");
		
		ТекстСотрудникиОрганизации = "                              
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		Основной.Сотрудник		КАК Сотрудник,			
		|   	// макс. начало
		|   	ВЫБОР КОГДА Основной.Начало < УсловиеПериод1.Начало И УсловиеПериод2.Начало < УсловиеПериод1.Начало ТОГДА УсловиеПериод1.Начало
		|   	 КОГДА Основной.Начало < УсловиеПериод2.Начало И УсловиеПериод1.Начало < УсловиеПериод2.Начало ТОГДА УсловиеПериод2.Начало
		|		 ИНАЧЕ  Основной.Начало КОНЕЦ     КАК Начало,
		|   	// мин. концы                                                         
		|		ВЫБОР КОГДА УсловиеПериод1.Конец < Основной.Конец И УсловиеПериод1.Конец < УсловиеПериод2.Конец ТОГДА УсловиеПериод1.Конец 
		|		 КОГДА УсловиеПериод2.Конец < Основной.Конец И УсловиеПериод2.Конец < УсловиеПериод1.Конец ТОГДА УсловиеПериод2.Конец 
		|		 ИНАЧЕ  Основной.Конец КОНЕЦ     КАК Конец
		|
		|	ИЗ ( " + ТекстСотрудникиОрганизации + " ) КАК Основной
		|  
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие1 + " ) КАК УсловиеПериод1
		|	ПО		Основной.Сотрудник.ФизическоеЛицо = УсловиеПЕРИОД1.ФизическоеЛицо
		|		И	Основной.Начало <= УсловиеПериод1.Конец
		|		И	УсловиеПериод1.Начало <= Основной.Конец
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие2 + " ) КАК УсловиеПериод2
		|	ПО		Основной.Сотрудник.ФизическоеЛицо = УсловиеПЕРИОД2.ФизическоеЛицо
		|		И	Основной.Начало <= УсловиеПериод2.Конец
		|		И	УсловиеПериод2.Начало <= Основной.Конец
		|";
		
	КонецЕсли; 
	
	Запрос.Текст = ТекстСотрудникиОрганизации;
	спФизЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
	
	Возврат спФизЛиц;
	
КонецФункции // ПолучитьСреднюю()

// Процедура ЗаполнитьНачальныеНастройки
//
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ТекстСотрудникиОрганизации = ПолучитьСотрудников("И Работники.Сотрудник в (&парамФизЛицо)");
	
	ТекстСотрудникиОрганизации = СтрЗаменить(ТекстСотрудникиОрганизации,"РАЗРЕШЕННЫЕ","");
	
	ПостроительОтчета.Текст = "
	|ВЫБРАТЬ  РАЗРЕШЕННЫЕ
	|	РаботникиОрганизаций.Организация              КАК Организация,
	|	РаботникиОрганизаций.ПодразделениеОрганизации.Представление КАК Подразделение,
	|	РаботникиОрганизаций.Сотрудник.ФизическоеЛицо.Наименование         КАК ФизЛицо,
	|	Календарь.ДатаКалендаря                                     КАК Буква,
	|	СУММА(РаботникиОрганизаций.Учитывать / &парамКоличествоДней )	КАК Средняя,
	|	СУММА(РаботникиОрганизаций.Учитывать)                     		КАК Результат
	|
	|ИЗ	 РегистрСведений.ИНАГРО_РегламентированныйПроизводственныйКалендарь КАК Календарь
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ( " + ТекстСотрудникиОрганизации + " ) КАК РаботникиОрганизаций
	|ПО Календарь.ДатаКалендаря МЕЖДУ РаботникиОрганизаций.Начало И РаботникиОрганизаций.Конец	
	|	
	|ГДЕ	Календарь.ДатаКалендаря МЕЖДУ &парамНачало И &парамКонец
	|  И    НЕ РаботникиОрганизаций.Сотрудник ЕСТЬ NULL
	|
	|{ГДЕ РаботникиОрганизаций.Организация 				КАК Организация,
	|	  РаботникиОрганизаций.ПодразделениеОрганизации КАК Подразделение}	
	|
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизаций.Организация,
	|	РаботникиОрганизаций.ПодразделениеОрганизации,
	|	РаботникиОрганизаций.Сотрудник.ФизическоеЛицо,
	|	Календарь.ДатаКалендаря
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение,
	|	ФизЛицо,
	|	Буква
	|
	|ИТОГИ СУММА(Средняя), СУММА(Результат) ПО
	|	Общие,
	|	Организация,
	|	Подразделение,
	|	ФизЛицо
    |	
	|
	|{ИТОГИ ПО
	|	Организация,
	|	Подразделение,
	|	ФизЛицо,
	|	Буква
	|   }
	|";
	
    ПостроительОтчета.ЗаполнитьНастройки();
	
	СтруктураПредставлениеПолей = Новый Структура("Физлицо,ИмяВидаРасчета",
												  "Работник","Буква");
		
	ПостроительОтчета.Отбор.Добавить("Организация");
	ПостроительОтчета.Отбор.Добавить("Подразделение");
	
	
	ПостроительОтчета.ИзмеренияКолонки.Добавить("Буква");
	
КонецПроцедуры

#КонецОбласти