#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Отчет.НачалоПериода = '00010101' Тогда
		Отчет.НачалоПериода = (НачалоГода(ТекущаяДата()));
	КонецЕсли;
	
	Если Отчет.КонецПериода = '00010101' Тогда
		Отчет.КонецПериода  = КонецДня(ТекущаяДата());
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Отчет.Организация) Тогда
		Отчет.Организация   = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	Отчет.Общая = Истина;
	
	Если Параметры.Свойство("ИмяКоманды") Тогда
		
		Если Параметры.Свойство("СтруктураПараметровОтбора") И ЗначениеЗаполнено(Параметры.СтруктураПараметровОтбора) Тогда 
			
			СтруктураПараметровОтбора = Параметры.СтруктураПараметровОтбора;
			
			Отчет.Номенклатура 	= СтруктураПараметровОтбора.Номенклатура;
			Если СтруктураПараметровОтбора.Свойство("ВидХранения") Тогда
				Отчет.ВидХранения		= СтруктураПараметровОтбора.ВидХранения;
			КонецЕсли;
			
			Отчет.Склад			= СтруктураПараметровОтбора.Склад;
			Отчет.Урожай		= СтруктураПараметровОтбора.Урожай;
            Если СтруктураПараметровОтбора.Свойство("ПериодОтчета") Тогда
                Отчет.НачалоПериода	= СтруктураПараметровОтбора.ПериодОтчета.ДатаНачала;
			    Отчет.КонецПериода	= СтруктураПараметровОтбора.ПериодОтчета.ДатаОкончания;
            Иначе
                Отчет.НачалоПериода	= СтруктураПараметровОтбора.НачалоПериода;
			    Отчет.КонецПериода	= СтруктураПараметровОтбора.КонецПериода;
            КонецЕсли; 
            			
		КонецЕсли;
		
		Если Параметры.ИмяКоманды = "Форма36Сводная" Тогда
			
			Отчет.Общая    = Истина;	
            ОбщаяПереключатель = 0;
            Отчет.Владелец = Справочники.Контрагенты.ПустаяСсылка();		
			
		ИначеЕсли Параметры.ИмяКоманды = "Форма36ПоВладельцу" Тогда
			
			Отчет.Общая    = Ложь;	
            ОбщаяПереключатель = 1;
            Отчет.Владелец = СтруктураПараметровОтбора.Владелец;			
			Если СтруктураПараметровОтбора.Свойство("ДоговорКонтрагента") Тогда
                Отчет.ДоговорКонтрагента =    СтруктураПараметровОтбора.ДоговорКонтрагента;
            КонецЕсли; 		
		КонецЕсли;
		
		СформироватьОтчетНаСервере();
    Иначе
        ЗагрузитьЗначенияРеквизитов();
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаНачалоКонецПериодаПриИзменении(Элемент)
	
	Отчет.НачалоПериода = НачалоДня(Отчет.НачалоПериода);
	Отчет.КонецПериода  = КонецДня(Отчет.КонецПериода);

КонецПроцедуры

&НаКлиенте
Процедура ОбщаяПереключательПриИзменении(Элемент)
	
	Отчет.Общая = ОбщаяПереключатель = 0;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода", Отчет.НачалоПериода, Отчет.КонецПериода);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения); 
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Отчет, РезультатВыбора, "НачалоПериода,КонецПериода"); 	

КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	
	СформироватьНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура СформироватьНаСервере()
	
	СформироватьОтчетНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
	
	СтруктураВыбора = Новый Структура("НачалоПериода,КонецПериода,Организация,Владелец,ДоговорКонтрагента,Номенклатура,Склад,Урожай,ВидХранения,
	|ВыводитьТолькоОбороты,ПоказыватьПереоформление,ПоказыватьУсушку,ИтогиЗаМесяц,ИтогиЗаДень,ТолькоОборотЗаДень,РасшифроватьИтоги,
	|ВыводитьПоказателиКачестваСТочностьюДоОдногоЗнака,НумерацияСтраниц,НачальнаяСтраницаДляНумерации, Общая, ВыводитьПериод");
	
	ПараметрыОткрытия = ЗаполнитьСтруктуру(СтруктураВыбора);

	ОписаниеОповещения = Новый ОписаниеОповещения("НастройкиЗавершение", ЭтотОбъект);
	ОткрытьФорму("Отчет.ИНАГРО_Форма36.Форма.ФормаНастройки", ПараметрыОткрытия,ЭтотОбъект , , , , ОписаниеОповещения); 

КонецПроцедуры

&НаКлиенте
Процедура НастройкиЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Отчет, РезультатВыбора); 	
	СформироватьОтчетНаСервере(); 	
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СформироватьОтчетНаСервере()
	
	Результат.Очистить();

	Если Не ПроверитьЗаполнение() Тогда 
		Возврат Новый Структура("ЗаданиеВыполнено", Истина);
	КонецЕсли;
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
	ИдентификаторЗадания = Неопределено;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеИспользовать");	
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет"); 
	
	Результат = ОтчетОбъект.ВывестиОтчет(); 	
	
КонецФункции

&НаСервере
Функция ЗаполнитьСтруктуру(СтруктураФормы)
	
	 СтруктураВозврата = Новый Структура;
	 Для каждого Свойство Из СтруктураФормы Цикл
		ЗначениеФормы = Отчет[Свойство.Ключ];
	 	СтруктураВозврата.Вставить(Свойство.Ключ,ЗначениеФормы);
	 КонецЦикла; 
	 
	 Возврат СтруктураВозврата; 	
		
КонецФункции   

&НаКлиенте
Процедура СформироватьФорма37Общая(Команда) 	
    
    СтруктуруОтбораПараметров   = СформироватьСтруктуруПараметровОтбора("Форма37Общая");
    СтруктуруОтбораПараметров.Вставить("ВидФормы","Форма37Общая");
    ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора,ИмяКоманды,СформироватьПриОткрытии",СтруктуруОтбораПараметров,"Форма37Общая",Истина);
    ОткрытьФорму("Отчет.ИНАГРО_Форма37.Форма.ФормаОтчета",ПараметрыОткрытия);
    
КонецПроцедуры   

&НаКлиенте
Процедура СформироватьФорма37ПоВладельцам(Команда)
    
    СтруктуруОтбораПараметров   = СформироватьСтруктуруПараметровОтбора("РеестрДвиженийЗернаПоВладельцам");
    СтруктуруОтбораПараметров.Вставить("ВидФормы","РеестрДвиженийЗернаПоВладельцам");
    ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора,ИмяКоманды,СформироватьПриОткрытии",СтруктуруОтбораПараметров,"РеестрДвиженийЗернаПоВладельцам",Истина);
    ОткрытьФорму("Отчет.ИНАГРО_Форма37.Форма.ФормаОтчета",ПараметрыОткрытия);
    
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФорма37(Команда)
    
    СтруктуруОтбораПараметров   = СформироватьСтруктуруПараметровОтбора("Форма37");
    СтруктуруОтбораПараметров.Вставить("ВидФормы","Форма37");
    ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора,ИмяКоманды,СформироватьПриОткрытии",СтруктуруОтбораПараметров,"Форма37",Истина);
    ОткрытьФорму("Отчет.ИНАГРО_Форма37.Форма.ФормаОтчета",ПараметрыОткрытия);
    
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФорма37Усушка(Команда)
    
    СтруктуруОтбораПараметров   = СформироватьСтруктуруПараметровОтбора("Форма37Усушка");
    СтруктуруОтбораПараметров.Вставить("ВидФормы","Форма37Усушка");
    ПараметрыОткрытия = Новый Структура("СтруктураПараметровОтбора,ИмяКоманды,СформироватьПриОткрытии",СтруктуруОтбораПараметров,"Форма37Усушка",Истина);
    ОткрытьФорму("Отчет.ИНАГРО_Форма37.Форма.ФормаОтчета",ПараметрыОткрытия);
    
КонецПроцедуры

&НаКлиенте
Процедура СформироватьУнивАнализЗерна(Команда)
	
	ПользовательскиеНастройки = ВернутьНастройкиКомпоновщика("ИНАГРО_УниверсальныйАнализЗерна","АнализЗернаОборотка","Основной");
    ПараметрыОткрытия = Новый Структура("ПользовательскиеНастройки,СформироватьПриОткрытии,КлючВарианта,ИмяКоманды", ПользовательскиеНастройки,Истина,"Основной","УнивАнализЗерна");
    ОткрытьФорму("Отчет.ИНАГРО_УниверсальныйАнализЗерна.Форма.ФормаОтчета",ПараметрыОткрытия);


КонецПроцедуры                                                         

&НаКлиенте
Процедура СформироватьУнивАнализЗернаПоДвижениям(Команда)
	
	ПользовательскиеНастройки = ВернутьНастройкиКомпоновщика("ИНАГРО_УниверсальныйАнализЗерна","АнализЗернаСвод","Вариант1");
    ПараметрыОткрытия = Новый Структура("ПользовательскиеНастройки,СформироватьПриОткрытии,КлючВарианта,ИмяКоманды", ПользовательскиеНастройки,Истина,"Вариант1","ПоДвижениям");
    ОткрытьФорму("Отчет.ИНАГРО_УниверсальныйАнализЗерна.Форма.ФормаОтчета",ПараметрыОткрытия);


КонецПроцедуры  

&НаКлиенте
Процедура СформироватьУнивАнализСводПоДвижениюЗачВесе(Команда)
    
    ПользовательскиеНастройки = ВернутьНастройкиКомпоновщика("ИНАГРО_УниверсальныйАнализЗерна","СводПоДвижениюЗачВесе","Вариант2");
    ПараметрыОткрытия = Новый Структура("ПользовательскиеНастройки,СформироватьПриОткрытии,КлючВарианта,ИмяКоманды", ПользовательскиеНастройки,Истина,"Вариант2","СводПоДвижениюЗачВесе");
    ОткрытьФорму("Отчет.ИНАГРО_УниверсальныйАнализЗерна.Форма.ФормаОтчета",ПараметрыОткрытия);
    
КонецПроцедуры  

&НаСервере
Функция ВернутьНастройкиКомпоновщика(ИмяОтчета,ИмяФормыОтчета,ИмяВариантаОтчета)
        
    ОтчетОбъект                 = Отчеты[ИмяОтчета].Создать();
    НовыйКомпоновщикНастроек    = Новый КомпоновщикНастроекКомпоновкиДанных;
    НовыйКомпоновщикНастроек.ЗагрузитьНастройки(ОтчетОбъект.СхемаКомпоновкиДанных.ВариантыНастроек[ИмяВариантаОтчета].Настройки);
    
    СтруктуруОтбораПараметров   = СформироватьСтруктуруПараметровОтбора(ИмяФормыОтчета);
    ВложеныйОтчет               = НовыйКомпоновщикНастроек.Настройки.Структура.Количество() = 1;
    ПользовательскиеНастройки   = Отчеты.ИНАГРО_УниверсальныйАнализЗерна.ЗаполнитьПользовательскиеНастройкиОтчета(НовыйКомпоновщикНастроек,СтруктуруОтбораПараметров,ВложеныйОтчет);
    
    Возврат ПользовательскиеНастройки;
	
КонецФункции

Функция СформироватьСтруктуруПараметровОтбора(ИмяФормыОтчета ="")
	
	СтруктураПараметровОтбора = Новый Структура;	
	
	СтруктураПараметровОтбора.Вставить("Номенклатура",Отчет.Номенклатура);
	СтруктураПараметровОтбора.Вставить("ВидХранения",Отчет.ВидХранения);
	СтруктураПараметровОтбора.Вставить("Склад",Отчет.Склад);
	СтруктураПараметровОтбора.Вставить("Урожай",Отчет.Урожай);
	СтруктураПараметровОтбора.Вставить("Организация",Отчет.Организация);
    
    ПериодОтчета = Новый СтандартныйПериод(Отчет.НачалоПериода,Отчет.КонецПериода);
	СтруктураПараметровОтбора.Вставить("ПериодОтчета",ПериодОтчета);
		
	Если ИмяФормыОтчета = "Форма37Сводная" Или ИмяФормыОтчета = "АнализЗернаОборотка" ИЛИ ИмяФормыОтчета = "АнализЗернаСвод" ИЛИ ИмяФормыОтчета = "СводПоДвижениюЗачВесе" Тогда
		 СтруктураПараметровОтбора.Вставить("Владелец",Отчет.Владелец);
	КонецЕсли; 

	
	Возврат СтруктураПараметровОтбора;
	
КонецФункции

&НаСервере
Процедура СохранитьЗначенияРеквизитов()

	Настройка = Новый Структура("НачалоПериода,КонецПериода,Организация,Владелец,ДоговорКонтрагента,Номенклатура,Склад,Урожай,ВидХранения,
	|ВыводитьТолькоОбороты,ПоказыватьПереоформление,ПоказыватьУсушку,ИтогиЗаМесяц,ИтогиЗаДень,ТолькоОборотЗаДень,РасшифроватьИтоги,
	|ВыводитьПоказателиКачестваСТочностьюДоОдногоЗнака,НумерацияСтраниц,НачальнаяСтраницаДляНумерации,ОбщаяПереключатель, Общая, ВыводитьПериод");
    Пользователь = Пользователи.ТекущийПользователь();

    ЗаполнитьЗначенияСвойств(Настройка, Отчет);
    Настройка.ОбщаяПереключатель = ОбщаяПереключатель;

    УстановитьПривилегированныйРежим(Истина);
    ХранилищеОбщихНастроек.Сохранить("Отчет.ИНАГРО_Форма36", "Основной",Настройка,,Пользователь.Наименование);
    УстановитьПривилегированныйРежим(Ложь);


КонецПроцедуры

&НаСервере
Процедура ЗагрузитьЗначенияРеквизитов()

	Пользователь = Пользователи.ТекущийПользователь();

	УстановитьПривилегированныйРежим(Истина);
    ЗначениеНастроек = ХранилищеОбщихНастроек.Загрузить("Отчет.ИНАГРО_Форма36","Основной",,Пользователь.Наименование);
    УстановитьПривилегированныйРежим(Ложь);
    
	Если ТипЗнч(ЗначениеНастроек) = Тип("Структура") Тогда

		ЗаполнитьЗначенияСвойств(Отчет, ЗначениеНастроек);
        Если ЗначениеНастроек.Свойство("ОбщаяПереключатель") Тогда
            ОбщаяПереключатель = ЗначениеНастроек.ОбщаяПереключатель;
        КонецЕсли; 
        

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
    
   Если НЕ ЗавершениеРаботы Тогда
        СохранитьЗначенияРеквизитов();    	
   КонецЕсли; 

КонецПроцедуры

#КонецОбласти




