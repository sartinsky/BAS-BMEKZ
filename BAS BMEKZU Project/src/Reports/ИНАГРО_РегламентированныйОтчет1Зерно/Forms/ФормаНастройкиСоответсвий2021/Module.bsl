
&НаКлиенте
Процедура ТаблицаПоказателейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
    ТекущиеДанные = ТаблицаПоказателей.НайтиПоИдентификатору(ВыбраннаяСтрока);
        
    ДополнительныеПараметры = Новый Структура("ТекущиеДанные",ТекущиеДанные);
    ПараметрыОткрытия = Новый Структура("Код,КодСтроки,Наименование,НаименованиеСтроки,Культуры");
   
    Адрес = СформироватьТаблицуКультурнаСервере(ТекущиеДанные.КлючСвязи);
    ПараметрыОткрытия.Культуры = Адрес;
    ЗаполнитьЗначенияСвойств(ПараметрыОткрытия,ТекущиеДанные);
      
    Оповещение = Новый ОписаниеОповещения("РедактированиеСтрокиПриОкончании",ЭтаФорма,ДополнительныеПараметры);
    ОткрытьФорму("Отчет.ИНАГРО_РегламентированныйОтчет1Зерно.Форма.ФормаРедактированияСтроки",ПараметрыОткрытия,ЭтаФорма,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
    
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеСтрокиПриОкончании(Результат,ДополнительныеПараметры)Экспорт
    
    Если Не Результат = Неопределено Тогда
        Если ДополнительныеПараметры = Неопределено Тогда
             ТекущаяСтрокаПоказатели = ДобавитьСтрокуПоказателей();
        Иначе    
             ТекущаяСтрокаПоказатели = ДополнительныеПараметры.ТекущиеДанные;
        КонецЕсли; 
        
        ЗаполнитьЗначенияСвойств(ТекущаяСтрокаПоказатели,Результат);
        КлючСвязи = ТекущаяСтрокаПоказатели.КлючСвязи;
        МассивСтрокСоответствий = ТаблицаКультур.НайтиСтроки(Новый Структура("КлючСвязи",КлючСвязи));
        
        Для каждого СтрокаОтбора Из МассивСтрокСоответствий Цикл
            ТаблицаКультур.Удалить(СтрокаОтбора);
        КонецЦикла; 
        
        ЗаполнитьТаблицуКультур(Результат.Культуры,КлючСвязи);
        
        ЭтаФорма.Модифицированность = Истина;
        
    КонецЕсли; 
     
КонецПроцедуры

&НаКлиенте
Функция ДобавитьСтрокуПоказателей()
    
    ТаблицаПоказателей.Сортировать("КлючСвязи");
    
    НомерПоследейСтроки = ТаблицаПоказателей.Количество();
    Если НомерПоследейСтроки = 0 Тогда
        КлючСвязи = 1;
    Иначе
        ПоследняСтрокаПоказатели = ТаблицаПоказателей.НайтиПоИдентификатору(НомерПоследейСтроки - 1);
        КлючСвязи = ПоследняСтрокаПоказатели.КлючСвязи + 1;
    КонецЕсли; 
    
    НоваяСтрокаПоказателей = ТаблицаПоказателей.Добавить();
    НоваяСтрокаПоказателей.КлючСвязи = КлючСвязи;
    
    Возврат НоваяСтрокаПоказателей;
    
КонецФункции // ()

 &НаСервере
Процедура ЗаполнитьТаблицуКультур(Адрес,КлючСвязи)
    
    ТЗКультуры = ПолучитьИзВременногоХранилища(Адрес);
    	
    Для каждого СтрокаТЗ Из ТЗКультуры Цикл
    
        СтрокаКоллекции = ТаблицаКультур.Добавить();	
        СтрокаКоллекции.Культура    = СтрокаТЗ.Культура;
        СтрокаКоллекции.КлючСвязи   = КлючСвязи;
    КонецЦикла;
    
КонецПроцедуры
 
&НаСервере
Функция СформироватьТаблицуКультурнаСервере(КлючСвязи)
    
    ТЗКультур = Новый ТаблицаЗначений;
    ТЗКультур.Колонки.Добавить("Культура");
    
    МассивСтрок = ТаблицаКультур.НайтиСтроки(Новый Структура("КлючСвязи",КлючСвязи));

    Для каждого ЭлМассива Из МассивСтрок Цикл
        СтрокаТЗ = ТЗКультур.Добавить();
        ЗаполнитьЗначенияСвойств(СтрокаТЗ,ЭлМассива);
    КонецЦикла; 
    
    Адрес = ПоместитьВоВременноеХранилище(ТЗКультур);
    
    Возврат Адрес;
    
КонецФункции
  
&НаКлиенте
Процедура ПодборСКласификатора(Команда)
    
    ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПослеЗакрытияВопроса", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Перед заполнением табличная часть будет очищена и все предыдущие настройки отчета удалены. Продолжить?'; uk = 'Перед заповненням таблиця відповідності буде очищена та всі налаштування звіту видалені. Продовжити? '"), РежимДиалогаВопрос.ОКОтмена);
	Возврат;

КонецПроцедуры

 &НаКлиенте
Процедура ВыполнитьПослеЗакрытияВопроса(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.ОК Тогда
		
		ТаблицаПоказателей.Очистить();
        ЗаполнитьТаблицуПоКласификатору();
    ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		
		Возврат;		
		
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПоКласификатору()
    
    ТЗПоказатели = ТаблицаПоказателей.Выгрузить();
    Отчеты.ИНАГРО_РегламентированныйОтчет1Зерно.ЗаполнитьТаблицуПоказателейНаСервере(ТЗПоказатели, "ПоказателиОтчета2021");
    ТаблицаПоказателей.Загрузить(ТЗПоказатели);

КонецПроцедуры

&НаКлиенте
Процедура СохранитьИВыйти(Команда)
    
   СохранитьНастройкиНаСервере();    
   Закрыть(); 
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере()
    
    ТЗПоказатели = ТаблицаПоказателей.Выгрузить();
    ТЗКультуры   = ТаблицаКультур.Выгрузить();
    
    СтруктураНастроек = Новый Структура("ТаблицаПоказателей,ТаблицаКультур",ТЗПоказатели,ТЗКультуры);
    УстановитьПривилегированныйРежим(Истина);
    ХранилищеОбщихНастроек.Сохранить("ИНАГРО_НастройкиПоказателей1Зерно",,СтруктураНастроек,,"Пользователь1Зерно");
    УстановитьПривилегированныйРежим(Ложь);
    ЭтаФорма.Модифицированность = Ложь;
    
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    ЗагрузитьНастроки();
    
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастроки()
    УстановитьПривилегированныйРежим(Истина);
    Настройки = ХранилищеОбщихНастроек.Загрузить("ИНАГРО_НастройкиПоказателей1Зерно",,,"Пользователь1Зерно");
    УстановитьПривилегированныйРежим(Ложь);
    Если НЕ Настройки = Неопределено Тогда
        ТаблицаКультур.Загрузить(Настройки.ТаблицаКультур);
        ТаблицаПоказателей.Загрузить(Настройки.ТаблицаПоказателей);
    КонецЕсли; 
    
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
    СохранитьНастройкиНаСервере();
    ЭтаФорма.Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы <> Неопределено Тогда 
		
		Если ЗавершениеРаботы И Модифицированность Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;

    Если ЭтаФорма.Модифицированность Тогда
        Отказ = Истина;
        Оповещение = Новый ОписаниеОповещения("ОпределитьСохранениеНастроекЗавершение",ЭтаФорма);
        ПоказатьВопрос(Оповещение,НСтр("ru = 'Настройки показателей были изменены. Сохранить?'; uk = 'Налаштування показників були змінені. Зберегти?'"), РежимДиалогаВопрос.ДаНет);
    КонецЕсли; 
            
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьСохранениеНастроекЗавершение(Результат,ДопПараметры) Экспорт

    Если  Результат = КодВозвратаДиалога.Да Тогда
        СохранитьНастройкиНаСервере();
    Иначе
        ЭтаФорма.Модифицированность = Ложь;
    КонецЕсли; 	
    Закрыть();
    
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтроку(Команда)
    
    Оповещение = Новый ОписаниеОповещения("РедактированиеСтрокиПриОкончании",ЭтаФорма);
    ОткрытьФорму("Отчет.ИНАГРО_РегламентированныйОтчет1Зерно.Форма.ФормаРедактированияСтроки",,ЭтаФорма,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
      
КонецПроцедуры

 