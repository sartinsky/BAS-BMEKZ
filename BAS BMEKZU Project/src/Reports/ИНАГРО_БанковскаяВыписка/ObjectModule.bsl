#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий
	
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	НачалоПериода = Настройки.ПараметрыДанных.Элементы.Найти("Период").Значение.ДатаНачала;
	КонецПериода = Настройки.ПараметрыДанных.Элементы.Найти("Период").Значение.ДатаОкончания;
	
	// Формирование отчета при незаполненном периоде для корректного вывода сальдо                         
	ПериодОтчета = Настройки.ПараметрыДанных.Элементы.Найти("Период").Значение;
	Если НачалоПериода = '00010101' И КонецПериода = '00010101' Тогда
		КонецПериода = '00010101';
		Настройки.ПараметрыДанных.Элементы.Найти("Период").Использование = Истина;
		КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КонецПериода", КонецПериода);
	КонецЕсли; 	
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Период", ПериодОтчета);
	
	// Проверяем заполнение полей-параметров "Организация" и "Счет"
	Организация = Настройки.ПараметрыДанных.Элементы.Найти("Организация").Значение;
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ВызватьИсключение Нстр("ru='Необходимо выбрать Организация!';uk='Необхідно вибрати Організація!'",Локализация.КодЯзыкаИнтерфейса());
	КонецЕсли; 
	
	Счет = Настройки.ПараметрыДанных.Элементы.Найти("Счет").Значение;
	Если Не ЗначениеЗаполнено(Счет) Тогда
		ВызватьИсключение Нстр("ru='Необходимо выбрать счет!';uk='Необхідно вибрати рахунок!'",Локализация.КодЯзыкаИнтерфейса());
	КонецЕсли; 
	
	// Выводим начально сальдо по выбранному счету
	мБухИтоги = Обработки.БухгалтерскиеИтоги.Создать();
	Итоги = "НачальныйОстатокДт, НачальныйОстатокКт,
	|КонечныйОстатокДт,  КонечныйОстатокКт, ";
	мБухИтоги.РассчитатьИтоги("Хозрасчетный",Итоги ,"Сумма","Счет",НачалоПериода,КонецПериода,,,,,,Новый Структура ("Организация",Организация));
	НачДт = мБухИтоги.ПолучитьИтог("СуммаНачальныйОстатокДт", "Счет", Счет);
	НачКт = мБухИтоги.ПолучитьИтог("СуммаНачальныйОстатокКт", "Счет", Счет);
	КонДт = мБухИтоги.ПолучитьИтог("СуммаКонечныйОстатокДт", "Счет", Счет);
	КонКт = мБухИтоги.ПолучитьИтог("СуммаКонечныйОстатокКт", "Счет", Счет);

 	Настройки.ПараметрыДанных.Элементы.Найти("НачДт").Значение = НачДт;
	Настройки.ПараметрыДанных.Элементы.Найти("НачКт").Значение = НачКт;
	Настройки.ПараметрыДанных.Элементы.Найти("КонДт").Значение = КонДт;
	Настройки.ПараметрыДанных.Элементы.Найти("КонКт").Значение = КонКт;

	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных, , ДанныеРасшифровки, Истина);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);

КонецПроцедуры

#КонецОбласти

#КонецЕсли