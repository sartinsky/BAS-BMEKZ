#Область СлужебныеПроцедурыИФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
  
    НастройкиСКД = ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(); 
	
	ПоВладельцам = НастройкиСКД.ПараметрыДанных.Элементы.Найти("ПоВладельцам").Значение;
	
	Если ПоВладельцам Тогда
		  НастройкиСКД.Структура[0].Строки[1].Использование = Истина;
		  НастройкиСКД.Структура[0].Строки[0].Использование = Ложь;
	Иначе
		НастройкиСКД.Структура[0].Строки[1].Использование = Ложь;
		НастройкиСКД.Структура[0].Строки[0].Использование = Истина; 
	КонецЕсли; 
	
	ЭтотОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиСКД);
  
КонецПроцедуры

Функция ВывестиОтчет(НачПериода,КонПериода)Экспорт 	
	Если ПоВладельцам Тогда
		ТабДок = СформироватьОтчетПоВладельцам(НачПериода,КонПериода);
	Иначе
		ТабДок = СформироватьОтчетСводный(НачПериода,КонПериода);
	КонецЕсли;
	
	Возврат ТабДок;
КонецФункции

Функция СформироватьОтчетСводный(НачПериода,КонПериода)	
		 
	Запрос = Новый Запрос;
	
	Фильтр = "";
	Фильтр = Фильтр + " Организация В ИЕРАРХИИ(&Организация)";	
	Фильтр = Фильтр + ?(ЗначениеЗаполнено(Урожай)		, "И Урожай В ИЕРАРХИИ(&Урожай)", "");	
	Фильтр = Фильтр + ?(ЗначениеЗаполнено(Склад)		, "И Склад В ИЕРАРХИИ(&Склад)", "");
	Фильтр = Фильтр + ?(ЗначениеЗаполнено(ВидХранения)	, "И ВидХранения В ИЕРАРХИИ(&ВидХранения)", "");
	Фильтр = Фильтр + ?(ЗначениеЗаполнено(Номенклатура)	, "И Номенклатура В ИЕРАРХИИ(&Номенклатура)", "");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.Организация КАК Организация,
	|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.Склад КАК Склад,
	|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.Урожай КАК Урожай,
	|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.ВидХранения КАК ВидХранения,
	|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.Номенклатура КАК Номенклатура,
	|	ИНАГРО_Форма36СводнаяОстаткиИОбороты.Период КАК Период,
	|	ЕСТЬNULL(ИНАГРО_Форма36СводнаяОстаткиИОбороты.ВесПриходКонечныйОстаток, 0) КАК Приход,
	|	ЕСТЬNULL(ИНАГРО_Форма36СводнаяОстаткиИОбороты.ВесПриходКонечныйОстаток, 0) КАК ВесПриходКонечныйОстаток,
	|	ЕСТЬNULL(ИНАГРО_Форма36СводнаяОстаткиИОбороты.ВесРасходКонечныйОстаток, 0) КАК ВесРасходКонечныйОстаток
	|ИЗ
	|	РегистрНакопления.ИНАГРО_Форма36Сводная.ОстаткиИОбороты(&НачПериода, &КонПериода, День, , &Фильтр) КАК ИНАГРО_Форма36СводнаяОстаткиИОбороты
	|ИТОГИ
	|	СУММА(ВесПриходКонечныйОстаток),
	|	СУММА(ВесРасходКонечныйОстаток),
	|	СУММА(Приход)
	|ПО
	|	Организация,
	|	Склад,
	|	Урожай,
	|	ВидХранения,
	|	Номенклатура,
	|	Период ПЕРИОДАМИ(ДЕНЬ, &НачПериода, &КонПериода)";
	//"+Фильтр+"
	Запрос.УстановитьПараметр("НачПериода",НачПериода);
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Урожай",Урожай);
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("ВидХранения",ВидХранения);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Фильтр", Фильтр);
	
	Результат = Запрос.Выполнить();
	
	// создаем тз
	ТЗвременная = Результат.Выгрузить();
	// ... и очищаем ее
	ТЗвременная.Очистить();	
	// обходим результат "периодами" помещая в тз
	
	ВыборкаОрганизация = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Организация");
	Пока ВыборкаОрганизация.Следующий() Цикл
		ВыборкаСклад = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Склад");
		Пока ВыборкаСклад.Следующий() Цикл			
			ВыборкаУрожай = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Урожай");
			Пока ВыборкаУрожай.Следующий() Цикл		
				ВыборкаВидХранения = ВыборкаУрожай.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ВидХранения");
				Пока ВыборкаВидХранения.Следующий() Цикл	
					ВыборкаНоменклатура = ВыборкаВидХранения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Номенклатура");
					Пока ВыборкаНоменклатура.Следующий() Цикл
						ВыборкаПериод = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период","ВСЕ");
						Пока ВыборкаПериод.Следующий() Цикл 
							НСтрока = ТЗвременная.Добавить();
							ЗаполнитьЗначенияСвойств(НСтрока,ВыборкаПериод);			
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	// второй запрос нужен чтобы поместить нашу тз во временную таблицу
	Запрос = Новый Запрос;
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПараметр.Организация,
	|	ТаблицаПараметр.Склад,
	|	ТаблицаПараметр.Урожай,
	|	ТаблицаПараметр.ВидХранения,	
	|	ТаблицаПараметр.Номенклатура,
	|	ТаблицаПараметр.Период,
	|	ТаблицаПараметр.ВесПриходКонечныйОстаток КАК ВесПриходКонечныйОстаток,
	|	ТаблицаПараметр.ВесРасходКонечныйОстаток КАК ВесРасходКонечныйОстаток
	|ПОМЕСТИТЬ ВременнаяТаблица
	|ИЗ
	|	&ТаблицаПараметр КАК ТаблицаПараметр";
	
	Запрос.УстановитьПараметр("ТаблицаПараметр",ТЗвременная);
	
	Результат = Запрос.Выполнить();
	
	
	// третий запрос - используем нашу временную таблицу, соединяее ее с другой и вычисляя произвольную формулу
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВременнаяТаблица.Организация КАК Организация,
	|	ВременнаяТаблица.Склад КАК Склад,
	|	ВременнаяТаблица.Урожай КАК Урожай,
	|	ВременнаяТаблица.ВидХранения КАК ВидХранения,
	|	ВременнаяТаблица.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблица.Период КАК Период,
	|	ВременнаяТаблица.ВесПриходКонечныйОстаток - ВременнаяТаблица.ВесРасходКонечныйОстаток КАК Остаток,
	|	ЕСТЬNULL(ИНАГРО_Форма36СводнаяОстаткиИОбороты.ВесПриходПриход, 0) КАК Приход
	|ИЗ
	|	ВременнаяТаблица КАК ВременнаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИНАГРО_Форма36Сводная.ОстаткиИОбороты(&НачПериода, &КонПериода, День, , &Фильтр) КАК ИНАГРО_Форма36СводнаяОстаткиИОбороты
	|		ПО ВременнаяТаблица.ВидХранения = ИНАГРО_Форма36СводнаяОстаткиИОбороты.ВидХранения
	|			И ВременнаяТаблица.Организация = ИНАГРО_Форма36СводнаяОстаткиИОбороты.Организация
	|			И ВременнаяТаблица.Склад = ИНАГРО_Форма36СводнаяОстаткиИОбороты.Склад
	|			И ВременнаяТаблица.Урожай = ИНАГРО_Форма36СводнаяОстаткиИОбороты.Урожай
	|			И ВременнаяТаблица.Номенклатура = ИНАГРО_Форма36СводнаяОстаткиИОбороты.Номенклатура
	|			И ВременнаяТаблица.Период = ИНАГРО_Форма36СводнаяОстаткиИОбороты.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Урожай,
	|	Склад,
	|	ВидХранения,
	|	Номенклатура,
	|	Период
	|ИТОГИ
	|	СУММА(Остаток),
	|	СУММА(Приход)
	|ПО
	|	Организация,
	|	Урожай,
	|	Склад,
	|	ВидХранения,
	|	Номенклатура,
	|	Период";
	
	Запрос.УстановитьПараметр("НачПериода",НачПериода);
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Урожай",Урожай);
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("ВидХранения",ВидХранения);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("Владелец",Владелец);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Фильтр", Фильтр);
	
	ДеревоРезультата = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	//ТабДокумент = ЭлементыФормы.ПолеТабличногоДокумента;
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.Очистить();
	Макет = ПолучитьМакет("РасчетСреднегоСтрокаХранения");
	
	//КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм")); 
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(); 
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.Фирма		 = Организация.НаименованиеПолное;
	Шапка.Параметры.Номенклатура = Номенклатура.НаименованиеПолное;
	Шапка.Параметры.Склад		 = Склад;
	Шапка.Параметры.Урожай		 = Урожай;
	Шапка.Параметры.ВидХранения	 = ВидХранения;
	//Шапка.Параметры.Начало		 = Формат(НачПериода, "ДЛФ=D");
	Шапка.Параметры.Конец		 = Формат(КонПериода, "ДЛФ=D");
	ТабДокумент.Вывести(Шапка);
	
	ОблСтрока = Макет.ПолучитьОбласть("Строка");
	ОблИтог = Макет.ПолучитьОбласть("Итог");
	ВыборкаОрганизация = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Организация");
	Пока ВыборкаОрганизация.Следующий() Цикл	
		ВыборкаУрожай = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Урожай");
		Пока ВыборкаУрожай.Следующий() Цикл
			ВыборкаСклад = ВыборкаУрожай.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Склад");
			Пока ВыборкаСклад.Следующий() Цикл			
				ВыборкаВидХранения = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ВидХранения");
				Пока ВыборкаВидХранения.Следующий() Цикл			
					ВыборкаНоменклатура = ВыборкаВидХранения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Номенклатура");					
					Пока ВыборкаНоменклатура.Следующий() Цикл
						ВыборкаПериод = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
						ИтогСуммаЕжедневныхОстатков = 0;
						ПредыдущийДень = "";
						Ном = 1; 
						ПредыдущийОстаток = 0; 
						КвоДней = 1; 
						ИтогКвоДней = 0; 
						Обх = 0;
						Пока ВыборкаПериод.Следующий() Цикл
							Если ВыборкаПериод.Остаток = 0 Тогда
								Продолжить;
							КонецЕсли;	
							ПоследнийДень = ВыборкаПериод.Период;
							Если ПредыдущийОстаток <> ВыборкаПериод.Остаток Тогда
								Если Обх = 0 Тогда
									СуммаЕжедневныхОстатков = Окр(ПредыдущийОстаток * КвоДней, 0);
									ИтогСуммаЕжедневныхОстатков = ИтогСуммаЕжедневныхОстатков + СуммаЕжедневныхОстатков;
									ПредыдущийДень = ВыборкаПериод.Период;
									ПредыдущийОстаток = ВыборкаПериод.Остаток;
									Обх = 1;
								Иначе	
									ОблСтрока.Параметры.Ном = Ном;
									ОблСтрока.Параметры.Период = Формат(ПредыдущийДень, "ДФ=dd.MM.yyyy");
									ОблСтрока.Параметры.Остаток = ПредыдущийОстаток;
									ОблСтрока.Параметры.КвоДней = КвоДней;
									СуммаЕжедневныхОстатков = Окр(ПредыдущийОстаток * КвоДней, 0);
									ОблСтрока.Параметры.СуммаЕжедневныхОстатков = СуммаЕжедневныхОстатков;
									ИтогСуммаЕжедневныхОстатков = ИтогСуммаЕжедневныхОстатков + СуммаЕжедневныхОстатков;
									ТабДокумент.Вывести(ОблСтрока);
									ПредыдущийДень = ВыборкаПериод.Период;
									ПредыдущийОстаток = ВыборкаПериод.Остаток;							
									Ном = Ном + 1;								
									КвоДней = 1;
								КонецЕсли;
							Иначе 
								КвоДней = КвоДней + 1;
							КонецЕсли;
							ИтогКвоДней = ИтогКвоДней + 1;
						КонецЦикла;
						Если ПредыдущийДень <> ПоследнийДень Тогда
							ОблСтрока.Параметры.Ном = Ном;
							ОблСтрока.Параметры.Период = Формат(ПредыдущийДень, "ДФ=dd.MM.yyyy");
							ОблСтрока.Параметры.Остаток = ПредыдущийОстаток;
							ОблСтрока.Параметры.КвоДней = КвоДней;
							СуммаЕжедневныхОстатков = Окр(ПредыдущийОстаток * КвоДней, 0);
							ОблСтрока.Параметры.СуммаЕжедневныхОстатков = СуммаЕжедневныхОстатков;
							ИтогСуммаЕжедневныхОстатков = ИтогСуммаЕжедневныхОстатков + СуммаЕжедневныхОстатков;
							ТабДокумент.Вывести(ОблСтрока);
						КонецЕсли;
						ОблИтог.Параметры.КвоДней = ИтогКвоДней;
						ОблИтог.Параметры.СуммаЕжедневныхОстатков = ИтогСуммаЕжедневныхОстатков;
						ОбъемПоступления  = Окр(ВыборкаНоменклатура.Приход, 0);
						ОблИтог.Параметры.Приход = ОбъемПоступления;
						СреднийСрокХранения = Окр(?(ОбъемПоступления = 0, ИтогСуммаЕжедневныхОстатков / 100, ИтогСуммаЕжедневныхОстатков / ОбъемПоступления), 0);
						Если ОбъемПоступления = 0 Тогда
							Сообщить("За вказаний період не було надходжень!", СтатусСообщения.Информация);
						КонецЕсли;
						ОблИтог.Параметры.СреднийСрокХранения = СреднийСрокХранения;

						СтруктураПредставлениеСреднегоСрокаХранения 	= ПолучитьПредставлениеСреднегоСрокаХранения(СреднийСрокХранения, КодЯзыкаПечать);
						ОблИтог.Параметры.ПредставлениеСрокаХранения 	= СтруктураПредставлениеСреднегоСрокаХранения.ПредставлениеСрокаХранения;						
						
						ТабДокумент.Вывести(ОблИтог);
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;		
	
	ОблПодписи = Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(ОблПодписи);
	
	Возврат ТабДокумент;
	
КонецФункции 

Функция СформироватьОтчетПоВладельцам(НачПериода,КонПериода)
	 
	Запрос = Новый Запрос;
	
	Фильтр = "";
	Фильтр = Фильтр + " Организация В ИЕРАРХИИ(&Организация)";	
	Фильтр = Фильтр + ?(ЗначениеЗаполнено(Урожай)		, "И Урожай В ИЕРАРХИИ(&Урожай)", "");	
	Фильтр = Фильтр + ?(ЗначениеЗаполнено(Склад)		, "И Склад В ИЕРАРХИИ(&Склад)", "");
	Фильтр = Фильтр + ?(ЗначениеЗаполнено(ВидХранения)	, "И ВидХранения В ИЕРАРХИИ(&ВидХранения)", "");
	Фильтр = Фильтр + ?(ЗначениеЗаполнено(Номенклатура)	, "И Номенклатура В ИЕРАРХИИ(&Номенклатура)", "");
	Фильтр = Фильтр + ?(ЗначениеЗаполнено(Владелец)		, "И Владелец В ИЕРАРХИИ(&Владелец)", "");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИНАГРО_Форма36ОстаткиИОбороты.Организация КАК Организация,
	|	ИНАГРО_Форма36ОстаткиИОбороты.Склад КАК Склад,
	|	ИНАГРО_Форма36ОстаткиИОбороты.Урожай КАК Урожай,
	|	ИНАГРО_Форма36ОстаткиИОбороты.ВидХранения КАК ВидХранения,
	|	ИНАГРО_Форма36ОстаткиИОбороты.Номенклатура КАК Номенклатура,
	|	ИНАГРО_Форма36ОстаткиИОбороты.Владелец КАК Владелец,
	|	ИНАГРО_Форма36ОстаткиИОбороты.Период КАК Период,
	|	ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесПриходКонечныйОстаток, 0) КАК Приход,
	|	ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесПриходКонечныйОстаток, 0) КАК ВесПриходКонечныйОстаток,
	|	ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесРасходКонечныйОстаток, 0) КАК ВесРасходКонечныйОстаток
	|ИЗ
	|	РегистрНакопления.ИНАГРО_Форма36.ОстаткиИОбороты(&НачПериода, &КонПериода, День, , &Фильтр) КАК ИНАГРО_Форма36ОстаткиИОбороты
	|ИТОГИ
	|	СУММА(ВесПриходКонечныйОстаток),
	|	СУММА(ВесРасходКонечныйОстаток),
	|	СУММА(Приход)
	|ПО
	|	Организация,
	|	Владелец,
	|	Склад,
	|	Урожай,
	|	ВидХранения,
	|	Номенклатура,
	|	Период ПЕРИОДАМИ(ДЕНЬ, &НачПериода, &КонПериода)";
	//"+Фильтр+"
	Запрос.УстановитьПараметр("НачПериода",НачПериода);
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Урожай",Урожай);
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("ВидХранения",ВидХранения);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Фильтр", Фильтр);
	
	Результат = Запрос.Выполнить();
	
	// создаем тз
	ТЗвременная = Результат.Выгрузить();
	// ... и очищаем ее
	ТЗвременная.Очистить();	
	// обходим результат "периодами" помещая в тз
	
	ВыборкаОрганизация = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Организация");
	Пока ВыборкаОрганизация.Следующий() Цикл
		ВыборкаВладелец = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Владелец");
		Пока ВыборкаВладелец.Следующий() Цикл
			ВыборкаСклад = ВыборкаВладелец.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Склад");
			Пока ВыборкаСклад.Следующий() Цикл			
				ВыборкаУрожай = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Урожай");
				Пока ВыборкаУрожай.Следующий() Цикл		
					ВыборкаВидХранения = ВыборкаУрожай.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ВидХранения");
					Пока ВыборкаВидХранения.Следующий() Цикл	
						ВыборкаНоменклатура = ВыборкаВидХранения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Номенклатура");
						Пока ВыборкаНоменклатура.Следующий() Цикл
							ВыборкаПериод = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период","ВСЕ");
							Пока ВыборкаПериод.Следующий() Цикл 
								НСтрока = ТЗвременная.Добавить();
								ЗаполнитьЗначенияСвойств(НСтрока,ВыборкаПериод);			
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	// второй запрос нужен чтобы поместить нашу тз во временную таблицу
	Запрос = Новый Запрос;
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПараметр.Организация,
	|	ТаблицаПараметр.Склад,
	|	ТаблицаПараметр.Урожай,
	|	ТаблицаПараметр.ВидХранения,	
	|	ТаблицаПараметр.Номенклатура,
	|	ТаблицаПараметр.Владелец,
	|	ТаблицаПараметр.Период,
	|	ТаблицаПараметр.ВесПриходКонечныйОстаток КАК ВесПриходКонечныйОстаток,
	|	ТаблицаПараметр.ВесРасходКонечныйОстаток КАК ВесРасходКонечныйОстаток
	|ПОМЕСТИТЬ ВременнаяТаблица
	|ИЗ
	|	&ТаблицаПараметр КАК ТаблицаПараметр";
	
	Запрос.УстановитьПараметр("ТаблицаПараметр",ТЗвременная);
	
	Результат = Запрос.Выполнить();
	
	
	// третий запрос - используем нашу временную таблицу, соединяее ее с другой и вычисляя произвольную формулу
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВременнаяТаблица.Организация КАК Организация,
	|	ВременнаяТаблица.Склад КАК Склад,
	|	ВременнаяТаблица.Урожай КАК Урожай,
	|	ВременнаяТаблица.ВидХранения КАК ВидХранения,
	|	ВременнаяТаблица.Номенклатура КАК Номенклатура,
	|	ВременнаяТаблица.Владелец КАК Владелец,
	|	ВременнаяТаблица.Период КАК Период,
	|	ВременнаяТаблица.ВесПриходКонечныйОстаток - ВременнаяТаблица.ВесРасходКонечныйОстаток КАК Остаток,
	|	ЕСТЬNULL(ИНАГРО_Форма36ОстаткиИОбороты.ВесПриходПриход, 0) КАК Приход
	|ИЗ
	|	ВременнаяТаблица КАК ВременнаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИНАГРО_Форма36.ОстаткиИОбороты(&НачПериода, &КонПериода, День, , &Фильтр) КАК ИНАГРО_Форма36ОстаткиИОбороты
	|		ПО ВременнаяТаблица.ВидХранения = ИНАГРО_Форма36ОстаткиИОбороты.ВидХранения
	|			И ВременнаяТаблица.Организация = ИНАГРО_Форма36ОстаткиИОбороты.Организация
	|			И ВременнаяТаблица.Склад = ИНАГРО_Форма36ОстаткиИОбороты.Склад
	|			И ВременнаяТаблица.Урожай = ИНАГРО_Форма36ОстаткиИОбороты.Урожай
	|			И ВременнаяТаблица.Номенклатура = ИНАГРО_Форма36ОстаткиИОбороты.Номенклатура
	|			И ВременнаяТаблица.Владелец = ИНАГРО_Форма36ОстаткиИОбороты.Владелец
	|			И ВременнаяТаблица.Период = ИНАГРО_Форма36ОстаткиИОбороты.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Владелец,
	|	Урожай,
	|	Склад,
	|	ВидХранения,
	|	Номенклатура,
	|	Период
	|ИТОГИ
	|	СУММА(Остаток),
	|	СУММА(Приход)
	|ПО
	|	Организация,
	|	Владелец,
	|	Урожай,
	|	Склад,
	|	ВидХранения,
	|	Номенклатура,
	|	Период";
	
	Запрос.УстановитьПараметр("НачПериода",НачПериода);
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Урожай",Урожай);
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("ВидХранения",ВидХранения);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("Владелец",Владелец);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Фильтр", Фильтр);
	
	ДеревоРезультата = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.Очистить();
	Макет = ПолучитьМакет("РасчетСреднегоСтрокаХранения");
	
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();        
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.Фирма		 = Организация.НаименованиеПолное;
	Шапка.Параметры.Номенклатура = Номенклатура.НаименованиеПолное;
	Шапка.Параметры.Склад		 = Склад;
	Шапка.Параметры.Урожай		 = Урожай;
	Шапка.Параметры.ВидХранения	 = ВидХранения;
	//Шапка.Параметры.Начало		 = Формат(НачПериода, "ДЛФ=D");
	Шапка.Параметры.Конец		 = Формат(КонПериода, "ДЛФ=D");
	Шапка.Параметры.Владелец	 = Владелец;
	ТабДокумент.Вывести(Шапка);
	
	ОблСтрока = Макет.ПолучитьОбласть("Строка");
	ОблИтог = Макет.ПолучитьОбласть("Итог");
	ВыборкаОрганизация = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Организация");
	Пока ВыборкаОрганизация.Следующий() Цикл
		ВыборкаВладелец = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Владелец");
		Пока ВыборкаВладелец.Следующий() Цикл
			ВыборкаУрожай = ВыборкаВладелец.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Урожай");
			Пока ВыборкаУрожай.Следующий() Цикл
				ВыборкаСклад = ВыборкаУрожай.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Склад");
				Пока ВыборкаСклад.Следующий() Цикл			
					ВыборкаВидХранения = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ВидХранения");
					Пока ВыборкаВидХранения.Следующий() Цикл			
						ВыборкаНоменклатура = ВыборкаВидХранения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Номенклатура");					
						Пока ВыборкаНоменклатура.Следующий() Цикл
							ВыборкаПериод = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
							ИтогСуммаЕжедневныхОстатков = 0;
							ПредыдущийДень = "";
							Ном = 1; 
							ПредыдущийОстаток = 0; 
							КвоДней = 1; 
							ИтогКвоДней = 0; 
							Обх = 0;
							Пока ВыборкаПериод.Следующий() Цикл
								Если ВыборкаПериод.Остаток = 0 Тогда
									Продолжить;
								КонецЕсли;	
								ПоследнийДень = ВыборкаПериод.Период;
								Если ПредыдущийОстаток <> ВыборкаПериод.Остаток Тогда
									Если Обх = 0 Тогда
										СуммаЕжедневныхОстатков = Окр(ПредыдущийОстаток * КвоДней, 0);
										ИтогСуммаЕжедневныхОстатков = ИтогСуммаЕжедневныхОстатков + СуммаЕжедневныхОстатков;
										ПредыдущийДень = ВыборкаПериод.Период;
										ПредыдущийОстаток = ВыборкаПериод.Остаток;
										Обх = 1;
									Иначе	
										ОблСтрока.Параметры.Ном = Ном;
										ОблСтрока.Параметры.Период = Формат(ПредыдущийДень, "ДФ=dd.MM.yyyy");
										ОблСтрока.Параметры.Остаток = ПредыдущийОстаток;
										ОблСтрока.Параметры.КвоДней = КвоДней;
										СуммаЕжедневныхОстатков = Окр(ПредыдущийОстаток * КвоДней, 0);
										ОблСтрока.Параметры.СуммаЕжедневныхОстатков = СуммаЕжедневныхОстатков;
										ИтогСуммаЕжедневныхОстатков = ИтогСуммаЕжедневныхОстатков + СуммаЕжедневныхОстатков;
										ТабДокумент.Вывести(ОблСтрока);
										ПредыдущийДень = ВыборкаПериод.Период;
										ПредыдущийОстаток = ВыборкаПериод.Остаток;							
										Ном = Ном + 1;								
										КвоДней = 1;
									КонецЕсли;
								Иначе 
									КвоДней = КвоДней + 1;
								КонецЕсли;
								ИтогКвоДней = ИтогКвоДней + 1;
							КонецЦикла;
							Если ПредыдущийДень <> ПоследнийДень Тогда
								ОблСтрока.Параметры.Ном		= Ном;
								ОблСтрока.Параметры.Период 	= Формат(ПредыдущийДень, "ДФ=dd.MM.yyyy");
								ОблСтрока.Параметры.Остаток = ПредыдущийОстаток;
								ОблСтрока.Параметры.КвоДней = КвоДней;
								СуммаЕжедневныхОстатков 	= Окр(ПредыдущийОстаток * КвоДней, 0);
								ОблСтрока.Параметры.СуммаЕжедневныхОстатков = СуммаЕжедневныхОстатков;
								ИтогСуммаЕжедневныхОстатков = ИтогСуммаЕжедневныхОстатков + СуммаЕжедневныхОстатков;
								ТабДокумент.Вывести(ОблСтрока);
							КонецЕсли;
							ОблИтог.Параметры.КвоДней 					= ИтогКвоДней;
							ОблИтог.Параметры.СуммаЕжедневныхОстатков 	= ИтогСуммаЕжедневныхОстатков;
							ОбъемПоступления  			= Окр(ВыборкаНоменклатура.Приход, 0);
							ОблИтог.Параметры.Приход 	= ОбъемПоступления;
							СреднийСрокХранения 	= Окр(?(ОбъемПоступления = 0, ИтогСуммаЕжедневныхОстатков / 100, ИтогСуммаЕжедневныхОстатков / ОбъемПоступления), 0);
							Если ОбъемПоступления 	= 0 Тогда
								Сообщить("За вказаний період не було надходжень!", СтатусСообщения.Информация);
							КонецЕсли;
							ОблИтог.Параметры.СреднийСрокХранения 			= СреднийСрокХранения;
							
							СтруктураПредставлениеСреднегоСрокаХранения 	= ПолучитьПредставлениеСреднегоСрокаХранения(СреднийСрокХранения, КодЯзыкаПечать);
							ОблИтог.Параметры.ПредставлениеСрокаХранения 	= СтруктураПредставлениеСреднегоСрокаХранения.ПредставлениеСрокаХранения;						
							
							ТабДокумент.Вывести(ОблИтог);
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;			
	
	ОблПодписи = Макет.ПолучитьОбласть("Подписи");
	ТабДокумент.Вывести(ОблПодписи);
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьПредставлениеСреднегоСрокаХранения(СреднийСрокХранения, КодЯзыкаПечать) Экспорт
	
	Возврат Документы.ИНАГРО_АктЗачистки.ПолучитьПредставлениеСреднегоСрокаХранения(СреднийСрокХранения,КодЯзыкаПечать); 
	
	//ПредставлениеСрокаХранения = ""; 
	//
	//СтруктураПредставлениеСреднегоСрокаХранения = Новый Структура("СреднийСрокХранения, СрокХраненияМесяцев, СрокХраненияДней, ПредставлениеСрокаХранения", 0, 0, 0, "");
	//
	//СрокХраненияМесяцев = Цел(СреднийСрокХранения/30);
	//СрокХраненияДней 	= СреднийСрокХранения - Цел(СреднийСрокХранения/30)*30;						
	//
	//МесяцНадпись = ?(КодЯзыкаПечать = "uk", " місяців ", " месяцев ");
	//ДеньНадпись	 = ?(КодЯзыкаПечать = "uk", " днів"	 , " дней");
	//
	//Если СреднийСрокХранения <= 90 Тогда 
	//	ПредставлениеСрокаХранения = Формат(СреднийСрокХранения, "ЧН=") + ДеньНадпись;
	//Иначе
	//	ПредставлениеСрокаХранения = Формат(СреднийСрокХранения / 30, "ЧДЦ=1") + МесяцНадпись;
	//КонецЕсли;
	//
	//СтруктураПредставлениеСреднегоСрокаХранения.СреднийСрокХранения 		= СреднийСрокХранения;
	//СтруктураПредставлениеСреднегоСрокаХранения.СрокХраненияМесяцев			= СрокХраненияМесяцев;
	//СтруктураПредставлениеСреднегоСрокаХранения.СрокХраненияДней			= СрокХраненияДней;
	//СтруктураПредставлениеСреднегоСрокаХранения.ПредставлениеСрокаХранения	= ПредставлениеСрокаХранения;
	
	//Возврат СтруктураПредставлениеСреднегоСрокаХранения;
	
КонецФункции


#КонецОбласти