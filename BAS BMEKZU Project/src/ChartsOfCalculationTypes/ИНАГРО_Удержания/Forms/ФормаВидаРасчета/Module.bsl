#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.КатегорияРасчета = Перечисления.КатегорииРасчетов.Первичное;
		Объект.СпособРасчета = Перечисления.СпособыРасчетаНачислений.Процентом;
	КонецЕсли;
	
	ВыполнитьЧтениеНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ВыполнитьЧтениеНаСервере(ТекущийОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВводФормулыРасчета" Тогда
		УстановитьПараметрыВидаРасчета(Параметр);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособРасчетаПриИзменении(Элемент)
	
	ДоступностьИзмененияФормулы = НЕ Объект.Предопределенный И Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПроизвольнаяФормула");
	Элементы.ИзменитьФормулу.Доступность = ДоступностьИзмененияФормулы;

	Если ПредыдущийСпособРасчета = Объект.СпособРасчета Тогда
		Возврат;
	КонецЕсли;
	
	
	СпособРасчетаПредставление = ВизуализироватьФормулуРасчета();
	
	ОбработатьИзменениеКатегорииНачисленияНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицФормы

&НаКлиенте
Процедура БазовыеВидыРасчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
		
	УдалениеВыбранныхВидовРасчета(ВыбранноеЗначение.УдаленныеВидыРасчета, Объект.БазовыеВидыРасчета);
	
	Для Каждого Значение Из ВыбранноеЗначение.ДобавленныеВидыРасчета Цикл
		ОбработкаВыбранногоНачисления(Значение, Объект.БазовыеВидыРасчета, "БазовыеВидыРасчета");
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьФормулу(Команда)
	
	ПоказателиДляФормыВвода = Новый СписокЗначений;
	
	ФормулаРасчетаДляФормулы = Объект.ФормулаРасчета;
	
	ПолучитьПоказателиДляПередачиФормулы(ФормулаРасчетаДляФормулы, ПоказателиДляФормыВвода);
		
	ПараметрыРедактирования = Новый Структура;
	ПараметрыРедактирования.Вставить("Формула", ФормулаРасчетаДляФормулы);
	ПараметрыРедактирования.Вставить("НаименованиеВидаРасчета", Объект.Наименование);
	ПараметрыРедактирования.Вставить("ВидРасчета", Объект.Ссылка);
	ПараметрыРедактирования.Вставить("Показатели" , ПоказателиДляФормыВвода);	
	
	Оповещение = Новый ОписаниеОповещения("ИзменитьФормулуЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ИНАГРО_РедактированиеФормулыРасчетаЗарплаты", ПараметрыРедактирования, ЭтаФорма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьФормулуЗавершение(РезультатРедактирования, ДополнительныеПараметры) Экспорт 
	
	Если РезультатРедактирования = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ФормулаРасчета = РезультатРедактирования.Формула Тогда 
		Возврат;
	КонецЕсли;
	
	Объект.ФормулаРасчета = РезультатРедактирования.Формула;
		
	ОбновитьФормуПоИзменениюФормулыРасчета(
		ЭтаФорма, 
		РезультатРедактирования.СведенияОПоказателях, );
		
	
	Модифицированность = Истина;
	
	СпособРасчетаПредставление = ВизуализироватьФормулуРасчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборБазовыхНачислений(Команда)
	
	МассивВидовРасчета = ИНАГРО_РасчетЗарплатыРасширенныйКлиентСервер.ВидыРасчетаКоллекции(Объект.БазовыеВидыРасчета);
	ПараметрыФормы = Новый Структура("МассивВидовРасчета", МассивВидовРасчета);
	ОткрытьФорму("ОбщаяФорма.ИНАГРО_ПодборВидовРасчета", ПараметрыФормы, Элементы.БазовыеВидыРасчета);

КонецПроцедуры

&НаКлиенте
Процедура ПодборБазовыхУдержаний(Команда)
	
	Отбор = Новый Массив;
	МассивВидовРасчета = ИНАГРО_РасчетЗарплатыРасширенныйКлиентСервер.ВидыРасчетаКоллекции(Объект.БазовыеВидыРасчета);
	ПараметрыФормы = Новый Структура("МассивВидовРасчета, УсловияОтбора, ПодборУдержаний", МассивВидовРасчета, Отбор, Истина);
	ОткрытьФорму("ОбщаяФорма.ИНАГРО_ПодборВидовРасчета", ПараметрыФормы, Элементы.БазовыеВидыРасчета);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьЧтениеНаСервере(ТекущийОбъект = Неопределено)
	
	Если ТекущийОбъект = Неопределено Тогда
		ТекущийОбъект = Объект;
	КонецЕсли;
	
	УстановитьДоступность(ЭтаФорма);
	
	ЭтаФорма.СпособРасчетаПредставление = ВизуализироватьФормулуРасчета();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступность(Форма)
	
	ДоступностьИзмененияФормулы = НЕ Форма.Объект.Предопределенный И Форма.Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ПроизвольнаяФормула");
	Форма.Элементы.ИзменитьФормулу.Доступность = ДоступностьИзмененияФормулы;
	Форма.Элементы.СпособРасчета.ТолькоПросмотр = Форма.Объект.Предопределенный;
			
КонецПроцедуры

&НаСервере
Функция ВизуализироватьФормулуРасчета()
	
	Возврат ИНАГРО_ПроведениеРасчетов.ВизуализироватьФормулуРасчета(Объект, "HTML");
	
КонецФункции

&НаСервере
Процедура ОбработатьИзменениеКатегорииНачисленияНаСервере()
	
	БылаФормула = Объект.ФормулаРасчета;
	
	ИзменилсяСпособРасчета = Объект.СпособРасчета <> Перечисления.СпособыРасчетаНачислений.ПроизвольнаяФормула;
	
	Если ИзменилсяСпособРасчета Тогда
		ЗаполнитьПоказателиПредопределенногоСпособаРасчета();
	КонецЕсли;
	
КонецПроцедуры						
						
&НаСервере
Процедура ЗаполнитьПоказателиПредопределенногоСпособаРасчета()
	
	Объект.Показатели.Очистить();
	
	ИНАГРО_ЗарплатаКадрыРасширенный.ЗаполнитьПоказателиПредопределенногоСпособаРасчета(Объект.СпособРасчета, Объект.Показатели);
	
	УстановитьДоступность(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьФормуПоИзменениюФормулыРасчета(Форма, СведенияОПоказателях, ЗапрашиваемыеПоказатели)
	
	Объект = Форма.Объект;
	
	// Обновление: 
	// - табличной части
	Если ИНАГРО_РасчетЗарплатыРасширенныйКлиентСервер.СпособРасчетаИспользуетФормулу(Объект.СпособРасчета) Тогда
		ИНАГРО_ЗарплатаКадрыРасширенныйКлиентСервер.ОбновитьПоказателиПоФормуле(СведенияОПоказателях, Объект.Показатели);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалениеВыбранныхВидовРасчета(УдаленныеВидыРасчета, ТаблицаВидовРасчета)
	
	Для Каждого Значение Из УдаленныеВидыРасчета Цикл
		СтрокиДляУдаления = ТаблицаВидовРасчета.НайтиСтроки(Новый Структура("ВидРасчета", Значение));
		Для Каждого ТекСтрока Из СтрокиДляУдаления Цикл 
			ТаблицаВидовРасчета.Удалить(ТекСтрока);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбработкаВыбранногоНачисления(Значение, ТаблицаВидовРасчета, ИмяТаблицы)
	
	Если ТаблицаВидовРасчета.НайтиСтроки(Новый Структура("ВидРасчета", Значение)).Количество() = 0 Тогда
		ТаблицаВидовРасчета.Добавить().ВидРасчета = Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВидаРасчета(Параметр) Экспорт
	
	Объект.ФормулаРасчета				= Параметр[0];
	Объект.СпособРасчета 				= Перечисления.СпособыРасчетаНачислений.ПроизвольнаяФормула;
	Объект.ПроизвольнаяФормулаРасчета	= Истина;
	
	ПарамПоказатели = Параметр[1];
	
	ОбъектПоказатели = Объект.Показатели;
	ОбъектПоказатели.Очистить();
	Для Каждого ОбъектПоказатель Из ОбъектПоказатели Цикл
		Если ПарамПоказатели.Найти(ОбъектПоказатель.Показатель) = Неопределено Тогда
			ОбъектПоказатель.Показатель = Справочники.ИНАГРО_ПоказателиСхемМотивации.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
	Для Каждого Показатель Из ПарамПоказатели Цикл
		ПараметрыОтбора = Новый Структура ("Показатель", Показатель);
		СтрокиСоответствия = ОбъектПоказатели.НайтиСтроки(ПараметрыОтбора);
		
		Если СтрокиСоответствия.Количество() = 0 Тогда
			НовыйПоказатель				= Объект.Показатели.Добавить();
			
			Если	Показатель.ТипПоказателя <> Перечисления.ИНАГРО_ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная 
				И	Показатель.ТипПоказателя <> Перечисления.ИНАГРО_ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая 
				И	Показатель.ВозможностьИзменения <> Перечисления.ИНАГРО_ИзменениеПоказателейСхемМотивации.ВводитсяПриРасчете 
				И	Показатель.ВозможностьИзменения <> Перечисления.ИНАГРО_ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете Тогда
				
				Если (Показатель = Справочники.ИНАГРО_ПоказателиСхемМотивации.ОкладТариф) Тогда					
					Если ОбщегоНазначенияБП.ЕстьРеквизитДокумента("ЗачетОтработанногоВремени", Метаданные.ПланыВидовРасчета.ИНАГРО_Удержания) = Неопределено Тогда
						НовыйПоказатель.ЗапрашиватьПриКадровыхПеремещениях = Ложь;
					ИначеЕсли Объект.ЗачетОтработанногоВремени Тогда
						НовыйПоказатель.ЗапрашиватьПриКадровыхПеремещениях = Истина;
					Иначе
						НовыйПоказатель.ЗапрашиватьПриКадровыхПеремещениях = Ложь;
					КонецЕсли;
				Иначе
					НовыйПоказатель.ЗапрашиватьПриКадровыхПеремещениях = Истина;
				КонецЕсли;
			КонецЕсли;
			НовыйПоказатель.Показатель	= Показатель;
		КонецЕсли;
	КонецЦикла;
				
	СпособРасчетаПредставление = ВизуализироватьФормулуРасчета();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьПоказателиДляПередачиФормулы(ФормулаРасчетаДляФормулы, ПоказателиДляФормыВвода)
	
	Для Каждого Показатель Из Объект.Показатели Цикл
		
		ПоказательДляФормулы = Строка(Показатель.Показатель.Идентификатор);
						
		ФормулаРасчетаДляФормулы	= СтрЗаменить(ФормулаРасчетаДляФормулы, "ИсходныеДанные.Показатель"+Показатель.НомерСтроки, ПоказательДляФормулы);
		
		ПоказателиДляФормыВвода.Добавить(Показатель.Показатель);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти