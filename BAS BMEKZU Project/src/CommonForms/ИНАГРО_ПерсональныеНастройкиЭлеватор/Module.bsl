#Область ОбработчикиСобытийФормы 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	
	ВидХранения	                               = ИНАГРО_ЭлеваторЗаполнениеДокументов.ПолучитьЗначениеПоУмолчанию("ВидХранения");
	ЗаполнениеПредРасчБезОтходов	           = ИНАГРО_ЭлеваторЗаполнениеДокументов.ПолучитьЗначениеПоУмолчанию("ЗаполнениеПредРасчБезОтходов");
	ИнтерактивноеФормированиеТиповыхДокументов = ИНАГРО_ЭлеваторЗаполнениеДокументов.ПолучитьЗначениеПоУмолчанию("ИнтерактивноеФормированиеТиповыхДокументов");
	КонтролироватьОстаткиУслуг	               = ИНАГРО_ЭлеваторЗаполнениеДокументов.ПолучитьЗначениеПоУмолчанию("КонтролироватьОстаткиУслуг");
	ОсновнойСкладЭлеватора	                   = ИНАГРО_ЭлеваторЗаполнениеДокументов.ПолучитьЗначениеПоУмолчанию("ОсновнойСкладЭлеватора");
	ОсновнойТипХранения	                       = ИНАГРО_ЭлеваторЗаполнениеДокументов.ПолучитьЗначениеПоУмолчанию("ОсновнойТипХранения");
	ОтражатьВБухгалтерскомУчете	               = ИНАГРО_ЭлеваторЗаполнениеДокументов.ПолучитьЗначениеПоУмолчанию("ОтражатьВБухгалтерскомУчете");
	ПоказыватьВДокументахОстатокВЗачетномВесе  = ИНАГРО_ЭлеваторЗаполнениеДокументов.ПолучитьЗначениеПоУмолчанию("ПоказыватьВДокументахОстатокВЗачетномВесе");
	СпособХранения	                           = ИНАГРО_ЭлеваторЗаполнениеДокументов.ПолучитьЗначениеПоУмолчанию("СпособХранения");
	УбыльПриХранении	                       = ИНАГРО_ЭлеваторЗаполнениеДокументов.ПолучитьЗначениеПоУмолчанию("УбыльПриХранении");
	Урожай	                                   = ИНАГРО_ЭлеваторЗаполнениеДокументов.ПолучитьЗначениеПоУмолчанию("Урожай");
		
	АвторизованныйПользователь = Пользователи.АвторизованныйПользователь();
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если Модифицированность Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru='Данные были изменены. Сохранить изменения?';uk='Дані були змінені. Зберегти зміни?'"), РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьИЗакрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АвторизованныйПользовательНажатие(Элемент, СтандартнаяОбработка)
	
	ПоказатьЗначение(, АвторизованныйПользователь);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть()
	
	ЗаписатьДанные();
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДанные()
	
	СохранитьНастройкиСервер();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьНастройкиСервер()	
	
	ИНАГРО_ЭлеваторЗаполнениеДокументов.УстановитьЗначениеПоУмолчанию("ВидХранения",                                ВидХранения);
	ИНАГРО_ЭлеваторЗаполнениеДокументов.УстановитьЗначениеПоУмолчанию("ЗаполнениеПредРасчБезОтходов",               ЗаполнениеПредРасчБезОтходов);
	ИНАГРО_ЭлеваторЗаполнениеДокументов.УстановитьЗначениеПоУмолчанию("ИнтерактивноеФормированиеТиповыхДокументов", ИнтерактивноеФормированиеТиповыхДокументов);
	ИНАГРО_ЭлеваторЗаполнениеДокументов.УстановитьЗначениеПоУмолчанию("КонтролироватьОстаткиУслуг",                 КонтролироватьОстаткиУслуг);
	ИНАГРО_ЭлеваторЗаполнениеДокументов.УстановитьЗначениеПоУмолчанию("ОсновнойСкладЭлеватора",                     ОсновнойСкладЭлеватора);
	ИНАГРО_ЭлеваторЗаполнениеДокументов.УстановитьЗначениеПоУмолчанию("ОсновнойТипХранения",                        ОсновнойТипХранения);
	ИНАГРО_ЭлеваторЗаполнениеДокументов.УстановитьЗначениеПоУмолчанию("ОтражатьВБухгалтерскомУчете",                ОтражатьВБухгалтерскомУчете);
	ИНАГРО_ЭлеваторЗаполнениеДокументов.УстановитьЗначениеПоУмолчанию("ПоказыватьВДокументахОстатокВЗачетномВесе",  ПоказыватьВДокументахОстатокВЗачетномВесе);
	ИНАГРО_ЭлеваторЗаполнениеДокументов.УстановитьЗначениеПоУмолчанию("СпособХранения",                             СпособХранения);
	ИНАГРО_ЭлеваторЗаполнениеДокументов.УстановитьЗначениеПоУмолчанию("УбыльПриХранении",                           УбыльПриХранении);
	ИНАГРО_ЭлеваторЗаполнениеДокументов.УстановитьЗначениеПоУмолчанию("Урожай",                                     Урожай);
	
	Модифицированность = Ложь;

КонецПроцедуры

#КонецОбласти