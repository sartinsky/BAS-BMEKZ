
&НаСервере
Процедура ЗаполнитьДанныеПоЭлектронномуДокументу()
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Первые = 10;
	
	Элементы.ВидДокумента1С.РежимВыбораИзСписка = Истина;
	Элементы.ВидДокумента1С.СписокВыбора.ЗагрузитьЗначения(скEDI_НастройкиПодКонфигурацию.ПолучитьМассивИспользуемыхВКонфигурацииВидовДокументов1С());
	
	
	тЭлектронныйДокумент = Неопределено;
	Если Параметры.Свойство("ЭлектронныйДокумент", тЭлектронныйДокумент) Тогда
		ЭлектронныйДокумент = тЭлектронныйДокумент;
		
		Если ЗначениеЗаполнено(ЭлектронныйДокумент) Тогда
			ОрганизацияEDI = ЭлектронныйДокумент.Организация;
			Организация1С = ОрганизацияEDI.Организация1С;
			ВидЭлектронногоДокумента = ЭлектронныйДокумент.ВидЭлектронногоДокумента;
			ВхИсх = ЭлектронныйДокумент.ВхИсх;
			ГдеСоздан = ЭлектронныйДокумент.ГдеСоздан;
			ЕДРПОУВладельцаШаблона = ЭлектронныйДокумент.ЕДРПОУВладельцаШаблона;
			ИмяШаблона = ЭлектронныйДокумент.ИмяШаблона;
			ВерсияШаблона = ЭлектронныйДокумент.ВерсияШаблона;
			//ВидДокумента1С = ЭлектронныйДокумент.
			ЕДРПОУКонтрагента = ЭлектронныйДокумент.ЕДРПОУКонтрагента;
			ФилиалКонтрагента = ЭлектронныйДокумент.ФилиалКонтрагента;
			Контрагент = скEDI_НастройкиПодКонфигурацию.ПолучитьКонтрагентаПоЕДРПОУ(ЕДРПОУКонтрагента, ФилиалКонтрагента, Ложь);
			Документ1С = ЭлектронныйДокумент.Документ1С;
			ДатаДокументаС = ЭлектронныйДокумент.ДатаДокумента;
			ДатаДокументаПо = ЭлектронныйДокумент.ДатаДокумента;
			
			Если ЗначениеЗаполнено(Документ1С) Тогда
				ВидДокумента1С = скEDI_НастройкиПодКонфигурацию.ПолучитьВидДокумента1С(Документ1С);
			Иначе
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	ВложенныйЗапрос.ВидДокумента1С КАК ВидДокумента1С
				               |ИЗ
				               |	(ВЫБРАТЬ
				               |		скEDI_ПравилаЗагрузки.ВидДокумента1С КАК ВидДокумента1С,
				               |		ВЫБОР
				               |			КОГДА скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = &ЕДРПОУВладельцаШаблона
				               |					И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
				               |					И скEDI_ПравилаЗагрузки.ВерсияШаблона = &ВерсияШаблона
				               |					И скEDI_ПравилаЗагрузки.ВидЭлектронногоДокумента = &ВидЭлектронногоДокумента
				               |				ТОГДА 100
				               |			КОГДА скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = &ЕДРПОУВладельцаШаблона
				               |					И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
				               |					И скEDI_ПравилаЗагрузки.ВерсияШаблона = &ВерсияШаблона
				               |				ТОГДА 90
				               |			КОГДА скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = &ЕДРПОУВладельцаШаблона
				               |					И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
				               |					И скEDI_ПравилаЗагрузки.ВидЭлектронногоДокумента = &ВидЭлектронногоДокумента
				               |				ТОГДА 80
				               |			КОГДА скEDI_ПравилаЗагрузки.ЕДРПОУВладельцаШаблона = &ЕДРПОУВладельцаШаблона
				               |					И скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
				               |				ТОГДА 70
				               |			КОГДА скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
				               |					И скEDI_ПравилаЗагрузки.ВидЭлектронногоДокумента = &ВидЭлектронногоДокумента
				               |				ТОГДА 60
				               |			КОГДА скEDI_ПравилаЗагрузки.ИмяШаблона = &ИмяШаблона
				               |				ТОГДА 50
				               |			КОГДА скEDI_ПравилаЗагрузки.ВидЭлектронногоДокумента = &ВидЭлектронногоДокумента
				               |				ТОГДА 10
				               |		КОНЕЦ КАК УровеньСоответствия,
				               |		скEDI_ПравилаЗагрузки.Приоритет КАК Приоритет
				               |	ИЗ
				               |		РегистрСведений.скEDI_ПравилаЗагрузки КАК скEDI_ПравилаЗагрузки
				               |	ГДЕ
				               |		скEDI_ПравилаЗагрузки.Организация = &Организация
				               |		И скEDI_ПравилаЗагрузки.Использование
				               |		И скEDI_ПравилаЗагрузки.ВидДокумента1С <> ЗНАЧЕНИЕ(Перечисление.скEDI_ВидыДокументов1С.ПустаяСсылка)) КАК ВложенныйЗапрос
				               |ГДЕ
				               |	ВложенныйЗапрос.УровеньСоответствия ЕСТЬ НЕ NULL 
				               |
				               |УПОРЯДОЧИТЬ ПО
				               |	ВложенныйЗапрос.УровеньСоответствия УБЫВ,
				               |	ВложенныйЗапрос.Приоритет УБЫВ";
				Запрос.УстановитьПараметр("Организация", ОрганизацияEDI);
				Запрос.УстановитьПараметр("ЕДРПОУВладельцаШаблона", ЕДРПОУВладельцаШаблона);
				Запрос.УстановитьПараметр("ИмяШаблона", ИмяШаблона);
				Запрос.УстановитьПараметр("ВерсияШаблона", ВерсияШаблона);
				Запрос.УстановитьПараметр("ВидЭлектронногоДокумента", ВидЭлектронногоДокумента);
				ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
				Если ВыборкаРезультатаЗапроса.Следующий() Тогда
					ВидДокумента1С = ВыборкаРезультатаЗапроса.ВидДокумента1С;
				Иначе
					ВидДокумента1С = Неопределено;
				КонецЕсли;
			КонецЕсли;
			ВидДокумента1СПриИзмененииНаСервере();
		Иначе
			Отказ = Истина;
		КонецЕсли;
	Иначе
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВидДокумента1СПриИзмененииНаСервере()
	ЗапросИмяТаблицыДобкумента1С = "";
	ЗапросИмяРеквизитаОрганизация1С = "";
	ЗапросИмяРеквизитаКонтрагент = "";
	ЗапросИмяРеквизитаДата = "";
	
	ТипДокумента = скEDI_НастройкиПодКонфигурацию.ПолучитьТипДокументаПоВиду(ВидДокумента1С);
	Если ЗначениеЗаполнено(ТипДокумента) Тогда
		МетаданныеТипаДокумента = Метаданные.НайтиПоТипу(ТипДокумента);
	Иначе
		МетаданныеТипаДокумента = Неопределено;
	КонецЕсли;
	Если МетаданныеТипаДокумента = Неопределено Тогда
		Коментарий = "Не удалось определить метаданные Документа1С: " + Строка(ВидДокумента1С);
		//Возврат Ложь;
	Иначе
		ЗапросИмяТаблицыДобкумента1С = МетаданныеТипаДокумента.ПолноеИмя();
		
		Попытка
			ТипССОрганизации = Тип("СправочникСсылка.Организации");
		Исключение
			ТипССОрганизации = Неопределено;
		КонецПопытки;
		Попытка
			ТипССКонтрагенты = Тип("СправочникСсылка.Контрагенты");
		Исключение
			ТипССКонтрагенты = Неопределено;
		КонецПопытки;
		
		Для каждого Реквизит Из МетаданныеТипаДокумента.СтандартныеРеквизиты Цикл
			Если ВРег(Реквизит.Имя) = ВРег("Владелец") Тогда
				Если ЗначениеЗаполнено(ТипССКонтрагенты) Тогда
					Если Реквизит.Тип.СодержитТип(ТипССКонтрагенты) Тогда
						ЗапросИмяРеквизитаКонтрагент = Реквизит.Имя;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ВРег(Реквизит.Имя) = ВРег("Дата") Тогда
				Если Реквизит.Тип.СодержитТип(Тип("Дата")) Тогда
					ЗапросИмяРеквизитаДата = Реквизит.Имя;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Для каждого Реквизит Из МетаданныеТипаДокумента.Реквизиты Цикл
			Если ВРег(Реквизит.Имя) = ВРег("Организация") Тогда
				Если ЗначениеЗаполнено(ТипССОрганизации) Тогда
					Если Реквизит.Тип.СодержитТип(ТипССОрганизации) Тогда
						ЗапросИмяРеквизитаОрганизация1С = Реквизит.Имя;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ВРег(Реквизит.Имя) = ВРег("Контрагент") Тогда
				Если ЗначениеЗаполнено(ТипССКонтрагенты) Тогда
					Если Реквизит.Тип.СодержитТип(ТипССКонтрагенты) Тогда
						ЗапросИмяРеквизитаКонтрагент = Реквизит.Имя;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ВРег(Реквизит.Имя) = ВРег("Дата") Тогда
				Если Реквизит.Тип.СодержитТип(Тип("Дата")) Тогда
					ЗапросИмяРеквизитаДата = Реквизит.Имя;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗапросИмяТаблицыДобкумента1С) Тогда
		Если ЗначениеЗаполнено(ЗапросИмяРеквизитаОрганизация1С) Тогда
			ОтборПоОрганизации1С = Истина;
			Элементы.ГруппаОтборОрганизация.Доступность = Истина;
		Иначе
			ОтборПоКонтрагенту = Ложь;
			Элементы.ГруппаОтборОрганизация.Доступность = Ложь;
		КонецЕсли;
		Если ЗначениеЗаполнено(ЗапросИмяРеквизитаКонтрагент) Тогда
			ОтборПоКонтрагенту = Истина;
			Элементы.ГруппаОтборКонтрагент.Доступность = Истина;
		Иначе
			ОтборПоКонтрагенту = Ложь;
			Элементы.ГруппаОтборКонтрагент.Доступность = Ложь;
		КонецЕсли;
		Если ЗначениеЗаполнено(ЗапросИмяРеквизитаДата) Тогда
			Если ЗначениеЗаполнено(ДатаДокументаС) Тогда
				ОтборПоДатеС = Истина;
			Иначе
				ОтборПоДатеС = Ложь;
			КонецЕсли;
			Если ЗначениеЗаполнено(ДатаДокументаПо) Тогда
				ОтборПоДатеПо = Истина;
			Иначе
				ОтборПоДатеП = Ложь;
			КонецЕсли;
			Элементы.ГруппаОтборПоДате.Доступность = Истина;
		Иначе
			ОтборПоДатеС = Ложь;
			ОтборПоДатеПо = Ложь;
			Элементы.ГруппаОтборПоДате.Доступность = Ложь;
		КонецЕсли;
	Иначе
		
	КонецЕсли;
	ОбновитьДокументы1СНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидДокумента1СПриИзменении(Элемент)
	ВидДокумента1СПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьДокументы1СНаСервере()
	Документы1С.Очистить();
	ТекущийДокумент1СДобавлен = Ложь;
	ПервыеКоментарий = "";
	
	Если ЗначениеЗаполнено(ЗапросИмяТаблицыДобкумента1С) Тогда
		Запрос = Новый Запрос;
		//Запрос.
		
		ЕстьОтбоПоОрганизации = Ложь;
		ЕстьОтбоПоКонтрагенту = Ложь;
		
		ПоляДокумента1С = "_ТаблицаДокументов1С.Ссылка КАК Ссылка";
		УсловиеПоискаДокумента1С = "";
		Если ЗначениеЗаполнено(ЗапросИмяРеквизитаОрганизация1С) Тогда
			ПоляДокумента1С = ПоляДокумента1С + ", _ТаблицаДокументов1С." + ЗапросИмяРеквизитаОрганизация1С + " КАК Организация";
			Если ОтборПоОрганизации1С Тогда
				Если УсловиеПоискаДокумента1С <> "" Тогда
					УсловиеПоискаДокумента1С = УсловиеПоискаДокумента1С + "
					|И ";
				КонецЕсли;
				УсловиеПоискаДокумента1С = УсловиеПоискаДокумента1С + "_ТаблицаДокументов1С." + ЗапросИмяРеквизитаОрганизация1С + " = &Организация";
				Запрос.УстановитьПараметр("Организация", Организация1С);
				ЕстьОтбоПоОрганизации = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(ЗапросИмяРеквизитаДата) Тогда
			ПоляДокумента1С = ПоляДокумента1С + ", _ТаблицаДокументов1С." + ЗапросИмяРеквизитаДата + " КАК Дата";
			Если ОтборПоДатеС Тогда
				Если ЗначениеЗаполнено(ДатаДокументаС) Тогда
					Если УсловиеПоискаДокумента1С <> "" Тогда
						УсловиеПоискаДокумента1С = УсловиеПоискаДокумента1С + "
						|И ";
					КонецЕсли;
					УсловиеПоискаДокумента1С = УсловиеПоискаДокумента1С + "РАЗНОСТЬДАТ(_ТаблицаДокументов1С." + ЗапросИмяРеквизитаДата + ", &ДатаС, ДЕНЬ) <= 0";
					Запрос.УстановитьПараметр("ДатаС", ДатаДокументаС);
				КонецЕсли;
			КонецЕсли;
			Если ОтборПоДатеПо Тогда
				Если ЗначениеЗаполнено(ДатаДокументаПо) Тогда
					Если УсловиеПоискаДокумента1С <> "" Тогда
						УсловиеПоискаДокумента1С = УсловиеПоискаДокумента1С + "
						|И ";
					КонецЕсли;
					УсловиеПоискаДокумента1С = УсловиеПоискаДокумента1С + "РАЗНОСТЬДАТ(_ТаблицаДокументов1С." + ЗапросИмяРеквизитаДата + ", &ДатаПо, ДЕНЬ) >= 0";
					Запрос.УстановитьПараметр("ДатаПо", ДатаДокументаПо);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(ЗапросИмяРеквизитаКонтрагент) Тогда
			ПоляДокумента1С = ПоляДокумента1С + ", _ТаблицаДокументов1С." + ЗапросИмяРеквизитаКонтрагент + " КАК Контрагент";
			Если ОтборПоКонтрагенту Тогда
				Если УсловиеПоискаДокумента1С <> "" Тогда
					УсловиеПоискаДокумента1С = УсловиеПоискаДокумента1С + "
					|И ";
				КонецЕсли;
				УсловиеПоискаДокумента1С = УсловиеПоискаДокумента1С + "_ТаблицаДокументов1С." + ЗапросИмяРеквизитаКонтрагент + " = &Контрагент";
				Запрос.УстановитьПараметр("Контрагент", Контрагент);
				ЕстьОтбоПоКонтрагенту = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Запрос.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ " + Формат(Первые + 1, "ЧГ=0") + "
				|	"+ ПоляДокумента1С + "
				|ИЗ
				|	" + ЗапросИмяТаблицыДобкумента1С + " КАК _ТаблицаДокументов1С
				|ГДЕ " + УсловиеПоискаДокумента1С;
		ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		КоличествоЗаписей = 0;
		Пока ВыборкаРезультатаЗапроса.Следующий() Цикл
			КоличествоЗаписей = КоличествоЗаписей + 1;
			Если КоличествоЗаписей > Первые Тогда
				ПервыеКоментарий = НСтр("ru = 'Отображены не все записи...'; uk = 'Відображено не всі записи...'");
				Прервать;
			КонецЕсли;
			Если Документ1С = ВыборкаРезультатаЗапроса.Ссылка Тогда
				НоваяСтрока = Документы1С.Вставить(0);
				ТекущийДокумент1СДобавлен = Истина;
			Иначе
				НоваяСтрока = Документы1С.Добавить();
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультатаЗапроса);
			
			Документт1С_Ссылка = ВыборкаРезультатаЗапроса.Ссылка;
			Документт1С_ВидДокумента1С = скEDI_НастройкиПодКонфигурацию.ПолучитьВидДокумента1С(Документт1С_Ссылка);
			Если Документт1С_ВидДокумента1С <> Неопределено Тогда
				НоваяСтрока.ВидДокумента1С = Документт1С_ВидДокумента1С;
				Информация = скEDI_НастройкиПодКонфигурацию.ПолучитьИнформациюДляРегистрацииДокумента(Документт1С_Ссылка);
				
				НоваяСтрока.Дата = Информация.Дата;
				НоваяСтрока.Номер = Информация.Номер;
				НоваяСтрока.Контрагент = Информация.Контрагент;
				НоваяСтрока.Организация = Информация.Организация;
				//НоваяСтрока.ДоговорКонтрагента = Информация.ДоговорКонтрагента;
				Если ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаДокумента") Тогда
					НоваяСтрока.Сумма = Информация.СуммаДокумента;
					НоваяСтрока.СуммаНДС = Информация.СуммаНДСДокумента;
					НоваяСтрока.СуммаБезНДС = Информация.СуммаБезНДСДокумента;
				ИначеЕсли ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаТЧТовары") Тогда
					НоваяСтрока.Сумма = Информация.СуммаТовары;
					НоваяСтрока.СуммаНДС = Информация.СуммаНДСТовары;
					НоваяСтрока.СуммаБезНДС = Информация.СуммаБезНДСТовары;
				ИначеЕсли ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаТЧУслуги") Тогда
					НоваяСтрока.Сумма = Информация.СуммаУслуги;
					НоваяСтрока.СуммаНДС = Информация.СуммаНДСУслуги;
					НоваяСтрока.СуммаБезНДС = Информация.СуммаБезНДСУслуги;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Элементы.Документы1СОрганизация.Видимость = не ЕстьОтбоПоОрганизации;
		Элементы.Документы1СКонтрагент.Видимость = не ЕстьОтбоПоКонтрагенту;
	Иначе
		Элементы.Документы1СОрганизация.Видимость = Истина;
		Элементы.Документы1СКонтрагент.Видимость = Истина;
	КонецЕсли;
	Если Не ТекущийДокумент1СДобавлен Тогда
		Если ЗначениеЗаполнено(Документ1С) Тогда
			Документт1С_Ссылка = Документ1С;
			НоваяСтрока = Документы1С.Вставить(0);
			ТекущийДокумент1СДобавлен = Истина;
			НоваяСтрока.Ссылка = Документт1С_Ссылка;
			
			Документт1С_ВидДокумента1С = скEDI_НастройкиПодКонфигурацию.ПолучитьВидДокумента1С(Документт1С_Ссылка);
			Если Документт1С_ВидДокумента1С <> Неопределено Тогда
				НоваяСтрока.ВидДокумента1С = Документт1С_ВидДокумента1С;
				Информация = скEDI_НастройкиПодКонфигурацию.ПолучитьИнформациюДляРегистрацииДокумента(Документт1С_Ссылка);
				
				НоваяСтрока.Дата = Информация.Дата;
				НоваяСтрока.Номер = Информация.Номер;
				НоваяСтрока.Контрагент = Информация.Контрагент;
				НоваяСтрока.Организация = Информация.Организация;
				//НоваяСтрока.ДоговорКонтрагента = Информация.ДоговорКонтрагента;
				Если ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаДокумента") Тогда
					НоваяСтрока.Сумма = Информация.СуммаДокумента;
					НоваяСтрока.СуммаНДС = Информация.СуммаНДСДокумента;
					НоваяСтрока.СуммаБезНДС = Информация.СуммаБезНДСДокумента;
				ИначеЕсли ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаТЧТовары") Тогда
					НоваяСтрока.Сумма = Информация.СуммаТовары;
					НоваяСтрока.СуммаНДС = Информация.СуммаНДСТовары;
					НоваяСтрока.СуммаБезНДС = Информация.СуммаБезНДСТовары;
				ИначеЕсли ВидЭлектронногоДокумента.ВариантОпределенияСуммыПоДокументу = ПредопределенноеЗначение("Перечисление.скEDI_ВариантыОпределенияСуммыПоДокументу.СуммаТЧУслуги") Тогда
					НоваяСтрока.Сумма = Информация.СуммаУслуги;
					НоваяСтрока.СуммаНДС = Информация.СуммаНДСУслуги;
					НоваяСтрока.СуммаБезНДС = Информация.СуммаБезНДСУслуги;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДокументы1С(Команда)
	ОбновитьДокументы1СНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Функция Документы1СПроверить(пЭлектронныйДокумент, пДокумент1С, пОрганизация1С, пКонтрагент, пСумма, пДата, пНомер, РезультатТекст)
	РезультатТекст = "";
	Результат = Истина;
	эОрганизация1С = пЭлектронныйДокумент.Организация.Организация1С;
	Если ЗначениеЗаполнено(эОрганизация1С) и ЗначениеЗаполнено(пОрганизация1С) Тогда
		Если эОрганизация1С <> пОрганизация1С Тогда
			Если ЗначениеЗаполнено(РезультатТекст) Тогда
				РезультатТекст = РезультатТекст + Символы.ПС;
			КонецЕсли;
			РезультатТекст = РезультатТекст
			+ НСтр("ru = 'Значение реквизита Организация электронного документа'; uk = 'Значення реквізиту Організація електронного документу'")
			+ " """ + эОрганизация1С + """ "
			+ НСтр("ru = 'не соответствует значению реквизита Организация учетного документа'; uk = 'не відповідає реквізиту Організація облікового документу'")
			+ " """ + пОрганизация1С + """";
			Результат = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	эЕДРПОУКонтрагента = пЭлектронныйДокумент.ЕДРПОУКонтрагента;
	эФилиалКонтрагента = пЭлектронныйДокумент.ФилиалКонтрагента;
	пРеквизитыКонтрагента = скEDI_НастройкиПодКонфигурацию.ПолучитьРеквизитыКонтрагента(пКонтрагент);
	Если эЕДРПОУКонтрагента <> пРеквизитыКонтрагента.КодПоЕДРПОУ Тогда
		Если ЗначениеЗаполнено(РезультатТекст) Тогда
			РезультатТекст = РезультатТекст + Символы.ПС;
		КонецЕсли;
		РезультатТекст = РезультатТекст
		+ НСтр("ru = 'Значение реквизита ЕДРПОУ контрагента электронного документа'; uk = 'Значення реквізиту ЄДРПОУ контрагента електронного документу'")
		+ " """ + эЕДРПОУКонтрагента + """ "
		+ НСтр("ru = 'не соответствует значению реквизита ЕДРПОУ контрагента учетного документа'; uk = 'не відповідає реквізиту ЄДРПОУ контрагента облікового документу'")
		+ " """ + пРеквизитыКонтрагента.КодПоЕДРПОУ + """";
		Результат = Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(эФилиалКонтрагента) и ЗначениеЗаполнено(пРеквизитыКонтрагента.КодФилиала) Тогда
		Если эФилиалКонтрагента <> пРеквизитыКонтрагента.КодФилиала Тогда
			Если ЗначениеЗаполнено(РезультатТекст) Тогда
				РезультатТекст = РезультатТекст + Символы.ПС;
			КонецЕсли;
			РезультатТекст = РезультатТекст
			+ НСтр("ru = 'Значение реквизита Код филиала контрагента электронного документа'; uk = 'Значення реквізиту Код філії контрагента електронного документу'")
			+ " """ + эФилиалКонтрагента + """ "
			+ НСтр("ru = 'не соответствует значению реквизита Код філії контрагента учетного документа'; uk = 'не відповідає реквізиту Код філії контрагента облікового документу'")
			+ " """ + пРеквизитыКонтрагента.КодФилиала + """";
			Результат = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	єСумма = пЭлектронныйДокумент.СуммаДокумента;
	Если єСумма <> пСумма Тогда
		Если ЗначениеЗаполнено(РезультатТекст) Тогда
			РезультатТекст = РезультатТекст + Символы.ПС;
		КонецЕсли;
		РезультатТекст = РезультатТекст
		+ НСтр("ru = 'Значение реквизита Сумма электронного документа'; uk = 'Значення реквізиту Сума електронного документу'")
		+ " """ + Формат(єСумма, "ЧДЦ=2") + """ "
		+ НСтр("ru = 'не соответствует значению реквизита Сумма учетного документа'; uk = 'не відповідає реквізиту Сума облікового документу'")
		+ " """ + Формат(пСумма, "ЧДЦ=2") + """";
		Результат = Ложь;
	КонецЕсли;
	
	эДатаДокумента = пЭлектронныйДокумент.ДатаДокумента;
	Если ЗначениеЗаполнено(эДатаДокумента) и ЗначениеЗаполнено(пДата) Тогда
		Если НачалоДня(эДатаДокумента) <> НачалоДня(пДата) Тогда
			Если ЗначениеЗаполнено(РезультатТекст) Тогда
				РезультатТекст = РезультатТекст + Символы.ПС;
			КонецЕсли;
			РезультатТекст = РезультатТекст
			+ НСтр("ru = 'Значение реквизита Дата электронного документа'; uk = 'Значення реквізиту Дата електронного документу'")
			+ " """ + Формат(эДатаДокумента, "ДФ=dd.MM.yyyy") + """ "
			+ НСтр("ru = 'не соответствует значению реквизита Дата учетного документа'; uk = 'не відповідає реквізиту Дата облікового документу'")
			+ " """ + Формат(пДата, "ДФ=dd.MM.yyyy") + """";
			Результат = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьДокументт1СНаСервере(пЭлектронныйДокумент, пДокумент1С)
	ЭлектронныйДокументОбъект = пЭлектронныйДокумент.ПолучитьОбъект();
	ЭлектронныйДокументОбъект.Документ1С = пДокумент1С;
	ЭлектронныйДокументОбъект.ОбменДанными.Загрузка = Истина;
	скEDI_ОбщегоНазначения.ЗаписатьЭлектронныйДокументСПредварительнымПоискомСвязаных(ЭлектронныйДокументОбъект, ЭлектронныйДокументОбъект.ВидЭлектронногоДокумента, ЭлектронныйДокументОбъект.ВидЭлектронногоДокумента.Владелец);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборЗначенияДокумента1С(Результат, ПараметрыВыбораДокумента1С) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		УстановитьДокументт1СНаСервере(ПараметрыВыбораДокумента1С.ЭлектронныйДокумент, ПараметрыВыбораДокумента1С.Документ1С);
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Учетный документ'; uk = 'Обліковий документ'")
		+ " """ + Строка(ПараметрыВыбораДокумента1С.Документ1С) + """ "
		+ НСтр("ru = 'привязан к электронному документу'; uk = 'прив''язано до електронного документа'")
		+ " """ + Строка(ПараметрыВыбораДокумента1С.ЭлектронныйДокумент) + """ ";
		Сообщение.ИдентификаторНазначения = ОписаниеОповещенияОЗакрытии.Модуль.УникальныйИдентификатор;   
		Сообщение.Сообщить();
		Закрыть(КодВозвратаДиалога.Да);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Документы1СВыборЗначенияНаКлиенте()
	ТекущиеДанные = Элементы.Документы1С.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТекущиеДанные.Ссылка = Документ1С Тогда
			Закрыть(КодВозвратаДиалога.Отмена);
		Иначе
			НесоответствиеТекст = "";
			ПараметрыВыбораЗначенияДокумента1С = Новый Структура;
			ПараметрыВыбораЗначенияДокумента1С.Вставить("ЭлектронныйДокумент", ЭлектронныйДокумент);
			ПараметрыВыбораЗначенияДокумента1С.Вставить("Документ1С", ТекущиеДанные.Ссылка);
			Если Документы1СПроверить(ЭлектронныйДокумент, ТекущиеДанные.Ссылка, ТекущиеДанные.Организация, ТекущиеДанные.Контрагент, ТекущиеДанные.Сумма, ТекущиеДанные.Дата, ТекущиеДанные.Номер, НесоответствиеТекст) Тогда
				ОбработатьВыборЗначенияДокумента1С(КодВозвратаДиалога.Да, ПараметрыВыбораЗначенияДокумента1С);
			Иначе
				ТекстВопроса = НСтр("ru = 'Обнаружено несоответствие реквизитов'; uk = 'Виявлено невідповідність реквізитів'")
				+ Символы.ПС + НесоответствиеТекст
				+ Символы.ПС + НСтр("ru = 'Выбрать даный учетный документ?'; uk = 'Вибрати даний обліковий документ?'");
				
				Если скEDI_ОбщегоНазначения.ЭтоПлатформа82() Тогда
					Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет) = КодВозвратаДиалога.Да Тогда
						ОбработатьВыборЗначенияДокумента1С(КодВозвратаДиалога.Да, ПараметрыВыбораЗначенияДокумента1С);
					КонецЕсли;	
				Иначе
					скEDI_ОткрытиеФормБезМодальности.ПоказатьВопросБезМодальности("ОбработатьВыборЗначенияДокумента1С",
																					ЭтаФорма,
																					ПараметрыВыбораЗначенияДокумента1С,
																					ТекстВопроса,
																					РежимДиалогаВопрос.ДаНет);		
				КонецЕсли;				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	Документы1СВыборЗначенияНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура Документы1СВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Документы1СВыборЗначенияНаКлиенте();
КонецПроцедуры
