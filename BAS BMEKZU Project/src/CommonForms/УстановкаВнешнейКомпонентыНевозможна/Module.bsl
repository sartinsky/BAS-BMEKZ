
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ПустаяСтрока(Параметры.ТекстПояснения) Тогда
		Элементы.ДекорацияПояснение.Заголовок = СтроковыеФункцииКлиентСервер.ФорматированнаяСтрока(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='%1
                           |
                           |Не предусмотрена работа внешней компоненты 
                           |в клиентском приложении <b>%2</b>.
                           |Используйте <a href = about:blank>поддерживаемое клиентское приложение</a> или обратитесь к разработчику внешней компоненты.'
                           |;uk='%1
                           |
                           |Не передбачена робота зовнішньої компоненти 
                           |у клієнтській прикладній програмі <b>%2</b>.
                           |Використовуйте <a href = about:blank>клієнтську прикладну програму яка підтримується</a> або зверніться до розробника зовнішньої компоненти.'"),
				Параметры.ТекстПояснения,
				ПредставлениеТекущегоКлиента()));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияПояснениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоддерживаемыеКлиенты", Параметры.ПоддерживаемыеКлиенты);
	
	ОткрытьФорму("ОбщаяФорма.ПоддерживаемыеКлиентскиеПриложения", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПредставлениеТекущегоКлиента()
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
#Если ВебКлиент Тогда
	Строка = СистемнаяИнформация.ИнформацияПрограммыПросмотра;
	
	Если СтрНайти(Строка, "Chrome/") > 0 Тогда
		Браузер = "Chrome";
	ИначеЕсли СтрНайти(Строка, "MSIE") > 0 Тогда
		Браузер = "Internet Explorer";
	ИначеЕсли СтрНайти(Строка, "Safari/") > 0 Тогда
		Браузер = "Safari";
	ИначеЕсли СтрНайти(Строка, "Firefox/") > 0 Тогда
		Браузер = "Firefox";
	КонецЕсли;
	
	Представление = НСтр("ru='веб-клиент';uk='веб-клієнт'") + " " + Браузер + " " + НСтр("ru='в';uk='в'");
#ИначеЕсли МобильноеПриложениеКлиент  Тогда
	Представление = НСтр("ru='мобильное приложение';uk='мобільна прикладна програма'");
#ИначеЕсли МобильныйКлиент Тогда
	Представление = НСтр("ru='мобильный клиент';uk='мобільний клієнт'");
#ИначеЕсли ТонкийКлиент Тогда
	Представление = НСтр("ru='тонкий клиент';uk='тонкий клієнт'");
#ИначеЕсли ТолстыйКлиентОбычноеПриложение Тогда
	Представление = НСтр("ru='толстый клиент (обычное приложение)';uk='товстий клієнт (звичайна прикладна програма)'");
#ИначеЕсли ТолстыйКлиентУправляемоеПриложение  Тогда
	Представление = НСтр("ru='толстый клиент';uk='товстий клієнт'");
#КонецЕсли
	
	Если СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86 Тогда 
		Представление = Представление + " " + "Windows x86";
	ИначеЕсли СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда 
		Представление = Представление + " " + "Windows x86-64";
	ИначеЕсли СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Linux_x86 Тогда 
		Представление = Представление + " " + "Linux x86";
	ИначеЕсли СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Linux_x86_64 Тогда 
		Представление = Представление + " " + "Linux x86-64";
	ИначеЕсли СистемнаяИнформация.ТипПлатформы = ТипПлатформы.MacOS_x86 Тогда 
		Представление = Представление + " " + "MacOS x86";
	ИначеЕсли СистемнаяИнформация.ТипПлатформы = ТипПлатформы.MacOS_x86_64 Тогда 
		Представление = Представление + " " + "MacOS x86-64";
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

#КонецОбласти