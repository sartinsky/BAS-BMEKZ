
&НаКлиенте
Процедура ОК(Команда)
	
	НовыйСписокСчетов = Новый СписокЗначений;
	Для Каждого СтрокаТаблицы Из ТаблицаСчетовРасчета Цикл
		Если Не СтрокаТаблицы.Использование Тогда
			НовыйСписокСчетов.Добавить(СтрокаТаблицы.Счет);
		КонецЕсли;
	КонецЦикла;
	
	СписокИзменен = Не ОбщегоНазначенияКлиентСервер.СпискиЗначенийИдентичны(СписокСчетов, НовыйСписокСчетов);
	Если СписокИзменен Тогда
		БухгалтерскиеОтчетыВызовСервера.СохранитьСписокСчетовИсключаемыхИзРасчетаЗадолженности(НовыйСписокСчетов, Тип);
	КонецЕсли;
		
	Закрыть(СписокИзменен);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Тип = Параметры.Тип;
	
	СписокСчетов = БухгалтерскиеОтчетыВызовСервера.ПолучитьСписокСчетовИсключаемыхИзРасчетаЗадолженности(Тип);
	
	Запрос = Новый Запрос;
	Если Тип = 3 Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Хозрасчетный.Ссылка В (&СписокСчетов)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Использование,
		|	Хозрасчетный.Ссылка КАК Счет,
		|	Хозрасчетный.ЗапретитьИспользоватьВПроводках,
		|	Хозрасчетный.Родитель
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка В ИЕРАРХИИ (&СчетаРодитель)
		|	И Хозрасчетный.Ссылка НЕ В ИЕРАРХИИ (&СчетДоходыРозница)
		|УПОРЯДОЧИТЬ ПО
		|	Хозрасчетный.Порядок";
		
		СчетаРодитель = Новый СписокЗначений;
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ДоходыОтРеализации);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ДругойОперационныйДоход);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ДоходОтУчастияВКапитале);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеФинансовыеДоходы);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ДругиеДоходы);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ЧрезвычайныеДоходы);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.СтраховыеПлатежи);
		
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.МатериальныеЗатраты);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ЗатратыНаОплатуТруда);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ОтчисленияНаСоциальныеМероприятия);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.Амортизация);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ДругиеОперационныеЗатраты);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ДругиеЗатратыПоЭлементам);
		
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.СебестоимостьРеализации);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.АдминистративныеРасходы);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.РасходыНаСбыт);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ДругиеЗатратыОперационнойДеятельностиГруппа);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ФинансовыеЗатраты);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ПотериОтУчастияВКапитале);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ДругиеЗатратыДеятельности);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.НалогНаПрибыль);
		СчетаРодитель.Добавить(ПланыСчетов.Хозрасчетный.ЧрезвычайныеЗатраты);
		
		Запрос.УстановитьПараметр("СчетаРодитель"		,СчетаРодитель);		
		Запрос.УстановитьПараметр("СчетДоходыРозница"	,ПланыСчетов.Хозрасчетный.ДоходОтРозничныхПродаж);
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Хозрасчетный.Ссылка В (&СписокСчетов)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Использование,
		|	Хозрасчетный.Ссылка КАК Счет,
		|	Хозрасчетный.ЗапретитьИспользоватьВПроводках,
		|	Хозрасчетный.Родитель
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Хозрасчетный1
		|		ПО Хозрасчетный.Ссылка = Хозрасчетный1.Ссылка
		|ГДЕ
		|	Хозрасчетный.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
		|	И Хозрасчетный.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
		|	И НЕ Хозрасчетный.Забалансовый
		|	И НЕ Хозрасчетный1.Забалансовый
		|
		|УПОРЯДОЧИТЬ ПО
		|	Хозрасчетный.Порядок";
		
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("СписокСчетов", СписокСчетов);
	ТаблицаСчетовРасчета.Загрузить(Запрос.Выполнить().Выгрузить());
	
	
	Если Тип = 1 Тогда
		НадписьПояснение = НСтр("ru='В таблице приведены счета учета расчетов, по которым формируется отчет.""При расчете анализируется остаток по дебету счетов по договорам с видом """"С покупателем"", ""С комиссионером "".';uk='У таблиці наведено рахунки обліку розрахунків, за якими формується звіт.""При розрахунку аналізується залишок по дебету рахунків за договорами з видом ""З""покупцем"", ""З комісіонером "".'");
	ИначеЕсли Тип = 2 Тогда
		НадписьПояснение = НСтр("ru='В таблице приведены счета учета расчетов, по которым формируется отчет.""При расчете анализируется остаток по кредиту счетов по договорам с видом """"С поставщиком"", ""С комитентом"".';uk='У таблиці наведено рахунки обліку розрахунків, за якими формується звіт.""При розрахунку аналізується залишок по кредиту рахунків за договорами з видом ""З постачальником"", ""З комітентом"".'");
	ИначеЕсли Тип = 3 Тогда
		НадписьПояснение = НСтр("ru='В таблице приведены счета учета, по которым формируется отчет.';uk='У таблиці наведені рахунки обліку, по яких формується звіт.'");
	КонецЕсли;
												
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВсе(Команда)
	
	Для Каждого СтрокаТаблицы Из ТаблицаСчетовРасчета Цикл
		СтрокаТаблицы.Использование = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для Каждого СтрокаТаблицы Из ТаблицаСчетовРасчета Цикл
		СтрокаТаблицы.Использование = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСчетовРасчетаИспользованиеПриИзменении(Элемент)
		
	ЗапретитьИспользоватьВПроводках = Элементы.ТаблицаСчетовРасчета.ТекущиеДанные.ЗапретитьИспользоватьВПроводках;
	Родитель                        = Элементы.ТаблицаСчетовРасчета.ТекущиеДанные.Родитель;
	Использование                   = Элементы.ТаблицаСчетовРасчета.ТекущиеДанные.Использование;
	
	Если ЗапретитьИспользоватьВПроводках Тогда
		ТаблицаСчетовРасчетаИспользованиеПриИзмененииНаСервере();
	ИначеЕсли ЗначениеЗаполнено(Родитель) И Использование Тогда
		ТаблицаСчетовРасчетаИспользованиеПриИзмененииНаСервере(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаСчетовРасчетаИспользованиеПриИзмененииНаСервере(ИзменятьРодителей = Ложь) 
	
	ТекущиеДанные = ТаблицаСчетовРасчета.НайтиПоИдентификатору(Элементы.ТаблицаСчетовРасчета.ТекущаяСтрока);
	
	Если ТекущиеДанные <> Неопределено Тогда
		Счет = ТекущиеДанные.Счет;
		
		Для Каждого СтрокаТаблицы Из ТаблицаСчетовРасчета Цикл
			Если СтрокаТаблицы.Счет = Счет Тогда
				Продолжить;
			КонецЕсли;
			Если БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(СтрокаТаблицы.Счет, Счет) Тогда
				СтрокаТаблицы.Использование = ТекущиеДанные.Использование;
			КонецЕсли;
			Если ИзменятьРодителей
				И БухгалтерскийУчетВызовСервераПовтИсп.СчетВИерархии(Счет, СтрокаТаблицы.Счет) Тогда
				СтрокаТаблицы.Использование = ТекущиеДанные.Использование;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры


 