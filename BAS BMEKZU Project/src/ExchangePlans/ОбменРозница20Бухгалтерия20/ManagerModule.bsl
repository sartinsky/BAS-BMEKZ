#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет настройки, влияющие на использование плана обмена.
// 
// Параметры:
//  Настройки - Структура - настройки плана обмена по умолчанию, см. ОбменДаннымиСервер.НастройкиПланаОбменаПоУмолчанию,
//                          описание возвращаемого значения функции.
//
Процедура ПриПолученииНастроек(Настройки) Экспорт
	
	Настройки.ИмяКонфигурацииИсточника = ОбщегоНазначенияБП.ИмяКонфигурацииИсточника();
	Настройки.ИмяКонфигурацииПриемника.Вставить("BASРозничнаяТорговля");
	Настройки.ПланОбменаИспользуетсяВМоделиСервиса = Истина;
	Настройки.ПредупреждатьОНесоответствииВерсийПравилОбмена = Ложь;
	Настройки.Алгоритмы.ПриПолученииВариантовНастроекОбмена = Истина;
	Настройки.Алгоритмы.ПриПолученииОписанияВариантаНастройки = Истина;
	Настройки.Алгоритмы.НастроитьИнтерактивнуюВыгрузку = Истина;
	Настройки.Алгоритмы.НастроитьИнтерактивнуюВыгрузкуВМоделиСервиса = Истина;
	Настройки.Алгоритмы.ОписаниеОграниченийПередачиДанных = Истина;
	Настройки.Алгоритмы.ПриПолученииДанныхОтправителя = Истина;
	
КонецПроцедуры

// Заполняет коллекцию вариантов настроек, предусмотренных для плана обмена.
// 
// Параметры:
//  ВариантыНастроекОбмена - ТаблицаЗначений - коллекция вариантов настроек обмена, см. описание возвращаемого значения
//                                       функции НастройкиПланаОбменаПоУмолчанию общего модуля ОбменДаннымиСервер.
//  ПараметрыКонтекста     - Структура - см. ОбменДаннымиСервер.ПараметрыКонтекстаПолученияВариантовНастроек,
//                                       описание возвращаемого значения функции.
//
Процедура ПриПолученииВариантовНастроекОбмена(ВариантыНастроекОбмена, ПараметрыКонтекста) Экспорт
	
	ВариантНастройки = ВариантыНастроекОбмена.Добавить();
	ВариантНастройки.ИдентификаторНастройки        = "";
	ВариантНастройки.КорреспондентВМоделиСервиса   = Ложь;
	ВариантНастройки.КорреспондентВЛокальномРежиме = Истина;

КонецПроцедуры

// Заполняет набор параметров, определяющих вариант настройки обмена.
// 
// Параметры:
//  ОписаниеВарианта       - Структура - набор варианта настройки по умолчанию,
//                                       см. ОбменДаннымиСервер.ОписаниеВариантаНастройкиОбменаПоУмолчанию,
//                                       описание возвращаемого значения.
//  ИдентификаторНастройки - Строка    - идентификатор варианта настройки обмена.
//  ПараметрыКонтекста     - Структура - см. ОбменДаннымиСервер.ПараметрыКонтекстаПолученияОписанияВариантаНастройки,
//                                       описание возвращаемого значения функции.
//
Процедура ПриПолученииОписанияВариантаНастройки(ОписаниеВарианта, ИдентификаторНастройки, ПараметрыКонтекста) Экспорт
	
	ОписаниеВарианта.ИмяКонфигурацииКорреспондента = "BASРозничнаяТорговля";
	ОписаниеВарианта.ИмяФайлаНастроекДляПриемника =  НСтр("ru='Настройки обмена для Бухгалтерия - BAS РТ';uk= 'Настройки обміну для Бухгалтерія - BAS РТ'");
	ОписаниеВарианта.НаименованиеКонфигурацииКорреспондента =  НСтр("ru='BAS Розничная торговля, ред. 2.2';uk='BAS Роздрібна торгівля, ред. 2.2'");
	ОписаниеВарианта.ИспользоватьПомощникСозданияОбменаДанными = Истина;
	ОписаниеВарианта.ИспользуемыеТранспортыСообщенийОбмена = ИспользуемыеТранспортыСообщенийОбмена();
	ОписаниеВарианта.ЗаголовокКомандыДляСозданияНовогоОбменаДанными =  НСтр("ru='BAS Розничная торговля, ред. 2.2';uk='BAS Роздрібна торгівля, ред. 2.2'");
	ОписаниеВарианта.КраткаяИнформацияПоОбмену = КраткаяИнформацияПоОбмену(ИдентификаторНастройки);
	ОписаниеВарианта.ПодробнаяИнформацияПоОбмену = ПодробнаяИнформацияПоОбмену(ИдентификаторНастройки);
	ОписаниеВарианта.ОбщиеДанныеУзлов = ОбщиеДанныеУзлов();
	ОписаниеВарианта.ПутьКФайлуКомплектаПравилВКаталогеШаблонов = "NetHelp\BASRetail\";
	ОписаниеВарианта.Отборы = НастройкаОтборовНаУзле(ИдентификаторНастройки);

КонецПроцедуры

// Возвращает структуру отборов на узле плана обмена с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры,
// содержащие массивы значений полей табличных частей плана обмена.
// 
// Параметры:
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для
//									разного состава настроек на узле для разных версий корреспондента.
//	ИмяФормы - Строка - Имя используемой формы настройки узла. Возможно, например, использование
//						различных форм для разных версий корреспондента.
// 
// Возвращаемое значение:
//	СтруктураНастроек - Структура - структура отборов на узле плана обмена.
// 
Функция НастройкаОтборовНаУзле(ИдентификаторНастройки = "") Экспорт
	
	СтруктураТабличнойЧастиОрганизации = Новый Структура;
	СтруктураТабличнойЧастиОрганизации.Вставить("Организация", Новый Массив);
	
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ДатаНачалаВыгрузкиДокументов",      НачалоГода(ТекущаяДатаСеанса()));
	СтруктураНастроек.Вставить("ИспользоватьОтборПоОрганизациям",   Ложь);
	СтруктураНастроек.Вставить("ПравилаОтправкиДокументов",       "АвтоматическаяСинхронизация");
	СтруктураНастроек.Вставить("ПравилаОтправкиСправочников",     "АвтоматическаяСинхронизация");
	СтруктураНастроек.Вставить("Организации",                       СтруктураТабличнойЧастиОрганизации);

	СтруктураНастроек.Вставить("РежимВыгрузкиДокументов",                 Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную);
	СтруктураНастроек.Вставить("РежимВыгрузкиДокументовКорреспондента",   Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию);
	СтруктураНастроек.Вставить("РежимВыгрузкиСправочников",               Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную);
	СтруктураНастроек.Вставить("РежимВыгрузкиСправочниковКорреспондента", Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Возвращает строку описания ограничений миграции данных для пользователя;
// Прикладной разработчик на основе установленных отборов на узле должен сформировать строку описания ограничений 
// удобную для восприятия пользователем.
// 
// Параметры:
//	НастройкаОтборовНаУзле - Структура - структура отборов на узле плана обмена,
//										 полученная при помощи функции НастройкаОтборовНаУзле().
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для различного
//									описания ограничений передачи данных в зависимости от версии корреспондента.
// Возвращаемое значение:
//	Строка - Строка описания ограничений миграции данных для пользователя.
//
Функция ОписаниеОграниченийПередачиДанных(НастройкаОтборовНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	Если ИдентификаторНастройки = "ТолькоПолучение" Тогда
		
		ОписаниеОграниченийПередачиДанных = "";
		
	Иначе
		
		ПредставлениеДокументов = "";
		ПредставлениеНормативноСправочнойИнформации = "";
		ПредставлениеОграниченийОтправкиДанных = "";
		
		// Представление документов
		Если НастройкаОтборовНаУзле.РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию Тогда
			
			ПредставлениеПериода = "";
			
			Если ЗначениеЗаполнено(НастройкаОтборовНаУзле.ДатаНачалаВыгрузкиДокументов) Тогда
				ПредставлениеПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru=', начиная с %1';uk=', починаючи з %1'"),
				Формат(НастройкаОтборовНаУзле.ДатаНачалаВыгрузкиДокументов, "ДЛФ=DD"));
			Иначе
				ПредставлениеПериода = НСтр("ru=' за весь период ведения учета в программе.';uk=' за весь період ведення обліку в програмі.'");
			КонецЕсли;
			
			ПредставлениеДокументов = НСтр("ru='Отправлять документы[ПредставлениеПериода]';uk='Відправляти документи[ПредставлениеПериода]'");
			
			ПредставлениеДокументов = СтрЗаменить(ПредставлениеДокументов, "[ПредставлениеПериода]", ПредставлениеПериода);
			
		ИначеЕсли НастройкаОтборовНаУзле.РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную Тогда
			
			ПредставлениеДокументов = НСтр("ru='Отправлять документы только вручную.';uk='Відправляти документи тільки вручну.'");
			
		ИначеЕсли НастройкаОтборовНаУзле.РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать Тогда
			
			ПредставлениеДокументов = НСтр("ru='Не отправлять документы.';uk='Не відправляти документи.'");
			
		КонецЕсли;
		
		// Нормативно-справочная информация.
		Если НастройкаОтборовНаУзле.РежимВыгрузкиСправочников = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию Тогда
			
			ПредставлениеНормативноСправочнойИнформации = НСтр("ru='Отправлять всю нормативно-справочную информацию.';uk='Відправляти всю нормативно-довідкову інформацію.'");
			
		ИначеЕсли НастройкаОтборовНаУзле.РежимВыгрузкиСправочников = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости Тогда
			
			ПредставлениеНормативноСправочнойИнформации = НСтр("ru='Отправлять нормативно-справочную информацию, которая используется в отправляемых документах.';uk='Відправляти нормативно-довідкову інформацію, яка використовується в надсилаються документах.'");
			
		ИначеЕсли НастройкаОтборовНаУзле.РежимВыгрузкиСправочников = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать Тогда
			
			ПредставлениеНормативноСправочнойИнформации = НСтр("ru='Не отправлять нормативно-справочную информацию.';uk='Не відправляти нормативно-довідкову інформацію.'");
			
		КонецЕсли;
		
		// Представление ограничений отправки данных.
		Если (НастройкаОтборовНаУзле.РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию)
			ИЛИ (НастройкаОтборовНаУзле.РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную)
			ИЛИ (НастройкаОтборовНаУзле.РежимВыгрузкиСправочников = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию) Тогда
			
			ПредставлениеОрганизаций = "";
			
				// отбор по организациям
		Если НастройкаОтборовНаУзле.ИспользоватьОтборПоОрганизациям Тогда
			СтрокаПредставленияОтбора = СтроковыеФункцииКлиентСервер.СтрокаИзМассиваПодстрок(НастройкаОтборовНаУзле.Организации.Организация, "; ");		
			НСтрока = НСтр("ru='Только по организациям: %1';uk='Тільки по організаціям: %1'");                                                                                           		
			ОграничениеОтборПоОрганизациям = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтрока, СтрокаПредставленияОтбора);                  		
		Иначе		
			ОграничениеОтборПоОрганизациям = НСтр("ru='По всем организациям';uk='По всіх організаціях'");		
		КонецЕсли;

			
			ПредставлениеОграниченийОтправкиДанных = НСтр("ru='Отправлять данные:
|[ПредставлениеОрганизаций]';uk='Надсилати дані:
|[ПредставлениеОрганизаций]'");
			
			ПредставлениеОграниченийОтправкиДанных = СтрЗаменить(ПредставлениеОграниченийОтправкиДанных, "[ПредставлениеОрганизаций]", ПредставлениеОрганизаций);
			
		КонецЕсли;
		
		Результат = НСтр("ru='[ПредставлениеДокументов]
|[ПредставлениеНормативноСправочнойИнформации]
|
|[ПредставлениеОграниченийОтправкиДанных]';uk='[ПредставлениеДокументов]
|[ПредставлениеНормативноСправочнойИнформации]
|
|[ПредставлениеОграниченийОтправкиДанных]'");
		
		Результат = СтрЗаменить(Результат, "[ПредставлениеДокументов]", ПредставлениеДокументов);
		Результат = СтрЗаменить(Результат, "[ПредставлениеНормативноСправочнойИнформации]", ПредставлениеНормативноСправочнойИнформации);
		ОписаниеОграниченийПередачиДанных = СтрЗаменить(Результат, "[ПредставлениеОграниченийОтправкиДанных]", ПредставлениеОграниченийОтправкиДанных);
		
	КонецЕсли;
	
	Возврат ОписаниеОграниченийПередачиДанных;
	
КонецФункции

// Возвращает массив используемых транспортов сообщений для этого плана обмена.
//
// Возвращаемое значение:
//	Массив - массив содержит значения перечисления ВидыТранспортаСообщенийОбмена.
//
// Пример:
// 1. Если план обмена поддерживает только два транспорта сообщений FILE и FTP,
// то тело функции следует определить следующим образом:
//
//	Результат = Новый Массив;
//	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FILE);
//	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FTP);
//	Возврат Результат;
//
// 2. Если план обмена поддерживает все транспорты сообщений, определенных в конфигурации,
// то тело функции следует определить следующим образом:
//
//	Возврат ОбменДаннымиСервер.ВсеТранспортыСообщенийОбменаКонфигурации();
//
Функция ИспользуемыеТранспортыСообщенийОбмена() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FILE);
	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FTP);
	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.COM);
	Возврат Результат;
	
КонецФункции

// Задает краткую информацию по обмену, выводимую при настройке синхронизации данных.
//
// Возвращаемое значение:
//	Строка - краткая информация о настраиваемом обмене.
//
Функция КраткаяИнформацияПоОбмену(ИдентификаторНастройки) Экспорт
	
	ПоясняющийТекст = НСтр("ru='Позволяет синхронизировать данные между конфигурациями ""Бухгалтерия"", ред. 2.1 и ""BAS Розничная торговля"", ред. 2.2. 
	|Синхронизация данных выполняется в одностороннем режиме на уровне документов и справочной информации.';uk= 'Дозволяє синхронізувати дані між конфігураціями ""Бухгалтерія"", ред. 2.1 і ""BAS Роздрібна торгівля"", ред. 2.2. 
	|Синхронізація даних виконується в односторонньому режимі на рівні документів та довідкової інформації.'");
		
	Возврат ПоясняющийТекст;
	
КонецФункции

// Задает подробную информацию по обмену, выводимую при настройке синхронизации данных.
//
// Возвращаемое значение:
//	Строка - Ссылка на подробную информацию по настраиваемой синхронизации в виде гиперссылки или полного пути к форме.
//
Функция ПодробнаяИнформацияПоОбмену(ИдентификаторНастройки = "") Экспорт
		Возврат "ПланОбмена.ОбменРозница20Бухгалтерия20.Форма.ПодробнаяИнформация";
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Для работы через подключение к корреспонденту через внешнее соединение или веб-сервис.

// Возвращает имена реквизитов и табличных частей плана обмена, перечисленных через запятую,
// которые являются общими для пары обменивающихся конфигураций.
//
// Параметры:
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для разного
//									состава общих данных узлов в зависимости от версии корреспондента.
//	ИмяФормы - Строка - Имя используемой формы настройки значений по умолчанию.
//						Возможно, например, использование различных форм для разных версий корреспондента.
//
// Возвращаемое значение:
//	Строка - Список имен реквизитов.
//
Функция ОбщиеДанныеУзлов() Экспорт	
	
	Возврат "ДатаНачалаВыгрузкиДокументов,ИспользоватьОтборПоОрганизациям,Организации";
	
КонецФункции

// Возвращает структуру отборов на узле плана обмена базы корреспондента с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена базы корреспондента;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры,
// содержащие массивы значений полей табличных частей плана обмена.
// 
// Параметры:
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для
//									разного состава настроек на узле для разных версий корреспондента.
//	ИмяФормы - Строка - Имя используемой формы настройки узла. Возможно, например, использование
//						различных форм для разных версий корреспондента.
// 
// Возвращаемое значение:
//  СтруктураНастроек - Структура - структура отборов на узле плана обмена базы корреспондента.
// 
Функция НастройкаОтборовНаУзлеБазыКорреспондента(ВерсияКорреспондента, ИмяФормы, ИдентификаторНастройки) Экспорт
	
	СтруктураТабличнойЧастиОрганизации = Новый Структура;
	СтруктураТабличнойЧастиОрганизации.Вставить("Организация",      Новый Массив);
	СтруктураТабличнойЧастиОрганизации.Вставить("Организация_Ключ", Новый Массив);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ДатаНачалаВыгрузкиДокументов",      НачалоГода(ТекущаяДатаСеанса()));
	СтруктураНастроек.Вставить("ИспользоватьОтборПоОрганизациям",   Ложь);
	СтруктураНастроек.Вставить("ПравилаОтправкиДокументов",            "АвтоматическаяСинхронизация");
	СтруктураНастроек.Вставить("ПравилаОтправкиСправочников",          "АвтоматическаяСинхронизация");

	
	СтруктураНастроек.Вставить("Организации",   СтруктураТабличнойЧастиОрганизации);
	
	
	Если ИдентификаторНастройки = "ТолькоПолучение" Тогда
		
		РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
		РежимВыгрузкиДокументовКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную;
		
	ИначеЕсли ИдентификаторНастройки = "ТолькоОтправка" Тогда
		
		РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную;
		РежимВыгрузкиДокументовКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
		
	Иначе
		
		РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
		РежимВыгрузкиДокументовКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
		
	КонецЕсли;
	
	СтруктураНастроек.Вставить("РежимВыгрузкиДокументов",                 РежимВыгрузкиДокументов);
	СтруктураНастроек.Вставить("РежимВыгрузкиДокументовКорреспондента",   РежимВыгрузкиДокументовКорреспондента);
	СтруктураНастроек.Вставить("РежимВыгрузкиСправочников",               Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию);
	СтруктураНастроек.Вставить("РежимВыгрузкиСправочниковКорреспондента", Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Возвращает структуру значений по умолчанию для узла базы корреспондента;
// Структура настроек повторяет состав реквизитов шапки плана обмена базы корреспондента;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры.
// 
// Параметры:
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для разного
//									состава значений по умолчанию на узле для разных версий корреспондента.
//	ИмяФормы - Строка - Имя используемой формы настройки значений по умолчанию.
//						Возможно, например, использование различных форм для разных версий корреспондента.
// 
// Возвращаемое значение:
//  СтруктураНастроек - Структура - структура значений по умолчанию на узле плана обмена базы корреспондента.
//
Функция ЗначенияПоУмолчаниюНаУзлеБазыКорреспондента(ВерсияКорреспондента, ИмяФормы, ИдентификаторНастройки) Экспорт
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("НоменклатураПоУмолчанию", "");
	СтруктураНастроек.Вставить("НоменклатураПоУмолчанию_Ключ", "");
	
	Возврат СтруктураНастроек;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

// Обработчик события при получении данных узла-отправителя.
// Событие возникает при получении данных узла-отправителя,
// когда данные узла прочитаны из сообщения обмена, но не записаны в информационную базу.
// В обработчике можно изменить полученные данные или вовсе отказаться от получения данных узла.
//
// Параметры:
//	Отправитель - ПланОбменаОбъект, Структура - узел плана обмена, от имени которого выполняется получение данных.
//	Игнорировать - Булево - признак отказа от получения данных узла.
//							Если в обработчике установить значение этого параметра в Истина,
//							то получение данных узла выполнена не будет. Значение по умолчанию - Ложь.
//
Процедура ПриПолученииДанныхОтправителя(Отправитель, Игнорировать) Экспорт
	
	Если ТипЗнч(Отправитель) = Тип("Структура") Тогда
		
		Если Отправитель.Свойство("РежимВыгрузкиСправочников") Тогда
			ПоменятьЗначения(Отправитель, "РежимВыгрузкиСправочников", "РежимВыгрузкиСправочниковКорреспондента");
		КонецЕсли;
		
		Если Отправитель.Свойство("РежимВыгрузкиДокументов") Тогда
			ПоменятьЗначения(Отправитель, "РежимВыгрузкиДокументов", "РежимВыгрузкиДокументовКорреспондента");
		КонецЕсли;
		
	Иначе
		
		ПоменятьЗначения(Отправитель, "РежимВыгрузкиСправочников", "РежимВыгрузкиСправочниковКорреспондента");
		ПоменятьЗначения(Отправитель, "РежимВыгрузкиДокументов", "РежимВыгрузкиДокументовКорреспондента");
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Переопределяемая настройка дополнения выгрузки.

// Предназначена для настройки вариантов интерактивной настройки выгрузки по сценарию узла.
// Для настройки необходимо установить значения свойств параметров в необходимые значения.
//
// Используется для контроля режимов работы помощника интерактивного обмена данными.
//
// Параметры:
//	Получатель - ПланОбменаСсылка - Узел, для которого производится настройка.
//	Параметры  - Структура        - Параметры для изменения. Содержит поля:
//		*ВариантБезДополнения - Структура     - настройки типового варианта "Не добавлять". Содержит поля:
//			*Использование - Булево - флаг разрешения использования варианта. По умолчанию Истина.
//			*Порядок       - Число  - порядок размещения варианта на форме помощника, сверху вниз. По умолчанию 1.
//			*Заголовок     - Строка - позволяет переопределить название типового варианта.
//			*Пояснение     - Строка - позволяет переопределить текст пояснения варианта для пользователя.
//		*ВариантВсеДокументы - Структура      - настройки типового варианта "Добавить все документы за период". Содержит
//		                                        поля:
//			*Использование - Булево - флаг разрешения использования варианта. По умолчанию Истина.
//			*Порядок       - Число  - порядок размещения варианта на форме помощника, сверху вниз. По умолчанию 2.
//			*Заголовок     - Строка - позволяет переопределить название типового варианта.
//			*Пояснение     - Строка - позволяет переопределить текст пояснения варианта для пользователя.
//		*ВариантПроизвольныйОтбор - Структура - настройки типового варианта "Добавить данные с произвольным отбором".
//		                                        Содержит поля:
//			*Использование - Булево - флаг разрешения использования варианта. По умолчанию Истина.
//			*Порядок       - Число  - порядок размещения варианта на форме помощника, сверху вниз. По умолчанию 3.
//			*Заголовок     - Строка - позволяет переопределить название типового варианта.
//			*Пояснение     - Строка - позволяет переопределить текст пояснения варианта для пользователя.
//		*ВариантДополнительно - Структура     - настройки дополнительного варианта по сценарию узла. Содержит поля:
//			*Использование            - Булево            - флаг разрешения использования варианта. По умолчанию Ложь.
//			*Порядок                  - Число             - порядок размещения варианта на форме помощника, сверху вниз. По
//			                                                умолчанию 4.
//			*Заголовок                - Строка            - название варианта для отображения на форме.
//			*ИмяФормыОтбора           - Строка            - Имя формы, вызываемой для редактирования настроек.
//			*ЗаголовокКомандыФормы    - Строка            - Заголовок для отрисовки на форме команды открытия формы настроек.
//			*ИспользоватьПериодОтбора - Булево            - флаг того, что необходим общий отбор по периоду. По умолчанию Ложь.
//			*ПериодОтбора             - СтандартныйПериод - значение периода общего отбора, предлагаемого по умолчанию.
//			*Отбор                    - ТаблицаЗначений   - содержит строки с описанием подробных отборов по сценарию узла.
//			                                                Содержит колонки:
//				*ПолноеИмяМетаданных - Строка                - полное имя метаданных регистрируемого объекта, отбор которого
//				                                               описывает строка.
//                                                             Например "Документ.ПоступлениеТоваров". Можно
//                                                             использовать специальные  значения "ВсеДокументы" и
//                                                             "ВсеСправочники" для отбора соответственно всех
//                                                             документов и всех справочников, регистрирующихся на узле
//                                                             Получатель.
//				*ВыборПериода        - Булево                - флаг того, что данная строка описывает отбор с общим периодом.
//				*Период              - СтандартныйПериод     - значение периода общего отбора для метаданных строки,
//				                                               предлагаемого по умолчанию.
//				*Отбор               - ОтборКомпоновкиДанных - отбор по умолчанию. Поля отбора формируются в соответствии с общим
//				                                               правилами
//                                                             формирования полей компоновки. Например, для указания
//                                                             отбора по реквизиту документа "Организация", необходимо
//                                                             использовать поле "Ссылка.Организация".
//
// Если для всех вариантов флаги разрешения использования установлены в Ложь, то страница дополнения выгрузки в
// помощнике интерактивного обмена данными будет пропущена и дополнительная регистрация объектов производится не будет.
// Например, инициализация вида:
//
//	Параметры.ВариантВсеДокументы.Использование      = Ложь;
//	Параметры.ВариантБезДополнения.Использование     = Ложь;
//	Параметры.ВариантПроизвольныйОтбор.Использование = Ложь;
//	Параметры.ВариантДополнительно.Использование     = Ложь;
//
//	Приведет к тому, что шаг дополнения выгрузки будет полностью пропущен.
//
Процедура НастроитьИнтерактивнуюВыгрузку(Получатель, Параметры) Экспорт
	
	// Настраиваем стандартные варианты.
	Параметры.ВариантВсеДокументы.Использование      = Ложь;
	Параметры.ВариантБезДополнения.Использование     = Ложь;
	Параметры.ВариантПроизвольныйОтбор.Использование = Ложь;
	Параметры.ВариантДополнительно.Использование     = Ложь;
	
КонецПроцедуры

// Возвращает представление отбора для варианта дополнения выгрузки по сценарию узла.
// См. описание "ВариантДополнительно" в процедуре "НастроитьИнтерактивнуюВыгрузку".
//
// Параметры:
//	Получатель - ПланОбменаСсылка - Узел, для которого определяется представление отбора.
//	Параметры  - Структура        - Характеристики отбора. Содержит поля:
//		*ИспользоватьПериодОтбора - Булево            - флаг того, что необходимо использовать общий отбор по периоду.
//		*ПериодОтбора             - СтандартныйПериод - значение периода общего отбора.
//		*Отбор                    - ТаблицаЗначений   - содержит строки с описанием подробных отборов по сценарию узла.
//		                                                Содержит колонки:
//			*ПолноеИмяМетаданных - Строка                - полное имя метаданных регистрируемого объекта, отбор которого
//			                                               описывает строка.
//                                                         Например "Документ.ПоступлениеТоваров". Могут быть
//                                                         использованы специальные  значения "ВсеДокументы" и
//                                                         "ВсеСправочники" для отбора соответственно всех документов и
//                                                         всех справочников, регистрирующихся на узле Получатель.
//			*ВыборПериода        - Булево                - флаг того, что данная строка описывает отбор с общим периодом.
//			*Период              - СтандартныйПериод     - значение периода общего отбора для метаданных строки.
//			*Отбор               - ОтборКомпоновкиДанных - поля отбора. Поля отбора формируются в соответствии с общим
//			                                               правилами формирования полей компоновки. Например, для указания
//			                                               отбора по реквизиту документа "Организация", будет использовано
//			                                               поле "Ссылка.Организация".
//
// Возвращаемое значение:
//	Строка - описание отбора
//
Функция ПредставлениеОтбораИнтерактивнойВыгрузки(Получатель, Параметры) Экспорт
	
	Если Параметры.ИспользоватьПериодОтбора Тогда
		Если ЗначениеЗаполнено(Параметры.ПериодОтбора) Тогда
			ОписаниеПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='за период: %1';uk='за період: %1'"), НРег(Параметры.ПериодОтбора));
		Иначе
			ДатаНачалаВыгрузки = Получатель.ДатаНачалаВыгрузкиДокументов;
			Если ЗначениеЗаполнено(ДатаНачалаВыгрузки) Тогда
				ОписаниеПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='начиная с даты начала отправки документов: %1';uk='починаючи з дати початку відправлення документів: %1'"), Формат(ДатаНачалаВыгрузки, "ДЛФ=DD"));
			Иначе
				ОписаниеПериода = НСтр("ru='за весь период учета';uk='за весь період обліку'");
			КонецЕсли;
		КонецЕсли;
	Иначе
		ОписаниеПериода = "";
	КонецЕсли;
	
	СписокОрганизаций = ОрганизацииОтбораИнтерактивнойВыгрузки(Параметры.Отбор);
	Если СписокОрганизаций.Количество()=0 Тогда
		ОписаниеОтбораОрганизации = НСтр("ru='по всем организациям';uk='по всіх організаціях'");
	Иначе
		ОписаниеОтбораОрганизации = "";
		Для Каждого Элемент Из СписокОрганизаций Цикл
			ОписаниеОтбораОрганизации = ОписаниеОтбораОрганизации+ ", " + Элемент.Представление;
		КонецЦикла;
		ОписаниеОтбораОрганизации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='по организациям: %1';uk='за організаціями: %1'"), СокрЛП(Сред(ОписаниеОтбораОрганизации, 2)));
	КонецЕсли;

	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Будут отправлены поступления товаров %1,
|%2';uk='Будуть відправлені надходження товарів %1,
|%2'"),
		ОписаниеПериода,  ОписаниеОтбораОрганизации);
КонецФункции

// Аналог НастроитьИнтерактивнуюВыгрузку для работы в модели сервиса.
//
// В текущей версии обрабатывается только использование стандартных вариантов дополнения выгрузки,
// Пользовательский сценарий, описание, расположение и т.п. не учитывается.
// 
// Если для всех вариантов флаги разрешения использования установлены в Ложь, то страница дополнения
// выгрузки в помощнике интерактивного обмена данными будет пропущена.
// 
// Параметры:
//	См. описание параметров в НастроитьИнтерактивнуюВыгрузку.
//
Процедура НастроитьИнтерактивнуюВыгрузкуВМоделиСервиса(Получатель, Параметры) Экспорт
	
	Параметры.ВариантБезДополнения.Использование     = Ложь;
	Параметры.ВариантВсеДокументы.Использование      = Ложь;
	Параметры.ВариантПроизвольныйОтбор.Использование = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Групповое изменение объектов.

// Возвращает реквизиты объекта, которые не рекомендуется редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("РегистрироватьИзменения");
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции.
// Используются в демонстрационных целях.

// Возвращает список организаций по таблице отбора (см "ПредставлениеОтбораИнтерактивнойВыгрузки").
// Также используется из демонстрационной формы "НастройкаВыгрузки" этого плана обмена.
//
// Параметры:
//	ТаблицаОтбора - ТаблицаЗначений   - содержит строки с описанием подробных отборов по сценарию узла. Содержит колонки:
//		*ПолноеИмяМетаданных - Строка.
//		*ВыборПериода        - Булево.
//		*Период              - СтандартныйПериод.
//		*Отбор               - ОтборКомпоновкиДанных.
//
// Возвращаемое значение:
//	СписокЗначений - значение - ссылка на организацию, представление - наименование.
//
Функция ОрганизацииОтбораИнтерактивнойВыгрузки(Знач ТаблицаОтбора) Экспорт
	
	Результат = Новый СписокЗначений;
	
	Если ТаблицаОтбора.Количество()=0 Или ТаблицаОтбора[0].Отбор.Элементы.Количество()=0 Тогда
		// Нет данных отбора
		Возврат Результат;
	КонецЕсли;
		
	// Мы знаем состав отбора, так как помещали туда сами - или из "НастроитьИнтерактивнуюВыгрузку"
	// или как результат редактирования в форме.
	
	СтрокаДанных = ТаблицаОтбора[0].Отбор.Элементы[0];
	Отобранные   = СтрокаДанных.ПравоеЗначение;
	ТипКоллекции = ТипЗнч(Отобранные);
	
	Если ТипКоллекции=Тип("СписокЗначений") Тогда
		Для Каждого Элемент Из Отобранные Цикл
			ДобавитьСписокОрганизаций(Результат, Элемент.Значение);
		КонецЦикла;
		
	ИначеЕсли ТипКоллекции=Тип("Массив") Тогда
		ДобавитьСписокОрганизаций(Результат, Отобранные);
		 
	ИначеЕсли ТипКоллекции=Тип("СправочникСсылка.Организации") Тогда
		Если Результат.НайтиПоЗначению(Отобранные)=Неопределено Тогда
			Результат.Добавить(Отобранные, Отобранные.Наименование);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// Добавляет в список организаций коллекцию.
//
// Параметры:
//	Список      - СписокЗначений - дополняемый список.
//	Организации - коллекция организаций.
// 
Процедура ДобавитьСписокОрганизаций(Список, Знач Организации)
	Для Каждого Организация Из Организации Цикл
		
		Если ТипЗнч(Организация)=Тип("Массив") Тогда
			ДобавитьСписокОрганизаций(Список, Организация);
			Продолжить;
		КонецЕсли;
		
		Если Список.НайтиПоЗначению(Организация)=Неопределено Тогда
			Список.Добавить(Организация, Организация.Наименование);
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

Процедура ПоменятьЗначения(Данные, Знач Свойство1, Знач Свойство2)
	
	Значение = Данные[Свойство1];
	
	Данные[Свойство1] = Данные[Свойство2];
	Данные[Свойство2] = Значение;
	
КонецПроцедуры

Процедура ОпределитьРежимыВыгрузкиДокументов(Знач ВариантСинхронизацииДокументов, Знач Данные) Экспорт
	
	Если ВариантСинхронизацииДокументов = "ОтправлятьИПолучатьАвтоматически" Тогда
		
		Данные.РежимВыгрузкиДокументов               = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
		Данные.РежимВыгрузкиДокументовКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
		
	ИначеЕсли ВариантСинхронизацииДокументов = "ОтправлятьАвтоматически" Тогда
		
		Данные.РежимВыгрузкиДокументов               = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
		Данные.РежимВыгрузкиДокументовКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную;
		
	ИначеЕсли ВариантСинхронизацииДокументов = "ПолучатьАвтоматически" Тогда
		
		Данные.РежимВыгрузкиДокументов               = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную;
		Данные.РежимВыгрузкиДокументовКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
		
	ИначеЕсли ВариантСинхронизацииДокументов = "ОтправлятьИПолучатьВручную" Тогда
		
		Данные.РежимВыгрузкиДокументов               = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную;
		Данные.РежимВыгрузкиДокументовКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОпределитьРежимыВыгрузкиСправочников(Знач ВариантСинхронизацииСправочников, Знач Данные) Экспорт
	
	Если ВариантСинхронизацииСправочников = "ОтправлятьИПолучатьАвтоматически" Тогда
		
		Данные.РежимВыгрузкиСправочников               = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
		Данные.РежимВыгрузкиСправочниковКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
		
	ИначеЕсли ВариантСинхронизацииСправочников = "ОтправлятьИПолучатьПриНеобходимости" Тогда
		
		Данные.РежимВыгрузкиСправочников               = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
		Данные.РежимВыгрузкиСправочниковКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
		
	ИначеЕсли ВариантСинхронизацииСправочников = "ОтправлятьИПолучатьВручную" Тогда
		
		Данные.РежимВыгрузкиСправочников               = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную;
		Данные.РежимВыгрузкиСправочниковКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОпределитьВариантСинхронизацииДокументов(ВариантСинхронизацииДокументов, Знач Данные) Экспорт
	
	Если Данные.РежимВыгрузкиДокументов                = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию
		И Данные.РежимВыгрузкиДокументовКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию Тогда
		
		ВариантСинхронизацииДокументов = "ОтправлятьИПолучатьАвтоматически"
		
	ИначеЕсли Данные.РежимВыгрузкиДокументов           = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную
		И Данные.РежимВыгрузкиДокументовКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию Тогда
		
		ВариантСинхронизацииДокументов = "ПолучатьАвтоматически"
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОпределитьВариантСинхронизацииСправочников(ВариантСинхронизацииСправочников, Знач Данные) Экспорт
	
	Если Данные.РежимВыгрузкиСправочников                = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию
		И Данные.РежимВыгрузкиСправочниковКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию Тогда
		
		ВариантСинхронизацииСправочников = "ОтправлятьИПолучатьАвтоматически"
		
	ИначеЕсли Данные.РежимВыгрузкиСправочников           = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную
		И Данные.РежимВыгрузкиСправочниковКорреспондента = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную Тогда
		
		ВариантСинхронизацииСправочников = "ОтправлятьИПолучатьВручную"
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
