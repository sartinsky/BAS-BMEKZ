////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустой() Тогда
		
		Запись.Период = НачалоДня(ТекущаяДатаСеанса());
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.ОтветственноеЛицо) Тогда
		
		Элементы.ОтветственноеЛицо.Вид			= ВидПоляФормы.ПолеНадписи;
		Элементы.ОтветственноеЛицо.ЦветТекста	= ЦветаСтиля.ТекстПредопределенногоЗначения;
		
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		
		ОтветственныеЛицаОрганизаций	= РегистрыСведений.ОтветственныеЛицаКонтрагентов.СоздатьМенеджерЗаписи();
		ОтветственныеЛицаОрганизаций.Период				= Запись.ИсходныйКлючЗаписи.Период;
		ОтветственныеЛицаОрганизаций.Контрагент	        = Запись.ИсходныйКлючЗаписи.Контрагент;
		ОтветственныеЛицаОрганизаций.ОтветственноеЛицо	= Запись.ИсходныйКлючЗаписи.ОтветственноеЛицо;
		ОтветственныеЛицаОрганизаций.Прочитать();
		
		СтруктураСтаройЗаписи	= Новый Структура("Период, Контрагент, ОтветственноеЛицо, КонтактноеЛицо");
		ЗаполнитьЗначенияСвойств(СтруктураСтаройЗаписи, ОтветственныеЛицаОрганизаций);
		ПараметрыЗаписи.Вставить("СтруктураСтаройЗаписи", СтруктураСтаройЗаписи);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("СтруктураСтаройЗаписи") Тогда
		
		// Если была изменена дата и хотя бы одно из полей, тогда сохраним прежнюю запись	
		Если (НЕ ТекущийОбъект.Период = ПараметрыЗаписи.СтруктураСтаройЗаписи.Период
				И (НЕ ТекущийОбъект.КонтактноеЛицо = ПараметрыЗаписи.СтруктураСтаройЗаписи.КонтактноеЛицо)) Тогда
					
			ОтветственныеЛицаКонтрагентов	= РегистрыСведений.ОтветственныеЛицаКонтрагентов.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(ОтветственныеЛицаКонтрагентов, ТекущийОбъект);
			ЗаполнитьЗначенияСвойств(ОтветственныеЛицаКонтрагентов, ПараметрыЗаписи.СтруктураСтаройЗаписи);
			ОтветственныеЛицаКонтрагентов.Записать();
			
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзменениеОтветственныхЛицКонтрагентов", Запись.Контрагент);
	Оповестить("ИзмененСписокОтветственныхЛицКонтрагентов", Запись.Контрагент);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы	= Форма.Элементы;
	Запись		= Форма.Запись;
	
	Элементы.КонтрагентПолеНадписи.Видимость = ЗначениеЗаполнено(Запись.Контрагент);
	Элементы.Контрагент.Видимость            = НЕ ЗначениеЗаполнено(Запись.Контрагент);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ИсторияИзменений(Команда)

	Отбор	= Новый Структура("Контрагент, ОтветственноеЛицо");
	ЗаполнитьЗначенияСвойств(Отбор, Запись);
	
	ОткрытьФорму("РегистрСведений.ОтветственныеЛицаКонтрагентов.ФормаСписка", Новый Структура("Отбор", Отбор));
	
КонецПроцедуры
