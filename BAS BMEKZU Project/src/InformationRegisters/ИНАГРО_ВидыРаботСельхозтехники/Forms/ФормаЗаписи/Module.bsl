#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)  	

	УправлениеФормой(ЭтаФорма); 

КонецПроцедуры  

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Запись.МаркаСельхозтехники) Тогда
		ТекстСообщения = НСтр("ru='Не заполнена Марка сельхозтехники!';uk='Не заповнена Марка сільгосптехніки!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.МаркаСельхозтехники", , Отказ);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти   

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МаркаСельхозтехникиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура;	
	Отбор.Вставить("ВидТехники", ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыТехники.Сельхозтехника"));
		
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
		
	ОткрытьФорму("Справочник.ИНАГРО_МоделиТС.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура МаркаАгрегатаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура;	
	Отбор.Вставить("ВидТехники", ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыТехники.Агрегат"));
		
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
		
	ОткрытьФорму("Справочник.ИНАГРО_МоделиТС.ФормаВыбора", ПараметрыФормы, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ПомощникПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
	Если НЕ Запись.Помощник Тогда
		Запись.ПроцентОплатыПомощников = 0;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Запись	 = Форма.Запись; 
		
	Элементы.ПроцентОплатыПомощников.Доступность = Запись.Помощник;
	
КонецПроцедуры  

#КонецОбласти  