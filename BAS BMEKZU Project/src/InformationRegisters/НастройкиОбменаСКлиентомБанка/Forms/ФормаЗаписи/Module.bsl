/////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ ФОРМЫ

// Открывает для просмотра текстовой документ
//  
&НаКлиенте
Процедура ОткрытьФайлДляПросмотра(Элемент, Кодировка, Заголовок)
	
	СтандартнаяОбработка = Ложь;
	
	ФайлНаДиске = Новый Файл(Элемент.ТекстРедактирования);
	Если НЕ ФайлНаДиске.Существует() Тогда
		ПоказатьПредупреждение(, НСтр("ru='Не найден файл!';uk='Не знайдений файл!'"));
		Возврат;
	КонецЕсли;
	
	Текст = Новый ТекстовыйДокумент();
	
	Если Кодировка = "DOS" Тогда
		Кодир = КодировкаТекста.OEM;
	ИначеЕсли Кодировка = "Windows" Тогда
		Кодир = КодировкаТекста.ANSI;
	Иначе	
		Кодир = КодировкаТекста.UTF8;
	КонецЕсли;
	
	Текст.Прочитать(Элемент.ТекстРедактирования, Кодир);
	Текст.Показать(Заголовок, Элемент.ТекстРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаДляВыгрузкиИЗагрузки(Элемент, Текст)
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбора.Фильтр                      = НСтр("ru='XML файл';uk='XML файл'")+" (*.xml)|*.xml";
	ДиалогВыбора.Заголовок                   = СтрЗаменить(НСтр("ru='Выберите файл для &текст& данных из клиента банка';uk='Виберіть файл для &текст& даних з клієнта банку'"), "&текст&", Текст);
	ДиалогВыбора.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбора.Расширение                  = "xml";
	ДиалогВыбора.ИндексФильтра               = 0;
	ДиалогВыбора.ПолноеИмяФайла              = Элемент.ТекстРедактирования;
	ДиалогВыбора.ПроверятьСуществованиеФайла = Ложь;
	
	Если ДиалогВыбора.Выбрать() Тогда
		Если Текст = НСтр("ru='загрузки';uk='завантаження'") Тогда
			Запись.ФайлЗагрузки = ДиалогВыбора.ПолноеИмяФайла;
		Иначе
			Запись.ФайлВыгрузки = ДиалогВыбора.ПолноеИмяФайла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыборФайлаДляВыгрузкиИЗагрузки(Элемент, НСтр("ru='загрузки';uk='завантаження'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыборФайлаДляВыгрузкиИЗагрузки(Элемент, НСтр("ru='выгрузки';uk='вивантаження'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФайлДляПросмотра(Элемент, Запись.Кодировка, НСтр("ru='Файл загрузки';uk='Файл завантаження'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФайлДляПросмотра(Элемент, Запись.Кодировка, НСтр("ru='Файл выгрузки';uk='Файл вивантаження'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.Организация) Тогда
		ОрганизацияПриИзмененииСервер(Запись.БанковскийСчет, Запись.Организация, ВалютаРегламентированногоУчета);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОрганизацияПриИзмененииСервер(БанковскийСчет,Организация, ВалютаРегламентированногоУчета)
	
	УчетДенежныхСредствБП.УстановитьБанковскийСчет(БанковскийСчет,Организация, ВалютаРегламентированногоУчета);
	
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.БанковскийСчет) Тогда
		Запись.Организация = БанковскийСчетПриИзмененииСервер(Запись.БанковскийСчет);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция БанковскийСчетПриИзмененииСервер(БанковскийСчет)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(БанковскийСчет, "Владелец");
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.Программа.СписокВыбора.ЗагрузитьЗначения(УчетДенежныхСредствБП.СписокСовместимыхПрограммКлиентовБанка(Истина));
	
	СписокКодировок = Элементы.Кодировка.СписокВыбора;
	СписокКодировок.Добавить("UTF8", "UTF-8");
	СписокКодировок.Добавить("Windows");
	СписокКодировок.Добавить("DOS");
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запись.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	Если ЗначениеЗаполнено(Запись.Организация) Тогда
		ОрганизацияПриИзмененииСервер(Запись.БанковскийСчет, Запись.Организация, ВалютаРегламентированногоУчета);
	КонецЕсли;
	
КонецПроцедуры
