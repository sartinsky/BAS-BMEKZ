#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	
	Параметры.Свойство("Организация", Организация);
	
	ОбновитьТабличноеПолеПериодов();
				
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьТабличноеПолеПериодов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицФормы

&НаКлиенте
Процедура ТабличноеПолеПериодовПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = ТабличноеПолеПериодов.НайтиПоИдентификатору(Элементы.ТабличноеПолеПериодов.ТекущаяСтрока);
	СтрокаРодитель = ТекущаяСтрока.ПолучитьРодителя();
	
	ДанныеСтроки = Новый Структура("Период");
	
	Если СтрокаРодитель <> Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, СтрокаРодитель);
		ВыбПериод = ТекущаяСтрока.Период;
		
	Иначе
		
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, ТекущаяСтрока);
		ВыбПериод = '00010101';
		
	КонецЕсли;	
	
	ВидРеестра = Неопределено;
	
	ПолучитьТекущийВидРеестра(ДанныеСтроки, ВидРеестра);		
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ТабличноеПолеРеквизитов, "Организация", Организация);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ТабличноеПолеРеквизитов, "ВидРеестра",  ВидРеестра);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ТабличноеПолеРеквизитов, "Период",      ВыбПериод);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоУмолчанию(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НеОткрыватьФормуНастройкиФормированияРеестров", Истина);
	
	ОткрытьФорму("Обработка.ИНАГРО_ОбновлениеИнформационнойБазы.Форма.ЗаполнитьНастройкиФормированияРеестровТТН", ПараметрыФормы, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор);
	 	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьТабличноеПолеПериодов()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	ДеревоЗначений = РеквизитФормыВЗначение("ТабличноеПолеПериодов", Тип("ДеревоЗначений"));
	ДеревоЗначений.Строки.Очистить();	
		
	Запрос = Новый Запрос;	
		
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(ИНАГРО_НастройкиФормированияРеестровТТН.Период, ДЕНЬ) КАК Период,
		|	ИНАГРО_НастройкиФормированияРеестровТТН.ВидРеестра КАК ВидРеестра
		|ПОМЕСТИТЬ Рег
		|ИЗ
		|	РегистрСведений.ИНАГРО_НастройкиФормированияРеестровТТН КАК ИНАГРО_НастройкиФормированияРеестровТТН
		|ГДЕ
		|	ИНАГРО_НастройкиФормированияРеестровТТН.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ИНАГРО_НастройкиФормированияРеестровТТН.ВидРеестра,
		|	НАЧАЛОПЕРИОДА(ИНАГРО_НастройкиФормированияРеестровТТН.Период, ДЕНЬ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Рег.Период КАК Период,
		|	ИНАГРО_ВидыРеестровТТН.Ссылка КАК ВидРеестра,
		|	ВЫБОР
		|		КОГДА ИНАГРО_ВидыРеестровТТН.Ссылка = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВвоз)
		|			ТОГДА 1
		|		КОГДА ИНАГРО_ВидыРеестровТТН.Ссылка = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВнутр)
		|			ТОГДА 2
		|		КОГДА ИНАГРО_ВидыРеестровТТН.Ссылка = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВывоз)
		|			ТОГДА 3
		|		КОГДА ИНАГРО_ВидыРеестровТТН.Ссылка = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидыРеестровТТН.ИНАГРО_РеестрТТНВвозЖД)
		|			ТОГДА 4
		|		ИНАЧЕ 5
		|	КОНЕЦ КАК ПорядокСледования
		|ИЗ
		|	Перечисление.ИНАГРО_ВидыРеестровТТН КАК ИНАГРО_ВидыРеестровТТН
		|		ЛЕВОЕ СОЕДИНЕНИЕ Рег КАК Рег
		|		ПО ИНАГРО_ВидыРеестровТТН.Ссылка = Рег.ВидРеестра
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПорядокСледования,
		|	Период";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	ТекушийВидРеестра = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если ТекушийВидРеестра <> Выборка.ВидРеестра Тогда
			СтрокаПолеВидовРеестра = ДеревоЗначений.Строки.Добавить();
			ТекушийВидРеестра	= Выборка.ВидРеестра;
			СтрокаПолеВидовРеестра.Период = ТекушийВидРеестра;
		КонецЕсли;		
		
		Если Выборка.Период <> NULL Тогда
			СтрокаПериод = СтрокаПолеВидовРеестра.Строки.Добавить();
			СтрокаПериод.Период = Выборка.Период;
		КонецЕсли;		
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоЗначений, "ТабличноеПолеПериодов");		

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПолучитьТекущийВидРеестра(ДанныеСтроки, ВидРеестра)
	
	ВидРеестра = ДанныеСтроки.Период;
	
КонецПроцедуры

#КонецОбласти