#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Первоначальное заполнение объекта.
	Если Параметры.Ключ.Пустой() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Месяц, Организация, Подразделение", "Запись.ПериодДействия", "Запись.Организация", "Запись.Подразделение");		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);

		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Запись.ПериодДействия", "ПериодДействияСтрокой");
		
		УправлениеФормой(ЭтаФорма);
		
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Запись.ПериодДействия", "ПериодДействияСтрокой");
	
	УправлениеФормой(ЭтаФорма); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ВидПоказателя = ПолучитьЗначениеРеквизита(Запись.Показатель, "ВидПоказателя");
	
	Если ВидПоказателя <> Неопределено Тогда
	
		Если ВидПоказателя = ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыПоказателейСхемМотивации.Индивидуальный")
			И НЕ ЗначениеЗаполнено(Запись.Сотрудник) Тогда
			ТекстСообщения = НСтр("ru='Индивидуальный показатель указывается только для конкретного работника!';uk='Індивідуальний показник вказується тільки для конкретного працівника!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.Сотрудник", , Отказ);				
		ИначеЕсли ВидПоказателя = ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыПоказателейСхемМотивации.ПоПодразделению")
			И НЕ ЗначениеЗаполнено(Запись.Подразделение) Тогда
			ТекстСообщения = НСтр("ru='Показатель ""Для подразделения"" указывается только для конкретного подразделения!';uk='Показник "" Для підрозділу "" вказується тільки для конкретного підрозділу!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Запись.Сотрудник", , Отказ);		
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокДоступныхВозможностейИзменнения = Новый СписокЗначений;
	СписокДоступныхВозможностейИзменнения.Добавить(ПредопределенноеЗначение("Перечисление.ИНАГРО_ИзменениеПоказателейСхемМотивации.ВводитсяПриРасчете"));
	СписокДоступныхВозможностейИзменнения.Добавить(ПредопределенноеЗначение("Перечисление.ИНАГРО_ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете"));
	СписокДоступныхВозможностейИзменнения.Добавить(ПредопределенноеЗначение("Перечисление.ИНАГРО_ИзменениеПоказателейСхемМотивации.НакапливаетсяПоОтдельнымЗначениям"));

	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ВозможностьИзменения", СписокДоступныхВозможностейИзменнения);
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор",         ПараметрыОтбора);
	ПараметрыФормы.Вставить("ТекущаяСтрока", Запись.Показатель);	
	
	ОткрытьФорму("Справочник.ИНАГРО_ПоказателиСхемМотивации.ФормаВыбора", ПараметрыФормы, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ПоказательПриИзменении(Элемент)
	
	Запись.Подразделение = ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка");
	Запись.Сотрудник     = ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка");
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#Область РедактированиеМесяцаСтрокой

&НаКлиенте
Процедура ПериодДействияПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Запись.ПериодДействия", "ПериодДействияСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодДействияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Запись.ПериодДействия", "ПериодДействияСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодДействияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Запись.ПериодДействия", "ПериодДействияСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодДействияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодДействияОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Запись   = Форма.Запись;
	
	ВидПоказателя = ПолучитьЗначениеРеквизита(Запись.Показатель, "ВидПоказателя");
	
	Если ВидПоказателя <> Неопределено Тогда	
		
		Элементы.Подразделение.ТолькоПросмотр = ВидПоказателя = ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыПоказателейСхемМотивации.Общий")
											ИЛИ ВидПоказателя = ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыПоказателейСхемМотивации.Индивидуальный");
		Элементы.Сотрудник.ТолькоПросмотр     = ВидПоказателя = ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыПоказателейСхемМотивации.Общий")
											ИЛИ ВидПоказателя = ПредопределенноеЗначение("Перечисление.ИНАГРО_ВидыПоказателейСхемМотивации.ПоПодразделению");
		
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизита(Ссылка, Реквизит)
	
	Возврат	ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, Реквизит);
	
КонецФункции

#КонецОбласти