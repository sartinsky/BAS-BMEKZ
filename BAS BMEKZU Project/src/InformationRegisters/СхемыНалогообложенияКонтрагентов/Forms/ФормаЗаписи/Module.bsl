////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СхемаНалогообложенияПриИзменении(Элемент)
	СхемаНалогообложенияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СхемаНалогообложенияПриИзмененииНаСервере()
	
	РеквизитыСхемыНалогообложения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Запись.СхемаНалогообложения, "НалогНаПрибыль, НДС, ЕдиныйНалог"); 
	Запись.ПлательщикНалогаНаПрибыль 	= РеквизитыСхемыНалогообложения.НалогНаПрибыль;
	Запись.ПлательщикНДС				= РеквизитыСхемыНалогообложения.НДС;
	Запись.ПлательщикЕдиногоНалога 		= РеквизитыСхемыНалогообложения.ЕдиныйНалог;

	УстановитьГруппуПлательщикаЕН();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	ЭтоЮрЛицо = ЭтоЮрЛицо(Форма.Запись.Контрагент);
	Форма.Элементы.ГруппаПлательщикаЕдиногоНалога.Видимость = Форма.Запись.ПлательщикЕдиногоНалога;
	УстановитьСписокГруппаПлательщикаЕдиногоНалога(Форма);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСписокГруппаПлательщикаЕдиногоНалога(Форма)
	
	Если НЕ Форма.Запись.ПлательщикЕдиногоНалога Тогда
	    Возврат;
	КонецЕсли;
	
	ДоступнаТретьяОсобаяГруппа = Форма.Запись.Период >= '20220401';
	
	ДоступныеЗначения = Форма.Элементы.ГруппаПлательщикаЕдиногоНалога.СписокВыбора;
	ДоступныеЗначения.Очистить();
	
	Если Форма.ЭтоЮрЛицо Тогда
		
		ДоступныеЗначения.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыПлательщиковЕдиногоНалога.ТретьяГруппа"));
		Если ДоступнаТретьяОсобаяГруппа Тогда
			ДоступныеЗначения.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыПлательщиковЕдиногоНалога.ТретьяГруппаОсобая"));
		КонецЕсли;
		
	Иначе
		
		ДоступныеЗначения.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыПлательщиковЕдиногоНалога.ПерваяГруппа"));
		ДоступныеЗначения.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыПлательщиковЕдиногоНалога.ВтораяГруппа"));
		ДоступныеЗначения.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыПлательщиковЕдиногоНалога.ТретьяГруппа"));
		Если ДоступнаТретьяОсобаяГруппа Тогда
			ДоступныеЗначения.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыПлательщиковЕдиногоНалога.ТретьяГруппаОсобая"));
		КонецЕсли;
		ДоступныеЗначения.Добавить(ПредопределенноеЗначение("Перечисление.ГруппыПлательщиковЕдиногоНалога.ЧетвертаяГруппа"));
		
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьСписокГруппаПлательщикаЕдиногоНалога()

&НаСервере
Процедура УстановитьГруппуПлательщикаЕН()
	
	Если Запись.ПлательщикЕдиногоНалога Тогда
		
		Запись.ГруппаПлательщикаЕдиногоНалога = Перечисления.ГруппыПлательщиковЕдиногоНалога.ТретьяГруппа;
		
	Иначе
		
		Если ЗначениеЗаполнено(Запись.ГруппаПлательщикаЕдиногоНалога) Тогда
			Запись.ГруппаПлательщикаЕдиногоНалога = Перечисления.ГруппыПлательщиковЕдиногоНалога.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоЮрлицо(Контрагент)
	Возврат Контрагент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
КонецФункции