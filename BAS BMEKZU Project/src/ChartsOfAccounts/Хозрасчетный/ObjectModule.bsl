#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Предопределенный 
		И Родитель <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Родитель") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Нельзя изменять подчиненность предопределенных счетов!';uk='Не можна змінювати підпорядкованість напередвизначених рахунків!'"), ЭтотОбъект, "Родитель", , Отказ);
	КонецЕсли;
	
	Порядок = СокрЛП(ПолучитьПорядокКода());
	Если Забалансовый Тогда
		Порядок = "Заб" + Порядок;
	КонецЕсли;

КонецПроцедуры


Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	СчетаРасчетов = Новый СписокЗначений;
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоВыданнымАвансам);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСДругимиДебиторами);
	
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным);
	СчетаРасчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСДругимиКредиторами);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка"          , Ссылка);
	Запрос.УстановитьПараметр("СчетаРасчетов"   , СчетаРасчетов);
	Запрос.УстановитьПараметр("СписокИсключений", ПланыСчетов.Хозрасчетный.ПолучитьСчетаИсключения());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйВидыСубконто.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|ГДЕ
	|	ХозрасчетныйВидыСубконто.Ссылка = &Ссылка
	|	И ХозрасчетныйВидыСубконто.Ссылка В ИЕРАРХИИ(&СчетаРасчетов)
	|	И (НЕ ХозрасчетныйВидыСубконто.Ссылка В ИЕРАРХИИ (&СписокИсключений))
	|	И ХозрасчетныйВидыСубконто.Ссылка <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоГарантийномуОбеспечению)
	|	И ХозрасчетныйВидыСубконто.Ссылка <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями)
	|	И ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)";
	
	ЭтоСчетРасчетов = НЕ Запрос.Выполнить().Пустой();
	
	Если ЭтоСчетРасчетов Тогда
		Если ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) = Неопределено Тогда
			ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Список", "Корректность",,, НСтр("ru='Виды субконто';uk='Види субконто'"),
				НСтр("ru='На счетах расчетов с контрагентами обязательно наличие субконто ""Документы расчетов с контрагентами"".';uk='На рахунках розрахунків з контрагентами обов''язково наявність субконто ""Документи розрахунків з контрагентами"".'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВидыСубконто", "Объект", Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли