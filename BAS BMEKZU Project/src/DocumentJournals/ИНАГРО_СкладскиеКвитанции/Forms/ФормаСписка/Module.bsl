#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаКоманды;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 		
			
	ОбщегоНазначенияБПВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтотОбъект);
	
	ДокументСсылка = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанция");

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Тип", ДокументСсылка, ВидСравненияКомпоновкиДанных.Равно);
	
	УправлениеФормой(ЭтаФорма);
	
	АдресХранилищаНастройкиДинСпискаДляРеестра = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		ОбщегоНазначенияБПКлиент.ИзменитьОтборПоОсновнойОрганизации(Список, ,Параметр);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);

КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	
	Если ДокументСсылка = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанция") Тогда
		Документ = "ИНАГРО_СкладскаяКвитанция";
	ИначеЕсли ДокументСсылка = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанцияДвойная") Тогда
		Документ = "ИНАГРО_СкладскаяКвитанцияДвойная";
	ИначеЕсли ДокументСсылка = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанцияПростая") Тогда
		Документ = "ИНАГРО_СкладскаяКвитанцияПростая";
	КонецЕсли;

	СтруктураПараметров = ПолучитьСтруктуруПараметровФормы();
	ОткрытьФорму("Документ." + Документ + ".Форма.ФормаДокумента", СтруктураПараметров, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СкладскаяКвитанция(Команда)
	
	ДокументСсылка = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанция");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Тип", ДокументСсылка, ВидСравненияКомпоновкиДанных.Равно);
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СкладскаяКвитанцияДвойная(Команда)
	
	ДокументСсылка = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанцияДвойная");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Тип", ДокументСсылка, ВидСравненияКомпоновкиДанных.Равно);
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СкладскаяКвитанцияПростая(Команда)
	
	ДокументСсылка = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанцияПростая");	
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Тип", ДокументСсылка, ВидСравненияКомпоновкиДанных.Равно);
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ЭкспортДанныхВРеестрСкладскихДокументов(Команда)
	
	ПараметрыФормы = Новый Структура;
			
	ОткрытьФорму("Обработка.ИНАГРО_ЭкспортДанныхВРеестрСкладскихДокументов.Форма.Форма", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор(), , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ГруппаДокументы.Заголовок = УстановитьЗаголовок(Форма);
	
	Элементы.СкладскаяКвитанция.Доступность        = НЕ Форма.ДокументСсылка = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанция");
	Элементы.СкладскаяКвитанцияДвойная.Доступность = НЕ Форма.ДокументСсылка = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанцияДвойная");
	Элементы.СкладскаяКвитанцияПростая.Доступность = НЕ Форма.ДокументСсылка = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанцияПростая");
			
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция УстановитьЗаголовок(Форма)	
	
	Если Форма.ДокументСсылка      = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанция") Тогда
		ТекстЗаголовка = НСтр("ru='Складские квитанции';uk='Складські квитанції'");
	ИначеЕсли Форма.ДокументСсылка = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанцияДвойная") Тогда
		ТекстЗаголовка = НСтр("ru='Складские квитанции (двойные)';uk='Складські квитанції (подвійні)'");
	ИначеЕсли Форма.ДокументСсылка = Тип("ДокументСсылка.ИНАГРО_СкладскаяКвитанцияПростая") Тогда
		ТекстЗаголовка = НСтр("ru='Складские квитанции (простые)';uk='Складські квитанції (прості)'");
	КонецЕсли;
	
	Возврат ТекстЗаголовка;

КонецФункции

&НаКлиенте
Функция ПолучитьСтруктуруПараметровФормы(ВидОперации = Неопределено)

	СтруктураПараметров = Новый Структура;
	
	ЗначенияЗаполнения = ОбщегоНазначенияБПВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	//Если ЗначениеЗаполнено(ВидОперации) Тогда
	//	ЗначенияЗаполнения.Вставить("ВидОперации", ВидОперации);
	//КонецЕсли;
	
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаСервере
Процедура НастройкиДинамическогоСписка()
	
	Отчеты.РеестрДокументов.НастройкиДинамическогоСписка(ЭтотОбъект);
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	ОбщегоНазначенияБП.ВосстановитьОтборСписка(Список, Настройки, "Организация");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	Если Команда.Имя = "ПодменюПечатьОбычное_Реестр" Тогда
		НастройкиДинамическогоСписка();
	КонецЕсли;
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти