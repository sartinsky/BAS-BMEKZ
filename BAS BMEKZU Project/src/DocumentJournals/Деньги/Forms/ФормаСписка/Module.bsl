#Область ПеременныеФормы


#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МожноРедактироватьБанк = ПравоДоступа("Редактирование", Метаданные.Документы.СписаниеСРасчетногоСчета)
		И ПравоДоступа("Редактирование", Метаданные.Документы.ПоступлениеНаРасчетныйСчет);
	МожноРедактироватьКассу = ПравоДоступа("Редактирование", Метаданные.Документы.РасходныйКассовыйОрдер)
		И ПравоДоступа("Редактирование", Метаданные.Документы.ПриходныйКассовыйОрдер);
	
	Элементы.ЗагрузитьИзКлиентБанк.Видимость = МожноРедактироватьБанк;
	
	Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = МожноРедактироватьКассу И МожноРедактироватьБанк;
	Элементы.Список.ИзменятьСоставСтрок = МожноРедактироватьБанк И МожноРедактироватьКассу;
	
	ДанныеИтогов(ЭтотОбъект);
	
	УстановитьУсловноеОформление();
	
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если ЗначениеЗаполнено(ОтборыПриОткрытии) Тогда
		
		Если ОтборыПриОткрытии.Свойство("Организация") И ЗначениеЗаполнено(ОтборыПриОткрытии.Организация) Тогда
			ОтборОрганизация = ОтборыПриОткрытии.Организация;
			ОтборОрганизацияИспользование = ЗначениеЗаполнено(ОтборОрганизация);
		КонецЕсли;
	Иначе
		Если ОтборОрганизация <> ОсновнаяОрганизация Тогда
			ОтборОрганизация = ОсновнаяОрганизация;
			ОтборОрганизацияИспользование = ЗначениеЗаполнено(ОтборОрганизация);
		ИначеЕсли НЕ ОтборОрганизацияИспользование Тогда
			ОтборОрганизацияИспользование = ЗначениеЗаполнено(ОтборОрганизация);
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВосстановленныеОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		ОсновнаяОрганизация = Параметр;
		Если ОсновнаяОрганизация <> ОтборОрганизация Тогда
			ОтборОрганизация                 = ОсновнаяОрганизация;
			ОтборОрганизацияИспользование    = ЗначениеЗаполнено(ОтборОрганизация);
			
			УстановитьВосстановленныеОтборы();
		КонецЕсли;
		
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьИтогиОбработчик", 0.2, Истина);
		
	ИначеЕсли ИмяСобытия = "ИзменениеВыписки" Тогда
		
		
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьИтогиОбработчик", 0.1, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьПоступлениеНаРасчетныйСчет(Команда)
	
	СтруктураОтбора = ОбщегоНазначенияБПВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	
	ОткрытьФорму("Документ.ПоступлениеНаРасчетныйСчет.ФормаОбъекта",
		Новый Структура("ЗначенияЗаполнения", СтруктураОтбора), ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСписаниеСРасчетногоСчета(Команда)
	
	СтруктураОтбора = ОбщегоНазначенияБПВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	ОткрытьФорму("Документ.СписаниеСРасчетногоСчета.ФормаОбъекта",
		Новый Структура("ЗначенияЗаполнения", СтруктураОтбора), ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПриходныйКассовыйОрдер(Команда)
	
	СтруктураОтбора = ОбщегоНазначенияБПВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	ОткрытьФорму("Документ.ПриходныйКассовыйОрдер.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", СтруктураОтбора), ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРасходныйКассовыйОрдер(Команда)
	
	СтруктураОтбора = ОбщегоНазначенияБПВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	ОткрытьФорму("Документ.РасходныйКассовыйОрдер.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", СтруктураОтбора), ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзКлиентБанк(Команда)
	
	ОткрытьФормуКлиентБанка();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетАнализДвиженийДенежныхСредств(Команда)
	
	ОткрытьФормуОтчета("АнализДвиженийДенежныхСредств");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОстаткиДенежныхСредств(Команда)
	
	ОткрытьФормуОтчета("ОстаткиДенежныхСредств");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоступленияДенежныхСредств(Команда)
	
	ОткрытьФормуОтчета("ПоступленияДенежныхСредств");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетРасходыДенежныхСредств(Команда)
	
	ОткрытьФормуОтчета("РасходыДенежныхСредств");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетДоходыИРасходы(Команда)
	
	ОткрытьФормуОтчета("ДоходыРасходы");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОборотныеСредства(Команда)

	ОткрытьФормуОтчета("ОборотныеСредства");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПродажиПоМесяцам(Команда)
	
	ОткрытьФормуОтчета("ПродажиПоМесяцам");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОтборОрганизацияПриИзмененииСервер();
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьИтогиОбработчик", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияИспользованиеПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Организация");
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьИтогиОбработчик", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	
	Оповестить("ИзменениеВыписки");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Отборы

&НаСервере
Процедура ЗаполнитьОтборПриОткрытииИзПараметров(Отбор)
	
	// Нужно переложить отборы из параметров в отдельную структуру,
	// которую потом будем использовать в ПриЗагрузкеДанныхИзНастроекНаСервере
	// Так как мы устанавливаем отбор самостоятельно, то нужно очистить те поля
	// структуры "Параметры.Отбор", для которых установлен отбор из кода.
	// Если не очистить поля - то будет вызвана ошибка пересечения отборов.
	
	ОтборыПриОткрытии = Новый Структура;
	
	Если Отбор.Свойство("Организация")
		И ЗначениеЗаполнено(Отбор.Организация) Тогда
		
		ОтборыПриОткрытии.Вставить("Организация", Отбор.Организация);
		Отбор.Удалить("Организация");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаВыписки

&НаКлиенте
Процедура ОткрытьФормуКлиентБанка(ПараметрыФормы = Неопределено) Экспорт
	
	Если ПараметрыФормы = Неопределено Тогда
		ПараметрыФормы = Новый Структура;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("РежимПоУмолчанию", "ГруппаЗагрузка");
	Если ОтборОрганизацияИспользование И ЗначениеЗаполнено(ОтборОрганизация) Тогда
		ПараметрыФормы.Вставить("Организация", ОтборОрганизация);
	КонецЕсли;
	
	ОткрытьФорму("Обработка.КлиентБанк.Форма.Форма", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеОбработчики

&НаКлиенте
Процедура Подключаемый_ОбновитьИтогиОбработчик()
	
	ДанныеИтогов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеФормой

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Организация
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Организация");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ОтборОрганизацияИспользование", ВидСравненияКомпоновкиДанных.Равно, Истина);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ОтборОрганизация", ВидСравненияКомпоновкиДанных.Заполнено);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДанныеИтогов(Форма)
	
	ТекОрганизация = ?(Форма.ОтборОрганизацияИспользование, Форма.ОтборОрганизация, Неопределено);
	
	СтруктураИтогов = ПолучитьИтоги(ТекОрганизация);
	
	Форма.ИтогДата  = СтруктураИтогов.ИтогДата;
	Форма.ИтогБанк  = СтруктураИтогов.ИтогБанк;
	Форма.ИтогКасса = СтруктураИтогов.ИтогКасса;
	Форма.ИтогВсего = СтруктураИтогов.ИтогВсего;
	
КонецПроцедуры

&НаСервереБезКонтекста
// Возвращает текущие остатки по кассе и банку
//
Функция ПолучитьИтоги(Знач ТекОрганизация)
	
	ИтогДата = КонецДня(ТекущаяДатаСеанса());
	СтруктураРезультат = Новый Структура("ИтогДата, ИтогБанк, ИтогКасса, ИтогВсего", ИтогДата, 0, 0, 0);
	
	СписокДоступныхОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсеОрганизацииДанныеКоторыхДоступныПоRLS(Ложь);
	// Если нет доступных организаций, то Итоги не вычисляем
	Если СписокДоступныхОрганизаций.Количество() = 0 Тогда
		Возврат СтруктураРезультат;
	ИначеЕсли ЗначениеЗаполнено(ТекОрганизация) Тогда
		// Если организация не числится в списке доступных, то Итоги не вычисляем
		Если СписокДоступныхОрганизаций.Найти(ТекОрганизация) = Неопределено Тогда
			Возврат СтруктураРезультат;
		КонецЕсли;
	КонецЕсли;
	
	СчетаУчетаНаличныхДС = Новый Массив;
	СчетаУчетаНаличныхДС.Добавить(ПланыСчетов.Хозрасчетный.Касса);
	СчетаУчетаНаличныхДС.Добавить(ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте);
	СчетаУчетаНаличныхДС.Добавить(ПланыСчетов.Хозрасчетный.КассаВИностраннойВалюте);
	
	СчетаУчетаБезналичныхДС = Новый Массив;
	СчетаУчетаБезналичныхДС.Добавить(ПланыСчетов.Хозрасчетный.СчетаВБанках);
	СчетаУчетаБезналичныхДС.Добавить(ПланыСчетов.Хозрасчетный.ТекущиеСчетаВНациональнойВалюте);
	СчетаУчетаБезналичныхДС.Добавить(ПланыСчетов.Хозрасчетный.ТекущиеСчетаВИностраннойВалюте);
	СчетаУчетаБезналичныхДС.Добавить(ПланыСчетов.Хозрасчетный.ДругиеСчетаВБанкеВНациональнойВалюте);
	СчетаУчетаБезналичныхДС.Добавить(ПланыСчетов.Хозрасчетный.ДругиеСчетаВБанкеВИностраннойВалюте);
	СчетаУчетаБезналичныхДС.Добавить(ПланыСчетов.Хозрасчетный.СпециальныеСчетаВНациональнойВалюте);
	СчетаУчетаБезналичныхДС.Добавить(ПланыСчетов.Хозрасчетный.СпециальныеСчетаВИностраннойВалюте);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаИтогов", Новый Граница(ИтогДата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ТекОрганизация);
	Запрос.УстановитьПараметр("СчетаУчетаНаличныхДС", СчетаУчетаНаличныхДС);
	Запрос.УстановитьПараметр("СчетаУчетаБезналичныхДС", СчетаУчетаБезналичныхДС);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОстатокПоКассе.ВалютнаяСуммаОстаток <> 0
	|			ТОГДА ОстатокПоКассе.ВалютнаяСуммаОстаток
	|		ИНАЧЕ ОстатокПоКассе.СуммаОстаток
	|	КОНЕЦ КАК ИтогКасса
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаИтогов, Счет В (&СчетаУчетаНаличныхДС), , %ОтборПоОрганизации%) КАК ОстатокПоКассе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОстатокПоБанку.ВалютнаяСуммаОстаток <> 0
	|			ТОГДА ОстатокПоБанку.ВалютнаяСуммаОстаток
	|		ИНАЧЕ ОстатокПоБанку.СуммаОстаток
	|	КОНЕЦ КАК ИтогБанк
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаИтогов, Счет В (&СчетаУчетаБезналичныхДС), , %ОтборПоОрганизации%) КАК ОстатокПоБанку";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоОрганизации%",
		?(ЗначениеЗаполнено(ТекОрганизация), "Организация = &Организация", ""));
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// Касса
	Если НЕ РезультатЗапроса[0].Пустой() Тогда
		Выборка = РезультатЗапроса[0].Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, Выборка);
	КонецЕсли;
	
	// Банк
	Если НЕ РезультатЗапроса[1].Пустой() Тогда
		Выборка = РезультатЗапроса[1].Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, Выборка);
	КонецЕсли;
	
	СтруктураРезультат.ИтогВсего = СтруктураРезультат.ИтогКасса + СтруктураРезультат.ИтогБанк;
	СтруктураРезультат.ИтогДата = ИтогДата;
	
	Возврат СтруктураРезультат;
	
КонецФункции

&НаСервере
Процедура УстановитьВосстановленныеОтборы()
	
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Организация");
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ОтборОрганизацияПриИзмененииСервер()

	ОтборОрганизацияИспользование = ЗначениеЗаполнено(ОтборОрганизация);
	
	УстановитьВосстановленныеОтборы();
	
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОтчета(ИмяОтчета)

	ФормаОтчета = ПолучитьФорму("Отчет." + ИмяОтчета + ".ФормаОбъекта",, ЭтотОбъект);
	
	ФормаОтчета.ПодключитьОбработчикОжидания("Подключаемый_СформироватьПриОткрытии",
		0.1,
		Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(ФормаОтчета.Элементы.Результат,
		"ФормированиеОтчета");
	ФормаОтчета.Открыть();

КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрОрганизацияФункциональныхОпцийФормы(ЭтотОбъект, ОтборОрганизация);
	
КонецПроцедуры

#КонецОбласти

