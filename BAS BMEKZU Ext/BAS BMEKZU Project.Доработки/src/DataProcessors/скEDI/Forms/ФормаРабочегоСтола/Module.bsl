
&НаСервере
Процедура СМС_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	ПодготовитьИРазместитьНетиповыеЭлементыНаФорме();
КонецПроцедуры

//added by Al
&НаСервере
Процедура ПодготовитьИРазместитьНетиповыеЭлементыНаФорме()
	                                                                         
	//создаем команды и их кнопки
	СМС_ДФИ_КлиентСервер.СоздатьКоманду(ЭтаФорма, "ОтправитьПоПочте", 
						НСтр("ru = 'Отправить документ по почте'; uk = 'Відправити документ поштою'"), 
						"ОтправитьПоПочте");
	СтруктураПараметровЭлемента = Новый Структура("Отображение, Картинка", ОтображениеКнопки.Картинка, БиблиотекаКартинок.скEDI_ЭлПисьмо);	
	СМС_ДФИ_КлиентСервер.СздКнопка(ЭтаФорма,"СписокДокументовОтправитьПоПочте",
								   Элементы.СписокДокументов.КоманднаяПанель, НСтр("ru = 'Отправить документ по почте'; uk = 'Відправити документ поштою'"),
								   "ОтправитьПоПочте",1, СтруктураПараметровЭлемента);
	
КонецПроцедуры
 
&НаКлиенте
Процедура ОтправитьПоПочте(Команда)
	//TODO: проверить работу на базах, где электронные доркументы есть - сейчас в виду хранения ЭДО в отдельных базах SQL - не выходит
	Для Каждого лВыделенаяСтрока Из Элементы.СписокДокументов.ВыделенныеСтроки Цикл
		
		лДанныеВыделенойСтроки = Элементы.СписокДокументов.ДанныеСтроки(лВыделенаяСтрока);
		Если ЗначениеЗаполнено(лДанныеВыделенойСтроки.ЭлектронныйДокумент) Тогда
			
			Префикс = НСтр("ru = 'ЭДО'; uk = 'ЕДО'");
			ТабДокумент = СформироватьДанныеЭлектронногоДокументаПоЭлектронномуДокументу(лДанныеВыделенойСтроки.ЭлектронныйДокумент);
			ТемаСообщения = Префикс + " " + лДанныеВыделенойСтроки.ВидЭлектронногоДокумента + " " + лДанныеВыделенойСтроки.Контрагент+ " " + лДанныеВыделенойСтроки.ЕДРПОУКонтрагента + " №" + лДанныеВыделенойСтроки.ЭлектронныйДокументНомерДокумента + " от " + лДанныеВыделенойСтроки.Дата;
			ИмяФайлаВложения = Префикс + "_" + лДанныеВыделенойСтроки.ВидЭлектронногоДокумента + "_" + лДанныеВыделенойСтроки.Контрагент+ "_" + лДанныеВыделенойСтроки.ЕДРПОУКонтрагента + "_№" + лДанныеВыделенойСтроки.ЭлектронныйДокументНомерДокумента + "_от_" + Формат(лДанныеВыделенойСтроки.Дата,"ДФ=ddMMyyyy");
			
			Вложение = Новый Структура;
			Вложение.Вставить("АдресВоВременномХранилище", ПоместитьВоВременноеХранилище(ТабДокумент, УникальныйИдентификатор));
			Вложение.Вставить("Представление", ИмяФайлаВложения);
			
			СписокВложений = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Вложение);
			
			Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
				МодульРаботаСПочтовымиСообщениямиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСПочтовымиСообщениямиКлиент");
				ПараметрыОтправки = МодульРаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма();
				ПараметрыОтправки.Тема = ТемаСообщения;
				ПараметрыОтправки.Вложения = СписокВложений;
				ПараметрыОтправки.УдалятьФайлыПослеОтправки = Истина;
				МодульРаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо(ПараметрыОтправки);
			КонецЕсли;
			
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция СформироватьДанныеЭлектронногоДокументаПоЭлектронномуДокументу(ЭлектронныйДокумент)
	
	ВерсияСодержанияЭлектронногоДокумента = Неопределено;
	мПредставлениеЭлектронногоДокументаPDF = Неопределено;
	мПредставлениеЭлектронногоДокументаXML = Неопределено;
	//мПараметрыДляСозданияЭлектронногоДокумента = Неопределено;
	
	Возврат ПолучитьДанныеЭлектронногоДокументаПоЭлектронномуДокументуНаСервере(ЭлектронныйДокумент, мПредставлениеЭлектронногоДокументаPDF, мПредставлениеЭлектронногоДокументаXML, ВерсияСодержанияЭлектронногоДокумента);
	
КонецФункции

&НаСервере
Функция ПолучитьДанныеЭлектронногоДокументаПоЭлектронномуДокументуНаСервере(ЭлектронныйДокумент, пПредставлениеЭлектронногоДокументаPDF, пПредставлениеЭлектронногоДокументаXML, пВерсия)
	
	пПредставлениеЭлектронногоДокументаPDF = Неопределено;
	пПредставлениеЭлектронногоДокументаXML = Неопределено;
	пОтображениеМассивКартинок = Неопределено;
	пОтображениеМассивРазмеровКартинок = Неопределено;
	пВерсия = Неопределено;
	
	ИмяФайлаСДО = ЭлектронныйДокумент.ИмяФайла;
	ТекОшибка = "";
	СодержаниеЭлектронногоДокумента = скEDI_ОбщегоНазначения.ПолучитьПоследнееСодержаниеЭлектронногоДокумента(ЭлектронныйДокумент, , , , ТекОшибка);
	Если СодержаниеЭлектронногоДокумента = Неопределено Тогда
		ОтображатьОшибку = Истина;
		ОшибкаОтображения = ТекОшибка;
	Иначе
		ОтображатьОшибку = Ложь;
		ОшибкаОтображения = "";;
		
		пПредставлениеЭлектронногоДокументаPDF = СодержаниеЭлектронногоДокумента.ИзображениеДокумента;
		пПредставлениеЭлектронногоДокументаXML = СодержаниеЭлектронногоДокумента.ТелоДокумента;
		пВерсия = СодержаниеЭлектронногоДокумента.Дата;
		Если ЗначениеЗаполнено(СодержаниеЭлектронногоДокумента.ИмяФайла) Тогда
			ИмяФайлаСДО = СодержаниеЭлектронногоДокумента.ИмяФайла
		КонецЕсли;
		
		ТекстОшибки = "";
		скEDI_ОбщегоНазначения.ПолучитьСодержимоеПоЭлектронномуДокументу(ЭлектронныйДокумент.Организация, ЭлектронныйДокумент, пПредставлениеЭлектронногоДокументаXML, Ложь, Истина, пПредставлениеЭлектронногоДокументаPDF, пОтображениеМассивКартинок, пОтображениеМассивРазмеровКартинок, ТекстОшибки);
		
		ПечатнаяФормаЭлектронногоДокумента = Новый ТабличныйДокумент;
		ПечатнаяФормаЭлектронногоДокумента.ПолеСверху = 0;
		ПечатнаяФормаЭлектронногоДокумента.ПолеСлева = 0;
		ПечатнаяФормаЭлектронногоДокумента.ПолеСнизу = 0;
		ПечатнаяФормаЭлектронногоДокумента.ПолеСправа = 0;
		ВывестиМассивКартинокPtnDrawНаПечатнуюФорму(пОтображениеМассивКартинок, пОтображениеМассивРазмеровКартинок, ПечатнаяФормаЭлектронногоДокумента);
		
		Возврат ПечатнаяФормаЭлектронногоДокумента;
		
	КонецЕсли;
	
КонецФункции

&НаСерверебезКонтекста
Процедура ВывестиМассивКартинокPtnDrawНаПечатнуюФорму(МассивКартинокPtn, МассивРазмеровКартинок, ПечатнаяФорма)
	Если ТипЗнч(МассивКартинокPtn) = Тип("Массив") Тогда
		СтрНачало = 1;
		ВысотаСтраницы = 67;
		ЭтоПерваяСтраница = Истина;
		НомерЭлементаМассива = 0;
		Для Каждого СтрокаBase64_ДополненаФаксимиле Из МассивКартинокPtn Цикл
			Картинка = Новый Картинка(Base64Значение(СтрокаBase64_ДополненаФаксимиле));
			Попытка
				ВысотаДюйм = Картинка.Высота()/Картинка.ПлотностьПоВертикали();
				ШиринаДюйм = Картинка.Ширина()/Картинка.ПлотностьПоГоризонтали();
				
				ВысотаСтраницы = Цел(ВысотаДюйм * 68/11 + 0.99);
				ШиринаСтраницы = Цел(ШиринаДюйм * 12/8.5 + 0.99);
			Исключение
				Если ТипЗнч(МассивРазмеровКартинок) = Тип("Массив") Тогда
					ЭлементМассиваРазмеровКартинок = МассивРазмеровКартинок.Получить(НомерЭлементаМассива);
					ВысотаДюйм = ЭлементМассиваРазмеровКартинок.Высота/192;
					ШиринаДюйм = ЭлементМассиваРазмеровКартинок.Ширина/192;
					
					ВысотаСтраницы = Цел(ВысотаДюйм * 68/11 + 0.99);
					ШиринаСтраницы = Цел(ШиринаДюйм * 12/8.5 + 0.99);
				Иначе
					ВысотаСтраницы = 68;
					ШиринаСтраницы = 12;
				КонецЕсли;
			КонецПопытки;
			
			Рисунок = ПечатнаяФорма.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
			Рисунок.РазмерКартинки = РазмерКартинки.АвтоРазмер;
			Рисунок.Картинка = Картинка;
			Рисунок.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
			
			Если ЭтоПерваяСтраница Тогда
				ЭтоПерваяСтраница = Ложь;
			Иначе
				ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			СтрОкончание = СтрНачало + ВысотаСтраницы - 1;
			Рисунок.Расположить(ПечатнаяФорма.Область("R" + Формат(СтрНачало, "ЧГ=0") + "C1:R" + Формат(СтрОкончание, "ЧГ=0") + "C" + Формат(ШиринаСтраницы, "ЧГ=0")));
			СтрНачало = СтрОкончание + 1;
			НомерЭлементаМассива = НомерЭлементаМассива + 1;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
//added by Al